{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{toast}from'react-toastify';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Nav,FormGroup,FormLabel,Card,Modal,Image,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt,faCheckCircle,faCopy,faEye,faPlay,faPlus,faSync}from'@fortawesome/free-solid-svg-icons';import reject from\"../../assets/image/reject.svg\";import elnimage from\"../../assets/image/sheet-view.svg\";import{callService,crudMaster,updateStore,getTestInstrumentComboService,getTestInstrumentCategory,getProductBasedInstrument,getInstrumentForInstCategory,getBatchCreationDetails,onActionFilterSubmit,getProductcategoryAction,createBatchmasterAction,getSamplesForGrid,getSelectedBatchCreationDetail,createSampleAction,deleteSampleAction,getActiveBatchCreationService,updateBatchcreationAction,deleteBatchCreation,batchInitiateAction,getBCRegistrationSubType,batchCompleteAction,validateEsignCredential,filterColumnData,getBatchhistoryAction,getBatchSection,viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType,getTreeByMaterial,getNewRegSpecification,cancelIQCSampleAction,batchCancelAction,batchInitiateDatePopup,batchCompleteDatePopup,getInstrumentID,getBatchViewResultAction//,batchTAT\n}from'../../actions';import{transactionStatus,designProperties,reportTypeEnum,reportCOAType,RegistrationSubType}from'../../components/Enumeration';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{showEsign,getControlMap,getStartOfDay,getEndOfDay,formatInputDate,constructOptionList,rearrangeDateFormat,convertDateValuetoString,CF_encryptionData}from'../../components/CommonScript';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{ReadOnlyText,ContentPanel,MediaLabel}from'../../components/App.styles';import{ListWrapper}from'../../components/client-group.styles';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import Esign from'../audittrail/Esign';import{ProductList}from'../product/product.styled';import CustomPopover from'../../components/customPopover';import BatchCreationFilter from'./BatchCreationFilter';import AddBatchCreation from'./AddBatchCreation';import AddBatchinitiate from'./AddBatchinitiate';import CustomTab from'../../components/custom-tabs/custom-tabs.component';import SampleTab from'./SampleTab';import BatchhistoryTab from'./BatchhistoryTab';import{process}from'@progress/kendo-data-query';import AddSample from'./AddSample';import ListMaster from'../../components/list-master/list-master.component';import ViewInfo from'./ViewInfo';import{Affix}from'rsuite';import AddMaterialIqc from'./AddMaterialIqc';import BatchIqcSampleTab from'./BatchIqcSampleTab';import BatchResultTab from'./BatchResultTab';import PortalModal from'../../PortalModal';import Iframe from'react-iframe';import ReactTooltip from'react-tooltip';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var BatchCreation=/*#__PURE__*/function(_React$Component){_inherits(BatchCreation,_React$Component);var _super=_createSuper(BatchCreation);function BatchCreation(props){var _this;_classCallCheck(this,BatchCreation);_this=_super.call(this,props);_this.sidebarExpandCollapse=function(){_this.setState({sidebarview:true});};_this.completeMandatoryFields=[{\"idsName\":\"IDS_BATCHCOMPLETEDATE\",//\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \n\"dataField\":\"dtransactiondate\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];_this.initiateMandatoryFields=[{\"idsName\":\"IDS_BATCHINITIATEDATE\",//\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \n\"dataField\":\"dtransactiondate\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];_this.materialIqcMandatory=[{\"idsName\":\"IDS_MATERIALTYPE\",\"dataField\":\"smaterialtypename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALCATEGORY\",\"dataField\":\"smaterialcatname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIAL\",\"dataField\":\"smaterialname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALINVENTORY\",\"dataField\":\"sinventoryid\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},//{ \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequatity\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\n{\"idsName\":\"IDS_USEDQTY\",\"dataField\":\"susedquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];_this.getSamples=function(selectedbatchmaster){var addSampleID=_this.state.controlMap.has(\"AddSamples\")&&_this.state.controlMap.get(\"AddSamples\").ncontrolcode;if(selectedbatchmaster.ntransactionstatus==transactionStatus.INITIATED||selectedbatchmaster.ntransactionstatus==transactionStatus.COMPLETED||selectedbatchmaster.ntransactionstatus==transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else{_this.props.getSamplesForGrid(_this.props.Login.masterData.SelectedBatchmaster.ntestcode,_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this.props.Login.userInfo,_this.props.Login.masterData,_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,addSampleID);}};_this.getIqcSamples=function(SelectedBatchmaster){if(SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED||SelectedBatchmaster.ntransactionstatus===transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLETOADDIQC\"}));}else{var addcontrolcode=_this.state.controlMap.has(\"AddBatchCreation\")&&_this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;var inputData={};inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;// inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\n// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData['naddcontrolCode']=addcontrolcode;// inputData['section']={\n//         nsectioncode: SelectedBatchmaster.nsectioncode\n// };\ninputData['nsectioncode']=SelectedBatchmaster.nsectioncode;inputData['userInfo']=_this.props.Login.userInfo;inputData['nbatchmastercode']=SelectedBatchmaster.nbatchmastercode;inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;_this.props.getIqcSamples(inputData,_this.props.Login.masterData);}};_this.deleteRecord=function(inputData){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:inputData.selectedRecord.nbatchsampleCode,fetchUrl:\"batchcreation/getSampleTabDetails\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var jsondata=inputData.selectedRecord;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Sample\",postParam:postParam,inputData:{Sample:{\"sarno\":inputData.selectedRecord.sarno,\"ssamplearno\":inputData.selectedRecord.ssamplearno,\"stestname\":inputData.selectedRecord.stestname,\"nbatchsamplecode\":inputData.selectedRecord.nbatchsamplecode},\"userInfo\":_this.props.Login.userInfo,nbatchsamplecode:inputData.selectedRecord.nbatchsamplecode,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{\"samples\":[]}),nbatchmastercode:inputData.selectedRecord.nbatchmastercode,userinfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode,//nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\n//nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\nnregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA},operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:inputData.operation}};_this.props.updateStore(updateInfo);}else{_this.props.deleteSampleAction(inputParam.inputData);}}};_this.cancelRecord=function(inputData){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:inputData.nbatchsampleiqccode,fetchUrl:\"batchcreation/getBatchIqcSampleAction\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={classUrl:\"batchcreation\",methodUrl:\"IQCSample\",postParam:postParam,inputData:{iqcSample:inputData.selectedRecord,nbatchsampleiqccode:inputData.selectedRecord.nbatchsampleiqccode,masterData:_this.props.Login.masterData,nbatchmastercode:inputData.selectedRecord.nbatchmastercode,nmaterialinventtranscode:inputData.selectedRecord.nmaterialinventtranscode,userinfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode,//nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\n//nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\nnregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,nsampletypecode:_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA},operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:inputData.operation}};_this.props.updateStore(updateInfo);}else{_this.props.cancelIQCSampleAction(inputParam.inputData);}}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;if(screenName==\"IDS_BATCHHISTORY\"){var inputData={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchhistoryAction(inputData,true);}else if(screenName==\"IDS_BATCHIQCSAMPLE\"){var _inputData={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchIqcSampleAction(_inputData,true);}else if(screenName==\"IDS_RESULTS\"){var _inputData2={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchViewResultAction(_inputData2,true);}else{var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName,batchactiveKey:screenName}};_this.props.updateStore(updateInfo);}};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Samples,event.dataState),sampleState:event.dataState});};_this.dataStateBatchHistoryChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Batchhistory,event.dataState),histortState:event.dataState});};_this.dataStateBatchIqcChangeChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.iqcsample,event.dataState),iqcsampleState:event.dataState});};_this.dataStateViewChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Resultview,event.dataState),viewstate:event.dataState});};_this.getApprovalVersion=function(data){var inputData=[];var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={needFilterSubmit:\"false\",nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromDate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:data.item.nregtypecode,userInfo:_this.props.Login.userInfo,nregsubtypecode:data.item.nregsubtypecode,masterData:_this.props.Login.masterData,isneedapprovalfilter:true,defaultRegistrationSubType:data.item,isneedrealFilterStatus:\"false\",realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCApprovalConfigVersion(inputData);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_SAMPLE\",/*#__PURE__*/React.createElement(SampleTab,{sample:_this.props.Login.masterData.Samples||[],dataResult:process(_this.props.Login.masterData.Samples||[],_this.state.sampleState),dataState:_this.state.sampleState,controlMap:_this.state.controlMap,dataStateChange:_this.dataStateChange,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,deleteRecord:_this.deleteRecord,extractedColumnList:_this.gridfillingColumn(_this.state.DynamicGridItem)||[],detailedFieldList:_this.gridfillingColumn(_this.state.DynamicGridMoreItem)||[],methodUrl:\"Samples\",getSamples:function getSamples(){return _this.getSamples(_this.props.Login.masterData.SelectedBatchmaster);}// getSamples={() => this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\n//     this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value)}\n//inputParam={this.props.Login.inputParam}\n,screenName:\"IDS_SAMPLE\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));tabMap.set(\"IDS_BATCHIQCSAMPLE\",/*#__PURE__*/React.createElement(BatchIqcSampleTab,{iqcsample:_this.props.Login.masterData.iqcsample||[],dataResult:process(_this.props.Login.masterData.iqcsample||[],_this.state.iqcsampleState),dataState:_this.state.iqcsampleState,controlMap:_this.state.controlMap,dataStateChange:_this.dataStateBatchIqcChangeChange,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,cancelRecord:_this.cancelRecord,methodUrl:\"IQCSample\",getIqcSamples:function getIqcSamples(){return _this.getIqcSamples(_this.props.Login.masterData.SelectedBatchmaster);},screenName:\"IDS_BATCHIQCSAMPLE\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));if(_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.INITIATED||_this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.COMPLETED){tabMap.set(\"IDS_RESULTS\",/*#__PURE__*/React.createElement(BatchResultTab,{ELNTest:_this.props.Login.masterData.ELNTest||[],resultview:_this.props.Login.masterData.Resultview||[],dataResult:process(_this.props.Login.masterData.Resultview||[],_this.state.viewstate),dataState:_this.state.viewstate,dataStateChange:_this.dataStateViewChange,userInfo:_this.props.Login.userInfo,methodUrl:\"BatchViewResult\",screenName:\"IDS_RESULTS\",intl:_this.props.intl,nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample,selectedfilename:_this.props.Login.masterData.SelectedBatchmaster.sbatcharno}));}tabMap.set(\"IDS_BATCHHISTORY\",/*#__PURE__*/React.createElement(BatchhistoryTab,{batchhistory:_this.props.Login.masterData.Batchhistory||[],dataResult:process(_this.props.Login.masterData.Batchhistory||[],_this.state.histortState),dataState:_this.state.histortState,dataStateChange:_this.dataStateBatchHistoryChange,userInfo:_this.props.Login.userInfo,methodUrl:\"Batchhistory\",screenName:\"IDS_BATCHHISTORY\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));return tabMap;};_this.onFilterComboChange=function(event,fieldname){if(event!==null){var inputData=[];if(fieldname===\"fromDate\"){var dateObj=convertDateValuetoString(event,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",fromDate:dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\ntoDate:dateObj.toDate,//this.props.Login.masterData.toDate,\ndefaultRegistrationType:_this.props.Login.masterData.defaultRegistrationType,defaultRegistrationSubType:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA,defaultSampleType:_this.props.Login.masterData.defaultSampleType,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ntranscode:_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.NA,//defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\nuserInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCApprovalConfigVersion(inputData);}if(fieldname===\"toDate\"){var _dateObj=convertDateValuetoString(_this.props.Login.masterData.fromDate,event,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",fromDate:_dateObj.fromDate,//this.props.Login.masterData.fromDate,\ntoDate:_dateObj.toDate,//this.OnDateConverstion(event, fieldname),\ndefaultRegistrationType:_this.props.Login.masterData.defaultRegistrationType,defaultRegistrationSubType:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA,defaultSampleType:_this.props.Login.masterData.defaultSampleType,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ntranscode:_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.NA,//defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\nuserInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCApprovalConfigVersion(inputData);}// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \n//                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \nif(fieldname===\"nsampletypecode\"){var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",nsampletypecode:parseInt(event.value),fromDate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nuserinfo:_this.props.Login.userInfo,defaultSampleType:event.item,masterData:_this.props.Login.masterData,isneedrealFilterStatus:\"false\",realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCRegistrationType(inputData);}else if(fieldname===\"nregtypecode\"){var _obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nflag:3,needFilterSubmit:\"false\",nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromDate:_obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:_obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:parseInt(event.value),userInfo:_this.props.Login.userInfo,defaultRegistrationType:event.item,defaultSampleType:_this.props.Login.masterData.defaultSampleType,isneedrealFilterStatus:\"false\",realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCRegistrationSubType(inputData,_this.props.Login.masterData);}else if(fieldname===\"nregsubtypecode\"){var nregsubtypecode=_this.state;//this.setState({ nregsubtypecode:event });\n_this.getApprovalVersion(event);}else if(fieldname==='ndesigntemplatemappingcode'){var _obj2=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);var inputParamData={nflag:3,needFilterSubmit:\"false\",fromdate:_obj2.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj2.toDate,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:_this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,//defaultFilterStatus: event.item,\ndefaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,ntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),nneedsubsample:_this.props.Login.masterData.nneedsubsample||4,// stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\n//nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\nndesigntemplatemappingcode:event.value,DesignTemplateMappingValue:event.item,isneedrealFilterStatus:\"false\",realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};//this.props.getREFilterTestData(inputParamData)\n_this.props.getBCFilterTemplate(inputParamData);}else if(fieldname===\"version\"){// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\n//     this.props.Login.masterData.toDate, this.props.Login.userInfo);\n// inputData = {\n//     nflag: 4,\n//     fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\n//     todate: obj.toDate,//this.props.Login.masterData.toDate,\n//     nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\n//     nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\n//     nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\n//     napprovalversioncode: event.value,\n//     userinfo: this.props.Login.userInfo,\n//     defaultApprovalConfigVersion: event.item,\n//     masterData: this.props.Login.masterData,\n//     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n// }\n// this.props.getBCJobStatus(inputData)\nvar ApprovalVersionValue=_this.state;_this.setState({ApprovalVersionValue:event});}else if(fieldname===\"jobstatus\"){var _obj3=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:5,needFilterSubmit:\"false\",fromdate:_obj3.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj3.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),njobstatuscode:event.value,userinfo:_this.props.Login.userInfo,defaultjobstatus:event.item,masterData:_this.props.Login.masterData,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCFilterStatus(inputData);}else if(fieldname===\"filter\"){var FilterStatusValue=_this.state;_this.setState({FilterStatusValue:event});}else if(fieldname===\"test\"){var _FilterStatusValue=_this.state;_this.setState({FilterStatusValue:event});}else{var selectedRecord=_this.state;_this.setState({selectedRecord:event});}}};_this.handleFilterDateChange=function(dateValue,dateName){var selectedFilter=_this.state.selectedFilter;if(dateValue===null){dateValue=new Date();}selectedFilter[dateName]=dateValue;_this.setState({selectedFilter:selectedFilter});};_this.headerSelectionChange=function(event){var checked=event.syntheticEvent.target.checked;var sampleList=_this.state.samples||[];var addedSamplesList=[];if(checked){//const data = event.dataItems.map(item => {\nvar data=event.target.props.data.map(function(item){if(sampleList.findIndex(function(x){return x.ntransactiontestcode===item.ntransactiontestcode;})===-1){sampleList.push(_objectSpread(_objectSpread({},item),{},{selected:false}));item.selected=checked;var newItem=JSON.parse(JSON.stringify(item));//newItem.selected = false;\ndelete newItem['selected'];newItem[\"jsondata\"]={};newItem[\"jsonuidata\"]={};newItem[\"jsondata\"]['samplelist']=item;newItem[\"jsonuidata\"]['samplelist']=item;addedSamplesList.push(newItem);return item;}else{var olditem=JSON.parse(JSON.stringify(sampleList[sampleList.findIndex(function(x){return x.ntransactiontestcode===item.ntransactiontestcode;})]));olditem.selected=checked;var _newItem=JSON.parse(JSON.stringify(olditem));_newItem.selected=false;_newItem[\"jsondata\"]={};_newItem[\"jsonuidata\"]={};_newItem[\"jsondata\"]['samplelist']=olditem;_newItem[\"jsonuidata\"]['samplelist']=olditem;addedSamplesList.push(_newItem);return olditem;}});_this.setState({samples:data,addedSamplesList:addedSamplesList,sampleList:sampleList,addSelectAll:checked,deleteSelectAll:false});}else{// let sampleListData = this.state.sampleList || [];\n// let deletedListdData = this.state.sampleList || [];\nvar sampleListData=_this.state.samples||[];var deletedListdData=_this.state.samples||[];var _data=_this.state.samples.map(function(item){sampleListData=sampleListData.filter(function(item1){return item1.npreregno!==item.npreregno;});deletedListdData=deletedListdData.filter(function(item1){return item1.npreregno!==item.npreregno;});item.selected=checked;return item;});// console.log(\"data:\",data1, data2);\n_this.setState({samples:_data,addedSamplesList:sampleListData,deletedList:deletedListdData,addSelectAll:checked,deleteSelectAll:false});}// const data = this.state.addComponentDataList.map(item=>{\n//     if (checked){\n//         addedComponentList.push({...item, selected:false});\n//     }\n//     else{\n//         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\n//         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \n//     }  \n//     item.selected = checked;\n//     return item;\n// });\n};_this.onTreeClick=function(event){var inputParam={methodUrl:\"TestGroupSpecification\",screenName:\"IDS_REGISTRATION\",operation:\"get\",activeKey:event.key,focusKey:event.key,keyName:\"treetemplatemanipulation\",userinfo:_this.props.Login.userInfo,selectedNode:event.item,selectedRecord:_this.state.selectedRecord,primaryKey:event.primaryKey};if(event.primaryKey!==_this.state.selectedRecord[\"ntemplatemanipulationcode\"]){_this.props.getNewRegSpecification(inputParam,_this.props.Login.masterData);}};_this.selectionChange=function(event){var addedSamplesList=_this.state.addedSamplesList||[];//let addedSamplesList= [];\nvar samples=_this.state.samples||[];var samplesList=_this.state.samples.map(function(item){if(item.ntransactiontestcode===event.dataItem.ntransactiontestcode){item.selected=!event.dataItem.selected;if(item.selected){var newItem=JSON.parse(JSON.stringify(item));//newItem.selected = false;\ndelete newItem['selected'];newItem[\"jsondata\"]={};newItem[\"jsonuidata\"]={};newItem[\"jsondata\"]['samplelist']=item;newItem[\"jsonuidata\"]['samplelist']=item;addedSamplesList.push(newItem);}else{// if(addedSamplesList.length === 0){\naddedSamplesList=addedSamplesList.filter(function(item1){return item1.ntransactiontestcode!==item.ntransactiontestcode;});//   }else{\n//     this.state.samples.map((item1,index) => { \n//         if(item1.ntransactiontestcode == event.dataItem.ntransactiontestcode){\n//             if(this.state.samples.length == 1){\n//                 addedSamplesList=[];\n//             }else{\n//                 const newItem = JSON.parse(JSON.stringify(item1));\n//                 newItem.selected = false;\n//                 newItem[\"jsondata\"]={};\n//                 newItem[\"jsonuidata\"]={};\n//                 newItem[\"jsondata\"]['samplelist'] = item1\n//                 newItem[\"jsonuidata\"]['samplelist'] = item1\n//                 //addedSamplesList.push(newItem);\n//                 addedSamplesList = item1;\n//             }  \n//         }\n//     } \n//   )\n}}return item;});///samplesList = addedSamplesList;\n_this.setState({samplesList:samplesList,addedSamplesList:addedSamplesList,samples:samples,initialList:addedSamplesList,addSelectAll:_this.valiateCheckAll(samplesList),deleteSelectAll:_this.valiateCheckAll(samplesList)});};_this.handleSaveClick=function(saveType){var failedControls=[];var startLabel=[];var label=\"IDS_ENTER\";var mandatoryFields=[];var selectedRecord=_this.state.selectedRecord;console.log(\"handle save:\",selectedRecord);mandatoryFields=[{\"idsName\":\"IDS_SPECIFICATION\",\"dataField\":\"nallottedspeccode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];var selectedSpec=_this.props.Login.selectedSpec;if(selectedSpec.nallottedspeccode!==\"\"){selectedSpec[\"nallottedspeccode\"]=_this.state.selectedRecord[\"nallottedspeccode\"];selectedSpec[\"sversion\"]=_this.state.selectedRecord[\"sversion\"];selectedSpec[\"ntemplatemanipulationcode\"]=_this.state.selectedRecord[\"ntemplatemanipulationcode\"];var updateInfo={typeName:DEFAULT_RETURN,data:{loadSpec:false,selectedSpec:selectedSpec,openModal:true,openSpecModal:false}};_this.props.updateStore(updateInfo);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.ConfirmDelete=function(selectedBatch,deleteId,operation){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteBatchCreation(selectedBatch,deleteId,operation);});};_this.completePopUpStartActions=function(completeId){// if(this.props.Login.masterData.nneedtestinitiate === true){\nif(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.COMPLETED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.DRAFT||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}//    }else \nelse if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}else{// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         openModal: true, \n//         completeId : completeId,\n//         masterData: this.props.Login.masterData,\n//        // screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\n//         operation: \"complete\"\n//     }\n// }\n// this.props.updateStore(updateInfo);\nvar inputData={};inputData[\"openModal\"]=true;inputData[\"completeId\"]=completeId;inputData[\"selectedRecord\"]=_this.state.selectedRecord&&_this.state.selectedRecord[\"dtransactiondate\"]?\"\":_this.state.selectedRecord;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"operation\"]=\"complete\";_this.props.batchCompleteDatePopup(inputData,_this.props.Login.masterData);}};_this.AddSpec=function(e){if(_this.state.selectedMaterial!==undefined&&_this.state.selectedMaterialCategory!==undefined){var inputData={};inputData[\"nmaterialcode\"]=_this.state.selectedMaterial.value;inputData[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory.value;inputData[\"ncategorybasedflow\"]=_this.state.selectedMaterialCategory.item.ncategorybasedflow;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;// inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \n// inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \n// inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \n// inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\n// inputData[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\n// inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\n// inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\n_this.props.getTreeByMaterial(inputData,_this.state.selectedRecord,_this.props.Login.masterData);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_FILLALLDETAILSTOADDSPEC\"}));}};_this.testPopUpStartActions=function(testStartId){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}// else if (this.props.Login.masterData.iqcsample.length==0){\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\n// }\nelse{var inputData={};inputData[\"openModal\"]=true;inputData[\"testStartId\"]=testStartId;inputData[\"selectedRecord\"]=_this.state.selectedRecord&&_this.state.selectedRecord[\"dtransactiondate\"]?\"\":_this.state.selectedRecord;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"operation\"]=\"initiate\";_this.props.batchInitiateDatePopup(inputData,_this.props.Login.masterData);//         const updateInfo = {\n//             typeName: DEFAULT_RETURN,\n//             data: {\n//                 openModal: true, \n//                 testStartId : testStartId,\n//                 selectedRecord : this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord,\n//                 masterData: this.props.Login.masterData,\n//                 operation: \"initiate\"\n//             }\n//         }\n// this.props.updateStore(updateInfo);\n}};_this.testStartActions=function(selectedmaster,testStartId){if(selectedmaster.ntransactionstatus==transactionStatus.INITIATED||selectedmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}//else if (this.props.Login.masterData.iqcsample.length==0){\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\n// }\nelse{var inputData={};var jsonuidata=[];var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/initiateBatchcreation\",isSingleGet:true,fecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});if(_this.props.Login.masterData.iqcsample.length>0){var totalSample=_this.props.Login.masterData.Samples.concat(_this.props.Login.masterData.iqcsample);inputData[\"npreregno\"]=_this.props.Login.masterData.iqcsample.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"ntransactiontestcode\"]=totalSample.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"nneedjoballocationiqc\"]=true;inputData[\"isiqcdata\"]=true;}else{inputData[\"npreregno\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"ntransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"isiqcdata\"]=false;inputData[\"nneedjoballocationiqc\"]=false;}inputData[\"muluserpreregno\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"mulusertransactionsamplecode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactionsamplecode;}).join(\",\");inputData[\"mulusertransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;// inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"batchsample\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"nneedmyjob\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedmyjob;inputData[\"nneedjoballocation\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedjoballocation;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"napproveconfversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=transactionStatus.INITIATED||transactionStatus.DRAFT;inputData[\"nneedtestinitiate\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedtestinitiate;inputData[\"Batchhistory\"]={dtransactiondate:formatInputDate(_this.state.selectedRecord[\"dtransactiondate\"]!=undefined?_this.state.selectedRecord[\"dtransactiondate\"]:_this.props.Login.currentTime,false),scomments:_this.state.selectedRecord&&_this.state.selectedRecord.scomments};inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;inputData[\"testStartId\"]=testStartId;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[1];inputData[\"sample\"]=_this.props.Login.masterData?_this.props.Login.masterData.sample:\"\";inputData[\"iqcsample\"]=_this.props.Login.masterData?_this.props.Login.masterData.iqcsample:\"\";var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",operation:\"initiate\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,testStartId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread(_objectSpread({},masterData),{},{defaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[1],realdefaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[1]})},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchInitiateAction(inputData,_this.props.Login.masterData,_this.confirmMessage);}}};_this.batchSaveIQCActions=function(selectedmaster){if(_this.state.selectedRecord.savailablequatity!==\"0.00\"){if(parseFloat(_this.state.selectedRecord.susedquantity)<=parseFloat(_this.props.Login.masterData.inventoryTransaction.savailablequatity)){if(_this.props.Login.selectedSpec.nallottedspeccode!==undefined&&_this.props.Login.selectedSpec.nallottedspeccode!==\"\"){var userInfo={};var inputRegistrationData={};var inputMaterialInventoryData={};var inputBatchData={};var map={};var batchCreationSampleData={};var batchCreationTestData={};var batchCreationSampleArray=[];var batchCreationTestArray=[];var samplecombinationuniqueArray=[];var inputMaterialInventoryArrData=[];batchCreationSampleData[\"nspecsampletypecode\"]=_this.props.Login.selectedSpec&&_this.props.Login.selectedSpec.nallottedspeccode?_this.props.Login.selectedSpec.nallottedspeccode.nspecsampletypecode:transactionStatus.NA;batchCreationSampleData[\"ncomponentcode\"]=transactionStatus.NA;batchCreationSampleData[\"slno\"]=1;batchCreationSampleArray.push(batchCreationSampleData);inputRegistrationData[\"nallottedspeccode\"]=_this.props.Login.selectedSpec&&_this.props.Login.selectedSpec.nallottedspeccode?_this.props.Login.selectedSpec.nallottedspeccode.value:transactionStatus.NA;inputRegistrationData[\"ntemplatemanipulationcode\"]=_this.props.Login.ntemplatemanipulationcode||transactionStatus.NA;inputRegistrationData[\"nregsubtypeversioncode\"]=_this.props.Login.masterData.nregsubtypeversioncode;inputRegistrationData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode;// inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n// inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\n// inputRegistrationData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputRegistrationData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputRegistrationData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputRegistrationData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputRegistrationData[\"nproductcatcode\"]=transactionStatus.NA;inputRegistrationData[\"nproductcode\"]=transactionStatus.NA;inputRegistrationData[\"ninstrumentcatcode\"]=transactionStatus.NA;inputRegistrationData[\"ninstrumentcode\"]=transactionStatus.NA;inputRegistrationData[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory?_this.state.selectedMaterialCategory.value:transactionStatus.NA;inputRegistrationData[\"nmaterialcode\"]=_this.state.selectedMaterial?_this.state.selectedMaterial.value:transactionStatus.NA;inputRegistrationData[\"jsondata\"]={nmaterialcode:_this.state.selectedMaterial.value,nmaterialcatcode:_this.state.selectedMaterialCategory.value,smaterialcatname:_this.state.selectedMaterialCategory.label,sinventoryid:_this.state.selectedMaterialInventory.item.sinventoryid,nmaterialinventorycode:_this.state.selectedMaterialInventory.item.nmaterialinventorycode,smaterial:_this.state.selectedMaterial.item.smaterialname,smaterialtype:_this.state.selectedMaterialType.item.smaterialtypename,nmaterialtypecode:_this.state.selectedMaterialType.value,susedquantity:_this.state.selectedRecord.susedquantity,sunitname:_this.props.Login.masterData.inventoryTransaction.sunitname,savailablequatity:_this.props.Login.masterData.inventoryTransaction.savailablequatity,//materialtype:this.state.selectedMaterialType.label,\nsremarks:_this.state.selectedRecord.sremarks,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']};inputRegistrationData[\"jsonuidata\"]={nmaterialcode:_this.state.selectedMaterial.value,nmaterialcatcode:_this.state.selectedMaterialCategory.value,smaterialcatname:_this.state.selectedMaterialCategory.label,sinventoryid:_this.state.selectedMaterialInventory.item.sinventoryid,nmaterialinventorycode:_this.state.selectedMaterialInventory.item.nmaterialinventorycode,smaterial:_this.state.selectedMaterial.item.smaterialname,smaterialtype:_this.state.selectedMaterialType.item.smaterialtypename,nmaterialtypecode:_this.state.selectedMaterialType.value,susedquantity:_this.state.selectedRecord.susedquantity,sunitname:_this.props.Login.masterData.inventoryTransaction.sunitname,savailablequatity:_this.props.Login.masterData.inventoryTransaction.savailablequatity,//materialtype:this.state.selectedMaterialType.label,\nsremarks:_this.state.selectedRecord.sremarks,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']};// inputMaterialInventoryData = {\n//     jsondata : this.props.Login.masterData.selectedInventoryUnit['jsondata']\n// }\n//  inputMaterialInventoryData = {\n//         nmaterialinventorycode : this.state.selectedMaterialInventory.item.nmaterialinventorycode,\n//         jsondata : {\n//             jsondata:this.props.Login.masterData.selectedInventoryUnit['jsondata'],\n//             nqtyused: this.state.selectedRecord.susedquantity\n//         },\n//         jsonuidata : {\n//             jsonuidata : this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\n//             nqtyused: this.state.selectedRecord.susedquantity\n//         },\n//         nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\n//  };\ninputMaterialInventoryData[\"nmaterialinventorycode\"]=_this.state.selectedMaterialInventory.item.nmaterialinventorycode;inputMaterialInventoryData[\"jsondata\"]=_objectSpread(_objectSpread({},_this.props.Login.masterData.selectedInventoryUnit['jsondata']),{},{nqtyused:_this.state.selectedRecord.susedquantity,savailablequatity:_this.state.selectedRecord.savailablequatity,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']});//inputMaterialInventoryData[\"jsondata\"] = this.state.selectedRecord.susedquantity;\ninputMaterialInventoryData[\"nsectioncode\"]=_this.props.Login.masterData.selectedInventoryUnit['nsectioncode'];inputMaterialInventoryData[\"jsonuidata\"]=_objectSpread(_objectSpread({},_this.props.Login.masterData.selectedInventoryUnit['jsonuidata']),{},{nqtyused:_this.state.selectedRecord.susedquantity,savailablequatity:_this.state.selectedRecord.savailablequatity,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']});//inputMaterialInventoryArrData.push(inputMaterialInventoryData);\nbatchCreationTestData[\"ntestgrouptestcode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.ntestgrouptestcode:transactionStatus.NA;//     batchCreationTestData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\nbatchCreationTestData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;batchCreationTestData[\"nsectioncode\"]=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;batchCreationTestData[\"nmethodcode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.nmethodcode:transactionStatus.NA;//   batchCreationTestData[\"nchecklistversioncode\"]=this.state.selectedTestSynonym ? this.state.selectedTestSynonym.item.nchecklistversioncode:transactionStatus.NA;\nbatchCreationTestData[\"nrepeatcountno\"]=1;//--\n//    batchCreationTestData[\"ntestretestno\"]=0;\nbatchCreationTestData[\"nparametercount\"]=1;//--\nbatchCreationTestData[\"slno\"]=1;//--\nbatchCreationTestArray.push(batchCreationTestData);map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;map[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;userInfo=_this.props.Login.userInfo;map[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;map[\"napproveconfversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;map[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;map[\"nneedtestinitiate\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedtestinitiate;map[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory?_this.state.selectedMaterialCategory.value:transactionStatus.NA;map[\"nmaterialcode\"]=_this.state.selectedMaterial?_this.state.selectedMaterial.value:transactionStatus.NA;map[\"nmaterialtypecode\"]=_this.state.selectedMaterialType?_this.state.selectedMaterialType.value:transactionStatus.NA;inputBatchData=_this.props.Login.masterData.SelectedBatchmaster;map['Registration']=inputRegistrationData;map['Batchsampleiqc']=inputBatchData;map['RegistrationSample']=batchCreationSampleArray;map['testgrouptest']=batchCreationTestArray;map['userInfo']=userInfo;map['samplecombinationunique']=samplecombinationuniqueArray;map['inputMaterialInventoryArrData']=inputMaterialInventoryData;var inputParam={inputData:map,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHIQCSAVE\",operation:\"createiqc\"};_this.props.batchSaveIQCActions(inputParam.inputData,_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ADDSPECIFICATIONS\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_USEDQTYISGREATERTHANAVAILABLEQTY\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_NOAVAILABLEQUANTITY\"}));}};_this.cancelBatch=function(selectedmaster,cancelId){if(selectedmaster.ntransactionstatus==transactionStatus.DRAFT||selectedmaster.ntransactionstatus==transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTBATCHINITIATEDRECORD\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/cancelBatch\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"samples\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sbatcharno\"]=selectedmaster.sbatcharno;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=transactionStatus.CANCELLED||transactionStatus.DRAFT;// inputData[\"Batchhistory\"] ={\n//     dtransactiondate : formatInputDate(new Date(),true),\n//     scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\n//     };\n//inputData[\"completeId\"] = completeId;\ninputData[\"nneedtestinitiate\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedtestinitiate;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[3];var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batch\",displayName:\"IDS_BATCHCREATION\",operation:\"cancel\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,cancelId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread(_objectSpread({},masterData),{},{defaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2],realdefaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2]})},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchCancelAction(inputData,_this.props.Login.masterData);}}};_this.batchCompleteActions=function(selectedmaster,completeId){if(selectedmaster.ntransactionstatus==transactionStatus.COMPLETED||selectedmaster.ntransactionstatus==transactionStatus.DRAFT){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/completeBatchcreation\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"ntransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(sample){return sample.ntransactiontestcode;}).join(\",\");inputData[\"samples\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sbatcharno\"]=selectedmaster.sbatcharno;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=transactionStatus.COMPLETED||transactionStatus.DRAFT;inputData[\"Batchhistory\"]={dtransactiondate:formatInputDate(_this.state.selectedRecord[\"dtransactiondate\"]!=undefined?_this.state.selectedRecord[\"dtransactiondate\"]:_this.props.Login.currentTime,false),scomments:_this.state.selectedRecord&&_this.state.selectedRecord.scomments};inputData[\"completeId\"]=completeId;inputData[\"nneedtestinitiate\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedtestinitiate;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2];var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",operation:\"complete\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,completeId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread(_objectSpread({},masterData),{},{defaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2],realdefaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2]})},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchCompleteAction(inputData,_this.props.Login.masterData);}}};_this.closeAlert=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showConfirmAlert:false,loading:false}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var openSpecModal=_this.props.Login.openSpecModal;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"cancel\"){//    this.props.Login.operation === \"complete\") {\nloadEsign=false;openModal=false;}else{loadEsign=false;}selectedRecord[\"esigncomments\"]=\"\";selectedRecord[\"esignpassword\"]=\"\";}else if(_this.props.Login.openSpecModal){loadEsign=false;openSpecModal=false;}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,openSpecModal:openSpecModal,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var inputData={};selectedRecord[fieldName]=comboData.item;if(fieldName===\"sproductname\"){selectedRecord[\"nproductcode\"]=comboData.value;selectedRecord[\"userInfo\"]=_this.props.Login.userInfo;selectedRecord[\"stestname\"]=_this.state.selectedRecord['stestname'];selectedRecord[\"ntestcode\"]=_this.state.selectedRecord['stestname']['ntestcode'];selectedRecord[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\nselectedRecord['naddcontrolCode']=_this.props.Login.naddcontrolCode;selectedRecord[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;selectedRecord[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;//this.setState({ selectedProduct:comboData });\n_this.props.getProductBasedInstrument(selectedRecord,_this.props.Login.masterData);}else if(fieldName===\"ssectionname\"){inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData['naddcontrolCode']=_this.props.Login.naddcontrolCode;inputData['section']=selectedRecord.ssectionname;inputData['userInfo']=_this.props.Login.userInfo;_this.props.getTestInstrumentComboService(inputData,_this.props.Login.masterData);// this.setState({ selectedSection:comboData });\n}else if(fieldName===\"stestname\"){if(_this.props.Login.operation===\"update\"){selectedRecord[\"nprevioustestcode\"]=_this.state.selectedTestSynonym.value;}selectedRecord[\"ntestcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\nselectedRecord['naddcontrolCode']=_this.props.Login.naddcontrolCode;selectedRecord['sinstrumentcatname']=undefined;selectedRecord[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;selectedRecord[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;_this.props.getTestInstrumentCategory(selectedRecord,_this.props.Login.masterData);}else if(fieldName===\"sinstrumentcatname\"){selectedRecord[\"ninstrumentcatcode\"]=comboData.value;selectedRecord[\"ncalibrationreq\"]=comboData.item.ncalibrationreq;selectedRecord[\"ntestcode\"]=_this.state.selectedTestSynonym.value;selectedRecord['userInfo']=_this.props.Login.userInfo;//selectedRecord['sinstrumentid']=undefined;\nselectedRecord['sinstrumentname']=undefined;_this.props.getInstrumentForInstCategory(selectedRecord,_this.props.Login.masterData);//this.props.getInstrumentID(selectedRecord,this.props.Login.masterData);\n}else if(fieldName===\"smaterialcatname\"){selectedRecord[\"nmaterialcatcode\"]=comboData.value;selectedRecord[\"needsectionwise\"]=comboData.item.needSectionwise;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;_this.setState({selectedMaterialCategory:comboData});_this.props.getMaterialBasedOnMaterialCategory(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"smaterialname\"){selectedRecord[\"nmaterialcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['needsection']=comboData.item.needsection;selectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;_this.setState({selectedMaterial:comboData});_this.props.getMaterialInventoryBasedOnMaterial(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"sinventoryid\"){selectedRecord[\"nmaterialcode\"]=_this.state.selectedMaterial.value;selectedRecord[\"materialInvCode\"]=comboData.item.nmaterialinventorycode;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['needsection']=_this.props.Login.masterData.selectedMaterial.needsection;_this.setState({selectedMaterialInventory:comboData});// if(this.state.selectedMaterial.item.needsection == transactionStatus.NO){\n//     selectedRecord['nsectioncode']=transactionStatus.NA;\n// }else{\nselectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;//}\n_this.props.getMaterialAvailQtyBasedOnInv(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"sinstrumentname\"){selectedRecord[\"ninstrumentnamecode\"]=comboData.value;selectedRecord[\"sinstrumentname\"]=comboData.label;selectedRecord['userInfo']=_this.props.Login.userInfo;//selectedRecord['sinstrumentid']=undefined;\nselectedRecord['selectedInstrument']=comboData.item;selectedRecord['ninstrumentcatcode']=comboData.item.ninstrumentcatcode;selectedRecord['ninstrumentcode']=comboData.item.ninstrumentcode;_this.props.getInstrumentID(selectedRecord,_this.props.Login.masterData);}else{_this.setState({selectedInstrumentId:comboData});}};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onMultiColumnValue=function(value,key,flag,label,keys){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});if(flag){keys.map(function(objkey,index){return selectedRecord[objkey]={\"label\":value[0][label[index]],\"value\":value[0][objkey]};});}}else{key.forEach(function(objarray){selectedRecord[objarray]=\"\";});keys.map(function(objkey,index){return selectedRecord[objkey]=\"\";});}_this.props.getBatchManufacturerComboChange(selectedRecord,_this.props.Login.userInfo);};_this.onMultiColumnMAHChange=function(value,key){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});}_this.setState({selectedRecord:selectedRecord});};_this.clearComponentInput=function(){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"nproductcode\"]=undefined;selectedRecord[\"ncomponentcode\"]=undefined;selectedRecord[\"smanuflotno\"]=\"\";selectedRecord[\"dateprompt\"]=transactionStatus.NO;selectedRecord[\"transdatefrom\"]=_this.props.Login.componentDefaultSearchDate;selectedRecord[\"transdateto\"]=_this.props.Login.componentDefaultSearchDate;_this.setState({selectedRecord:selectedRecord});};_this.openClosePortal=function(){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED){if(_this.props.Login.openELNSheet===undefined||!_this.props.Login.openELNSheet){_this.props.Login.masterData.enlLink=\"\";var integrationSettings=_this.props.Login.integrationSettings;var inputParam={userInfo:_this.props.Login.userInfo,elnUserInfo:_this.props.Login.elnUserInfo,elnSite:_this.props.Login.elnSite,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.sbatcharno,ntestcode:_this.props.Login.masterData.ntestcode};var link=\"\";var detail=CF_encryptionData(\"-1//Sheet\").EncryptData;var settedId=inputParam.nbatchmastercode;//console.log(settedId);\nvar encryptedbatchid=CF_encryptionData(settedId).EncryptData;var userObject={usercode:inputParam.elnUserInfo.nelncode,username:inputParam.elnUserInfo.selnuserid,userfullname:inputParam.elnUserInfo.selnusername,lsusergroup:{usergroupcode:inputParam.elnUserInfo.nelnusergroupcode,usergroupname:inputParam.elnUserInfo.nelnusergroupcode},lssitemaster:{sitecode:inputParam.elnSite.nelnsitecode}};var encrypteduser=CF_encryptionData(userObject).EncryptData;var baseURL=integrationSettings[1].slinkname;link=baseURL+\"/vieworder\"+'#{\"d\":\"'+settedId+'\",\"user\":\"'+encrypteduser+'\",\"batchid\":\"'+encryptedbatchid+'\"}';// this.props.getELNTestValidation(test,this.props.Login.integrationSettings); \nvar updateInfo={typeName:DEFAULT_RETURN,data:{openELNSheet:true,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{enlLink:link,baseURL:baseURL})}};_this.props.updateStore(updateInfo);}else{var _updateInfo={typeName:DEFAULT_RETURN,data:{openELNSheet:false,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{enlLink:\"\"})}};_this.props.updateStore(_updateInfo);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}};_this.handleDateChange=function(dateName,dateValue){var selectedRecord={};if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onDropImage=function(attachedFiles,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=attachedFiles;_this.setState({selectedRecord:selectedRecord,actionType:\"new\"});};_this.saveSample=function(addedsamplelist){if(addedsamplelist===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLESTOSUBMIT\"}));}else if(addedsamplelist.length>0){var sampleArray=[];addedsamplelist.map(function(item){return sampleArray.push({npreregno:item.npreregno,ntransactionsamplecode:item.ntransactionsamplecode,ntransactiontestcode:item.ntransactiontestcode,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster?_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode:transactionStatus.NA,sarno:item.jsonuidata.samplelist.sarno,ssamplearno:item.jsonuidata.samplelist.ssamplearno,stestname:item.jsonuidata.samplelist.stestname,jsonuidata:{samplelist:item.jsonuidata.samplelist},jsondata:{samplelist:item.jsondata.samplelist}});});var nbatchmastercode=_this.props.Login.masterData.SelectedBatchmaster&&_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;// batchSample = {\n//     npreregno: addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\n//     ntransactionsamplecode : addedsamplelist.map(sample=>sample.ntransactionsamplecode).join(\",\"),\n//     ntransactiontestcode : addedsamplelist.map(sample=>sample.ntransactiontestcode).join(\",\"),\n//     npreregno : addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\n//     nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster &&\n//     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\n//     jsonuidata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}',\n//     jsondata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}'\n// }\n//jsondata : \nvar inputParam={inputData:{batchSample:nbatchmastercode,sampleArray:sampleArray,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,nregtypecode:_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA}};_this.props.createSampleAction(inputParam.inputData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLESTOSUBMIT\"}));}};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.operation===\"createSample\"){_this.saveSample(_this.state.addedSamplesList);}else if(_this.props.Login.operation===\"initiate\"){_this.testStartActions(_this.props.Login.masterData.SelectedBatchmaster,_this.props.Login.testStartId);}else if(_this.props.Login.operation===\"complete\"){_this.batchCompleteActions(_this.props.Login.masterData.SelectedBatchmaster,_this.props.Login.completeId);}else if(_this.props.Login.operation===\"createiqcsample\"){_this.batchSaveIQCActions(_this.props.Login.masterData.SelectedBatchmaster);}else{var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);if(_this.props.Login.operation===\"create\"){inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;}inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nneedcombodataforFilter\"]=\"true\";inputData[\"needFilterSubmit\"]=\"false\";inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"nprevioustestcode\"]=_this.state.selectedRecord&&_this.state.selectedRecord.nprevioustestcode!=undefined?_this.state.selectedRecord.nprevioustestcode:_this.state.selectedTestSynonym.value;inputData[\"ntestcode\"]=_this.state.selectedTestSynonym?_this.state.selectedTestSynonym.value:transactionStatus.NA;inputData[\"nsectioncode\"]=_this.state.selectedSection?_this.state.selectedSection.item.nsectioncode:transactionStatus.NA;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType.nsampletypecode;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType.nregtypecode;\n//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.value :transactionStatus.NA;\ninputData[\"ninstrumentcatcode\"]=_this.state.selectedInstCategory?_this.state.selectedInstCategory.value:transactionStatus.NA;inputData[\"ninstrumentcode\"]=_this.state.selectedInstrument?_this.state.selectedInstrument.value:transactionStatus.NA;inputData[\"nproductcode\"]=_this.state.selectedProduct?_this.state.selectedProduct.value:transactionStatus.NA;inputData[\"ntransactionstatus\"]=transactionStatus.DRAFT;inputData[\"sbatcharno\"]='-';// inputData[\"defaultSampleType\"]=this.props.Login.masterData.realSampleTypeValue ? \n// this.props.Login.masterData.realSampleTypeValue : transactionStatus.NA;\n// inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? \n// this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\n// inputData[\"defaultRegistrationSubType\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? \n// this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\ninputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;inputData[\"sinstrumentid\"]=_this.state.selectedInstrumentId&&_this.state.selectedInstrumentId.label;// inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \n// this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\n// inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\n// this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA;var postParam=undefined;postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",unchangeList:[\"FromDate\",\"ToDate\"],isSingleGet:true,fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\"};var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,postParam:postParam,searchRef:_this.searchRef,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef};if(_this.props.Login.operation===\"create\"){_this.searchRef.current.value=\"\";_this.props.createBatchmasterAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputParam[\"operation\"]);}else{inputData[\"nbatchmastercode\"]=_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;inputData[\"SelectedBatchmaster\"]=_this.props.Login.masterData.SelectedBatchmaster;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.editId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.updateBatchcreationAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputParam[\"operation\"]);}}}// const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n// if (esignNeeded) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\n//             openModal: true, screenName: \"IDS_BATCHCREATION\",\n//             operation: this.props.Login.operation\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// else {\n//     const selectedRecord = { ...this.state.selectedRecord, sbatchfillinglotno: \"\" }\n//     this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\n// }\n};_this.deleteBatchCreation=function(selectedBatch,deleteId,operation){if(selectedBatch.ntransactionstatus===transactionStatus.COMPLETED||selectedBatch.ntransactionstatus===transactionStatus.INITIATED||selectedBatch.ntransactionstatus===transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedBatch.nbatchmastercode,fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userInfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA,nsampletypecode:_this.props.Login.masterData.defaultSampleType.nsampletypecode}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"currentdate\"]=formatInputDate(new Date(),true);inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedBatch.nbatchmastercode;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;// inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\n// this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"selectedBatch\"]=selectedBatch;inputData[\"samples\"]=_this.props.Login.masterData.Samples;var inputParam={postParam:postParam,inputData:inputData,operation:operation,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.fetchEditData=function(editParam){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.DRAFT){_this.props.getActiveBatchCreationService(editParam,_this.props.Login.masterData.SelectedBatchmaster);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onFilterSubmit=function(){if(_this.props.Login.masterData.defaultRegistrationType!=undefined&&_this.state.FilterStatusValue.item!=undefined&&_this.state.nregsubtypecode.item!=undefined&&_this.state.ApprovalVersionValue.item!=undefined){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"needFilterSubmit\"]=\"true\";inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;//  inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \n//  this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;// inputData[\"napprovalversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \n//    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? \n//    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\ninputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"realApproveConfigVersion\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA;inputData[\"realdefaultFilterStatus\"]=_this.state.FilterStatusValue&&_this.state.FilterStatusValue.item||transactionStatus.NA;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.onActionFilterSubmit(inputParam[\"inputData\"],_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.reloadData=function(isFilterSubmit){_this.searchRef.current.value=\"\";// let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\nif(_this.props.Login.masterData.realRegTypeValue!==transactionStatus.NA||_this.props.Login.masterData.realRegTypeValue!==null&&_this.props.Login.masterData.realRegSubTypeValue!==transactionStatus.NA||_this.props.Login.masterData.realRegSubTypeValue!==null&&_this.props.Login.masterData.realApproveConfigVersion!==transactionStatus.NA||_this.props.Login.masterData.realApproveConfigVersion!==null&&_this.props.Login.masterData.defaultFilterStatus!==transactionStatus.NA||_this.props.Login.masterData.defaultFilterStatus!==null){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:transactionStatus.NA;inputData[\"defaultRegistrationSubType\"]=_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:transactionStatus.NA;inputData[\"ntranscode\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus||transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode||transactionStatus.NA;inputData[\"realApproveConfigVersion\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item.napprovalconfigversioncode||transactionStatus.NA;//inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\ninputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus||transactionStatus.NA;inputData[\"realdefaultFilterStatus\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus||transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.onActionFilterSubmit(inputParam[\"inputData\"],_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.onClickReport=function(selectedRecord,flag,ncontrolcode){var reportParam={classUrl:\"certificategeneration\",methodUrl:\"reportGeneration\",screenName:\"CertificateGeneration\",operation:\"previewReport\",primaryKeyField:\"nreleasebatchcode\",inputParam:_this.props.Login.inputParam,userInfo:_this.props.Login.userInfo,ncontrolCode:-1,inputData:{sprimarykeyname:'nreleasebatchcode',nprimarykey:selectedRecord.nreleasebatchcode,nreleasebatchcode:selectedRecord.nreleasebatchcode,ncertificatetypecode:selectedRecord.ndecision===transactionStatus.PASS&&flag===1?selectedRecord.ncertificatetypecode:-1,ndecisionstatus:selectedRecord.ndecision,// === transactionStatus.DRAFT ? transactionStatus.PASS : selectedRecord.ndecision,\nnreporttypecode:flag===2?reportTypeEnum.SCREENWISE:reportTypeEnum.BATCH,ncontrolcode:ncontrolcode,ncoareporttypecode:flag===2?-1:reportCOAType.BATCHPREVIEW,userinfo:_this.props.Login.userInfo,nflag:flag,skipbatchvalidation:true}};_this.props.onClickReport(reportParam);};_this.reportMethod=function(value){if(value.method===1){_this.onClickReport(_this.props.Login.masterData.SelectedBatchCreation,2,value.controlId);}else{_this.onClickReport(_this.props.Login.masterData.SelectedBatchCreation,1,value.controlId);}};var sampleState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var histortState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var iqcsampleState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var viewstate={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={skip:0,take:_this.props.Login.settings&&_this.props.Login.settings[3],userRoleControlRights:[],controlMap:new Map(),selectedFilter:{},sampleState:sampleState,histortState:histortState,iqcsampleState:iqcsampleState,viewstate:viewstate,selectedRecord:{},//confirmmsg:this.ConfirmMessage.bind(this),\ndataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},sidebarview:false};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.searchFieldList=[\"stestname\",\"sinstrumentcatname\",\"sinstrumentname\",\"sproductname\",\"smanufname\",\"stransactiondate\",\"username\",\"stransactionstatus\",\"sdecision\",\"sbatcharno\",\"stransdisplaystatus\"];_this.sampleMandatoryFields=[];_this.copyMandatoryFields=[];return _this;}_createClass(BatchCreation,[{key:\"gridfillingColumn\",value:function gridfillingColumn(data){var _this2=this;var temparray=data&&data.map(function(option){return{\"idsName\":option[designProperties.LABEL][_this2.props.Login.userInfo.slanguagetypecode],\"dataField\":option[designProperties.VALUE]==\"null\"?'-':option[designProperties.VALUE],\"width\":\"150px\",\"columnSize\":\"4\"};});return temparray;}},{key:\"valiateCheckAll\",value:// headerSelectionChange = (event) => {\n//     const checked = event.syntheticEvent.target.checked;\n//     let addedComponentList = this.state.addedComponentList || [];\n//     if (checked) {\n//         const data = this.state.addComponentDataList.map(item => {\n//             if (addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\n//                 addedComponentList.push({ ...item, selected: false });\n//                 item.selected = checked;\n//                 return item;\n//             } else {\n//                 let olditem = JSON.parse(JSON.stringify(addedComponentList[addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\n//                 olditem.selected = checked;\n//                 return olditem;\n//             }\n//         });\n//         this.setState({\n//             addComponentDataList: data, addedComponentList,\n//             addSelectAll: checked, deleteSelectAll: false\n//         });\n//     }\n//     else {\n//         let addedComponentData = this.state.addedComponentList || [];\n//         let deletedListdData = this.state.deletedList || [];\n//         const data = this.state.addComponentDataList.map(item => {\n//             addedComponentData = addedComponentData.filter(item1 => item1.npreregno !== item.npreregno);\n//             deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\n//             item.selected = checked;\n//             return item;\n//         });\n//         // console.log(\"data:\",data1, data2);\n//         this.setState({\n//             addComponentDataList: data, addedComponentList: addedComponentData, deletedList: deletedListdData,\n//             addSelectAll: checked, deleteSelectAll: false\n//         });\n//     }\n// }\nfunction valiateCheckAll(data){var selectAll=true;// let checkRepeatComponent;\n//  let addedComponentList = this.state.addedComponentList || [];\nif(data&&data.length>0){data.forEach(function(dataItem){if(dataItem.selected){if(dataItem.selected===false){selectAll=false;}}else{selectAll=false;// checkRepeatComponent=this.state.addComponentDataList.filter(item=>item.npreregno==data.npreregno)\n// if(checkRepeatComponent.length>0){\n//     selectAll = true;\n// }else{\n//     selectAll = false;\n// }\n}});}else{//if (gridType === \"originalgrid\"){\nselectAll=false;// }\n}return selectAll;}},{key:\"render\",value:function render(){var _this3=this;var reportActionList=[];var batchMandatoryFields=[];if(this.props.Login.operation===\"update\"){batchMandatoryFields.push({idsName:\"IDS_INSTRUMENTCATEGORY\",dataField:\"sinstrumentcatname\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"},{idsName:\"IDS_INSTRUMENT\",dataField:\"sinstrumentname\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"},{idsName:\"IDS_INSTRUMENTID\",dataField:\"sinstrumentid\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"},{idsName:\"IDS_PRODUCT\",dataField:\"sproductname\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"});}else{batchMandatoryFields.push({idsName:\"IDS_SECTION\",dataField:\"ssectionname\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"},{idsName:\"IDS_TEST\",dataField:\"stestname\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"},{idsName:\"IDS_INSTRUMENTCATEGORY\",dataField:\"sinstrumentcatname\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"},{idsName:\"IDS_INSTRUMENT\",dataField:\"sinstrumentname\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"},{idsName:\"IDS_INSTRUMENTID\",dataField:\"sinstrumentid\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"},{idsName:\"IDS_PRODUCT\",dataField:\"sproductname\",mandatoryLabel:\"IDS_SELECT\",controlType:\"selectbox\"});}var getBatch={screenName:\"IDS_BATCHCREATION\",operation:\"get\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,methodUrl:\"Batchcreation\",keyName:\"batchcreation\"};this.fromDate=this.state.selectedFilter[\"fromdate\"]&&this.state.selectedFilter[\"fromdate\"]||this.props.Login.masterData&&this.props.Login.masterData.realFromDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realFromDate):undefined;this.toDate=this.state.selectedFilter[\"todate\"]&&this.state.selectedFilter[\"todate\"]||this.props.Login.masterData&&this.props.Login.masterData.realToDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realToDate):undefined;var addId=this.state.controlMap.has(\"AddBatchCreation\")&&this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;var editId=this.state.controlMap.has(\"EditBatchcreation\")&&this.state.controlMap.get(\"EditBatchcreation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteBatchcreation\")&&this.state.controlMap.get(\"DeleteBatchcreation\").ncontrolcode;var testStartId=this.state.controlMap.has(\"BatchInitiate\")&&this.state.controlMap.get(\"BatchInitiate\").ncontrolcode;var completeId=this.state.controlMap.has(\"BatchComplete\")&&this.state.controlMap.get(\"BatchComplete\").ncontrolcode;var cancelId=this.state.controlMap.has(\"CancelBatch\")&&this.state.controlMap.get(\"CancelBatch\").ncontrolcode;var elnSheetId=this.state.controlMap.has(\"ELNSheet\")&&this.state.controlMap.get(\"ELNSheet\").ncontrolcode;var addParam={screenName:\"IDS_BATCHCREATION\",primaryeyField:\"nreleasebatchcode\",primaryKeyValue:undefined,operation:\"create\",//inputParam: this.props.Login.inputParam,\nuserInfo:this.props.Login.userInfo,ncontrolCode:addId,nneedtestinitiate:this.state.nregsubtypecode&&this.state.nregsubtypecode.item.nneedtestinitiate,masterData:this.props.Login.masterData,fromdate:this.props.Login.masterData.fromDate,todate:this.props.Login.masterData.toDate,nregtypecode:this.props.Login.masterData.realRegTypeValue?this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue?this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,napprovalconfigcode:this.state.ApprovalVersionValue&&this.state.ApprovalVersionValue.item||transactionStatus.NA,ntranscode:this.props.Login.masterData.realdefaultFilterStatus?this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus:transactionStatus.NA,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode};var viewInfoFields=[{\"fieldName\":\"sbatcharno\",\"label\":\"IDS_BATCHARNO\"},{\"fieldName\":\"ssectionname\",\"label\":\"IDS_SECTION\"},{\"fieldName\":\"stestname\",\"label\":\"IDS_TESTNAME\"},{\"fieldName\":\"sinstrumentcatname\",\"label\":\"IDS_INSTRUMENTCATEGORY\"},{\"fieldName\":\"sinstrumentid\",\"label\":\"IDS_INSTRUMENTID\"},{\"fieldName\":\"sinstrumentname\",\"label\":\"IDS_INSTRUMENTNAME\"},{\"fieldName\":\"sproductname\",\"label\":\"IDS_SAMPLETYPE\"},{\"fieldName\":\"stransdisplaystatus\",\"label\":\"IDS_STATUS\"},{\"fieldName\":\"username\",\"label\":this.props.Login.masterData.SelectedBatchmaster&&this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.INITIATED?\"IDS_BATCHINITIATEDBY\":this.props.Login.masterData.SelectedBatchmaster&&this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED?\"IDS_BATCHCOMPLETEDBY\":\"IDS_BATCHCREATEDBY\"}];var stransactionstatuscode=this.props.Login.masterData.SelectedFilterStatus?String(this.props.Login.masterData.SelectedFilterStatus.ntransactionstatus):null;if(this.state.selectedRecord&&this.state.selectedRecord[\"nfiltertransstatus\"]!==undefined){stransactionstatuscode=this.state.selectedRecord[\"nfiltertransstatus\"].value===String(0)?null:String(this.state.selectedRecord[\"nfiltertransstatus\"].value);}var obj=convertDateValuetoString(this.props.Login.masterData.realFromDate,this.props.Login.masterData.realToDate,this.props.Login.userInfo);var editParam={screenName:\"IDS_BATCHCREATION\",operation:\"update\",primaryKeyField:\"nbatchmastercode\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editId,masterData:this.props.Login.masterData,naddcontrolCode:addId,nsampletypecode:this.props.Login.masterData.realSampleTypeValue?this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue?this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA};var filterParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\",fecthInputObject:{fromDate:obj.fromDate,toDate:obj.toDate,userInfo:this.props.Login.userInfo,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,napprovalconfigcode:this.state.ApprovalVersionValue?this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA,ntranscode:this.state.FilterStatusValue?this.state.FilterStatusValue.value:transactionStatus.DRAFT,nsampletypecode:this.props.Login.masterData.defaultSampleType?this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA//fromDate, toDate, \n//stransactionstatuscode,\n//activeBCTab: this.props.Login.activeBCTab || \"IDS_COMPONENT\"\n},masterData:this.props.Login.masterData,//unchangeList: [\"FromDate\", \"ToDate\", \"SelectedFilterStatus\"],\nsearchFieldList:this.searchFieldList};this.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto},// {\n//     \"label\": \"IDS_SAMPLETYPE\",\n//     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\n// }, \n{\"label\":\"IDS_REGISTRATIONTYPE\",\"value\":this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.sregtypename?this.props.Login.masterData.realRegTypeValue.sregtypename:\"NA\"// \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\n// this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\n},{\"label\":\"IDS_REGISTRATIONSUBTYPE\",\"value\":this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?this.props.Login.masterData.realRegSubTypeValue.sregsubtypename:\"NA\"},{\"label\":\"IDS_BATCHSTATUS\",\"value\":this.props.Login.masterData.realdefaultFilterStatus&&this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus?this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus:\"NA\"}// {\n//     \"label\": \"IDS_CONFIGVERSION\",\n//     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\n// }\n];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd \"},/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData})),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(\"span\",{onClick:function onClick(){return _this3.setState({sidebarview:!_this3.state.sidebarview});},className:\"sidebar-view-btn\"},!this.state.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"})),/*#__PURE__*/React.createElement(ListMaster,{masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.Batchmaster||[],selectedMaster:this.props.Login.masterData.SelectedBatchmaster,primaryKeyField:\"nbatchmastercode\",userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData//getMasterDetail={this.props.getSelectedBatchCreationDetail}\n,getMasterDetail:function getMasterDetail(batch){return _this3.props.getSelectedBatchCreationDetail(batch,_this3.props.Login.userInfo,_this3.props.Login.masterData);},inputParam:getBatch,screenName:this.props.intl.formatMessage({id:\"IDS_BATCHCREATION\"})//mainField=\"stestname\"\n,mainField:\"sbatcharno\",firstField:\"stestname\",secondField:\"sinstrumentname\",selectedListName:\"SelectedBatchmaster\",objectName:\"BatchCreation\",listName:\"IDS_BATCHCREATION\",needValidation:false,hidePaging:false// subFields={\n//     [\n//         { [designProperties.VALUE]: \"sinstrumentcatname\" },\n//         { [designProperties.VALUE]: \"sinstrumentname\" },\n//         // { [designProperties.VALUE]: \"smahname\" },\n//         // { [designProperties.VALUE]: \"stransactionstatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\n//     ]\n// }\n,needFilter:true,needMultiSelect:false,subFieldsLabel:true,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,filterColumnData:this.props.filterColumnData,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam,isClearSearch:this.props.Login.isClearSearch// skip={this.state.skip}\n// take={this.state.take}\n// handlePageChange={this.handlePageChange}\n,addId:addId,showFilterIcon:true,userRoleControlRights:this.state.userRoleControlRights,reloadData:this.reloadData,openModal:function openModal(){return _this3.props.getBatchSection(addParam);}// openModal={() => this.props.getTestInstrumentComboService(addParam)}\n,commonActions:/*#__PURE__*/ // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\nReact.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this3.props.getTestInstrumentComboService(addParam);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"}),\"data-for\":\"tooltip-common-wrap\"//onClick={() => this.reloadData(false)} \n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}})))// </Tooltip>\n,filterComponent:[{\"IDS_FILTER\":/*#__PURE__*/React.createElement(BatchCreationFilter,{fromDate:this.state.selectedFilter[\"fromDate\"]!=undefined?rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"fromDate\"]):this.fromDate,toDate:this.state.selectedFilter[\"toDate\"]!=undefined?rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"toDate\"]):this.toDate,SampleType:this.state.SampleType||[],SampleTypeValue:this.props.Login.masterData.defaultSampleType||[],RegType:this.state.RegistrationType||[],RegTypeValue:this.props.Login.masterData.defaultRegistrationType||[],RegSubType:this.state.RegistrationSubType||[],RegSubTypeValue:this.state.nregsubtypecode||[],DesignTemplateMappingValue:this.props.Login.masterData.DesignTemplateMappingValue||[],FilterStatus:this.state.BCFilterStatus||[],FilterStatusValue:this.state.FilterStatusValue||[],ApprovalVersion:this.state.ApprovalConfigVersion||[],ApprovalVersionValue:this.state.ApprovalVersionValue||[],REJobStatus:this.state.REJobStatus||[],JobStatusValue:this.props.Login.masterData.defaultjobstatus||[],Test:this.state.Testvalues||[],TestValue:this.props.Login.masterData.selectedTestSynonym||[],onFilterComboChange:this.onFilterComboChange,handleDateChange:this.handleDateChange,handleFilterDateChange:this.handleFilterDateChange,userInfo:this.props.Login.userInfo,onDesignTemplateChange:this.onDesignTemplateChange,DynamicDesignMapping:this.state.stateDynamicDesign||[]})}]})),/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'8':\"10\")},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.Batchmaster&&this.props.Login.masterData.Batchmaster.length>0&&this.props.Login.masterData.SelectedBatchmaster?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedBatchmaster.sbatcharno),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},this.props.Login.masterData.SelectedBatchTestTAT&&this.props.Login.masterData.SelectedBatchTestTAT.Deviation&&this.props.intl.formatMessage({id:\"IDS_DEVIATION\"})+\" : \"+this.props.Login.masterData.SelectedBatchTestTAT.Deviation,/*#__PURE__*/React.createElement(MediaLabel,{className:\"btn btn-outlined \".concat(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED?\"outline-initiate\":this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.COMPLETED?\"outline-success\":this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.CANCELLED?\"outline-danger\":\"outline-secondary\",\" btn-sm ml-3\")},this.props.Login.masterData.SelectedBatchmaster.stransdisplaystatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"openelnsheet\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",hidden:this.state.userRoleControlRights.indexOf(elnSheetId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_OPENELNSHEET\"})//onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \n},/*#__PURE__*/React.createElement(Image,{src:elnimage,alt:\"filer-icon action-icons-wrap\",width:\"20\",height:\"20\",className:\"ActionIconColor img-normalize\",onClick:function onClick(){return _this3.openClosePortal(_this3.props.Login.masterData.SelectedBatchmaster,cancelId);},\"data-place\":\"left\"})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"view\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_VIEWINFO\"})// hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\n,onClick:function onClick(){return _this3.props.viewInfo(_this3.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this3.props.Login.userInfo,_this3.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"editBatchCreation\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),onClick:function onClick(){return _this3.fetchEditData(editParam);}// onClick={() => this.props.getActiveBatchCreationService(editParam,\n//     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt//  title={this.props.intl.formatMessage({ id: \"IDS_EDITBATCH\" })}\n})),/*#__PURE__*/ // this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate == true ?\nReact.createElement(Nav.Link,{name:\"initiateBatchCreation\"//  data-for=\"tooltip-common-wrap\" \n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_BATCHINITIATE\"}),hidden:this.state.userRoleControlRights.indexOf(testStartId)===-1,className:\"btn btn-circle outline-grey mr-2\"//role=\"button\"\n,onClick:function onClick(){return _this3.testPopUpStartActions(testStartId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlay}))// :\"\"\n,/*#__PURE__*/React.createElement(Nav.Link,{name:\"completeBatchCreation\",hidden:this.state.userRoleControlRights.indexOf(completeId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COMPLETE\"}),onClick:function onClick(){return _this3.completePopUpStartActions(completeId);}//onClick={() => this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,completeId)}\n// onClick={() => this.props.validateBatchComplete({\n//     masterData: this.props.Login.masterData,\n//     userInfo: this.props.Login.userInfo,\n//     userRoleControlRights: this.props.Login.userRoleControlRights,\n//     ncontrolCode: completeId,\n//     nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\n// })}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheckCircle// title={this.props.intl.formatMessage({ id: \"IDS_COMPLETEBATCH\" })}\n})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteBatchCreation\",className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(){return _this3.ConfirmDelete(_this3.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteBatchCreation\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",hidden:this.state.userRoleControlRights.indexOf(cancelId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCEL\"})//onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \n},/*#__PURE__*/React.createElement(Image,{src:reject,alt:\"filer-icon action-icons-wrap\",width:\"20\",height:\"20\",className:\"ActionIconColor img-normalize\",onClick:function onClick(){return _this3.cancelBatch(_this3.props.Login.masterData.SelectedBatchmaster,cancelId);},\"data-place\":\"left\"})),reportActionList.length>0?/*#__PURE__*/React.createElement(CustomPopover,{nav:true,data:reportActionList,Button:true,hideIcon:true,btnClasses:\"btn-circle btn_grey ml-2\",textKey:\"value\",dynamicButton:function dynamicButton(value){return _this3.reportMethod(value);},userRoleControlRights:this.state.userRoleControlRights}):\"\")))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,{className:\"at-tabs\"},/*#__PURE__*/React.createElement(CustomTab,{activeKey:this.props.Login.batchactiveKey?this.props.Login.batchactiveKey:\"IDS_SAMPLE\",tabDetail:this.tabDetail(),onTabChange:this.onTabChange})))))):\"\"))))),/*#__PURE__*/React.createElement(PortalModal,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{centered:true,scrollable:true,bsPrefix:\"model model_zindex\",show:this.props.Login.openELNSheet// show={this.state.openELNSheet}\n,onHide:this.openClosePortal,dialogClassName:\"\".concat(this.props.nflag&&this.props.nflag===2?'alert-popup':'',\" modal-fullscreen\"),backdrop:\"static\",keyboard:false,enforceFocus:false,\"aria-labelledby\":\"example-custom-modal-styling-title\"},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,{style:{\"line-height\":\"1.0\"},id:\"example-custom-modal-styling-title\"},this.props.intl.formatMessage({id:\"IDS_ELNSHEET\"})),/*#__PURE__*/React.createElement(ReactTooltip,{globalEventOff:\"true\"})),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(\"div\",{className:\"modal-inner-content\"},/*#__PURE__*/React.createElement(Iframe// url={\"http://agl69:8080/QuaLISWeb/#/login\"}\n,{url:this.props.Login.masterData.enlLink,width:\"98%\",height:\"1000px\",id:\"reportviewID\",className:\"reportview\"//display=\"initial\"\n/// position=\"relative\" \n})))))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,size:\"lg\",closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.operation===\"createSample\"?this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}):this.props.Login.operation===\"initiate\"||this.props.Login.operation===\"view\"||this.props.Login.operation===\"complete\"?this.props.intl.formatMessage({id:\"IDS_BATCH\"}):this.props.Login.operation===\"createiqcsample\"?this.props.intl.formatMessage({id:\"IDS_BATCHIQCSAMPLE\"}):this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.operation===\"create\"||this.props.Login.operation===\"update\"?batchMandatoryFields//  : this.props.Login.operation === \"initiate\"  ?\n//    this.initiateMandatoryFields \n//  : this.props.Login.operation === \"complete\" ?\n//    this.completeMandatoryFields\n:this.props.Login.operation===\"createiqcsample\"?this.materialIqcMandatory:[],showSaveContinue:this.state.showSaveContinue,noSave:this.props.Login.operation===\"view\"?true:false,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.operation===\"create\"||this.props.Login.operation===\"update\"?/*#__PURE__*/React.createElement(AddBatchCreation,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,onNumericInputOnChange:this.onNumericInputOnChange,handleDateChange:this.handleDateChange,Test:this.state.Testvalues||[],selectedInstrumentCategory:this.state.selectedInstCategory,InstrumentCategory:this.state.InstrumentCategory,Instrument:this.state.Instrument,selectedInstrument:this.state.selectedInstrument,productCategory:this.state.ProductCategory,selectedProductCategory:this.state.selectedProductCategory,TestValue:this.state.selectedTestSynonym||[],product:this.state.Product||[],instrumentID:this.state.InstrumentID||[],selectedProduct:this.state.selectedProduct||[],studyPlanList:this.props.Login.studyPlanList||[],manufacturerList:this.props.Login.productManufacturerList||[],maHolderList:this.props.Login.maHolderList||[],timeZoneList:this.props.Login.timeZoneList||[],selectedBacthCreation:this.props.Login.masterData.SelectedBatchmaster||{},operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,selectedInstrumentId:this.state.selectedInstrumentId,onMultiColumnValue:this.onMultiColumnValue,onMultiColumnMAHChange:this.onMultiColumnMAHChange,batchCreationEditStatusList:this.props.Login.batchCreationEditStatusList,Section:this.state.Section,selectedSection:this.state.selectedSection}):this.props.Login.operation===\"createSample\"?/*#__PURE__*/React.createElement(AddSample,{onInputOnChange:this.onInputOnChange,getProductByCategory:this.getProductByCategory,onComboChange:this.onComboChange,handleDateChange:this.handleDateChange,userInfo:this.props.Login.userInfo,productCategoryList:this.props.productCategoryList,productList:this.props.productList,componentList:this.props.componentList,getDataForAddComponent:this.getDataForAddComponent,clearComponentInput:this.props.clearComponentInput,samples:this.state.samples||[],headerSelectionChange:this.headerSelectionChange,selectionChange:this.selectionChange,addedComponentList:this.state.addedComponentList||[],addedHeaderSelectionChange:this.addedHeaderSelectionChange,addedSelectionChange:this.addedSelectionChange//dataStateChange={this.dataStateChange} \n,userRoleControlRights:this.props.userRoleControlRights,controlMap:this.props.controlMap,inputParam:this.props.inputParam,screenName:this.props.screenName,addSelectAll:this.state.addSelectAll,deleteSelectAll:this.state.deleteSelectAll,onDeleteSelectedComponent:this.onDeleteSelectedComponent,componentPopupSkip:this.props.componentPopupSkip,componentPopupTake:this.props.componentPopupTake,componentPageSizes:this.props.componentPageSizes,nneedsubsample:this.state.nregsubtypecode&&this.state.nregsubtypecode.item.nneedsubsample}):this.props.Login.operation===\"initiate\"||this.props.Login.operation===\"complete\"?/*#__PURE__*/React.createElement(AddBatchinitiate,{userInfo:this.props.Login.userInfo,operation:this.props.Login.operation,handleDateChange:this.handleDateChange,selectedRecord:this.state.selectedRecord,onInputOnChange:this.onInputOnChange,currentTime:this.props.Login.currentTime||[]}):this.props.Login.operation===\"view\"?/*#__PURE__*/React.createElement(Card,{className:\"one\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ViewInfo,{userInfo:this.props.Login.userInfo,selectedRecordView:this.props.Login.masterData.selectedRecordView,viewInfoFields:viewInfoFields}))):this.props.Login.operation===\"createiqcsample\"?/*#__PURE__*/React.createElement(AddMaterialIqc,{userInfo:this.props.Login.userInfo,operation:this.props.Login.operation,materialCategory:this.state.MaterialCategory,selectedMaterialType:this.state.selectedMaterialType,selectedMaterialCategory:this.state.selectedMaterialCategory,onComboChange:this.onComboChange,selectedMaterial:this.state.selectedMaterial,screenName:this.props.intl.formatMessage({id:\"IDS_SPECIFICATION\"}),handleSaveClick:this.handleSaveClick,material:this.state.Material,materialInventory:this.state.MaterialInventory,AddSpec:this.AddSpec,onInputOnChange:this.onInputOnChange,currentTime:this.props.Login.currentTime||[],loadSpec:this.props.Login.loadSpec,selectedMaterialInventory:this.state.selectedMaterialInventory,selectedInventoryUnit:this.props.Login.masterData.selectedInventoryUnit,AgaramTree:this.props.Login.AgaramTree,openNodes:this.props.Login.OpenNodes,onTreeClick:this.onTreeClick,focusKey:this.props.Login.FocusKey,activeKey:this.props.Login.batchactiveKey,Specification:this.props.Login.Specification,selectedSpec:this.props.Login.selectedSpec,selectedRecord:this.state.selectedRecord,onSpecChange:this.onspecChange,openSpecModal:this.props.Login.openSpecModal,closeModal:this.closeModal}):\"\"}):\"\",this.state.showConfirmAlert?this.confirmAlert():\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state=this.state,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,selectedRecord=_this$state.selectedRecord,filterData=_this$state.filterData,addedComponentList=_this$state.addedComponentList,filterStatusList=_this$state.filterStatusList,dataState=_this$state.dataState,sahDataState=_this$state.sahDataState,bahDataState=_this$state.bahDataState,chDataState=_this$state.chDataState,testCommentDataState=_this$state.testCommentDataState,SampleType=_this$state.SampleType,RegistrationType=_this$state.RegistrationType,RegistrationSubType=_this$state.RegistrationSubType,BCFilterStatus=_this$state.BCFilterStatus,REJobStatus=_this$state.REJobStatus,Testvalues=_this$state.Testvalues,ApprovalConfigVersion=_this$state.ApprovalConfigVersion,skip=_this$state.skip,take=_this$state.take,testskip=_this$state.testskip,testtake=_this$state.testtake,selectedFilter=_this$state.selectedFilter,InstrumentCategory=_this$state.InstrumentCategory,selectedInstCategory=_this$state.selectedInstCategory,ProductCategory=_this$state.ProductCategory,Instrument=_this$state.Instrument,selectedInstrument=_this$state.selectedInstrument,selectedTestSynonym=_this$state.selectedTestSynonym,nregsubtypecode=_this$state.nregsubtypecode,selectedProductCategory=_this$state.selectedProductCategory,Product=_this$state.Product,selectedProduct=_this$state.selectedProduct,samples=_this$state.samples,addSelectAll=_this$state.addSelectAll,deleteSelectAll=_this$state.deleteSelectAll,ApprovalVersionValue=_this$state.ApprovalVersionValue,FilterStatusValue=_this$state.FilterStatusValue,Section=_this$state.Section,selectedSection=_this$state.selectedSection,sampleGridItem=_this$state.sampleGridItem,subsampleGridItem=_this$state.subsampleGridItem,_this$state$testGridI=_this$state.testGridItem,testGridItem=_this$state$testGridI===void 0?[]:_this$state$testGridI,DynamicGridItem=_this$state.DynamicGridItem,samplegridmoreitem=_this$state.samplegridmoreitem,DynamicGridMoreItem=_this$state.DynamicGridMoreItem,MaterialCategory=_this$state.MaterialCategory,selectedMaterialType=_this$state.selectedMaterialType,Material=_this$state.Material,selectedMaterial=_this$state.selectedMaterial,selectedMaterialCategory=_this$state.selectedMaterialCategory,MaterialInventory=_this$state.MaterialInventory,selectedMaterialInventory=_this$state.selectedMaterialInventory,Specification=_this$state.Specification,selectedSpec=_this$state.selectedSpec,addedSamplesList=_this$state.addedSamplesList,testGridArnoItems=_this$state.testGridArnoItems,InstrumentID=_this$state.InstrumentID,selectedInstrumentId=_this$state.selectedInstrumentId,sinstrumentid=_this$state.sinstrumentid;var isStateChanged=false;var bool=false;addedSamplesList=[];samples=[];if(this.props.Login.masterData.RegistrationSubType&&this.props.Login.masterData.RegistrationSubType!==previousProps.Login.masterData.RegistrationSubType){var _dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5//, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \n};bool=true;}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;isStateChanged=true;SampleType=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",'nsampletypecode','ascending','nsampletypecode',false);RegistrationType=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",\"nsorter\",'ascending','nregtypecode',false);RegistrationSubType=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",'ascending','nregsubtypecode',false);BCFilterStatus=constructOptionList(this.props.Login.masterData.BCFilterStatus||[],\"ntransactionstatus\",\"sfilterstatus\",\"nsorter\",'ascending',\"ntransactionstatus\",false);REJobStatus=constructOptionList(this.props.Login.masterData.REJobStatus||[],'njobstatuscode','sidsjobstatusname','ascending','njobstatuscode',false);Testvalues=constructOptionList(this.props.Login.masterData.Testvalues||[],'ntestcode','stestname','ascending','ntestcode',false);ApprovalConfigVersion=constructOptionList(this.props.Login.masterData.ApprovalConfigVersion||[],'napprovalconfigversioncode','sversionname','ascending','napprovalconfigversioncode',false);InstrumentCategory=constructOptionList(this.props.Login.masterData.instrumentCategory||[],'ninstrumentcatcode','sinstrumentcatname','ascending','ninstrumentcatcode',false);Instrument=constructOptionList(this.props.Login.masterData.instrument||[],'ninstrumentnamecode','sinstrumentname','ascending','ninstrumentcode',false);ProductCategory=constructOptionList(this.props.Login.masterData.productcategory||[],'nproductcatcode','sproductcatname','ascending','nproductcatcode',false);Product=constructOptionList(this.props.Login.masterData.product||[],'nproductcode','sproductname','ascending','nproductcode',false);Section=constructOptionList(this.props.Login.masterData.Section||[],'nsectioncode','ssectionname','ascending','nsectioncode',false);MaterialCategory=constructOptionList(this.props.Login.masterData.MaterialCategory||[],'nmaterialcatcode','smaterialcatname','ascending','nmaterialcatcode',false);Material=constructOptionList(this.props.Login.masterData.Material||[],'nmaterialcode','smaterialname','ascending','nmaterialcode',false);MaterialInventory=constructOptionList(this.props.Login.masterData.MaterialInventory||[],'nmaterialinventtranscode','sinventoryid','ascending','nmaterialinventtranscode',false);InstrumentID=constructOptionList(this.props.Login.masterData.instrumentID||[],'ninstrumentcode','sinstrumentid','ascending','ninstrumentcode',false);skip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=this.props.Login.testtake||testtake;var selectFilterStatus={ntransactionstatus:transactionStatus.PARTIAL,sfilterstatus:this.props.intl.formatMessage({id:\"IDS_PARTIAL\"}),scolorhexcode:\"#800000\"};var selectedFilters=this.props.Login.masterData.BCFilterStatus||[];var selectedFiltersNew=JSON.parse(JSON.stringify(selectedFilters));var index=selectedFiltersNew.findIndex(function(item){return item.ntransactionstatus===transactionStatus.PARTIAL;});if(selectedFiltersNew.length>0&&index===-1){selectedFiltersNew.push(selectFilterStatus);}selectedFilter=selectedFiltersNew;SampleType=SampleType.get(\"OptionList\");RegistrationType=RegistrationType.get(\"OptionList\");RegistrationSubType=RegistrationSubType.get(\"OptionList\");BCFilterStatus=BCFilterStatus.get(\"OptionList\");REJobStatus=REJobStatus.get(\"OptionList\");Testvalues=Testvalues.get(\"OptionList\");ApprovalConfigVersion=ApprovalConfigVersion.get(\"OptionList\");InstrumentCategory=InstrumentCategory.get(\"OptionList\");Instrument=Instrument.get(\"OptionList\");ProductCategory=ProductCategory.get(\"OptionList\");Product=Product.get(\"OptionList\");Section=Section.get(\"OptionList\");MaterialCategory=MaterialCategory.get(\"OptionList\");Material=Material.get(\"OptionList\");MaterialInventory=MaterialInventory.get(\"OptionList\");InstrumentID=InstrumentID.get(\"OptionList\");//selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory || [];\nsamples=this.props.Login.masterData.samples;addSelectAll=false;deleteSelectAll=true;nregsubtypecode=this.props.Login.masterData.defaultRegistrationSubType?{label:this.props.Login.masterData.defaultRegistrationSubType.sregsubtypename,value:this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,item:this.props.Login.masterData.defaultRegistrationSubType}:\"\";if(this.props.Login.masterData.selectedTestSynonym!==previousProps.Login.masterData.selectedTestSynonym){selectedTestSynonym=this.props.Login.masterData.selectedTestSynonym?{label:this.props.Login.masterData.selectedTestSynonym.stestname,value:this.props.Login.masterData.selectedTestSynonym.ntestcode,item:this.props.Login.masterData.selectedTestSynonym}:\"\";var stestname=selectedTestSynonym.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{stestname:stestname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedProductcategory!==previousProps.Login.masterData.selectedProductcategory){selectedProductCategory=this.props.Login.masterData.selectedProductcategory?{label:this.props.Login.masterData.selectedProductcategory.sproductcatname,value:this.props.Login.masterData.selectedProductcategory.nproductcatcode,item:this.props.Login.masterData.selectedProductcategory}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedProduct!==previousProps.Login.masterData.selectedProduct){selectedProduct=this.props.Login.masterData.selectedProduct?{label:this.props.Login.masterData.selectedProduct.sproductname,value:this.props.Login.masterData.selectedProduct.nproductcode,item:this.props.Login.masterData.selectedProduct}:\"\";var sproductname=selectedProduct.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sproductname:sproductname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedInstrumentCategory!==previousProps.Login.masterData.selectedInstrumentCategory){selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory?{label:this.props.Login.masterData.selectedInstrumentCategory.sinstrumentcatname,value:this.props.Login.masterData.selectedInstrumentCategory.ninstrumentcatcode,item:this.props.Login.masterData.selectedInstrumentCategory}:\"\";var sinstrumentcatname=selectedInstCategory.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sinstrumentcatname:sinstrumentcatname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedInstrument!==previousProps.Login.masterData.selectedInstrument){selectedInstrument=this.props.Login.masterData.selectedInstrument?{label:this.props.Login.masterData.selectedInstrument.sinstrumentname,value:this.props.Login.masterData.selectedInstrument.ninstrumentcode,item:this.props.Login.masterData.selectedInstrument}:\"\";var sinstrumentname=selectedInstrument.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sinstrumentname:sinstrumentname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedInstrumentId!==previousProps.Login.masterData.selectedInstrumentId){selectedInstrumentId=this.props.Login.masterData.selectedInstrumentId?{label:this.props.Login.masterData.selectedInstrumentId.sinstrumentid,value:this.props.Login.masterData.selectedInstrumentId.ninstrumentcode,item:this.props.Login.masterData.selectedInstrumentId}:\"\";var _sinstrumentid=selectedInstrumentId.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sinstrumentid:_sinstrumentid},selectedRecord);isStateChanged=true;}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});isStateChanged=true;}if(this.props.Login.selectedComponentList!==previousProps.Login.selectedComponentList){addedComponentList=this.props.Login.selectedComponentList;isStateChanged=true;// this.setState({ addedComponentList });\n}if(this.props.Login.masterData.defaultApprovalConfigVersion!==previousProps.Login.masterData.defaultApprovalConfigVersion){ApprovalVersionValue=this.props.Login.masterData.defaultApprovalConfigVersion?{label:this.props.Login.masterData.defaultApprovalConfigVersion.sversionname,value:this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,item:this.props.Login.masterData.defaultApprovalConfigVersion}:\"\";isStateChanged=true;}if(this.props.Login.masterData.defaultFilterStatus!==previousProps.Login.masterData.defaultFilterStatus){FilterStatusValue=this.props.Login.masterData.defaultFilterStatus?{label:this.props.Login.masterData.defaultFilterStatus.sfilterstatus,value:this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,item:this.props.Login.masterData.defaultFilterStatus}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedSection!==previousProps.Login.masterData.selectedSection){selectedSection=this.props.Login.masterData.selectedSection?{label:this.props.Login.masterData.selectedSection.ssectionname,value:this.props.Login.masterData.selectedSection.nsectioncode,item:this.props.Login.masterData.selectedSection}:\"\";var ssectionname=selectedSection.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{ssectionname:ssectionname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialType!==previousProps.Login.masterData.selectedMaterialType){selectedMaterialType=this.props.Login.masterData.selectedMaterialType?{label:this.props.Login.masterData.selectedMaterialType.smaterialtypename,value:this.props.Login.masterData.selectedMaterialType.nmaterialtypecode,item:this.props.Login.masterData.selectedMaterialType}:\"\";selectedRecord[\"smaterialtypename\"]=this.props.Login.masterData.selectedMaterialType.smaterialtypename;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialCategory!==previousProps.Login.masterData.selectedMaterialCategory){selectedMaterialCategory=this.props.Login.masterData.selectedMaterialCategory?{label:this.props.Login.masterData.selectedMaterialCategory.smaterialcatname,value:this.props.Login.masterData.selectedMaterialCategory.nmaterialcatcode,item:this.props.Login.masterData.selectedMaterialCategory}:\"\";selectedRecord[\"smaterialcatname\"]=this.props.Login.masterData.selectedMaterialCategory.smaterialcatname;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterial!==previousProps.Login.masterData.selectedMaterial){selectedMaterial=this.props.Login.masterData.selectedMaterial?{label:this.props.Login.masterData.selectedMaterial.smaterialname,value:this.props.Login.masterData.selectedMaterial.nmaterialcode,item:this.props.Login.masterData.selectedMaterial}:\"\";selectedRecord[\"smaterialname\"]=this.props.Login.masterData.selectedMaterial.smaterialname;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialInventory!==previousProps.Login.masterData.selectedMaterialInventory){selectedMaterialInventory=this.props.Login.masterData.selectedMaterialInventory?{label:this.props.Login.masterData.selectedMaterialInventory.sinventoryid,value:this.props.Login.masterData.selectedMaterialInventory.nmaterialinventtranscode,item:this.props.Login.masterData.selectedMaterialInventory}:\"\";selectedRecord[\"sinventoryid\"]=this.props.Login.masterData.selectedMaterialInventory&&this.props.Login.masterData.selectedMaterialInventory.sinventoryid!=null?this.props.Login.masterData.selectedMaterialInventory.sinventoryid:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedInventoryUnit!==previousProps.Login.masterData.selectedInventoryUnit){//selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\nselectedRecord[\"savailablequatity\"]=this.props.Login.masterData.selectedInventoryUnit&&this.props.Login.masterData.selectedInventoryUnit.savailablequatity!=null?this.props.Login.masterData.selectedInventoryUnit.savailablequatity:\"\";selectedRecord[\"susedquantity\"]=\"\";selectedRecord[\"sremarks\"]=\"\";isStateChanged=true;}if(this.props.Login.isselectedrecordempty){selectedRecord={};isStateChanged=true;}if(this.props.Login.masterData.Specification!==previousProps.Login.masterData.Specification){//selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\nSpecification=this.props.Login.masterData.Specification&&this.props.Login.masterData.Specification!=null?this.props.Login.masterData.Specification:\"\";isStateChanged=true;}if(this.props.Login.selectedSpec!==previousProps.Login.selectedSpec){selectedRecord[\"selectedSpec\"]=this.props.Login.selectedSpec&&this.props.Login.selectedSpec!=null?this.props.Login.selectedSpec:\"\";isStateChanged=true;}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;isStateChanged=true;}if(this.props.Login.masterData.DynamicDesign&&this.props.Login.masterData.DynamicDesign!==previousProps.Login.masterData.DynamicDesign){var dynamicColumn=JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);testGridArnoItems=dynamicColumn.testListFields.testlistitem?dynamicColumn.testListFields.testlistitem:[];testGridItem[0]=dynamicColumn.testListFields.releasetestfields[0]?dynamicColumn.testListFields.releasetestfields[0]:[];sampleGridItem=dynamicColumn.samplegriditem?dynamicColumn.samplegriditem:[];subsampleGridItem=dynamicColumn.subsamplelistitem?dynamicColumn.subsamplelistitem:[];samplegridmoreitem=dynamicColumn.samplegridmoreitem?dynamicColumn.samplegridmoreitem:[];DynamicGridMoreItem=_toConsumableArray(samplegridmoreitem);DynamicGridItem=[].concat(_toConsumableArray(testGridArnoItems),_toConsumableArray(testGridItem),_toConsumableArray(sampleGridItem),_toConsumableArray(subsampleGridItem));isStateChanged=true;}}// if(this.props.Login.selectedRecord !== previousProps.Login.selectedRecord){\n//     // let selectedRecord = {};\n//     let MaterialCategory=constructOptionList(this.props.Login.selectedRecord.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\n//     'ascending', 'nmaterialcatcode', false);\n//     let Material =constructOptionList(this.props.Login.selectedRecord.Material || [], 'nmaterialcode', 'smaterialname',\n//     'ascending', 'nmaterialcode', false);\n//     let MaterialInventory=constructOptionList(this.props.Login.selectedRecord.MaterialInventory || [], 'nmaterialinventorycode', 'sinventoryid',\n//     'ascending', 'nmaterialinventorycode', false);\n//      MaterialCategory = MaterialCategory.get(\"OptionList\")\n//      Material = Material.get(\"OptionList\")\n//      MaterialInventory = MaterialInventory.get(\"OptionList\")\n//      selectedRecord[\"MaterialCategory\"]=MaterialCategory\n//      selectedRecord[\"Material\"]=Material\n//      selectedRecord[\"MaterialInventory\"]=MaterialInventory\n//  if(this.props.Login.selectedRecord.selectedMaterialType !== previousProps.Login.selectedRecord.selectedMaterialType) {\n//         let selectedMaterialType = this.props.Login.selectedRecord.selectedMaterialType ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename,\n//             value: this.props.Login.selectedRecord.selectedMaterialType.nmaterialtypecode || this.props.Login.selectedRecord.selectedMaterialType.item.value,\n//             item:  this.props.Login.selectedRecord.selectedMaterialType.item ? this.props.Login.selectedRecord.selectedMaterialType.item : this.props.Login.selectedRecord.selectedMaterialType\n//         }:\"\"\n//         selectedRecord[\"selectedMaterialType\"]=selectedMaterialType;\n//         selectedRecord[\"smaterialtypename\"]=this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename;\n//         isStateChanged = true;\n//     }\n//  if (this.props.Login.selectedRecord.selectedMaterialCategory !== previousProps.Login.selectedRecord.selectedMaterialCategory) {\n//         let selectedMaterialCategory = this.props.Login.selectedRecord.selectedMaterialCategory ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname ,\n//             value: this.props.Login.selectedRecord.selectedMaterialCategory.nmaterialcatcode || this.props.Login.selectedRecord.selectedMaterialCategory.item.value ,\n//             item:  this.props.Login.selectedRecord.selectedMaterialCategory.item  ? this.props.Login.selectedRecord.selectedMaterialCategory.item  : this.props.Login.selectedRecord.selectedMaterialCategory \n//         }:\"\"\n//         selectedRecord[\"selectedMaterialCategory\"]=selectedMaterialCategory;\n//         selectedRecord[\"smaterialcatname\"]=this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname \n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedMaterial !== previousProps.Login.selectedRecord.selectedMaterial) {\n//          let selectedMaterial = this.props.Login.selectedRecord.selectedMaterial ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterial.smaterialname,\n//             value: this.props.Login.selectedRecord.selectedMaterial.nmaterialcode,\n//             item: this.props.Login.selectedRecord.selectedMaterial\n//         }:\"\"\n//         selectedRecord[\"selectedMaterial\"]= selectedMaterial;\n//         selectedRecord[\"smaterialname\"]=this.props.Login.selectedRecord.selectedMaterial.smaterialname;\n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedMaterialInventory !== previousProps.Login.selectedRecord.selectedMaterialInventory) {\n//         let selectedMaterialInventory = this.props.Login.selectedRecord.selectedMaterialInventory ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid,\n//             value: this.props.Login.selectedRecord.selectedMaterialInventory.nmaterialinventorycode,\n//             item: this.props.Login.selectedRecord.selectedMaterialInventory\n//         }:\"\"\n//         selectedRecord[\"selectedMaterialInventory\"]= selectedMaterialInventory;\n//         selectedRecord[\"sinventoryid\"]=this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid;\n//         isStateChanged = true;\n//     }\nif(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){isStateChanged=true;//selectedRecord = this.props.Login.selectedRecord;\nthis.setState({selectedRecord:this.props.Login.selectedRecord});}if(isStateChanged){this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,selectedRecord:selectedRecord,filterData:filterData,addedComponentList:addedComponentList,filterStatusList:filterStatusList,dataState:dataState,sahDataState:sahDataState,bahDataState:bahDataState,chDataState:chDataState,testCommentDataState:testCommentDataState,SampleType:SampleType,RegistrationType:RegistrationType,RegistrationSubType:RegistrationSubType,BCFilterStatus:BCFilterStatus,REJobStatus:REJobStatus,Testvalues:Testvalues,ApprovalConfigVersion:ApprovalConfigVersion,skip:skip,take:take,testskip:testskip,testtake:testtake,selectedFilter:selectedFilter,selectedInstCategory:selectedInstCategory,InstrumentCategory:InstrumentCategory,Instrument:Instrument,selectedInstrument:selectedInstrument,selectedTestSynonym:selectedTestSynonym,nregsubtypecode:nregsubtypecode,ProductCategory:ProductCategory,selectedProductCategory:selectedProductCategory,Product:Product,selectedProduct:selectedProduct,samples:samples,addSelectAll:addSelectAll,deleteSelectAll:deleteSelectAll,ApprovalVersionValue:ApprovalVersionValue,FilterStatusValue:FilterStatusValue,Section:Section,selectedSection:selectedSection,sampleGridItem:sampleGridItem,subsampleGridItem:subsampleGridItem,testGridItem:testGridItem,DynamicGridItem:DynamicGridItem,samplegridmoreitem:samplegridmoreitem,DynamicGridMoreItem:DynamicGridMoreItem,MaterialCategory:MaterialCategory,selectedMaterialType:selectedMaterialType,Material:Material,selectedMaterial:selectedMaterial,selectedMaterialCategory:selectedMaterialCategory,MaterialInventory:MaterialInventory,selectedMaterialInventory:selectedMaterialInventory,Specification:Specification,selectedSpec:selectedSpec,addedSamplesList:addedSamplesList,testGridArnoItems:testGridArnoItems,InstrumentID:InstrumentID,selectedInstrumentId:selectedInstrumentId,sinstrumentid:sinstrumentid});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){// if (props.Login.masterStatus !== \"\") {\n//     if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n//        if(props.Login.operation == \"initiate\"){\n//         toast.warn(props.Login.masterStatus);\n//         //this.state.confirmmsg.confirm(\"warning\", \"Warning!\",  props.Login.masterStatus, undefined, \"ok\", undefined, true, undefined);\n//        }\n//     }\n// }\nif(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;// if (props.Login.selectedRecord !== state.selectedRecord) {\n//     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\n// }\n}// const sampleColumnList = [];\n// if (props.nneedsubsample){\n//     sampleColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\n// }\n// else{\n//     sampleColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\n// }\n}]);return BatchCreation;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,getTestInstrumentComboService:getTestInstrumentComboService,getTestInstrumentCategory:getTestInstrumentCategory,getInstrumentForInstCategory:getInstrumentForInstCategory,getProductBasedInstrument:getProductBasedInstrument,getBatchCreationDetails:getBatchCreationDetails,onActionFilterSubmit:onActionFilterSubmit,getProductcategoryAction:getProductcategoryAction,createBatchmasterAction:createBatchmasterAction,getSamplesForGrid:getSamplesForGrid,getSelectedBatchCreationDetail:getSelectedBatchCreationDetail,createSampleAction:createSampleAction,deleteSampleAction:deleteSampleAction,getActiveBatchCreationService:getActiveBatchCreationService,updateBatchcreationAction:updateBatchcreationAction,deleteBatchCreation:deleteBatchCreation,batchInitiateAction:batchInitiateAction,getBCRegistrationSubType:getBCRegistrationSubType,batchCompleteAction:batchCompleteAction,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData,getBatchhistoryAction:getBatchhistoryAction,getBatchSection:getBatchSection,viewInfo:viewInfo,getIqcSamples:getIqcSamples,getMaterialBasedOnMaterialCategory:getMaterialBasedOnMaterialCategory,getMaterialInventoryBasedOnMaterial:getMaterialInventoryBasedOnMaterial,batchSaveIQCActions:batchSaveIQCActions,getMaterialAvailQtyBasedOnInv:getMaterialAvailQtyBasedOnInv,getBatchIqcSampleAction:getBatchIqcSampleAction,getBCApprovalConfigVersion:getBCApprovalConfigVersion,getBCRegistrationType:getBCRegistrationType,getTreeByMaterial:getTreeByMaterial,getNewRegSpecification:getNewRegSpecification,cancelIQCSampleAction:cancelIQCSampleAction,batchCancelAction:batchCancelAction,batchInitiateDatePopup:batchInitiateDatePopup,batchCompleteDatePopup:batchCompleteDatePopup,getInstrumentID:getInstrumentID,getBatchViewResultAction:getBatchViewResultAction//,batchTAT\n})(injectIntl(BatchCreation));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/batchruncreation/BatchCreation.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Nav","FormGroup","FormLabel","Card","Modal","Image","Button","FontAwesomeIcon","faPencilAlt","faTrashAlt","faCheckCircle","faCopy","faEye","faPlay","faPlus","faSync","callService","crudMaster","updateStore","getTestInstrumentComboService","getTestInstrumentCategory","getProductBasedInstrument","getInstrumentForInstCategory","getBatchCreationDetails","onActionFilterSubmit","getProductcategoryAction","createBatchmasterAction","getSamplesForGrid","getSelectedBatchCreationDetail","createSampleAction","deleteSampleAction","getActiveBatchCreationService","updateBatchcreationAction","deleteBatchCreation","batchInitiateAction","getBCRegistrationSubType","batchCompleteAction","validateEsignCredential","filterColumnData","getBatchhistoryAction","getBatchSection","viewInfo","getIqcSamples","getMaterialBasedOnMaterialCategory","getMaterialInventoryBasedOnMaterial","batchSaveIQCActions","getMaterialAvailQtyBasedOnInv","getBatchIqcSampleAction","getBCApprovalConfigVersion","getBCRegistrationType","getTreeByMaterial","getNewRegSpecification","cancelIQCSampleAction","batchCancelAction","batchInitiateDatePopup","batchCompleteDatePopup","getInstrumentID","getBatchViewResultAction","transactionStatus","designProperties","reportTypeEnum","reportCOAType","RegistrationSubType","DEFAULT_RETURN","showEsign","getControlMap","getStartOfDay","getEndOfDay","formatInputDate","constructOptionList","rearrangeDateFormat","convertDateValuetoString","CF_encryptionData","ConfirmMessage","SlideOutModal","ReadOnlyText","ContentPanel","MediaLabel","ListWrapper","BreadcrumbComponent","Esign","ProductList","CustomPopover","BatchCreationFilter","AddBatchCreation","AddBatchinitiate","CustomTab","SampleTab","BatchhistoryTab","process","AddSample","ListMaster","ViewInfo","Affix","AddMaterialIqc","BatchIqcSampleTab","BatchResultTab","PortalModal","Iframe","ReactTooltip","mapStateToProps","state","Login","BatchCreation","props","sidebarExpandCollapse","setState","sidebarview","completeMandatoryFields","initiateMandatoryFields","materialIqcMandatory","getSamples","selectedbatchmaster","addSampleID","controlMap","has","get","ncontrolcode","ntransactionstatus","INITIATED","COMPLETED","CANCELLED","warn","intl","formatMessage","id","masterData","SelectedBatchmaster","ntestcode","nbatchmastercode","userInfo","realRegTypeValue","nregtypecode","NA","realRegSubTypeValue","nregsubtypecode","Samples","length","addcontrolcode","inputData","realSampleTypeValue","nsampletypecode","nsectioncode","deleteRecord","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","selectedRecord","nbatchsampleCode","fetchUrl","isSingleGet","fecthInputObject","userinfo","jsondata","inputParam","classUrl","methodUrl","Sample","sarno","ssamplearno","stestname","nbatchsamplecode","ndesigntemplatemappingcode","operation","displayName","dataState","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","openModal","screenName","cancelRecord","nbatchsampleiqccode","iqcSample","nmaterialinventtranscode","onTabChange","tabProps","nneedsubsample","item","batchactiveKey","dataStateChange","event","dataResult","sampleState","dataStateBatchHistoryChange","Batchhistory","histortState","dataStateBatchIqcChangeChange","iqcsample","iqcsampleState","dataStateViewChange","Resultview","viewstate","getApprovalVersion","obj","selectedFilter","fromDate","realFromDate","toDate","realToDate","needFilterSubmit","parseInt","defaultSampleType","isneedapprovalfilter","defaultRegistrationSubType","isneedrealFilterStatus","realApproveConfigVersion","ApprovalVersionValue","realdefaultFilterStatus","tabDetail","tabMap","Map","set","gridfillingColumn","DynamicGridItem","DynamicGridMoreItem","ELNTest","sbatcharno","onFilterComboChange","fieldname","dateObj","nflag","defaultRegistrationType","ntranscode","FilterStatusValue","value","inputParamData","fromdate","todate","napprovalversioncode","ApprovalConfigVersion","napprovalconfigversioncode","String","defaultFilterStatus","DesignTemplateMappingValue","getBCFilterTemplate","defaultApprovalConfigVersion","njobstatuscode","defaultjobstatus","getBCFilterStatus","handleFilterDateChange","dateValue","dateName","Date","headerSelectionChange","checked","syntheticEvent","target","sampleList","samples","addedSamplesList","map","findIndex","x","ntransactiontestcode","push","selected","newItem","JSON","parse","stringify","olditem","addSelectAll","deleteSelectAll","sampleListData","deletedListdData","filter","item1","npreregno","deletedList","onTreeClick","activeKey","key","focusKey","keyName","selectedNode","primaryKey","selectionChange","samplesList","dataItem","initialList","valiateCheckAll","handleSaveClick","saveType","failedControls","startLabel","label","mandatoryFields","console","log","selectedSpec","nallottedspeccode","loadSpec","openSpecModal","info","handlePageChange","e","skip","take","ConfirmDelete","selectedBatch","deleteId","confirmMessage","confirm","completePopUpStartActions","completeId","DRAFT","AddSpec","selectedMaterial","undefined","selectedMaterialCategory","ncategorybasedflow","testPopUpStartActions","testStartId","testStartActions","selectedmaster","jsonuidata","totalSample","concat","join","ntransactionsamplecode","nneedmyjob","nneedjoballocation","napprovalconfigcode","nneedtestinitiate","dtransactiondate","currentTime","scomments","BCFilterStatus","sample","savailablequatity","parseFloat","susedquantity","inventoryTransaction","inputRegistrationData","inputMaterialInventoryData","inputBatchData","batchCreationSampleData","batchCreationTestData","batchCreationSampleArray","batchCreationTestArray","samplecombinationuniqueArray","inputMaterialInventoryArrData","nspecsampletypecode","ntemplatemanipulationcode","nregsubtypeversioncode","nmaterialcode","nmaterialcatcode","smaterialcatname","sinventoryid","selectedMaterialInventory","nmaterialinventorycode","smaterial","smaterialname","smaterialtype","selectedMaterialType","smaterialtypename","nmaterialtypecode","sunitname","sremarks","selectedInventoryUnit","nqtyused","selectedTestDetails","ntestgrouptestcode","nmethodcode","PREREGISTER","cancelBatch","cancelId","batchCompleteActions","closeAlert","showConfirmAlert","loading","closeModal","selectedId","onComboChange","comboData","fieldName","naddcontrolCode","sregsubtypename","ssectionname","selectedTestSynonym","ncalibrationreq","needSectionwise","needsection","ninstrumentcatcode","ninstrumentcode","selectedInstrumentId","onNumericInputOnChange","name","onInputOnChange","type","ACTIVE","DEACTIVE","YES","NO","onMultiColumnValue","flag","keys","forEach","objarray","objkey","index","getBatchManufacturerComboChange","onMultiColumnMAHChange","clearComponentInput","componentDefaultSearchDate","openClosePortal","openELNSheet","enlLink","integrationSettings","elnUserInfo","elnSite","link","detail","EncryptData","settedId","encryptedbatchid","userObject","usercode","nelncode","username","selnuserid","userfullname","selnusername","lsusergroup","usergroupcode","nelnusergroupcode","usergroupname","lssitemaster","sitecode","nelnsitecode","encrypteduser","baseURL","slinkname","handleDateChange","onDropImage","attachedFiles","actionType","saveSample","addedsamplelist","sampleArray","samplelist","batchSample","onSaveClick","formRef","nprevioustestcode","selectedSection","selectedInstCategory","selectedInstrument","selectedProduct","unchangeList","searchRef","current","editId","fetchEditData","editParam","validateEsign","sreason","password","onFilterSubmit","reloadData","isFilterSubmit","onClickReport","reportParam","sprimarykeyname","nprimarykey","nreleasebatchcode","ncertificatetypecode","ndecision","PASS","ndecisionstatus","nreporttypecode","SCREENWISE","BATCH","ncoareporttypecode","BATCHPREVIEW","skipbatchvalidation","reportMethod","method","SelectedBatchCreation","controlId","settings","createRef","searchFieldList","sampleMandatoryFields","copyMandatoryFields","temparray","option","LABEL","slanguagetypecode","VALUE","selectAll","reportActionList","batchMandatoryFields","idsName","dataField","mandatoryLabel","controlType","getBatch","addId","elnSheetId","addParam","primaryeyField","viewInfoFields","stransactionstatuscode","SelectedFilterStatus","filterParam","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sfilterstatus","searchedData","Batchmaster","batch","openFilter","closeFilter","isClearSearch","indexOf","SampleType","RegistrationType","REJobStatus","Testvalues","onDesignTemplateChange","stateDynamicDesign","SelectedBatchTestTAT","Deviation","stransdisplaystatus","elnimage","reject","masterStatus","showSaveContinue","InstrumentCategory","Instrument","ProductCategory","selectedProductCategory","Product","InstrumentID","studyPlanList","productManufacturerList","maHolderList","timeZoneList","batchCreationEditStatusList","Section","getProductByCategory","productCategoryList","productList","componentList","getDataForAddComponent","addedComponentList","addedHeaderSelectionChange","addedSelectionChange","onDeleteSelectedComponent","componentPopupSkip","componentPopupTake","componentPageSizes","selectedRecordView","MaterialCategory","Material","MaterialInventory","AgaramTree","OpenNodes","FocusKey","Specification","onspecChange","confirmAlert","previousProps","filterData","filterStatusList","sahDataState","bahDataState","chDataState","testCommentDataState","testskip","testtake","sampleGridItem","subsampleGridItem","testGridItem","samplegridmoreitem","testGridArnoItems","sinstrumentid","isStateChanged","bool","instrumentCategory","instrument","productcategory","product","instrumentID","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","selectedProductcategory","sproductcatname","nproductcatcode","sproductname","nproductcode","selectedInstrumentCategory","sinstrumentcatname","sinstrumentname","Object","values","selectedComponentList","sversionname","isselectedrecordempty","DynamicDesign","dynamicColumn","testListFields","testlistitem","releasetestfields","samplegriditem","subsamplelistitem","error","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col,Nav,FormGroup, FormLabel,Card,Modal,Image,Button} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheckCircle, faCopy, faEye,faPlay,faPlus, faSync \r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport reject from '../../assets/image/reject.svg'\r\nimport  elnimage  from '../../assets/image/sheet-view.svg'\r\nimport {\r\n    callService, crudMaster,updateStore,\r\n    getTestInstrumentComboService,getTestInstrumentCategory,getProductBasedInstrument,\r\n    getInstrumentForInstCategory,getBatchCreationDetails,onActionFilterSubmit,\r\n    getProductcategoryAction,createBatchmasterAction,getSamplesForGrid,\r\n    getSelectedBatchCreationDetail,createSampleAction,deleteSampleAction,\r\n    getActiveBatchCreationService,updateBatchcreationAction,deleteBatchCreation,\r\n    batchInitiateAction,getBCRegistrationSubType,batchCompleteAction,\r\n    validateEsignCredential,filterColumnData,getBatchhistoryAction,getBatchSection,\r\n    viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,\r\n    getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,\r\n    getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType,getTreeByMaterial,\r\n    getNewRegSpecification,cancelIQCSampleAction,batchCancelAction,batchInitiateDatePopup,\r\n    batchCompleteDatePopup,getInstrumentID,getBatchViewResultAction\r\n    //,batchTAT\r\n} from '../../actions';\r\nimport { transactionStatus, designProperties, reportTypeEnum, reportCOAType, \r\n    RegistrationSubType } from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, getControlMap, getStartOfDay, getEndOfDay, \r\nformatInputDate, constructOptionList, rearrangeDateFormat, convertDateValuetoString,CF_encryptionData } from '../../components/CommonScript';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { ReadOnlyText, ContentPanel, MediaLabel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ProductList } from '../product/product.styled';\r\nimport CustomPopover from '../../components/customPopover';\r\nimport BatchCreationFilter from './BatchCreationFilter';\r\nimport AddBatchCreation from './AddBatchCreation';\r\nimport AddBatchinitiate from './AddBatchinitiate';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport SampleTab from './SampleTab';\r\nimport BatchhistoryTab from './BatchhistoryTab';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport AddSample from './AddSample';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport ViewInfo from './ViewInfo';\r\nimport { Affix } from 'rsuite';\r\nimport AddMaterialIqc from './AddMaterialIqc';\r\nimport BatchIqcSampleTab from './BatchIqcSampleTab';\r\nimport BatchResultTab from './BatchResultTab';\r\nimport PortalModal from '../../PortalModal';\r\nimport Iframe from 'react-iframe';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass BatchCreation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const sampleState = { skip: 0, take: this.props.Login.settings ?\r\n             parseInt(this.props.Login.settings[14]) : 5 };\r\n        \r\n        const histortState = { skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5 };\r\n                \r\n        const iqcsampleState = { skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5 };\r\n\r\n        const viewstate ={skip: 0, take: this.props.Login.settings ?\r\n            parseInt(this.props.Login.settings[14]) : 5};\r\n                    \r\n        this.state = {\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedFilter: {},\r\n            sampleState,\r\n            histortState,\r\n            iqcsampleState,\r\n            viewstate,\r\n            selectedRecord :{},\r\n            //confirmmsg:this.ConfirmMessage.bind(this),\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            sidebarview: false\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.searchFieldList = [\"stestname\",\"sinstrumentcatname\", \"sinstrumentname\", \"sproductname\", \"smanufname\", \"stransactiondate\", \"username\",\r\n        \"stransactionstatus\", \"sdecision\",\"sbatcharno\",\"stransdisplaystatus\"];\r\n\r\n        this.sampleMandatoryFields = [];\r\n        this.copyMandatoryFields = [];\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n            // if (props.Login.masterStatus !== \"\") {\r\n            //     if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n            //        if(props.Login.operation == \"initiate\"){\r\n            //         toast.warn(props.Login.masterStatus);\r\n            //         //this.state.confirmmsg.confirm(\"warning\", \"Warning!\",  props.Login.masterStatus, undefined, \"ok\", undefined, true, undefined);\r\n            //        }\r\n            //     }\r\n            // }\r\n            if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n    \r\n            if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n                toast.error(props.Login.error)\r\n                props.Login.error = \"\";\r\n            }\r\n            if (props.Login.selectedRecord === undefined) {\r\n                return { selectedRecord: {} }\r\n            }\r\n            return null;\r\n            // if (props.Login.selectedRecord !== state.selectedRecord) {\r\n            //     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\r\n            // }\r\n        }\r\n    \r\n        \r\n     // const sampleColumnList = [];\r\n    \r\n    // if (props.nneedsubsample){\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n    // }\r\n    // else{\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n    // }\r\n    \r\n    completeMandatoryFields = [\r\n        { \r\n          \"idsName\":  \"IDS_BATCHCOMPLETEDATE\",\r\n          //\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \r\n          \"dataField\": \"dtransactiondate\" , \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"selectbox\"\r\n        },\r\n    ];\r\n    \r\n    initiateMandatoryFields = [\r\n        { \r\n          \"idsName\":  \"IDS_BATCHINITIATEDATE\",\r\n          //\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \r\n          \"dataField\": \"dtransactiondate\" , \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"selectbox\"\r\n        },\r\n    ];\r\n\r\n    \r\n\r\n    materialIqcMandatory = [\r\n        \r\n        { \"idsName\": \"IDS_MATERIALTYPE\", \"dataField\": \"smaterialtypename\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_MATERIALCATEGORY\", \"dataField\": \"smaterialcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_MATERIAL\", \"dataField\": \"smaterialname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_MATERIALINVENTORY\", \"dataField\": \"sinventoryid\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        //{ \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequatity\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_USEDQTY\", \"dataField\": \"susedquantity\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n    ]\r\n\r\n     getSamples=(selectedbatchmaster)=>{\r\n      const addSampleID = this.state.controlMap.has(\"AddSamples\") && this.state.controlMap.get(\"AddSamples\").ncontrolcode\r\n        if(selectedbatchmaster.ntransactionstatus == transactionStatus.INITIATED || \r\n            selectedbatchmaster.ntransactionstatus == transactionStatus.COMPLETED || \r\n            selectedbatchmaster.ntransactionstatus == transactionStatus.CANCELLED){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        }else{\r\n            this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n                this.props.Login.userInfo,this.props.Login.masterData,\r\n                this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ? \r\n\t\t\t    this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n\t\t\t    this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,addSampleID)\r\n            }\r\n     }\r\n\r\n     getIqcSamples = (SelectedBatchmaster) =>{\r\n        if(SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || \r\n            SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED ||\r\n            SelectedBatchmaster.ntransactionstatus === transactionStatus.CANCELLED){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        }else if (this.props.Login.masterData.Samples.length==0){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOADDIQC\" }));\r\n        }else{\r\n        let addcontrolcode=this.state.controlMap.has(\"AddBatchCreation\") && this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;\r\n        let inputData={};\r\n        inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ? \r\n        this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n        inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n        inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n        this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n        // inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n        // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n        inputData['naddcontrolCode']=addcontrolcode;\r\n            // inputData['section']={\r\n            //         nsectioncode: SelectedBatchmaster.nsectioncode\r\n           // };\r\n            inputData['nsectioncode']=SelectedBatchmaster.nsectioncode;\r\n            inputData['userInfo']=this.props.Login.userInfo;\r\n            inputData['nbatchmastercode']= SelectedBatchmaster.nbatchmastercode;\r\n            inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n        this.props.getIqcSamples(inputData,this.props.Login.masterData);\r\n      }\r\n    }\r\n\r\n     deleteRecord = (inputData) => {\r\n\r\n        if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || \r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n            }else{\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: inputData.selectedRecord.nbatchsampleCode,\r\n                    fetchUrl: \"batchcreation/getSampleTabDetails\",\r\n                    isSingleGet: true,\r\n                    //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                let jsondata = inputData.selectedRecord;\r\n                const inputParam = {\r\n                    classUrl: \"batchcreation\",\r\n                    methodUrl: \"Sample\",\r\n                    postParam,\r\n                    inputData: {\r\n                        Sample: {\r\n                            \"sarno\":inputData.selectedRecord.sarno,\r\n                            \"ssamplearno\":inputData.selectedRecord.ssamplearno,\r\n                            \"stestname\":inputData.selectedRecord.stestname,\r\n                            \"nbatchsamplecode\": inputData.selectedRecord.nbatchsamplecode,\r\n\r\n                        },\r\n                        \"userInfo\": this.props.Login.userInfo,\r\n                        nbatchsamplecode: inputData.selectedRecord.nbatchsamplecode,\r\n                        masterData : {...this.props.Login.masterData,\r\n                                      \"samples\":[]\r\n                                    },\r\n                        nbatchmastercode : inputData.selectedRecord.nbatchmastercode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                        //nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                        //nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\r\n                        nregtypecode : this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                        nregsubtypecode : this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                                  this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n                    },\r\n                    operation: inputData.operation,\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    dataState: this.state.dataState\r\n                }\r\n              if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                            operation: inputData.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.deleteSampleAction(inputParam.inputData);\r\n                }\r\n            }\r\n       }\r\n\r\n     cancelRecord = (inputData) => {\r\n\r\n        if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || \r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n            }else{\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: inputData.nbatchsampleiqccode,\r\n                    fetchUrl: \"batchcreation/getBatchIqcSampleAction\",\r\n                    isSingleGet: true,\r\n                    //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                const inputParam = {\r\n                    classUrl: \"batchcreation\",\r\n                    methodUrl: \"IQCSample\",\r\n                    postParam,\r\n                    inputData: {\r\n                        iqcSample:inputData.selectedRecord,\r\n                        nbatchsampleiqccode: inputData.selectedRecord.nbatchsampleiqccode,\r\n                        masterData : this.props.Login.masterData,\r\n                        nbatchmastercode : inputData.selectedRecord.nbatchmastercode,\r\n                        nmaterialinventtranscode : inputData.selectedRecord.nmaterialinventtranscode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                        //nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                        //nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\r\n                         nregtypecode : this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                         nregsubtypecode : this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                                  this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n                         nsampletypecode : this.props.Login.masterData.realSampleTypeValue ? \r\n                                   this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA\r\n                    },\r\n                    operation: inputData.operation,\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    dataState: this.state.dataState\r\n                }\r\n              if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, \r\n                            screenData: { inputParam,\r\n                                          masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                            operation: inputData.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.cancelIQCSampleAction(inputParam.inputData);\r\n                }\r\n            }\r\n       }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n\r\n        if (screenName == \"IDS_BATCHHISTORY\") {\r\n         \r\n                let inputData = {\r\n                    masterData:this.props.Login.masterData,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n                }\r\n                this.props.getBatchhistoryAction(inputData, true);\r\n        }else if (screenName == \"IDS_BATCHIQCSAMPLE\") {\r\n         \r\n            let inputData = {\r\n                masterData:this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchIqcSampleAction(inputData, true);\r\n         }else if(screenName == \"IDS_RESULTS\"){\r\n            let inputData = {\r\n                masterData:this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nneedsubsample : this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample,\r\n                nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchViewResultAction(inputData, true);\r\n         }else{    \r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { screenName,batchactiveKey : screenName }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n         }\r\n    }\r\n\r\n\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Samples, event.dataState),\r\n            sampleState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateBatchHistoryChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Batchhistory, event.dataState),\r\n            histortState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateBatchIqcChangeChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.iqcsample, event.dataState),\r\n            iqcsampleState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateViewChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Resultview, event.dataState),\r\n            viewstate: event.dataState\r\n        });\r\n    }\r\n\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n          return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \r\n                   \"dataField\": option[designProperties.VALUE] == \"null\" ? '-' : option[designProperties.VALUE],\r\n                    \"width\": \"150px\", \"columnSize\": \"4\" };\r\n    \r\n        });\r\n        return temparray;\r\n    \r\n      }\r\n\r\n      getApprovalVersion = (data) => {\r\n        let inputData = [];\r\n\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n            this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n         \r\n        inputData = {\r\n            needFilterSubmit : \"false\",\r\n            nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n            fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n            toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n            nregtypecode: data.item.nregtypecode,\r\n            userInfo: this.props.Login.userInfo,\r\n            nregsubtypecode: data.item.nregsubtypecode,\r\n            masterData : this.props.Login.masterData,\r\n            isneedapprovalfilter : true,\r\n            defaultRegistrationSubType:data.item,\r\n            isneedrealFilterStatus:\"false\",\r\n            realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n            realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n            realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n            realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n        }\r\n        this.props.getBCApprovalConfigVersion(inputData)\r\n    \r\n      }\r\n    \r\n   tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_SAMPLE\",\r\n        <SampleTab\r\n            sample={this.props.Login.masterData.Samples || []}\r\n            dataResult={process(this.props.Login.masterData.Samples || [], this.state.sampleState)}\r\n            dataState={this.state.sampleState}\r\n            controlMap={this.state.controlMap}\r\n            dataStateChange={this.dataStateChange}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            userInfo={this.props.Login.userInfo}\r\n            deleteRecord={this.deleteRecord}\r\n            extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n            detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreItem) || []}\r\n            methodUrl={\"Samples\"}\r\n            getSamples={() => this.getSamples(this.props.Login.masterData.SelectedBatchmaster)}\r\n            // getSamples={() => this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n            //     this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value)}\r\n            //inputParam={this.props.Login.inputParam}\r\n            screenName=\"IDS_SAMPLE\"\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n        />\r\n        )\r\n        tabMap.set(\"IDS_BATCHIQCSAMPLE\",\r\n        <BatchIqcSampleTab\r\n            iqcsample={this.props.Login.masterData.iqcsample || []}\r\n            dataResult={process(this.props.Login.masterData.iqcsample || [], this.state.iqcsampleState)}\r\n            dataState={this.state.iqcsampleState}\r\n            controlMap={this.state.controlMap}\r\n            dataStateChange={this.dataStateBatchIqcChangeChange}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            userInfo={this.props.Login.userInfo}\r\n            cancelRecord={this.cancelRecord}\r\n            methodUrl={\"IQCSample\"}\r\n            getIqcSamples={() => this.getIqcSamples(this.props.Login.masterData.SelectedBatchmaster)}\r\n            screenName=\"IDS_BATCHIQCSAMPLE\"\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n        />\r\n        )\r\n    if(this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.INITIATED\r\n    || this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.COMPLETED){\r\n        tabMap.set(\"IDS_RESULTS\",\r\n        <BatchResultTab\r\n           ELNTest={this.props.Login.masterData.ELNTest || []}\r\n            resultview={this.props.Login.masterData.Resultview || []}\r\n            dataResult={process(this.props.Login.masterData.Resultview || [], this.state.viewstate)}\r\n            dataState={this.state.viewstate}\r\n            dataStateChange={this.dataStateViewChange}\r\n            userInfo={this.props.Login.userInfo}\r\n            methodUrl={\"BatchViewResult\"}\r\n            screenName=\"IDS_RESULTS\"\r\n            intl={this.props.intl}\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n            selectedfilename = {this.props.Login.masterData.SelectedBatchmaster.sbatcharno}\r\n\r\n        />\r\n        )\r\n    }\r\n\r\n        tabMap.set(\"IDS_BATCHHISTORY\",\r\n        <BatchhistoryTab\r\n            batchhistory={this.props.Login.masterData.Batchhistory || []}\r\n            dataResult={process(this.props.Login.masterData.Batchhistory || [], this.state.histortState)}\r\n            dataState={this.state.histortState}\r\n            dataStateChange={this.dataStateBatchHistoryChange}\r\n            userInfo={this.props.Login.userInfo}\r\n            methodUrl={\"Batchhistory\"}\r\n            screenName=\"IDS_BATCHHISTORY\"\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n\r\n        />\r\n        )\r\n\r\n\r\n        return tabMap;\r\n    }\r\n\r\n\r\n    onFilterComboChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            let inputData = [];\r\n           \r\n\r\n            if (fieldname === \"fromDate\") {\r\n                let dateObj = convertDateValuetoString(event, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit : \"false\",\r\n                    fromDate: dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\r\n                    toDate: dateObj.toDate,//this.props.Login.masterData.toDate,\r\n                    defaultRegistrationType : this.props.Login.masterData.defaultRegistrationType,\r\n                    defaultRegistrationSubType : this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA,\r\n                    defaultSampleType :this.props.Login.masterData.defaultSampleType,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA,\r\n                    ntranscode: this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.NA,\r\n                    //defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                this.props.getBCApprovalConfigVersion(inputData)\r\n            }\r\n            if (fieldname === \"toDate\") {\r\n\r\n                let dateObj = convertDateValuetoString(this.props.Login.masterData.fromDate, event, this.props.Login.userInfo)\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit : \"false\",\r\n                    fromDate: dateObj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    toDate: dateObj.toDate,//this.OnDateConverstion(event, fieldname),\r\n                    defaultRegistrationType : this.props.Login.masterData.defaultRegistrationType,\r\n                    defaultRegistrationSubType : this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA,\r\n                    defaultSampleType :this.props.Login.masterData.defaultSampleType,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA,\r\n                    ntranscode: this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.NA,\r\n                    //defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                this.props.getBCApprovalConfigVersion(inputData)\r\n            }\r\n\r\n            // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \r\n            //                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \r\n\r\n            if (fieldname === \"nsampletypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit : \"false\",\r\n                    nsampletypecode: parseInt(event.value),\r\n                    fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultSampleType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                    isneedrealFilterStatus:\"false\",\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                this.props.getBCRegistrationType(inputData)\r\n            }\r\n            else if (fieldname === \"nregtypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n\r\n                inputData = {\r\n                    nflag: 3,\r\n                    needFilterSubmit : \"false\",\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    nregtypecode: parseInt(event.value),\r\n                    userInfo: this.props.Login.userInfo,\r\n                    defaultRegistrationType: event.item,\r\n                    defaultSampleType:this.props.Login.masterData.defaultSampleType,\r\n                    isneedrealFilterStatus:\"false\",\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                this.props.getBCRegistrationSubType(inputData,this.props.Login.masterData)\r\n            }\r\n            else if (fieldname === \"nregsubtypecode\") {\r\n                const nregsubtypecode = this.state;\r\n                //this.setState({ nregsubtypecode:event });\r\n                this.getApprovalVersion(event);\r\n                \r\n            }\r\n\r\n            else if (fieldname === 'ndesigntemplatemappingcode') {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                const inputParamData = {\r\n                    nflag: 3,\r\n                    needFilterSubmit : \"false\",\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    //defaultFilterStatus: event.item,\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    nneedsubsample: this.props.Login.masterData.nneedsubsample || 4,\r\n                    // stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                    //nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: event.value,\r\n                    DesignTemplateMappingValue: event.item,\r\n                    isneedrealFilterStatus:\"false\",\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                //this.props.getREFilterTestData(inputParamData)\r\n                this.props.getBCFilterTemplate(inputParamData)\r\n\r\n            }\r\n\r\n            else if (fieldname === \"version\") {\r\n\r\n                // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                //     this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                // inputData = {\r\n                //     nflag: 4,\r\n                //     fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                //     todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                //     nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                //     nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                //     nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                //     napprovalversioncode: event.value,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     defaultApprovalConfigVersion: event.item,\r\n                //     masterData: this.props.Login.masterData,\r\n                //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                // }\r\n                // this.props.getBCJobStatus(inputData)\r\n                const ApprovalVersionValue = this.state;\r\n                this.setState({ ApprovalVersionValue:event });\r\n            }\r\n            else if (fieldname === \"jobstatus\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 5,\r\n                    needFilterSubmit : \"false\",\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),\r\n                    njobstatuscode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultjobstatus: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                this.props.getBCFilterStatus(inputData)\r\n            }\r\n            else if (fieldname === \"filter\") {\r\n                const FilterStatusValue = this.state;\r\n                this.setState({ FilterStatusValue:event });\r\n                \r\n            }\r\n            else if(fieldname === \"test\") {\r\n\r\n                const FilterStatusValue = this.state;\r\n                this.setState({ FilterStatusValue:event });\r\n            }else{\r\n                const selectedRecord = this.state;\r\n                this.setState({ selectedRecord:event });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFilterDateChange = (dateValue,dateName) => {\r\n            const { selectedFilter } = this.state;\r\n            if (dateValue === null) {\r\n                dateValue = new Date();\r\n            }\r\n            selectedFilter[dateName] = dateValue;\r\n            this.setState({ selectedFilter });\r\n    \r\n    }\r\n\r\n    // headerSelectionChange = (event) => {\r\n    //     const checked = event.syntheticEvent.target.checked;\r\n    //     let addedComponentList = this.state.addedComponentList || [];\r\n    //     if (checked) {\r\n    //         const data = this.state.addComponentDataList.map(item => {\r\n    //             if (addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n    //                 addedComponentList.push({ ...item, selected: false });\r\n    //                 item.selected = checked;\r\n    //                 return item;\r\n    //             } else {\r\n    //                 let olditem = JSON.parse(JSON.stringify(addedComponentList[addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n    //                 olditem.selected = checked;\r\n    //                 return olditem;\r\n    //             }\r\n\r\n    //         });\r\n\r\n\r\n    //         this.setState({\r\n    //             addComponentDataList: data, addedComponentList,\r\n    //             addSelectAll: checked, deleteSelectAll: false\r\n    //         });\r\n    //     }\r\n    //     else {\r\n    //         let addedComponentData = this.state.addedComponentList || [];\r\n    //         let deletedListdData = this.state.deletedList || [];\r\n\r\n    //         const data = this.state.addComponentDataList.map(item => {\r\n    //             addedComponentData = addedComponentData.filter(item1 => item1.npreregno !== item.npreregno);\r\n    //             deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n    //             item.selected = checked;\r\n    //             return item;\r\n    //         });\r\n\r\n    //         // console.log(\"data:\",data1, data2);\r\n    //         this.setState({\r\n    //             addComponentDataList: data, addedComponentList: addedComponentData, deletedList: deletedListdData,\r\n    //             addSelectAll: checked, deleteSelectAll: false\r\n    //         });\r\n    //     }\r\n    // }\r\n   \r\n\r\n    valiateCheckAll(data) {\r\n        let selectAll = true;\r\n        // let checkRepeatComponent;\r\n        //  let addedComponentList = this.state.addedComponentList || [];\r\n        if (data && data.length > 0) {\r\n            data.forEach(dataItem => {\r\n                if (dataItem.selected) {\r\n                    if (dataItem.selected === false) {\r\n                        selectAll = false;\r\n                    }\r\n                }\r\n                else {\r\n                    selectAll = false;\r\n                    // checkRepeatComponent=this.state.addComponentDataList.filter(item=>item.npreregno==data.npreregno)\r\n                    // if(checkRepeatComponent.length>0){\r\n                    //     selectAll = true;\r\n                    // }else{\r\n                    //     selectAll = false;\r\n                    // }\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            //if (gridType === \"originalgrid\"){\r\n            selectAll = false;\r\n            // }\r\n        }\r\n        return selectAll;\r\n    }\r\n\r\n\r\n    \r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let sampleList = this.state.samples || [];\r\n        let addedSamplesList=[];\r\n        if (checked) {\r\n            //const data = event.dataItems.map(item => {\r\n            const data = event.target.props.data.map(item => {\r\n                if (sampleList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n                    sampleList.push({ ...item, selected: false });\r\n                    item.selected = checked;   \r\n                    let newItem = JSON.parse(JSON.stringify(item));\r\n                    //newItem.selected = false;\r\n                    delete newItem['selected']\r\n                    newItem[\"jsondata\"]={};\r\n                    newItem[\"jsonuidata\"]={};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item    \r\n                    addedSamplesList.push(newItem);\r\n                    return item;\r\n                } else {\r\n                    let olditem = JSON.parse(JSON.stringify(sampleList[sampleList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n                    olditem.selected = checked;\r\n                    let newItem = JSON.parse(JSON.stringify(olditem));\r\n                    newItem.selected = false;\r\n                    newItem[\"jsondata\"]={};\r\n                    newItem[\"jsonuidata\"]={};\r\n                    newItem[\"jsondata\"]['samplelist'] = olditem\r\n                    newItem[\"jsonuidata\"]['samplelist'] = olditem\r\n                    addedSamplesList.push(newItem);\r\n                    return olditem;\r\n                    \r\n                }\r\n\r\n            });\r\n\r\n\r\n            this.setState({\r\n                samples: data,\r\n                addedSamplesList:addedSamplesList,\r\n                sampleList,\r\n                addSelectAll: checked, \r\n                deleteSelectAll: false\r\n            });\r\n        }\r\n        else {\r\n            // let sampleListData = this.state.sampleList || [];\r\n            // let deletedListdData = this.state.sampleList || [];\r\n\r\n            let sampleListData = this.state.samples || [];\r\n            let deletedListdData = this.state.samples || [];\r\n\r\n            const data = this.state.samples.map(item => {\r\n                sampleListData = sampleListData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n\r\n            // console.log(\"data:\",data1, data2);\r\n            this.setState({\r\n                samples: data, \r\n                addedSamplesList: sampleListData,\r\n                deletedList: deletedListdData,\r\n                addSelectAll: checked, \r\n                deleteSelectAll: false\r\n            });\r\n        }\r\n\r\n        // const data = this.state.addComponentDataList.map(item=>{\r\n        //     if (checked){\r\n        //         addedComponentList.push({...item, selected:false});\r\n        //     }\r\n        //     else{\r\n        //         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\r\n        //         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \r\n        //     }  \r\n        //     item.selected = checked;\r\n        //     return item;\r\n        // });\r\n\r\n    }\r\n\r\n    onTreeClick = (event) => {\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupSpecification\",\r\n            screenName: \"IDS_REGISTRATION\",\r\n            operation: \"get\",\r\n            activeKey: event.key,\r\n            focusKey: event.key,\r\n            keyName: \"treetemplatemanipulation\",\r\n            userinfo: this.props.Login.userInfo,\r\n            selectedNode: event.item,\r\n            selectedRecord: this.state.selectedRecord,\r\n\r\n            primaryKey: event.primaryKey\r\n        };\r\n        if (event.primaryKey !== this.state.selectedRecord[\"ntemplatemanipulationcode\"]) {\r\n            this.props.getNewRegSpecification(inputParam, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n\r\n    selectionChange = (event) => {\r\n        let addedSamplesList=this.state.addedSamplesList || [];\r\n        //let addedSamplesList= [];\r\n        let samples = this.state.samples || [];\r\n        const samplesList = this.state.samples.map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = !event.dataItem.selected;\r\n                if (item.selected) {\r\n                    const newItem = JSON.parse(JSON.stringify(item));\r\n                    //newItem.selected = false;\r\n                    delete newItem['selected']\r\n                    newItem[\"jsondata\"]={};\r\n                    newItem[\"jsonuidata\"]={};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item\r\n                    addedSamplesList.push(newItem);\r\n                }\r\n                else {\r\n                    // if(addedSamplesList.length === 0){\r\n                      addedSamplesList = addedSamplesList.filter(item1 => item1.ntransactiontestcode !== item.ntransactiontestcode)\r\n                    //   }else{\r\n                    //     this.state.samples.map((item1,index) => { \r\n                    //         if(item1.ntransactiontestcode == event.dataItem.ntransactiontestcode){\r\n                    //             if(this.state.samples.length == 1){\r\n                    //                 addedSamplesList=[];\r\n                    //             }else{\r\n                    //                 const newItem = JSON.parse(JSON.stringify(item1));\r\n                    //                 newItem.selected = false;\r\n                    //                 newItem[\"jsondata\"]={};\r\n                    //                 newItem[\"jsonuidata\"]={};\r\n                    //                 newItem[\"jsondata\"]['samplelist'] = item1\r\n                    //                 newItem[\"jsonuidata\"]['samplelist'] = item1\r\n                    //                 //addedSamplesList.push(newItem);\r\n                    //                 addedSamplesList = item1;\r\n                    //             }  \r\n                    //         }\r\n                    //     } \r\n                    //   )\r\n                 }\r\n            }\r\n            return item;\r\n        });\r\n        ///samplesList = addedSamplesList;\r\n        this.setState({\r\n            samplesList,\r\n            addedSamplesList,\r\n            samples,\r\n            initialList :addedSamplesList,\r\n            addSelectAll: this.valiateCheckAll(samplesList),\r\n            deleteSelectAll: this.valiateCheckAll(samplesList)\r\n        });\r\n    }\r\n\r\n    handleSaveClick = (saveType) => {\r\n        const failedControls = [];\r\n        const startLabel = [];\r\n        let label = \"IDS_ENTER\";\r\n        let mandatoryFields = [];\r\n        let selectedRecord = this.state.selectedRecord;\r\n        console.log(\"handle save:\", selectedRecord);\r\n        mandatoryFields = [\r\n            { \"idsName\": \"IDS_SPECIFICATION\", \"dataField\": \"nallottedspeccode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n        ]\r\n        let selectedSpec = this.props.Login.selectedSpec;\r\n        \r\n        if(selectedSpec.nallottedspeccode !== \"\") {\r\n        selectedSpec[\"nallottedspeccode\"] = this.state.selectedRecord[\"nallottedspeccode\"];\r\n        selectedSpec[\"sversion\"] = this.state.selectedRecord[\"sversion\"];\r\n        selectedSpec[\"ntemplatemanipulationcode\"] = this.state.selectedRecord[\"ntemplatemanipulationcode\"];\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadSpec: false,\r\n                selectedSpec,\r\n                openModal:true,\r\n                openSpecModal:false\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    } else {\r\n        toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n    }\r\n\r\n    }\r\n\r\n    render() {\r\n        let reportActionList = [];\r\n        let batchMandatoryFields = [];\r\n\r\nif (this.props.Login.operation === \"update\") {\r\n    batchMandatoryFields.push(\r\n        \r\n        { idsName: \"IDS_INSTRUMENTCATEGORY\", dataField: \"sinstrumentcatname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        { idsName: \"IDS_INSTRUMENT\", dataField: \"sinstrumentname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        { idsName: \"IDS_INSTRUMENTID\", dataField: \"sinstrumentid\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" }\r\n    );\r\n    \r\n}\r\nelse {\r\n    batchMandatoryFields.push(\r\n        { idsName: \"IDS_SECTION\", dataField: \"ssectionname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        { idsName: \"IDS_TEST\", dataField: \"stestname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        { idsName: \"IDS_INSTRUMENTCATEGORY\", dataField: \"sinstrumentcatname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        { idsName: \"IDS_INSTRUMENT\", dataField: \"sinstrumentname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        { idsName: \"IDS_INSTRUMENTID\", dataField: \"sinstrumentid\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" },\r\n        { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", mandatoryLabel: \"IDS_SELECT\", controlType: \"selectbox\" }\r\n    );\r\n}\r\n        const getBatch = {\r\n            screenName: \"IDS_BATCHCREATION\", \r\n            operation: \"get\", \r\n            masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"Batchcreation\", keyName: \"batchcreation\"\r\n        };\r\n        this.fromDate = (this.state.selectedFilter[\"fromdate\"] && this.state.selectedFilter[\"fromdate\"]) || this.props.Login.masterData && this.props.Login.masterData.realFromDate ? rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realFromDate):undefined;\r\n        this.toDate = (this.state.selectedFilter[\"todate\"] && this.state.selectedFilter[\"todate\"]) || this.props.Login.masterData && this.props.Login.masterData.realToDate ? rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realToDate):undefined;\r\n        const addId = this.state.controlMap.has(\"AddBatchCreation\") && this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditBatchcreation\") && this.state.controlMap.get(\"EditBatchcreation\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteBatchcreation\") && this.state.controlMap.get(\"DeleteBatchcreation\").ncontrolcode;\r\n        const testStartId = this.state.controlMap.has(\"BatchInitiate\") && this.state.controlMap.get(\"BatchInitiate\").ncontrolcode;\r\n        const completeId = this.state.controlMap.has(\"BatchComplete\") && this.state.controlMap.get(\"BatchComplete\").ncontrolcode;\r\n        const cancelId = this.state.controlMap.has(\"CancelBatch\") && this.state.controlMap.get(\"CancelBatch\").ncontrolcode;\r\n        const elnSheetId = this.state.controlMap.has(\"ELNSheet\") && this.state.controlMap.get(\"ELNSheet\").ncontrolcode;\r\n\r\n        const addParam = {\r\n            screenName: \"IDS_BATCHCREATION\", \r\n            primaryeyField: \"nreleasebatchcode\",\r\n            primaryKeyValue: undefined, \r\n            operation: \"create\", \r\n            //inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo, \r\n            ncontrolCode: addId,\r\n            nneedtestinitiate: this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate ,\r\n            masterData:this.props.Login.masterData,\r\n            fromdate:this.props.Login.masterData.fromDate,\r\n            todate:this.props.Login.masterData.toDate,\r\n            nregtypecode : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n            nregsubtypecode :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n            napprovalconfigcode : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n            ntranscode  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus:transactionStatus.NA,\r\n            ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,\r\n        };\r\n\r\n        const viewInfoFields = [\r\n        { \"fieldName\": \"sbatcharno\", \"label\": \"IDS_BATCHARNO\"},\r\n        { \"fieldName\": \"ssectionname\", \"label\": \"IDS_SECTION\"},\r\n        { \"fieldName\": \"stestname\", \"label\": \"IDS_TESTNAME\"},\r\n        { \"fieldName\": \"sinstrumentcatname\", \"label\": \"IDS_INSTRUMENTCATEGORY\" },\r\n        { \"fieldName\": \"sinstrumentid\", \"label\": \"IDS_INSTRUMENTID\" },\r\n        { \"fieldName\": \"sinstrumentname\", \"label\": \"IDS_INSTRUMENTNAME\" },\r\n        { \"fieldName\": \"sproductname\", \"label\": \"IDS_SAMPLETYPE\" },\r\n        { \"fieldName\": \"stransdisplaystatus\", \"label\": \"IDS_STATUS\" },\r\n        { \"fieldName\": \"username\", \"label\":\r\n        this.props.Login.masterData.SelectedBatchmaster && this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.INITIATED ? \"IDS_BATCHINITIATEDBY\":\r\n        this.props.Login.masterData.SelectedBatchmaster && this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED ? \"IDS_BATCHCOMPLETEDBY\"\r\n        :\"IDS_BATCHCREATEDBY\"}\r\n      ];\r\n\r\n        let stransactionstatuscode = this.props.Login.masterData.SelectedFilterStatus ? String(this.props.Login.masterData.SelectedFilterStatus.ntransactionstatus) : null;\r\n\r\n        if (this.state.selectedRecord && this.state.selectedRecord[\"nfiltertransstatus\"] !== undefined) {\r\n            stransactionstatuscode = this.state.selectedRecord[\"nfiltertransstatus\"].value === String(0) ? null : String(this.state.selectedRecord[\"nfiltertransstatus\"].value);\r\n        }\r\n\r\n      \r\n         let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, \r\n            this.props.Login.userInfo);\r\n            \r\n        const editParam = {\r\n            screenName: \"IDS_BATCHCREATION\", \r\n            operation: \"update\",\r\n            primaryKeyField: \"nbatchmastercode\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: editId,\r\n            masterData: this.props.Login.masterData,\r\n            naddcontrolCode:addId,\r\n            nsampletypecode:this.props.Login.masterData.realSampleTypeValue ? \r\n                            this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA,\r\n            nregtypecode : this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? \r\n                           this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n            nregsubtypecode : this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n            this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA\r\n        };\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"Batchmaster\", \r\n            selectedObject: \"SelectedBatchmaster\", \r\n            primaryKeyField: \"nbatchmastercode\",\r\n            fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\",\r\n           \r\n            fecthInputObject: {\r\n                fromDate : obj.fromDate,\r\n                toDate : obj.toDate,\r\n                userInfo: this.props.Login.userInfo,\r\n                ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                napprovalconfigcode:this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA,\r\n                ntranscode:this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT,\r\n                nsampletypecode:this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA,\r\n                //fromDate, toDate, \r\n                //stransactionstatuscode,\r\n                //activeBCTab: this.props.Login.activeBCTab || \"IDS_COMPONENT\"\r\n            },\r\n            masterData: this.props.Login.masterData, \r\n            //unchangeList: [\"FromDate\", \"ToDate\", \"SelectedFilterStatus\"],\r\n            searchFieldList: this.searchFieldList\r\n        }\r\n\r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_SAMPLETYPE\",\r\n            //     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\r\n            // }, \r\n            {\r\n                \"label\": \"IDS_REGISTRATIONTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.sregtypename ? this.props.Login.masterData.realRegTypeValue.sregtypename : \"NA\"\r\n                // \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                // this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\r\n            }, \r\n            {\r\n                \"label\": \"IDS_REGISTRATIONSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_BATCHSTATUS\",\r\n                \"value\": this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus ? this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus : \"NA\"\r\n            }\r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\r\n            // }\r\n        ]\r\n\r\n        return (\r\n        <>\r\n            {/* Start of get display*/}\r\n            {/* <div className=\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\"> */}\r\n            {/* <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\"> */}\r\n            {/* <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\"> */}\r\n            {/* <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"> */}\r\n            {/* //</><div className=\"client-listing-wrap mtop-4\"> */}\r\n            <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd \">\r\n            <Affix top={53}>\r\n            <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n            </Affix>\r\n            \r\n                <Row noGutters={true}>\r\n                    <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                        <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                            {!this.state.sidebarview ?\r\n                                <i class=\"fa fa-less-than\"></i> :\r\n                                <i class=\"fa fa-greater-than\"></i> \r\n                            }\r\n                        </span>\r\n                            <ListMaster\r\n                                masterList={this.props.Login.masterData.searchedData || (this.props.Login.masterData.Batchmaster || [])}\r\n                                selectedMaster={this.props.Login.masterData.SelectedBatchmaster}\r\n                                primaryKeyField=\"nbatchmastercode\"\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterData={this.props.Login.masterData}\r\n                                //getMasterDetail={this.props.getSelectedBatchCreationDetail}\r\n                                getMasterDetail={(batch) => this.props.getSelectedBatchCreationDetail(batch, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                inputParam = {getBatch}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_BATCHCREATION\" })}\r\n                                //mainField=\"stestname\"\r\n                                mainField=\"sbatcharno\"\r\n                                firstField=\"stestname\"\r\n                                secondField=\"sinstrumentname\"\r\n                                selectedListName=\"SelectedBatchmaster\"\r\n                                objectName=\"BatchCreation\"\r\n                                listName=\"IDS_BATCHCREATION\"\r\n                                needValidation={false}\r\n                                hidePaging={false}\r\n                                // subFields={\r\n                                //     [\r\n                                //         { [designProperties.VALUE]: \"sinstrumentcatname\" },\r\n                                //         { [designProperties.VALUE]: \"sinstrumentname\" },\r\n                                //         // { [designProperties.VALUE]: \"smahname\" },\r\n                                //         // { [designProperties.VALUE]: \"stransactionstatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\r\n                                //     ]\r\n                                // }\r\n                                needFilter={true}\r\n                                needMultiSelect={false}\r\n                                subFieldsLabel={true}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                searchListName=\"searchedData\"\r\n                                searchRef={this.searchRef}\r\n                                filterParam={filterParam}\r\n                                isClearSearch={this.props.Login.isClearSearch}\r\n                                // skip={this.state.skip}\r\n                                // take={this.state.take}\r\n                               // handlePageChange={this.handlePageChange}\r\n                                addId={addId}\r\n                                showFilterIcon={true}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getBatchSection(addParam)}\r\n                               // openModal={() => this.props.getTestInstrumentComboService(addParam)}\r\n                                commonActions={\r\n                                    // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                                    <ProductList className=\"d-flex product-category float-right\">\r\n                                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                        <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                            data-for=\"tooltip-common-wrap\"\r\n                                            hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                            onClick={() => this.props.getTestInstrumentComboService(addParam)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPlus} />\r\n                                        </Button>\r\n                                        <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                            data-for=\"tooltip-common-wrap\"\r\n                                            //onClick={() => this.reloadData(false)} \r\n                                        >\r\n                                            <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                        </Button>\r\n\r\n                                    </ProductList>\r\n                                    // </Tooltip>\r\n                                }\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\":<BatchCreationFilter\r\n                                        fromDate={this.state.selectedFilter[\"fromDate\"] !=undefined ?\r\n                                        rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"fromDate\"])  : this.fromDate}\r\n                                        toDate={this.state.selectedFilter[\"toDate\"] !=undefined  ? \r\n                                        rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"toDate\"]) :  this.toDate}\r\n                                        SampleType={this.state.SampleType || []}\r\n                                        SampleTypeValue={this.props.Login.masterData.defaultSampleType || []}\r\n                                        RegType={this.state.RegistrationType || []}\r\n                                        RegTypeValue={this.props.Login.masterData.defaultRegistrationType || []}\r\n                                        RegSubType={this.state.RegistrationSubType || []}\r\n                                        RegSubTypeValue={this.state.nregsubtypecode || []}\r\n                                        DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || []}\r\n                                        FilterStatus={this.state.BCFilterStatus || []}\r\n                                        FilterStatusValue={this.state.FilterStatusValue || []}\r\n                                        ApprovalVersion={this.state.ApprovalConfigVersion || []}\r\n                                        ApprovalVersionValue={this.state.ApprovalVersionValue || []}\r\n                                        REJobStatus={this.state.REJobStatus || []}\r\n                                        JobStatusValue={this.props.Login.masterData.defaultjobstatus || []}\r\n                                        Test={this.state.Testvalues || []}\r\n                                        TestValue={this.props.Login.masterData.selectedTestSynonym || []}\r\n                                        onFilterComboChange={this.onFilterComboChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        handleFilterDateChange={this.handleFilterDateChange}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                        DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                    />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n                                {/* <Row> */}\r\n                                    {/* <Col md={12}> */}\r\n                                        <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                                {this.props.Login.masterData.Batchmaster && this.props.Login.masterData.Batchmaster.length > 0\r\n                                                    && this.props.Login.masterData.SelectedBatchmaster ?\r\n                                                    <>\r\n                                                        <Card.Header>\r\n                                                            <Card.Title className=\"product-title-main\">\r\n                                                                {this.props.Login.masterData.SelectedBatchmaster.sbatcharno}\r\n                                                            </Card.Title>\r\n                                                            <Card.Subtitle>\r\n                                                                <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                {\r\n                                                                    this.props.Login.masterData.SelectedBatchTestTAT&&this.props.Login.masterData.SelectedBatchTestTAT.Deviation&&this.props.intl.formatMessage({ id: \"IDS_DEVIATION\" })+\" : \"+this.props.Login.masterData.SelectedBatchTestTAT.Deviation\r\n                                                                    }\r\n                                                                              \r\n                                                                            <MediaLabel className={`btn btn-outlined ${this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED  ? \"outline-initiate\"\r\n                                                                            : this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.COMPLETED ? \"outline-success\" \r\n                                                                            : this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.CANCELLED ? \"outline-danger\" \r\n                                                                            : \"outline-secondary\"} btn-sm ml-3`}>\r\n                                                                                {this.props.Login.masterData.SelectedBatchmaster.stransdisplaystatus}\r\n                                                                            </MediaLabel>\r\n                                                                        </h2>              \r\n                                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                    <div className=\"d-inline\">\r\n\r\n                                                                        {/* <Nav.Link name=\"view\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_BATCHTAT\" })}\r\n                                                                            // hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\r\n                                                                            onClick={() => this.props.batchTAT(this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.userInfo,this.props.Login.masterData)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon={faEye} />\r\n                                                                        </Nav.Link>      */}\r\n\r\n                                                                        <Nav.Link name=\"openelnsheet\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(elnSheetId) === -1}\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_OPENELNSHEET\" })}\r\n                                                                            //onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \r\n                                                                        >\r\n                                                                          <Image src={elnimage} alt=\"filer-icon action-icons-wrap\" \r\n                                                                           width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"\r\n                                                                           onClick={() => this.openClosePortal(this.props.Login.masterData.SelectedBatchmaster,cancelId)} \r\n                                                                           data-place=\"left\" \r\n                                                                         />                                                           \r\n                                                                        </Nav.Link>\r\n\r\n                                                                        <Nav.Link name=\"view\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWINFO\" })}\r\n                                                                        // hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\r\n                                                                        onClick={() => this.props.viewInfo(this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.userInfo,this.props.Login.masterData)}\r\n                                                                        >\r\n                                                                        <FontAwesomeIcon icon={faEye} />\r\n                                                                        </Nav.Link>        \r\n\r\n                                                                        <Nav.Link name=\"editBatchCreation\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                            onClick={() => this.fetchEditData(editParam)}\r\n                                                                            // onClick={() => this.props.getActiveBatchCreationService(editParam,\r\n                                                                            //     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)}\r\n                                                                        >\r\n                                                                            <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                            //  title={this.props.intl.formatMessage({ id: \"IDS_EDITBATCH\" })}\r\n                                                                            />\r\n                                                                        </Nav.Link>\r\n                                                                       { \r\n                                                                      // this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate == true ?\r\n                                                                        <Nav.Link name=\"initiateBatchCreation\"                                                        //  data-for=\"tooltip-common-wrap\" \r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_BATCHINITIATE\" })} \r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(testStartId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            //role=\"button\"\r\n                                                                            onClick={() => this.testPopUpStartActions(testStartId)}\r\n                                                                             >\r\n                                                                            <FontAwesomeIcon icon={faPlay} \r\n                                                                            />\r\n                                                                        {/* </FontIconWrap>  */}\r\n                                                                        </Nav.Link>\r\n                                                                       // :\"\"\r\n                                                                        }\r\n\r\n                                                                        <Nav.Link name=\"completeBatchCreation\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(completeId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })}\r\n                                                                            onClick={() => this.completePopUpStartActions(completeId)}\r\n                                                                            //onClick={() => this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,completeId)}\r\n                                                                            // onClick={() => this.props.validateBatchComplete({\r\n                                                                            //     masterData: this.props.Login.masterData,\r\n                                                                            //     userInfo: this.props.Login.userInfo,\r\n                                                                            //     userRoleControlRights: this.props.Login.userRoleControlRights,\r\n                                                                            //     ncontrolCode: completeId,\r\n                                                                            //     nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\r\n                                                                            // })}\r\n                                                                        >\r\n                                                                            <FontAwesomeIcon icon={faCheckCircle}\r\n                                                                            // title={this.props.intl.formatMessage({ id: \"IDS_COMPLETEBATCH\" })}\r\n                                                                            />\r\n                                                                        </Nav.Link>\r\n\r\n                                                                        <Nav.Link name=\"deleteBatchCreation\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                            onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}\r\n                                                                               \r\n                                                                        >\r\n                                                                          <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                        </Nav.Link>\r\n\r\n\r\n                                                                        <Nav.Link name=\"deleteBatchCreation\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(cancelId) === -1}\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                            //onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \r\n                                                                        >\r\n                                                                          <Image src={reject} alt=\"filer-icon action-icons-wrap\" \r\n                                                                           width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"\r\n                                                                           onClick={() => this.cancelBatch(this.props.Login.masterData.SelectedBatchmaster,cancelId)} \r\n                                                                           data-place=\"left\" \r\n                                                                         />                                                           \r\n                                                                        </Nav.Link>\r\n                                                                   \r\n                                                                        {reportActionList.length>0?\r\n                                                                            <CustomPopover\r\n                                                                                nav={true}\r\n                                                                                data={reportActionList}\r\n                                                                                Button={true}\r\n                                                                                hideIcon={true}\r\n                                                                                btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                                textKey=\"value\"\r\n                                                                                dynamicButton={(value) => this.reportMethod(value)}\r\n                                                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                            />\r\n                                                                            :\r\n                                                                        \"\"}\r\n\r\n                                                                    </div>\r\n                                                                    {/* </Tooltip> */}\r\n                                                                </div>\r\n\r\n                                                            </Card.Subtitle>\r\n                                                        </Card.Header>\r\n                                                        <Card.Body>\r\n                                                            <Row className=\"no-gutters\">\r\n                                                               <Col md={12}>\r\n                                                                  <Card className=\"at-tabs\">\r\n                                                                    <CustomTab\r\n                                                                     activeKey={this.props.Login.batchactiveKey ? this.props.Login.batchactiveKey : \"IDS_SAMPLE\"}\r\n                                                                     tabDetail={this.tabDetail()} onTabChange={this.onTabChange} \r\n                                                                     />\r\n                                                                   </Card>\r\n                                                               </Col>\r\n                                                            </Row>\r\n                                                            {/* <CustomTab \r\n                                                            activeKey={this.props.Login.activeKey ? this.props.Login.activeKey : \"IDS_SAMPLE\"}\r\n                                                            tabDetail={this.tabDetail()} onTabChange={this.onTabChange} /> */}\r\n                                                        </Card.Body>\r\n                                                    </>\r\n                                                    : \"\"\r\n                                                }\r\n                                        </Card>\r\n                                        </ContentPanel>\r\n                                    {/* </Col> */}\r\n                                {/* </Row> */}\r\n                         </Col>                  \r\n                  </Row>\r\n              </div>\r\n\r\n              <PortalModal>\r\n                    <div>\r\n                        <Modal\r\n                            centered\r\n                            scrollable\r\n                            bsPrefix=\"model model_zindex\"\r\n                            show={this.props.Login.openELNSheet}\r\n                            // show={this.state.openELNSheet}\r\n                            onHide={this.openClosePortal}\r\n                            dialogClassName={`${this.props.nflag && this.props.nflag === 2 ? 'alert-popup' : ''} modal-fullscreen`}\r\n                            backdrop=\"static\"\r\n                            keyboard={false}\r\n                            enforceFocus={false}\r\n                            aria-labelledby=\"example-custom-modal-styling-title\"\r\n                        >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title style={{ \"line-height\": \"1.0\" }} id=\"example-custom-modal-styling-title\">\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_ELNSHEET\" })}\r\n                                </Modal.Title>\r\n                                <ReactTooltip globalEventOff=\"true\" />\r\n\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <div className=\"modal-inner-content\">\r\n                                    {/* <Iframe url={this.state.enlLink} */}\r\n                                    <Iframe \r\n                                      // url={\"http://agl69:8080/QuaLISWeb/#/login\"}\r\n                                        url={this.props.Login.masterData.enlLink}\r\n                                        width=\"98%\"\r\n                                        height=\"1000px\"\r\n                                        id=\"reportviewID\"\r\n                                        className=\"reportview\"\r\n                                    //display=\"initial\"\r\n                                    /// position=\"relative\" \r\n                                    />\r\n                                </div>\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </div>\r\n              </PortalModal>\r\n            {/* </ListWrapper> */}\r\n\r\n            {/* End of get display*/}\r\n\r\n            {/* Start of Modal Sideout for User Creation */}\r\n            {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n            {\r\n                this.props.Login.openModal ?\r\n                    <SlideOutModal \r\n                        show={this.props.Login.openModal}\r\n                        size={\"lg\"}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.operation===\"createSample\" ? this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" }) \r\n                        : this.props.Login.operation===\"initiate\" || this.props.Login.operation===\"view\" || this.props.Login.operation===\"complete\"? this.props.intl.formatMessage({ id: \"IDS_BATCH\" })\r\n                        : this.props.Login.operation===\"createiqcsample\" ? this.props.intl.formatMessage({ id: \"IDS_BATCHIQCSAMPLE\" })\r\n                        : this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === \"create\" || this.props.Login.operation ===\"update\"  ? \r\n                         batchMandatoryFields \r\n                        //  : this.props.Login.operation === \"initiate\"  ?\r\n                        //    this.initiateMandatoryFields \r\n                        //  : this.props.Login.operation === \"complete\" ?\r\n                        //    this.completeMandatoryFields\r\n                         : this.props.Login.operation === \"createiqcsample\" ? \r\n                           this.materialIqcMandatory \r\n                         :  []\r\n                        }\r\n                        showSaveContinue={this.state.showSaveContinue}\r\n                        noSave={this.props.Login.operation === \"view\" ? true : false}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                           : this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\" ?\r\n                            <AddBatchCreation\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                Test={this.state.Testvalues || []}\r\n                                selectedInstrumentCategory={this.state.selectedInstCategory}\r\n                                InstrumentCategory={this.state.InstrumentCategory}\r\n                                Instrument={this.state.Instrument}\r\n                                selectedInstrument={this.state.selectedInstrument}\r\n                                productCategory={this.state.ProductCategory}\r\n                                selectedProductCategory={this.state.selectedProductCategory}\r\n                                TestValue={this.state.selectedTestSynonym || []}\r\n                                product={this.state.Product || []}\r\n                                instrumentID={this.state.InstrumentID || []}\r\n                                selectedProduct={this.state.selectedProduct || []}\r\n                                studyPlanList={this.props.Login.studyPlanList || []}\r\n                                manufacturerList={this.props.Login.productManufacturerList || []}\r\n                                maHolderList={this.props.Login.maHolderList || []}\r\n                                timeZoneList={this.props.Login.timeZoneList || []}\r\n                                selectedBacthCreation={this.props.Login.masterData.SelectedBatchmaster || {}}\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                selectedInstrumentId={this.state.selectedInstrumentId}\r\n                                onMultiColumnValue={this.onMultiColumnValue}\r\n                                onMultiColumnMAHChange={this.onMultiColumnMAHChange}\r\n                                batchCreationEditStatusList={this.props.Login.batchCreationEditStatusList}\r\n                                Section={this.state.Section}\r\n                                selectedSection={this.state.selectedSection}\r\n                            />\r\n                            :this.props.Login.operation === \"createSample\" ?\r\n                            <AddSample\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                getProductByCategory={this.getProductByCategory}\r\n                                onComboChange={this.onComboChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                productCategoryList={this.props.productCategoryList}\r\n                                productList={this.props.productList}\r\n                                componentList={this.props.componentList}\r\n                                getDataForAddComponent={this.getDataForAddComponent}\r\n                                clearComponentInput={this.props.clearComponentInput}\r\n                                samples={this.state.samples || []}\r\n                                headerSelectionChange={this.headerSelectionChange}\r\n                                selectionChange={this.selectionChange}\r\n                                addedComponentList={this.state.addedComponentList || []}\r\n                                addedHeaderSelectionChange={this.addedHeaderSelectionChange}\r\n                                addedSelectionChange={this.addedSelectionChange}\r\n                                //dataStateChange={this.dataStateChange} \r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                controlMap={this.props.controlMap}\r\n                                inputParam={this.props.inputParam}\r\n                                screenName={this.props.screenName}\r\n                                addSelectAll={this.state.addSelectAll}\r\n                                deleteSelectAll={this.state.deleteSelectAll}\r\n                                onDeleteSelectedComponent={this.onDeleteSelectedComponent}\r\n                                componentPopupSkip={this.props.componentPopupSkip}\r\n                                componentPopupTake={this.props.componentPopupTake}\r\n                                componentPageSizes={this.props.componentPageSizes}\r\n                                nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n                           />\r\n                           :this.props.Login.operation === \"initiate\" || this.props.Login.operation === \"complete\" ?\r\n                           <AddBatchinitiate\r\n                                userInfo={this.props.Login.userInfo}\r\n                                operation={this.props.Login.operation}\r\n                                handleDateChange={this.handleDateChange}\r\n                                selectedRecord={this.state.selectedRecord}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                currentTime={this.props.Login.currentTime || []}\r\n                           />\r\n                           :this.props.Login.operation === \"view\" ?\r\n                           <Card className='one' >\r\n                           <Card.Body>\r\n                           <ViewInfo\r\n                              userInfo={this.props.Login.userInfo}\r\n                              selectedRecordView={this.props.Login.masterData.selectedRecordView}\r\n                              viewInfoFields={viewInfoFields}\r\n                           />\r\n                           </Card.Body>\r\n                                </Card>\r\n                           : this.props.Login.operation === \"createiqcsample\" ?\r\n                           <AddMaterialIqc\r\n                                userInfo={this.props.Login.userInfo}\r\n                                operation={this.props.Login.operation}\r\n                                materialCategory={this.state.MaterialCategory}\r\n                                selectedMaterialType={this.state.selectedMaterialType}\r\n                                selectedMaterialCategory={this.state.selectedMaterialCategory}\r\n                                onComboChange={this.onComboChange}\r\n                                selectedMaterial={this.state.selectedMaterial}\r\n                                screenName = {this.props.intl.formatMessage({ id: \"IDS_SPECIFICATION\" })}\r\n                                handleSaveClick ={this.handleSaveClick}\r\n                                material={this.state.Material}\r\n                                materialInventory={this.state.MaterialInventory}\r\n                                AddSpec={this.AddSpec}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                currentTime={this.props.Login.currentTime || []}\r\n                                loadSpec = {this.props.Login.loadSpec}\r\n                                selectedMaterialInventory={this.state.selectedMaterialInventory}\r\n                                selectedInventoryUnit={this.props.Login.masterData.selectedInventoryUnit}\r\n                                AgaramTree={this.props.Login.AgaramTree}\r\n                                openNodes={this.props.Login.OpenNodes}\r\n                                onTreeClick={this.onTreeClick}\r\n                                focusKey={this.props.Login.FocusKey}\r\n                                activeKey={this.props.Login.batchactiveKey}\r\n                                Specification={this.props.Login.Specification}\r\n                                selectedSpec={this.props.Login.selectedSpec}\r\n                                selectedRecord={this.state.selectedRecord}\r\n                                onSpecChange={this.onspecChange}  \r\n                                openSpecModal={this.props.Login.openSpecModal}   \r\n                                closeModal={this.closeModal}             \r\n                         /> : \"\"\r\n                        }\r\n                    /> \r\n                    : \"\"\r\n            }\r\n            {/* End of Modal Sideout for Creation */}\r\n            {this.state.showConfirmAlert ? this.confirmAlert() : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n\r\n    ConfirmDelete = (selectedBatch, deleteId,operation) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteBatchCreation(selectedBatch,deleteId,operation));\r\n    };\r\n\r\n\r\n    completePopUpStartActions = (completeId) => {\r\n    // if(this.props.Login.masterData.nneedtestinitiate === true){\r\n      if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.COMPLETED || \r\n        this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.DRAFT ||\r\n        this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.CANCELLED\r\n        ){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n            }\r\n    //    }else \r\n      else if (this.props.Login.masterData.Samples.length==0){\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n       }else{\r\n                // const updateInfo = {\r\n                //     typeName: DEFAULT_RETURN,\r\n                //     data: {\r\n                //         openModal: true, \r\n                //         completeId : completeId,\r\n                //         masterData: this.props.Login.masterData,\r\n                //        // screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                //         operation: \"complete\"\r\n                //     }\r\n                // }\r\n                // this.props.updateStore(updateInfo);\r\n\r\n                let inputData = {};\r\n                inputData[\"openModal\"] = true;\r\n                inputData[\"completeId\"]= completeId;\r\n                inputData[\"selectedRecord\"]= this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord;\r\n                inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n                inputData[\"operation\"] = \"complete\";\r\n                this.props.batchCompleteDatePopup(inputData,this.props.Login.masterData);\r\n            }\r\n       }\r\n      \r\n    AddSpec = (e) => {\r\n        if(this.state.selectedMaterial !== undefined && \r\n            this.state.selectedMaterialCategory !== undefined ){\r\n                let inputData = {};\r\n                inputData[\"nmaterialcode\"] =  this.state.selectedMaterial.value;\r\n                inputData[\"nmaterialcatcode\"]= this.state.selectedMaterialCategory.value;\r\n                inputData[\"ncategorybasedflow\"]= this.state.selectedMaterialCategory.item.ncategorybasedflow;\r\n                inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n                inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n                // inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n                // inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \r\n                // inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \r\n                // inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n                // inputData[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                // inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n                // inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n                this.props.getTreeByMaterial(inputData,this.state.selectedRecord,this.props.Login.masterData);\r\n            }else{\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_FILLALLDETAILSTOADDSPEC\" }));\r\n            }\r\n    }\r\n\r\n\r\n    testPopUpStartActions = (testStartId) => {\r\n            if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n            }else if (this.props.Login.masterData.Samples.length==0){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n            }\r\n            // else if (this.props.Login.masterData.iqcsample.length==0){\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\r\n            // }\r\n            else{\r\n                let inputData = {};\r\n                inputData[\"openModal\"] = true;\r\n                inputData[\"testStartId\"]= testStartId;\r\n                inputData[\"selectedRecord\"]= this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord;\r\n                inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n                inputData[\"operation\"] = \"initiate\";\r\n                this.props.batchInitiateDatePopup(inputData,this.props.Login.masterData);\r\n                \r\n\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: {\r\n            //                 openModal: true, \r\n            //                 testStartId : testStartId,\r\n            //                 selectedRecord : this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord,\r\n            //                 masterData: this.props.Login.masterData,\r\n            //                 operation: \"initiate\"\r\n            //             }\r\n            //         }\r\n            // this.props.updateStore(updateInfo);\r\n        }\r\n           \r\n     }\r\n\r\n    testStartActions = (selectedmaster,testStartId) =>{\r\n        if(selectedmaster.ntransactionstatus == transactionStatus.INITIATED || selectedmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n            }else if (this.props.Login.masterData.Samples.length==0){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n             }\r\n            //else if (this.props.Login.masterData.iqcsample.length==0){\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\r\n            // }\r\n            else{\r\n                let inputData = {};\r\n                let jsonuidata=[];\r\n                const masterData = this.props.Login.masterData;\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                    fetchUrl: \"batchcreation/initiateBatchcreation\",\r\n                    isSingleGet: true,\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                    let jsondata = this.props.Login.masterData.Samples.map(item =>{\r\n                                                        return {jsonuidata:item}});\r\n                if(this.props.Login.masterData.iqcsample.length > 0){\r\n                    let totalSample = this.props.Login.masterData.Samples.concat(this.props.Login.masterData.iqcsample);\r\n                    inputData[\"npreregno\"] = this.props.Login.masterData.iqcsample.map(samples =>samples.npreregno).join(\",\");\r\n                    inputData[\"ntransactiontestcode\"] = totalSample.map(samples =>samples.ntransactiontestcode).join(\",\");\r\n                    inputData[\"nneedjoballocationiqc\"] =true\r\n                    inputData[\"isiqcdata\"] =true\r\n                }else{\r\n                    inputData[\"npreregno\"] = this.props.Login.masterData.Samples.map(samples =>samples.npreregno).join(\",\");\r\n                    inputData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(samples =>samples.ntransactiontestcode).join(\",\");\r\n                    inputData[\"isiqcdata\"] =false\r\n                    inputData[\"nneedjoballocationiqc\"] =false\r\n                }\r\n                    inputData[\"muluserpreregno\"] = this.props.Login.masterData.Samples.map(samples =>samples.npreregno).join(\",\");\r\n                    inputData[\"mulusertransactionsamplecode\"] = this.props.Login.masterData.Samples.map(samples =>samples.ntransactionsamplecode).join(\",\");\r\n                    inputData[\"mulusertransactiontestcode\"] = this.props.Login.masterData.Samples.map(samples =>samples.ntransactiontestcode).join(\",\");\r\n                    inputData[\"fromDate\"]= obj.fromDate;\r\n                    inputData[\"toDate\"]= obj.toDate;\r\n                    inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n                    inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode ? this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                   // inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                    //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                    inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                    //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n                    inputData[\"batchsample\"] = jsondata;\r\n                    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                    inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n                    inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \r\n                    inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \r\n                    inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n                    this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                    inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n                        this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n                    inputData[\"napproveconfversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n                    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\r\n                    inputData[\"ntranscode\"] =  transactionStatus.INITIATED ||  transactionStatus.DRAFT;\r\n                    inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n                    inputData[\"Batchhistory\"] ={\r\n                                            dtransactiondate : formatInputDate(this.state.selectedRecord[\"dtransactiondate\"] !=undefined ? \r\n                                            this.state.selectedRecord[\"dtransactiondate\"]:this.props.Login.currentTime,false),\r\n                                            scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\r\n                                            };\r\n                    inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n                    inputData[\"testStartId\"] = testStartId;\r\n                    inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n                    inputData[\"defaultFilterStatus\"]=this.props.Login.masterData.BCFilterStatus && this.props.Login.masterData.BCFilterStatus[1];\r\n                    inputData[\"sample\"] = this.props.Login.masterData ? this.props.Login.masterData.sample :\"\";\r\n                    inputData[\"iqcsample\"] = this.props.Login.masterData ? this.props.Login.masterData.iqcsample :\"\";\r\n                    const inputParam = {\r\n                        postParam,\r\n                        inputData: inputData,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHCREATION\",\r\n                        operation:\"initiate\"\r\n                    }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, testStartId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam,  \r\n                                masterData:{\r\n                                    ...masterData,\r\n                                    defaultFilterStatus:this.props.Login.masterData.BCFilterStatus \r\n                                    && this.props.Login.masterData.BCFilterStatus[1],\r\n                                    realdefaultFilterStatus : this.props.Login.masterData.BCFilterStatus \r\n                                    && this.props.Login.masterData.BCFilterStatus[1],\r\n\r\n                                }  \r\n                             },\r\n                                openModal: true, screenName: \"IDS_BATCHCREATION\", \r\n                                operation:inputParam.operation\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }else{\r\n                        this.props.batchInitiateAction(inputData, this.props.Login.masterData,this.confirmMessage);\r\n                    }\r\n         }\r\n    }\r\n\r\nbatchSaveIQCActions =(selectedmaster)=>{\r\nif(this.state.selectedRecord.savailablequatity!==\"0.00\"){\r\n   if(parseFloat(this.state.selectedRecord.susedquantity) <= parseFloat(this.props.Login.masterData.inventoryTransaction.savailablequatity)){\r\n     if(this.props.Login.selectedSpec.nallottedspeccode !== undefined &&  this.props.Login.selectedSpec.nallottedspeccode !== \"\" ){\r\n        let userInfo = {};\r\n        let inputRegistrationData = {};\r\n        let inputMaterialInventoryData = {};\r\n        let inputBatchData ={};\r\n        const map = {}\r\n        let batchCreationSampleData = {}; \r\n        let batchCreationTestData = {}; \r\n        let batchCreationSampleArray = [];\r\n        let batchCreationTestArray = [];\r\n        let samplecombinationuniqueArray=[];\r\n        let inputMaterialInventoryArrData=[];\r\n\r\n        batchCreationSampleData[\"nspecsampletypecode\"] =  this.props.Login.selectedSpec && this.props.Login.selectedSpec.nallottedspeccode ? \r\n                this.props.Login.selectedSpec.nallottedspeccode.nspecsampletypecode : transactionStatus.NA;\r\n        batchCreationSampleData[\"ncomponentcode\"] = transactionStatus.NA;\r\n        batchCreationSampleData[\"slno\"] = 1;\r\n        batchCreationSampleArray.push(batchCreationSampleData);\r\n\r\n        inputRegistrationData[\"nallottedspeccode\"]= this.props.Login.selectedSpec && this.props.Login.selectedSpec.nallottedspeccode ? \r\n                           this.props.Login.selectedSpec.nallottedspeccode.value : transactionStatus.NA;\r\n        inputRegistrationData[\"ntemplatemanipulationcode\"]=this.props.Login.ntemplatemanipulationcode || transactionStatus.NA;\r\n        inputRegistrationData[\"nregsubtypeversioncode\"]=this.props.Login.masterData.nregsubtypeversioncode;\r\n        inputRegistrationData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.ndesigntemplatemappingcode;\r\n        // inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n        // inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n        // inputRegistrationData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n\r\n        inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && \r\n                this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n        inputRegistrationData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                  this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n        inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                                 this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n\r\n        inputRegistrationData[\"nproductcatcode\"]= transactionStatus.NA;\r\n        inputRegistrationData[\"nproductcode\"]= transactionStatus.NA;\r\n        inputRegistrationData[\"ninstrumentcatcode\"]= transactionStatus.NA;\r\n        inputRegistrationData[\"ninstrumentcode\"]= transactionStatus.NA;\r\n        inputRegistrationData[\"nmaterialcatcode\"]=this.state.selectedMaterialCategory ? this.state.selectedMaterialCategory.value : transactionStatus.NA;\r\n        inputRegistrationData[\"nmaterialcode\"]=this.state.selectedMaterial ? this.state.selectedMaterial.value : transactionStatus.NA;\r\n\r\n        inputRegistrationData[\"jsondata\"] = {\r\n            nmaterialcode : this.state.selectedMaterial.value,\r\n            nmaterialcatcode:this.state.selectedMaterialCategory.value,\r\n            smaterialcatname :this.state.selectedMaterialCategory.label,\r\n            sinventoryid:this.state.selectedMaterialInventory.item.sinventoryid,\r\n            nmaterialinventorycode:this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n            smaterial:this.state.selectedMaterial.item.smaterialname,\r\n            smaterialtype: this.state.selectedMaterialType.item.smaterialtypename,\r\n            nmaterialtypecode: this.state.selectedMaterialType.value,\r\n            susedquantity:this.state.selectedRecord.susedquantity,\r\n            sunitname:this.props.Login.masterData.inventoryTransaction.sunitname,\r\n            savailablequatity:this.props.Login.masterData.inventoryTransaction.savailablequatity,\r\n            //materialtype:this.state.selectedMaterialType.label,\r\n            sremarks:this.state.selectedRecord.sremarks,\r\n            nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n        };\r\n        inputRegistrationData[\"jsonuidata\"] = {\r\n            nmaterialcode : this.state.selectedMaterial.value,\r\n            nmaterialcatcode:this.state.selectedMaterialCategory.value,\r\n            smaterialcatname :this.state.selectedMaterialCategory.label,\r\n            sinventoryid:this.state.selectedMaterialInventory.item.sinventoryid,\r\n            nmaterialinventorycode:this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n            smaterial:this.state.selectedMaterial.item.smaterialname,\r\n            smaterialtype: this.state.selectedMaterialType.item.smaterialtypename,\r\n            nmaterialtypecode: this.state.selectedMaterialType.value,\r\n            susedquantity:this.state.selectedRecord.susedquantity,\r\n            sunitname:this.props.Login.masterData.inventoryTransaction.sunitname,\r\n            savailablequatity:this.props.Login.masterData.inventoryTransaction.savailablequatity,\r\n            //materialtype:this.state.selectedMaterialType.label,\r\n            sremarks:this.state.selectedRecord.sremarks,\r\n            nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n            \r\n        };\r\n\r\n        // inputMaterialInventoryData = {\r\n        //     jsondata : this.props.Login.masterData.selectedInventoryUnit['jsondata']\r\n        // }\r\n        //  inputMaterialInventoryData = {\r\n        //         nmaterialinventorycode : this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n        //         jsondata : {\r\n        //             jsondata:this.props.Login.masterData.selectedInventoryUnit['jsondata'],\r\n        //             nqtyused: this.state.selectedRecord.susedquantity\r\n        //         },\r\n        //         jsonuidata : {\r\n        //             jsonuidata : this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\r\n        //             nqtyused: this.state.selectedRecord.susedquantity\r\n        //         },\r\n        //         nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n        //  };\r\n\r\n         inputMaterialInventoryData[\"nmaterialinventorycode\"]= this.state.selectedMaterialInventory.item.nmaterialinventorycode;\r\n         inputMaterialInventoryData[\"jsondata\"] = {\r\n            ...this.props.Login.masterData.selectedInventoryUnit['jsondata'],\r\n            nqtyused : this.state.selectedRecord.susedquantity,\r\n            savailablequatity:this.state.selectedRecord.savailablequatity,\r\n            nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n         }\r\n         //inputMaterialInventoryData[\"jsondata\"] = this.state.selectedRecord.susedquantity;\r\n         inputMaterialInventoryData[\"nsectioncode\"] = this.props.Login.masterData.selectedInventoryUnit['nsectioncode'];\r\n         inputMaterialInventoryData[\"jsonuidata\"]= {\r\n            ...this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\r\n            nqtyused : this.state.selectedRecord.susedquantity,\r\n            savailablequatity:this.state.selectedRecord.savailablequatity,\r\n            nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n         }\r\n     \r\n\r\n        //inputMaterialInventoryArrData.push(inputMaterialInventoryData);\r\n\r\n        batchCreationTestData[\"ntestgrouptestcode\"] = this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.ntestgrouptestcode : transactionStatus.NA;\r\n //     batchCreationTestData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\r\n        batchCreationTestData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n        batchCreationTestData[\"nsectioncode\"] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n        batchCreationTestData[\"nmethodcode\"] = this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.nmethodcode:transactionStatus.NA;\r\n   //   batchCreationTestData[\"nchecklistversioncode\"]=this.state.selectedTestSynonym ? this.state.selectedTestSynonym.item.nchecklistversioncode:transactionStatus.NA;\r\n        batchCreationTestData[\"nrepeatcountno\"]=1 ;//--\r\n  //    batchCreationTestData[\"ntestretestno\"]=0;\r\n        batchCreationTestData[\"nparametercount\"]=1; //--\r\n        batchCreationTestData[\"slno\"]=1; //--\r\n           \r\n        batchCreationTestArray.push(batchCreationTestData);\r\n      \r\n   \r\n        map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;\r\n        map[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n        userInfo= this.props.Login.userInfo;\r\n        map[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n        map[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n        map[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n        map[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;       \r\n        map[\"nmaterialcatcode\"]=this.state.selectedMaterialCategory ? this.state.selectedMaterialCategory.value : transactionStatus.NA;\r\n        map[\"nmaterialcode\"]=this.state.selectedMaterial ? this.state.selectedMaterial.value : transactionStatus.NA;\r\n        map[\"nmaterialtypecode\"]=this.state.selectedMaterialType ? this.state.selectedMaterialType.value : transactionStatus.NA;\r\n\r\n        inputBatchData = this.props.Login.masterData.SelectedBatchmaster ;\r\n          \r\n        map['Registration'] = inputRegistrationData;\r\n        map['Batchsampleiqc'] = inputBatchData;\r\n        map['RegistrationSample'] = batchCreationSampleArray;\r\n        map['testgrouptest'] = batchCreationTestArray;\r\n        map['userInfo'] = userInfo; \r\n        map['samplecombinationunique'] =samplecombinationuniqueArray;\r\n        map['inputMaterialInventoryArrData']=inputMaterialInventoryData;\r\n        \r\n        const inputParam = {\r\n                        inputData: map,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHIQCSAVE\",\r\n                        operation:\"createiqc\"\r\n                    }\r\n\r\n        this.props.batchSaveIQCActions(inputParam.inputData, this.props.Login.masterData);\r\n\r\n      }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDSPECIFICATIONS\" }));\r\n      }\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_USEDQTYISGREATERTHANAVAILABLEQTY\" }));\r\n    }\r\n   }else{\r\n    toast.warn(this.props.intl.formatMessage({ id: \"IDS_NOAVAILABLEQUANTITY\" }));\r\n   }\r\n }\r\n \r\n    cancelBatch = (selectedmaster,cancelId) =>{\r\n         if(selectedmaster.ntransactionstatus == transactionStatus.DRAFT || selectedmaster.ntransactionstatus == transactionStatus.COMPLETED ){\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTBATCHINITIATEDRECORD\" }));\r\n                }else{\r\n                let inputData = {};\r\n                const masterData = this.props.Login.masterData;\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                    fetchUrl: \"batchcreation/cancelBatch\",\r\n                    isSingleGet: true,\r\n                    //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                    let jsondata = this.props.Login.masterData.Samples.map(item =>{\r\n                        return {jsonuidata:item}});\r\n\r\n                    inputData[\"fromDate\"]= obj.fromDate;\r\n                    inputData[\"toDate\"]= obj.toDate;\r\n                    inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && \r\n                    this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                      this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                                     this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                    inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n                    //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                    //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                    inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                   // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n                    inputData[\"samples\"] = jsondata;\r\n                    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                    inputData[\"sbatcharno\"] = selectedmaster.sbatcharno;\r\n                    inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n                    inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n                    this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n                    inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n                    this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                    inputData[\"ntranscode\"] = transactionStatus.CANCELLED || transactionStatus.DRAFT;\r\n                    // inputData[\"Batchhistory\"] ={\r\n                    //     dtransactiondate : formatInputDate(new Date(),true),\r\n                    //     scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\r\n                    //     };\r\n                    //inputData[\"completeId\"] = completeId;\r\n                    inputData[\"nneedtestinitiate\"]= this.props.Login.masterData &&  this.props.Login.masterData.nneedtestinitiate;\r\n                    inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || \r\n                                                                                    transactionStatus.NA;\r\n                    inputData[\"defaultFilterStatus\"]=this.props.Login.masterData.BCFilterStatus \r\n                                                                                        && this.props.Login.masterData.BCFilterStatus[3];\r\n                    const inputParam = {\r\n                        postParam,\r\n                        inputData: inputData,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batch\",\r\n                        displayName: \"IDS_BATCHCREATION\",\r\n                        operation:\"cancel\"\r\n                    }\r\n\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, cancelId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, \r\n                                screenData: { inputParam, \r\n                                    masterData:{\r\n                                        ...masterData,\r\n                                        defaultFilterStatus:this.props.Login.masterData.BCFilterStatus \r\n                                        && this.props.Login.masterData.BCFilterStatus[2],\r\n                                        realdefaultFilterStatus : this.props.Login.masterData.BCFilterStatus \r\n                                        && this.props.Login.masterData.BCFilterStatus[2],\r\n\r\n                                    } \r\n                                },\r\n                                openModal: true, screenName: \"IDS_BATCHCREATION\", \r\n                                operation:inputParam.operation\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }else{\r\n                        this.props.batchCancelAction(inputData, this.props.Login.masterData);\r\n                    }\r\n                  \r\n         }\r\n    }\r\n\r\n    batchCompleteActions = (selectedmaster,completeId) =>{\r\n            if(selectedmaster.ntransactionstatus == transactionStatus.COMPLETED || selectedmaster.ntransactionstatus == transactionStatus.DRAFT ){\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n            }else{\r\n                let inputData = {};\r\n                const masterData = this.props.Login.masterData;\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                    fetchUrl: \"batchcreation/completeBatchcreation\",\r\n                    isSingleGet: true,\r\n                    //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                    let jsondata = this.props.Login.masterData.Samples.map(item =>{\r\n                        return {jsonuidata:item}});\r\n\r\n                    inputData[\"fromDate\"]= obj.fromDate;\r\n                    inputData[\"toDate\"]= obj.toDate;\r\n                    inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                              this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                               this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                    inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n                    //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                    //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                    inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                   // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n                    inputData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\r\n                    inputData[\"samples\"] = jsondata;\r\n                    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                    inputData[\"sbatcharno\"] = selectedmaster.sbatcharno;\r\n                    inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n                    inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n                    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n                    inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n                    this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                    inputData[\"ntranscode\"] = transactionStatus.COMPLETED || transactionStatus.DRAFT;\r\n                    inputData[\"Batchhistory\"] ={\r\n                        dtransactiondate : formatInputDate(this.state.selectedRecord[\"dtransactiondate\"] !=undefined ?\r\n                            this.state.selectedRecord[\"dtransactiondate\"]:this.props.Login.currentTime,false),\r\n                        scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\r\n                        };\r\n                    inputData[\"completeId\"] = completeId;\r\n                    inputData[\"nneedtestinitiate\"]= this.props.Login.masterData &&  this.props.Login.masterData.nneedtestinitiate;\r\n                    inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || \r\n                                                                                    transactionStatus.NA;\r\n                    inputData[\"defaultFilterStatus\"]=this.props.Login.masterData.BCFilterStatus \r\n                                                                                        && this.props.Login.masterData.BCFilterStatus[2];\r\n                    const inputParam = {\r\n                        postParam,\r\n                        inputData: inputData,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHCREATION\",\r\n                        operation:\"complete\"\r\n                    }\r\n\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, completeId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam, \r\n                                    masterData:{\r\n                                        ...masterData,\r\n                                        defaultFilterStatus:this.props.Login.masterData.BCFilterStatus \r\n                                        && this.props.Login.masterData.BCFilterStatus[2],\r\n                                        realdefaultFilterStatus : this.props.Login.masterData.BCFilterStatus \r\n                                        && this.props.Login.masterData.BCFilterStatus[2],\r\n\r\n                                    } \r\n                                },\r\n                                openModal: true, screenName: \"IDS_BATCHCREATION\", \r\n                                operation:inputParam.operation\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }else{\r\n                        this.props.batchCompleteAction(inputData, this.props.Login.masterData);\r\n                    }\r\n                  \r\n         }\r\n    }\r\n\r\n    // completeBatchCreation = () => {\r\n    //     const postParam = {\r\n    //         inputListName: \"Batchmaster\", selectedObject: \"SelectedBatchCreation\",\r\n    //         primaryKeyField: \"nreleasebatchcode\",\r\n    //         primaryKeyValue: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode,\r\n    //         fetchUrl: \"batchcreation/getBatchCreation\",\r\n    //         fecthInputObject: this.props.Login.userInfo,\r\n    //     }\r\n    //     const inputParam = {\r\n    //         classUrl: \"batchcreation\",\r\n    //         methodUrl: \"BatchCreation\", postParam,\r\n    //         inputData: {\r\n    //             ncontrolcode: this.props.Login.ncontrolCode,\r\n    //             \"userinfo\": this.props.Login.userInfo,\r\n    //             nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\r\n    //         },\r\n    //         operation: \"complete\", showConfirmAlert: false\r\n    //     }\r\n    //     //this.props.updateStore({ typeName: DEFAULT_RETURN, data: { showConfirmAlert: false } });  \r\n\r\n    //     const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n\r\n    //     if (esignNeeded) {\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: {\r\n    //                 loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n    //                 openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n    //                 operation: this.props.Login.operation,\r\n    //             }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    //     else {\r\n\r\n    //         this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n    //     }\r\n\r\n    // }\r\n\r\n    closeAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showConfirmAlert: false, loading: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        let {userRoleControlRights, controlMap, selectedRecord,  filterData,\r\n             addedComponentList,\r\n             filterStatusList, dataState, sahDataState, bahDataState,\r\n             chDataState,testCommentDataState, SampleType, RegistrationType, \r\n             RegistrationSubType,BCFilterStatus, REJobStatus, Testvalues, \r\n             ApprovalConfigVersion,skip, take,\r\n             testskip, testtake,selectedFilter,InstrumentCategory,selectedInstCategory,\r\n             ProductCategory,Instrument,selectedInstrument,selectedTestSynonym,nregsubtypecode,\r\n             selectedProductCategory,Product,selectedProduct,samples,addSelectAll,\r\n             deleteSelectAll,ApprovalVersionValue,FilterStatusValue,Section,\r\n             selectedSection,sampleGridItem,subsampleGridItem,testGridItem = [],\r\n             DynamicGridItem,samplegridmoreitem,DynamicGridMoreItem,MaterialCategory,\r\n             selectedMaterialType,Material,selectedMaterial,selectedMaterialCategory,\r\n             MaterialInventory,selectedMaterialInventory,Specification,\r\n             selectedSpec,addedSamplesList,testGridArnoItems,InstrumentID,selectedInstrumentId,sinstrumentid} = this.state;\r\n        let isStateChanged = false;\r\n        let bool = false;\r\n        addedSamplesList=[];\r\n        samples =[];\r\n       \r\n        if (this.props.Login.masterData.RegistrationSubType &&\r\n            this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\r\n            let dataState = {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n                //, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \r\n            }\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            isStateChanged = true;\r\n           \r\n            SampleType = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'nsampletypecode', 'ascending', 'nsampletypecode', false);\r\n            RegistrationType = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            RegistrationSubType = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            BCFilterStatus = constructOptionList(this.props.Login.masterData.BCFilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\",\"nsorter\", 'ascending', \"ntransactionstatus\", false);\r\n            REJobStatus = constructOptionList(this.props.Login.masterData.REJobStatus || [], 'njobstatuscode', 'sidsjobstatusname', 'ascending', 'njobstatuscode', false);\r\n            Testvalues = constructOptionList(this.props.Login.masterData.Testvalues || [], 'ntestcode', 'stestname', 'ascending', 'ntestcode', false);\r\n            ApprovalConfigVersion = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], 'napprovalconfigversioncode', 'sversionname',\r\n                'ascending', 'napprovalconfigversioncode', false);\r\n            InstrumentCategory=constructOptionList(this.props.Login.masterData.instrumentCategory || [], 'ninstrumentcatcode', 'sinstrumentcatname',\r\n            'ascending', 'ninstrumentcatcode', false);\r\n            Instrument=constructOptionList(this.props.Login.masterData.instrument || [], 'ninstrumentnamecode', 'sinstrumentname',\r\n            'ascending', 'ninstrumentcode', false);\r\n            ProductCategory=constructOptionList(this.props.Login.masterData.productcategory || [], 'nproductcatcode', 'sproductcatname',\r\n            'ascending', 'nproductcatcode', false);\r\n            Product=constructOptionList(this.props.Login.masterData.product || [], 'nproductcode', 'sproductname',\r\n            'ascending', 'nproductcode', false);\r\n            Section=constructOptionList(this.props.Login.masterData.Section || [], 'nsectioncode', 'ssectionname',\r\n            'ascending', 'nsectioncode', false);\r\n            MaterialCategory=constructOptionList(this.props.Login.masterData.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\r\n            'ascending', 'nmaterialcatcode', false);\r\n            Material=constructOptionList(this.props.Login.masterData.Material || [], 'nmaterialcode', 'smaterialname',\r\n            'ascending', 'nmaterialcode', false);\r\n            MaterialInventory=constructOptionList(this.props.Login.masterData.MaterialInventory || [], 'nmaterialinventtranscode', 'sinventoryid',\r\n            'ascending', 'nmaterialinventtranscode', false);\r\n            InstrumentID=constructOptionList(this.props.Login.masterData.instrumentID || [], 'ninstrumentcode', 'sinstrumentid',\r\n            'ascending', 'ninstrumentcode', false);\r\n\r\n\r\n           \r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, \r\n                sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), \r\n                scolorhexcode: \"#800000\" }\r\n            const selectedFilters = this.props.Login.masterData.BCFilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n\r\n            selectedFilter = selectedFiltersNew;\r\n            SampleType = SampleType.get(\"OptionList\")\r\n            RegistrationType = RegistrationType.get(\"OptionList\")\r\n            RegistrationSubType = RegistrationSubType.get(\"OptionList\")\r\n            BCFilterStatus = BCFilterStatus.get(\"OptionList\")\r\n            REJobStatus = REJobStatus.get(\"OptionList\")\r\n            Testvalues = Testvalues.get(\"OptionList\")\r\n            ApprovalConfigVersion = ApprovalConfigVersion.get(\"OptionList\")\r\n            InstrumentCategory = InstrumentCategory.get(\"OptionList\")\r\n            Instrument=Instrument.get(\"OptionList\")\r\n            ProductCategory=ProductCategory.get(\"OptionList\")\r\n            Product=Product.get(\"OptionList\")\r\n            Section=Section.get(\"OptionList\")\r\n            MaterialCategory=MaterialCategory.get(\"OptionList\")\r\n            Material=Material.get(\"OptionList\")\r\n            MaterialInventory=MaterialInventory.get(\"OptionList\")\r\n            InstrumentID = InstrumentID.get(\"OptionList\")\r\n            //selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory || [];\r\n            samples=this.props.Login.masterData.samples;\r\n            addSelectAll=false;\r\n            deleteSelectAll=true;\r\n            nregsubtypecode=this.props.Login.masterData.defaultRegistrationSubType ?\r\n                {\r\n                    label: this.props.Login.masterData.defaultRegistrationSubType.sregsubtypename,\r\n                    value: this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,\r\n                    item: this.props.Login.masterData.defaultRegistrationSubType\r\n                } : \"\"\r\n\r\n            if (this.props.Login.masterData.selectedTestSynonym !== previousProps.Login.masterData.selectedTestSynonym) {\r\n                    selectedTestSynonym=this.props.Login.masterData.selectedTestSynonym ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedTestSynonym.stestname,\r\n                        value: this.props.Login.masterData.selectedTestSynonym.ntestcode,\r\n                        item: this.props.Login.masterData.selectedTestSynonym\r\n                    } : \"\"\r\n                    let stestname = selectedTestSynonym.item;\r\n                    selectedRecord = {...this.state.selectedRecord,stestname,...selectedRecord};\r\n                    isStateChanged = true;\r\n            }\r\n        \r\n            if (this.props.Login.masterData.selectedProductcategory !== previousProps.Login.masterData.selectedProductcategory) {\r\n                        selectedProductCategory=this.props.Login.masterData.selectedProductcategory ?\r\n                        {\r\n                            label: this.props.Login.masterData.selectedProductcategory.sproductcatname,\r\n                            value: this.props.Login.masterData.selectedProductcategory.nproductcatcode,\r\n                            item: this.props.Login.masterData.selectedProductcategory\r\n                        } : \"\"\r\n                     isStateChanged = true;\r\n                }\r\n        \r\n                if (this.props.Login.masterData.selectedProduct !== previousProps.Login.masterData.selectedProduct) {\r\n                    selectedProduct=this.props.Login.masterData.selectedProduct ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedProduct.sproductname,\r\n                        value: this.props.Login.masterData.selectedProduct.nproductcode,\r\n                        item: this.props.Login.masterData.selectedProduct\r\n                    } : \"\"\r\n                    let sproductname = selectedProduct.item;\r\n                    selectedRecord = {...this.state.selectedRecord,sproductname,...selectedRecord};\r\n                    isStateChanged = true;\r\n             }\r\n                \r\n              if (this.props.Login.masterData.selectedInstrumentCategory !== previousProps.Login.masterData.selectedInstrumentCategory) {\r\n                        selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory ?\r\n                        {\r\n                            label: this.props.Login.masterData.selectedInstrumentCategory.sinstrumentcatname,\r\n                            value: this.props.Login.masterData.selectedInstrumentCategory.ninstrumentcatcode,\r\n                            item: this.props.Login.masterData.selectedInstrumentCategory\r\n                        } : \"\"\r\n                    let sinstrumentcatname = selectedInstCategory.item;\r\n                    selectedRecord = {...this.state.selectedRecord,sinstrumentcatname,...selectedRecord};\r\n                    isStateChanged = true;\r\n                }\r\n        \r\n                if (this.props.Login.masterData.selectedInstrument !== previousProps.Login.masterData.selectedInstrument) {\r\n                        selectedInstrument=this.props.Login.masterData.selectedInstrument ?\r\n                        {\r\n                            label: this.props.Login.masterData.selectedInstrument.sinstrumentname,\r\n                            value: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n                            item: this.props.Login.masterData.selectedInstrument\r\n                        } : \"\"\r\n                        let sinstrumentname = selectedInstrument.item;\r\n                        selectedRecord = {...this.state.selectedRecord,sinstrumentname,...selectedRecord};\r\n                        isStateChanged = true;\r\n        \r\n        \r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedInstrumentId !== previousProps.Login.masterData.selectedInstrumentId) {\r\n                    selectedInstrumentId=this.props.Login.masterData.selectedInstrumentId ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedInstrumentId.sinstrumentid,\r\n                        value: this.props.Login.masterData.selectedInstrumentId.ninstrumentcode,\r\n                        item: this.props.Login.masterData.selectedInstrumentId\r\n                    } : \"\"\r\n                    let sinstrumentid = selectedInstrumentId.item;\r\n                    selectedRecord = {...this.state.selectedRecord,sinstrumentid,...selectedRecord};\r\n                    isStateChanged = true;\r\n    \r\n    \r\n            }\r\n    \r\n        \r\n                if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                    userRoleControlRights = [];\r\n                    if (this.props.Login.userRoleControlRights) {\r\n                        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                            userRoleControlRights.push(item.ncontrolcode))\r\n                    }\r\n                    controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                    this.setState({ userRoleControlRights, controlMap });\r\n                    isStateChanged = true;\r\n                }\r\n        \r\n                if (this.props.Login.selectedComponentList !== previousProps.Login.selectedComponentList) {\r\n                    addedComponentList = this.props.Login.selectedComponentList;\r\n                    isStateChanged = true;\r\n                   // this.setState({ addedComponentList });\r\n                }\r\n        \r\n        \r\n                if(this.props.Login.masterData.defaultApprovalConfigVersion !== previousProps.Login.masterData.defaultApprovalConfigVersion) {\r\n                    ApprovalVersionValue = this.props.Login.masterData.defaultApprovalConfigVersion?\r\n                    {\r\n                        label: this.props.Login.masterData.defaultApprovalConfigVersion.sversionname,\r\n                        value: this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,\r\n                        item: this.props.Login.masterData.defaultApprovalConfigVersion\r\n                    } : \"\"\r\n                    isStateChanged = true;\r\n                }\r\n        \r\n                if(this.props.Login.masterData.defaultFilterStatus !== previousProps.Login.masterData.defaultFilterStatus) {\r\n                    FilterStatusValue = this.props.Login.masterData.defaultFilterStatus ?\r\n                    {\r\n                        label: this.props.Login.masterData.defaultFilterStatus.sfilterstatus,\r\n                        value: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                        item: this.props.Login.masterData.defaultFilterStatus\r\n                    } : \"\"\r\n                    isStateChanged = true;\r\n                }\r\n        \r\n                if(this.props.Login.masterData.selectedSection !== previousProps.Login.masterData.selectedSection) {\r\n                    selectedSection = this.props.Login.masterData.selectedSection ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedSection.ssectionname,\r\n                        value: this.props.Login.masterData.selectedSection.nsectioncode,\r\n                        item: this.props.Login.masterData.selectedSection\r\n                    } : \"\"\r\n                    let ssectionname = selectedSection.item;\r\n                    selectedRecord = {...this.state.selectedRecord,ssectionname,...selectedRecord};\r\n                    isStateChanged = true;\r\n\r\n                }\r\n            \r\n                if(this.props.Login.masterData.selectedMaterialType !== previousProps.Login.masterData.selectedMaterialType) {\r\n                    selectedMaterialType = this.props.Login.masterData.selectedMaterialType ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialType.smaterialtypename,\r\n                        value: this.props.Login.masterData.selectedMaterialType.nmaterialtypecode,\r\n                        item: this.props.Login.masterData.selectedMaterialType\r\n                    }:\"\"\r\n                    selectedRecord[\"smaterialtypename\"]=this.props.Login.masterData.selectedMaterialType.smaterialtypename;\r\n                    isStateChanged = true;\r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedMaterialCategory !== previousProps.Login.masterData.selectedMaterialCategory) {\r\n                    selectedMaterialCategory = this.props.Login.masterData.selectedMaterialCategory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialCategory.smaterialcatname,\r\n                        value: this.props.Login.masterData.selectedMaterialCategory.nmaterialcatcode,\r\n                        item: this.props.Login.masterData.selectedMaterialCategory\r\n                    }:\"\"\r\n                    selectedRecord[\"smaterialcatname\"]=this.props.Login.masterData.selectedMaterialCategory.smaterialcatname;\r\n                    isStateChanged = true;\r\n                    \r\n                }\r\n            \r\n                if (this.props.Login.masterData.selectedMaterial !== previousProps.Login.masterData.selectedMaterial) {\r\n                    selectedMaterial = this.props.Login.masterData.selectedMaterial ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterial.smaterialname,\r\n                        value: this.props.Login.masterData.selectedMaterial.nmaterialcode,\r\n                        item: this.props.Login.masterData.selectedMaterial\r\n                    }:\"\"\r\n                    selectedRecord[\"smaterialname\"]=this.props.Login.masterData.selectedMaterial.smaterialname;\r\n                    isStateChanged = true;\r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedMaterialInventory !== previousProps.Login.masterData.selectedMaterialInventory) {\r\n                    selectedMaterialInventory = this.props.Login.masterData.selectedMaterialInventory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialInventory.sinventoryid,\r\n                        value: this.props.Login.masterData.selectedMaterialInventory.nmaterialinventtranscode,\r\n                        item: this.props.Login.masterData.selectedMaterialInventory\r\n                    }:\"\"\r\n                    selectedRecord[\"sinventoryid\"]=this.props.Login.masterData.selectedMaterialInventory && this.props.Login.masterData.selectedMaterialInventory.sinventoryid != null ? \r\n                                 this.props.Login.masterData.selectedMaterialInventory.sinventoryid : \"\";\r\n                    isStateChanged = true;\r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedInventoryUnit !== previousProps.Login.masterData.selectedInventoryUnit) {\r\n                            //selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\r\n                            selectedRecord[\"savailablequatity\"] = this.props.Login.masterData.selectedInventoryUnit &&\r\n                                         this.props.Login.masterData.selectedInventoryUnit.savailablequatity  != null ? this.props.Login.masterData.selectedInventoryUnit.savailablequatity :\"\";\r\n                            selectedRecord[\"susedquantity\"] = \"\";\r\n                            selectedRecord[\"sremarks\"] = \"\";\r\n                            isStateChanged = true;\r\n                }\r\n        \r\n              if (this.props.Login.isselectedrecordempty) {\r\n                    selectedRecord = {};\r\n                    isStateChanged = true;\r\n                }\r\n\r\n\r\n                if (this.props.Login.masterData.Specification !== previousProps.Login.masterData.Specification) {\r\n                    //selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\r\n                    Specification = this.props.Login.masterData.Specification &&\r\n                                 this.props.Login.masterData.Specification  != null ? this.props.Login.masterData.Specification :\"\";\r\n                    isStateChanged = true;\r\n                 }\r\n\r\n                 if (this.props.Login.selectedSpec !== previousProps.Login.selectedSpec) {\r\n                    selectedRecord[\"selectedSpec\"] = this.props.Login.selectedSpec &&\r\n                                 this.props.Login.selectedSpec  != null ? this.props.Login.selectedSpec :\"\";\r\n                    isStateChanged = true;\r\n                 }\r\n\r\n                 if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n                    selectedRecord = this.props.Login.selectedRecord\r\n                    isStateChanged = true;\r\n                }\r\n\r\n               if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n                    const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.\r\n                        jsondata.value)\r\n                    testGridArnoItems=dynamicColumn.testListFields.testlistitem? dynamicColumn.testListFields.testlistitem : [];\r\n                    testGridItem[0] = dynamicColumn.testListFields.releasetestfields[0] ? dynamicColumn.testListFields.releasetestfields[0] : [];\r\n                    sampleGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n                    subsampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];              \r\n                    samplegridmoreitem = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n                    DynamicGridMoreItem=[...samplegridmoreitem]\r\n                    DynamicGridItem=[...testGridArnoItems,...testGridItem,...sampleGridItem,...subsampleGridItem]     \r\n                    isStateChanged = true;         \r\n             }\r\n         }\r\n\r\n       \r\n        // if(this.props.Login.selectedRecord !== previousProps.Login.selectedRecord){\r\n        //     // let selectedRecord = {};\r\n        //     let MaterialCategory=constructOptionList(this.props.Login.selectedRecord.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\r\n        //     'ascending', 'nmaterialcatcode', false);\r\n        //     let Material =constructOptionList(this.props.Login.selectedRecord.Material || [], 'nmaterialcode', 'smaterialname',\r\n        //     'ascending', 'nmaterialcode', false);\r\n        //     let MaterialInventory=constructOptionList(this.props.Login.selectedRecord.MaterialInventory || [], 'nmaterialinventorycode', 'sinventoryid',\r\n        //     'ascending', 'nmaterialinventorycode', false);\r\n        //      MaterialCategory = MaterialCategory.get(\"OptionList\")\r\n        //      Material = Material.get(\"OptionList\")\r\n        //      MaterialInventory = MaterialInventory.get(\"OptionList\")\r\n\r\n        //      selectedRecord[\"MaterialCategory\"]=MaterialCategory\r\n        //      selectedRecord[\"Material\"]=Material\r\n        //      selectedRecord[\"MaterialInventory\"]=MaterialInventory\r\n\r\n        //  if(this.props.Login.selectedRecord.selectedMaterialType !== previousProps.Login.selectedRecord.selectedMaterialType) {\r\n        //         let selectedMaterialType = this.props.Login.selectedRecord.selectedMaterialType ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialType.nmaterialtypecode || this.props.Login.selectedRecord.selectedMaterialType.item.value,\r\n        //             item:  this.props.Login.selectedRecord.selectedMaterialType.item ? this.props.Login.selectedRecord.selectedMaterialType.item : this.props.Login.selectedRecord.selectedMaterialType\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialType\"]=selectedMaterialType;\r\n        //         selectedRecord[\"smaterialtypename\"]=this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //  if (this.props.Login.selectedRecord.selectedMaterialCategory !== previousProps.Login.selectedRecord.selectedMaterialCategory) {\r\n        //         let selectedMaterialCategory = this.props.Login.selectedRecord.selectedMaterialCategory ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname ,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialCategory.nmaterialcatcode || this.props.Login.selectedRecord.selectedMaterialCategory.item.value ,\r\n        //             item:  this.props.Login.selectedRecord.selectedMaterialCategory.item  ? this.props.Login.selectedRecord.selectedMaterialCategory.item  : this.props.Login.selectedRecord.selectedMaterialCategory \r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialCategory\"]=selectedMaterialCategory;\r\n        //         selectedRecord[\"smaterialcatname\"]=this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname \r\n        //         isStateChanged = true;\r\n        //     }\r\n        \r\n        //     if (this.props.Login.selectedRecord.selectedMaterial !== previousProps.Login.selectedRecord.selectedMaterial) {\r\n        //          let selectedMaterial = this.props.Login.selectedRecord.selectedMaterial ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterial.smaterialname,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterial.nmaterialcode,\r\n        //             item: this.props.Login.selectedRecord.selectedMaterial\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterial\"]= selectedMaterial;\r\n        //         selectedRecord[\"smaterialname\"]=this.props.Login.selectedRecord.selectedMaterial.smaterialname;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //     if (this.props.Login.selectedRecord.selectedMaterialInventory !== previousProps.Login.selectedRecord.selectedMaterialInventory) {\r\n        //         let selectedMaterialInventory = this.props.Login.selectedRecord.selectedMaterialInventory ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialInventory.nmaterialinventorycode,\r\n        //             item: this.props.Login.selectedRecord.selectedMaterialInventory\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialInventory\"]= selectedMaterialInventory;\r\n        //         selectedRecord[\"sinventoryid\"]=this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n            \r\n      \r\n            \r\n\r\n    \r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            isStateChanged = true;\r\n            //selectedRecord = this.props.Login.selectedRecord;\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n\r\n\r\n        if (isStateChanged)\r\n        {\r\n            this.setState({userRoleControlRights, controlMap, selectedRecord,  \r\n                filterData, addedComponentList,\r\n                filterStatusList, dataState, sahDataState, bahDataState, chDataState,\r\n                testCommentDataState,SampleType, RegistrationType, RegistrationSubType,\r\n                BCFilterStatus, REJobStatus, Testvalues, ApprovalConfigVersion,skip, take,\r\n                testskip, testtake,selectedFilter,selectedInstCategory,InstrumentCategory,\r\n                Instrument,selectedInstrument,selectedTestSynonym,nregsubtypecode,\r\n                ProductCategory,selectedProductCategory,Product,selectedProduct,samples,\r\n                addSelectAll,deleteSelectAll,ApprovalVersionValue,FilterStatusValue,Section,\r\n                selectedSection,sampleGridItem,subsampleGridItem,testGridItem,DynamicGridItem,\r\n                samplegridmoreitem,DynamicGridMoreItem,MaterialCategory,selectedMaterialType,\r\n                Material,selectedMaterial,selectedMaterialCategory,MaterialInventory,\r\n                selectedMaterialInventory,Specification,selectedSpec,addedSamplesList,\r\n                testGridArnoItems,InstrumentID,selectedInstrumentId,sinstrumentid});\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let openSpecModal=this.props.Login.openSpecModal;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"cancel\"){\r\n            //    this.props.Login.operation === \"complete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n            selectedRecord[\"esigncomments\"] = \"\";\r\n            selectedRecord[\"esignpassword\"] = \"\";\r\n        }else if(this.props.Login.openSpecModal){\r\n                loadEsign = false;\r\n                openSpecModal=false\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord,openSpecModal, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let inputData = {};\r\n        selectedRecord[fieldName] = comboData.item;\r\n        if (fieldName === \"sproductname\") {\r\n            selectedRecord[\"nproductcode\"]=comboData.value;\r\n            selectedRecord[\"userInfo\"]=this.props.Login.userInfo;\r\n            selectedRecord[\"stestname\"] = this.state.selectedRecord['stestname'];\r\n            selectedRecord[\"ntestcode\"] = this.state.selectedRecord['stestname']['ntestcode'];\r\n            selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                    this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            //selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            selectedRecord['naddcontrolCode']=this.props.Login.naddcontrolCode;\r\n            selectedRecord[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            selectedRecord[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n           //this.setState({ selectedProduct:comboData });\r\n           this.props.getProductBasedInstrument(selectedRecord,this.props.Login.masterData);\r\n        }else if(fieldName === \"ssectionname\"){\r\n            inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData['naddcontrolCode']=this.props.Login.naddcontrolCode;\r\n            inputData['section']=selectedRecord.ssectionname;\r\n            inputData['userInfo']=this.props.Login.userInfo;\r\n            this.props.getTestInstrumentComboService(inputData,this.props.Login.masterData);\r\n            // this.setState({ selectedSection:comboData });\r\n\r\n        }else if (fieldName === \"stestname\") {\r\n            if(this.props.Login.operation === \"update\"){\r\n            selectedRecord[\"nprevioustestcode\"]=this.state.selectedTestSynonym.value \r\n            }\r\n            selectedRecord[\"ntestcode\"]=comboData.value;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                           this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            //selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            selectedRecord['naddcontrolCode']=this.props.Login.naddcontrolCode;\r\n            selectedRecord['sinstrumentcatname']=undefined;\r\n            selectedRecord[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            selectedRecord[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            this.props.getTestInstrumentCategory(selectedRecord,this.props.Login.masterData);\r\n        }else if (fieldName === \"sinstrumentcatname\") {\r\n            selectedRecord[\"ninstrumentcatcode\"]=comboData.value;\r\n            selectedRecord[\"ncalibrationreq\"]=comboData.item.ncalibrationreq;\r\n            selectedRecord[\"ntestcode\"]=this.state.selectedTestSynonym.value;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            //selectedRecord['sinstrumentid']=undefined;\r\n            selectedRecord['sinstrumentname']=undefined;\r\n            this.props.getInstrumentForInstCategory(selectedRecord,this.props.Login.masterData);\r\n            //this.props.getInstrumentID(selectedRecord,this.props.Login.masterData);\r\n        }else if(fieldName === \"smaterialcatname\"){\r\n            selectedRecord[\"nmaterialcatcode\"]=comboData.value;\r\n            selectedRecord[\"needsectionwise\"]=comboData.item.needSectionwise;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            selectedRecord['nsectioncode']=this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n            this.setState({ selectedMaterialCategory:comboData });\r\n            this.props.getMaterialBasedOnMaterialCategory(selectedRecord,this.props.Login.masterData,this.state.selectedMaterialCategory);\r\n        }else if(fieldName === \"smaterialname\"){\r\n            selectedRecord[\"nmaterialcode\"]=comboData.value;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            selectedRecord['needsection']=comboData.item.needsection;\r\n            selectedRecord['nsectioncode']=this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n            this.setState({selectedMaterial:comboData });\r\n            this.props.getMaterialInventoryBasedOnMaterial(selectedRecord,this.props.Login.masterData,this.state.selectedMaterialCategory);\r\n            \r\n        }else if(fieldName === \"sinventoryid\"){\r\n            selectedRecord[\"nmaterialcode\"]=this.state.selectedMaterial.value;\r\n            selectedRecord[\"materialInvCode\"]=comboData.item.nmaterialinventorycode;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            selectedRecord['needsection']=this.props.Login.masterData.selectedMaterial.needsection;\r\n            this.setState({selectedMaterialInventory:comboData });\r\n            // if(this.state.selectedMaterial.item.needsection == transactionStatus.NO){\r\n            //     selectedRecord['nsectioncode']=transactionStatus.NA;\r\n            // }else{\r\n            selectedRecord['nsectioncode']=this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n            //}\r\n            this.props.getMaterialAvailQtyBasedOnInv(selectedRecord,this.props.Login.masterData,this.state.selectedMaterialCategory);\r\n        }else if(fieldName === \"sinstrumentname\"){\r\n            selectedRecord[\"ninstrumentnamecode\"]=comboData.value;\r\n            selectedRecord[\"sinstrumentname\"]=comboData.label;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            //selectedRecord['sinstrumentid']=undefined;\r\n            selectedRecord['selectedInstrument']=comboData.item;\r\n            selectedRecord['ninstrumentcatcode']=comboData.item.ninstrumentcatcode;\r\n            selectedRecord['ninstrumentcode']=comboData.item.ninstrumentcode;\r\n            this.props.getInstrumentID(selectedRecord,this.props.Login.masterData);\r\n        } else {\r\n            this.setState({selectedInstrumentId:comboData });\r\n        }\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onMultiColumnValue = (value, key, flag, label, keys) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n            if (flag) {\r\n                keys.map((objkey, index) => {\r\n                    return selectedRecord[objkey] = { \"label\": value[0][label[index]], \"value\": value[0][objkey] }\r\n                })\r\n            }\r\n        } else {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = \"\";\r\n            });\r\n            keys.map((objkey, index) => {\r\n                return selectedRecord[objkey] = \"\"\r\n            })\r\n        }\r\n        this.props.getBatchManufacturerComboChange(selectedRecord, this.props.Login.userInfo);\r\n    }\r\n\r\n    onMultiColumnMAHChange = (value, key) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    clearComponentInput = () => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[\"nproductcode\"] = undefined;\r\n        selectedRecord[\"ncomponentcode\"] = undefined;\r\n        selectedRecord[\"smanuflotno\"] = \"\";\r\n        selectedRecord[\"dateprompt\"] = transactionStatus.NO;\r\n        selectedRecord[\"transdatefrom\"] = this.props.Login.componentDefaultSearchDate;\r\n        selectedRecord[\"transdateto\"] = this.props.Login.componentDefaultSearchDate;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    openClosePortal = () =>{\r\n    if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED){\r\n        if(this.props.Login.openELNSheet===undefined || !this.props.Login.openELNSheet)\r\n        {\r\n            this.props.Login.masterData.enlLink=\"\";   \r\n            let integrationSettings = this.props.Login.integrationSettings;\r\n            let inputParam = {\r\n                userInfo : this.props.Login.userInfo,\r\n                elnUserInfo : this.props.Login.elnUserInfo,\r\n                elnSite : this.props.Login.elnSite,\r\n                nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster.sbatcharno,\r\n                ntestcode:this.props.Login.masterData.ntestcode\r\n            }\r\n            let link = \"\";\r\n                    \r\n            let detail = CF_encryptionData(\"-1//Sheet\").EncryptData;\r\n           \r\n            const settedId = inputParam.nbatchmastercode;\r\n           //console.log(settedId);\r\n           let encryptedbatchid = CF_encryptionData(settedId).EncryptData;\r\n            const userObject = {\r\n                usercode: inputParam.elnUserInfo.nelncode,\r\n                username: inputParam.elnUserInfo.selnuserid,\r\n                userfullname: inputParam.elnUserInfo.selnusername,\r\n                lsusergroup: {\r\n                usergroupcode: inputParam.elnUserInfo.nelnusergroupcode,\r\n                usergroupname: inputParam.elnUserInfo.nelnusergroupcode,\r\n                },\r\n                lssitemaster:{\r\n                sitecode: inputParam.elnSite.nelnsitecode\r\n                }\r\n            }\r\n            let encrypteduser = CF_encryptionData(userObject).EncryptData;\r\n            const baseURL = integrationSettings[1].slinkname\r\n            \r\n            link = baseURL + \"/vieworder\" + '#{\"d\":\"' + settedId + '\",\"user\":\"' + encrypteduser + '\",\"batchid\":\"' + encryptedbatchid + '\"}';\r\n           // this.props.getELNTestValidation(test,this.props.Login.integrationSettings); \r\n           const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n             data: {\r\n                 openELNSheet: true,\r\n                 masterData: {\r\n                     ...this.props.Login.masterData,  \r\n                     enlLink:link,\r\n                     baseURL:baseURL\r\n                 }                    \r\n             }\r\n         }\r\n         this.props.updateStore(updateInfo);           \r\n        }else{\r\n            const updateInfo = {\r\n               typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openELNSheet: false,\r\n                    masterData: {\r\n                        ...this.props.Login.masterData,  \r\n                        enlLink:\"\"\r\n                    }                    \r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n    }\r\n }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        let selectedRecord={};\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDropImage = (attachedFiles, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = attachedFiles;\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    saveSample =(addedsamplelist) =>{\r\n    if(addedsamplelist === undefined ){\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLESTOSUBMIT\" }));\r\n      }else if(addedsamplelist.length > 0){\r\n        let sampleArray = [];\r\n        addedsamplelist.map(item => \r\n            sampleArray.push({\r\n                npreregno:item.npreregno, \r\n                ntransactionsamplecode:item.ntransactionsamplecode, \r\n                ntransactiontestcode : item.ntransactiontestcode,\r\n                nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster ? \r\n                this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode : transactionStatus.NA,\r\n                sarno:item.jsonuidata.samplelist.sarno,\r\n                ssamplearno:item.jsonuidata.samplelist.ssamplearno,\r\n                stestname:item.jsonuidata.samplelist.stestname,\r\n                jsonuidata : {\r\n                    samplelist : item.jsonuidata.samplelist,\r\n                },\r\n                jsondata : {\r\n                    samplelist : item.jsondata.samplelist,\r\n                }\r\n              }\r\n            )\r\n        )\r\n\r\n        let nbatchmastercode = this.props.Login.masterData.SelectedBatchmaster &&\r\n        this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;\r\n        // batchSample = {\r\n        //     npreregno: addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\r\n        //     ntransactionsamplecode : addedsamplelist.map(sample=>sample.ntransactionsamplecode).join(\",\"),\r\n        //     ntransactiontestcode : addedsamplelist.map(sample=>sample.ntransactiontestcode).join(\",\"),\r\n        //     npreregno : addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\r\n        //     nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster &&\r\n        //     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n        //     jsonuidata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}',\r\n        //     jsondata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}'\r\n        // }\r\n        //jsondata : \r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                batchSample:nbatchmastercode,\r\n                sampleArray,\r\n                userInfo : this.props.Login.userInfo,\r\n                masterData:this.props.Login.masterData,\r\n                nregtypecode : this.props.Login.masterData.defaultRegistrationType ?\r\n                this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode \r\n                                              : transactionStatus.NA,\r\n                ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA\r\n            }\r\n        }\r\n         this.props.createSampleAction(inputParam.inputData);\r\n      }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLESTOSUBMIT\" }));\r\n      }\r\n    \r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        \r\n        if(this.props.Login.operation===\"createSample\"){\r\n            this.saveSample(this.state.addedSamplesList)\r\n        }else if(this.props.Login.operation===\"initiate\"){\r\n            this.testStartActions(this.props.Login.masterData.SelectedBatchmaster,this.props.Login.testStartId)\r\n        }else if(this.props.Login.operation===\"complete\"){\r\n            this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,this.props.Login.completeId)\r\n        }else if(this.props.Login.operation===\"createiqcsample\"){\r\n            this.batchSaveIQCActions(this.props.Login.masterData.SelectedBatchmaster)\r\n        }else{\r\n        let inputData = {};\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n        this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        if(this.props.Login.operation ===\"create\"){\r\n        inputData[\"fromDate\"]= obj.fromDate;\r\n        inputData[\"toDate\"]= obj.toDate;\r\n        }\r\n       \r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"nneedcombodataforFilter\"]=\"true\"\r\n        inputData[\"needFilterSubmit\"]=\"false\"\r\n        inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n        inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                  this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n        inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                                 this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n        inputData[\"nprevioustestcode\"] = this.state.selectedRecord && this.state.selectedRecord.nprevioustestcode != undefined ? this.state.selectedRecord.nprevioustestcode : this.state.selectedTestSynonym.value;\r\n        inputData[\"ntestcode\"]= this.state.selectedTestSynonym ? this.state.selectedTestSynonym.value : transactionStatus.NA;\r\n        inputData[\"nsectioncode\"]=this.state.selectedSection ? this.state.selectedSection.item.nsectioncode:transactionStatus.NA;\r\n        //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType.nsampletypecode;\r\n        //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType.nregtypecode;\r\n        //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.value :transactionStatus.NA;\r\n        inputData[\"ninstrumentcatcode\"]=this.state.selectedInstCategory ? this.state.selectedInstCategory.value : transactionStatus.NA;\r\n        inputData[\"ninstrumentcode\"]=this.state.selectedInstrument ? this.state.selectedInstrument.value : transactionStatus.NA;\r\n        inputData[\"nproductcode\"]=this.state.selectedProduct ? this.state.selectedProduct.value : transactionStatus.NA;\r\n        inputData[\"ntransactionstatus\"]=transactionStatus.DRAFT;\r\n        inputData[\"sbatcharno\"]='-';\r\n        // inputData[\"defaultSampleType\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n        // this.props.Login.masterData.realSampleTypeValue : transactionStatus.NA;\r\n        // inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? \r\n        // this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\r\n        // inputData[\"defaultRegistrationSubType\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? \r\n        // this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\r\n        inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n        inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n        inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n        inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n        inputData[\"sinstrumentid\"] = this.state.selectedInstrumentId && this.state.selectedInstrumentId.label;\r\n        // inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n        // this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n        // inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n        // this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n        inputData[\"napprovalversioncode\"]= this.props.Login.masterData.realApproveConfigVersion && \r\n        this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\r\n        inputData[\"napprovalconfigcode\"]= this.props.Login.masterData.realApproveConfigVersion && \r\n               this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n        inputData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA;\r\n       let postParam = undefined;\r\n            postParam = {\r\n                inputListName: \"Batchmaster\", \r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\", \r\n                unchangeList: [\"FromDate\", \"ToDate\"], isSingleGet: true,\r\n                fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\"\r\n            };\r\n        const inputParam = {\r\n            classUrl: \"batchcreation\",\r\n            methodUrl: \"Batchcreation\",\r\n            displayName: \"IDS_BATCHCREATION\",\r\n            inputData: inputData, \r\n            postParam, \r\n            searchRef: this.searchRef,\r\n            operation: this.props.Login.operation, \r\n            saveType, \r\n            formRef,\r\n        }\r\n        if(this.props.Login.operation ===\"create\"){\r\n            this.searchRef.current.value = \"\"; \r\n            this.props.createBatchmasterAction(inputParam[\"inputData\"], this.props.Login.masterData,inputParam[\"operation\"]);\r\n        }else{\r\n            inputData[\"nbatchmastercode\"]= this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;\r\n            inputData[\"SelectedBatchmaster\"]= this.props.Login.masterData.SelectedBatchmaster;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.editId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, \r\n                            masterData : this.props.Login.masterData\r\n                        },\r\n                        openModal: true, \r\n                        screenName: \"IDS_BATCHCREATION\",\r\n                        operation : inputParam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }else{\r\n            this.props.updateBatchcreationAction(inputParam[\"inputData\"], this.props.Login.masterData,inputParam[\"operation\"]);\r\n            }\r\n        }\r\n    }\r\n        // const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        // if (esignNeeded) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n        //             openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n        //             operation: this.props.Login.operation\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     const selectedRecord = { ...this.state.selectedRecord, sbatchfillinglotno: \"\" }\r\n        //     this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\r\n        // }\r\n    }\r\n\r\n    deleteBatchCreation = (selectedBatch,deleteId,operation) => {\r\n        if (selectedBatch.ntransactionstatus === transactionStatus.COMPLETED || \r\n            selectedBatch.ntransactionstatus === transactionStatus.INITIATED ||\r\n            selectedBatch.ntransactionstatus === transactionStatus.CANCELLED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        }\r\n        else {\r\n            let inputData = {};\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\", \r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedBatch.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userInfo: this.props.Login.userInfo,\r\n                                    ndesigntemplatemappingcode : this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA,\r\n                                    nsampletypecode : this.props.Login.masterData.defaultSampleType.nsampletypecode\r\n                                 },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                inputData[\"fromDate\"]= obj.fromDate;\r\n                inputData[\"toDate\"]= obj.toDate;\r\n                inputData[\"currentdate\"] = formatInputDate(new Date(), true)\r\n                inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType;\r\n                inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                          this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                           this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                inputData[\"nbatchmastercode\"] = selectedBatch.nbatchmastercode;\r\n                inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n                // inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n                // this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                inputData[\"napprovalversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? \r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\r\n                inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n                inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n                inputData[\"selectedBatch\"]=selectedBatch;\r\n                inputData[\"samples\"]=this.props.Login.masterData.Samples;         \r\n                const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                operation,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData,\"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchEditData = (editParam) =>{\r\n    if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.DRAFT){\r\n        this.props.getActiveBatchCreationService(editParam,\r\n            this.props.Login.masterData.SelectedBatchmaster)\r\n       }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n       }\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n    \r\n        if(this.props.Login.masterData.defaultRegistrationType != undefined && this.state.FilterStatusValue.item != undefined && this.state.nregsubtypecode.item != undefined &&\r\n            this.state.ApprovalVersionValue.item != undefined \r\n        ){\r\n            let inputData = {};\r\n            \r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n            this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            inputData[\"fromDate\"]= obj.fromDate;\r\n            inputData[\"toDate\"]= obj.toDate;\r\n            inputData[\"needFilterSubmit\"]=\"true\";\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n            inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n             inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n             this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n          //  inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n          //  this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n               this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            // inputData[\"napprovalversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n            //    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? \r\n            //    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || \r\n                                                                                        transactionStatus.NA;\r\n            inputData[\"realApproveConfigVersion\"]= this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\r\n            inputData[\"realdefaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\r\n            \r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchmaster\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                inputData: inputData, \r\n                searchRef: this.searchRef,\r\n            }\r\n        this.props.onActionFilterSubmit(inputParam[\"inputData\"],this.props.Login.masterData);\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\"}));\r\n      }\r\n    }\r\n\r\n    reloadData = (isFilterSubmit) => {\r\n        this.searchRef.current.value = \"\";\r\n        // let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\r\n    if(this.props.Login.masterData.realRegTypeValue !== transactionStatus.NA || \r\n        this.props.Login.masterData.realRegTypeValue !== null &&\r\n        this.props.Login.masterData.realRegSubTypeValue !== transactionStatus.NA || \r\n        this.props.Login.masterData.realRegSubTypeValue !== null && \r\n        this.props.Login.masterData.realApproveConfigVersion !== transactionStatus.NA ||\r\n        this.props.Login.masterData.realApproveConfigVersion !== null && \r\n        this.props.Login.masterData.defaultFilterStatus !== transactionStatus.NA ||\r\n        this.props.Login.masterData.defaultFilterStatus !== null) {\r\n\r\n        let inputData = {};\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n        this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        inputData[\"fromDate\"]= obj.fromDate;\r\n        inputData[\"toDate\"]= obj.toDate;\r\n        inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n\r\n        inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue &&\r\n        this.props.Login.masterData.realSampleTypeValue.nsampletypecode ? this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n\r\n        inputData[\"nregtypecode\"]= this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ?\r\n        this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n\r\n        inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n\r\n        inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType;\r\n        \r\n        inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\r\n\r\n        inputData[\"defaultRegistrationSubType\"]= this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\r\n\r\n        inputData[\"ntranscode\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus || transactionStatus.NA;\r\n\r\n        inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode || transactionStatus.NA;\r\n       \r\n        inputData[\"realApproveConfigVersion\"]= this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\r\n\r\n        inputData[\"napprovalversioncode\"]= this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item.napprovalconfigversioncode || transactionStatus.NA;\r\n\r\n        //inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\r\n        inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus || transactionStatus.NA;\r\n        inputData[\"realdefaultFilterStatus\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus || transactionStatus.NA;\r\n        inputData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n        const inputParam = {\r\n            classUrl: \"batchcreation\",\r\n            methodUrl: \"Batchmaster\",\r\n            displayName: \"IDS_BATCHCREATION\",\r\n            inputData: inputData, \r\n            searchRef: this.searchRef,\r\n        }\r\n\r\n      this.props.onActionFilterSubmit(inputParam[\"inputData\"],this.props.Login.masterData);\r\n    }else{\r\n        \r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\"}));\r\n    }\r\n}\r\n  \r\n\r\n    // addtest=(addParam)=>{\r\n    //     if(this.props.Login.masterData.Batchmaster == undefined ){\r\n    //         toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" })); \r\n    //     }else{\r\n    //         this.props.getTestInstrumentComboService(addParam)\r\n    //     }\r\n    // }\r\n\r\n    // convertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n\r\n    onClickReport = (selectedRecord, flag, ncontrolcode) => {\r\n        const reportParam = {\r\n            classUrl: \"certificategeneration\",\r\n            methodUrl: \"reportGeneration\",\r\n            screenName: \"CertificateGeneration\",\r\n            operation: \"previewReport\",\r\n            primaryKeyField: \"nreleasebatchcode\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: -1,\r\n            inputData: {\r\n                sprimarykeyname: 'nreleasebatchcode',\r\n                nprimarykey: selectedRecord.nreleasebatchcode,\r\n                nreleasebatchcode: selectedRecord.nreleasebatchcode,\r\n                ncertificatetypecode: selectedRecord.ndecision === transactionStatus.PASS && flag === 1 ? selectedRecord.ncertificatetypecode : -1,\r\n                ndecisionstatus: selectedRecord.ndecision,// === transactionStatus.DRAFT ? transactionStatus.PASS : selectedRecord.ndecision,\r\n                nreporttypecode: flag === 2 ? reportTypeEnum.SCREENWISE : reportTypeEnum.BATCH,\r\n                ncontrolcode,\r\n                ncoareporttypecode: flag === 2 ? -1 : reportCOAType.BATCHPREVIEW,\r\n                userinfo: this.props.Login.userInfo,\r\n                nflag: flag,\r\n                skipbatchvalidation: true,\r\n            }\r\n        };\r\n        this.props.onClickReport(reportParam)\r\n    }\r\n\r\n    reportMethod = (value) => {\r\n        if (value.method === 1) {\r\n            this.onClickReport(this.props.Login.masterData.SelectedBatchCreation, 2, value.controlId);\r\n        }\r\n        else {\r\n            this.onClickReport(this.props.Login.masterData.SelectedBatchCreation, 1, value.controlId);\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster,updateStore,\r\n    getTestInstrumentComboService,getTestInstrumentCategory,getInstrumentForInstCategory,\r\n    getProductBasedInstrument,\r\n    getBatchCreationDetails,onActionFilterSubmit,getProductcategoryAction,\r\n    createBatchmasterAction,getSamplesForGrid,getSelectedBatchCreationDetail,\r\n    createSampleAction,deleteSampleAction,getActiveBatchCreationService,\r\n    updateBatchcreationAction,deleteBatchCreation,batchInitiateAction,\r\n    getBCRegistrationSubType,batchCompleteAction,validateEsignCredential,\r\n    filterColumnData,getBatchhistoryAction,\r\n    getBatchSection,viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,\r\n    getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,\r\n    getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType,\r\n    getTreeByMaterial,getNewRegSpecification,cancelIQCSampleAction,batchCancelAction,\r\n    batchInitiateDatePopup,batchCompleteDatePopup,getInstrumentID,getBatchViewResultAction\r\n    //,batchTAT\r\n})(injectIntl(BatchCreation));\r\n\r\n"]},"metadata":{},"sourceType":"module"}