{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\submitter\\\\submitter\\\\Submitter.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport BreadcrumbComponent from \"../../../components/Breadcrumb.Component\";\nimport { Affix } from 'rsuite';\nimport { getControlMap, constructOptionList, showEsign, validateEmail, validatePhoneNumber } from '../../../components/CommonScript';\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\nimport { callService, crudMaster, validateEsignCredential, updateStore, getSubmitterDetail, getSubmitterCombo, getInstitution, getInstitutionSite, changeInstitutionCategoryFilterSubmit, filterColumnData, updateSubmitter, getInstitutionCategory, getSubmitterInstitution, getSubmitterSite } from \"../../../actions\";\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from \"react-bootstrap\";\nimport ListMaster from \"../../../components/list-master/list-master.component\";\nimport ReactTooltip from 'react-tooltip';\nimport SubmitterCategoryFilter from \"./SubmitterCategoryFilter\";\nimport { ReadOnlyText } from '../../../components/App.styles';\nimport { ContentPanel } from '../../product/product.styled';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt, faUserTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { DEFAULT_RETURN } from \"../../../actions/LoginTypes\";\nimport AddSubmitter from \"./AddSubmitter\";\nimport SlideOutModal from \"../../../components/slide-out-modal/SlideOutModal\";\nimport Esign from \"../../audittrail/Esign\";\nimport SubmitterTab from \"./SubmitterTab\";\nimport { transactionStatus } from \"../../../components/Enumeration\";\nimport { toast } from \"react-toastify\";\nimport CustomTab from '../../../components/custom-tabs/custom-tabs.component'; //import SubmitterTab from \"./SubmitterTab\";\n\nimport AddInstitutionCategory from \"./AddInstitutionCategory\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Submitter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.deleteSite = productparam => {\n      let inputParam = {};\n      inputParam = {\n        classUrl: \"submitter\",\n        methodUrl: productparam.methodUrl,\n        inputData: {\n          [productparam.methodUrl.toLowerCase()]: productparam.selectedRecord,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        operation: productparam.operation,\n        dataState: this.state.dataState\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, productparam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openChildModal: true,\n            screenName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \" + this.props.intl.formatMessage({\n              id: \"IDS_FILE\"\n            })),\n            operation: productparam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n      }\n    };\n\n    this.ConfirmDelete = (operation, deleteId) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteSite(operation, deleteId, operation.screenName ? operation.screenName : \"IDS_INSTRUMENT\"));\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      {\n        tabMap.set(\"IDS_SITE\", /*#__PURE__*/React.createElement(SubmitterTab, {\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          dataState: this.props.Login.dataState,\n          masterData: this.props.Login || [],\n          SubmitterMapping: this.props.Login.masterData.SubmitterMapping || [],\n          selectedInstrument: this.props.Login.masterData.selectedRecord || [],\n          selectedSubmitter: this.props.Login.masterData.selectedSubmitter || [],\n          userInfo: this.props.Login.userInfo,\n          inputParam: this.props.Login.inputParam,\n          deleteRecord: this.deleteSite,\n          addSubmitterMapping: this.addSubmitterMapping,\n          getInstitutionCategory: this.props.getInstitutionCategory,\n          InstrumentSection: this.props.Login.masterData.Institution || [],\n          screenName: \"IDS_SITE\",\n          selectedRecord: this.state.selectedRecord || [],\n          settings: this.props.Login.settings,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }\n        }));\n      }\n      return tabMap;\n    };\n\n    this.onTabChange = tabProps => {\n      const tabScreen = tabProps.screenName;\n      let masterData = this.props.Login.masterData;\n      masterData['tabScreen'] = tabScreen;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let screenName = this.props.Login.screenName;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else if (this.props.Login.operation === \"update\") {\n          loadEsign = false;\n          openModal = true;\n          screenName = \"IDS_SUBMITTER\";\n          selectedRecord[\"agree\"] = 4;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        } else {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord[\"agree\"] = 4;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.props.Login.screenName === \"IDS_SITE\") {\n        const selectedRecord = this.state.selectedRecord;\n        let inputData = [];\n        inputData[\"submittermapping\"] = {};\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        let suppliermatrixArray = [];\n        suppliermatrixArray = this.state.selectedSupplierCategory.map(item => {\n          let suppliermat = {};\n          suppliermat[\"ninstitutionsitecode\"] = item.value;\n          suppliermat[\"ninstitutioncatcode\"] = selectedRecord[\"ninstitutioncatcode\"].value;\n          suppliermat[\"ninstitutioncode\"] = selectedRecord[\"ninstitutioncode\"].value;\n          suppliermat[\"ssubmittercode\"] = this.props.Login.masterData.selectedSubmitter.ssubmittercode;\n          return suppliermat;\n        });\n        inputData['submittermapping'] = suppliermatrixArray; //inputData[\"submittermapping\"][\"selectedSubmitterSite\"]=this.state.selectedSupplierCategory;\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"SubmitterMapping\",\n          displayName: this.props.Login.screenName,\n          inputData: inputData,\n          selectedId: this.state.selectedRecord[\"ssubmittercode\"],\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef //postParam: postParam\n\n        };\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      } else {\n        const isValidateEmail = this.state.selectedRecord[\"semail\"] ? validateEmail(this.state.selectedRecord[\"semail\"]) : true;\n        let postParam = undefined;\n\n        if (isValidateEmail) {\n          let inputData = [];\n          inputData[\"userinfo\"] = this.props.Login.userInfo;\n          let dataState = undefined;\n\n          if (this.props.Login.screenName === \"IDS_SUBMITTER\") {\n            if (this.props.Login.operation === \"update\") {\n              // edit\n              const selectedRecord = this.state.selectedRecord;\n              postParam = {\n                inputListName: \"Submitter\",\n                selectedObject: \"selectedSubmitter\",\n                primaryKeyField: \"ssubmittercode\"\n              };\n              inputData[\"submitter\"] = {};\n              this.fieldSubmitterList.map(item => {\n                return inputData[\"submitter\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\n              });\n              inputData[\"submitter\"][\"ssubmittercode\"] = selectedRecord[\"ssubmittercode\"] ? selectedRecord[\"ssubmittercode\"] : \"\";\n              inputData[\"submitter\"][\"ninstitutioncatcode\"] = this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode : -1;\n              inputData[\"submitter\"][\"ninstitutioncode\"] = this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.ninstitutioncode : -1;\n              inputData[\"submitter\"][\"ninstitutionsitecode\"] = this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode : -1;\n              inputData[\"submitter\"][\"ninstitutiondeptcode\"] = this.state.selectedRecord[\"ninstitutiondeptcode\"] ? this.state.selectedRecord[\"ninstitutiondeptcode\"].value : -1;\n              inputData[\"submitter\"][\"ntransactionstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"] ? this.state.selectedRecord[\"ntransactionstatus\"] : transactionStatus.ACTIVE;\n              inputData[\"submitter\"][\"ssubmitterid\"] = this.state.selectedRecord[\"ssubmitterid\"] ? this.state.selectedRecord[\"ssubmitterid\"] : \"\";\n              dataState = this.state.dataState;\n              const inputParam = {\n                classUrl: this.props.Login.inputParam.classUrl,\n                methodUrl: \"Submitter\",\n                displayName: this.props.Login.screenName,\n                inputData: inputData,\n                selectedId: this.state.selectedRecord[\"ssubmittercode\"],\n                operation: this.props.Login.operation,\n                saveType,\n                formRef,\n                dataState,\n                searchRef: this.searchRef,\n                postParam: postParam\n              };\n              this.updateSubmitter(inputParam, this.props.Login.masterData, this.props.Login.ncontrolCode);\n              return;\n            } else {\n              //add               \n              inputData[\"submitter\"] = {\n                \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n              };\n              this.fieldSubmitterList.map(item => {\n                return inputData[\"submitter\"][item] = this.state.selectedRecord[item] !== undefined ? this.state.selectedRecord[item] : \"\";\n              });\n              inputData[\"submitter\"][\"ninstitutioncatcode\"] = this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode : -1;\n              inputData[\"submitter\"][\"ninstitutioncode\"] = this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.ninstitutioncode : -1;\n              inputData[\"submitter\"][\"ninstitutionsitecode\"] = this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode : -1;\n              inputData[\"submitter\"][\"ninstitutiondeptcode\"] = this.state.selectedRecord[\"ninstitutiondeptcode\"] ? this.state.selectedRecord[\"ninstitutiondeptcode\"].value : -1;\n              inputData[\"submitter\"][\"ntransactionstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"] ? this.state.selectedRecord[\"ntransactionstatus\"] : transactionStatus.ACTIVE;\n            }\n\n            const inputParam = {\n              classUrl: this.props.Login.inputParam.classUrl,\n              methodUrl: \"Submitter\",\n              displayName: this.props.Login.screenName,\n              inputData: inputData,\n              selectedId: this.state.selectedRecord[\"ssubmittercode\"],\n              operation: this.props.Login.operation,\n              saveType,\n              formRef,\n              dataState,\n              searchRef: this.searchRef,\n              postParam: postParam\n            }; //this.setState({ FilterInstitutionCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\n            //this.setState({ FilterInstitution: { \"label\":  this.state.selectedRecord.ninstitutioncode.label, \"value\":  this.state.selectedRecord.ninstitutioncode.value } });\n            //this.setState({ FilterInstitutionSite: { \"label\":  this.state.selectedRecord.ninstitutionsitecode.label, \"value\":  this.state.selectedRecord.ninstitutionsitecode.value } });\n\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  loadEsign: true,\n                  screenData: {\n                    inputParam,\n                    masterData: this.props.Login.masterData\n                  },\n                  openModal: true,\n                  screenName: this.props.intl.formatMessage({\n                    id: this.props.Login.screenName\n                  }),\n                  operation: this.props.Login.operation\n                }\n              };\n              this.props.updateStore(updateInfo);\n            } else {\n              this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n            }\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_ENTERVALIDEMAIL\"\n          }));\n        }\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteSubmitter(\"delete\", deleteId));\n    };\n\n    this.DeleteSubmitter = (operation, ncontrolCode) => {\n      let inputData = [];\n      inputData[\"submitter\"] = this.props.Login.masterData.selectedSubmitter;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"submitter\",\n        selectedObject: \"selectedSubmitter\",\n        primaryKeyField: \"ssubmittercode\",\n        primaryKeyValue: this.props.Login.masterData.selectedSubmitter.ssubmittercode,\n        fetchUrl: \"submitter/getSelectedSubmitterDetail\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"Submitter\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"Submitter\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.retireSubmitter = (methodUrl, selectedSubmitter, operation, ncontrolCode) => {\n      if (selectedSubmitter.ntransactionstatus === transactionStatus.RETIRED) {\n        let message = \"\";\n\n        if (operation === \"retire\") {\n          message = \"IDS_SUBMITTERALREADYRETIRED\";\n        }\n\n        toast.warn(this.props.intl.formatMessage({\n          id: message\n        }));\n      } else {\n        const postParam = {\n          inputListName: \"Submitter\",\n          selectedObject: \"selectedSubmitter\",\n          primaryKeyField: \"ssubmittercode\",\n          primaryKeyValue: selectedSubmitter.ssubmittercode,\n          fetchUrl: \"submitter/getSubmitter\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl,\n          postParam,\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo,\n            \"submitter\": selectedSubmitter\n          },\n          operation,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"IDS_SUBMITTER\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\n      } else {\n        if (event.target.name === \"smobileno\" || event.target.name === \"sfaxno\" || event.target.name === \"stelephone\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChangeFilter = (comboData, fieldName) => {\n      //const selectedRecord =this.state.selectedRecord || [];\n      if (comboData) {\n        if (fieldName === \"ninstitutioncatcode\") {\n          if (comboData.value !== this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode) {\n            let inputParam = {};\n            inputParam = {\n              nflag: 2,\n              ninstitutioncatcode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultInstitutionCategory: comboData.item\n            };\n            this.props.getInstitution(inputParam); //this.setState({nfilterInstitutionCategory:comboData});\n          }\n        } else if (fieldName === \"ninstitutioncode\") {\n          if (comboData.value !== this.props.Login.masterData.defaultInstitution.ninstitutioncode) {\n            let inputParam = {};\n            inputParam = {\n              nflag: 3,\n              ninstitutioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultInstitution: comboData.item\n            };\n            this.props.getInstitutionSite(inputParam);\n          }\n        } else if (fieldName === \"ninstitutionsitecode\") {\n          if (comboData.value !== this.props.Login.masterData.defaultInstitutionSite.ninstitutionsitecode) {\n            let masterData = { ...this.props.Login.masterData,\n              defaultInstitutionSite: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        }\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      if (this.props.Login.masterData.defaultInstitutionCategory) {\n        if (this.props.Login.masterData.defaultInstitution) {\n          if (this.props.Login.masterData.defaultInstitutionSite) {\n            let inputParam = {\n              inputData: {\n                ninstitutioncatcode: this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode,\n                ninstitutioncode: this.props.Login.masterData.defaultInstitution.ninstitutioncode,\n                ninstitutionsitecode: this.props.Login.masterData.defaultInstitutionSite.ninstitutionsitecode,\n                userinfo: this.props.Login.userInfo\n              },\n              classUrl: \"submitter\",\n              methodUrl: \"SubmitterByFilter\"\n            };\n            this.props.changeInstitutionCategoryFilterSubmit(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.props.Login.masterData.defaultInstitutionCategory, this.props.Login.masterData.FilterInstitution, this.props.Login.masterData.defaultInstitution, this.props.Login.masterData.FilterInstitutionSite, this.props.Login.masterData.defaultInstitutionSite);\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_INSTITUTIONSITENOTAVAILABLE\"\n            }));\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_INSTITUTIONNOTAVAILABLE\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTITUTIONCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"Submitter\",\n        //this.props.Login.inputParam.methodUrl,\n        displayName: this.props.intl.formatMessage({\n          id: \"IDS_SUBMITTER\"\n        }),\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData != null) {\n        if (fieldName === \"ninstitutiondeptcode\") {\n          selectedRecord[\"ninstitutiondeptcode\"] = comboData;\n          selectedRecord[\"sinstitutiondeptcode\"] = comboData.item[\"sinstitutiondeptcode\"];\n          this.setState({\n            selectedRecord\n          });\n        }\n      }\n    };\n\n    this.onTabComboChange = (comboData, fieldName, caseNo) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData != null) {\n        switch (caseNo) {\n          case 1:\n            if (fieldName === \"ninstitutioncatcode\") {\n              selectedRecord[\"ninstitutioncatcode\"] = comboData;\n              selectedRecord[\"sinstitutioncatname\"] = comboData.item[\"sinstitutioncatname\"];\n              selectedRecord[\"ninstitutioncode\"] = {};\n              selectedRecord[\"sinstitutionname\"] = \"\"; //selectedRecord[\"sinstitutionsitename\"]=\"\"\n\n              this.props.getSubmitterInstitution(this.state.selectedRecord.ninstitutioncatcode.value, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName); //this.setState({ selectedRecord,selectedSupplierCategory:undefined,selectedInstitutionSite:undefined});\n            }\n\n          case 2:\n            if (fieldName === \"ninstitutioncode\") {\n              selectedRecord[\"ninstitutioncode\"] = comboData;\n              selectedRecord[\"sinstitutionname\"] = comboData.item[\"sinstitutionname\"];\n              this.props.getSubmitterSite(this.state.selectedRecord.ninstitutioncode.value, this.props.Login.masterData.selectedSubmitter, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName); //this.setState({ selectedRecord });\n            }\n\n          case 3:\n            if (fieldName === \"ninstitutionsitecode\") {\n              let selectedSupplierCategory = comboData; //let selectedRecord= comboData;\n              // selectedRecord[\"sinstitutionsitename\"] = comboData.item[\"sinstitutionsitename\"];\n\n              this.setState({\n                selectedRecord,\n                selectedSupplierCategory\n              });\n            }\n\n        }\n      }\n    };\n\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sinstitutioncatname\", \"sinstitutionname\", \"sinstitutionsitename\", \"sfirstname\", \"slastname\", \"ssubmitterid\", \"sshortname\", \"swardname\", \"stelephone\", \"smobileno\", \"sfaxno\", \"semail\", \"sspecialization\", \"sreportrequirement\", \"ssampletransport\", \"stransdisplaystatus\"];\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      dataState: _dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      selectedRecord: {}\n    };\n  }\n\n  render() {\n    let mandatoryFields = [];\n\n    if (this.props.Login.screenName === \"IDS_SUBMITTER\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_FIRSTNAME\",\n        dataField: \"sfirstname\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_LASTNAME\",\n        dataField: \"slastname\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_SHORTNAME\",\n        dataField: \"sshortname\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTITUTIONDEPARTMENT\",\n        dataField: \"ninstitutiondeptcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_MOBILENO\",\n        dataField: \"smobileno\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_EMAIL\",\n        dataField: \"semail\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      });\n    } else {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_INSTITUTIONCATEGORY\",\n        dataField: \"sinstitutioncatname\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTITUTION\",\n        dataField: \"sinstitutionname\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      } // {\n      //     mandatory: true,\n      //     idsName: \"IDS_INSTITUTIONSITE\",\n      //     dataField: \"sinstitutionsitename\",\n      //     mandatoryLabel: \"IDS_SELECT\",\n      //     controlType: \"selectbox\",\n      // }\n      );\n    }\n\n    this.fieldSubmitterList = [\"ninstitutioncatcode\", \"ninstitutioncode\", \"ninstitutionsitecode\", \"ninstitutiondeptcode\", \"sfirstname\", \"slastname\", \"sshortname\", \"swardname\", \"stelephone\", \"smobileno\", \"sfaxno\", \"semail\", \"sspecialization\", \"sreportrequirement\", \"ssampletransport\", \"ntransactionstatus\"];\n    let submitterStatusCSS = \"outline-secondary\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.ACTIVE) {\n      submitterStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.RETIRED) {\n      submitterStatusCSS = \"outline-danger\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.DEACTIVE) {\n      activeIconCSS = \"\";\n    }\n\n    const addId = this.state.controlMap.has(\"AddSubmitter\") && this.state.controlMap.get(\"AddSubmitter\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditSubmitter\") && this.state.controlMap.get(\"EditSubmitter\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteSubmitter\") && this.state.controlMap.get(\"DeleteSubmitter\").ncontrolcode;\n    const retireId = this.state.controlMap.has(\"RetireSubmitter\") && this.state.controlMap.get(\"RetireSubmitter\").ncontrolcode;\n    const addSubmitterMapping = this.state.controlMap.has(\"AddSubmitterMapping\") && this.state.controlMap.get(\"AddSubmitterMapping\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"Submitter\",\n      selectedObject: \"selectedSubmitter\",\n      primaryKeyField: \"ssubmittercode\",\n      fetchUrl: \"submitter/getSelectedSubmitterDetail\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        submitter: this.props.Login.masterData.selectedSubmitter\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Submitter\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Submitter,\n      getMasterDetail: Submitter => this.props.getSubmitterDetail(Submitter, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedSubmitter,\n      primaryKeyField: \"ssubmittercode\",\n      mainField: \"ssubmittername\",\n      firstField: \"ssubmitterid\",\n      secondField: \"stransdisplaystatus\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: true,\n      openModal: () => this.props.getSubmitterCombo(\"IDS_SUBMITTER\", \"create\", \"ssubmittercode\", // this.state.selectedRecord,\n      this.props.Login.masterData, this.props.Login.userInfo, addId) //openFilter={this.openFilter}\n      //closeFilter={this.closeFilter}\n      //onFilterSubmit={this.onFilterSubmit}\n      // showFilterIcon={true}\n      // showFilter={this.props.Login.showFilter}\n      ,\n      filterComponent: [{\n        \"IDS_SUBMITTERCATEGORYFILTER\": /*#__PURE__*/React.createElement(SubmitterCategoryFilter, {\n          FilterInstitutionCategory: this.state.FilterInstitutionCategory || [],\n          nfilterInstitutionCategory: this.props.Login.masterData.defaultInstitutionCategory || {},\n          FilterInstitution: this.state.FilterInstitution || [],\n          nfilterInstitution: this.props.Login.masterData.defaultInstitution || {},\n          FilterInstitutionSite: this.state.FilterInstitutionSite || [],\n          nfilterInstitutionSite: this.props.Login.masterData.defaultInstitutionSite || {},\n          selectedRecord: this.state.selectedRecord || {},\n          onFilterComboChange: this.onComboChangeFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 45\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 41\n      }\n    }, this.props.Login.masterData.selectedSubmitter ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.selectedSubmitter.ssubmittername), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${submitterStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 69\n      }\n    }, activeIconCSS !== \"\" ? /*#__PURE__*/React.createElement(\"i\", {\n      class: activeIconCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 97\n      }\n    }) : \"\", this.props.Login.masterData.selectedSubmitter.stransdisplaystatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstitution\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getSubmitterCombo(\"IDS_SUBMITTER\", \"update\", \"ssubmittercode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstitution\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"retireSubmitter\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(retireId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RETIRE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: () => this.retireSubmitter(\"Submitter\", this.props.Login.masterData.selectedSubmitter, \"retire\", retireId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUserTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 73\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SHORTNAME\",\n      messasge: \"Short Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSubmitter.sshortname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_WARDNAME\",\n      messasge: \"Ward Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSubmitter.swardname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TELEPHONE\",\n      messasge: \"Telephone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSubmitter.stelephone))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MOBILENO\",\n      messasge: \"Mobile No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSubmitter.smobileno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FAX\",\n      messasge: \"Fax No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSubmitter.sfaxno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EMAIL\",\n      messasge: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSubmitter.semail))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIALIZATION\",\n      messasge: \"Specialization\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSubmitter.sspecialization))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REPORTINGREQUIREMENT\",\n      messasge: \"Report Requriement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSubmitter.sreportrequirement))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SAMPLETRANSPORT\",\n      messasge: \"Sample Transport\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSubmitter.ssampletransport))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DISPLAYSTATUS\",\n      messasge: \"Display Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedSubmitter.stransdisplaystatus)))), this.props.Login.masterData && /*#__PURE__*/React.createElement(CustomTab, {\n      activeKey: 'IDS_SITE',\n      tabDetail: this.tabDetail(),\n      destroyInactiveTabPane: true,\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 89\n      }\n    }))) : \"\"))))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === \"IDS_SUBMITTER\" ? /*#__PURE__*/React.createElement(AddSubmitter, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        InstitutionDepartment: this.props.Login.InstitutionDepartment,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === \"IDS_SITE\" ? /*#__PURE__*/React.createElement(AddInstitutionCategory, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        selectedSupplierCategory: this.state.selectedSupplierCategory || {},\n        onInputOnChange: this.onInputOnChange,\n        onTabComboChange: this.onTabComboChange,\n        institutionCategory: this.props.Login.institutionCategory,\n        institution: this.props.Login.FilterInstitution,\n        institutionSite: this.props.Login.FilterInstitutionSite,\n        selectedInstitutionSite: this.props.Login.selectedInstitutionSite,\n        InstitutionDepartment: this.props.Login.InstitutionDepartment,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 33\n        }\n      }) : \"\"(\"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n    breadCrumbData.push({\n      \"label\": \"IDS_INSTITUTIONCATEGORY\",\n      \"value\": this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.sinstitutioncatname : \"-\"\n    }, {\n      \"label\": \"IDS_INSTITUTION\",\n      \"value\": this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.sinstitutionname : \"-\"\n    }, {\n      \"label\": \"IDS_INSTITUTIONSITE\",\n      \"value\": this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.sinstitutionsitename : \"-\"\n    });\n    return breadCrumbData;\n  }\n\n  updateSubmitter(inputParam, masterData, ncontrolcode) {\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: true,\n          screenData: {\n            inputParam,\n            masterData\n          },\n          openModal: true,\n          //screenName: \"completeaction\",\n          operation: this.props.Login.operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    } else {\n      this.props.updateSubmitter(inputParam, this.props.Login.masterData);\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== \"\" && props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(previousProps) {\n    let selectedRecord = this.state.selectedRecord || {};\n    let selectedSupplierCategory = this.state.selectedSupplierCategory || {};\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      this.setState({\n        selectedRecord,\n        selectedSupplierCategory: {}\n      });\n    }\n\n    if (this.props.Login.selectedSupplierCategory !== previousProps.Login.selectedSupplierCategory) {\n      selectedSupplierCategory = this.props.Login.selectedSupplierCategory;\n      this.setState({\n        selectedSupplierCategory\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.props.Login.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        this.setState({\n          data: this.props.Login.masterData,\n          dataState,\n          selectedRecord: this.props.Login.selectedRecord\n        });\n      }\n\n      let FilterInstitutionCategory = this.state.FilterInstitutionCategory || {};\n      let FilterInstitution = this.state.FilterInstitution || {};\n      let FilterInstitutionSite = this.state.FilterInstitutionSite || {}; // let nfilterInstitutionCategory =this.state.nfilterInstitutionCategory ||{};\n      // let nfilterInstitution =this.state.nfilterInstitution || {};\n      // let nfilterInstitutionSite = this.state.nfilterInstitutionSite ||{};\n\n      if (this.props.Login.masterData.FilterInstitutionCategory !== previousProps.Login.masterData.FilterInstitutionCategory) {\n        const InstitutionCategoryMap = constructOptionList(this.props.Login.masterData.FilterInstitutionCategory || [], \"ninstitutioncatcode\", \"sinstitutioncatname\", 'ninstitutioncatcode', 'descending', false);\n        FilterInstitutionCategory = InstitutionCategoryMap.get(\"OptionList\"); // if(FilterInstitutionCategory && FilterInstitutionCategory.length >=0){\n        //     // const FTC =this.props.Login.masterData.selectedInstitutionCategory;\n        //     // nfilterInstitutionCategory = FTC;\n        //     nfilterInstitutionCategory = FilterInstitutionCategory[0];\n        // }       \n      }\n\n      if (this.props.Login.masterData.FilterInstitution !== previousProps.Login.masterData.FilterInstitution) {\n        const InstitutionMap = constructOptionList(this.props.Login.masterData.FilterInstitution || [], \"ninstitutioncode\", \"sinstitutionname\", 'ninstitutioncode', 'descending', false);\n        FilterInstitution = InstitutionMap.get(\"OptionList\"); // if(FilterInstitution && FilterInstitution.length >=0){\n        //     nfilterInstitution = FilterInstitution[0];\n        // }  \n      }\n\n      if (this.props.Login.masterData.FilterInstitutionSite !== previousProps.Login.masterData.FilterInstitutionSite) {\n        const InstitutionMap = constructOptionList(this.props.Login.masterData.FilterInstitutionSite || [], \"ninstitutionsitecode\", \"sinstitutionsitename\", 'ninstitutionsitecode', 'descending', false);\n        FilterInstitutionSite = InstitutionMap.get(\"OptionList\"); // if(FilterInstitutionSite && FilterInstitutionSite.length>=0){\n        //     nfilterInstitutionSite =FilterInstitutionSite[0] ;\n        // }   \n      } //this.setState({ FilterInstitutionCategory,nfilterInstitutionCategory,FilterInstitution,nfilterInstitution,FilterInstitutionSite,nfilterInstitutionSite});\n\n\n      this.setState({\n        FilterInstitutionCategory,\n        FilterInstitution,\n        FilterInstitutionSite\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const filterData = this.generateBreadCrumData();\n      this.setState({\n        filterData\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getSubmitterDetail,\n  getSubmitterCombo,\n  getInstitution,\n  getInstitutionSite,\n  changeInstitutionCategoryFilterSubmit,\n  filterColumnData,\n  updateSubmitter,\n  getInstitutionCategory,\n  getSubmitterInstitution,\n  getSubmitterSite\n})(injectIntl(Submitter));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/submitter/submitter/Submitter.jsx"],"names":["React","connect","FormattedMessage","injectIntl","BreadcrumbComponent","Affix","getControlMap","constructOptionList","showEsign","validateEmail","validatePhoneNumber","ConfirmMessage","callService","crudMaster","validateEsignCredential","updateStore","getSubmitterDetail","getSubmitterCombo","getInstitution","getInstitutionSite","changeInstitutionCategoryFilterSubmit","filterColumnData","updateSubmitter","getInstitutionCategory","getSubmitterInstitution","getSubmitterSite","Row","Col","Card","FormGroup","FormLabel","Nav","ListMaster","ReactTooltip","SubmitterCategoryFilter","ReadOnlyText","ContentPanel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faUserTimes","DEFAULT_RETURN","AddSubmitter","SlideOutModal","Esign","SubmitterTab","transactionStatus","toast","CustomTab","AddInstitutionCategory","mapStateToProps","state","Login","Submitter","Component","constructor","props","openFilter","showFilter","updateInfo","typeName","data","closeFilter","deleteSite","productparam","inputParam","classUrl","methodUrl","inputData","toLowerCase","selectedRecord","userInfo","operation","dataState","userRoleControlRights","nformcode","ncontrolCode","loadEsign","screenData","masterData","openChildModal","screenName","genericLabel","slanguagetypecode","concat","intl","formatMessage","id","ConfirmDelete","deleteId","confirmMessage","confirm","tabDetail","tabMap","Map","set","controlMap","SubmitterMapping","selectedSubmitter","addSubmitterMapping","Institution","settings","onTabChange","tabProps","tabScreen","closeModal","openModal","selectedId","onSaveClick","saveType","formRef","suppliermatrixArray","selectedSupplierCategory","map","item","suppliermat","value","ssubmittercode","displayName","searchRef","isValidateEmail","postParam","undefined","inputListName","selectedObject","primaryKeyField","fieldSubmitterList","selectedInstitutionCategory","ninstitutioncatcode","selectedInstitution","ninstitutioncode","selectedInstitutionSite","ninstitutionsitecode","ACTIVE","nmastersitecode","info","DeleteSubmitter","primaryKeyValue","fetchUrl","fecthInputObject","userinfo","isClearSearch","retireSubmitter","ntransactionstatus","RETIRED","message","warn","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","onNumericInputOnChange","name","setState","onInputOnChange","event","target","type","checked","DEACTIVE","onComboChangeFilter","comboData","fieldName","defaultInstitutionCategory","nflag","defaultInstitution","defaultInstitutionSite","onFilterSubmit","FilterInstitutionCategory","FilterInstitution","FilterInstitutionSite","reloadData","current","onComboChange","onTabComboChange","caseNo","createRef","searchFieldList","skip","take","parseInt","render","mandatoryFields","push","mandatory","idsName","dataField","mandatoryLabel","controlType","submitterStatusCSS","activeIconCSS","addId","has","get","ncontrolcode","editId","retireId","filterParam","submitter","breadCrumbData","filterData","searchedData","ssubmittername","stransdisplaystatus","indexOf","e","sshortname","swardname","stelephone","smobileno","sfaxno","semail","sspecialization","sreportrequirement","ssampletransport","masterStatus","InstitutionDepartment","institutionCategory","generateBreadCrumData","sinstitutioncatname","sinstitutionname","sinstitutionsitename","getDerivedStateFromProps","error","componentDidUpdate","previousProps","Object","values","InstitutionCategoryMap","InstitutionMap"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport BreadcrumbComponent from \"../../../components/Breadcrumb.Component\";\r\nimport { Affix } from 'rsuite';\r\nimport { getControlMap, constructOptionList, showEsign, validateEmail, validatePhoneNumber } from '../../../components/CommonScript';\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\nimport { callService, crudMaster, validateEsignCredential, updateStore, getSubmitterDetail, getSubmitterCombo,\r\n     getInstitution, getInstitutionSite, changeInstitutionCategoryFilterSubmit, filterColumnData, updateSubmitter,\r\n     getInstitutionCategory,getSubmitterInstitution,getSubmitterSite\r\n     } from \"../../../actions\";\r\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from \"react-bootstrap\";\r\nimport ListMaster from \"../../../components/list-master/list-master.component\";\r\nimport ReactTooltip from 'react-tooltip';\r\nimport SubmitterCategoryFilter from \"./SubmitterCategoryFilter\";\r\nimport { ReadOnlyText } from '../../../components/App.styles';\r\nimport { ContentPanel } from '../../product/product.styled';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt, faUserTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DEFAULT_RETURN } from \"../../../actions/LoginTypes\";\r\nimport AddSubmitter from \"./AddSubmitter\";\r\nimport SlideOutModal from \"../../../components/slide-out-modal/SlideOutModal\";\r\nimport Esign from \"../../audittrail/Esign\";\r\nimport SubmitterTab from \"./SubmitterTab\";\r\nimport { transactionStatus } from \"../../../components/Enumeration\";\r\nimport { toast } from \"react-toastify\";\r\nimport CustomTab from '../../../components/custom-tabs/custom-tabs.component';\r\n//import SubmitterTab from \"./SubmitterTab\";\r\nimport AddInstitutionCategory from \"./AddInstitutionCategory\";\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Submitter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"sinstitutioncatname\", \"sinstitutionname\", \"sinstitutionsitename\", \"sfirstname\", \"slastname\", \"ssubmitterid\", \"sshortname\", \"swardname\", \"stelephone\", \"smobileno\",\r\n            \"sfaxno\", \"semail\", \"sspecialization\", \"sreportrequirement\", \"ssampletransport\", \"stransdisplaystatus\"];\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedRecord: {},\r\n        }\r\n    }\r\n    render() {\r\n        let mandatoryFields = [];\r\n        if (this.props.Login.screenName === \"IDS_SUBMITTER\") {\r\n            mandatoryFields.push(\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_FIRSTNAME\",\r\n                    dataField: \"sfirstname\",\r\n                    mandatoryLabel: \"IDS_ENTER\",\r\n                    controlType: \"textbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_LASTNAME\",\r\n                    dataField: \"slastname\",\r\n                    mandatoryLabel: \"IDS_ENTER\",\r\n                    controlType: \"textbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_SHORTNAME\",\r\n                    dataField: \"sshortname\",\r\n                    mandatoryLabel: \"IDS_ENTER\",\r\n                    controlType: \"textbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_INSTITUTIONDEPARTMENT\",\r\n                    dataField: \"ninstitutiondeptcode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_MOBILENO\",\r\n                    dataField: \"smobileno\",\r\n                    mandatoryLabel: \"IDS_ENTER\",\r\n                    controlType: \"textbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_EMAIL\",\r\n                    dataField: \"semail\",\r\n                    mandatoryLabel: \"IDS_ENTER\",\r\n                    controlType: \"textbox\",\r\n                },\r\n            );\r\n        }\r\n        else{\r\n\r\n            mandatoryFields.push(\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_INSTITUTIONCATEGORY\",\r\n                    dataField: \"sinstitutioncatname\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                },\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_INSTITUTION\",\r\n                    dataField: \"sinstitutionname\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                },\r\n                // {\r\n                //     mandatory: true,\r\n                //     idsName: \"IDS_INSTITUTIONSITE\",\r\n                //     dataField: \"sinstitutionsitename\",\r\n                //     mandatoryLabel: \"IDS_SELECT\",\r\n                //     controlType: \"selectbox\",\r\n                // }\r\n                );\r\n\r\n        }\r\n\r\n        this.fieldSubmitterList = [\"ninstitutioncatcode\", \"ninstitutioncode\", \"ninstitutionsitecode\", \"ninstitutiondeptcode\",\r\n            \"sfirstname\", \"slastname\", \"sshortname\", \"swardname\", \"stelephone\", \"smobileno\", \"sfaxno\", \"semail\", \"sspecialization\", \"sreportrequirement\", \"ssampletransport\", \"ntransactionstatus\"];\r\n\r\n\r\n        let submitterStatusCSS = \"outline-secondary\";\r\n        let activeIconCSS = \"fa fa-check\"\r\n        if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.ACTIVE) {\r\n            submitterStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.RETIRED) {\r\n            submitterStatusCSS = \"outline-danger\";\r\n            activeIconCSS = \"\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedSubmitter && this.props.Login.masterData.selectedSubmitter.ntransactionstatus === transactionStatus.DEACTIVE) {\r\n            activeIconCSS = \"\";\r\n        }\r\n\r\n        const addId = this.state.controlMap.has(\"AddSubmitter\") && this.state.controlMap.get(\"AddSubmitter\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditSubmitter\") && this.state.controlMap.get(\"EditSubmitter\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteSubmitter\") && this.state.controlMap.get(\"DeleteSubmitter\").ncontrolcode;\r\n        const retireId = this.state.controlMap.has(\"RetireSubmitter\") && this.state.controlMap.get(\"RetireSubmitter\").ncontrolcode;\r\n        const addSubmitterMapping = this.state.controlMap.has(\"AddSubmitterMapping\") && this.state.controlMap.get(\"AddSubmitterMapping\").ncontrolcode;\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"Submitter\", selectedObject: \"selectedSubmitter\", primaryKeyField: \"ssubmittercode\",\r\n            fetchUrl: \"submitter/getSelectedSubmitterDetail\", fecthInputObject: { userinfo: this.props.Login.userInfo, submitter: this.props.Login.masterData.selectedSubmitter },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n\r\n\r\n        };\r\n\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {/* {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    } */}\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Submitter\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Submitter}\r\n                                getMasterDetail={(Submitter) => this.props.getSubmitterDetail(Submitter, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedSubmitter}\r\n                                primaryKeyField=\"ssubmittercode\"\r\n                                mainField=\"ssubmittername\"\r\n                                firstField=\"ssubmitterid\"\r\n                                secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                                openModal={() =>\r\n                                    this.props.getSubmitterCombo(\r\n                                        \"IDS_SUBMITTER\",\r\n                                        \"create\",\r\n                                        \"ssubmittercode\",\r\n                                        // this.state.selectedRecord,\r\n                                        this.props.Login.masterData,\r\n                                        this.props.Login.userInfo,\r\n                                        addId\r\n                                    )\r\n                                }\r\n                                //openFilter={this.openFilter}\r\n                                //closeFilter={this.closeFilter}\r\n                                //onFilterSubmit={this.onFilterSubmit}\r\n                               // showFilterIcon={true}\r\n                               // showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_SUBMITTERCATEGORYFILTER\":\r\n                                            <SubmitterCategoryFilter\r\n                                                FilterInstitutionCategory={this.state.FilterInstitutionCategory || []}\r\n                                                nfilterInstitutionCategory={this.props.Login.masterData.defaultInstitutionCategory || {}}\r\n                                                FilterInstitution={this.state.FilterInstitution || []}\r\n                                                nfilterInstitution={this.props.Login.masterData.defaultInstitution || {}}\r\n                                                FilterInstitutionSite={this.state.FilterInstitutionSite || []}\r\n                                                nfilterInstitutionSite={this.props.Login.masterData.defaultInstitutionSite || {}}\r\n                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                onFilterComboChange={this.onComboChangeFilter}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            {this.props.Login.masterData.selectedSubmitter ? (\r\n                                                <>\r\n                                                    <Card.Header>\r\n                                                        <ReactTooltip\r\n                                                            place=\"bottom\"\r\n                                                            globalEventOff=\"click\"\r\n                                                            id=\"tooltip_list_wrap\"\r\n                                                        />\r\n                                                        <Card.Title className=\"product-title-main\">\r\n                                                            {this.props.Login.masterData.selectedSubmitter.ssubmittername}\r\n                                                        </Card.Title>\r\n                                                        <Card.Subtitle>\r\n                                                            <div className=\"d-flex product-category\">\r\n                                                                <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                    <span className={`btn btn-outlined ${submitterStatusCSS} btn-sm ml-3`}>\r\n                                                                        {activeIconCSS !== \"\" ? <i class={activeIconCSS}></i> : \"\"}\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.stransdisplaystatus}\r\n\r\n                                                                    </span>\r\n                                                                </h2>\r\n                                                                <div className=\"d-inline\">\r\n                                                                    <Nav.Link\r\n                                                                        name=\"editInstitution\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\", })}\r\n                                                                        data-for=\"tooltip_list_wrap\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                        className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                        onClick={(e) => this.props.getSubmitterCombo(\"IDS_SUBMITTER\", \"update\", \"ssubmittercode\", this.props.Login.masterData, this.props.Login.userInfo, editId)}\r\n\r\n                                                                    >\r\n                                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                    </Nav.Link>\r\n                                                                    <Nav.Link\r\n                                                                        name=\"deleteInstitution\"\r\n                                                                        className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\", })}\r\n                                                                        data-for=\"tooltip_list_wrap\" hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        onClick={() => this.ConfirmDelete(deleteId)}\r\n                                                                    >\r\n                                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                    </Nav.Link>\r\n                                                                    <Nav.Link\r\n                                                                        name=\"retireSubmitter\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(retireId) === -1}\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                        onClick={() => this.retireSubmitter(\"Submitter\", this.props.Login.masterData.selectedSubmitter, \"retire\", retireId)}\r\n                                                                    >\r\n                                                                        <FontAwesomeIcon icon={faUserTimes} />\r\n                                                                    </Nav.Link>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Card.Subtitle>\r\n                                                    </Card.Header>\r\n                                                    <Card.Body>\r\n                                                        <Row>\r\n                                                            {/* <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_SUBMITTER\" messasge=\"Submitter\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedSubmitter.ssubmittername}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col> */}\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_SHORTNAME\" messasge=\"Short Name\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.sshortname}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_WARDNAME\" messasge=\"Ward Name\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.swardname}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_TELEPHONE\" messasge=\"Telephone\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.stelephone}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_MOBILENO\" messasge=\"Mobile No\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.smobileno}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_FAX\" messasge=\"Fax No\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.sfaxno}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_EMAIL\" messasge=\"Email\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.semail}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_SPECIALIZATION\" messasge=\"Specialization\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.sspecialization}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_REPORTINGREQUIREMENT\" messasge=\"Report Requriement\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.sreportrequirement}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_SAMPLETRANSPORT\" messasge=\"Sample Transport\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.ssampletransport}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                            <Col md={4}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>\r\n                                                                        <FormattedMessage id=\"IDS_DISPLAYSTATUS\" messasge=\"Display Status\" />\r\n                                                                    </FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {this.props.Login.masterData.selectedSubmitter.stransdisplaystatus}\r\n                                                                    </ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        {this.props.Login.masterData && <CustomTab activeKey={ 'IDS_SITE'} tabDetail={this.tabDetail()}   destroyInactiveTabPane={true}  onTabChange={this.onTabChange} /> }\r\n\r\n                                                    </Card.Body>\r\n                                                </>\r\n                                            ) : (\r\n                                                \"\"\r\n                                            )}\r\n                                        </Card>\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal && (\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ?\r\n                             (\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                            ) \r\n                            :\r\n\r\n                             this.props.Login.screenName === \"IDS_SUBMITTER\" ?\r\n                              (\r\n                                <AddSubmitter\r\n                                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    InstitutionDepartment={this.props.Login.InstitutionDepartment}\r\n                                    operation={this.props.Login.operation}\r\n                                    inputParam={this.props.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n\r\n                                />\r\n                            ) \r\n                            : \r\n\r\n                            this.props.Login.screenName === \"IDS_SITE\" ?\r\n                              (\r\n                                <AddInstitutionCategory\r\n                                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    selectedSupplierCategory={this.state.selectedSupplierCategory || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onTabComboChange={this.onTabComboChange}\r\n                                    institutionCategory={this.props.Login.institutionCategory}\r\n                                    institution={this.props.Login.FilterInstitution}\r\n                                    institutionSite={this.props.Login.FilterInstitutionSite}\r\n                                    selectedInstitutionSite={this.props.Login.selectedInstitutionSite}\r\n                                    InstitutionDepartment={this.props.Login.InstitutionDepartment}\r\n                                    operation={this.props.Login.operation}\r\n                                    inputParam={this.props.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    \r\n\r\n                                />\r\n                            ) :(\"\")\r\n                            \r\n                            (\r\n                                \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        breadCrumbData.push(\r\n            {\r\n                \"label\": \"IDS_INSTITUTIONCATEGORY\",\r\n                \"value\": this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.sinstitutioncatname : \"-\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_INSTITUTION\",\r\n                \"value\": this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.sinstitutionname : \"-\"\r\n\r\n            },\r\n            {\r\n                \"label\": \"IDS_INSTITUTIONSITE\",\r\n                \"value\": this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.sinstitutionsitename : \"-\"\r\n\r\n            }\r\n        );\r\n\r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    deleteSite = (productparam) => {\r\n       \r\n        let inputParam = {};\r\n        \r\n            inputParam = {\r\n                classUrl: \"submitter\",\r\n                methodUrl: productparam.methodUrl,\r\n                inputData: {\r\n                    [productparam.methodUrl.toLowerCase()]: productparam.selectedRecord,\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n\r\n                },\r\n                operation: productparam.operation,\r\n                dataState: this.state.dataState\r\n            }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, productparam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openChildModal: true, screenName: this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode].concat(\" \"+this.props.intl.formatMessage({id : \"IDS_FILE\"})) , operation: productparam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n        }\r\n   \r\n}\r\n\r\nConfirmDelete = (operation, deleteId) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.deleteSite(\r\n          operation,\r\n          deleteId,\r\n          operation.screenName ? operation.screenName : \"IDS_INSTRUMENT\"\r\n        )\r\n    );\r\n  };\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        {\r\n            tabMap.set(\"IDS_SITE\",\r\n            <SubmitterTab \r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        dataState={this.props.Login.dataState}\r\n        masterData={this.props.Login|| []}\r\n        SubmitterMapping={this.props.Login.masterData.SubmitterMapping||[]}\r\n        selectedInstrument={this.props.Login.masterData.selectedRecord||[]}\r\n        selectedSubmitter={this.props.Login.masterData.selectedSubmitter||[]}\r\n        userInfo={this.props.Login.userInfo}\r\n        inputParam={this.props.Login.inputParam}\r\n        deleteRecord={this.deleteSite}\r\n        addSubmitterMapping={this.addSubmitterMapping}\r\n        getInstitutionCategory={this.props.getInstitutionCategory}\r\n        InstrumentSection={this.props.Login.masterData.Institution || []}\r\n        screenName=\"IDS_SITE\"\r\n        selectedRecord={this.state.selectedRecord||[]}\r\n        settings={this.props.Login.settings}\r\n            />\r\n            );\r\n        }\r\n        return tabMap;\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const tabScreen = tabProps.screenName;\r\n        let masterData = this.props.Login.masterData\r\n        masterData['tabScreen'] = tabScreen\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let screenName = this.props.Login.screenName;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else if (this.props.Login.operation === \"update\") {\r\n                loadEsign = false;\r\n                openModal = true;\r\n                screenName = \"IDS_SUBMITTER\";\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason'] = \"\";\r\n            } else {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason'] = \"\";\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null, screenName },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n\r\n    updateSubmitter(inputParam, masterData, ncontrolcode) {\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    openModal: true,\r\n                    //screenName: \"completeaction\",\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.updateSubmitter(inputParam, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if(this.props.Login.screenName === \"IDS_SITE\")\r\n        {   const selectedRecord = this.state.selectedRecord;\r\n            let inputData = [];\r\n            inputData[\"submittermapping\"] = {};\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let suppliermatrixArray = []\r\n\r\n            suppliermatrixArray=this.state.selectedSupplierCategory.map(item => {\r\n                let suppliermat = {}\r\n            suppliermat[\"ninstitutionsitecode\"]=item.value;\r\n            suppliermat[\"ninstitutioncatcode\"]=selectedRecord[\"ninstitutioncatcode\"].value ;\r\n            suppliermat[\"ninstitutioncode\"]=selectedRecord[\"ninstitutioncode\"].value ;\r\n            suppliermat[\"ssubmittercode\"]=this.props.Login.masterData.selectedSubmitter.ssubmittercode;\r\n            return suppliermat\r\n            });\r\n\r\n            \r\n            inputData['submittermapping'] = suppliermatrixArray;\r\n\r\n            //inputData[\"submittermapping\"][\"selectedSubmitterSite\"]=this.state.selectedSupplierCategory;\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"SubmitterMapping\",\r\n                displayName: this.props.Login.screenName,\r\n                inputData: inputData,\r\n                selectedId: this.state.selectedRecord[\"ssubmittercode\"],\r\n                operation: this.props.Login.operation, saveType, formRef,\r\n                searchRef: this.searchRef,\r\n                //postParam: postParam\r\n            }\r\n\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n\r\n        else{\r\n        const isValidateEmail = this.state.selectedRecord[\"semail\"] ? validateEmail(this.state.selectedRecord[\"semail\"]) : true;\r\n        let postParam = undefined;\r\n        if (isValidateEmail) {\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let dataState = undefined;\r\n            if (this.props.Login.screenName === \"IDS_SUBMITTER\") {\r\n                if (this.props.Login.operation === \"update\") {  // edit\r\n                    const selectedRecord = this.state.selectedRecord;\r\n                    postParam = {\r\n                        inputListName: \"Submitter\",\r\n                        selectedObject: \"selectedSubmitter\",\r\n                        primaryKeyField: \"ssubmittercode\",\r\n                    };\r\n                    inputData[\"submitter\"] = {};\r\n\r\n                    this.fieldSubmitterList.map(item => {\r\n                        return inputData[\"submitter\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\r\n                    })\r\n                    inputData[\"submitter\"][\"ssubmittercode\"] = selectedRecord[\"ssubmittercode\"] ? selectedRecord[\"ssubmittercode\"] : \"\";\r\n                    inputData[\"submitter\"][\"ninstitutioncatcode\"] = this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode : -1;\r\n                    inputData[\"submitter\"][\"ninstitutioncode\"] = this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.ninstitutioncode : -1;\r\n                    inputData[\"submitter\"][\"ninstitutionsitecode\"] = this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode : -1;\r\n                    inputData[\"submitter\"][\"ninstitutiondeptcode\"] = this.state.selectedRecord[\"ninstitutiondeptcode\"] ? this.state.selectedRecord[\"ninstitutiondeptcode\"].value : -1;\r\n                    inputData[\"submitter\"][\"ntransactionstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"] ? this.state.selectedRecord[\"ntransactionstatus\"] : transactionStatus.ACTIVE;\r\n                    inputData[\"submitter\"][\"ssubmitterid\"] = this.state.selectedRecord[\"ssubmitterid\"] ? this.state.selectedRecord[\"ssubmitterid\"] : \"\";\r\n                    dataState = this.state.dataState;\r\n\r\n\r\n\r\n                    const inputParam = {\r\n                        classUrl: this.props.Login.inputParam.classUrl,\r\n                        methodUrl: \"Submitter\",\r\n                        displayName: this.props.Login.screenName,\r\n                        inputData: inputData,\r\n                        selectedId: this.state.selectedRecord[\"ssubmittercode\"],\r\n                        operation: this.props.Login.operation, saveType, formRef, dataState,\r\n                        searchRef: this.searchRef,\r\n                        postParam: postParam\r\n                    }\r\n\r\n\r\n                    this.updateSubmitter(inputParam, this.props.Login.masterData, this.props.Login.ncontrolCode);\r\n                    return;\r\n                } else {\r\n                    //add               \r\n                    inputData[\"submitter\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n\r\n                    this.fieldSubmitterList.map(item => {\r\n                        return inputData[\"submitter\"][item] = this.state.selectedRecord[item] !== undefined ? this.state.selectedRecord[item] : \"\";\r\n                    })\r\n                    inputData[\"submitter\"][\"ninstitutioncatcode\"] = this.props.Login.masterData.selectedInstitutionCategory ? this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode : -1;\r\n                    inputData[\"submitter\"][\"ninstitutioncode\"] = this.props.Login.masterData.selectedInstitution ? this.props.Login.masterData.selectedInstitution.ninstitutioncode : -1;\r\n                    inputData[\"submitter\"][\"ninstitutionsitecode\"] = this.props.Login.masterData.selectedInstitutionSite ? this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode : -1;\r\n                    inputData[\"submitter\"][\"ninstitutiondeptcode\"] = this.state.selectedRecord[\"ninstitutiondeptcode\"] ? this.state.selectedRecord[\"ninstitutiondeptcode\"].value : -1;\r\n                    inputData[\"submitter\"][\"ntransactionstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"] ? this.state.selectedRecord[\"ntransactionstatus\"] : transactionStatus.ACTIVE;\r\n\r\n\r\n                }\r\n\r\n                const inputParam = {\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    methodUrl: \"Submitter\",\r\n                    displayName: this.props.Login.screenName,\r\n                    inputData: inputData,\r\n                    selectedId: this.state.selectedRecord[\"ssubmittercode\"],\r\n                    operation: this.props.Login.operation, saveType, formRef, dataState,\r\n                    searchRef: this.searchRef,\r\n                    postParam: postParam\r\n                }\r\n                //this.setState({ FilterInstitutionCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\r\n                //this.setState({ FilterInstitution: { \"label\":  this.state.selectedRecord.ninstitutioncode.label, \"value\":  this.state.selectedRecord.ninstitutioncode.value } });\r\n                //this.setState({ FilterInstitutionSite: { \"label\":  this.state.selectedRecord.ninstitutionsitecode.label, \"value\":  this.state.selectedRecord.ninstitutionsitecode.value } });\r\n\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.screenName }),\r\n                            operation: this.props.Login.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                }\r\n            }\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }))\r\n        }\r\n\r\n    }\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteSubmitter(\"delete\", deleteId));\r\n    }\r\n\r\n    DeleteSubmitter = (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        inputData[\"submitter\"] = this.props.Login.masterData.selectedSubmitter;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"submitter\", selectedObject: \"selectedSubmitter\",\r\n            primaryKeyField: \"ssubmittercode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedSubmitter.ssubmittercode,\r\n            fetchUrl: \"submitter/getSelectedSubmitterDetail\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"Submitter\",\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam,\r\n            isClearSearch: this.props.Login.isClearSearch\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"Submitter\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    retireSubmitter = (methodUrl, selectedSubmitter, operation, ncontrolCode) => {\r\n        if (selectedSubmitter.ntransactionstatus === transactionStatus.RETIRED) {\r\n            let message = \"\";\r\n            if (operation === \"retire\") {\r\n                message = \"IDS_SUBMITTERALREADYRETIRED\";\r\n            }\r\n            toast.warn(this.props.intl.formatMessage({ id: message }));\r\n        }\r\n        else {\r\n\r\n            const postParam = {\r\n                inputListName: \"Submitter\", selectedObject: \"selectedSubmitter\",\r\n                primaryKeyField: \"ssubmittercode\",\r\n                primaryKeyValue: selectedSubmitter.ssubmittercode,\r\n                fetchUrl: \"submitter/getSubmitter\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl, postParam,\r\n                inputData: {\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n                    \"submitter\": selectedSubmitter\r\n                },\r\n                operation,\r\n                isClearSearch: this.props.Login.isClearSearch\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_SUBMITTER\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n        } else {\r\n            if (event.target.name === \"smobileno\" || event.target.name === \"sfaxno\" || event.target.name === \"stelephone\") {\r\n                if (event.target.value !== \"\") {\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n\r\n\r\n\r\n        }\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onComboChangeFilter = (comboData, fieldName) => {\r\n        //const selectedRecord =this.state.selectedRecord || [];\r\n        if (comboData) {\r\n            if (fieldName === \"ninstitutioncatcode\") {\r\n                if (comboData.value !== this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode) {\r\n\r\n                    let inputParam = {};\r\n                    inputParam = {\r\n                        nflag: 2,\r\n                        ninstitutioncatcode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        defaultInstitutionCategory: comboData.item,\r\n\r\n                    }\r\n                    this.props.getInstitution(inputParam)\r\n                    //this.setState({nfilterInstitutionCategory:comboData});\r\n\r\n                }\r\n            }\r\n            else if (fieldName === \"ninstitutioncode\") {\r\n                if (comboData.value !== this.props.Login.masterData.defaultInstitution.ninstitutioncode) {\r\n                    let inputParam = {};\r\n                    inputParam = {\r\n                        nflag: 3,\r\n                        ninstitutioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        defaultInstitution: comboData.item\r\n                    }\r\n                    this.props.getInstitutionSite(inputParam)\r\n                }\r\n            }\r\n            else if (fieldName === \"ninstitutionsitecode\") {\r\n                if (comboData.value !== this.props.Login.masterData.defaultInstitutionSite.ninstitutionsitecode) {\r\n                    let masterData = { ...this.props.Login.masterData, defaultInstitutionSite: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        if (this.props.Login.masterData.defaultInstitutionCategory) {\r\n            if (this.props.Login.masterData.defaultInstitution) {\r\n                if (this.props.Login.masterData.defaultInstitutionSite) {\r\n                    let inputParam = {\r\n                        inputData: {\r\n                            ninstitutioncatcode: this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode,\r\n                            ninstitutioncode: this.props.Login.masterData.defaultInstitution.ninstitutioncode,\r\n                            ninstitutionsitecode: this.props.Login.masterData.defaultInstitutionSite.ninstitutionsitecode,\r\n                            userinfo: this.props.Login.userInfo,\r\n\r\n                        },\r\n                        classUrl: \"submitter\",\r\n                        methodUrl: \"SubmitterByFilter\"\r\n                    }\r\n                    this.props.changeInstitutionCategoryFilterSubmit(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.props.Login.masterData.defaultInstitutionCategory,\r\n                        this.props.Login.masterData.FilterInstitution, this.props.Login.masterData.defaultInstitution,\r\n                        this.props.Login.masterData.FilterInstitutionSite, this.props.Login.masterData.defaultInstitutionSite);\r\n\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTITUTIONSITENOTAVAILABLE\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTITUTIONNOTAVAILABLE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTITUTIONCATEGORYNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n    // reloadData = () => {\r\n    //     if (this.props.Login.masterData.selectedInstitutionCategory !== null) {\r\n    //         if (this.props.Login.masterData.selectedInstitution !== null) {\r\n    //             if (this.props.Login.masterData.selectedInstitutionSite !== null) {\r\n    //                 this.searchRef.current.value = \"\";\r\n\r\n    //                 const inputParam = {\r\n    //                     inputData: {\r\n    //                         \"ninstitutioncatcode\": this.props.Login.masterData.selectedInstitutionCategory.ninstitutioncatcode,\r\n    //                         \"ninstitutioncode\": this.props.Login.masterData.selectedInstitution.ninstitutioncode,\r\n    //                         \"ninstitutionsitecode\": this.props.Login.masterData.selectedInstitutionSite.ninstitutionsitecode,\r\n    //                         \"userinfo\": this.props.Login.userInfo\r\n    //                     },\r\n    //                     classUrl: this.props.Login.inputParam.classUrl,\r\n    //                     methodUrl: \"SubmitterByFilter\",\r\n    //                     displayName: this.props.intl.formatMessage({ id: \"IDS_SUBMITTER\" }),\r\n    //                 };\r\n    //                 this.props.changeInstitutionCategoryFilterSubmit(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.props.Login.masterData.selectedInstitutionCategory,\r\n    //                     this.props.Login.masterData.FilterInstitution, this.props.Login.masterData.selectedInstitution,\r\n    //                     this.props.Login.masterData.FilterInstitutionSite, this.props.Login.masterData.selectedInstitutionSite);\r\n    //             } else {\r\n    //                 toast.warn(this.props.intl.formatMessage({ id: \"IDS_CONFIGINSTITUTIONSITE\" }));\r\n    //             }\r\n    //         } else {\r\n    //             toast.warn(this.props.intl.formatMessage({ id: \"IDS_CONFIGINSTITUTION\" }));\r\n    //         }\r\n    //     } else {\r\n    //         toast.warn(this.props.intl.formatMessage({ id: \"IDS_CONFIGINSTITUTIONCATEGORY\" }));\r\n    //     }\r\n    // }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        const inputParam = {\r\n                        inputData : {\"userinfo\":this.props.Login.userInfo},                        \r\n                        classUrl: this.props.Login.inputParam.classUrl,\r\n                        methodUrl: \"Submitter\",//this.props.Login.inputParam.methodUrl,\r\n                        displayName: this.props.intl.formatMessage({ id: \"IDS_SUBMITTER\" }),\r\n                        userInfo: this.props.Login.userInfo\r\n                    };     \r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData != null) {\r\n            if (fieldName === \"ninstitutiondeptcode\") {\r\n                selectedRecord[\"ninstitutiondeptcode\"] = comboData;\r\n                selectedRecord[\"sinstitutiondeptcode\"] = comboData.item[\"sinstitutiondeptcode\"];\r\n                this.setState({ selectedRecord });\r\n            }\r\n        }\r\n    }\r\n\r\n    onTabComboChange = (comboData, fieldName, caseNo) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData != null) {\r\n\r\n            switch (caseNo) {\r\n                case 1:\r\n\r\n            if (fieldName === \"ninstitutioncatcode\") {\r\n                selectedRecord[\"ninstitutioncatcode\"] = comboData;\r\n                selectedRecord[\"sinstitutioncatname\"] = comboData.item[\"sinstitutioncatname\"];\r\n                selectedRecord[\"ninstitutioncode\"]={};\r\n                selectedRecord[\"sinstitutionname\"]=\"\";\r\n                //selectedRecord[\"sinstitutionsitename\"]=\"\"\r\n                this.props.getSubmitterInstitution(\r\n                    this.state.selectedRecord.ninstitutioncatcode.value,\r\n                    this.props.Login.userInfo,\r\n                    selectedRecord,\r\n                    this.props.Login.screenName\r\n                );\r\n                //this.setState({ selectedRecord,selectedSupplierCategory:undefined,selectedInstitutionSite:undefined});\r\n            }\r\n\r\n\r\n            case 2:\r\n                \r\n            if (fieldName === \"ninstitutioncode\") {\r\n                selectedRecord[\"ninstitutioncode\"] = comboData;\r\n                selectedRecord[\"sinstitutionname\"] = comboData.item[\"sinstitutionname\"];\r\n\r\n                 this.props.getSubmitterSite(\r\n                     this.state.selectedRecord.ninstitutioncode.value,\r\n                     this.props.Login.masterData.selectedSubmitter,\r\n                     this.props.Login.userInfo,\r\n                     selectedRecord,\r\n                     this.props.Login.screenName\r\n                 );\r\n                //this.setState({ selectedRecord });\r\n            }\r\n\r\n            case 3:\r\n\r\n            if (fieldName === \"ninstitutionsitecode\") {\r\n                let selectedSupplierCategory = comboData;\r\n                //let selectedRecord= comboData;\r\n               // selectedRecord[\"sinstitutionsitename\"] = comboData.item[\"sinstitutionsitename\"];\r\n                this.setState({ selectedRecord, selectedSupplierCategory });\r\n            }\r\n\r\n            \r\n        }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let selectedSupplierCategory = this.state.selectedSupplierCategory || {};\r\n        \r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            this.setState({ selectedRecord,selectedSupplierCategory:{} });\r\n        }\r\n\r\n        if (this.props.Login.selectedSupplierCategory !== previousProps.Login.selectedSupplierCategory) {\r\n            selectedSupplierCategory = this.props.Login.selectedSupplierCategory\r\n            this.setState({ selectedSupplierCategory });\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({ userRoleControlRights, controlMap, data: this.props.Login.masterData });\r\n            }\r\n            else {\r\n\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({ data: this.props.Login.masterData, dataState, selectedRecord: this.props.Login.selectedRecord });\r\n            }\r\n\r\n\r\n\r\n            let FilterInstitutionCategory = this.state.FilterInstitutionCategory || {};\r\n            let FilterInstitution = this.state.FilterInstitution || {};\r\n            let FilterInstitutionSite = this.state.FilterInstitutionSite || {};\r\n\r\n            // let nfilterInstitutionCategory =this.state.nfilterInstitutionCategory ||{};\r\n            // let nfilterInstitution =this.state.nfilterInstitution || {};\r\n            // let nfilterInstitutionSite = this.state.nfilterInstitutionSite ||{};\r\n\r\n            if (this.props.Login.masterData.FilterInstitutionCategory !== previousProps.Login.masterData.FilterInstitutionCategory) {\r\n                const InstitutionCategoryMap = constructOptionList(this.props.Login.masterData.FilterInstitutionCategory || [], \"ninstitutioncatcode\", \"sinstitutioncatname\", 'ninstitutioncatcode', 'descending', false);\r\n                FilterInstitutionCategory = InstitutionCategoryMap.get(\"OptionList\");\r\n\r\n                // if(FilterInstitutionCategory && FilterInstitutionCategory.length >=0){\r\n                //     // const FTC =this.props.Login.masterData.selectedInstitutionCategory;\r\n                //     // nfilterInstitutionCategory = FTC;\r\n                //     nfilterInstitutionCategory = FilterInstitutionCategory[0];\r\n                // }       \r\n            }\r\n            if (this.props.Login.masterData.FilterInstitution !== previousProps.Login.masterData.FilterInstitution) {\r\n                const InstitutionMap = constructOptionList(this.props.Login.masterData.FilterInstitution || [], \"ninstitutioncode\", \"sinstitutionname\", 'ninstitutioncode', 'descending', false);\r\n                FilterInstitution = InstitutionMap.get(\"OptionList\");\r\n\r\n                // if(FilterInstitution && FilterInstitution.length >=0){\r\n                //     nfilterInstitution = FilterInstitution[0];\r\n                // }  \r\n\r\n            }\r\n            if (this.props.Login.masterData.FilterInstitutionSite !== previousProps.Login.masterData.FilterInstitutionSite) {\r\n                const InstitutionMap = constructOptionList(this.props.Login.masterData.FilterInstitutionSite || [], \"ninstitutionsitecode\", \"sinstitutionsitename\", 'ninstitutionsitecode', 'descending', false);\r\n                FilterInstitutionSite = InstitutionMap.get(\"OptionList\");\r\n\r\n                // if(FilterInstitutionSite && FilterInstitutionSite.length>=0){\r\n                //     nfilterInstitutionSite =FilterInstitutionSite[0] ;\r\n                // }   \r\n\r\n            }\r\n\r\n            //this.setState({ FilterInstitutionCategory,nfilterInstitutionCategory,FilterInstitution,nfilterInstitution,FilterInstitutionSite,nfilterInstitutionSite});\r\n            this.setState({ FilterInstitutionCategory, FilterInstitution, FilterInstitutionSite });\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n            this.setState({ filterData });\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSubmitterDetail, getSubmitterCombo, getInstitution, getInstitutionSite, changeInstitutionCategoryFilterSubmit, filterColumnData, updateSubmitter,\r\n    getInstitutionCategory,getSubmitterInstitution,getSubmitterSite\r\n})(injectIntl(Submitter));\r\n\r\n"]},"metadata":{},"sourceType":"module"}