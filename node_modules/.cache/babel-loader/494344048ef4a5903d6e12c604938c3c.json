{"ast":null,"code":"import{ResultEntry}from'../../components/Enumeration';export function numberConversion(number,rounding){return Number.parseFloat(number).toFixed(rounding);}export function numericGrade(parameter,sfinalresult){var result=sfinalresult;var minA=parseInt(parameter.smina);var maxA=parseInt(parameter.smaxa);var minB=parseInt(parameter.sminb);var maxB=parseInt(parameter.smaxb);var minLoD=parseInt(parameter.sminlod);var maxLoD=parseInt(parameter.smaxlod);var minLOQ=parseInt(parameter.sminloq);var maxLOQ=parseInt(parameter.smaxloq);var disregard=parseInt(parameter.sdisregard);if(disregard!==\"null\"&&disregard>sfinalresult){return ResultEntry.RESULTSTATUS_BELOWDISREGARD;}else if(!isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result>=minLOQ&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BQL;}else if(!isNaN(minLoD)&&!isNaN(maxLoD)){if(result>=minLoD&&result<=maxLoD){return ResultEntry.RESULTSTATUS_BDL;}else{return findLOQandLOD(minLoD,maxLoD,minLOQ,maxLOQ,minA,maxA,minB,maxB,sfinalresult);}}else{return findLOQandLOD(minLoD,maxLoD,minLOQ,maxLOQ,minA,maxA,minB,maxB,sfinalresult);}}else if(!isNaN(minLoD)&&!isNaN(maxLoD)){if(result>=minLoD&&result<=maxLoD){return ResultEntry.RESULTSTATUS_BDL;}else{return findLOQandLOD(minLoD,maxLoD,minLOQ,maxLOQ,minA,maxA,minB,maxB,sfinalresult);}}else{return findLOQandLOD(minLoD,maxLoD,minLOQ,maxLOQ,minA,maxA,minB,maxB,sfinalresult);}}export function findLOQandLOD(minLoD,maxLoD,minLOQ,maxLOQ,minA,maxA,minB,maxB,result){if(isNaN(minLoD)&&isNaN(maxLoD)&&isNaN(minLOQ)&&isNaN(maxLOQ)){return findGrade(minB,minA,maxA,maxB,result);}else if(!isNaN(minLoD)&&isNaN(maxLoD)&&isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result===minLoD){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&!isNaN(maxLoD)&&isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<maxLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result===maxLoD){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&isNaN(maxLoD)&&!isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<minLOQ){return ResultEntry.RESULTSTATUS_BLOD;}else if(result===minLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&isNaN(maxLoD)&&isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result<maxLOQ){return ResultEntry.RESULTSTATUS_BLOD;}else if(result===maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&!isNaN(maxLoD)&&isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLoD&&result<=maxLoD){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&isNaN(maxLoD)&&!isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLoD&&result<=minLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&isNaN(maxLoD)&&isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLoD&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&!isNaN(maxLoD)&&!isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<maxLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=maxLoD&&result<=minLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&!isNaN(maxLoD)&&isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result<maxLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=maxLoD&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&isNaN(maxLoD)&&!isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result<minLOQ){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLOQ&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&!isNaN(maxLoD)&&!isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLoD&&result<=minLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(isNaN(minLoD)&&isNaN(maxLoD)&&!isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<maxLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=maxLoD&&result<=minLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&isNaN(maxLoD)&&!isNaN(minLOQ)&&!isNaN(maxLOQ)){if(result<minLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=minLoD&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else if(!isNaN(minLoD)&&isNaN(maxLoD)&&isNaN(minLOQ)&&isNaN(maxLOQ)){if(result<maxLoD){return ResultEntry.RESULTSTATUS_BLOD;}else if(result>=maxLoD&&result<=maxLOQ){return ResultEntry.RESULTSTATUS_BLOQ;}else{return findGrade(minB,minA,maxA,maxB,result);}}else{return findGrade(minB,minA,maxA,maxB,result);}}export function findGrade(minB,minA,maxA,maxB,result){if(isNaN(minA)&&isNaN(minB)&&isNaN(maxA)&&isNaN(maxB)){return ResultEntry.RESULTSTATUS_FIO;}else if(isNaN(minA)&&!isNaN(minB)&&isNaN(maxA)&&!isNaN(maxB)){if(result>=minB&&result<=maxB)return ResultEntry.RESULTSTATUS_PASS;else if(result<minB||maxB<result)return ResultEntry.RESULTSTATUS_OOS;else return ResultEntry.RESULTSTATUS_PASS;}else if(!isNaN(minA)&&isNaN(minB)&&!isNaN(maxA)&&isNaN(maxB)){if(result>=minA&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else return ResultEntry.RESULTSTATUS_OOS;}else if(isNaN(minA)&&isNaN(minB)&&isNaN(maxA)&&!isNaN(maxB)){if(result<=maxB){return ResultEntry.RESULTSTATUS_PASS;}else if(result>maxB){return ResultEntry.RESULTSTATUS_OOS;}}else if(isNaN(minA)&&isNaN(minB)&&!isNaN(maxA)&&isNaN(maxB)){if(result<=maxA){return ResultEntry.RESULTSTATUS_PASS;}else if(result>maxA){return ResultEntry.RESULTSTATUS_OOS;}}else if(isNaN(minA)&&isNaN(minB)&&!isNaN(maxA)&&!isNaN(maxB)){if(result>maxA&&result<=maxB)return ResultEntry.RESULTSTATUS_OOS;else if(result>maxB)return ResultEntry.RESULTSTATUS_OOT;else if(result<maxA)return ResultEntry.RESULTSTATUS_PASS;}else if(isNaN(minA)&&!isNaN(minB)&&isNaN(maxA)&&isNaN(maxB)){if(result>=minB)return ResultEntry.RESULTSTATUS_PASS;else if(result<minB)return ResultEntry.RESULTSTATUS_OOS;}else if(isNaN(minA)&&!isNaN(minB)&&isNaN(maxA)&&!isNaN(maxB)){if(result>=minA&&result<=maxB)return ResultEntry.RESULTSTATUS_PASS;else if(result<minA)return ResultEntry.RESULTSTATUS_OOS;else if(result>maxB)return ResultEntry.RESULTSTATUS_OOS;}else if(isNaN(minA)&&!isNaN(minB)&&!isNaN(maxA)&&!isNaN(maxB)){if(result>=minA&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result>maxA&&result<=maxB)return ResultEntry.RESULTSTATUS_OOS;else if(result>maxB)return ResultEntry.RESULTSTATUS_OOT;else if(result<minA)return ResultEntry.RESULTSTATUS_OOT;}else if(!isNaN(minA)&&isNaN(minB)&&isNaN(maxA)&&isNaN(maxB)){if(result>=minA)return ResultEntry.RESULTSTATUS_PASS;else if(result<minA)return ResultEntry.RESULTSTATUS_OOS;}else if(!isNaN(minA)&&isNaN(minB)&&!isNaN(maxA)&&!isNaN(maxB)){if(result>=minA&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result>=minA&&result<=maxB)return ResultEntry.RESULTSTATUS_OOS;else return ResultEntry.RESULTSTATUS_OOT;}else if(isNaN(minA)&&!isNaN(minB)&&!isNaN(maxA)&&isNaN(maxB)){if(result>=minB&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result<minB)return ResultEntry.RESULTSTATUS_OOS;else if(result>maxA)return ResultEntry.RESULTSTATUS_OOS;}else if(isNaN(minA)&&!isNaN(minB)&&!isNaN(maxA)&&isNaN(maxB)){if(result>=minB&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result>maxA&&result<=maxB)return ResultEntry.RESULTSTATUS_OOS;else if(result>maxB||result<minB)return ResultEntry.RESULTSTATUS_OOS;}else if(!isNaN(minA)&&!isNaN(minB)&&isNaN(maxA)&&!isNaN(maxB)){if(result>=minB&&result<minA)return ResultEntry.RESULTSTATUS_OOS;else if(result<minB)return ResultEntry.RESULTSTATUS_OOS;else if(result>=minA)return ResultEntry.RESULTSTATUS_PASS;}else if(isNaN(minA)&&!isNaN(minB)&&isNaN(maxA)&&!isNaN(maxB)){if(result>=minB&&result<minA)return ResultEntry.RESULTSTATUS_OOS;else if(result>=minA&&result<=maxB)return ResultEntry.RESULTSTATUS_PASS;else if(result>maxB||result<minB)return ResultEntry.RESULTSTATUS_OOT;}else if(!isNaN(minA)&&!isNaN(minB)&&!isNaN(maxA)&&isNaN(maxB)){if(result>=minB&&result<minA)return ResultEntry.RESULTSTATUS_OOS;else if(result>=minA&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result<minB)return ResultEntry.RESULTSTATUS_OOT;else if(result>maxA)return ResultEntry.RESULTSTATUS_OOT;}else if(!isNaN(minA)&&!isNaN(minB)&&!isNaN(maxA)&&!isNaN(maxB)){if(result>=minA&&result<=maxA)return ResultEntry.RESULTSTATUS_PASS;else if(result>=minB&&result<=maxB)return ResultEntry.RESULTSTATUS_OOT;else if((result<minB||maxB<result)&&minB!==0&&maxB!==0)return ResultEntry.RESULTSTATUS_OOS;else return ResultEntry.RESULTSTATUS_PASS;}}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryValidation.jsx"],"names":["ResultEntry","numberConversion","number","rounding","Number","parseFloat","toFixed","numericGrade","parameter","sfinalresult","result","minA","parseInt","smina","maxA","smaxa","minB","sminb","maxB","smaxb","minLoD","sminlod","maxLoD","smaxlod","minLOQ","sminloq","maxLOQ","smaxloq","disregard","sdisregard","RESULTSTATUS_BELOWDISREGARD","isNaN","RESULTSTATUS_BQL","RESULTSTATUS_BDL","findLOQandLOD","findGrade","RESULTSTATUS_BLOD","RESULTSTATUS_BLOQ","RESULTSTATUS_FIO","RESULTSTATUS_PASS","RESULTSTATUS_OOS","RESULTSTATUS_OOT"],"mappings":"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","sourcesContent":["import { ResultEntry } from '../../components/Enumeration';\r\n\r\nexport function numberConversion(number, rounding) {\r\n    return Number.parseFloat(number).toFixed(rounding);\r\n}\r\n\r\nexport function numericGrade(parameter, sfinalresult) {\r\n    let result = sfinalresult;\r\n    let minA = parseInt(parameter.smina);\r\n    let maxA = parseInt(parameter.smaxa);\r\n    let minB = parseInt(parameter.sminb);\r\n    let maxB = parseInt(parameter.smaxb);\r\n    let minLoD = parseInt(parameter.sminlod);\r\n    let maxLoD = parseInt(parameter.smaxlod);\r\n    let minLOQ = parseInt(parameter.sminloq);\r\n    let maxLOQ = parseInt(parameter.smaxloq);\r\n    let disregard = parseInt(parameter.sdisregard);\r\n    if (disregard !== \"null\" && disregard > sfinalresult) {\r\n        return ResultEntry.RESULTSTATUS_BELOWDISREGARD;\r\n    } else if (!isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result >= minLOQ && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BQL;\r\n        }\r\n        else if (!isNaN(minLoD) && !isNaN(maxLoD)) {\r\n            if (result >= minLoD && result <= maxLoD) {\r\n                return ResultEntry.RESULTSTATUS_BDL;\r\n            }\r\n            else {\r\n                return findLOQandLOD(minLoD, maxLoD, minLOQ, maxLOQ, minA, maxA, minB, maxB, sfinalresult);\r\n            }\r\n        } else {\r\n            return findLOQandLOD(minLoD, maxLoD, minLOQ, maxLOQ, minA, maxA, minB, maxB, sfinalresult);\r\n        }\r\n    } else if (!isNaN(minLoD) && !isNaN(maxLoD)) {\r\n        if (result >= minLoD && result <= maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BDL;\r\n        }\r\n        else {\r\n            return findLOQandLOD(minLoD, maxLoD, minLOQ, maxLOQ, minA, maxA, minB, maxB, sfinalresult);\r\n        }\r\n    } else {\r\n        return findLOQandLOD(minLoD, maxLoD, minLOQ, maxLOQ, minA, maxA, minB, maxB, sfinalresult);\r\n    }\r\n}\r\n\r\n\r\nexport function findLOQandLOD(minLoD, maxLoD, minLOQ, maxLOQ, minA, maxA, minB, maxB, result) {\r\n    if (isNaN(minLoD) && isNaN(maxLoD) && isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        return findGrade(minB, minA, maxA, maxB, result)\r\n    } else if (!isNaN(minLoD) && isNaN(maxLoD) && isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result === minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && !isNaN(maxLoD) && isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result === maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && isNaN(maxLoD) && !isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result === minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && isNaN(maxLoD) && isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result < maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result === maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && !isNaN(maxLoD) && isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLoD && result <= maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && isNaN(maxLoD) && !isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLoD && result <= minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && isNaN(maxLoD) && isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLoD && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && !isNaN(maxLoD) && !isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= maxLoD && result <= minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && !isNaN(maxLoD) && isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result < maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= maxLoD && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && isNaN(maxLoD) && !isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result < minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLOQ && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && !isNaN(maxLoD) && !isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLoD && result <= minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (isNaN(minLoD) && isNaN(maxLoD) && !isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= maxLoD && result <= minLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && isNaN(maxLoD) && !isNaN(minLOQ) && !isNaN(maxLOQ)) {\r\n        if (result < minLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= minLoD && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else if (!isNaN(minLoD) && isNaN(maxLoD) && isNaN(minLOQ) && isNaN(maxLOQ)) {\r\n        if (result < maxLoD) {\r\n            return ResultEntry.RESULTSTATUS_BLOD\r\n        } else if (result >= maxLoD && result <= maxLOQ) {\r\n            return ResultEntry.RESULTSTATUS_BLOQ\r\n        } else {\r\n            return findGrade(minB, minA, maxA, maxB, result);\r\n        }\r\n    } else {\r\n        return findGrade(minB, minA, maxA, maxB, result);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function findGrade(minB, minA, maxA, maxB, result) {\r\n    if (isNaN(minA) && isNaN(minB) && isNaN(maxA) && isNaN(maxB)) {\r\n        return ResultEntry.RESULTSTATUS_FIO;\r\n    } else if (isNaN(minA) && !isNaN(minB) && isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minB && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minB || maxB < result)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n    } else if (!isNaN(minA) && isNaN(minB) && !isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minA && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (isNaN(minA) && isNaN(minB) && isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result <= maxB) {\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        } else if (result > maxB) {\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        }\r\n    } else if (isNaN(minA) && isNaN(minB) && !isNaN(maxA) && isNaN(maxB)) {\r\n        if (result <= maxA) {\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        } else if (result > maxA) {\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        }\r\n    } else if (isNaN(minA) && isNaN(minB) && !isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result > maxA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result > maxB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n        else if (result < maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n    } else if (isNaN(minA) && !isNaN(minB) && isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minB)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (isNaN(minA) && !isNaN(minB) && isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result > maxB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (isNaN(minA) && !isNaN(minB) && !isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minA && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result > maxA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result > maxB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n        else if (result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n    } else if (!isNaN(minA) && isNaN(minB) && isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (!isNaN(minA) && isNaN(minB) && !isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minA && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result >= minA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n    } else if (isNaN(minA) && !isNaN(minB) && !isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minB && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result > maxA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (isNaN(minA) && !isNaN(minB) && !isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minB && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result > maxA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result > maxB || result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n    } else if (!isNaN(minA) && !isNaN(minB) && isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minB && result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result >= minA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n    } else if (isNaN(minA) && !isNaN(minB) && isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minB && result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result >= minA && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result > maxB || result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n    } else if (!isNaN(minA) && !isNaN(minB) && !isNaN(maxA) && isNaN(maxB)) {\r\n        if (result >= minB && result < minA)\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else if (result >= minA && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result < minB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n        else if (result > maxA)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n    } else if (!isNaN(minA) && !isNaN(minB) && !isNaN(maxA) && !isNaN(maxB)) {\r\n        if (result >= minA && result <= maxA)\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n        else if (result >= minB && result <= maxB)\r\n            return ResultEntry.RESULTSTATUS_OOT;\r\n        else if ((result < minB || maxB < result) && (minB !== 0 && maxB !== 0))\r\n            return ResultEntry.RESULTSTATUS_OOS;\r\n        else\r\n            return ResultEntry.RESULTSTATUS_PASS;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}