{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\storagemanagement\\\\AddSampleProcessType.js\";\nimport React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\n\nconst AddSampleProcessType = props => {\n  return /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PROJECTTYPE\"\n    }),\n    isSearchable: true,\n    name: \"sprojecttypename\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.projecttypeList || [],\n    value: props.selectedRecord[\"sprojecttypename\"] || \"\",\n    defaultValue: props.selectedRecord[\"sprojecttypename\"],\n    onChange: event => props.onComboChange(event, \"sprojecttypename\", 1),\n    closeMenuOnSelect: true,\n    isMulti: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SAMPLETYPE\"\n    }),\n    isSearchable: true,\n    name: \"sproductname\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.sampletypeList || [],\n    value: props.selectedRecord[\"sproductname\"] || \"\",\n    defaultValue: props.selectedRecord[\"sproductname\"],\n    onChange: event => props.onComboChange(event, \"sproductname\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_COLLECTIONTUBETYPEPROCESSTYPE\"\n    }),\n    isSearchable: true,\n    name: \"stubename\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.collectiontubeList || [],\n    value: props.selectedRecord[\"stubename\"] || \"\",\n    defaultValue: props.selectedRecord[\"stubename\"],\n    onChange: event => props.onComboChange(event, \"stubename\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PROCESSTYPENAME\"\n    }),\n    isSearchable: true,\n    name: \"sprocesstypename\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PROCESSTYPENAME\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.processtypeList || [],\n    value: props.selectedRecord[\"sprocesstypename\"] || \"\",\n    defaultValue: props.selectedRecord[\"sprocesstypename\"],\n    onChange: event => props.onComboChange(event, \"sprocesstypename\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_PROCESSTIME\"\n    }),\n    name: \"processtime\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, \"processtime\"),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PROCESSTIME\"\n    }),\n    value: props.selectedRecord[\"processtime\"] || \"\",\n    isMandatory: true,\n    isClearable: false,\n    required: true,\n    maxLength: 4,\n    isDisabled: false,\n    width: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PROCESSPERIODTIME\"\n    }),\n    isSearchable: true,\n    name: \"processperiodtime\",\n    isDisabled: true,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PROCESSPERIODTIME\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.periodList || [],\n    value: props.selectedRecord[\"processperiodtime\"] || \"\",\n    defaultValue: props.selectedRecord[\"processperiodtime\"],\n    onChange: event => props.onComboChange(event, \"processperiodtime\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_GRACETIME\"\n    }),\n    name: \"gracetime\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, \"gracetime\"),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_GRACETIME\"\n    }),\n    value: props.selectedRecord[\"gracetime\"] || \"\",\n    isMandatory: true,\n    isClearable: false,\n    required: true,\n    maxLength: 4,\n    isDisabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_GRACEPERIODTIME\"\n    }),\n    isSearchable: true,\n    name: \"graceperiodtime\",\n    isDisabled: true,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_GRACEPERIODTIME\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.periodList || [],\n    value: props.selectedRecord[\"graceperiodtime\"] || \"\",\n    defaultValue: props.selectedRecord[\"graceperiodtime\"],\n    onChange: event => props.onComboChange(event, \"graceperiodtime\", 1),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_EXECTIONORDER\"\n    }),\n    name: \"executionorder\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, \"executionorder\"),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_EXECTIONORDER\"\n    }),\n    value: props.selectedRecord[\"executionorder\"] || \"\",\n    isMandatory: true,\n    isClearable: false,\n    required: true,\n    maxLength: 2,\n    isDisabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    name: \"sdescription\",\n    onChange: event => props.onInputOnChange(event, \"sdescription\"),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord[\"sdescription\"],\n    rows: \"3\",\n    isMandatory: false,\n    isClearable: false,\n    required: true,\n    maxLength: 255,\n    isDisabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default injectIntl(AddSampleProcessType);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/storagemanagement/AddSampleProcessType.js"],"names":["React","Button","Row","Col","FormattedMessage","injectIntl","FormSelectSearch","FormInput","FormTextarea","AddSampleProcessType","props","intl","formatMessage","id","projecttypeList","selectedRecord","event","onComboChange","sampletypeList","collectiontubeList","processtypeList","onInputOnChange","periodList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,QAAiC,iBAAjC;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;;AAGA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAEpC,sBAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,kBAHV;AAII,IAAA,UAAU,EAAE,KAJhB;AAKI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,OAAO,EAAEH,KAAK,CAACI,eAAN,IAAyB,EARtC;AASI,IAAA,KAAK,EAAEJ,KAAK,CAACK,cAAN,CAAqB,kBAArB,KAA4C,EATvD;AAUI,IAAA,YAAY,EAAEL,KAAK,CAACK,cAAN,CAAqB,kBAArB,CAVlB;AAWI,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,kBAA3B,EAA+C,CAA/C,CAXzB;AAYI,IAAA,iBAAiB,EAAE,IAZvB;AAaI,IAAA,OAAO,EAAE,KAbb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAiBI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,cAHV;AAII,IAAA,UAAU,EAAE,KAJhB;AAKI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,OAAO,EAAEH,KAAK,CAACQ,cAAN,IAAwB,EARrC;AASI,IAAA,KAAK,EAAER,KAAK,CAACK,cAAN,CAAqB,cAArB,KAAwC,EATnD;AAUI,IAAA,YAAY,EAAEL,KAAK,CAACK,cAAN,CAAqB,cAArB,CAVlB;AAWI,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,cAA3B,EAA2C,CAA3C,CAXzB;AAYI,IAAA,iBAAiB,EAAE,IAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,eAgCI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,WAHV;AAII,IAAA,UAAU,EAAE,KAJhB;AAKI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,OAAO,EAAEH,KAAK,CAACS,kBAAN,IAA4B,EARzC;AASI,IAAA,KAAK,EAAET,KAAK,CAACK,cAAN,CAAqB,WAArB,KAAqC,EAThD;AAUI,IAAA,YAAY,EAAEL,KAAK,CAACK,cAAN,CAAqB,WAArB,CAVlB;AAWI,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,WAA3B,EAAwC,CAAxC,CAXzB;AAYI,IAAA,iBAAiB,EAAE,IAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,eA+CI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,kBAHV;AAII,IAAA,UAAU,EAAE,KAJhB;AAKI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,OAAO,EAAEH,KAAK,CAACU,eAAN,IAAyB,EARtC;AASI,IAAA,KAAK,EAAEV,KAAK,CAACK,cAAN,CAAqB,kBAArB,KAA4C,EATvD;AAUI,IAAA,YAAY,EAAEL,KAAK,CAACK,cAAN,CAAqB,kBAArB,CAVlB;AAWI,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,kBAA3B,EAA+C,CAA/C,CAXzB;AAYI,IAAA,iBAAiB,EAAE,IAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CJ,eA8DI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,aAFV;AAGI,IAAA,IAAI,EAAE,MAHV;AAII,IAAA,QAAQ,EAAGG,KAAD,IAAWN,KAAK,CAACW,eAAN,CAAsBL,KAAtB,EAA6B,aAA7B,CAJzB;AAKI,IAAA,WAAW,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEH,KAAK,CAACK,cAAN,CAAqB,aAArB,KAAuC,EANlD;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,WAAW,EAAE,KARjB;AASI,IAAA,QAAQ,EAAE,IATd;AAUI,IAAA,SAAS,EAAE,CAVf;AAWI,IAAA,UAAU,EAAE,KAXhB;AAYI,IAAA,KAAK,EAAE,GAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAkBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,mBAHV;AAII,IAAA,UAAU,EAAE,IAJhB;AAKI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,OAAO,EAAEH,KAAK,CAACY,UAAN,IAAoB,EARjC;AASI,IAAA,KAAK,EAAEZ,KAAK,CAACK,cAAN,CAAqB,mBAArB,KAA6C,EATxD;AAUI,IAAA,YAAY,EAAEL,KAAK,CAACK,cAAN,CAAqB,mBAArB,CAVlB;AAWI,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,mBAA3B,EAAgD,CAAhD,CAXzB;AAYI,IAAA,iBAAiB,EAAE,IAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAlBJ,CA9DJ,eAoGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,WAFV;AAGI,IAAA,IAAI,EAAE,MAHV;AAII,IAAA,QAAQ,EAAGG,KAAD,IAAWN,KAAK,CAACW,eAAN,CAAsBL,KAAtB,EAA6B,WAA7B,CAJzB;AAKI,IAAA,WAAW,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEH,KAAK,CAACK,cAAN,CAAqB,WAArB,KAAqC,EANhD;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,WAAW,EAAE,KARjB;AASI,IAAA,QAAQ,EAAE,IATd;AAUI,IAAA,SAAS,EAAE,CAVf;AAWI,IAAA,UAAU,EAAE,KAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAgBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,iBAHV;AAII,IAAA,UAAU,EAAE,IAJhB;AAKI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,OAAO,EAAEH,KAAK,CAACY,UAAN,IAAoB,EARjC;AASI,IAAA,KAAK,EAAEZ,KAAK,CAACK,cAAN,CAAqB,iBAArB,KAA2C,EATtD;AAUI,IAAA,YAAY,EAAEL,KAAK,CAACK,cAAN,CAAqB,iBAArB,CAVlB;AAWI,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,iBAA3B,EAA8C,CAA9C,CAXzB;AAYI,IAAA,iBAAiB,EAAE,IAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAhBJ,CApGJ,eAyII,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,gBAFV;AAGI,IAAA,IAAI,EAAE,MAHV;AAII,IAAA,QAAQ,EAAGG,KAAD,IAAWN,KAAK,CAACW,eAAN,CAAsBL,KAAtB,EAA6B,gBAA7B,CAJzB;AAKI,IAAA,WAAW,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEH,KAAK,CAACK,cAAN,CAAqB,gBAArB,KAA0C,EANrD;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,WAAW,EAAE,KARjB;AASI,IAAA,QAAQ,EAAE,IATd;AAUI,IAAA,SAAS,EAAE,CAVf;AAWI,IAAA,UAAU,EAAE,KAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzIJ,eAuJI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAEL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,cAFV;AAGI,IAAA,QAAQ,EAAGG,KAAD,IAAWN,KAAK,CAACW,eAAN,CAAsBL,KAAtB,EAA6B,cAA7B,CAHzB;AAII,IAAA,WAAW,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJjB;AAKI,IAAA,KAAK,EAAEH,KAAK,CAACK,cAAN,CAAqB,cAArB,CALX;AAMI,IAAA,IAAI,EAAC,GANT;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,WAAW,EAAE,KARjB;AASI,IAAA,QAAQ,EAAE,IATd;AAUI,IAAA,SAAS,EAAE,GAVf;AAWI,IAAA,UAAU,EAAE,KAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvJJ,CAFJ;AAwKH,CA1KD;;AA4KA,eAAeV,UAAU,CAACI,oBAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\n\r\nconst AddSampleProcessType = (props) => {\r\n\r\n    return (\r\n\r\n        <Col md={12}>\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                isSearchable={true}\r\n                name={\"sprojecttypename\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.projecttypeList || []}\r\n                value={props.selectedRecord[\"sprojecttypename\"] || \"\"}\r\n                defaultValue={props.selectedRecord[\"sprojecttypename\"]}\r\n                onChange={(event) => props.onComboChange(event, \"sprojecttypename\", 1)}\r\n                closeMenuOnSelect={true}\r\n                isMulti={false}\r\n            />\r\n\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                isSearchable={true}\r\n                name={\"sproductname\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.sampletypeList || []}\r\n                value={props.selectedRecord[\"sproductname\"] || \"\"}\r\n                defaultValue={props.selectedRecord[\"sproductname\"]}\r\n                onChange={(event) => props.onComboChange(event, \"sproductname\", 1)}\r\n                closeMenuOnSelect={true}\r\n            />\r\n\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_COLLECTIONTUBETYPEPROCESSTYPE\" })}\r\n                isSearchable={true}\r\n                name={\"stubename\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.collectiontubeList || []}\r\n                value={props.selectedRecord[\"stubename\"] || \"\"}\r\n                defaultValue={props.selectedRecord[\"stubename\"]}\r\n                onChange={(event) => props.onComboChange(event, \"stubename\", 1)}\r\n                closeMenuOnSelect={true}\r\n            />\r\n\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_PROCESSTYPENAME\" })}\r\n                isSearchable={true}\r\n                name={\"sprocesstypename\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_PROCESSTYPENAME\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.processtypeList || []}\r\n                value={props.selectedRecord[\"sprocesstypename\"] || \"\"}\r\n                defaultValue={props.selectedRecord[\"sprocesstypename\"]}\r\n                onChange={(event) => props.onComboChange(event, \"sprocesstypename\", 1)}\r\n                closeMenuOnSelect={true}\r\n            />\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_PROCESSTIME\" })}\r\n                        name={\"processtime\"}\r\n                        type={\"text\"}\r\n                        onChange={(event) => props.onInputOnChange(event, \"processtime\")}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_PROCESSTIME\" })}\r\n                        value={props.selectedRecord[\"processtime\"] || \"\"}\r\n                        isMandatory={true}\r\n                        isClearable={false}\r\n                        required={true}\r\n                        maxLength={4}\r\n                        isDisabled={false}\r\n                        width={200}\r\n                    />\r\n\r\n                </Col>\r\n                <Col md={6}>\r\n\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_PROCESSPERIODTIME\" })}\r\n                        isSearchable={true}\r\n                        name={\"processperiodtime\"}\r\n                        isDisabled={true}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_PROCESSPERIODTIME\" })}\r\n                        isMandatory={true}\r\n                        isClearable={false}\r\n                        options={props.periodList || []}\r\n                        value={props.selectedRecord[\"processperiodtime\"] || \"\"}\r\n                        defaultValue={props.selectedRecord[\"processperiodtime\"]}\r\n                        onChange={(event) => props.onComboChange(event, \"processperiodtime\", 1)}\r\n                        closeMenuOnSelect={true}\r\n                    />\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_GRACETIME\" })}\r\n                        name={\"gracetime\"}\r\n                        type={\"text\"}\r\n                        onChange={(event) => props.onInputOnChange(event, \"gracetime\")}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_GRACETIME\" })}\r\n                        value={props.selectedRecord[\"gracetime\"] || \"\"}\r\n                        isMandatory={true}\r\n                        isClearable={false}\r\n                        required={true}\r\n                        maxLength={4}\r\n                        isDisabled={false}\r\n                    />\r\n                </Col>\r\n                <Col md={6}>\r\n\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_GRACEPERIODTIME\" })}\r\n                        isSearchable={true}\r\n                        name={\"graceperiodtime\"}\r\n                        isDisabled={true}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_GRACEPERIODTIME\" })}\r\n                        isMandatory={true}\r\n                        isClearable={false}\r\n                        options={props.periodList || []}\r\n                        value={props.selectedRecord[\"graceperiodtime\"] || \"\"}\r\n                        defaultValue={props.selectedRecord[\"graceperiodtime\"]}\r\n                        onChange={(event) => props.onComboChange(event, \"graceperiodtime\", 1)}\r\n                        closeMenuOnSelect={true}\r\n                    />\r\n\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n            <FormInput\r\n                label={props.intl.formatMessage({ id: \"IDS_EXECTIONORDER\" })}\r\n                name={\"executionorder\"}\r\n                type={\"text\"}\r\n                onChange={(event) => props.onInputOnChange(event, \"executionorder\")}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_EXECTIONORDER\" })}\r\n                value={props.selectedRecord[\"executionorder\"] || \"\"}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                required={true}\r\n                maxLength={2}\r\n                isDisabled={false}\r\n            />\r\n\r\n            <FormTextarea\r\n                label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                name={\"sdescription\"}\r\n                onChange={(event) => props.onInputOnChange(event, \"sdescription\")}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                value={props.selectedRecord[\"sdescription\"]}\r\n                rows=\"3\"\r\n                isMandatory={false}\r\n                isClearable={false}\r\n                required={true}\r\n                maxLength={255}\r\n                isDisabled={false}\r\n            />\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default injectIntl(AddSampleProcessType);"]},"metadata":{},"sourceType":"module"}