{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{FormattedMessage,injectIntl}from'react-intl';import{Button,Card,Form,Modal}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSave}from'@fortawesome/free-regular-svg-icons';import{toast}from'react-toastify';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ModalInner}from'../../components/App.styles';import{transactionStatus}from'../../components/Enumeration';import{faCalculator}from'@fortawesome/free-solid-svg-icons';import{comboChild,convertDateTimetoString,formatInputDate,formatInputDateWithoutT,getSameRecordFromTwoArrays,rearrangeDateFormat,rearrangeDateFormatforUI,showEsign,validateEmail}from'../../components/CommonScript';import RegisterSlideOut from'./RegisterSlideOut';import AddSpecification from'./AddSpecification';import AddTest from'./AddTest';import{connect}from'react-redux';import{getPreviewTemplate,getChildValues,getNewRegSpecification,AddComponents,updateStore,EditComponent,getTest,addsubSample,editSubSample,insertRegistration,updateRegistration,addSubSampleSaveContinue,componentTest,getDynamicFilter,getDynamicFilterExecuteData,insertRegistrationScheduler}from'../../actions';import AddComponentPopUp from'./AddComponentPopUp';import AddSubSample from'./AddSubSample';import{getRegistration,getRegistrationScheduler,getRegistrationSubSample,SubSample,TestListManipulation}from'./RegistrationValidation';import KendoDatatoolFilter from'../contactmaster/KendoDatatoolFilter.jsx';import FilterQueryBuilder from'../../components/FilterQueryBuilder';import{Utils as QbUtils}from\"react-awesome-query-builder\";//import SplitterLayout from 'react-splitter-layout';\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var PreRegisterSlideOutModal=/*#__PURE__*/function(_React$Component){_inherits(PreRegisterSlideOutModal,_React$Component);var _super=_createSuper(PreRegisterSlideOutModal);function PreRegisterSlideOutModal(props){var _this;_classCallCheck(this,PreRegisterSlideOutModal);_this=_super.call(this,props);_this.formRef=React.createRef();_this.state={failedControls:[],testDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},subSampleDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},selectedRecord:{},selectedSpec:{},selectComponent:{},selectedTest:{},selectedTestData:{},SubSamplecomboComponents:[],SubSamplewithoutCombocomponent:[],// selectedTestData: [],\nparentSubSampleColumnList:[],specBasedComponent:false};_this.custombuttonclick=function(event,component){event.preventDefault();event.stopPropagation();var inputparam={component:component,userinfo:_this.props.Login.userInfo};_this.props.getDynamicFilter(inputparam);};_this.onChangeAwesomeQueryBuilder=function(immutableTree,config){var selectedRecord=_this.state.selectedRecord||{};selectedRecord['filterquery']=QbUtils.sqlFormat(immutableTree,config);var updateInfo={typeName:DEFAULT_RETURN,data:{awesomeTree:immutableTree,awesomeConfig:config,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);// this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\n};_this.handlePageChange=function(event){var updateInfo={typeName:DEFAULT_RETURN,data:{kendoSkip:event.skip,kendoTake:event.take}};_this.props.updateStore(updateInfo);//this.setState({ kendoSkip: event.skip, kendoTake: event.take });\n};_this.handleFilterChange=function(event){// event.preventDefault();\n//event.stopPropagation();\nvar updateInfo={typeName:DEFAULT_RETURN,data:{kendoFilter:event.filter// screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\n}};_this.props.updateStore(updateInfo);// this.setState({ kendoFilter: event.filter });\n};_this.handleExecuteClick=function(event){var selectedRecord=_this.state.selectedRecord;if(selectedRecord['filterquery']!==\"\"&&selectedRecord['filterquery']!==undefined){var inputparam={component:_this.props.Login.seletedFilterComponent,userinfo:_this.props.Login.userInfo,filterquery:selectedRecord['filterquery']};_this.props.getDynamicFilterExecuteData(inputparam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTFILTER\"}));}};_this.handleKendoRowClick=function(event){var selecteddata=event.dataItem;var component=_this.props.Login.seletedFilterComponent;if(component.hasOwnProperty(\"child\")){if(_this.props.Login.loadSubSample){var selectComponent=_this.state.selectComponent;component.child.map(function(y){var withoutCombocomponent=_this.state.SubSamplewithoutCombocomponent;var readonlyfields=withoutCombocomponent.findIndex(function(k){return k.label===y.label;});if(readonlyfields!==-1){if(withoutCombocomponent[readonlyfields][\"isMultiLingual\"]){selectComponent[y.label]=selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]?selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]][_this.props.Login.userInfo.languagetypeCode]:\"\";}else{selectComponent[y.label]=selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]?selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]:\"\";}}});var updateInfo={typeName:DEFAULT_RETURN,data:{selectComponent:selectComponent,loadCustomSearchFilter:false,screenName:\"SubSample\"}};_this.props.updateStore(updateInfo);}else{var selectedRecord=_this.state.selectedRecord;component.child.map(function(y){// component.filterfields.filter(x=>x.)\nvar withoutCombocomponent=_this.props.withoutCombocomponent;var readonlyfields=withoutCombocomponent.findIndex(function(k){return k.label===y.label;});if(readonlyfields!==-1){if(withoutCombocomponent[readonlyfields][\"isMultiLingual\"]){selectedRecord[y.label]=selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]?selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]][_this.props.Login.userInfo.languagetypeCode]:\"\";}else{selectedRecord[y.label]=selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]?selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]]:\"\";}}});var _updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,loadCustomSearchFilter:false,screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename}};_this.props.updateStore(_updateInfo);}}};_this.handleSaveClick=function(saveType){var failedControls=[];var startLabel=[];var label=\"IDS_ENTER\";var mandatoryFields=[];var selectedRecord=_this.state.selectedRecord;if(_this.props.Login.loadComponent){mandatoryFields=[{\"idsName\":\"IDS_COMPONENT\",\"dataField\":\"ncomponentcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"},{\"idsName\":\"IDS_RECEIVEDDATE\",\"dataField\":\"dreceiveddate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"},{\"idsName\":\"IDS_TIMEZONE\",\"dataField\":\"ntzdreceivedate\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];selectedRecord=_this.state.selectComponent;}else if(_this.props.Login.loadSubSample){if(_this.state.specBasedComponent)mandatoryFields=[{\"idsName\":\"IDS_SPECIMEN\",\"dataField\":\"ncomponentcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata.map(function(row){return row.children.map(function(column){return column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.mandatory===true){if(componentrow.recordbasedshowhide){if(_this.state.selectComponent[componentrow.parentLabel]===componentrow.recordbasedhide){if(componentrow.inputtype===\"email\"){mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});}else{mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"mandatoryLabel\":componentrow.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":componentrow.inputtype===\"combo\"?\"selectbox\":\"textbox\"});}}}else{if(componentrow.inputtype===\"email\"){mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});}else{mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"mandatoryLabel\":componentrow.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":componentrow.inputtype===\"combo\"?\"selectbox\":\"textbox\"});}}}else{if(componentrow.inputtype===\"email\"){_this.state.selectComponent[componentrow.label]&&_this.state.selectComponent[componentrow.label]!==\"\"&&mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});}}return null;}):component.mandatory===true?component.recordbasedshowhide?_this.state.selectComponent[component.parentLabel]===component.recordbasedhide?component.inputtype===\"email\"?mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}):mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"mandatoryLabel\":component.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":component.inputtype===\"combo\"?\"selectbox\":\"textbox\"}):\"\":component.inputtype===\"email\"?mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}):mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"mandatoryLabel\":component.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":component.inputtype===\"combo\"?\"selectbox\":\"textbox\"}):_this.state.selectComponent[component.label]?component.inputtype===\"email\"?mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}):\"\":\"\";});});});selectedRecord=_this.state.selectComponent;}else if(_this.props.Login.loadTest){mandatoryFields=[{\"idsName\":\"IDS_TEST\",\"dataField\":\"ntestgrouptestcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];selectedRecord=_this.props.Login.selectedTestData;}else if(_this.props.Login.loadSpec){mandatoryFields=[{\"idsName\":\"IDS_SPECIFICATION\",\"dataField\":\"nallottedspeccode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];}else{_this.props.Login.masterData.registrationTemplate&&_this.props.Login.masterData.registrationTemplate.jsondata.map(function(row){return row.children.map(function(column){return column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.mandatory===true){if(componentrow.recordbasedshowhide){if(_this.state.selectedRecord[componentrow.parentLabel]===componentrow.recordbasedhide){if(componentrow.inputtype===\"email\"){mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});}else{mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"mandatoryLabel\":componentrow.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":componentrow.inputtype===\"combo\"?\"selectbox\":\"textbox\"});}}}else{if(componentrow.inputtype===\"email\"){mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});}else{mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"mandatoryLabel\":componentrow.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":componentrow.inputtype===\"combo\"?\"selectbox\":\"textbox\"});}}}else{if(componentrow.inputtype===\"email\"){selectedRecord[componentrow.label]&&selectedRecord[componentrow.label]!==\"\"&&mandatoryFields.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"});}}return null;}):component.mandatory===true?component.recordbasedshowhide?_this.state.selectedRecord[component.parentLabel]===component.recordbasedhide?component.inputtype===\"email\"?mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}):mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"mandatoryLabel\":component.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":component.inputtype===\"combo\"?\"selectbox\":\"textbox\"}):\"\":component.inputtype===\"email\"?mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}):mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"mandatoryLabel\":component.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\",\"controlType\":component.inputtype===\"combo\"?\"selectbox\":\"textbox\"}):selectedRecord[component.label]?component.inputtype===\"email\"?mandatoryFields.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,\"alertPreFix\":_this.props.intl.formatMessage({id:\"IDS_VALID\"}),\"validateFunction\":validateEmail,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}):\"\":\"\";});});});}if(_this.props.esign){mandatoryFields=[{\"idsName\":\"IDS_PASSWORD\",\"dataField\":\"esignpassword\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"esigncomments\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];}mandatoryFields.forEach(function(item){if(selectedRecord[item.dataField]===undefined||selectedRecord[item.dataField]===null){var alertMessage=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(alertMessage);startLabel.push(item.mandatoryLabel);//\"IDS_PROVIDE\";\n}else{if(item.validateFunction){var validateData=item.validateFunction;if(validateData(selectedRecord[item.dataField])===false){var _alertMessage=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(_alertMessage);startLabel.push(item.mandatoryLabel);}}else{if(typeof selectedRecord[item.dataField]===\"object\"){//to validate FormSelectSearch component\nif(selectedRecord[item.dataField].length===0){var _alertMessage2=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(_alertMessage2);startLabel.push(item.mandatoryLabel);//\"IDS_SELECT\";\n}}else if(typeof selectedRecord[item.dataField]===\"string\"){//to handle string field -- added trim function\nif(selectedRecord[item.dataField].trim().length===0){var _alertMessage3=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(_alertMessage3);startLabel.push(item.mandatoryLabel);}}else{//number field\nif(selectedRecord[item.dataField].length===0){var _alertMessage4=(item.alertPreFix?item.alertPreFix+\" \":'')+_this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?\" \"+item.alertSuffix:'');failedControls.push(_alertMessage4);startLabel.push(item.mandatoryLabel);}}}}// else{\n//     const alertMessage=(item.alertPreFix?item.alertPreFix:'')+this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'')\n//     failedControls.push(alertMessage);\n// }\n});// console.log(\"validationPassed:\", failedControls);\nif(failedControls.length===0){if(saveType===4){_this.props.onExecuteClick(_this.formRef);}else if(saveType===3){if(selectedRecord.agree&&selectedRecord.agree===transactionStatus.NO){toast.info(_this.props.intl.formatMessage({id:\"IDS_CHECKAGREE\"}));}else{_this.props.validateEsign();}}else{if(_this.props.Login.loadSpec){var selectedSpec=_this.state.selectedSpec;selectedSpec[\"nallottedspeccode\"]=_this.state.selectedRecord[\"nallottedspeccode\"];selectedSpec[\"sversion\"]=_this.state.selectedRecord[\"sversion\"];selectedSpec[\"ntemplatemanipulationcode\"]=_this.state.selectedRecord[\"ntemplatemanipulationcode\"];var specBasedComponent=selectedSpec[\"nallottedspeccode\"]&&selectedSpec[\"nallottedspeccode\"].item.ncomponentrequired===3?true:false;_this.subSampleDataGridList=[];if(specBasedComponent){_this.subSampleDataGridList=[{\"idsName\":\"IDS_SPECIMEN\",\"dataField\":\"scomponentname\",width:\"200px\"}];}_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata.map(function(row){return row.children.map(function(column){return column.children.map(function(component){// let label = ''\nif(component.hasOwnProperty(\"children\")){component.children.map(function(componentrow){if(componentrow.mandatory===true){// label = label + '&' + componentrow.label\n_this.subSampleDataGridList.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,width:\"150px\"});}return _this.subSampleDataGridList;});}else{if(component.mandatory)_this.subSampleDataGridList.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,width:\"150px\"});return _this.subSampleDataGridList;}});});});//  this.setState({ selectedSpec: this.props.Login.selectedSpec,\n//      specBasedComponent });\n// this.setState({\n//     selectedTestData: [], loadSpec: false, SelectedTest: [], Test: [], Component: [], selectedSpec\n// })\nvar updateInfo={typeName:DEFAULT_RETURN,data:{selectedTestData:[],selectComponent:[],selectedComponent:{},loadSpec:false,SelectedTest:[],Test:[],Component:[],subSampleDataGridList:[],selectedSpec:selectedSpec,screenName:_this.props.Login.masterData.RealRegSubTypeValue&&_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename||\"Scheduler\",specBasedComponent:specBasedComponent}};_this.props.updateStore(updateInfo);}else if(_this.props.Login.loadComponent){_this.onSaveComponentClick(saveType,_this.formRef);}else if(_this.props.Login.loadTest){_this.onSaveTestClick(saveType,_this.formRef);}else if(_this.props.Login.loadSubSample){_this.onSaveSubSampleClick(saveType,_this.formRef);}else{_this.onSaveClick(saveType,_this.formRef);}}}else{label=startLabel[0]===undefined?label:startLabel[0];toast.info(\"\".concat(_this.props.intl.formatMessage({id:label}),\" \").concat(failedControls[0]));}};_this.TestChange=function(comboData,fieldName){var selectedTestData=_this.state.selectedTestData||{};selectedTestData[fieldName]=comboData;//  this.setState({ selectedTestData });\nvar updateInfo={typeName:DEFAULT_RETURN,data:{selectedTestData:selectedTestData}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,control,customName){var selectedRecord=_this.state.selectedRecord||{};if(comboData){var parentList=[];var childComboList=[];var childColumnList={};var comboName=customName||control.label;var product=false;var productCategory=false;var nproductcatcode=-1;var nproductcode=-1;var materialType=false;var instrument=false;var instrumentCategory=false;var material=false;var materialCategory=false;var nsampletypecode=_this.props.Login.masterData.RealSampleTypeValue?parseInt(_this.props.Login.masterData.RealSampleTypeValue.nsampletypecode):1;var inputParem={child:control.child,source:control.source,primarykeyField:control.valuemember,value:comboData?comboData.value:-1,item:comboData?comboData.item:\"\",label:comboData?comboName:\"\",nameofdefaultcomp:control.name};if(comboData){selectedRecord[comboName]=comboData;}else{selectedRecord[comboName]=[];}if(control.name==='Product'){var ProductCategory=_this.props.comboComponents.filter(function(x){return x.name===\"Product Category\";});var ncategorybasedflow=selectedRecord[ProductCategory[0].label]&&selectedRecord[ProductCategory[0].label]['item']['jsondata']['ncategorybasedflow'];nproductcatcode=selectedRecord[ProductCategory[0].label]&&selectedRecord[ProductCategory[0].label].value;if(ncategorybasedflow!==3){product=true;nproductcode=selectedRecord[comboName]&&selectedRecord[comboName].value;}}else if(control.name==='Instrument'){var InstrumentCategory=_this.props.comboComponents.filter(function(x){return x.name===\"Instrument Category\";});var _ncategorybasedflow=selectedRecord[InstrumentCategory[0].label]&&selectedRecord[InstrumentCategory[0].label]['item']['jsondata']['ncategorybasedflow'];nproductcatcode=selectedRecord[InstrumentCategory[0].label]&&selectedRecord[InstrumentCategory[0].label].value;if(_ncategorybasedflow!==3){instrument=true;nproductcode=selectedRecord[comboName]&&selectedRecord[comboName].value;}}else if(control.name==='Material'){var MaterialCategory=_this.props.comboComponents.filter(function(x){return x.name===\"Material Category\";});var _ncategorybasedflow2=selectedRecord[MaterialCategory[0].label]&&selectedRecord[MaterialCategory[0].label]['item']['jsondata']['ncategorybasedflow'];nproductcatcode=selectedRecord[MaterialCategory[0].label]&&selectedRecord[MaterialCategory[0].label].value;if(_ncategorybasedflow2!==3){material=true;nproductcode=selectedRecord[comboName]&&selectedRecord[comboName].value;}}else if(control.name==='Product Category'){var Product=_this.props.comboComponents.filter(function(x){return x.name===\"Product\";});nproductcatcode=selectedRecord[control.label]&&selectedRecord[control.label]['value'];var _ncategorybasedflow3=selectedRecord[control.label]&&selectedRecord[control.label]['item']['jsondata']['ncategorybasedflow'];if(_ncategorybasedflow3===3){productCategory=true;}else{inputParem[\"ProductName\"]=Product[0].label;// nproductcode = selectedRecord[comboName] &&\n// selectedRecord[comboName].value;\nproduct=true;}}else if(control.name==='Instrument Category'){var Instrument=_this.props.comboComponents.filter(function(x){return x.name===\"Instrument\";});nproductcatcode=selectedRecord[control.label]&&selectedRecord[control.label]['value'];var _ncategorybasedflow4=selectedRecord[control.label]&&selectedRecord[control.label]['item']['jsondata']['ncategorybasedflow'];if(_ncategorybasedflow4===3){instrumentCategory=true;}else{inputParem[\"InstrumentName\"]=Instrument[0].label;// nproductcode = selectedRecord[comboName] &&\n// selectedRecord[comboName].value;\ninstrument=true;}}else if(control.name==='Material Category'){var Material=_this.props.comboComponents.filter(function(x){return x.name===\"Material\";});nproductcatcode=selectedRecord[control.label]&&selectedRecord[control.label]['value'];var _ncategorybasedflow5=selectedRecord[control.label]&&selectedRecord[control.label]['item']['jsondata']['ncategorybasedflow'];if(_ncategorybasedflow5===3){materialCategory=true;}else{inputParem[\"MaterialName\"]=Material[0].label;// nproductcode = selectedRecord[comboName] &&\n// selectedRecord[comboName].value;\nmaterial=true;}}else if(control.name==='Material Type'){var _MaterialCategory=_this.props.comboComponents.filter(function(x){return x.name===\"Material Category\";});//nproductcatcode = -1;\n// const ncategorybasedflow = comboData &&\n//     comboData['item']['jsondata']['ncategorybasedflow'];\n// if (ncategorybasedflow === 3) {\n//     productCategory = true\n// } else {\ninputParem[\"MaterialCategoryName\"]=_MaterialCategory[0].label;// nproductcode = selectedRecord[comboName] &&\n// selectedRecord[comboName].value;\nmaterialType=true;//  }\n}if(control.child&&control.child.length>0){childComboList=getSameRecordFromTwoArrays(_this.props.comboComponents,control.child,\"label\");childColumnList={};childComboList.map(function(columnList){var val=comboChild(_this.props.comboComponents,columnList,childColumnList,false);childColumnList=val.childColumnList;return null;});parentList=getSameRecordFromTwoArrays(_this.props.withoutCombocomponent,control.child,\"label\");var mapOfFilter={nproductcode:nproductcode,nproductcatcode:nproductcatcode,nsampletypecode:nsampletypecode};_this.props.getChildValues(inputParem,_this.props.Login.userInfo,selectedRecord,_this.props.Login.comboData,childComboList,childColumnList,_this.props.withoutCombocomponent,[].concat(_toConsumableArray(childComboList),_toConsumableArray(parentList)),productCategory,product,mapOfFilter,instrumentCategory,instrument,materialCategory,material,materialType);}else{// if (productCategory) {\n//     const ncategorybasedflow = selectedRecord[comboName] &&\n//         selectedRecord[comboName].value;\n// } else if\nif(product||productCategory||instrument||material||materialCategory||instrumentCategory||materialType){// const nproductcode = selectedRecord[comboName] &&\n//     selectedRecord[comboName].value;\nvar _mapOfFilter={nproductcode:nproductcode,nproductcatcode:nproductcatcode,nsampletypecode:nsampletypecode};_this.props.getChildValues(inputParem,_this.props.Login.userInfo,selectedRecord,_this.props.Login.comboData,childComboList,childColumnList,_this.props.withoutCombocomponent,[].concat(_toConsumableArray(childComboList),_toConsumableArray(parentList)),productCategory,product,_mapOfFilter,instrumentCategory,instrument,materialCategory,material);}else{var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);}}}else{var _comboData=_this.props.Login.comboData;selectedRecord[control.label]=\"\";if(control.child&&control.child.length>0){control.child.map(function(temp){selectedRecord[temp.label]=\"\";delete _comboData[temp.label];var components=[].concat(_toConsumableArray(_this.props.comboComponents),_toConsumableArray(_this.props.withoutCombocomponent));components.map(function(component){if(component.label===temp.label){if(component.child&&component.child.length>0){component.child.map(function(temp1){selectedRecord[temp1.label]=\"\";delete _comboData[temp1.label];});}}});});}var _updateInfo2={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,comboData:_comboData}};_this.props.updateStore(_updateInfo2);}};_this.onInputOnChange=function(event,radiotext){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name==='timeonly'){selectedRecord['dateonly']=false;}if(event.target.name==='dateonly'){selectedRecord['timeonly']=false;}var value=selectedRecord[event.target.name];if(value!==''&&value!==undefined){if(value.includes(radiotext)){var index=value.indexOf(radiotext);if(index!==-1){if(index===0){var indexcomma=value.indexOf(\",\");if(indexcomma!==-1){selectedRecord[event.target.name]=value.slice(indexcomma+1);}else{selectedRecord[event.target.name]=\"\";}}else{if(value.slice(index).indexOf(\",\")!==-1){selectedRecord[event.target.name]=value.slice(0,index)+value.slice(index+value.slice(index).indexOf(\",\")+1);}else{selectedRecord[event.target.name]=value.slice(0,index-1);}}}}else{selectedRecord[event.target.name]=value+','+radiotext;}}else{selectedRecord[event.target.name]=radiotext;}}else if(event.target.type==='radio'){selectedRecord[event.target.name]=radiotext;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onInputOnSubSampleChange=function(event,radiotext){var selectComponent=_this.state.selectComponent||{};if(event.target.type==='checkbox'){if(event.target.name==='timeonly'){selectComponent['dateonly']=false;}if(event.target.name==='dateonly'){selectComponent['timeonly']=false;}var value=selectComponent[event.target.name];if(value!==''&&value!==undefined){if(value.includes(radiotext)){var index=value.indexOf(radiotext);if(index!==-1){if(index===0){var indexcomma=value.indexOf(\",\");if(indexcomma!==-1){selectComponent[event.target.name]=value.slice(indexcomma+1);}else{selectComponent[event.target.name]=\"\";}}else{//  const  indexcomma= value.indexOf(\",\")\nif(value.slice(index).indexOf(\",\")!==-1){selectComponent[event.target.name]=value.slice(0,index)+value.slice(index+value.slice(index).indexOf(\",\")+1);}else{selectComponent[event.target.name]=value.slice(0,index-1);}}}}else{selectComponent[event.target.name]=value+','+radiotext;}}else{selectComponent[event.target.name]=radiotext;}}else{selectComponent[event.target.name]=event.target.value;}_this.setState({selectComponent:selectComponent});};_this.onComboSubSampleChange=function(comboData,control,customName){var selectComponent=_this.state.selectComponent||{};if(comboData){var parentList=[];var childComboList=[];var childColumnList={};var comboName=customName||control.label;var inputParem={child:control.child,source:control.source,primarykeyField:control.valuemember,value:comboData?comboData.value:-1,item:comboData?comboData.item:\"\",label:comboData?comboName:\"\",nameofdefaultcomp:control.name};if(comboData){selectComponent[comboName]=comboData;}else{selectComponent[comboName]=[];}if(control.child&&control.child.length>0){childComboList=getSameRecordFromTwoArrays(_this.state.SubSamplecomboComponents,control.child,\"label\");childColumnList={};childColumnList=childComboList.map(function(columnList){var val=comboChild(_this.state.SubSamplecomboComponents,columnList,childColumnList,false);return val.childColumnList;});parentList=getSameRecordFromTwoArrays(_this.state.SubSamplewithoutCombocomponent,control.child,\"label\");_this.props.getChildValues(inputParem,_this.props.Login.userInfo,selectComponent,_this.props.Login.SubSamplecomboData,childComboList,childColumnList,_this.state.SubSamplewithoutCombocomponent,[].concat(_toConsumableArray(childComboList),_toConsumableArray(parentList)));}else{var updateInfo={typeName:DEFAULT_RETURN,data:{selectComponent:selectComponent}};_this.props.updateStore(updateInfo);}}else{var SubSamplecomboData=_this.props.Login.SubSamplecomboData;selectComponent[control.label]=\"\";if(control.child&&control.child.length>0){control.child.map(function(temp){selectComponent[temp.label]=\"\";delete SubSamplecomboData[temp.label];var components=[].concat(_toConsumableArray(_this.props.SubSamplecomboComponents),_toConsumableArray(_this.props.SubSamplewithoutCombocomponent));components.map(function(component){if(component.label===temp.label){if(component.child&&component.child.length>0){component.child.map(function(temp1){selectComponent[temp1.label]=\"\";delete SubSamplecomboData[temp1.label];});}}});});}var _updateInfo3={typeName:DEFAULT_RETURN,data:{selectComponent:selectComponent,SubSamplecomboData:SubSamplecomboData}};_this.props.updateStore(_updateInfo3);}};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord;selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onNumericInputSubSampleChange=function(value,name){var selectComponent=_this.state.selectComponent;selectComponent[name]=value;_this.setState({selectComponent:selectComponent});};_this.handleDateChangeComp=function(dateValue,dateName,screenName){var selectedRecord=_this.state.selectedRecord;if(screenName==='component'){var selectComponent=_this.state.selectComponent;selectComponent[dateName]=dateValue;var updateInfo={typeName:DEFAULT_RETURN,data:{selectComponent:selectComponent}};_this.props.updateStore(updateInfo);}else{selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});}};_this.handleDateChange=function(dateValue,dateName){var selectedRecord=_this.state.selectedRecord;selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.handleDateSubSampleChange=function(dateValue,dateName){var selectComponent=_this.state.selectComponent;selectComponent[dateName]=dateValue;_this.setState({selectComponent:selectComponent});};_this.openFilter=function(){var showFilter=!_this.state.showFilter;_this.setState({showFilter:showFilter});};_this.closeFilter=function(){_this.setState({showFilter:false});};_this.AddSpec=function(e){// this.setState({\n//     loadSpec: true\n// })\nvar updateInfo={typeName:DEFAULT_RETURN,data:{loadSpec:true,screenName:\"Specification\"}};_this.props.updateStore(updateInfo);};_this.addTestslide=function(selectedComponent,nneedsubsample,specBasedComponent){if(nneedsubsample){if(selectedComponent&&Object.keys(selectedComponent).length>0){delete selectedComponent[\"selected\"];_this.props.getTest(selectedComponent,_this.props.Login,nneedsubsample,specBasedComponent);}else{toast.warn(_this.props.intl.formatMessage({id:nneedsubsample?\"IDS_SELECTSUBSAMPLETOADDTEST\":\"IDS_SELECTCOMPONENTTOADDTEST\"}));}}else{var selectedComponent1={nallottedspeccode:_this.state.selectedSpec[\"nallottedspeccode\"]?_this.state.selectedSpec[\"nallottedspeccode\"].value:-1,slno:1};_this.props.getTest(selectedComponent1,_this.props.Login,nneedsubsample,specBasedComponent);}};_this.closeSpec=function(e){// this.setState({\n//     loadSpec: false,\n//      selectedRecord: { ...this.state.selectedRecord, ...this.state.selectedSpec },\n//      screenName:\"Specification\"\n// })\nvar updateInfo={typeName:DEFAULT_RETURN,data:{loadSpec:false,selectedRecord:_objectSpread(_objectSpread({},_this.state.selectedRecord),_this.state.selectedSpec),screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename}};_this.props.updateStore(updateInfo);};_this.closeKendoFilter=function(e){// this.setState({\n//     loadSpec: false,\n//      selectedRecord: { ...this.state.selectedRecord, ...this.state.selectedSpec },\n//      screenName:\"Specification\"\n// })\nvar updateInfo={typeName:DEFAULT_RETURN,data:{loadCustomSearchFilter:false,screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,kendoFilter:{logic:\"and\",filters:[]},kendoSkip:0,kendoTake:5,awesomeConfig:undefined,awesomeTree:undefined}};_this.props.updateStore(updateInfo);// this.setState({ kendoFilter: { logic: \"and\", filters: [], kendoSkip: 0, kendoTake: 5 } })\n};_this.closeComponent=function(e){var updateInfo={typeName:DEFAULT_RETURN,data:{loadComponent:false,selectComponent:{}}};_this.props.updateStore(updateInfo);};_this.closeTest=function(e){var updateInfo={typeName:DEFAULT_RETURN,data:{loadTest:false,selectedTestData:{},screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename}};_this.props.updateStore(updateInfo);};_this.closeSubSample=function(e){var updateInfo={typeName:DEFAULT_RETURN,data:{loadSubSample:false,selectedSubSample:{},showSaveContinue:false,selectComponent:{},selectedTestData:{},screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename}};_this.props.updateStore(updateInfo);};_this.onspecChange=function(event,fieldName){if(event!==null){var selectedRecord=_this.state.selectedRecord;// const oldpromarycode = this.state.selectedRecord[\"nallottedspeccode\"] !== undefined ?\n//     this.state.selectedRecord[\"nallottedspeccode\"].value : undefined;\nselectedRecord[\"sversion\"]=parseInt(event.item.sversion);selectedRecord[\"nallottedspeccode\"]=event;//  if(this.props.Login.Component.length=== 0 ){\n_this.setState({selectedRecord:selectedRecord});// }else{\n//     if(event.value!== oldpromarycode ){\n//     this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\n//     \"ok\", \"cancel\", () => this.setState({ selectedRecord }));\n//     }\n// }\n}};_this.onTreeClick=function(event){var inputParam={methodUrl:\"TestGroupSpecification\",screenName:\"IDS_REGISTRATION\",operation:\"get\",activeKey:event.key,focusKey:event.key,keyName:\"treetemplatemanipulation\",userinfo:_this.props.Login.userInfo,selectedNode:event.item,selectedRecord:_this.state.selectedRecord,primaryKey:event.primaryKey};if(event.primaryKey!==_this.state.selectedRecord[\"ntemplatemanipulationcode\"]){_this.props.getNewRegSpecification(inputParam,_this.props.Login.masterData);}// if (this.props.Login.Component === undefined || this.props.Login.Component.length === 0) {\n//     //   this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents);\n// } else {\n//     // if(event.key!== this.props.Login.ActiveKey ){\n//     // this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\n//     // \"ok\", \"cancel\", () =>  this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents));\n//     // }\n// }\n};_this.handleComponentRowClick=function(event){var selectedComponent=event.dataItem;var SelectedTest=_this.props.Login.Test&&_this.props.Login.Test[selectedComponent.slno]?_this.props.Login.Test[selectedComponent.slno]:[];var updateInfo={typeName:DEFAULT_RETURN,data:{SelectedTest:SelectedTest,selectedComponent:selectedComponent,testDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5}}};_this.props.updateStore(updateInfo);};_this.AddComponent=function(){var Map={};if(_this.state.selectedSpec.nallottedspeccode!==undefined&&_this.state.selectedSpec.nallottedspeccode!==\"\"){Map[\"ntemplatemanipulationcode\"]=_this.state.selectedSpec.ntemplatemanipulationcode;Map[\"nallottedspeccode\"]=_this.state.selectedSpec.nallottedspeccode.value;Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"testrequired\"]=false;Map[\"userinfo\"]=_this.props.Login.userInfo;_this.props.AddComponents(Map);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.onComponentChange=function(comboData,fieldName,nneedsubsample){if(comboData!==null){//  if (!nneedsubsample) {\nvar selectComponent=_this.state.selectComponent||{};if(fieldName==='ntzdreceivedate'){selectComponent[\"ntzdreceivedate\"]=comboData;_this.setState({selectComponent:selectComponent});}else{// const oldspecsampletypecode = selectComponent.nspecsampletypecode\n// if (oldspecsampletypecode !== comboData.item.nspecsampletypecode) {\n//     //selectComponent[\"nneedservice\"] = true;\n// }\nselectComponent[fieldName]=comboData;selectComponent[\"Sample Name\"]=comboData.label;selectComponent[\"nspecsampletypecode\"]=comboData.item.nspecsampletypecode;_this.props.componentTest(selectComponent,false,_this.state.specBasedComponent,_this.props.Login.Component);}// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         selectComponent\n//     }\n// }\n// this.props.updateStore(updateInfo);\n// } else {\n//     const selectComponent = this.state.selectComponent || {};\n//     selectComponent[fieldName] = comboData;\n//     // selectComponent[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode ?  comboData.item.nspecsampletypecode : -1;\n//     this.setState({ selectComponent })\n// }\n}};_this.onInputComponentOnChange=function(event){var selectComponent=_this.state.selectComponent||{};if(event.target.type==='checkbox'){selectComponent[event.target.name]=event.target.checked===true?3:4;}else{selectComponent[event.target.name]=event.target.value;}_this.setState({selectComponent:selectComponent});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         selectComponent\n//     }\n// }\n// this.props.updateStore(updateInfo);\n};_this.onSaveComponentClick=function(saveType,formRef){var childoperation=_this.props.Login.childoperation;if(childoperation===\"create\"){if(saveType===1){_this.ComponentObjectAfterSave();}else if(saveType===2){_this.ComponentObject();}}else{var Component=_this.props.Login.Component;var Test=_this.props.Login.Test;var testrequired=_this.state.selectedRecord.ntransactionstatus;var selectedComponent=_objectSpread({},_this.state.selectComponent);var objcomponent={};objcomponent[\"scomponentname\"]=selectedComponent[\"ncomponentcode\"].label;objcomponent[\"ncomponentcode\"]=selectedComponent[\"ncomponentcode\"]?selectedComponent[\"ncomponentcode\"].value:-1;var dreceiveddate=selectedComponent[\"dreceiveddate\"];objcomponent[\"dreceiveddate\"]=dreceiveddate;objcomponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,_this.props.Login.userInfo);objcomponent[\"ntzdreceivedate\"]=selectedComponent[\"ntzdreceivedate\"]?selectedComponent[\"ntzdreceivedate\"].value:-1;objcomponent[\"stzdreceivedate\"]=selectedComponent[\"ntzdreceivedate\"]?selectedComponent[\"ntzdreceivedate\"].label:\"\";objcomponent[\"jsondata\"]=\"\";selectedComponent=_objectSpread(_objectSpread({},selectedComponent),objcomponent);var index=Component.findIndex(function(x){return x.slno===selectedComponent.slno;});if(index>-1){Component.splice(index,1,selectedComponent);}if(testrequired===3){_this.props.getTestByComponentChange(Component,selectedComponent,_this.props.Login);}else if(selectedComponent[\"nneedservice\"]===true){_this.props.getTestByComponentChange(Component,selectedComponent,_this.props.Login,true);}else{delete selectedComponent.nneedservice;var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,selectedComponent:selectedComponent,loadComponent:false,openChildModal:false,selectComponent:undefined,parentPopUpSize:\"xl\",Test:Test,SelectedTest:Test[selectedComponent.slno]}};_this.props.updateStore(updateInfo);}}};_this.onSaveSubSampleClick=function(saveType,formRef){var childoperation=_this.props.Login.childoperation;if(childoperation===\"create\"){if(saveType===1){_this.SubSampleObjectAfterSave();}else if(saveType===2){_this.SubSampleObject();}}else{var Component=_this.props.Login.Component;var Test=_this.props.Login.Test;var testrequired=_this.state.selectedRecord.ntransactionstatus;// const defaulttimezone = this.props.Login.defaulttimezone;\n// const userInfo = this.props.Login.userInfo;\nvar selectedComponent=_objectSpread({},_this.state.selectComponent);var objcomponent={};objcomponent[\"slno\"]=selectedComponent[\"slno\"]?selectedComponent[\"slno\"]:\"\";// objcomponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\n// if(this.props.specBasedComponent){\n//     objcomponent[\"scomponentname\"] = selectedComponent[\"ncomponentcode\"].label;\n//     objcomponent[\"ncomponentcode\"] = selectedComponent[\"ncomponentcode\"] ? selectedComponent[\"ncomponentcode\"].value : -1;\n//     objcomponent[\"nspecsampletypecode\"] = selectedComponent[\"nspecsampletypecode\"] ?selectedComponent[\"nspecsampletypecode\"]  : -1;\n// }else{\n//     objcomponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\n// }\nvar subSampleDetail=getRegistrationSubSample(selectedComponent,_this.props.Login.masterData.SubSampleTemplate.jsondata,_this.props.Login.userInfo,_this.props.Login.defaulttimezone,true,_this.state.specBasedComponent,_this.state.selectedSpec);objcomponent=_objectSpread(_objectSpread({},objcomponent),subSampleDetail.sampleRegistration);var subSampleDataGridList=_this.props.Login.subSampleDataGridList||[];var index1=subSampleDataGridList.findIndex(function(x){return x.slno===objcomponent.slno;});if(index1!==-1)subSampleDataGridList[index1]=_objectSpread(_objectSpread({},objcomponent['jsonuidata']),objcomponent);// objcomponent[\"jsondata\"] = {}\n// objcomponent[\"jsonuidata\"] = {}\n// this.props.Login.masterData.SubSampleTemplate &&\n//     this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\n//         row.children.map(column => {\n//             column.children.map(component => {\n//                 if (component.hasOwnProperty(\"children\")) {\n//                    // let componentrowlabel = ''\n//                  //   let componentrowvalue = ''\n//                     component.children.map(componentrow => {\n//                         if (componentrow.inputtype === \"combo\") {\n//                             objcomponent[\"jsondata\"][componentrow.label] = selectedComponent[componentrow.label] ?\n//                                 { value: selectedComponent[componentrow.label].value, label: selectedComponent[componentrow.label].label } : -1\n//                            // if (componentrow.mandatory || selectedComponent[componentrow.label]) {\n//                               //  componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                                // componentrowvalue = componentrowvalue + ' ' + selectedComponent[componentrow.label].label\n//                           //  }\n//                             objcomponent[\"jsonuidata\"][componentrow.label]=selectedComponent[componentrow.label]?selectedComponent[componentrow.label].label:\"\"\n//                         }\n//                         else if (componentrow.inputtype === \"date\") {\n//                             if (componentrow.mandatory) {\n//                                 selectedComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(selectedComponent[componentrow.label] ?\n//                                     selectedComponent[componentrow.label] : new Date(), userInfo);\n//                                     selectedComponent[\"jsonuidata\"][componentrow.label]=selectedComponent[\"jsondata\"][componentrow.label]\n//                             } else {\n//                                 objcomponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\n//                                     convertDateTimetoString(selectedComponent[componentrow.label] ?\n//                                         selectedComponent[componentrow.label] : new Date(), userInfo) :\n//                                     selectedComponent[componentrow.label] ? convertDateTimetoString(selectedComponent[componentrow.label] ?\n//                                         selectedComponent[componentrow.label] : new Date(), userInfo) : \"\";\n//                                         selectedComponent[\"jsonuidata\"][componentrow.label]=selectedComponent[\"jsondata\"][componentrow.label]\n//                             }\n//                             if (componentrow.timezone) {\n//                                 selectedComponent[\"jsondata\"][`tz${componentrow.label}`] = selectedComponent[`tz${componentrow.label}`] ?\n//                                     { value: selectedComponent[`tz${componentrow.label}`].value, label: selectedComponent[`tz${componentrow.label}`].label } :\n//                                     defaulttimezone ? defaulttimezone : -1\n//                                     selectedComponent[\"jsonuidata\"][`tz${componentrow.label}`]=selectedComponent[\"jsondata\"][`tz${componentrow.label}`]\n//                             }\n//                             // dateList.push(componentrow.label)\n//                         }\n//                         else {\n//                             objcomponent[\"jsondata\"][componentrow.label] = selectedComponent[componentrow.label] ?\n//                                 selectedComponent[componentrow.label] : \"\"\n//                                 objcomponent[\"jsonuidata\"][componentrow.label]=objcomponent[\"jsondata\"][componentrow.label]\n//                             // if (selectedComponent[componentrow.label]) {\n//                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                             //     componentrowvalue = componentrowvalue + ' ' + selectedComponent[componentrow.label]\n//                             // }\n//                         }\n//                     })\n//                    // objcomponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\n//                 }\n//                 else {\n//                     if (component.inputtype === \"combo\") {\n//                         objcomponent[\"jsondata\"][component.label] = selectedComponent[component.label] ?\n//                             { value: selectedComponent[component.label].value, label: selectedComponent[component.label].label } : -1\n//                             objcomponent[\"jsonuidata\"][component.label] =selectedComponent[component.label] ? selectedComponent[component.label].label :\"\"\n//                     }\n//                     else if (component.inputtype === \"date\") {\n//                         if (component.mandatory) {\n//                             objcomponent[\"jsondata\"][component.label] = convertDateTimetoString(selectedComponent[component.label] ?\n//                                 selectedComponent[component.label] : new Date(), userInfo);\n//                                 objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\n//                         } else {\n//                             objcomponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\n//                                 convertDateTimetoString(selectedComponent[component.label] ?\n//                                     selectedComponent[component.label] : new Date(), userInfo) :\n//                                 selectedComponent[component.label] ? convertDateTimetoString(selectedComponent[component.label] ?\n//                                     selectedComponent[component.label] : new Date(), userInfo) : \"\";\n//                                     objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\n//                         }\n//                         if (component.timezone) {\n//                             objcomponent[\"jsondata\"][`tz${component.label}`] = selectedComponent[`tz${component.label}`] ?\n//                                 { value: selectedComponent[`tz${component.label}`].value, label: selectedComponent[`tz${component.label}`].label } :\n//                                 defaulttimezone ? defaulttimezone : -1\n//                                 objcomponent[\"jsonuidata\"][`tz${component.label}`]  = objcomponent[\"jsondata\"][`tz${component.label}`] \n//                         }\n//                         //dateList.push(component.label)\n//                     }\n//                     else {\n//                         objcomponent[\"jsondata\"][component.label] = selectedComponent[component.label] ?\n//                             selectedComponent[component.label] : \"\"\n//                             objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\n//                     }\n//                 }\n//             }\n//             )\n//         })\n//     })\nselectedComponent=_objectSpread({},objcomponent);var index=Component.findIndex(function(x){return x.slno===selectedComponent.slno;});if(index>-1){Component.splice(index,1,selectedComponent);}if(testrequired===3){_this.props.getTestByComponentChange(Component,selectedComponent,_this.props.Login);}else if(selectedComponent[\"nneedservice\"]===true){_this.props.getTestByComponentChange(Component,selectedComponent,_this.props.Login,true);}else{delete selectedComponent.nneedservice;var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,selectedComponent:selectedComponent,loadSubSample:false,openChildModal:false,selectComponent:{},parentPopUpSize:\"xl\",Test:Test,SelectedTest:Test[selectedComponent.slno],screenName:_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,subSampleDataGridList:subSampleDataGridList}};_this.props.updateStore(updateInfo);}}};_this.addSubSampleSaveContinue=function(updateInfo,selectedTestData){var Map={};Map[\"ntemplatemanipulationcode\"]=_this.state.selectedSpec.ntemplatemanipulationcode;Map[\"nallottedspeccode\"]=_this.state.selectedSpec.nallottedspeccode.value;Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"testrequired\"]=false;Map[\"userinfo\"]=_this.props.Login.userInfo;Map[\"nspecsampletypecode\"]=updateInfo.selectedComponent[\"nspecsampletypecode\"]?updateInfo.selectedComponent[\"nspecsampletypecode\"]:-1;_this.props.addSubSampleSaveContinue(updateInfo,Map,_this.state.specBasedComponent,_this.props.Login.Components,selectedTestData,_this.props.Login.lstComponent);};_this.editComponent=function(editselectedcomponent){var inputData={};var objComponent=_objectSpread({},editselectedcomponent);inputData[\"ntemplatemanipulationcode\"]=_this.state.selectedSpec.ntemplatemanipulationcode;inputData[\"nallottedspeccode\"]=_this.state.selectedSpec.nallottedspeccode.value;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;_this.props.EditComponent(inputData,objComponent,_this.props.Login.userInfo,_this.props.Login);};_this.editSubSample=function(editselectedcomponent,specBasedComponent){var inputData={};var objComponent=_objectSpread({},editselectedcomponent);var defaulttimezone=_this.props.Login.defaulttimezone;var userInfo=_this.props.Login.userInfo;inputData[\"ntemplatemanipulationcode\"]=_this.state.selectedSpec.ntemplatemanipulationcode;inputData[\"nallottedspeccode\"]=_this.state.selectedSpec.nallottedspeccode.value;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;// inputData[\"masterData\"]=this.props.Login.masterData;\nvar selectComponent=_this.state.selectComponent;selectComponent['nspecsampletypecode']=objComponent['nspecsampletypecode']?objComponent['nspecsampletypecode']:-1;if(specBasedComponent){selectComponent['ncomponentcode']={value:objComponent['ncomponentcode']?objComponent['ncomponentcode']:-1,label:objComponent['scomponentname']?objComponent['scomponentname']:\"\"};}selectComponent['slno']=objComponent['slno'];_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata.map(function(row){return row.children.map(function(column){return column.children.map(function(component){if(component.hasOwnProperty(\"children\")){return component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){selectComponent[componentrow.label]=objComponent[\"jsondata\"][componentrow.label]?objComponent[\"jsondata\"][componentrow.label]:\"\";}else if(componentrow.inputtype===\"date\"){selectComponent[componentrow.label]=objComponent[\"jsondata\"][componentrow.label]?rearrangeDateFormatforUI(userInfo,objComponent[\"jsondata\"][componentrow.label]):\"\";if(componentrow.timezone){selectComponent[\"tz\".concat(componentrow.label)]=objComponent[\"jsondata\"][\"tz\".concat(componentrow.label)]?objComponent[\"jsondata\"][\"tz\".concat(componentrow.label)]:defaulttimezone?defaulttimezone:-1;}}else{selectComponent[componentrow.label]=objComponent[\"jsondata\"][componentrow.label]?objComponent[\"jsondata\"][componentrow.label]:\"\";}return null;});}else{if(component.inputtype===\"combo\"){selectComponent[component.label]=objComponent[\"jsondata\"][component.label]?objComponent[\"jsondata\"][component.label]:-1;}else if(component.inputtype===\"date\"){selectComponent[component.label]=objComponent[\"jsondata\"][component.label]?rearrangeDateFormatforUI(userInfo,objComponent[\"jsondata\"][component.label]):\"\";if(component.timezone){selectComponent[\"tz\".concat(component.label)]=objComponent[\"jsondata\"][\"tz\".concat(component.label)]?objComponent[\"jsondata\"][\"tz\".concat(component.label)]:defaulttimezone?defaulttimezone:-1;}}else{selectComponent[component.label]=objComponent[\"jsondata\"][component.label]?objComponent[\"jsondata\"][component.label]:\"\";}return selectComponent;}});});});// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         loadSubSample: true, childoperation: \"update\",\n//         ChildscreenName: \"SubSample\",\n//         screenName: \"SubSample\",\n//         openChildModal: false, selectComponent,\n//         parentPopUpSize: \"lg\", loading: false\n//     }\n// }\n// this.props.updateStore(updateInfo)\n_this.props.editSubSample(inputData,selectComponent,_this.props.Login.userInfo,specBasedComponent,_this.props.Login.SubSamplecomboData,_this.state.selectedRecord);};_this.deleteComponent=function(event){var dataItem=event;var Component=_this.props.Login.Component;var subSampleDataGridList=_this.props.Login.subSampleDataGridList;var Test=_this.props.Login.Test;var SelectedTest=_this.props.Login.SelectedTest;var index=Component.findIndex(function(x){return x.slno===dataItem.slno;});if(index>-1){Component.splice(index,1);subSampleDataGridList.splice(index,1);}Test&&Test[dataItem.slno]&&delete Test[dataItem.slno];SelectedTest=Test&&Object.keys(Test).length>0&&Test[Component[0].slno];var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,selectedComponent:Component[0],Test:Test,SelectedTest:SelectedTest}};_this.props.updateStore(updateInfo);};_this.deleteTest=function(event){var dataItem=event;var SelectedTest=_this.props.Login.SelectedTest;var selectedComponent=_this.props.Login.selectedComponent;var Test=_this.props.Login.Test;var index=SelectedTest.findIndex(function(x){return x.ntestgrouptestcode===dataItem.ntestgrouptestcode;});if(index>-1){SelectedTest.splice(index,1);}Test[selectedComponent.slno]=SelectedTest;var updateInfo={typeName:DEFAULT_RETURN,data:{Test:Test,SelectedTest:SelectedTest}};_this.props.updateStore(updateInfo);};_this.onSaveTestClick=function(saveType,formRef){var selectedTestData=_this.props.Login.selectedTestData[\"ntestgrouptestcode\"];var selectedTestArray=[];var updateInfo={};var selectedComponent=_this.props.Login.selectedComponent;var Test=_this.props.Login.Test||[];if(_this.props.Login.masterData.RealRegSubTypeValue?_this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample:false){selectedTestData.map(function(item){item.item['slno']=selectedComponent.slno;return selectedTestArray.push(item.item);});var ArrayTest=Test[selectedComponent.slno]?Test[selectedComponent.slno]:[];//  ArrayTest.push(selectedTestArray);\nTest[selectedComponent.slno]=[].concat(_toConsumableArray(ArrayTest),selectedTestArray);updateInfo={typeName:DEFAULT_RETURN,data:{SelectedTest:Test[selectedComponent.slno],Test:Test,selectedTestData:{},loadTest:false,parentPopUpSize:\"xl\"}};}else{selectedComponent={jsondata:{samplename:\"NA\"},slno:1};selectedTestData.map(function(item){item.item['slno']=selectedComponent.slno;return selectedTestArray.push(item.item);});var Component=[selectedComponent];var _ArrayTest=Test[selectedComponent.slno]?Test[selectedComponent.slno]:[];//  ArrayTest.push(selectedTestArray);\nTest[selectedComponent.slno]=[].concat(_toConsumableArray(_ArrayTest),selectedTestArray);updateInfo={typeName:DEFAULT_RETURN,data:{selectedComponent:selectedComponent,Component:Component,SelectedTest:Test[selectedComponent.slno],Test:Test,selectedTestData:{},loadTest:false,parentPopUpSize:\"xl\",screenName:_this.props.Login.masterData.RealRegSubTypeValue?_this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename:\"scheduler\"}};}_this.props.updateStore(updateInfo);};_this.componentDataStateChange=function(event){_this.setState({componentDataState:event.dataState});};_this.testDataStateChange=function(event){_this.setState({testDataState:event.dataState});};_this.subSampleDataStateChange=function(event){_this.setState({subSampleDataState:event.dataState});};_this.addsubSample=function(specBasedComponent){var Map={};if(_this.state.selectedSpec.nallottedspeccode!==undefined&&_this.state.selectedSpec.nallottedspeccode!==\"\"){Map[\"ntemplatemanipulationcode\"]=_this.state.selectedSpec.ntemplatemanipulationcode;Map[\"nallottedspeccode\"]=_this.state.selectedSpec.nallottedspeccode.value;Map[\"nregtypecode\"]=_this.props.Login.masterData.RealRegTypeValue.nregtypecode;Map[\"testrequired\"]=false;Map[\"userinfo\"]=_this.props.Login.userInfo;var data=_this.state.SubSamplecomboComponents||[];var SubSamplewithoutCombocomponent=_this.state.SubSamplewithoutCombocomponent||[];var Layout=_this.props.Login.masterData.SubSampleTemplate&&_this.props.Login.masterData.SubSampleTemplate.jsondata;if(SubSamplewithoutCombocomponent.length===0||data.length===0){if(Layout!==undefined){Layout.map(function(row){return row.children.map(function(column){return column.children.map(function(component){return component.hasOwnProperty(\"children\")?component.children.map(function(componentrow){if(componentrow.inputtype===\"combo\"){data.push(componentrow);}else{SubSamplewithoutCombocomponent.push(componentrow);}return null;}):component.inputtype===\"combo\"?data.push(component):SubSamplewithoutCombocomponent.push(component);});});});var SubSamplecomboComponents=data;var childColumnList={};data.map(function(columnList){var val=comboChild(data,columnList,childColumnList,true);data=val.data;childColumnList=val.childColumnList;return null;});_this.props.addsubSample(_this.props.Login.masterData,_this.props.Login.userInfo,data,_this.state.selectComponent,childColumnList,SubSamplecomboComponents,SubSamplewithoutCombocomponent,specBasedComponent,Map,_this.props.Login.Component,true,_this.props.Login.SubSamplecomboData,_this.state.selectedRecord);//  this.props.addsubSample(this.props.Login.userInfo, specBasedComponent, Map)\n}}else{_this.props.addsubSample(_this.props.Login.masterData,_this.props.Login.userInfo,data,_this.state.selectComponent,_this.state.parentSubSampleColumnList,_this.state.SubSamplecomboComponents,_this.state.SubSamplewithoutCombocomponent,specBasedComponent,Map,_this.props.Login.Component,false,_this.props.Login.SubSamplecomboData,_this.state.selectedRecord);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.onSaveClick=function(saveType,formRef){var operation=_this.props.Login.operation;if(_this.props.Login.screenName!=='scheduler'){if(operation===\"update\"){_this.onUpdateRegistration(saveType,formRef,operation);}else{if(operation===\"create\"){_this.insertRegistration(true);}}}else{if(operation===\"update\"){_this.onUpdateRegistration(saveType,formRef,operation);}else{if(operation===\"create\"){_this.insertRegistrationScheduler(true);}}}};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord;selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.myRef=React.createRef();_this.PrevoiusLoginData=_this.props.PrevoiusLoginData;_this.subSampleDataGridList=[];_this.componentColumnList=[{\"idsName\":\"IDS_SPECIMEN\",\"dataField\":\"scomponentname\",width:\"200px\"},{\"idsName\":\"IDS_DATERECEIVED\",\"dataField\":\"sreceiveddate\",width:\"250px\"},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",width:\"200px\"}];_this.sampleeditable=JSON.parse(_this.props.Login.masterData.DynamicDesign.jsondata.value);return _this;}_createClass(PreRegisterSlideOutModal,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this2=this;var masterStatus=this.props.masterStatus;// const {selectedRecord,selectedSpec,selectedTestData,selectComponent} =this.state\nvar check=false;if(this.props.Login.selectedRecord!==this.PrevoiusLoginData.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});check=true;}if(this.props.Login.selectedSpec!==this.PrevoiusLoginData.Login.selectedSpec){var specBasedComponent=this.props.Login.selectedSpec[\"nallottedspeccode\"]&&this.props.Login.selectedSpec[\"nallottedspeccode\"].item.ncomponentrequired===3?true:false;this.subSampleDataGridList=[];if(specBasedComponent){this.subSampleDataGridList=[{\"idsName\":\"IDS_SPECIMEN\",\"dataField\":\"scomponentname\",width:\"200px\"}];}this.props.Login.masterData.SubSampleTemplate&&this.props.Login.masterData.SubSampleTemplate.jsondata.map(function(row){return row.children.map(function(column){return column.children.map(function(component){// let label = ''\nif(component.hasOwnProperty(\"children\")){component.children.map(function(componentrow){if(componentrow.mandatory===true){// label = label + '&' + componentrow.label\n_this2.subSampleDataGridList.push({\"mandatory\":true,\"idsName\":componentrow.label,\"dataField\":componentrow.label,width:\"150px\"});}return _this2.subSampleDataGridList;});}else{if(component.mandatory)_this2.subSampleDataGridList.push({\"mandatory\":true,\"idsName\":component.label,\"dataField\":component.label,width:\"150px\"});return _this2.subSampleDataGridList;}// if (label !== '') {\n//     this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": label.substring(1), \"dataField\": label.substring(1),width: \"150px\" })\n// }\n});});});this.setState({selectedSpec:this.props.Login.selectedSpec,specBasedComponent:specBasedComponent});check=true;}if(this.props.Login.selectedTestData!==this.PrevoiusLoginData.Login.selectedTestData){this.setState({selectedTestData:this.props.Login.selectedTestData});check=true;}if(this.props.Login.selectComponent!==this.PrevoiusLoginData.Login.selectComponent){this.setState({selectComponent:this.props.Login.selectComponent});check=true;}if(this.props.Login.specBasedComponent!==this.PrevoiusLoginData.Login.specBasedComponent){this.setState({specBasedComponent:this.props.Login.specBasedComponent});check=true;}if(this.props.Login.SubSamplewithoutCombocomponent!==this.PrevoiusLoginData.Login.SubSamplewithoutCombocomponent){this.setState({SubSamplewithoutCombocomponent:this.props.Login.SubSamplewithoutCombocomponent});check=true;}if(this.props.Login.SubSamplecomboComponents!==this.PrevoiusLoginData.Login.SubSamplecomboComponents){this.setState({SubSamplecomboComponents:this.props.Login.SubSamplecomboComponents});check=true;}if(this.props.Login.parentSubSampleColumnList!==this.PrevoiusLoginData.Login.parentSubSampleColumnList){this.setState({parentSubSampleColumnList:this.props.Login.parentSubSampleColumnList});check=true;}if(check){this.PrevoiusLoginData=previousProps;}if(masterStatus!==\"\"&&masterStatus!==undefined){toast.warn(masterStatus);var updateInfo={typeName:DEFAULT_RETURN,data:{masterStatus:\"\"}};this.props.updateStore(updateInfo);masterStatus=\"\";}if(this.props.innerPopup!==this.state.innerTop){setTimeout(function(){var scrollDoc=_this2.props.modalEvent&&_this2.props.modalEvent.id?document.getElementById(_this2.props.modalEvent.id):null;if(_this2.myRef&&_this2.myRef.current){_this2.myRef.current.scrollIntoView({behavior:'smooth'});}if(scrollDoc){scrollDoc.scrollIntoView({behavior:'smooth'});}},100);this.setState({innerTop:this.props.innerPopup});}}},{key:\"ComponentObjectAfterSave\",value:function ComponentObjectAfterSave(){var testrequired=this.state.selectedRecord.ntransactionstatus;var objcomponent=this.state.selectComponent;delete objcomponent.nneedservice;if(testrequired===3){this.props.getTestfromDB(objcomponent,this.props.Login,2);}else{var Component=this.props.Login.Component||[];var saveComponent=_objectSpread({},objcomponent);saveComponent[\"slno\"]=this.props.Login.Component?Object.keys(this.props.Login.Component).length+1:1;saveComponent[\"scomponentname\"]=objcomponent[\"ncomponentcode\"].label;saveComponent[\"ncomponentcode\"]=objcomponent[\"ncomponentcode\"]?objcomponent[\"ncomponentcode\"].value:-1;var dreceiveddate=objcomponent[\"dreceiveddate\"];saveComponent[\"dreceiveddate\"]=dreceiveddate;saveComponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,this.props.Login.userInfo);saveComponent[\"nallottedspeccode\"]=objcomponent[\"nallottedspeccode\"]?objcomponent[\"nallottedspeccode\"]:-1;saveComponent[\"ntzdreceivedate\"]=objcomponent[\"ntzdreceivedate\"]?objcomponent[\"ntzdreceivedate\"].value:-1;saveComponent[\"stzdreceivedate\"]=objcomponent[\"ntzdreceivedate\"]?objcomponent[\"ntzdreceivedate\"].label:\"\";saveComponent[\"jsondata\"]=\"\";Component.unshift(saveComponent);var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,openChildModal:false,selectedComponent:saveComponent,SelectedTest:[],selectComponent:{},showSaveContinue:false,loadComponent:false,parentPopUpSize:\"xl\"}};this.props.updateStore(updateInfo);}}},{key:\"ComponentObject\",value:function ComponentObject(){var testrequired=this.state.selectedRecord.ntransactionstatus;var objcomponent=this.state.selectComponent;delete objcomponent.nneedservice;var objcomponent1=_objectSpread({},this.state.selectComponent);if(testrequired===3){this.props.getTestfromDB(objcomponent,this.props.Login,1);}else{var Component=this.props.Login.Component||[];var saveComponent=_objectSpread({},objcomponent);saveComponent[\"scomponentname\"]=objcomponent[\"ncomponentcode\"].label;saveComponent[\"slno\"]=this.props.Login.Component?Object.keys(this.props.Login.Component).length+1:1;saveComponent[\"ncomponentcode\"]=objcomponent[\"ncomponentcode\"]?objcomponent[\"ncomponentcode\"].value:-1;var dreceiveddate=objcomponent[\"dreceiveddate\"];saveComponent[\"dreceiveddate\"]=dreceiveddate;saveComponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,this.props.Login.userInfo);saveComponent[\"ntzdreceivedate\"]=objcomponent[\"ntzdreceivedate\"]?objcomponent[\"ntzdreceivedate\"].value:-1;saveComponent[\"stzdreceivedate\"]=objcomponent[\"ntzdreceivedate\"]?objcomponent[\"ntzdreceivedate\"].label:\"\";saveComponent[\"nallottedspeccode\"]=objcomponent[\"nallottedspeccode\"]?objcomponent[\"nallottedspeccode\"]:-1;saveComponent[\"jsondata\"]=\"\";Component.unshift(saveComponent);objcomponent1[\"scomments\"]=\"\";var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,selectedComponent:saveComponent,SelectedTest:[],selectComponent:objcomponent1}};this.props.updateStore(updateInfo);}}},{key:\"SubSampleObjectAfterSave\",value:function SubSampleObjectAfterSave(){var testrequired=this.state.selectedRecord.ntransactionstatus;var objcomponent=this.state.selectComponent;delete objcomponent.nneedservice;// const defaulttimezone = this.props.Login.defaulttimezone;\n// const userInfo = this.props.Login.userInfo;\nif(testrequired===3){this.props.getTestfromDB(objcomponent,this.props.Login,2);}else{var Component=this.props.Login.Component||[];var saveComponent={};// saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\n//saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\nsaveComponent[\"slno\"]=this.props.Login.Component?Object.keys(this.props.Login.Component).length+1:1;// if(this.props.specBasedComponent){\n//     saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\n//     saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\n//     saveComponent[\"nspecsampletypecode\"] = objcomponent[\"nspecsampletypecode\"] ?objcomponent[\"nspecsampletypecode\"]  : -1;\n// }else{\n//     saveComponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\n// }\nvar subSampleDetail=getRegistrationSubSample(objcomponent,this.props.Login.masterData.SubSampleTemplate.jsondata,this.props.Login.userInfo,this.props.Login.defaulttimezone,true,this.state.specBasedComponent,this.state.selectedSpec);saveComponent=_objectSpread(_objectSpread({},saveComponent),subSampleDetail.sampleRegistration);var subSampleDataGridList=this.props.Login.subSampleDataGridList||[];subSampleDataGridList.push(_objectSpread(_objectSpread({},saveComponent['jsonuidata']),saveComponent));// saveComponent[\"jsondata\"] = {}\n// saveComponent[\"jsonuidata\"] = {}\n// this.props.Login.masterData.SubSampleTemplate &&\n//     this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\n//         row.children.map(column => {\n//             column.children.map(component => {\n//                 if (component.hasOwnProperty(\"children\")) {\n//                    // let componentrowlabel = ''\n//                    // let componentrowvalue = ''\n//                     component.children.map(componentrow => {\n//                         if (componentrow.inputtype === \"combo\") {\n//                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\n//                                 { value: objcomponent[componentrow.label].value, label: objcomponent[componentrow.label].label } : -1\n//                             // if (componentrow.mandatory || objcomponent[componentrow.label]) {\n//                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label].label\n//                             // }\n//                             saveComponent[\"jsonuidata\"][componentrow.label] = objcomponent[componentrow.label] ? objcomponent[componentrow.label].label  : \"\"\n//                         }\n//                         else if (componentrow.inputtype === \"date\") {\n//                             if (componentrow.mandatory) {\n//                                 saveComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                     objcomponent[componentrow.label] : new Date(), userInfo);\n//                                     saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             } else {\n//                                 saveComponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\n//                                     convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                         objcomponent[componentrow.label] : new Date(), userInfo) :\n//                                     objcomponent[componentrow.label] ? convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                         objcomponent[componentrow.label] : new Date(), userInfo) : \"\";\n//                                         saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             }\n//                             if (componentrow.timezone) {\n//                                 saveComponent[\"jsondata\"][`tz${componentrow.label}`] = objcomponent[`tz${componentrow.label}`] ?\n//                                     { value: objcomponent[`tz${componentrow.label}`].value, label: objcomponent[`tz${componentrow.label}`].label } :\n//                                     defaulttimezone ? defaulttimezone : -1\n//                                     saveComponent[\"jsonuidata\"][`tz${componentrow.label}`] = saveComponent[\"jsondata\"][`tz${componentrow.label}`]\n//                             }\n//                             // dateList.push(componentrow.label)\n//                         }\n//                         else {\n//                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\n//                                 objcomponent[componentrow.label] : \"\"\n//                                 saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             // if (objcomponent[componentrow.label]) {\n//                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label]\n//                             // }\n//                         }\n//                     })\n//                     //saveComponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\n//                 }\n//                 else {\n//                     if (component.inputtype === \"combo\") {\n//                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\n//                             { value: objcomponent[component.label].value, label: objcomponent[component.label].label } : -1\n//                             saveComponent[\"jsonuidata\"][component.label] = objcomponent[component.label] ? objcomponent[component.label].label  :\"\"\n//                         }\n//                     else if (component.inputtype === \"date\") {\n//                         if (component.mandatory) {\n//                             saveComponent[\"jsondata\"][component.label] = convertDateTimetoString(objcomponent[component.label] ?\n//                                 objcomponent[component.label] : new Date(), userInfo);\n//                                 saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                         } else {\n//                             saveComponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\n//                                 convertDateTimetoString(objcomponent[component.label] ?\n//                                     objcomponent[component.label] : new Date(), userInfo) :\n//                                 objcomponent[component.label] ? convertDateTimetoString(objcomponent[component.label] ?\n//                                     objcomponent[component.label] : new Date(), userInfo) : \"\";\n//                                     saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                                 }\n//                         if (component.timezone) {\n//                             saveComponent[\"jsondata\"][`tz${component.label}`] = objcomponent[`tz${component.label}`] ?\n//                                 { value: objcomponent[`tz${component.label}`].value, label: objcomponent[`tz${component.label}`].label } :\n//                                 defaulttimezone ? defaulttimezone : -1\n//                                 saveComponent[\"jsonuidata\"][`tz${component.label}`]=  saveComponent[\"jsondata\"][`tz${component.label}`]\n//                         }\n//                         //dateList.push(component.label)\n//                     }\n//                     else {\n//                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\n//                             objcomponent[component.label] : \"\"\n//                             saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                     }\n//                 }\n//             }\n//             )\n//         })\n//     })\n//  saveComponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\nComponent.unshift(saveComponent);var selectedTestData=this.state.selectedTestData[\"ntestgrouptestcode\"];var selectedTestArray=[];selectedTestData&&selectedTestData.map(function(item){item.item['slno']=saveComponent.slno;return selectedTestArray.push(item.item);});// selectedTestArray.map((item,i)=>{\n//    selectedTestArray[i]['slno']=saveComponent.slno;\n// })\n// let selectedComponent = this.props.Login.selectedComponent;\nvar Test=this.props.Login.Test||[];var ArrayTest=Test[saveComponent.slno]?Test[saveComponent.slno]:[];//  ArrayTest.push(selectedTestArray);\nTest[saveComponent.slno]=[].concat(_toConsumableArray(ArrayTest),selectedTestArray);var updateInfo={typeName:DEFAULT_RETURN,data:{Component:Component,openChildModal:false,selectedComponent:saveComponent,loadSubSample:false,selectComponent:{},showSaveContinue:false,parentPopUpSize:\"xl\",SelectedTest:Test[saveComponent.slno],Test:Test,selectedTestData:{},screenName:this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,subSampleDataGridList:subSampleDataGridList}};this.props.updateStore(updateInfo);}}},{key:\"SubSampleObject\",value:function SubSampleObject(){var testrequired=this.state.selectedRecord.ntransactionstatus;var objcomponent=this.state.selectComponent;delete objcomponent.nneedservice;var objcomponent1=_objectSpread({},this.state.selectComponent);// const defaulttimezone = this.props.Login.defaulttimezone;\n// const userInfo = this.props.Login.userInfo;\nif(testrequired===3){this.props.getTestfromDB(objcomponent,this.props.Login,1);}else{var Component=this.props.Login.Component||[];var saveComponent={};// if(this.props.specBasedComponent){\n//     saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\n//     saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\n//     saveComponent[\"nspecsampletypecode\"] = objcomponent[\"nspecsampletypecode\"] ?objcomponent[\"nspecsampletypecode\"]  : -1;\n// }else{\n//     saveComponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\n// }\nsaveComponent[\"slno\"]=this.props.Login.Component?Object.keys(this.props.Login.Component).length+1:1;var subSampleDetail=getRegistrationSubSample(objcomponent,this.props.Login.masterData.SubSampleTemplate.jsondata,this.props.Login.userInfo,this.props.Login.defaulttimezone,true,this.state.specBasedComponent,this.state.selectedSpec);saveComponent=_objectSpread(_objectSpread({},saveComponent),subSampleDetail.sampleRegistration);var subSampleDataGridList=this.props.Login.subSampleDataGridList||[];subSampleDataGridList.push(_objectSpread(_objectSpread({},saveComponent['jsonuidata']),saveComponent));// saveComponent[\"jsondata\"] = {}\n// saveComponent[\"jsonuidata\"] = {}\n// this.props.Login.masterData.SubSampleTemplate &&\n//   this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\n//         row.children.map(column => {\n//             column.children.map(component => {\n//                 if (component.hasOwnProperty(\"children\")) {\n//                    // let componentrowlabel = ''\n//                    // let componentrowvalue = ''\n//                     component.children.map(componentrow => {\n//                         if (componentrow.inputtype === \"combo\") {\n//                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\n//                                 { value: objcomponent[componentrow.label].value, label: objcomponent[componentrow.label].label } : -1\n//                             // if (componentrow.mandatory || objcomponent[componentrow.label]) {\n//                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label].label\n//                             // }\n//                             saveComponent[\"jsonuidata\"][componentrow.label] = objcomponent[componentrow.label] ? objcomponent[componentrow.label].label  : \"\"\n//                         }\n//                         else if (componentrow.inputtype === \"date\") {\n//                             if (componentrow.mandatory) {\n//                                 saveComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                     objcomponent[componentrow.label] : new Date(), userInfo);\n//                                     saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             } else {\n//                                 saveComponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\n//                                     convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                         objcomponent[componentrow.label] : new Date(), userInfo) :\n//                                     objcomponent[componentrow.label] ? convertDateTimetoString(objcomponent[componentrow.label] ?\n//                                         objcomponent[componentrow.label] : new Date(), userInfo) : \"\";\n//                                         saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             }\n//                             if (componentrow.timezone) {\n//                                 saveComponent[\"jsondata\"][`tz${componentrow.label}`] = objcomponent[`tz${componentrow.label}`] ?\n//                                     { value: objcomponent[`tz${componentrow.label}`].value, label: objcomponent[`tz${componentrow.label}`].label } :\n//                                     defaulttimezone ? defaulttimezone : -1\n//                                     saveComponent[\"jsonuidata\"][`tz${componentrow.label}`] = saveComponent[\"jsondata\"][`tz${componentrow.label}`]\n//                             }\n//                             // dateList.push(componentrow.label)\n//                         }\n//                         else {\n//                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\n//                                 objcomponent[componentrow.label] : \"\"\n//                                 saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\n//                             // if (objcomponent[componentrow.label]) {\n//                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\n//                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label]\n//                             // }\n//                         }\n//                     })\n//                     //saveComponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\n//                 }\n//                 else {\n//                     if (component.inputtype === \"combo\") {\n//                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\n//                             { value: objcomponent[component.label].value, label: objcomponent[component.label].label } : -1\n//                             saveComponent[\"jsonuidata\"][component.label] = objcomponent[component.label] ? objcomponent[component.label].label  :\"\"\n//                         }\n//                     else if (component.inputtype === \"date\") {\n//                         if (component.mandatory) {\n//                             saveComponent[\"jsondata\"][component.label] = convertDateTimetoString(objcomponent[component.label] ?\n//                                 objcomponent[component.label] : new Date(), userInfo);\n//                                 saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                         } else {\n//                             saveComponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\n//                                 convertDateTimetoString(objcomponent[component.label] ?\n//                                     objcomponent[component.label] : new Date(), userInfo) :\n//                                 objcomponent[component.label] ? convertDateTimetoString(objcomponent[component.label] ?\n//                                     objcomponent[component.label] : new Date(), userInfo) : \"\";\n//                                     saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                                 }\n//                         if (component.timezone) {\n//                             saveComponent[\"jsondata\"][`tz${component.label}`] = objcomponent[`tz${component.label}`] ?\n//                                 { value: objcomponent[`tz${component.label}`].value, label: objcomponent[`tz${component.label}`].label } :\n//                                 defaulttimezone ? defaulttimezone : -1\n//                                 saveComponent[\"jsonuidata\"][`tz${component.label}`]=  saveComponent[\"jsondata\"][`tz${component.label}`]\n//                         }\n//                         //dateList.push(component.label)\n//                     }\n//                     else {\n//                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\n//                             objcomponent[component.label] : \"\"\n//                             saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\n//                     }\n//                 }\n//             }\n//             )\n//         })\n//     })\n//   saveComponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ?\n//     this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\nComponent.unshift(saveComponent);// objcomponent1[\"scomments\"] = \"\";\n//objcomponent1[\"ssubsamplename\"] = \"\";\nvar selectedTestData=this.state.selectedTestData[\"ntestgrouptestcode\"];var selectedTestArray=[];selectedTestData&&selectedTestData.map(function(item){item.item['slno']=saveComponent.slno;return selectedTestArray.push(item.item);});// selectedTestArray.map((item,i)=>{\n//     selectedTestArray[i]['slno']=saveComponent.slno;\n// })\nvar Test=this.props.Login.Test||[];var ArrayTest=Test[saveComponent.slno]?Test[saveComponent.slno]:[];Test[saveComponent.slno]=[].concat(_toConsumableArray(ArrayTest),selectedTestArray);var updateInfo={Component:Component,selectedComponent:saveComponent,selectComponent:objcomponent1,SelectedTest:Test[saveComponent.slno],Test:Test,subSampleDataGridList:subSampleDataGridList//, selectedTestData: {}\n};this.addSubSampleSaveContinue(updateInfo,selectedTestData);// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         Component, selectedComponent: saveComponent,\n//         selectComponent: objcomponent1,\n//         SelectedTest: Test[saveComponent.slno],\n//         Test: Test, selectedTestData: {}\n//     }\n// }\n// this.props.updateStore(updateInfo);\n}}},{key:\"onUpdateRegistration\",value:function onUpdateRegistration(saveType,formRef,operation,flag){var inputData={userinfo:this.props.Login.userInfo};var initialParam={nfilterstatus:this.props.Login.masterData.FilterStatusValue.ntransactionstatus,userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,nregtypecode:this.props.Login.masterData.RealRegTypeValue.nregtypecode,nregsubtypecode:this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,fromdate:\"\",todate:\"\",nflag:2,ntype:2,npreregno:String(this.state.selectedRecord.npreregno),ndesigntemplatemappingcode:this.props.Login.masterData.RealDesignTemplateMappingValue&&this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,nneedtemplatebasedflow:this.props.Login.masterData.RegSubTypeValue?this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow:false,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.RealRegSubTypeValue?this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample:false,checkBoxOperation:3,activeSampleTab:this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\",activeTestTab:this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\",activeSubSampleTab:this.props.Login.activeSubSampleTab||\"IDS_SUBSAMPLEATTACHMENTS\"};inputData[\"initialparam\"]=initialParam;// inputData[\"samplebeforeedit\"] = JSON.parse(JSON.stringify(this.props.Login.regRecordToEdit));\n//inputData[\"registration\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\nvar param=getRegistration(this.props.Login.masterData,this.state.selectedRecord,this.state.selectedSpec,this.props.Login.masterData.registrationTemplate.jsondata,this.props.Login.userInfo,this.props.Login.defaulttimezone,operation,this.props.comboComponents);inputData[\"registration\"]=param.sampleRegistration;inputData[\"DateList\"]=param.dateList;inputData['sampledateconstraints']=this.sampleeditable.sampledateconstraints;inputData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.RealDesignTemplateMappingValue&&this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;inputData[\"nneedtemplatebasedflow\"]=this.props.Login.masterData.RegSubTypeValue&&this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;inputData[\"nneedsubsample\"]=this.props.Login.masterData&&this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample;inputData[\"checkBoxOperation\"]=3;inputData[\"activeSampleTab\"]=this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\";inputData[\"activeTestTab\"]=this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\";// Object.keys(this.state.selectedRecord).map(key => {\n//     if (typeof this.state.selectedRecord[key] === \"object\") {\n//         if (this.state.selectedRecord[key] === null) {\n//             return inputData[\"registration\"][key] = this.state.selectedRecord[key];\n//         }\n//         else if (this.state.selectedRecord[key] instanceof Date) {\n//             return inputData[\"registration\"][key] = formatInputDate(this.state.selectedRecord[key], false);\n//         }\n//         else {\n//             return inputData[\"registration\"][key] = this.state.selectedRecord[key].value\n//         }\n//     }\n//     else {\n//         return inputData[\"registration\"][key] = this.state.selectedRecord[key];\n//     }\n// }\n//  )\n// console.log(\"edit:\", inputData);\n// if (inputData[\"registration\"] ) {\n//     delete inputData[\"registration\"][\"esignpassword\"]\n//     delete inputData[\"registration\"][\"esigncomments\"]\n//     delete inputData[\"registration\"][\"agree\"]\n// }\nvar inputParam={classUrl:this.props.Login.inputParam.classUrl,methodUrl:\"Registration\",displayName:this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,action:'editSample',showConfirmAlert:false,resultDataState:this.state.resultDataState,testCommentDataState:this.state.testCommentDataState// dataState:undefined, selectedId\n};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:this.props.Login.masterData},saveType:saveType,parentPopUpSize:\"lg\"}};this.props.updateStore(updateInfo);}else{//this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\nthis.props.updateRegistration(inputParam,this.props.Login.masterData,\"openModal\");}}},{key:\"findSubsampleDateList\",value:function findSubsampleDateList(subsampletemplate){var dateList=[];subsampletemplate&&subsampletemplate.map(function(row){return row.children.map(function(column){return column.children.map(function(component){if(component.hasOwnProperty(\"children\")){return component.children.map(function(componentrow){if(componentrow.inputtype===\"date\"){dateList.push(componentrow.label);}});}else{if(component.inputtype===\"date\"){dateList.push(component.label);}return dateList;}});});});return dateList;}},{key:\"insertRegistrationScheduler\",value:function insertRegistrationScheduler(){var Components=this.props.Login.Component;if(Components&&Components.length>0){var Test=this.props.Login.Test;var _Map={};_Map[\"testgrouptest\"]=TestListManipulation(Components,Test);_Map[\"RegistrationSample\"]=SubSample(this.props.Login.Component?this.props.Login.Component:[],this.state.specBasedComponent,this.props.Login.masterData.RealRegSubTypeValue?this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample:false,this.state.selectedSpec);_Map[\"subsampleDateList\"]=this.findSubsampleDateList(this.props.Login.masterData.SubSampleTemplate?this.props.Login.masterData.SubSampleTemplate.jsondata:this.props.Login.masterData.schedulerSubSampleTemplate.jsondata);_Map[\"nregtypecode\"]=1;_Map[\"nregsubtypecode\"]=1;_Map[\"nsampletypecode\"]=1;// Map[\"nfilterstatus\"] = transactionStatus.PREREGISTER;\n_Map[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.ndesigntemplatemappingcode;_Map[\"nneedtemplatebasedflow\"]=false;_Map[\"nneedsubsample\"]=this.props.Login.masterData.RealRegSubTypeValue?this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample:false;// Map[\"checkBoxOperation\"] = 3;\nvar param=getRegistrationScheduler(this.props.Login.masterData,this.state.selectedRecord,this.state.selectedSpec,this.props.Login.masterData.schedulerTemplate.jsondata,this.props.Login.userInfo,this.props.Login.defaultTimeZone,'create',this.props.comboComponents);_Map[\"Registration\"]=param.sampleRegistration;_Map[\"DateList\"]=param.dateList;_Map['sampledateconstraints']=this.sampleeditable.sampledateconstraints;_Map[\"userinfo\"]=this.props.Login.userInfo;_Map[\"selectedscheduler\"]=this.props.Login.masterData.SelectedScheduler;_Map[\"selectedscheduler\"][\"sstarttime\"]=formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo,_Map[\"selectedscheduler\"][\"sstarttime\"]),false);//Map[\"nflag\"] = 2;\n// Map[\"ntype\"] = 2;\n//Map[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\";\n//Map[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n//  Map[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n//Map[\"multipleselectionFlag\"] = this.props.Login.settings && parseInt(this.props.Login.settings[7]) === 3 ? true : false;\nvar inputParam={inputData:_Map,postParamList:this.props.postParamList,action:\"preregister\"};this.props.insertRegistrationScheduler(inputParam,this.props.Login.masterData);}else{toast.warn(this.props.intl.formatMessage({id:\"IDS_ADDSUBSAMPLETOPREREGISTER\"}));}}},{key:\"insertRegistration\",value:function insertRegistration(){var Components=this.props.Login.Component;if(Components&&Components.length>0){var Test=this.props.Login.Test;var _Map2={};_Map2[\"testgrouptest\"]=TestListManipulation(Components,Test);_Map2[\"RegistrationSample\"]=SubSample(this.props.Login.Component?this.props.Login.Component:[],this.state.specBasedComponent,this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample,this.state.selectedSpec);_Map2[\"subsampleDateList\"]=this.findSubsampleDateList(this.props.Login.masterData.SubSampleTemplate.jsondata);//Map[\"FromDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.props.fromDate);//formatDate(this.fromDate);\n// Map[\"ToDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.props.toDate);//formatDate(this.toDate);\n_Map2[\"FromDate\"]=\"\";_Map2[\"ToDate\"]=\"\";_Map2[\"nregtypecode\"]=this.props.Login.masterData.RealRegTypeValue.nregtypecode;_Map2[\"nregsubtypecode\"]=this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;_Map2[\"nsampletypecode\"]=this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;_Map2[\"nfilterstatus\"]=transactionStatus.PREREGISTER;_Map2[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.registrationTemplate&&this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;_Map2[\"nneedtemplatebasedflow\"]=this.props.Login.masterData.RegSubTypeValue&&this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;_Map2[\"nneedsubsample\"]=this.props.Login.masterData&&this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample;_Map2[\"checkBoxOperation\"]=3;var param=getRegistration(this.props.Login.masterData,this.state.selectedRecord,this.state.selectedSpec,this.props.Login.masterData.registrationTemplate.jsondata,this.props.Login.userInfo,this.props.Login.defaultTimeZone,'create',this.props.comboComponents);_Map2[\"Registration\"]=param.sampleRegistration;_Map2[\"DateList\"]=param.dateList;_Map2['sampledateconstraints']=this.sampleeditable.sampledateconstraints;_Map2[\"userinfo\"]=this.props.Login.userInfo;_Map2[\"nflag\"]=2;// Map[\"ntype\"] = 2;\n_Map2[\"activeTestTab\"]=this.props.Login.activeTestTab||\"IDS_PARAMETERRESULTS\";_Map2[\"activeSampleTab\"]=this.props.Login.activeSampleTab||\"IDS_SAMPLEATTACHMENTS\";_Map2[\"activeSubSampleTab\"]=this.props.Login.activeSubSampleTab||\"IDS_SUBSAMPLEATTACHMENTS\";_Map2[\"multipleselectionFlag\"]=this.props.Login.settings&&parseInt(this.props.Login.settings[7])===3?true:false;var inputParam={inputData:_Map2,postParamList:this.props.postParamList,action:\"preregister\"};this.props.insertRegistration(inputParam,this.props.Login.masterData);}else{toast.warn(this.props.intl.formatMessage({id:\"IDS_ADDSUBSAMPLETOPREREGISTER\"}));}}},{key:\"render\",value:function render(){var _this3=this;var saveType=1;if(this.props.ignoreFormValidation){saveType=5;}var buttonLabel=\"Save\";var idsLabel=\"IDS_SAVE\";if(this.props.buttonLabel){buttonLabel=this.props.buttonLabel;idsLabel='IDS_'.concat(buttonLabel.toUpperCase());}// const testColumnList = [\n//     { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\n//     { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\n//     { \"idsName\": \"IDS_SOURCE\", \"dataField\": \"ssourcename\", width: \"150px\" },\n//     { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\n//     { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"200px\" }]\nreturn/*#__PURE__*/React.createElement(Modal,{size:this.props.Login.loadComponent?'lg':this.props.Login.loadSpec?'lg':this.props.Login.loadTest?'lg':this.props.Login.loadSubSample?'lg':'xl'// size={this.props.templateData[0] ?\n//     this.props.templateData[0].children ?\n//         this.props.templateData[0].children.length >= 2 ? 'xl' : 'lg' : 'lg' : 'lg'}\n,backdrop:\"static\"//className={this.props.className || \"registrationModel\"}\n,className:this.props.className||\"\",show:this.props.Login.openPortal,onHide:this.props.closeModal,enforceFocus:false,dialogClassName:\"modal-dialog-slideout freakerstop\",\"aria-labelledby\":\"add-user\"},/*#__PURE__*/React.createElement(Modal.Header,{className:\"d-flex align-items-center\"},/*#__PURE__*/React.createElement(Modal.Title,{id:\"add-user\",className:\"header-primary flex-grow-1\"},this.props.graphView===true?\"\":this.props.Login.inputParam?this.props.Login.esign===true?/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ESIGN\",defaultMessage:\"Esign\"}):this.props.loginoperation?/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.screenName}):/*#__PURE__*/React.createElement(React.Fragment,null,this.props.operation?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.operation&&\"IDS_\".concat(this.props.Login.operation.toUpperCase()),defaultMessage:\"Add\"}),\" \",this.props.Login.screenName?/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.screenName}):\"\"):this.props.Login.screenName?/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.screenName}):\"\"):\"\"),/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-cancel\",variant:\"\",onClick:this.props.Login.loadCustomSearchFilter?this.closeKendoFilter:this.props.Login.loadSpec?this.closeSpec:this.props.Login.loadTest?this.closeTest:this.props.Login.loadComponent?this.closeComponent:this.props.Login.loadSubSample?this.closeSubSample:this.props.closeModal},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CANCEL\",defaultMessage:\"Cancel\"})),this.props.esign===true?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(3);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SUBMIT\",defaultMessage:\"Submit\"})):(this.props.operation===\"create\"||this.props.operation===\"update\")&&this.props.showValidate?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(4);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_VALIDATE\",defaultMessage:\"Validate\"})):this.props.showCalculate?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(saveType);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CALCULATE\",defaultMessage:\"Calculate\"})):this.props.showParam===true&&this.props.showExecute?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(4);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCalculator}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_EXECUTE\",defaultMessage:\"Execute\"})):this.props.noSave||this.props.graphView?this.props.operation===\"view\"?\"\":/*#__PURE__*/React.createElement(Button,{className:\"btn btn-user btn-primary-blue\",role:\"button\",onClick:this.props.resetView},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RESET\",defaultMessage:\"Reset\"})):this.props.Login.loadCustomSearchFilter?\"\":/*#__PURE__*/React.createElement(Button,{className:\" btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(saveType);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:idsLabel,defaultMessage:buttonLabel})),this.props.Login.operation===\"create\"&&this.props.Login.showSaveContinue?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(2);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SAVECONTINUE\",defaultMessage:\"Save & Continue\"})):\"\",(this.props.operation===\"create\"||this.props.operation===\"update\")&&this.props.esign!==true&&this.props.showExecute===true&&this.props.showSave?/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this3.handleSaveClick(1);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SAVE\",defaultMessage:\"Save\"})):\"\"),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(ModalInner,{ref:this.myRef},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Form,{ref:this.formRef},this.props.Login.loadCustomSearchFilter?this.props.Login.seletedFilterComponent.inputtype==='frontendsearchfilter'?/*#__PURE__*/React.createElement(KendoDatatoolFilter,{filter:this.props.Login.kendoFilter,handleFilterChange:this.handleFilterChange,filterData:this.props.Login.lstPatient||[],skip:this.props.Login.kendoSkip,take:this.props.Login.kendoTake,handlePageChange:this.handlePageChange,fields:this.props.Login.fields||[],gridColumns:this.props.Login.gridColumns||[],onRowClick:this.handleKendoRowClick}):/*#__PURE__*/React.createElement(FilterQueryBuilder,{fields:this.props.Login.fields||{},onChange:this.onChangeAwesomeQueryBuilder,tree:this.props.Login.awesomeTree,config:this.props.Login.awesomeConfig,skip:this.props.Login.kendoSkip,take:this.props.Login.kendoTake,handlePageChange:this.handlePageChange,gridColumns:this.props.Login.gridColumns||[],filterData:this.props.Login.lstPatient,onRowClick:this.handleKendoRowClick,handleExecuteClick:this.handleExecuteClick}):this.props.Login.loadSpec?/*#__PURE__*/React.createElement(AddSpecification,{AgaramTree:this.props.Login.AgaramTree,openNodes:this.props.Login.OpenNodes,handleTreeClick:this.onTreeClick,focusKey:this.props.Login.FocusKey,activeKey:this.props.Login.ActiveKey,Specification:this.props.Login.Specification,selectedSpec:this.state.selectedSpec,selectedRecord:this.state.selectedRecord,onSpecChange:this.onspecChange}):this.props.Login.loadTest?/*#__PURE__*/React.createElement(AddTest,{TestCombined:this.props.Login.TestCombined||[],TestChange:this.TestChange,selectedTestData:this.props.Login.selectedTestData}):this.props.Login.loadComponent?/*#__PURE__*/React.createElement(AddComponentPopUp,{ref:this.myScrollRef,selectComponent:this.state.selectComponent||{},RealSampleTypeValue:this.props.Login.masterData.RealSampleTypeValue||{},RealRegTypeValue:this.props.Login.masterData.RealRegTypeValue||{},RealRegSubTypeValue:this.props.Login.masterData.RealRegSubTypeValue||{},RealFilterStatusValue:this.props.Login.masterData.RealFilterStatusValue||{},formatMessage:this.props.intl.formatMessage,handleDateChange:this.handleDateChangeComp,Component:this.props.Login.lstComponent||[],onInputComponentOnChange:this.onInputComponentOnChange// onComboChange={this.onComponentComboChange}\n,timeZoneList:this.props.Login.timeZoneList,onComponentChange:this.onComponentChange,userInfo:this.props.Login.userInfo,sreceiveddate:this.props.Login.sreceiveddate||[],CurrentTime:this.props.Login.CurrentTime}):this.props.Login.loadSubSample?/*#__PURE__*/React.createElement(AddSubSample,{Component:this.props.Login.lstComponent||[],selectComponent:this.state.selectComponent,selectedRecord:this.state.selectedRecord// Unit={this.props.Login.Unit || []}\n,onComponentChange:this.onComponentChange,onInputComponentOnChange:this.onInputComponentOnChange,templateData:this.props.Login.masterData.SubSampleTemplate&&this.props.Login.masterData.SubSampleTemplate.jsondata,userInfo:this.props.Login.userInfo,timeZoneList:this.props.Login.timeZoneList,defaultTimeZone:this.props.Login.defaultTimeZone,handleDateChange:this.handleDateSubSampleChange,onInputOnChange:this.onInputOnSubSampleChange,onNumericInputChange:this.onNumericInputSubSampleChange,comboData:this.props.Login.SubSamplecomboData,onComboChange:this.onComboSubSampleChange,TestCombined:this.props.Login.TestCombined||[],TestChange:this.TestChange,selectedTestData:this.state.selectedTestData,childoperation:this.props.Login.childoperation,specBasedComponent:this.state.specBasedComponent}):/*#__PURE__*/React.createElement(RegisterSlideOut,{editfield:this.sampleeditable&&this.sampleeditable['sampleeditable'],ntransactionstatus:this.props.Login.masterData&&this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample.length>0&&this.props.Login.masterData.selectedSample[0].ntransactionstatus,loadPreregister:this.props.Login.loadPreregister,selectedSpec:this.state.selectedSpec,selectedRecord:this.state.selectedRecord,selectedComponent:this.props.Login.selectedComponent,subSampleDataGridList:this.props.Login.subSampleDataGridList||[],SelectedTest:this.props.Login.SelectedTest,selectedTestData:this.state.selectedTestData,userRoleControlRights:this.props.userRoleControlRights,templateData:this.props.Login.masterData.registrationTemplate?this.props.Login.masterData.registrationTemplate.jsondata:this.props.Login.masterData.schedulerTemplate?this.props.Login.masterData.schedulerTemplate.jsondata:{},handleChange:this.props.handleChange,handleDateChange:this.handleDateChange,onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange,comboData:this.props.Login.comboData,onComboChange:this.onComboChange,userInfo:this.props.Login.userInfo,timeZoneList:this.props.Login.timeZoneList,defaultTimeZone:this.props.Login.defaultTimeZone,AddSpec:this.AddSpec,addTest:this.addTestslide,handleComponentRowClick:this.handleComponentRowClick,nneedsubsample:this.props.Login.masterData&&this.props.Login.masterData.RealRegSubTypeValue?this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample:false,specBasedComponent:this.state.specBasedComponent,AddComponent:this.AddComponent,deleteComponent:this.deleteComponent,deleteTest:this.deleteTest,editComponent:this.editComponent,componentColumnList:this.componentColumnList,Component:this.props.Login.Component,TestChange:this.TestChange,testDataState:this.state.testDataState,subSampleDataState:this.state.subSampleDataState//componentDataState={this.state.componentDataState}\n,testDataStateChange:this.testDataStateChange//componentDataStateChange={this.componentDataStateChange}\n,subSampleDataStateChange:this.subSampleDataStateChange,addsubSample:this.addsubSample,editSubSample:this.editSubSample// onNumericInputChange={this.onNumericInputChange}\n,subSampleDataGridFields:this.subSampleDataGridList,selectedSample:this.props.Login.masterData.selectedSample&&this.props.Login.masterData.selectedSample[0]||{},operation:this.props.Login.operation,custombuttonclick:this.custombuttonclick})))))));}}]);return PreRegisterSlideOutModal;}(React.Component);export default connect(mapStateToProps,{getChildValues:getChildValues,getPreviewTemplate:getPreviewTemplate,getNewRegSpecification:getNewRegSpecification,AddComponents:AddComponents,updateStore:updateStore,EditComponent:EditComponent,getTest:getTest,addsubSample:addsubSample,editSubSample:editSubSample,insertRegistration:insertRegistration,updateRegistration:updateRegistration,addSubSampleSaveContinue:addSubSampleSaveContinue,componentTest:componentTest,getDynamicFilter:getDynamicFilter,getDynamicFilterExecuteData:getDynamicFilterExecuteData,insertRegistrationScheduler:insertRegistrationScheduler})(injectIntl(PreRegisterSlideOutModal));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/registration/PreRegisterSlideOutModal.jsx"],"names":["React","FormattedMessage","injectIntl","Button","Card","Form","Modal","FontAwesomeIcon","faSave","toast","DEFAULT_RETURN","ModalInner","transactionStatus","faCalculator","comboChild","convertDateTimetoString","formatInputDate","formatInputDateWithoutT","getSameRecordFromTwoArrays","rearrangeDateFormat","rearrangeDateFormatforUI","showEsign","validateEmail","RegisterSlideOut","AddSpecification","AddTest","connect","getPreviewTemplate","getChildValues","getNewRegSpecification","AddComponents","updateStore","EditComponent","getTest","addsubSample","editSubSample","insertRegistration","updateRegistration","addSubSampleSaveContinue","componentTest","getDynamicFilter","getDynamicFilterExecuteData","insertRegistrationScheduler","AddComponentPopUp","AddSubSample","getRegistration","getRegistrationScheduler","getRegistrationSubSample","SubSample","TestListManipulation","KendoDatatoolFilter","FilterQueryBuilder","Utils","QbUtils","mapStateToProps","state","Login","PreRegisterSlideOutModal","props","formRef","createRef","failedControls","testDataState","skip","take","settings","parseInt","subSampleDataState","selectedRecord","selectedSpec","selectComponent","selectedTest","selectedTestData","SubSamplecomboComponents","SubSamplewithoutCombocomponent","parentSubSampleColumnList","specBasedComponent","custombuttonclick","event","component","preventDefault","stopPropagation","inputparam","userinfo","userInfo","onChangeAwesomeQueryBuilder","immutableTree","config","sqlFormat","updateInfo","typeName","data","awesomeTree","awesomeConfig","handlePageChange","kendoSkip","kendoTake","handleFilterChange","kendoFilter","filter","handleExecuteClick","undefined","seletedFilterComponent","filterquery","warn","intl","formatMessage","id","handleKendoRowClick","selecteddata","dataItem","hasOwnProperty","loadSubSample","child","map","y","withoutCombocomponent","readonlyfields","findIndex","k","label","languagetypeCode","loadCustomSearchFilter","screenName","masterData","RealRegSubTypeValue","sregsubtypename","handleSaveClick","saveType","startLabel","mandatoryFields","loadComponent","SubSampleTemplate","jsondata","row","children","column","componentrow","mandatory","recordbasedshowhide","parentLabel","recordbasedhide","inputtype","push","loadTest","loadSpec","registrationTemplate","esign","forEach","item","dataField","alertMessage","alertPreFix","idsName","alertSuffix","mandatoryLabel","validateFunction","validateData","length","trim","onExecuteClick","agree","NO","info","validateEsign","ncomponentrequired","subSampleDataGridList","width","selectedComponent","SelectedTest","Test","Component","onSaveComponentClick","onSaveTestClick","onSaveSubSampleClick","onSaveClick","TestChange","comboData","fieldName","onComboChange","control","customName","parentList","childComboList","childColumnList","comboName","product","productCategory","nproductcatcode","nproductcode","materialType","instrument","instrumentCategory","material","materialCategory","nsampletypecode","RealSampleTypeValue","inputParem","source","primarykeyField","valuemember","value","nameofdefaultcomp","name","ProductCategory","comboComponents","x","ncategorybasedflow","InstrumentCategory","MaterialCategory","Product","Instrument","Material","columnList","val","mapOfFilter","temp","components","temp1","onInputOnChange","radiotext","target","type","includes","index","indexOf","indexcomma","slice","setState","onInputOnSubSampleChange","onComboSubSampleChange","SubSamplecomboData","onNumericInputChange","onNumericInputSubSampleChange","handleDateChangeComp","dateValue","dateName","handleDateChange","handleDateSubSampleChange","openFilter","showFilter","closeFilter","AddSpec","e","addTestslide","nneedsubsample","Object","keys","selectedComponent1","nallottedspeccode","slno","closeSpec","closeKendoFilter","logic","filters","closeComponent","closeTest","closeSubSample","selectedSubSample","showSaveContinue","onspecChange","sversion","onTreeClick","inputParam","methodUrl","operation","activeKey","key","focusKey","keyName","selectedNode","primaryKey","handleComponentRowClick","AddComponent","Map","ntemplatemanipulationcode","RealRegTypeValue","nregtypecode","onComponentChange","nspecsampletypecode","onInputComponentOnChange","checked","childoperation","ComponentObjectAfterSave","ComponentObject","testrequired","ntransactionstatus","objcomponent","dreceiveddate","splice","getTestByComponentChange","nneedservice","openChildModal","parentPopUpSize","SubSampleObjectAfterSave","SubSampleObject","subSampleDetail","defaulttimezone","sampleRegistration","index1","Components","lstComponent","editComponent","editselectedcomponent","inputData","objComponent","nregsubtypecode","timezone","deleteComponent","deleteTest","ntestgrouptestcode","selectedTestArray","ArrayTest","samplename","componentDataStateChange","componentDataState","dataState","testDataStateChange","subSampleDataStateChange","Layout","onUpdateRegistration","myRef","PrevoiusLoginData","componentColumnList","sampleeditable","JSON","parse","DynamicDesign","previousProps","masterStatus","check","innerPopup","innerTop","setTimeout","scrollDoc","modalEvent","document","getElementById","current","scrollIntoView","behavior","getTestfromDB","saveComponent","unshift","objcomponent1","flag","initialParam","nfilterstatus","FilterStatusValue","fromdate","todate","nflag","ntype","npreregno","String","ndesigntemplatemappingcode","RealDesignTemplateMappingValue","nneedtemplatebasedflow","RegSubTypeValue","checkBoxOperation","activeSampleTab","activeTestTab","activeSubSampleTab","param","dateList","sampledateconstraints","classUrl","displayName","action","showConfirmAlert","resultDataState","testCommentDataState","userRoleControlRights","nformcode","ncontrolCode","loadEsign","screenData","subsampletemplate","findSubsampleDateList","schedulerSubSampleTemplate","schedulerTemplate","defaultTimeZone","SelectedScheduler","postParamList","PREREGISTER","ignoreFormValidation","buttonLabel","idsLabel","concat","toUpperCase","className","openPortal","closeModal","graphView","loginoperation","showValidate","showCalculate","showParam","showExecute","noSave","resetView","showSave","lstPatient","fields","gridColumns","AgaramTree","OpenNodes","FocusKey","ActiveKey","Specification","TestCombined","myScrollRef","RealFilterStatusValue","timeZoneList","sreceiveddate","CurrentTime","selectedSample","loadPreregister","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Button, Card, Form, Modal } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ModalInner } from '../../components/App.styles';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    comboChild, convertDateTimetoString,\r\n    formatInputDate,\r\n    formatInputDateWithoutT,\r\n    getSameRecordFromTwoArrays, rearrangeDateFormat, rearrangeDateFormatforUI, showEsign, validateEmail\r\n} from '../../components/CommonScript';\r\nimport RegisterSlideOut from './RegisterSlideOut';\r\nimport AddSpecification from './AddSpecification';\r\nimport AddTest from './AddTest';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getPreviewTemplate, getChildValues,\r\n    getNewRegSpecification, AddComponents, updateStore,\r\n    EditComponent, getTest, addsubSample, editSubSample,\r\n    insertRegistration, updateRegistration, addSubSampleSaveContinue,\r\n    componentTest, getDynamicFilter, getDynamicFilterExecuteData,insertRegistrationScheduler\r\n} from '../../actions'\r\nimport AddComponentPopUp from './AddComponentPopUp';\r\nimport AddSubSample from './AddSubSample';\r\nimport {\r\n    getRegistration, getRegistrationScheduler, getRegistrationSubSample, SubSample, TestListManipulation\r\n} from './RegistrationValidation';\r\nimport KendoDatatoolFilter from '../contactmaster/KendoDatatoolFilter.jsx'\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport {\r\n    Utils as QbUtils,\r\n} from \"react-awesome-query-builder\";\r\n//import SplitterLayout from 'react-splitter-layout';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\nclass PreRegisterSlideOutModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.myRef = React.createRef()\r\n        this.PrevoiusLoginData = this.props.PrevoiusLoginData;\r\n        this.subSampleDataGridList = [];\r\n        this.componentColumnList = [\r\n            { \"idsName\": \"IDS_SPECIMEN\", \"dataField\": \"scomponentname\", width: \"200px\" },\r\n            { \"idsName\": \"IDS_DATERECEIVED\", \"dataField\": \"sreceiveddate\", width: \"250px\" },\r\n            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", width: \"200px\" },\r\n        ];\r\n        this.sampleeditable = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n\r\n    }\r\n    formRef = React.createRef();\r\n    state = {\r\n        failedControls: [],\r\n        testDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n        subSampleDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n        selectedRecord: {},\r\n        selectedSpec: {},\r\n        selectComponent: {},\r\n        selectedTest: {},\r\n        selectedTestData: {},\r\n        SubSamplecomboComponents: [],\r\n        SubSamplewithoutCombocomponent: [],\r\n        // selectedTestData: [],\r\n        parentSubSampleColumnList: [],\r\n        specBasedComponent: false\r\n    }\r\n\r\n    custombuttonclick = (event, component) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const inputparam = {\r\n            component, userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.getDynamicFilter(inputparam)\r\n    }\r\n\r\n    onChangeAwesomeQueryBuilder = (immutableTree, config) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo)\r\n        \r\n       // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\r\n\r\n    };\r\n\r\n    handlePageChange = (event) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                kendoSkip: event.skip, kendoTake: event.take\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n        //this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n    };\r\n    handleFilterChange = (event) => {\r\n        // event.preventDefault();\r\n        //event.stopPropagation();\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                kendoFilter: event.filter\r\n                // screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n       // this.setState({ kendoFilter: event.filter });\r\n    };\r\n\r\n    handleExecuteClick = (event) => {\r\n        const selectedRecord = this.state.selectedRecord\r\n        if(selectedRecord['filterquery']!==\"\"&&selectedRecord['filterquery']!==undefined){\r\n        const inputparam = {\r\n            component: this.props.Login.seletedFilterComponent,\r\n            userinfo: this.props.Login.userInfo,\r\n            filterquery: selectedRecord['filterquery']\r\n\r\n        }\r\n        this.props.getDynamicFilterExecuteData(inputparam)\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTFILTER\" }));\r\n    }\r\n    }\r\n\r\n    handleKendoRowClick = (event) => {\r\n        let selecteddata = event.dataItem;\r\n        const component = this.props.Login.seletedFilterComponent\r\n        if (component.hasOwnProperty(\"child\")) {\r\n            if (this.props.Login.loadSubSample) {\r\n                const selectComponent = this.state.selectComponent;\r\n                component.child.map(y => {\r\n                    const withoutCombocomponent = this.state.SubSamplewithoutCombocomponent;\r\n                    const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\r\n                    if (readonlyfields !== -1) {\r\n\r\n                        if (withoutCombocomponent[readonlyfields][\"isMultiLingual\"]) {\r\n                            selectComponent[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ?\r\n                                selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]][this.props.Login.userInfo.languagetypeCode] : \"\"\r\n                        } else {\r\n                            selectComponent[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : \"\"\r\n                        }\r\n                    }\r\n                })\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        selectComponent,\r\n                        loadCustomSearchFilter: false,\r\n                        screenName: \"SubSample\",\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo)\r\n            } else {\r\n                const selectedRecord = this.state.selectedRecord;\r\n                component.child.map(y => {\r\n                    // component.filterfields.filter(x=>x.)\r\n                    const withoutCombocomponent = this.props.withoutCombocomponent;\r\n                    const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\r\n                    if (readonlyfields !== -1) {\r\n\r\n                        if (withoutCombocomponent[readonlyfields][\"isMultiLingual\"]) {\r\n                            selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ?\r\n                                selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]][this.props.Login.userInfo.languagetypeCode] : \"\"\r\n                        } else {\r\n                            selectedRecord[y.label] = selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] ? selecteddata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : \"\"\r\n                        }\r\n                    }\r\n\r\n                })\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        selectedRecord,\r\n                        loadCustomSearchFilter: false,\r\n                        screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo)\r\n            }\r\n        }\r\n    };\r\n    handleSaveClick = (saveType) => {\r\n        const failedControls = [];\r\n        const startLabel = [];\r\n        let label = \"IDS_ENTER\";\r\n        let mandatoryFields = [];\r\n        let selectedRecord = this.state.selectedRecord\r\n\r\n\r\n        if (this.props.Login.loadComponent) {\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_COMPONENT\", \"dataField\": \"ncomponentcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n                { \"idsName\": \"IDS_RECEIVEDDATE\", \"dataField\": \"dreceiveddate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n                { \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntzdreceivedate\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n            ]\r\n            selectedRecord = this.state.selectComponent\r\n        }\r\n        else if (this.props.Login.loadSubSample) {\r\n\r\n            if (this.state.specBasedComponent)\r\n                mandatoryFields = [{ \"idsName\": \"IDS_SPECIMEN\", \"dataField\": \"ncomponentcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" }]\r\n\r\n            this.props.Login.masterData.SubSampleTemplate &&\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ?\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.mandatory === true) {\r\n                                        if (componentrow.recordbasedshowhide) {\r\n                                            if (this.state.selectComponent[componentrow.parentLabel]\r\n                                                === componentrow.recordbasedhide) {\r\n                                                if (componentrow.inputtype === \"email\") {\r\n                                                    mandatoryFields.push({\r\n                                                        \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                        \"dataField\": componentrow.label,\r\n                                                        \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                        \"validateFunction\": validateEmail,\r\n                                                        \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                        \"controlType\": \"textbox\"\r\n                                                    })\r\n                                                } else {\r\n                                                    mandatoryFields.push({\r\n                                                        \"mandatory\": true,\r\n                                                        \"idsName\": componentrow.label,\r\n                                                        \"dataField\": componentrow.label,\r\n                                                        \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                                            \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                        \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                                            \"selectbox\" : \"textbox\"\r\n                                                    })\r\n                                                }\r\n                                            }\r\n\r\n                                        } else {\r\n                                            if (componentrow.inputtype === \"email\") {\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                    \"dataField\": componentrow.label,\r\n                                                    \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                    \"validateFunction\": validateEmail,\r\n                                                    \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                    \"controlType\": \"textbox\"\r\n                                                })\r\n                                            } else {\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true,\r\n                                                    \"idsName\": componentrow.label,\r\n                                                    \"dataField\": componentrow.label,\r\n                                                    \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                                        \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                    \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                                        \"selectbox\" : \"textbox\"\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                    } else {\r\n                                        if (componentrow.inputtype === \"email\") {\r\n\r\n                                            this.state.selectComponent[componentrow.label] &&\r\n                                            this.state.selectComponent[componentrow.label] !== \"\" &&\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                    \"dataField\": componentrow.label,\r\n                                                    \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                    \"validateFunction\": validateEmail,\r\n                                                    \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                    \"controlType\": \"textbox\"\r\n                                                })\r\n                                        }\r\n                                    }\r\n                                    return null;\r\n                                })\r\n                                : component.mandatory === true ?\r\n                                component.recordbasedshowhide ?\r\n                                this.state.selectComponent[component.parentLabel]\r\n                                            === component.recordbasedhide ?\r\n                                            component.inputtype === \"email\" ?\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true,\r\n                                                    \"idsName\": component.label, \"dataField\": component.label,\r\n                                                    \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                    \"validateFunction\": validateEmail,\r\n                                                    \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                    \"controlType\": \"textbox\"\r\n                                                })\r\n                                                :\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true,\r\n                                                    \"idsName\": component.label, \"dataField\": component.label,\r\n                                                    \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                                        \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                    \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\r\n                                                }) : \"\" :\r\n                                        component.inputtype === \"email\" ?\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": component.label, \"dataField\": component.label,\r\n                                                \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                \"validateFunction\": validateEmail,\r\n                                                \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                \"controlType\": \"textbox\"\r\n                                            })\r\n                                            :\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": component.label, \"dataField\": component.label,\r\n                                                \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                                    \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\r\n                                            })\r\n                                    : this.state.selectComponent[component.label] ?\r\n                                        component.inputtype === \"email\" ?\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": component.label, \"dataField\": component.label,\r\n                                                \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                \"validateFunction\": validateEmail,\r\n                                                \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                \"controlType\": \"textbox\"\r\n                                            }) : \"\" : \"\"\r\n                        })\r\n                    })\r\n                })\r\n\r\n            selectedRecord = this.state.selectComponent\r\n        }\r\n        else if (this.props.Login.loadTest) {\r\n            mandatoryFields = [{ \"idsName\": \"IDS_TEST\", \"dataField\": \"ntestgrouptestcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },]\r\n            selectedRecord = this.props.Login.selectedTestData\r\n        }\r\n        else if (this.props.Login.loadSpec) {\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_SPECIFICATION\", \"dataField\": \"nallottedspeccode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n            ]\r\n        } else {\r\n            this.props.Login.masterData.registrationTemplate &&\r\n                this.props.Login.masterData.registrationTemplate.jsondata.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            return component.hasOwnProperty(\"children\") ?\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.mandatory === true) {\r\n                                        if (componentrow.recordbasedshowhide) {\r\n                                            if (this.state.selectedRecord[componentrow.parentLabel]\r\n                                                === componentrow.recordbasedhide) {\r\n                                                if (componentrow.inputtype === \"email\") {\r\n                                                    mandatoryFields.push({\r\n                                                        \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                        \"dataField\": componentrow.label,\r\n                                                        \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                        \"validateFunction\": validateEmail,\r\n                                                        \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                        \"controlType\": \"textbox\"\r\n                                                    })\r\n                                                } else {\r\n                                                    mandatoryFields.push({\r\n                                                        \"mandatory\": true,\r\n                                                        \"idsName\": componentrow.label,\r\n                                                        \"dataField\": componentrow.label,\r\n                                                        \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                                            \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                        \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                                            \"selectbox\" : \"textbox\"\r\n                                                    })\r\n                                                }\r\n                                            }\r\n\r\n                                        } else {\r\n                                            if (componentrow.inputtype === \"email\") {\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                    \"dataField\": componentrow.label,\r\n                                                    \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                    \"validateFunction\": validateEmail,\r\n                                                    \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                    \"controlType\": \"textbox\"\r\n                                                })\r\n                                            } else {\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true,\r\n                                                    \"idsName\": componentrow.label,\r\n                                                    \"dataField\": componentrow.label,\r\n                                                    \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                                        \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                    \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                                        \"selectbox\" : \"textbox\"\r\n                                                })\r\n                                            }\r\n                                        }\r\n                                    } else {\r\n                                        if (componentrow.inputtype === \"email\") {\r\n\r\n                                            selectedRecord[componentrow.label] &&\r\n                                                selectedRecord[componentrow.label] !== \"\" &&\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                    \"dataField\": componentrow.label,\r\n                                                    \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                    \"validateFunction\": validateEmail,\r\n                                                    \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                    \"controlType\": \"textbox\"\r\n                                                })\r\n                                        }\r\n                                    }\r\n                                    return null;\r\n                                })\r\n                                : component.mandatory === true ?\r\n                                component.recordbasedshowhide ?\r\n                                        this.state.selectedRecord[component.parentLabel]\r\n                                            === component.recordbasedhide ?\r\n                                            component.inputtype === \"email\" ?\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true,\r\n                                                    \"idsName\": component.label, \"dataField\": component.label,\r\n                                                    \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                    \"validateFunction\": validateEmail,\r\n                                                    \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                    \"controlType\": \"textbox\"\r\n                                                })\r\n                                                :\r\n                                                mandatoryFields.push({\r\n                                                    \"mandatory\": true,\r\n                                                    \"idsName\": component.label, \"dataField\": component.label,\r\n                                                    \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                                        \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                    \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\r\n                                                }) : \"\" :\r\n                                        component.inputtype === \"email\" ?\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": component.label, \"dataField\": component.label,\r\n                                                \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                \"validateFunction\": validateEmail,\r\n                                                \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                \"controlType\": \"textbox\"\r\n                                            })\r\n                                            :\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": component.label, \"dataField\": component.label,\r\n                                                \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                                    \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\r\n                                            })\r\n                                    : selectedRecord[component.label] ?\r\n                                        component.inputtype === \"email\" ?\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": component.label, \"dataField\": component.label,\r\n                                                \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                \"validateFunction\": validateEmail,\r\n                                                \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                \"controlType\": \"textbox\"\r\n                                            }) : \"\" : \"\"\r\n                        })\r\n                    })\r\n                })\r\n        }\r\n        if (this.props.esign) {\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"esignpassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"esigncomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            ]\r\n        }\r\n        mandatoryFields.forEach(item => {\r\n            if (selectedRecord[item.dataField] === undefined || selectedRecord[item.dataField] === null) {\r\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                failedControls.push(alertMessage);\r\n                startLabel.push(item.mandatoryLabel)//\"IDS_PROVIDE\";\r\n            }\r\n            else {\r\n                if (item.validateFunction) {\r\n                    const validateData = item.validateFunction;\r\n                    if (validateData(selectedRecord[item.dataField]) === false) {\r\n                        const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                        failedControls.push(alertMessage);\r\n                        startLabel.push(item.mandatoryLabel)\r\n                    }\r\n                }\r\n                else {\r\n                    if (typeof selectedRecord[item.dataField] === \"object\") {\r\n                        //to validate FormSelectSearch component\r\n                        if (selectedRecord[item.dataField].length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)//\"IDS_SELECT\";\r\n                        }\r\n                    }\r\n                    else if (typeof selectedRecord[item.dataField] === \"string\") {\r\n                        //to handle string field -- added trim function\r\n                        if (selectedRecord[item.dataField].trim().length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                    else {\r\n                        //number field\r\n                        if (selectedRecord[item.dataField].length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // else{\r\n            //     const alertMessage=(item.alertPreFix?item.alertPreFix:'')+this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'')\r\n            //     failedControls.push(alertMessage);\r\n            // }\r\n        });\r\n        // console.log(\"validationPassed:\", failedControls);\r\n\r\n        if (failedControls.length === 0) {\r\n            if (saveType === 4) {\r\n                this.props.onExecuteClick(this.formRef);\r\n            }\r\n            else if (saveType === 3) {\r\n                if (selectedRecord.agree && selectedRecord.agree === transactionStatus.NO) {\r\n\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_CHECKAGREE\" }));\r\n\r\n                } else {\r\n\r\n                    this.props.validateEsign();\r\n                }\r\n            }\r\n            else {\r\n                if (this.props.Login.loadSpec) {\r\n                    let selectedSpec = this.state.selectedSpec\r\n                    selectedSpec[\"nallottedspeccode\"] = this.state.selectedRecord[\"nallottedspeccode\"]\r\n                    selectedSpec[\"sversion\"] = this.state.selectedRecord[\"sversion\"]\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = this.state.selectedRecord[\"ntemplatemanipulationcode\"]\r\n\r\n                    const specBasedComponent = selectedSpec[\"nallottedspeccode\"] &&\r\n                        selectedSpec[\"nallottedspeccode\"].item.ncomponentrequired === 3 ? true : false\r\n                    this.subSampleDataGridList = []\r\n                    if (specBasedComponent) {\r\n                        this.subSampleDataGridList = [\r\n                            { \"idsName\": \"IDS_SPECIMEN\", \"dataField\": \"scomponentname\", width: \"200px\" }\r\n                        ]\r\n                    }\r\n\r\n                    this.props.Login.masterData.SubSampleTemplate &&\r\n                        this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                            return row.children.map(column => {\r\n                                return column.children.map(component => {\r\n                                    // let label = ''\r\n                                    if (component.hasOwnProperty(\"children\")) {\r\n                                        component.children.map(componentrow => {\r\n                                            if (componentrow.mandatory === true) {\r\n                                                // label = label + '&' + componentrow.label\r\n                                                this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": componentrow.label, \"dataField\": componentrow.label, width: \"150px\" })\r\n                                            }\r\n                                            return this.subSampleDataGridList;\r\n                                        })\r\n                                    } else {\r\n                                        if (component.mandatory)\r\n                                            this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": component.label, \"dataField\": component.label, width: \"150px\" });\r\n\r\n                                        return this.subSampleDataGridList\r\n                                    }\r\n\r\n                                })\r\n\r\n                            })\r\n                        })\r\n\r\n                    //  this.setState({ selectedSpec: this.props.Login.selectedSpec,\r\n                    //      specBasedComponent });\r\n\r\n                    // this.setState({\r\n                    //     selectedTestData: [], loadSpec: false, SelectedTest: [], Test: [], Component: [], selectedSpec\r\n                    // })\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            selectedTestData: [],\r\n                            selectComponent: [],\r\n                            selectedComponent: {},\r\n                            loadSpec: false,\r\n                            SelectedTest: [],\r\n                            Test: [],\r\n                            Component: [],\r\n                            subSampleDataGridList: [],\r\n                            selectedSpec,\r\n                            screenName: this.props.Login.masterData.RealRegSubTypeValue&&\r\n                            this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename||\"Scheduler\",\r\n                            specBasedComponent\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n\r\n\r\n                }\r\n                else if (this.props.Login.loadComponent) {\r\n                    this.onSaveComponentClick(saveType, this.formRef)\r\n                }\r\n                else if (this.props.Login.loadTest) {\r\n                    this.onSaveTestClick(saveType, this.formRef)\r\n                }\r\n                else if (this.props.Login.loadSubSample) {\r\n                    this.onSaveSubSampleClick(saveType, this.formRef)\r\n                }\r\n                else {\r\n                    this.onSaveClick(saveType, this.formRef);\r\n                }\r\n\r\n            }\r\n        }\r\n        else {\r\n            label = startLabel[0] === undefined ? label : startLabel[0];\r\n            toast.info(`${this.props.intl.formatMessage({ id: label })} ${failedControls[0]}`);\r\n        }\r\n\r\n    }\r\n\r\n    TestChange = (comboData, fieldName) => {\r\n        const selectedTestData = this.state.selectedTestData || {};\r\n        selectedTestData[fieldName] = comboData;\r\n        //  this.setState({ selectedTestData });\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { selectedTestData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onComboChange = (comboData, control, customName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData) {\r\n            let parentList = []\r\n            let childComboList = []\r\n            let childColumnList = {}\r\n            let comboName = customName || control.label;\r\n\r\n            let product = false;\r\n            let productCategory = false;\r\n            let nproductcatcode = -1\r\n            let nproductcode = -1\r\n            let materialType = false;\r\n            let instrument = false;\r\n            let instrumentCategory = false;\r\n            let material = false;\r\n            let materialCategory = false;\r\n            const nsampletypecode = this.props.Login.masterData.RealSampleTypeValue?\r\n            parseInt(this.props.Login.masterData.RealSampleTypeValue.nsampletypecode):1\r\n            const inputParem = {\r\n                child: control.child,\r\n                source: control.source,\r\n                primarykeyField: control.valuemember,\r\n                value: comboData ? comboData.value : -1,\r\n                item: comboData ? comboData.item : \"\",\r\n                label: comboData ? comboName : \"\",\r\n                nameofdefaultcomp: control.name\r\n            }\r\n            if (comboData) {\r\n                selectedRecord[comboName] = comboData;\r\n            } else {\r\n                selectedRecord[comboName] = []\r\n            }\r\n            if (control.name === 'Product') {\r\n                const ProductCategory = this.props.comboComponents.filter(x => x.name === \"Product Category\");\r\n                const ncategorybasedflow = selectedRecord[ProductCategory[0].label] &&\r\n                    selectedRecord[ProductCategory[0].label]['item']['jsondata']['ncategorybasedflow'];\r\n                nproductcatcode = selectedRecord[ProductCategory[0].label] &&\r\n                    selectedRecord[ProductCategory[0].label].value\r\n                if (ncategorybasedflow !== 3) {\r\n                    product = true\r\n                    nproductcode = selectedRecord[comboName] &&\r\n                        selectedRecord[comboName].value;\r\n                }\r\n\r\n            }\r\n            else if (control.name === 'Instrument') {\r\n                const InstrumentCategory = this.props.comboComponents.filter(x => x.name === \"Instrument Category\");\r\n                const ncategorybasedflow = selectedRecord[InstrumentCategory[0].label] &&\r\n                    selectedRecord[InstrumentCategory[0].label]['item']['jsondata']['ncategorybasedflow'];\r\n                nproductcatcode = selectedRecord[InstrumentCategory[0].label] &&\r\n                    selectedRecord[InstrumentCategory[0].label].value\r\n                if (ncategorybasedflow !== 3) {\r\n                    instrument = true\r\n                    nproductcode = selectedRecord[comboName] &&\r\n                        selectedRecord[comboName].value;\r\n                }\r\n\r\n            }\r\n            else if (control.name === 'Material') {\r\n                const MaterialCategory = this.props.comboComponents.filter(x => x.name === \"Material Category\");\r\n                const ncategorybasedflow = selectedRecord[MaterialCategory[0].label] &&\r\n                    selectedRecord[MaterialCategory[0].label]['item']['jsondata']['ncategorybasedflow'];\r\n                nproductcatcode = selectedRecord[MaterialCategory[0].label] &&\r\n                    selectedRecord[MaterialCategory[0].label].value\r\n                if (ncategorybasedflow !== 3) {\r\n                    material = true\r\n                    nproductcode = selectedRecord[comboName] &&\r\n                        selectedRecord[comboName].value;\r\n                }\r\n\r\n            }\r\n            else if (control.name === 'Product Category') {\r\n                const Product = this.props.comboComponents.filter(x => x.name === \"Product\");\r\n                nproductcatcode = selectedRecord[control.label] &&\r\n                    selectedRecord[control.label]['value'];\r\n\r\n                const ncategorybasedflow = selectedRecord[control.label] &&\r\n                    selectedRecord[control.label]['item']['jsondata']['ncategorybasedflow'];\r\n                if (ncategorybasedflow === 3) {\r\n                    productCategory = true\r\n                } else {\r\n                    inputParem[\"ProductName\"] = Product[0].label\r\n                    // nproductcode = selectedRecord[comboName] &&\r\n                    // selectedRecord[comboName].value;\r\n                    product = true\r\n                }\r\n            }\r\n            else if (control.name === 'Instrument Category') {\r\n                const Instrument = this.props.comboComponents.filter(x => x.name === \"Instrument\");\r\n                nproductcatcode = selectedRecord[control.label] &&\r\n                    selectedRecord[control.label]['value'];\r\n                const ncategorybasedflow = selectedRecord[control.label] &&\r\n                    selectedRecord[control.label]['item']['jsondata']['ncategorybasedflow'];\r\n                if (ncategorybasedflow === 3) {\r\n                    instrumentCategory = true\r\n                } else {\r\n                    inputParem[\"InstrumentName\"] = Instrument[0].label\r\n                    // nproductcode = selectedRecord[comboName] &&\r\n                    // selectedRecord[comboName].value;\r\n                    instrument = true\r\n                }\r\n            }\r\n            else if (control.name === 'Material Category') {\r\n                const Material = this.props.comboComponents.filter(x => x.name === \"Material\");\r\n                nproductcatcode = selectedRecord[control.label] &&\r\n                    selectedRecord[control.label]['value'];\r\n                const ncategorybasedflow = selectedRecord[control.label] &&\r\n                    selectedRecord[control.label]['item']['jsondata']['ncategorybasedflow'];\r\n                if (ncategorybasedflow === 3) {\r\n                    materialCategory = true\r\n                } else {\r\n                    inputParem[\"MaterialName\"] = Material[0].label\r\n                    // nproductcode = selectedRecord[comboName] &&\r\n                    // selectedRecord[comboName].value;\r\n                    material = true\r\n                }\r\n            }\r\n            else if (control.name === 'Material Type') {\r\n                const MaterialCategory = this.props.comboComponents.filter(x => x.name === \"Material Category\");\r\n                //nproductcatcode = -1;\r\n                // const ncategorybasedflow = comboData &&\r\n                //     comboData['item']['jsondata']['ncategorybasedflow'];\r\n                // if (ncategorybasedflow === 3) {\r\n                //     productCategory = true\r\n                // } else {\r\n                inputParem[\"MaterialCategoryName\"] = MaterialCategory[0].label\r\n                // nproductcode = selectedRecord[comboName] &&\r\n                // selectedRecord[comboName].value;\r\n                materialType = true\r\n                //  }\r\n            }\r\n\r\n            if (control.child && control.child.length > 0) {\r\n                childComboList = getSameRecordFromTwoArrays(this.props.comboComponents, control.child, \"label\")\r\n                childColumnList = {};\r\n                childComboList.map(columnList => {\r\n                    const val = comboChild(this.props.comboComponents, columnList, childColumnList, false);\r\n                    childColumnList = val.childColumnList\r\n                    return null;\r\n                })\r\n\r\n                parentList = getSameRecordFromTwoArrays(this.props.withoutCombocomponent, control.child, \"label\")\r\n                const mapOfFilter = {\r\n                    nproductcode, nproductcatcode,\r\n                    nsampletypecode: nsampletypecode,\r\n                }\r\n                this.props.getChildValues(inputParem,\r\n                    this.props.Login.userInfo, selectedRecord, this.props.Login.comboData,\r\n                    childComboList, childColumnList, this.props.withoutCombocomponent,\r\n                    [...childComboList, ...parentList], productCategory, product, mapOfFilter,\r\n                    instrumentCategory, instrument, materialCategory, material, materialType)\r\n            } else {\r\n\r\n                // if (productCategory) {\r\n                //     const ncategorybasedflow = selectedRecord[comboName] &&\r\n                //         selectedRecord[comboName].value;\r\n\r\n                // } else if\r\n                if (product || productCategory || instrument ||\r\n                    material || materialCategory || instrumentCategory || materialType) {\r\n                    // const nproductcode = selectedRecord[comboName] &&\r\n                    //     selectedRecord[comboName].value;\r\n                    const mapOfFilter = {\r\n                        nproductcode, nproductcatcode,\r\n                        nsampletypecode: nsampletypecode,\r\n                    }\r\n\r\n                    this.props.getChildValues(inputParem,\r\n                        this.props.Login.userInfo, selectedRecord, this.props.Login.comboData,\r\n                        childComboList, childColumnList, this.props.withoutCombocomponent,\r\n                        [...childComboList, ...parentList], productCategory, product, mapOfFilter,\r\n                        instrumentCategory, instrument, materialCategory, material)\r\n                } else {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { selectedRecord }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n\r\n\r\n            }\r\n        } else {\r\n            const comboData = this.props.Login.comboData\r\n            selectedRecord[control.label] = \"\";\r\n            if (control.child && control.child.length > 0) {\r\n                control.child.map(temp => {\r\n                    selectedRecord[temp.label] = \"\"\r\n                    delete comboData[temp.label]\r\n                    const components = [...this.props.comboComponents, ...this.props.withoutCombocomponent]\r\n\r\n                    components.map(component => {\r\n                        if (component.label === temp.label) {\r\n                            if (component.child && component.child.length > 0) {\r\n                                component.child.map(temp1 => {\r\n                                    selectedRecord[temp1.label] = \"\"\r\n                                    delete comboData[temp1.label]\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord, comboData }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event, radiotext) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'timeonly') {\r\n                selectedRecord['dateonly'] = false;\r\n            }\r\n            if (event.target.name === 'dateonly') {\r\n                selectedRecord['timeonly'] = false;\r\n            }\r\n            const value = selectedRecord[event.target.name];\r\n            if (value !== '' && value !== undefined) {\r\n                if (value.includes(radiotext)) {\r\n                    const index = value.indexOf(radiotext);\r\n                    if (index !== -1) {\r\n                        if (index === 0) {\r\n                            const indexcomma = value.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(indexcomma + 1)\r\n\r\n                            } else {\r\n                                selectedRecord[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            if (value.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = value.slice(0, index - 1)\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = value + ',' + radiotext;\r\n                }\r\n\r\n            } else {\r\n                selectedRecord[event.target.name] = radiotext;\r\n            }\r\n        }\r\n        else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = radiotext;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnSubSampleChange = (event, radiotext) => {\r\n        const selectComponent = this.state.selectComponent || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'timeonly') {\r\n                selectComponent['dateonly'] = false;\r\n            }\r\n            if (event.target.name === 'dateonly') {\r\n                selectComponent['timeonly'] = false;\r\n            }\r\n            const value = selectComponent[event.target.name];\r\n            if (value !== '' && value !== undefined) {\r\n                if (value.includes(radiotext)) {\r\n                    const index = value.indexOf(radiotext);\r\n                    if (index !== -1) {\r\n                        if (index === 0) {\r\n                            const indexcomma = value.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectComponent[event.target.name] = value.slice(indexcomma + 1)\r\n\r\n                            } else {\r\n                                selectComponent[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            //  const  indexcomma= value.indexOf(\",\")\r\n                            if (value.slice(index).indexOf(\",\") !== -1) {\r\n                                selectComponent[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectComponent[event.target.name] = value.slice(0, index - 1)\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectComponent[event.target.name] = value + ',' + radiotext;\r\n                }\r\n\r\n            } else {\r\n                selectComponent[event.target.name] = radiotext;\r\n            }\r\n        }\r\n        else {\r\n            selectComponent[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectComponent });\r\n    }\r\n\r\n\r\n    onComboSubSampleChange = (comboData, control, customName) => {\r\n        const selectComponent = this.state.selectComponent || {};\r\n        if (comboData) {\r\n            let parentList = []\r\n            let childComboList = []\r\n            let childColumnList = {}\r\n\r\n            let comboName = customName || control.label;\r\n\r\n            const inputParem = {\r\n                child: control.child,\r\n                source: control.source,\r\n                primarykeyField: control.valuemember,\r\n                value: comboData ? comboData.value : -1,\r\n                item: comboData ? comboData.item : \"\",\r\n                label: comboData ? comboName : \"\",\r\n                nameofdefaultcomp: control.name\r\n            }\r\n            if (comboData) {\r\n                selectComponent[comboName] = comboData;\r\n            } else {\r\n                selectComponent[comboName] = []\r\n            }\r\n            if (control.child && control.child.length > 0) {\r\n                childComboList = getSameRecordFromTwoArrays(this.state.SubSamplecomboComponents,\r\n                    control.child, \"label\")\r\n                childColumnList = {};\r\n                childColumnList = childComboList.map(columnList => {\r\n                    const val = comboChild(this.state.SubSamplecomboComponents,\r\n                        columnList, childColumnList, false);\r\n                    return val.childColumnList\r\n                })\r\n\r\n                parentList = getSameRecordFromTwoArrays(this.state.SubSamplewithoutCombocomponent,\r\n                    control.child, \"label\")\r\n\r\n                this.props.getChildValues(inputParem,\r\n                    this.props.Login.userInfo, selectComponent, this.props.Login.SubSamplecomboData,\r\n                    childComboList, childColumnList, this.state.SubSamplewithoutCombocomponent,\r\n                    [...childComboList, ...parentList])\r\n            } else {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectComponent }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        } else {\r\n            const SubSamplecomboData = this.props.Login.SubSamplecomboData\r\n            selectComponent[control.label] = \"\";\r\n            if (control.child && control.child.length > 0) {\r\n                control.child.map(temp => {\r\n                    selectComponent[temp.label] = \"\"\r\n                    delete SubSamplecomboData[temp.label]\r\n                    const components = [...this.props.SubSamplecomboComponents, ...this.props.SubSamplewithoutCombocomponent]\r\n\r\n                    components.map(component => {\r\n                        if (component.label === temp.label) {\r\n                            if (component.child && component.child.length > 0) {\r\n                                component.child.map(temp1 => {\r\n                                    selectComponent[temp1.label] = \"\"\r\n                                    delete SubSamplecomboData[temp1.label]\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectComponent, SubSamplecomboData }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onNumericInputSubSampleChange = (value, name) => {\r\n        let selectComponent = this.state.selectComponent\r\n        selectComponent[name] = value;\r\n        this.setState({ selectComponent });\r\n    }\r\n\r\n    handleDateChangeComp = (dateValue, dateName, screenName) => {\r\n        const { selectedRecord } = this.state;\r\n        if (screenName === 'component') {\r\n            const selectComponent = this.state.selectComponent;\r\n            selectComponent[dateName] = dateValue;\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    selectComponent\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            selectedRecord[dateName] = dateValue;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    handleDateChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateSubSampleChange = (dateValue, dateName) => {\r\n        const { selectComponent } = this.state;\r\n        selectComponent[dateName] = dateValue;\r\n        this.setState({ selectComponent });\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let masterStatus = this.props.masterStatus;\r\n        // const {selectedRecord,selectedSpec,selectedTestData,selectComponent} =this.state\r\n        let check = false;\r\n        if (this.props.Login.selectedRecord !== this.PrevoiusLoginData.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n            check = true\r\n        }\r\n        if (this.props.Login.selectedSpec !== this.PrevoiusLoginData.Login.selectedSpec) {\r\n\r\n            const specBasedComponent = this.props.Login.selectedSpec[\"nallottedspeccode\"] &&\r\n                this.props.Login.selectedSpec[\"nallottedspeccode\"].item.ncomponentrequired === 3 ? true : false\r\n\r\n\r\n            this.subSampleDataGridList = []\r\n            if (specBasedComponent) {\r\n                this.subSampleDataGridList = [\r\n                    { \"idsName\": \"IDS_SPECIMEN\", \"dataField\": \"scomponentname\", width: \"200px\" }\r\n                ]\r\n            }\r\n\r\n            this.props.Login.masterData.SubSampleTemplate &&\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                    return row.children.map(column => {\r\n                        return column.children.map(component => {\r\n                            // let label = ''\r\n                            if (component.hasOwnProperty(\"children\")) {\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.mandatory === true) {\r\n                                        // label = label + '&' + componentrow.label\r\n                                        this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": componentrow.label, \"dataField\": componentrow.label, width: \"150px\" })\r\n                                    }\r\n                                    return this.subSampleDataGridList;\r\n                                })\r\n                            } else {\r\n                                if (component.mandatory)\r\n                                    this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": component.label, \"dataField\": component.label, width: \"150px\" });\r\n\r\n                                return this.subSampleDataGridList\r\n                            }\r\n                            // if (label !== '') {\r\n                            //     this.subSampleDataGridList.push({ \"mandatory\": true, \"idsName\": label.substring(1), \"dataField\": label.substring(1),width: \"150px\" })\r\n                            // }\r\n                        })\r\n\r\n                    })\r\n                })\r\n\r\n            this.setState({\r\n                selectedSpec: this.props.Login.selectedSpec,\r\n                specBasedComponent\r\n            });\r\n            check = true\r\n        }\r\n        if (this.props.Login.selectedTestData !== this.PrevoiusLoginData.Login.selectedTestData) {\r\n            this.setState({ selectedTestData: this.props.Login.selectedTestData });\r\n            check = true\r\n        }\r\n        if (this.props.Login.selectComponent !== this.PrevoiusLoginData.Login.selectComponent) {\r\n            this.setState({ selectComponent: this.props.Login.selectComponent });\r\n            check = true\r\n        }\r\n\r\n        if (this.props.Login.specBasedComponent !== this.PrevoiusLoginData.Login.specBasedComponent) {\r\n            this.setState({ specBasedComponent: this.props.Login.specBasedComponent });\r\n            check = true\r\n        }\r\n\r\n        if (this.props.Login.SubSamplewithoutCombocomponent !== this.PrevoiusLoginData.Login.SubSamplewithoutCombocomponent) {\r\n            this.setState({ SubSamplewithoutCombocomponent: this.props.Login.SubSamplewithoutCombocomponent });\r\n            check = true\r\n        }\r\n        if (this.props.Login.SubSamplecomboComponents !== this.PrevoiusLoginData.Login.SubSamplecomboComponents) {\r\n            this.setState({ SubSamplecomboComponents: this.props.Login.SubSamplecomboComponents });\r\n            check = true\r\n        }\r\n        if (this.props.Login.parentSubSampleColumnList !== this.PrevoiusLoginData.Login.parentSubSampleColumnList) {\r\n            this.setState({ parentSubSampleColumnList: this.props.Login.parentSubSampleColumnList });\r\n            check = true\r\n        }\r\n\r\n\r\n\r\n        if (check) {\r\n            this.PrevoiusLoginData = previousProps\r\n        }\r\n        if (masterStatus !== \"\" && masterStatus !== undefined) {\r\n            toast.warn(masterStatus);\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { masterStatus: \"\" }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n            masterStatus = \"\";\r\n        }\r\n        if (this.props.innerPopup !== this.state.innerTop) {\r\n            setTimeout(() => {\r\n                let scrollDoc = this.props.modalEvent && this.props.modalEvent.id ? document.getElementById(this.props.modalEvent.id) : null;\r\n                if (this.myRef && this.myRef.current) {\r\n                    this.myRef.current.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n                if (scrollDoc) {\r\n                    scrollDoc.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n            }, 100)\r\n            this.setState({\r\n                innerTop: this.props.innerPopup\r\n            })\r\n        }\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.state.showFilter\r\n        this.setState({\r\n            showFilter\r\n        })\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        this.setState({\r\n            showFilter: false\r\n        })\r\n    }\r\n    AddSpec = (e) => {\r\n        // this.setState({\r\n        //     loadSpec: true\r\n        // })\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadSpec: true,\r\n                screenName: \"Specification\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    // addTestslide = (e) => {\r\n    //     this.setState({\r\n    //         loadTest: true\r\n    //     })\r\n    // }\r\n\r\n    addTestslide = (selectedComponent, nneedsubsample, specBasedComponent) => {\r\n        if (nneedsubsample) {\r\n            if (selectedComponent && Object.keys(selectedComponent).length > 0) {\r\n                delete selectedComponent[\"selected\"];\r\n                this.props.getTest(selectedComponent, this.props.Login,\r\n                    nneedsubsample, specBasedComponent);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: nneedsubsample ? \"IDS_SELECTSUBSAMPLETOADDTEST\" : \"IDS_SELECTCOMPONENTTOADDTEST\" }));\r\n            }\r\n        } else {\r\n            const selectedComponent1 = {\r\n                nallottedspeccode: this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"].value : -1,\r\n                slno: 1\r\n            }\r\n            this.props.getTest(selectedComponent1,\r\n                this.props.Login,\r\n                nneedsubsample, specBasedComponent);\r\n        }\r\n    }\r\n\r\n    closeSpec = (e) => {\r\n        // this.setState({\r\n        //     loadSpec: false,\r\n        //      selectedRecord: { ...this.state.selectedRecord, ...this.state.selectedSpec },\r\n        //      screenName:\"Specification\"\r\n        // })\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadSpec: false,\r\n                selectedRecord: { ...this.state.selectedRecord, ...this.state.selectedSpec },\r\n                screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeKendoFilter = (e) => {\r\n        // this.setState({\r\n        //     loadSpec: false,\r\n        //      selectedRecord: { ...this.state.selectedRecord, ...this.state.selectedSpec },\r\n        //      screenName:\"Specification\"\r\n        // })\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadCustomSearchFilter: false,\r\n                screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,\r\n                kendoFilter: { logic: \"and\", filters: []},\r\n                 kendoSkip: 0,\r\n                 kendoTake: 5 ,\r\n                 awesomeConfig:undefined,\r\n                 awesomeTree:undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n       // this.setState({ kendoFilter: { logic: \"and\", filters: [], kendoSkip: 0, kendoTake: 5 } })\r\n    }\r\n\r\n\r\n    closeComponent = (e) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadComponent: false,\r\n                selectComponent: {}\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeTest = (e) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadTest: false,\r\n                selectedTestData: {},\r\n                screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeSubSample = (e) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadSubSample: false,\r\n                selectedSubSample: {},\r\n                showSaveContinue: false,\r\n                selectComponent: {},\r\n                selectedTestData: {},\r\n                screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onspecChange = (event, fieldName) => {\r\n        if (event !== null) {\r\n            const selectedRecord = this.state.selectedRecord;\r\n            // const oldpromarycode = this.state.selectedRecord[\"nallottedspeccode\"] !== undefined ?\r\n            //     this.state.selectedRecord[\"nallottedspeccode\"].value : undefined;\r\n            selectedRecord[\"sversion\"] = parseInt(event.item.sversion);\r\n            selectedRecord[\"nallottedspeccode\"] = event;\r\n            //  if(this.props.Login.Component.length=== 0 ){\r\n            this.setState({ selectedRecord });\r\n            // }else{\r\n            //     if(event.value!== oldpromarycode ){\r\n            //     this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\r\n            //     \"ok\", \"cancel\", () => this.setState({ selectedRecord }));\r\n            //     }\r\n            // }\r\n\r\n        }\r\n    }\r\n\r\n    onTreeClick = (event) => {\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupSpecification\",\r\n            screenName: \"IDS_REGISTRATION\",\r\n            operation: \"get\",\r\n            activeKey: event.key,\r\n            focusKey: event.key,\r\n            keyName: \"treetemplatemanipulation\",\r\n            userinfo: this.props.Login.userInfo,\r\n            selectedNode: event.item,\r\n            selectedRecord: this.state.selectedRecord,\r\n\r\n            primaryKey: event.primaryKey\r\n        };\r\n        if (event.primaryKey !== this.state.selectedRecord[\"ntemplatemanipulationcode\"]) {\r\n            this.props.getNewRegSpecification(inputParam, this.props.Login.masterData);\r\n        }\r\n\r\n\r\n        // if (this.props.Login.Component === undefined || this.props.Login.Component.length === 0) {\r\n        //     //   this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents);\r\n        // } else {\r\n        //     // if(event.key!== this.props.Login.ActiveKey ){\r\n        //     // this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\r\n        //     // \"ok\", \"cancel\", () =>  this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents));\r\n        //     // }\r\n        // }\r\n    }\r\n\r\n\r\n    handleComponentRowClick = (event) => {\r\n        let selectedComponent = event.dataItem;\r\n        let SelectedTest = this.props.Login.Test && this.props.Login.Test[selectedComponent.slno] ? this.props.Login.Test[selectedComponent.slno] : [];\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                SelectedTest, selectedComponent,\r\n                testDataState: {\r\n                    skip: 0, take: this.props.Login.settings ?\r\n                        parseInt(this.props.Login.settings[14]) : 5\r\n                }\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    };\r\n\r\n\r\n    AddComponent = () => {\r\n        let Map = {};\r\n        if (this.state.selectedSpec.nallottedspeccode !== undefined\r\n            && this.state.selectedSpec.nallottedspeccode !== \"\") {\r\n            Map[\"ntemplatemanipulationcode\"] = this.state.selectedSpec.ntemplatemanipulationcode;\r\n            Map[\"nallottedspeccode\"] = this.state.selectedSpec.nallottedspeccode.value;\r\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            Map[\"testrequired\"] = false;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            this.props.AddComponents(Map);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n\r\n    }\r\n\r\n    onComponentChange = (comboData, fieldName, nneedsubsample) => {\r\n        if (comboData !== null) {\r\n            //  if (!nneedsubsample) {\r\n            const selectComponent = this.state.selectComponent || {};\r\n            if (fieldName === 'ntzdreceivedate') {\r\n                selectComponent[\"ntzdreceivedate\"] = comboData;\r\n                this.setState({ selectComponent })\r\n            } else {\r\n                // const oldspecsampletypecode = selectComponent.nspecsampletypecode\r\n                // if (oldspecsampletypecode !== comboData.item.nspecsampletypecode) {\r\n                //     //selectComponent[\"nneedservice\"] = true;\r\n                // }\r\n                selectComponent[fieldName] = comboData;\r\n                selectComponent[\"Sample Name\"] = comboData.label;\r\n                selectComponent[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode;\r\n                this.props.componentTest(selectComponent, false, this.state.specBasedComponent,\r\n                    this.props.Login.Component);\r\n            }\r\n\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //         selectComponent\r\n            //     }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n            // } else {\r\n            //     const selectComponent = this.state.selectComponent || {};\r\n            //     selectComponent[fieldName] = comboData;\r\n            //     // selectComponent[\"nspecsampletypecode\"] = comboData.item.nspecsampletypecode ?  comboData.item.nspecsampletypecode : -1;\r\n            //     this.setState({ selectComponent })\r\n            // }\r\n        }\r\n\r\n    }\r\n    onInputComponentOnChange = (event) => {\r\n        const selectComponent = this.state.selectComponent || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectComponent[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            selectComponent[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectComponent })\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         selectComponent\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onSaveComponentClick = (saveType, formRef) => {\r\n        const childoperation = this.props.Login.childoperation;\r\n        if (childoperation === \"create\") {\r\n            if (saveType === 1) {\r\n                this.ComponentObjectAfterSave();\r\n            } else if (saveType === 2) {\r\n                this.ComponentObject();\r\n            }\r\n        } else {\r\n            const Component = this.props.Login.Component;\r\n            const Test = this.props.Login.Test;\r\n            const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n\r\n            let selectedComponent = { ...this.state.selectComponent };\r\n            let objcomponent = {};\r\n            objcomponent[\"scomponentname\"] = selectedComponent[\"ncomponentcode\"].label;\r\n            objcomponent[\"ncomponentcode\"] = selectedComponent[\"ncomponentcode\"] ? selectedComponent[\"ncomponentcode\"].value : -1;\r\n            const dreceiveddate = selectedComponent[\"dreceiveddate\"];\r\n            objcomponent[\"dreceiveddate\"] = dreceiveddate;\r\n            objcomponent[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, this.props.Login.userInfo);\r\n            objcomponent[\"ntzdreceivedate\"] = selectedComponent[\"ntzdreceivedate\"] ? selectedComponent[\"ntzdreceivedate\"].value : -1;\r\n            objcomponent[\"stzdreceivedate\"] = selectedComponent[\"ntzdreceivedate\"] ? selectedComponent[\"ntzdreceivedate\"].label : \"\";\r\n            objcomponent[\"jsondata\"] = \"\"\r\n            selectedComponent = { ...selectedComponent, ...objcomponent }\r\n\r\n            const index = Component.findIndex(x => x.slno === selectedComponent.slno);\r\n            if (index > -1) {\r\n                Component.splice(index, 1, selectedComponent);\r\n            }\r\n            if (testrequired === 3) {\r\n                this.props.getTestByComponentChange(Component, selectedComponent, this.props.Login);\r\n            }\r\n            else if (selectedComponent[\"nneedservice\"] === true) {\r\n                this.props.getTestByComponentChange(Component, selectedComponent, this.props.Login, true);\r\n            } else {\r\n                delete selectedComponent.nneedservice;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        Component, selectedComponent: selectedComponent, loadComponent: false, openChildModal: false,\r\n                        selectComponent: undefined, parentPopUpSize: \"xl\", Test, SelectedTest: Test[selectedComponent.slno]\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    ComponentObjectAfterSave() {\r\n        const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n        let objcomponent = this.state.selectComponent;\r\n        delete objcomponent.nneedservice;\r\n        if (testrequired === 3) {\r\n            this.props.getTestfromDB(objcomponent, this.props.Login, 2);\r\n        } else {\r\n            const Component = this.props.Login.Component || [];\r\n            let saveComponent = { ...objcomponent };\r\n            saveComponent[\"slno\"] = this.props.Login.Component ? Object.keys(this.props.Login.Component).length + 1 : 1;\r\n            saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n            const dreceiveddate = objcomponent[\"dreceiveddate\"];\r\n            saveComponent[\"dreceiveddate\"] = dreceiveddate;\r\n            saveComponent[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, this.props.Login.userInfo);\r\n            saveComponent[\"nallottedspeccode\"] = objcomponent[\"nallottedspeccode\"] ? objcomponent[\"nallottedspeccode\"] : -1;\r\n            saveComponent[\"ntzdreceivedate\"] = objcomponent[\"ntzdreceivedate\"] ? objcomponent[\"ntzdreceivedate\"].value : -1;\r\n            saveComponent[\"stzdreceivedate\"] = objcomponent[\"ntzdreceivedate\"] ? objcomponent[\"ntzdreceivedate\"].label : \"\";\r\n            saveComponent[\"jsondata\"] = \"\"\r\n            Component.unshift(saveComponent);\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    Component, openChildModal: false, selectedComponent: saveComponent,\r\n                    SelectedTest: [], selectComponent: {}, showSaveContinue: false, loadComponent: false, parentPopUpSize: \"xl\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    ComponentObject() {\r\n        const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n        let objcomponent = this.state.selectComponent;\r\n        delete objcomponent.nneedservice;\r\n        let objcomponent1 = { ...this.state.selectComponent };\r\n        if (testrequired === 3) {\r\n            this.props.getTestfromDB(objcomponent, this.props.Login, 1);\r\n        } else {\r\n            const Component = this.props.Login.Component || [];\r\n            let saveComponent = { ...objcomponent };\r\n            saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            saveComponent[\"slno\"] = this.props.Login.Component ? Object.keys(this.props.Login.Component).length + 1 : 1;\r\n            saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n            const dreceiveddate = objcomponent[\"dreceiveddate\"];\r\n            saveComponent[\"dreceiveddate\"] = dreceiveddate;\r\n            saveComponent[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, this.props.Login.userInfo);\r\n            saveComponent[\"ntzdreceivedate\"] = objcomponent[\"ntzdreceivedate\"] ? objcomponent[\"ntzdreceivedate\"].value : -1;\r\n            saveComponent[\"stzdreceivedate\"] = objcomponent[\"ntzdreceivedate\"] ? objcomponent[\"ntzdreceivedate\"].label : \"\";\r\n            saveComponent[\"nallottedspeccode\"] = objcomponent[\"nallottedspeccode\"] ? objcomponent[\"nallottedspeccode\"] : -1;\r\n            saveComponent[\"jsondata\"] = \"\"\r\n            Component.unshift(saveComponent);\r\n            objcomponent1[\"scomments\"] = \"\";\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { Component, selectedComponent: saveComponent, SelectedTest: [], selectComponent: objcomponent1 }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onSaveSubSampleClick = (saveType, formRef) => {\r\n        const childoperation = this.props.Login.childoperation;\r\n        if (childoperation === \"create\") {\r\n            if (saveType === 1) {\r\n                this.SubSampleObjectAfterSave();\r\n            } else if (saveType === 2) {\r\n                this.SubSampleObject();\r\n            }\r\n        } else {\r\n            const Component = this.props.Login.Component;\r\n            const Test = this.props.Login.Test;\r\n            const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n            // const defaulttimezone = this.props.Login.defaulttimezone;\r\n            // const userInfo = this.props.Login.userInfo;\r\n            let selectedComponent = { ...this.state.selectComponent };\r\n            let objcomponent = {};\r\n\r\n            objcomponent[\"slno\"] = selectedComponent[\"slno\"] ? selectedComponent[\"slno\"] : \"\"\r\n            // objcomponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\r\n            // if(this.props.specBasedComponent){\r\n            //     objcomponent[\"scomponentname\"] = selectedComponent[\"ncomponentcode\"].label;\r\n            //     objcomponent[\"ncomponentcode\"] = selectedComponent[\"ncomponentcode\"] ? selectedComponent[\"ncomponentcode\"].value : -1;\r\n            //     objcomponent[\"nspecsampletypecode\"] = selectedComponent[\"nspecsampletypecode\"] ?selectedComponent[\"nspecsampletypecode\"]  : -1;\r\n            // }else{\r\n            //     objcomponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\r\n            // }\r\n\r\n\r\n\r\n            const subSampleDetail = getRegistrationSubSample(selectedComponent,\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata, this.props.Login.userInfo,\r\n                this.props.Login.defaulttimezone, true, this.state.specBasedComponent, this.state.selectedSpec)\r\n\r\n            objcomponent = { ...objcomponent, ...subSampleDetail.sampleRegistration }\r\n\r\n            let subSampleDataGridList = this.props.Login.subSampleDataGridList || []\r\n            const index1 = subSampleDataGridList.findIndex(x => x.slno === objcomponent.slno)\r\n            if (index1 !== -1)\r\n                subSampleDataGridList[index1] = { ...objcomponent['jsonuidata'], ...objcomponent }\r\n\r\n            // objcomponent[\"jsondata\"] = {}\r\n            // objcomponent[\"jsonuidata\"] = {}\r\n\r\n\r\n            // this.props.Login.masterData.SubSampleTemplate &&\r\n            //     this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n            //         row.children.map(column => {\r\n            //             column.children.map(component => {\r\n            //                 if (component.hasOwnProperty(\"children\")) {\r\n            //                    // let componentrowlabel = ''\r\n            //                  //   let componentrowvalue = ''\r\n            //                     component.children.map(componentrow => {\r\n            //                         if (componentrow.inputtype === \"combo\") {\r\n            //                             objcomponent[\"jsondata\"][componentrow.label] = selectedComponent[componentrow.label] ?\r\n            //                                 { value: selectedComponent[componentrow.label].value, label: selectedComponent[componentrow.label].label } : -1\r\n            //                            // if (componentrow.mandatory || selectedComponent[componentrow.label]) {\r\n            //                               //  componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                                // componentrowvalue = componentrowvalue + ' ' + selectedComponent[componentrow.label].label\r\n            //                           //  }\r\n            //                             objcomponent[\"jsonuidata\"][componentrow.label]=selectedComponent[componentrow.label]?selectedComponent[componentrow.label].label:\"\"\r\n            //                         }\r\n            //                         else if (componentrow.inputtype === \"date\") {\r\n            //                             if (componentrow.mandatory) {\r\n            //                                 selectedComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(selectedComponent[componentrow.label] ?\r\n            //                                     selectedComponent[componentrow.label] : new Date(), userInfo);\r\n\r\n            //                                     selectedComponent[\"jsonuidata\"][componentrow.label]=selectedComponent[\"jsondata\"][componentrow.label]\r\n            //                             } else {\r\n            //                                 objcomponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n            //                                     convertDateTimetoString(selectedComponent[componentrow.label] ?\r\n            //                                         selectedComponent[componentrow.label] : new Date(), userInfo) :\r\n            //                                     selectedComponent[componentrow.label] ? convertDateTimetoString(selectedComponent[componentrow.label] ?\r\n            //                                         selectedComponent[componentrow.label] : new Date(), userInfo) : \"\";\r\n\r\n            //                                         selectedComponent[\"jsonuidata\"][componentrow.label]=selectedComponent[\"jsondata\"][componentrow.label]\r\n\r\n            //                             }\r\n            //                             if (componentrow.timezone) {\r\n            //                                 selectedComponent[\"jsondata\"][`tz${componentrow.label}`] = selectedComponent[`tz${componentrow.label}`] ?\r\n            //                                     { value: selectedComponent[`tz${componentrow.label}`].value, label: selectedComponent[`tz${componentrow.label}`].label } :\r\n            //                                     defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                     selectedComponent[\"jsonuidata\"][`tz${componentrow.label}`]=selectedComponent[\"jsondata\"][`tz${componentrow.label}`]\r\n            //                             }\r\n            //                             // dateList.push(componentrow.label)\r\n            //                         }\r\n\r\n            //                         else {\r\n            //                             objcomponent[\"jsondata\"][componentrow.label] = selectedComponent[componentrow.label] ?\r\n            //                                 selectedComponent[componentrow.label] : \"\"\r\n            //                                 objcomponent[\"jsonuidata\"][componentrow.label]=objcomponent[\"jsondata\"][componentrow.label]\r\n            //                             // if (selectedComponent[componentrow.label]) {\r\n            //                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                             //     componentrowvalue = componentrowvalue + ' ' + selectedComponent[componentrow.label]\r\n            //                             // }\r\n            //                         }\r\n            //                     })\r\n            //                    // objcomponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n            //                 }\r\n            //                 else {\r\n            //                     if (component.inputtype === \"combo\") {\r\n            //                         objcomponent[\"jsondata\"][component.label] = selectedComponent[component.label] ?\r\n            //                             { value: selectedComponent[component.label].value, label: selectedComponent[component.label].label } : -1\r\n\r\n            //                             objcomponent[\"jsonuidata\"][component.label] =selectedComponent[component.label] ? selectedComponent[component.label].label :\"\"\r\n            //                     }\r\n            //                     else if (component.inputtype === \"date\") {\r\n            //                         if (component.mandatory) {\r\n            //                             objcomponent[\"jsondata\"][component.label] = convertDateTimetoString(selectedComponent[component.label] ?\r\n            //                                 selectedComponent[component.label] : new Date(), userInfo);\r\n\r\n            //                                 objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\r\n            //                         } else {\r\n            //                             objcomponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n            //                                 convertDateTimetoString(selectedComponent[component.label] ?\r\n            //                                     selectedComponent[component.label] : new Date(), userInfo) :\r\n            //                                 selectedComponent[component.label] ? convertDateTimetoString(selectedComponent[component.label] ?\r\n            //                                     selectedComponent[component.label] : new Date(), userInfo) : \"\";\r\n\r\n            //                                     objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\r\n            //                         }\r\n            //                         if (component.timezone) {\r\n            //                             objcomponent[\"jsondata\"][`tz${component.label}`] = selectedComponent[`tz${component.label}`] ?\r\n            //                                 { value: selectedComponent[`tz${component.label}`].value, label: selectedComponent[`tz${component.label}`].label } :\r\n            //                                 defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                 objcomponent[\"jsonuidata\"][`tz${component.label}`]  = objcomponent[\"jsondata\"][`tz${component.label}`] \r\n            //                         }\r\n            //                         //dateList.push(component.label)\r\n            //                     }\r\n            //                     else {\r\n            //                         objcomponent[\"jsondata\"][component.label] = selectedComponent[component.label] ?\r\n            //                             selectedComponent[component.label] : \"\"\r\n\r\n            //                             objcomponent[\"jsonuidata\"][component.label] = objcomponent[\"jsondata\"][component.label]\r\n            //                     }\r\n            //                 }\r\n\r\n            //             }\r\n            //             )\r\n            //         })\r\n            //     })\r\n\r\n\r\n            selectedComponent = { ...objcomponent }\r\n\r\n            const index = Component.findIndex(x => x.slno === selectedComponent.slno);\r\n            if (index > -1) {\r\n                Component.splice(index, 1, selectedComponent);\r\n            }\r\n            if (testrequired === 3) {\r\n                this.props.getTestByComponentChange(Component, selectedComponent, this.props.Login);\r\n            }\r\n            else if (selectedComponent[\"nneedservice\"] === true) {\r\n                this.props.getTestByComponentChange(Component, selectedComponent, this.props.Login, true);\r\n            } else {\r\n                delete selectedComponent.nneedservice;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        Component,\r\n                        selectedComponent: selectedComponent,\r\n                        loadSubSample: false, openChildModal: false,\r\n                        selectComponent: {}, parentPopUpSize: \"xl\",\r\n                        Test, SelectedTest: Test[selectedComponent.slno],\r\n                        screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,\r\n                        subSampleDataGridList\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    SubSampleObjectAfterSave() {\r\n        const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n        let objcomponent = this.state.selectComponent;\r\n        delete objcomponent.nneedservice;\r\n        // const defaulttimezone = this.props.Login.defaulttimezone;\r\n        // const userInfo = this.props.Login.userInfo;\r\n        if (testrequired === 3) {\r\n            this.props.getTestfromDB(objcomponent, this.props.Login, 2);\r\n        } else {\r\n            const Component = this.props.Login.Component || [];\r\n            let saveComponent = {};\r\n            // saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            //saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n\r\n\r\n            saveComponent[\"slno\"] = this.props.Login.Component ? Object.keys(this.props.Login.Component).length + 1 : 1;\r\n            // if(this.props.specBasedComponent){\r\n            //     saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            //     saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n            //     saveComponent[\"nspecsampletypecode\"] = objcomponent[\"nspecsampletypecode\"] ?objcomponent[\"nspecsampletypecode\"]  : -1;\r\n            // }else{\r\n            //     saveComponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\r\n            // }\r\n\r\n            const subSampleDetail = getRegistrationSubSample(objcomponent,\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata, this.props.Login.userInfo,\r\n                this.props.Login.defaulttimezone, true, this.state.specBasedComponent, this.state.selectedSpec)\r\n\r\n            saveComponent = { ...saveComponent, ...subSampleDetail.sampleRegistration }\r\n\r\n            let subSampleDataGridList = this.props.Login.subSampleDataGridList || []\r\n            subSampleDataGridList.push({ ...saveComponent['jsonuidata'], ...saveComponent })\r\n\r\n            // saveComponent[\"jsondata\"] = {}\r\n            // saveComponent[\"jsonuidata\"] = {}\r\n\r\n            // this.props.Login.masterData.SubSampleTemplate &&\r\n            //     this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n            //         row.children.map(column => {\r\n            //             column.children.map(component => {\r\n            //                 if (component.hasOwnProperty(\"children\")) {\r\n            //                    // let componentrowlabel = ''\r\n            //                    // let componentrowvalue = ''\r\n            //                     component.children.map(componentrow => {\r\n            //                         if (componentrow.inputtype === \"combo\") {\r\n            //                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\r\n            //                                 { value: objcomponent[componentrow.label].value, label: objcomponent[componentrow.label].label } : -1\r\n            //                             // if (componentrow.mandatory || objcomponent[componentrow.label]) {\r\n            //                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label].label\r\n            //                             // }\r\n            //                             saveComponent[\"jsonuidata\"][componentrow.label] = objcomponent[componentrow.label] ? objcomponent[componentrow.label].label  : \"\"\r\n\r\n            //                         }\r\n            //                         else if (componentrow.inputtype === \"date\") {\r\n            //                             if (componentrow.mandatory) {\r\n            //                                 saveComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                     objcomponent[componentrow.label] : new Date(), userInfo);\r\n\r\n            //                                     saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             } else {\r\n            //                                 saveComponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n            //                                     convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                         objcomponent[componentrow.label] : new Date(), userInfo) :\r\n            //                                     objcomponent[componentrow.label] ? convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                         objcomponent[componentrow.label] : new Date(), userInfo) : \"\";\r\n\r\n            //                                         saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             }\r\n            //                             if (componentrow.timezone) {\r\n            //                                 saveComponent[\"jsondata\"][`tz${componentrow.label}`] = objcomponent[`tz${componentrow.label}`] ?\r\n            //                                     { value: objcomponent[`tz${componentrow.label}`].value, label: objcomponent[`tz${componentrow.label}`].label } :\r\n            //                                     defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                     saveComponent[\"jsonuidata\"][`tz${componentrow.label}`] = saveComponent[\"jsondata\"][`tz${componentrow.label}`]\r\n            //                             }\r\n            //                             // dateList.push(componentrow.label)\r\n            //                         }\r\n\r\n            //                         else {\r\n            //                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\r\n            //                                 objcomponent[componentrow.label] : \"\"\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             // if (objcomponent[componentrow.label]) {\r\n            //                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label]\r\n            //                             // }\r\n            //                         }\r\n            //                     })\r\n            //                     //saveComponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n            //                 }\r\n            //                 else {\r\n            //                     if (component.inputtype === \"combo\") {\r\n            //                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\r\n            //                             { value: objcomponent[component.label].value, label: objcomponent[component.label].label } : -1\r\n\r\n            //                             saveComponent[\"jsonuidata\"][component.label] = objcomponent[component.label] ? objcomponent[component.label].label  :\"\"\r\n\r\n            //                         }\r\n            //                     else if (component.inputtype === \"date\") {\r\n            //                         if (component.mandatory) {\r\n            //                             saveComponent[\"jsondata\"][component.label] = convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                 objcomponent[component.label] : new Date(), userInfo);\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n            //                         } else {\r\n            //                             saveComponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n            //                                 convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                     objcomponent[component.label] : new Date(), userInfo) :\r\n            //                                 objcomponent[component.label] ? convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                     objcomponent[component.label] : new Date(), userInfo) : \"\";\r\n            //                                     saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n\r\n            //                                 }\r\n            //                         if (component.timezone) {\r\n            //                             saveComponent[\"jsondata\"][`tz${component.label}`] = objcomponent[`tz${component.label}`] ?\r\n            //                                 { value: objcomponent[`tz${component.label}`].value, label: objcomponent[`tz${component.label}`].label } :\r\n            //                                 defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][`tz${component.label}`]=  saveComponent[\"jsondata\"][`tz${component.label}`]\r\n            //                         }\r\n            //                         //dateList.push(component.label)\r\n            //                     }\r\n            //                     else {\r\n            //                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\r\n            //                             objcomponent[component.label] : \"\"\r\n\r\n            //                             saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n            //                     }\r\n            //                 }\r\n\r\n            //             }\r\n            //             )\r\n            //         })\r\n            //     })\r\n\r\n            //  saveComponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\r\n            Component.unshift(saveComponent);\r\n\r\n            let selectedTestData = this.state.selectedTestData[\"ntestgrouptestcode\"];\r\n            const selectedTestArray = [];\r\n            selectedTestData && selectedTestData.map((item) => {\r\n                item.item['slno'] = saveComponent.slno;\r\n                return selectedTestArray.push(item.item);\r\n            });\r\n            // selectedTestArray.map((item,i)=>{\r\n            //    selectedTestArray[i]['slno']=saveComponent.slno;\r\n            // })\r\n            // let selectedComponent = this.props.Login.selectedComponent;\r\n            const Test = this.props.Login.Test || [];\r\n\r\n            const ArrayTest = Test[saveComponent.slno] ? Test[saveComponent.slno] : [];\r\n            //  ArrayTest.push(selectedTestArray);\r\n            Test[saveComponent.slno] = [...ArrayTest, ...selectedTestArray]\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    Component, openChildModal: false,\r\n                    selectedComponent: saveComponent,\r\n                    loadSubSample: false,\r\n                    selectComponent: {},\r\n                    showSaveContinue: false,\r\n                    parentPopUpSize: \"xl\",\r\n                    SelectedTest: Test[saveComponent.slno],\r\n                    Test: Test, selectedTestData: {},\r\n                    screenName: this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename,\r\n                    subSampleDataGridList\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    SubSampleObject() {\r\n        const testrequired = this.state.selectedRecord.ntransactionstatus;\r\n        let objcomponent = this.state.selectComponent;\r\n        delete objcomponent.nneedservice;\r\n        let objcomponent1 = { ...this.state.selectComponent };\r\n        // const defaulttimezone = this.props.Login.defaulttimezone;\r\n        // const userInfo = this.props.Login.userInfo;\r\n        if (testrequired === 3) {\r\n            this.props.getTestfromDB(objcomponent, this.props.Login, 1);\r\n        } else {\r\n            const Component = this.props.Login.Component || [];\r\n            let saveComponent = {};\r\n            // if(this.props.specBasedComponent){\r\n            //     saveComponent[\"scomponentname\"] = objcomponent[\"ncomponentcode\"].label;\r\n            //     saveComponent[\"ncomponentcode\"] = objcomponent[\"ncomponentcode\"] ? objcomponent[\"ncomponentcode\"].value : -1;\r\n            //     saveComponent[\"nspecsampletypecode\"] = objcomponent[\"nspecsampletypecode\"] ?objcomponent[\"nspecsampletypecode\"]  : -1;\r\n            // }else{\r\n            //     saveComponent[\"nspecsampletypecode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ? this.state.selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\r\n            // }\r\n            saveComponent[\"slno\"] = this.props.Login.Component ? Object.keys(this.props.Login.Component).length + 1 : 1;\r\n\r\n\r\n            const subSampleDetail = getRegistrationSubSample(objcomponent,\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata, this.props.Login.userInfo,\r\n                this.props.Login.defaulttimezone, true, this.state.specBasedComponent,\r\n                this.state.selectedSpec)\r\n\r\n            saveComponent = { ...saveComponent, ...subSampleDetail.sampleRegistration }\r\n\r\n            let subSampleDataGridList = this.props.Login.subSampleDataGridList || []\r\n            subSampleDataGridList.push({ ...saveComponent['jsonuidata'], ...saveComponent })\r\n\r\n            // saveComponent[\"jsondata\"] = {}\r\n            // saveComponent[\"jsonuidata\"] = {}\r\n\r\n            // this.props.Login.masterData.SubSampleTemplate &&\r\n            //   this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n            //         row.children.map(column => {\r\n            //             column.children.map(component => {\r\n            //                 if (component.hasOwnProperty(\"children\")) {\r\n            //                    // let componentrowlabel = ''\r\n            //                    // let componentrowvalue = ''\r\n            //                     component.children.map(componentrow => {\r\n            //                         if (componentrow.inputtype === \"combo\") {\r\n            //                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\r\n            //                                 { value: objcomponent[componentrow.label].value, label: objcomponent[componentrow.label].label } : -1\r\n            //                             // if (componentrow.mandatory || objcomponent[componentrow.label]) {\r\n            //                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label].label\r\n            //                             // }\r\n            //                             saveComponent[\"jsonuidata\"][componentrow.label] = objcomponent[componentrow.label] ? objcomponent[componentrow.label].label  : \"\"\r\n\r\n            //                         }\r\n            //                         else if (componentrow.inputtype === \"date\") {\r\n            //                             if (componentrow.mandatory) {\r\n            //                                 saveComponent[\"jsondata\"][componentrow.label] = convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                     objcomponent[componentrow.label] : new Date(), userInfo);\r\n\r\n            //                                     saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             } else {\r\n            //                                 saveComponent[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n            //                                     convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                         objcomponent[componentrow.label] : new Date(), userInfo) :\r\n            //                                     objcomponent[componentrow.label] ? convertDateTimetoString(objcomponent[componentrow.label] ?\r\n            //                                         objcomponent[componentrow.label] : new Date(), userInfo) : \"\";\r\n\r\n            //                                         saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             }\r\n            //                             if (componentrow.timezone) {\r\n            //                                 saveComponent[\"jsondata\"][`tz${componentrow.label}`] = objcomponent[`tz${componentrow.label}`] ?\r\n            //                                     { value: objcomponent[`tz${componentrow.label}`].value, label: objcomponent[`tz${componentrow.label}`].label } :\r\n            //                                     defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                     saveComponent[\"jsonuidata\"][`tz${componentrow.label}`] = saveComponent[\"jsondata\"][`tz${componentrow.label}`]\r\n            //                             }\r\n            //                             // dateList.push(componentrow.label)\r\n            //                         }\r\n\r\n            //                         else {\r\n            //                             saveComponent[\"jsondata\"][componentrow.label] = objcomponent[componentrow.label] ?\r\n            //                                 objcomponent[componentrow.label] : \"\"\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][componentrow.label] = saveComponent[\"jsondata\"][componentrow.label]\r\n            //                             // if (objcomponent[componentrow.label]) {\r\n            //                             //     componentrowlabel = componentrowlabel + '&' + componentrow.label\r\n            //                             //     componentrowvalue = componentrowvalue + ' ' + objcomponent[componentrow.label]\r\n            //                             // }\r\n            //                         }\r\n            //                     })\r\n            //                     //saveComponent[\"jsondata\"][componentrowlabel.substring(1)] = componentrowvalue\r\n            //                 }\r\n            //                 else {\r\n            //                     if (component.inputtype === \"combo\") {\r\n            //                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\r\n            //                             { value: objcomponent[component.label].value, label: objcomponent[component.label].label } : -1\r\n\r\n            //                             saveComponent[\"jsonuidata\"][component.label] = objcomponent[component.label] ? objcomponent[component.label].label  :\"\"\r\n\r\n            //                         }\r\n            //                     else if (component.inputtype === \"date\") {\r\n            //                         if (component.mandatory) {\r\n            //                             saveComponent[\"jsondata\"][component.label] = convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                 objcomponent[component.label] : new Date(), userInfo);\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n            //                         } else {\r\n            //                             saveComponent[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n            //                                 convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                     objcomponent[component.label] : new Date(), userInfo) :\r\n            //                                 objcomponent[component.label] ? convertDateTimetoString(objcomponent[component.label] ?\r\n            //                                     objcomponent[component.label] : new Date(), userInfo) : \"\";\r\n            //                                     saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n\r\n            //                                 }\r\n            //                         if (component.timezone) {\r\n            //                             saveComponent[\"jsondata\"][`tz${component.label}`] = objcomponent[`tz${component.label}`] ?\r\n            //                                 { value: objcomponent[`tz${component.label}`].value, label: objcomponent[`tz${component.label}`].label } :\r\n            //                                 defaulttimezone ? defaulttimezone : -1\r\n\r\n            //                                 saveComponent[\"jsonuidata\"][`tz${component.label}`]=  saveComponent[\"jsondata\"][`tz${component.label}`]\r\n            //                         }\r\n            //                         //dateList.push(component.label)\r\n            //                     }\r\n            //                     else {\r\n            //                         saveComponent[\"jsondata\"][component.label] = objcomponent[component.label] ?\r\n            //                             objcomponent[component.label] : \"\"\r\n\r\n            //                             saveComponent[\"jsonuidata\"][component.label] =  saveComponent[\"jsondata\"][component.label]\r\n            //                     }\r\n            //                 }\r\n\r\n            //             }\r\n            //             )\r\n            //         })\r\n            //     })\r\n\r\n            //   saveComponent[\"nallottedspeccode\"] = this.state.selectedSpec[\"nallottedspeccode\"] ?\r\n            //     this.state.selectedSpec[\"nallottedspeccode\"].value : -1;\r\n            Component.unshift(saveComponent);\r\n            // objcomponent1[\"scomments\"] = \"\";\r\n            //objcomponent1[\"ssubsamplename\"] = \"\";\r\n\r\n            let selectedTestData = this.state.selectedTestData[\"ntestgrouptestcode\"];\r\n            let selectedTestArray = [];\r\n            selectedTestData && selectedTestData.map((item) => {\r\n                item.item['slno'] = saveComponent.slno;\r\n                return selectedTestArray.push(item.item);\r\n            });\r\n            // selectedTestArray.map((item,i)=>{\r\n            //     selectedTestArray[i]['slno']=saveComponent.slno;\r\n            // })\r\n            let Test = this.props.Login.Test || [];\r\n\r\n            const ArrayTest = Test[saveComponent.slno] ? Test[saveComponent.slno] : [];\r\n\r\n            Test[saveComponent.slno] = [...ArrayTest, ...selectedTestArray]\r\n\r\n            const updateInfo = {\r\n                Component, selectedComponent: saveComponent,\r\n                selectComponent: objcomponent1,\r\n                SelectedTest: Test[saveComponent.slno],\r\n                Test: Test, subSampleDataGridList//, selectedTestData: {}\r\n            }\r\n            this.addSubSampleSaveContinue(updateInfo, selectedTestData)\r\n            // const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //         Component, selectedComponent: saveComponent,\r\n            //         selectComponent: objcomponent1,\r\n            //         SelectedTest: Test[saveComponent.slno],\r\n            //         Test: Test, selectedTestData: {}\r\n            //     }\r\n            // }\r\n            // this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    addSubSampleSaveContinue = (updateInfo, selectedTestData) => {\r\n        const Map = {}\r\n        Map[\"ntemplatemanipulationcode\"] = this.state.selectedSpec.ntemplatemanipulationcode;\r\n        Map[\"nallottedspeccode\"] = this.state.selectedSpec.nallottedspeccode.value;\r\n        Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        Map[\"testrequired\"] = false;\r\n        Map[\"userinfo\"] = this.props.Login.userInfo;\r\n        Map[\"nspecsampletypecode\"] = updateInfo.selectedComponent[\"nspecsampletypecode\"] ?\r\n            updateInfo.selectedComponent[\"nspecsampletypecode\"] : -1\r\n        this.props.addSubSampleSaveContinue(updateInfo, Map, this.state.specBasedComponent,\r\n            this.props.Login.Components, selectedTestData, this.props.Login.lstComponent)\r\n    }\r\n\r\n    editComponent = (editselectedcomponent) => {\r\n        let inputData = {};\r\n        let objComponent = { ...editselectedcomponent };\r\n        inputData[\"ntemplatemanipulationcode\"] = this.state.selectedSpec.ntemplatemanipulationcode;\r\n        inputData[\"nallottedspeccode\"] = this.state.selectedSpec.nallottedspeccode.value;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        this.props.EditComponent(inputData, objComponent, this.props.Login.userInfo, this.props.Login);\r\n    }\r\n\r\n\r\n    editSubSample = (editselectedcomponent, specBasedComponent) => {\r\n        let inputData = {};\r\n        let objComponent = { ...editselectedcomponent };\r\n        const defaulttimezone = this.props.Login.defaulttimezone;\r\n        const userInfo = this.props.Login.userInfo;\r\n        inputData[\"ntemplatemanipulationcode\"] = this.state.selectedSpec.ntemplatemanipulationcode;\r\n        inputData[\"nallottedspeccode\"] = this.state.selectedSpec.nallottedspeccode.value;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n        inputData[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n        // inputData[\"masterData\"]=this.props.Login.masterData;\r\n\r\n\r\n\r\n        let selectComponent = this.state.selectComponent;\r\n        selectComponent['nspecsampletypecode'] = objComponent['nspecsampletypecode'] ?\r\n            objComponent['nspecsampletypecode'] : -1\r\n        if (specBasedComponent) {\r\n            selectComponent['ncomponentcode'] = { value: objComponent['ncomponentcode'] ? objComponent['ncomponentcode'] : -1, label: objComponent['scomponentname'] ? objComponent['scomponentname'] : \"\" }\r\n\r\n        }\r\n        selectComponent['slno'] = objComponent['slno']\r\n        this.props.Login.masterData.SubSampleTemplate &&\r\n            this.props.Login.masterData.SubSampleTemplate.jsondata.map(row => {\r\n                return row.children.map(column => {\r\n                    return column.children.map(component => {\r\n                        if (component.hasOwnProperty(\"children\")) {\r\n                            return component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\") {\r\n                                    selectComponent[componentrow.label] = objComponent[\"jsondata\"][componentrow.label] ?\r\n                                        objComponent[\"jsondata\"][componentrow.label] : \"\"\r\n                                }\r\n                                else if (componentrow.inputtype === \"date\") {\r\n\r\n                                    selectComponent[componentrow.label] = objComponent[\"jsondata\"][componentrow.label] ?\r\n                                        rearrangeDateFormatforUI(userInfo, objComponent[\"jsondata\"][componentrow.label]) : \"\";\r\n\r\n                                    if (componentrow.timezone) {\r\n                                        selectComponent[`tz${componentrow.label}`] = objComponent[\"jsondata\"][`tz${componentrow.label}`] ?\r\n                                            objComponent[\"jsondata\"][`tz${componentrow.label}`] :\r\n                                            defaulttimezone ? defaulttimezone : -1\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    selectComponent[componentrow.label] = objComponent[\"jsondata\"][componentrow.label] ?\r\n                                        objComponent[\"jsondata\"][componentrow.label] : \"\"\r\n                                }\r\n                                return null;\r\n                            })\r\n                        }\r\n                        else {\r\n                            if (component.inputtype === \"combo\") {\r\n                                selectComponent[component.label] = objComponent[\"jsondata\"][component.label] ?\r\n                                    objComponent[\"jsondata\"][component.label] : -1\r\n                            }\r\n                            else if (component.inputtype === \"date\") {\r\n\r\n                                selectComponent[component.label] = objComponent[\"jsondata\"][component.label] ?\r\n                                    rearrangeDateFormatforUI(userInfo, objComponent[\"jsondata\"][component.label]) : \"\";\r\n\r\n                                if (component.timezone) {\r\n                                    selectComponent[`tz${component.label}`] = objComponent[\"jsondata\"][`tz${component.label}`] ?\r\n                                        objComponent[\"jsondata\"][`tz${component.label}`] :\r\n                                        defaulttimezone ? defaulttimezone : -1\r\n                                }\r\n                            }\r\n                            else {\r\n                                selectComponent[component.label] = objComponent[\"jsondata\"][component.label] ?\r\n                                    objComponent[\"jsondata\"][component.label] : \"\"\r\n                            }\r\n                            return selectComponent;\r\n                        }\r\n                    }\r\n                    )\r\n                })\r\n            })\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         loadSubSample: true, childoperation: \"update\",\r\n        //         ChildscreenName: \"SubSample\",\r\n        //         screenName: \"SubSample\",\r\n        //         openChildModal: false, selectComponent,\r\n        //         parentPopUpSize: \"lg\", loading: false\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo)\r\n        this.props.editSubSample(inputData, selectComponent,\r\n            this.props.Login.userInfo, specBasedComponent, this.props.Login.SubSamplecomboData,\r\n            this.state.selectedRecord);\r\n    }\r\n\r\n    deleteComponent = (event) => {\r\n        const dataItem = event;\r\n        const Component = this.props.Login.Component;\r\n        const subSampleDataGridList = this.props.Login.subSampleDataGridList;\r\n        const Test = this.props.Login.Test;\r\n        let SelectedTest = this.props.Login.SelectedTest;\r\n        const index = Component.findIndex(x => x.slno === dataItem.slno);\r\n        if (index > -1) {\r\n            Component.splice(index, 1);\r\n            subSampleDataGridList.splice(index, 1);\r\n        }\r\n        Test && Test[dataItem.slno] && delete Test[dataItem.slno]\r\n        SelectedTest = Test && Object.keys(Test).length > 0 && Test[Component[0].slno];\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { Component, selectedComponent: Component[0], Test, SelectedTest }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    deleteTest = (event) => {\r\n        const dataItem = event;\r\n        let SelectedTest = this.props.Login.SelectedTest;\r\n        let selectedComponent = this.props.Login.selectedComponent;\r\n        const Test = this.props.Login.Test;\r\n        const index = SelectedTest.findIndex(x => x.ntestgrouptestcode === dataItem.ntestgrouptestcode);\r\n        if (index > -1) {\r\n            SelectedTest.splice(index, 1);\r\n        }\r\n        Test[selectedComponent.slno] = SelectedTest;\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { Test, SelectedTest }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onSaveTestClick = (saveType, formRef) => {\r\n        let selectedTestData = this.props.Login.selectedTestData[\"ntestgrouptestcode\"];\r\n        let selectedTestArray = [];\r\n\r\n        let updateInfo = {}\r\n        let selectedComponent = this.props.Login.selectedComponent;\r\n\r\n        let Test = this.props.Login.Test || [];\r\n        if (this.props.Login.masterData.RealRegSubTypeValue?\r\n            this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample:false) {\r\n            selectedTestData.map((item) => {\r\n                item.item['slno'] = selectedComponent.slno;\r\n                return selectedTestArray.push(item.item);\r\n            });\r\n            const ArrayTest = Test[selectedComponent.slno] ? Test[selectedComponent.slno] : [];\r\n            //  ArrayTest.push(selectedTestArray);\r\n            Test[selectedComponent.slno] = [...ArrayTest, ...selectedTestArray]\r\n\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { SelectedTest: Test[selectedComponent.slno], Test: Test, selectedTestData: {}, loadTest: false, parentPopUpSize: \"xl\" }\r\n            }\r\n        } else {\r\n            selectedComponent = {\r\n                jsondata: { samplename: \"NA\" },\r\n                slno: 1\r\n            }\r\n            selectedTestData.map((item) => {\r\n                item.item['slno'] = selectedComponent.slno;\r\n                return selectedTestArray.push(item.item);\r\n            });\r\n            const Component = [selectedComponent]\r\n            const ArrayTest = Test[selectedComponent.slno] ? Test[selectedComponent.slno] : [];\r\n            //  ArrayTest.push(selectedTestArray);\r\n            Test[selectedComponent.slno] = [...ArrayTest, ...selectedTestArray]\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    selectedComponent,\r\n                    Component,\r\n                    SelectedTest: Test[selectedComponent.slno],\r\n                    Test: Test, selectedTestData: {}, loadTest: false,\r\n                    parentPopUpSize: \"xl\"\r\n                    , screenName:this.props.Login.masterData.RealRegSubTypeValue?\r\n                     this.props.Login.masterData.RealRegSubTypeValue.sregsubtypename:\"scheduler\"\r\n                }\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    componentDataStateChange = (event) => {\r\n        this.setState({\r\n            componentDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    testDataStateChange = (event) => {\r\n        this.setState({\r\n            testDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    subSampleDataStateChange = (event) => {\r\n        this.setState({\r\n            subSampleDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    addsubSample = (specBasedComponent) => {\r\n        let Map = {};\r\n        if (this.state.selectedSpec.nallottedspeccode !== undefined\r\n            && this.state.selectedSpec.nallottedspeccode !== \"\") {\r\n            Map[\"ntemplatemanipulationcode\"] = this.state.selectedSpec.ntemplatemanipulationcode;\r\n            Map[\"nallottedspeccode\"] = this.state.selectedSpec.nallottedspeccode.value;\r\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            Map[\"testrequired\"] = false;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n            let data = this.state.SubSamplecomboComponents || []\r\n            const SubSamplewithoutCombocomponent = this.state.SubSamplewithoutCombocomponent || []\r\n            const Layout = this.props.Login.masterData.SubSampleTemplate\r\n                && this.props.Login.masterData.SubSampleTemplate.jsondata\r\n            if (SubSamplewithoutCombocomponent.length === 0 || data.length === 0) {\r\n                if (Layout !== undefined) {\r\n                    Layout.map(row => {\r\n                        return row.children.map(column => {\r\n                            return column.children.map(component => {\r\n                                return component.hasOwnProperty(\"children\") ?\r\n                                    component.children.map(componentrow => {\r\n                                        if (componentrow.inputtype === \"combo\") {\r\n                                            data.push(componentrow)\r\n                                        } else {\r\n                                            SubSamplewithoutCombocomponent.push(componentrow)\r\n                                        }\r\n                                        return null;\r\n                                    })\r\n                                    : component.inputtype === \"combo\" ? data.push(component) :\r\n                                        SubSamplewithoutCombocomponent.push(component)\r\n                            })\r\n                        })\r\n                    })\r\n                    const SubSamplecomboComponents = data\r\n                    let childColumnList = {};\r\n                    data.map(columnList => {\r\n                        const val = comboChild(data, columnList, childColumnList, true);\r\n                        data = val.data;\r\n                        childColumnList = val.childColumnList\r\n                        return null;\r\n                    })\r\n\r\n                    this.props.addsubSample(this.props.Login.masterData,\r\n                        this.props.Login.userInfo, data, this.state.selectComponent,\r\n                        childColumnList, SubSamplecomboComponents,\r\n                        SubSamplewithoutCombocomponent, specBasedComponent,\r\n                        Map, this.props.Login.Component, true, this.props.Login.SubSamplecomboData,\r\n                        this.state.selectedRecord)\r\n\r\n                    //  this.props.addsubSample(this.props.Login.userInfo, specBasedComponent, Map)\r\n                }\r\n            } else {\r\n                this.props.addsubSample(this.props.Login.masterData,\r\n                    this.props.Login.userInfo, data, this.state.selectComponent,\r\n                    this.state.parentSubSampleColumnList, this.state.SubSamplecomboComponents,\r\n                    this.state.SubSamplewithoutCombocomponent, specBasedComponent, Map,\r\n                    this.props.Login.Component, false, this.props.Login.SubSamplecomboData,\r\n                    this.state.selectedRecord)\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let operation = this.props.Login.operation;\r\n        if(this.props.Login.screenName!=='scheduler'){\r\n            if (operation === \"update\") {\r\n                this.onUpdateRegistration(saveType, formRef, operation);\r\n            }\r\n            else {\r\n                if (operation === \"create\") {\r\n                    this.insertRegistration(true);\r\n                }\r\n            }\r\n        }else{\r\n            if (operation === \"update\") {\r\n                this.onUpdateRegistration(saveType, formRef, operation);\r\n            }\r\n            else {\r\n                if (operation === \"create\") {\r\n                    this.insertRegistrationScheduler(true);\r\n                }\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n    onUpdateRegistration(saveType, formRef, operation, flag) {\r\n        const inputData = { userinfo: this.props.Login.userInfo };\r\n\r\n        let initialParam = {\r\n            nfilterstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.RealSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.RealRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode,\r\n            fromdate: \"\",\r\n            todate: \"\",\r\n            nflag: 2,\r\n            ntype: 2,\r\n            npreregno: String(this.state.selectedRecord.npreregno),\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.RealDesignTemplateMappingValue\r\n                && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.RegSubTypeValue?\r\n            this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow\r\n                : false,\r\n            nneedsubsample: this.props.Login.masterData\r\n                && this.props.Login.masterData.RealRegSubTypeValue?\r\n                this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample:false,\r\n            checkBoxOperation: 3,\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\"\r\n\r\n        }\r\n\r\n        inputData[\"initialparam\"] = initialParam;\r\n        // inputData[\"samplebeforeedit\"] = JSON.parse(JSON.stringify(this.props.Login.regRecordToEdit));\r\n        //inputData[\"registration\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n        const param = getRegistration(this.props.Login.masterData,\r\n            this.state.selectedRecord, this.state.selectedSpec,\r\n            this.props.Login.masterData.registrationTemplate.jsondata,\r\n            this.props.Login.userInfo, this.props.Login.defaulttimezone,\r\n            operation, this.props.comboComponents);\r\n\r\n        inputData[\"registration\"] = param.sampleRegistration\r\n        inputData[\"DateList\"] = param.dateList;\r\n        inputData['sampledateconstraints'] = this.sampleeditable.sampledateconstraints;\r\n        inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.RealDesignTemplateMappingValue\r\n            && this.props.Login.masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        inputData[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue\r\n            && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\r\n        inputData[\"nneedsubsample\"] = this.props.Login.masterData\r\n            && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample;\r\n        inputData[\"checkBoxOperation\"] = 3;\r\n        inputData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\"\r\n        inputData[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\"\r\n        // Object.keys(this.state.selectedRecord).map(key => {\r\n        //     if (typeof this.state.selectedRecord[key] === \"object\") {\r\n        //         if (this.state.selectedRecord[key] === null) {\r\n        //             return inputData[\"registration\"][key] = this.state.selectedRecord[key];\r\n        //         }\r\n        //         else if (this.state.selectedRecord[key] instanceof Date) {\r\n        //             return inputData[\"registration\"][key] = formatInputDate(this.state.selectedRecord[key], false);\r\n        //         }\r\n        //         else {\r\n        //             return inputData[\"registration\"][key] = this.state.selectedRecord[key].value\r\n        //         }\r\n        //     }\r\n        //     else {\r\n        //         return inputData[\"registration\"][key] = this.state.selectedRecord[key];\r\n        //     }\r\n        // }\r\n        //  )\r\n        // console.log(\"edit:\", inputData);\r\n\r\n        // if (inputData[\"registration\"] ) {\r\n        //     delete inputData[\"registration\"][\"esignpassword\"]\r\n        //     delete inputData[\"registration\"][\"esigncomments\"]\r\n        //     delete inputData[\"registration\"][\"agree\"]\r\n        // }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Registration\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef,\r\n            action: 'editSample',\r\n            showConfirmAlert: false,\r\n            resultDataState: this.state.resultDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            // dataState:undefined, selectedId\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    saveType, parentPopUpSize: \"lg\",\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            this.props.updateRegistration(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    findSubsampleDateList(subsampletemplate) {\r\n        const dateList = []\r\n        subsampletemplate && subsampletemplate.map(row => {\r\n            return row.children.map(column => {\r\n                return column.children.map(component => {\r\n                    if (component.hasOwnProperty(\"children\")) {\r\n                        return component.children.map(componentrow => {\r\n                            if (componentrow.inputtype === \"date\") {\r\n                                dateList.push(componentrow.label)\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        if (component.inputtype === \"date\") {\r\n                            dateList.push(component.label)\r\n                        }\r\n                        return dateList\r\n                    }\r\n                }\r\n                )\r\n            })\r\n        })\r\n        return dateList;\r\n    }\r\n\r\n    insertRegistrationScheduler() {\r\n        let Components = this.props.Login.Component;\r\n        if (Components && Components.length > 0) {\r\n            let Test = this.props.Login.Test;\r\n            let Map = {};\r\n            Map[\"testgrouptest\"] = TestListManipulation(Components, Test);\r\n            Map[\"RegistrationSample\"] = SubSample(this.props.Login.Component ? this.props.Login.Component : [],\r\n                this.state.specBasedComponent,\r\n                this.props.Login.masterData.RealRegSubTypeValue? this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample:false, \r\n                this.state.selectedSpec);\r\n            Map[\"subsampleDateList\"] = this.findSubsampleDateList(this.props.Login.masterData.SubSampleTemplate?\r\n                this.props.Login.masterData.SubSampleTemplate.jsondata: this.props.Login.masterData.schedulerSubSampleTemplate.jsondata);\r\n            Map[\"nregtypecode\"] = 1;\r\n            Map[\"nregsubtypecode\"] = 1;\r\n            Map[\"nsampletypecode\"] =1;\r\n           // Map[\"nfilterstatus\"] = transactionStatus.PREREGISTER;\r\n            Map[\"ndesigntemplatemappingcode\"] =this.props.Login.masterData.ndesigntemplatemappingcode;\r\n            Map[\"nneedtemplatebasedflow\"] = false;\r\n            Map[\"nneedsubsample\"] = this.props.Login.masterData.RealRegSubTypeValue?\r\n             this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample:false;\r\n           // Map[\"checkBoxOperation\"] = 3;\r\n            const param = getRegistrationScheduler(this.props.Login.masterData,\r\n                this.state.selectedRecord, this.state.selectedSpec,\r\n                this.props.Login.masterData.schedulerTemplate.jsondata,\r\n                this.props.Login.userInfo, this.props.Login.defaultTimeZone, 'create',\r\n                this.props.comboComponents);\r\n            Map[\"Registration\"] = param.sampleRegistration\r\n            Map[\"DateList\"] = param.dateList\r\n            Map['sampledateconstraints'] = this.sampleeditable.sampledateconstraints;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            Map[\"selectedscheduler\"] = this.props.Login.masterData.SelectedScheduler;\r\n\r\n            Map[\"selectedscheduler\"][\"sstarttime\"]=formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, Map[\"selectedscheduler\"][\"sstarttime\"]) , false)\r\n            //Map[\"nflag\"] = 2;\r\n            // Map[\"ntype\"] = 2;\r\n            //Map[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\";\r\n            //Map[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n          //  Map[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n            //Map[\"multipleselectionFlag\"] = this.props.Login.settings && parseInt(this.props.Login.settings[7]) === 3 ? true : false;\r\n\r\n            const inputParam = {\r\n                inputData: Map,\r\n                postParamList: this.props.postParamList,\r\n                action: \"preregister\"\r\n            }\r\n            this.props.insertRegistrationScheduler(inputParam, this.props.Login.masterData)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDSUBSAMPLETOPREREGISTER\" }));\r\n        }\r\n\r\n    }\r\n\r\n    insertRegistration() {\r\n        let Components = this.props.Login.Component;\r\n        if (Components && Components.length > 0) {\r\n            let Test = this.props.Login.Test;\r\n            let Map = {};\r\n            Map[\"testgrouptest\"] = TestListManipulation(Components, Test);\r\n            Map[\"RegistrationSample\"] = SubSample(this.props.Login.Component ? this.props.Login.Component : [],\r\n                this.state.specBasedComponent,\r\n                this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample, this.state.selectedSpec);\r\n            Map[\"subsampleDateList\"] = this.findSubsampleDateList(this.props.Login.masterData.SubSampleTemplate.jsondata);\r\n            //Map[\"FromDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.props.fromDate);//formatDate(this.fromDate);\r\n            // Map[\"ToDate\"] = rearrangeDateFormat(this.props.Login.userInfo, this.props.toDate);//formatDate(this.toDate);\r\n            Map[\"FromDate\"] = \"\";\r\n            Map[\"ToDate\"] = \"\";\r\n            Map[\"nregtypecode\"] = this.props.Login.masterData.RealRegTypeValue.nregtypecode;\r\n            Map[\"nregsubtypecode\"] = this.props.Login.masterData.RealRegSubTypeValue.nregsubtypecode;\r\n            Map[\"nsampletypecode\"] = this.props.Login.masterData.RealSampleTypeValue.nsampletypecode;\r\n            Map[\"nfilterstatus\"] = transactionStatus.PREREGISTER;\r\n            Map[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.registrationTemplate\r\n                && this.props.Login.masterData.registrationTemplate.ndesigntemplatemappingcode;\r\n            Map[\"nneedtemplatebasedflow\"] = this.props.Login.masterData.RegSubTypeValue\r\n                && this.props.Login.masterData.RegSubTypeValue.nneedtemplatebasedflow;\r\n            Map[\"nneedsubsample\"] = this.props.Login.masterData\r\n                && this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample;\r\n            Map[\"checkBoxOperation\"] = 3;\r\n            const param = getRegistration(this.props.Login.masterData,\r\n                this.state.selectedRecord, this.state.selectedSpec,\r\n                this.props.Login.masterData.registrationTemplate.jsondata,\r\n                this.props.Login.userInfo, this.props.Login.defaultTimeZone, 'create',\r\n                this.props.comboComponents);\r\n            Map[\"Registration\"] = param.sampleRegistration\r\n            Map[\"DateList\"] = param.dateList\r\n            Map['sampledateconstraints'] = this.sampleeditable.sampledateconstraints;\r\n            Map[\"userinfo\"] = this.props.Login.userInfo;\r\n            Map[\"nflag\"] = 2;\r\n            // Map[\"ntype\"] = 2;\r\n            Map[\"activeTestTab\"] = this.props.Login.activeTestTab || \"IDS_PARAMETERRESULTS\";\r\n            Map[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n            Map[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n            Map[\"multipleselectionFlag\"] = this.props.Login.settings && parseInt(this.props.Login.settings[7]) === 3 ? true : false;\r\n\r\n            const inputParam = {\r\n                inputData: Map,\r\n                postParamList: this.props.postParamList,\r\n                action: \"preregister\"\r\n            }\r\n            this.props.insertRegistration(inputParam, this.props.Login.masterData)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDSUBSAMPLETOPREREGISTER\" }));\r\n        }\r\n\r\n    }\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    render() {\r\n\r\n        let saveType = 1;\r\n        if (this.props.ignoreFormValidation) {\r\n            saveType = 5;\r\n        }\r\n        let buttonLabel = \"Save\";\r\n        let idsLabel = \"IDS_SAVE\";\r\n        if (this.props.buttonLabel) {\r\n            buttonLabel = this.props.buttonLabel;\r\n            idsLabel = 'IDS_'.concat(buttonLabel.toUpperCase());\r\n        }\r\n        // const testColumnList = [\r\n        //     { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\r\n        //     { \"idsName\": \"IDS_SOURCE\", \"dataField\": \"ssourcename\", width: \"150px\" },\r\n        //     { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\r\n        //     { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"200px\" }]\r\n        return (\r\n            <Modal\r\n                size={this.props.Login.loadComponent ?\r\n                    'lg' : this.props.Login.loadSpec ? 'lg' :\r\n                        this.props.Login.loadTest ? 'lg' :\r\n                            this.props.Login.loadSubSample ? 'lg' : 'xl'}\r\n                // size={this.props.templateData[0] ?\r\n                //     this.props.templateData[0].children ?\r\n                //         this.props.templateData[0].children.length >= 2 ? 'xl' : 'lg' : 'lg' : 'lg'}\r\n                backdrop=\"static\"\r\n                //className={this.props.className || \"registrationModel\"}\r\n                className={this.props.className || \"\"}\r\n                show={this.props.Login.openPortal}\r\n                onHide={this.props.closeModal}\r\n                enforceFocus={false}\r\n                dialogClassName=\"modal-dialog-slideout freakerstop\"\r\n                aria-labelledby=\"add-user\">\r\n                {/* <Modal.Header className=\"d-flex align-items-center mb-2\"> */}\r\n                <Modal.Header className=\"d-flex align-items-center\">\r\n                    <Modal.Title id=\"add-user\" className=\"header-primary flex-grow-1\">\r\n                        {this.props.graphView === true ? \"\" : this.props.Login.inputParam ?\r\n                            this.props.Login.esign === true ?\r\n                                <FormattedMessage id={\"IDS_ESIGN\"} defaultMessage=\"Esign\" />\r\n                                : this.props.loginoperation ?\r\n                                    <FormattedMessage id={this.props.Login.screenName} />\r\n                                    : <>\r\n                                        {this.props.operation ?\r\n                                            <>\r\n                                                <FormattedMessage id={this.props.Login.operation && \"IDS_\".concat(this.props.Login.operation.toUpperCase())}\r\n                                                    defaultMessage='Add' />\r\n                                                {\" \"}\r\n                                                {\r\n                                                    this.props.Login.screenName ?\r\n                                                        <FormattedMessage id={this.props.Login.screenName} />\r\n                                                        : \"\"\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            this.props.Login.screenName ?\r\n                                                <FormattedMessage id={this.props.Login.screenName} />\r\n                                                : \"\"}\r\n                                    </>\r\n                            : \"\"}\r\n                    </Modal.Title>\r\n                    <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={this.props.Login.loadCustomSearchFilter ? this.closeKendoFilter : this.props.Login.loadSpec ?\r\n                        this.closeSpec : this.props.Login.loadTest ? this.closeTest : this.props.Login.loadComponent ?\r\n                            this.closeComponent : this.props.Login.loadSubSample ? this.closeSubSample :\r\n                                this.props.closeModal}>\r\n                        <FormattedMessage id='IDS_CANCEL' defaultMessage='Cancel' />\r\n                    </Button>\r\n                    {this.props.esign === true ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(3)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SUBMIT' defaultMessage='Submit' />\r\n                        </Button>\r\n                        :\r\n                        (this.props.operation === \"create\" || this.props.operation === \"update\") && this.props.showValidate ?\r\n                            <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(4)}>\r\n                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                <FormattedMessage id='IDS_VALIDATE' defaultMessage='Validate' />\r\n                            </Button> :\r\n                            this.props.showCalculate ?\r\n                                <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(saveType)}>\r\n                                    <FontAwesomeIcon icon={faSave} /> { }\r\n                                    <FormattedMessage id='IDS_CALCULATE' defaultMessage='Calculate' />\r\n                                </Button> :\r\n                                this.props.showParam === true && this.props.showExecute ?\r\n                                    <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(4)}>\r\n                                        <FontAwesomeIcon icon={faCalculator} /> { }\r\n                                        <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' />\r\n                                    </Button> :\r\n                                    this.props.noSave || this.props.graphView ?\r\n                                        this.props.operation === \"view\" ? \"\"\r\n                                            : <Button className=\"btn btn-user btn-primary-blue\" role=\"button\"\r\n                                                onClick={this.props.resetView}\r\n                                            >\r\n                                                <FormattedMessage id={\"IDS_RESET\"} defaultMessage='Reset' />\r\n                                            </Button>\r\n                                        : this.props.Login.loadCustomSearchFilter ? \"\" :\r\n                                            <Button className=\" btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(saveType)}>\r\n                                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                                <FormattedMessage id={idsLabel} defaultMessage={buttonLabel} />\r\n                                            </Button>\r\n                    }\r\n                    {this.props.Login.operation === \"create\" && this.props.Login.showSaveContinue ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(2)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SAVECONTINUE' defaultMessage='Save & Continue' />\r\n                        </Button>\r\n                        : \"\"\r\n                    }\r\n                    {(this.props.operation === \"create\" || this.props.operation === \"update\")\r\n                        && this.props.esign !== true && this.props.showExecute === true && this.props.showSave ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(1)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SAVE' defaultMessage='Save' />\r\n                        </Button>\r\n                        : \"\"}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ModalInner ref={this.myRef} >\r\n                        <Card.Body >\r\n                            {/* className=\"no-padding\" */}\r\n                            {/* <SplitterLayout borderColor=\"#999\"\r\n                                primaryIndex={1} percentage={true}\r\n                                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                primaryMinSize={40}\r\n                                secondaryMinSize={20}\r\n                                vertical={true}\r\n                            > */}\r\n                            <React.Fragment>\r\n                                <Form ref={this.formRef}>\r\n                                    {this.props.Login.loadCustomSearchFilter ?\r\n                                        this.props.Login.seletedFilterComponent.inputtype === 'frontendsearchfilter' ?\r\n                                            <KendoDatatoolFilter\r\n                                                filter={this.props.Login.kendoFilter}\r\n                                                handleFilterChange={this.handleFilterChange}\r\n                                                filterData={this.props.Login.lstPatient || []}\r\n                                                skip={this.props.Login.kendoSkip}\r\n                                                take={this.props.Login.kendoTake}\r\n                                                handlePageChange={this.handlePageChange}\r\n                                                fields={this.props.Login.fields || []}\r\n                                                gridColumns={this.props.Login.gridColumns || []}\r\n                                                onRowClick={this.handleKendoRowClick}\r\n\r\n                                            /> : <FilterQueryBuilder\r\n                                                fields={this.props.Login.fields || {}}\r\n                                                onChange={this.onChangeAwesomeQueryBuilder}\r\n                                                tree={this.props.Login.awesomeTree}\r\n                                                config={this.props.Login.awesomeConfig}\r\n                                                skip={this.props.Login.kendoSkip}\r\n                                                take={this.props.Login.kendoTake}\r\n                                                handlePageChange={this.handlePageChange}\r\n                                                gridColumns={this.props.Login.gridColumns || []}\r\n                                                filterData={this.props.Login.lstPatient}\r\n                                                onRowClick={this.handleKendoRowClick}\r\n                                                handleExecuteClick={this.handleExecuteClick}\r\n                                            /> :\r\n                                        this.props.Login.loadSpec ?\r\n                                            <AddSpecification\r\n                                                AgaramTree={this.props.Login.AgaramTree}\r\n                                                openNodes={this.props.Login.OpenNodes}\r\n                                                handleTreeClick={this.onTreeClick}\r\n                                                focusKey={this.props.Login.FocusKey}\r\n                                                activeKey={this.props.Login.ActiveKey}\r\n                                                Specification={this.props.Login.Specification}\r\n                                                selectedSpec={this.state.selectedSpec}\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                onSpecChange={this.onspecChange}\r\n                                            />\r\n                                            : this.props.Login.loadTest ?\r\n                                                <AddTest\r\n                                                    TestCombined={this.props.Login.TestCombined || []}\r\n                                                    TestChange={this.TestChange}\r\n                                                    selectedTestData={this.props.Login.selectedTestData}\r\n                                                /> : this.props.Login.loadComponent ?\r\n                                                    <AddComponentPopUp\r\n                                                        ref={this.myScrollRef}\r\n                                                        selectComponent={this.state.selectComponent || {}}\r\n                                                        RealSampleTypeValue={this.props.Login.masterData.RealSampleTypeValue || {}}\r\n                                                        RealRegTypeValue={this.props.Login.masterData.RealRegTypeValue || {}}\r\n                                                        RealRegSubTypeValue={this.props.Login.masterData.RealRegSubTypeValue || {}}\r\n                                                        RealFilterStatusValue={this.props.Login.masterData.RealFilterStatusValue || {}}\r\n                                                        formatMessage={this.props.intl.formatMessage}\r\n                                                        handleDateChange={this.handleDateChangeComp}\r\n                                                        Component={this.props.Login.lstComponent || []}\r\n                                                        onInputComponentOnChange={this.onInputComponentOnChange}\r\n                                                        // onComboChange={this.onComponentComboChange}\r\n                                                        timeZoneList={this.props.Login.timeZoneList}\r\n                                                        onComponentChange={this.onComponentChange}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        sreceiveddate={this.props.Login.sreceiveddate || []}\r\n                                                        CurrentTime={this.props.Login.CurrentTime}\r\n                                                    />\r\n                                                    : this.props.Login.loadSubSample ?\r\n                                                        <AddSubSample\r\n                                                            Component={this.props.Login.lstComponent || []}\r\n                                                            selectComponent={this.state.selectComponent}\r\n                                                            selectedRecord={this.state.selectedRecord}\r\n                                                            // Unit={this.props.Login.Unit || []}\r\n                                                            onComponentChange={this.onComponentChange}\r\n                                                            onInputComponentOnChange={this.onInputComponentOnChange}\r\n                                                            templateData={this.props.Login.masterData.SubSampleTemplate &&\r\n                                                                this.props.Login.masterData.SubSampleTemplate.jsondata}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            timeZoneList={this.props.Login.timeZoneList}\r\n                                                            defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                                            handleDateChange={this.handleDateSubSampleChange}\r\n                                                            onInputOnChange={this.onInputOnSubSampleChange}\r\n                                                            onNumericInputChange={this.onNumericInputSubSampleChange}\r\n                                                            comboData={this.props.Login.SubSamplecomboData}\r\n                                                            onComboChange={this.onComboSubSampleChange}\r\n                                                            TestCombined={this.props.Login.TestCombined || []}\r\n                                                            TestChange={this.TestChange}\r\n                                                            selectedTestData={this.state.selectedTestData}\r\n                                                            childoperation={this.props.Login.childoperation}\r\n                                                            specBasedComponent={this.state.specBasedComponent}\r\n                                                        />\r\n                                                        : <RegisterSlideOut\r\n                                                            editfield={this.sampleeditable &&\r\n                                                                this.sampleeditable['sampleeditable']}\r\n                                                            ntransactionstatus={this.props.Login.masterData && this.props.Login.masterData.selectedSample &&\r\n                                                                this.props.Login.masterData.selectedSample.length > 0 \r\n                                                                && this.props.Login.masterData.selectedSample[0].ntransactionstatus}\r\n                                                            loadPreregister={this.props.Login.loadPreregister}\r\n                                                            selectedSpec={this.state.selectedSpec}\r\n                                                            selectedRecord={this.state.selectedRecord}\r\n                                                            selectedComponent={this.props.Login.selectedComponent}\r\n                                                            subSampleDataGridList={this.props.Login.subSampleDataGridList || []}\r\n                                                            SelectedTest={this.props.Login.SelectedTest}\r\n                                                            selectedTestData={this.state.selectedTestData}\r\n                                                            userRoleControlRights={this.props.userRoleControlRights}\r\n                                                            templateData={this.props.Login.masterData.registrationTemplate ?\r\n                                                                this.props.Login.masterData.registrationTemplate.jsondata:\r\n                                                                this.props.Login.masterData.schedulerTemplate?\r\n                                                                 this.props.Login.masterData.schedulerTemplate.jsondata:{}}\r\n                                                            handleChange={this.props.handleChange}\r\n                                                            handleDateChange={this.handleDateChange}\r\n                                                            onInputOnChange={this.onInputOnChange}\r\n                                                            onNumericInputChange={this.onNumericInputChange}\r\n                                                            comboData={this.props.Login.comboData}\r\n                                                            onComboChange={this.onComboChange}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            timeZoneList={this.props.Login.timeZoneList}\r\n                                                            defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                                            AddSpec={this.AddSpec}\r\n                                                            addTest={this.addTestslide}\r\n                                                            handleComponentRowClick={this.handleComponentRowClick}\r\n                                                            nneedsubsample={this.props.Login.masterData\r\n                                                                && this.props.Login.masterData.RealRegSubTypeValue?\r\n                                                                this.props.Login.masterData.RealRegSubTypeValue.nneedsubsample:false}\r\n                                                            specBasedComponent={this.state.specBasedComponent}\r\n                                                            AddComponent={this.AddComponent}\r\n                                                            deleteComponent={this.deleteComponent}\r\n                                                            deleteTest={this.deleteTest}\r\n                                                            editComponent={this.editComponent}\r\n                                                            componentColumnList={this.componentColumnList}\r\n                                                            Component={this.props.Login.Component}\r\n                                                            TestChange={this.TestChange}\r\n                                                            testDataState={this.state.testDataState}\r\n                                                            subSampleDataState={this.state.subSampleDataState}\r\n                                                            //componentDataState={this.state.componentDataState}\r\n                                                            testDataStateChange={this.testDataStateChange}\r\n                                                            //componentDataStateChange={this.componentDataStateChange}\r\n                                                            subSampleDataStateChange={this.subSampleDataStateChange}\r\n                                                            addsubSample={this.addsubSample}\r\n                                                            editSubSample={this.editSubSample}\r\n                                                            // onNumericInputChange={this.onNumericInputChange}\r\n                                                            subSampleDataGridFields={this.subSampleDataGridList}\r\n                                                            selectedSample={this.props.Login.masterData.selectedSample && this.props.Login.masterData.selectedSample[0] || {}}\r\n                                                            operation={this.props.Login.operation}\r\n                                                            custombuttonclick={this.custombuttonclick}\r\n\r\n                                                        />\r\n                                    }\r\n                                </Form>\r\n                            </React.Fragment>\r\n                            {/* </SplitterLayout> */}\r\n                        </Card.Body>\r\n                    </ModalInner>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getChildValues,\r\n    getPreviewTemplate, getNewRegSpecification,\r\n    AddComponents, updateStore, EditComponent, getTest,\r\n    addsubSample, editSubSample, insertRegistration,\r\n    updateRegistration, addSubSampleSaveContinue,\r\n    componentTest, getDynamicFilter, getDynamicFilterExecuteData,insertRegistrationScheduler\r\n}\r\n)(injectIntl(PreRegisterSlideOutModal));"]},"metadata":{},"sourceType":"module"}