{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\form-input\\\\form-input.component.jsx\";\nimport React from 'react';\nimport './form-input.styles';\nimport { Form } from 'react-bootstrap';\n\nconst FormInput = _ref => {\n  let {\n    name,\n    type,\n    placeholder,\n    onChange,\n    className,\n    value,\n    // error,\n    isMandatory,\n    isDisabled,\n    children,\n    label,\n    defaultValue,\n    required,\n    onBlur,\n    onKeyUp,\n    errors,\n    isInvalid,\n    onKeyPress,\n    formGroupClassName,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"floating-label\",\n    className: `form-select w-100 floating-label react-select-wrap ${formGroupClassName ? formGroupClassName : \"\"}`,\n    controlId: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    id: name,\n    label: label,\n    name: name,\n    type: type,\n    placeholder: placeholder,\n    onChange: onChange,\n    value: value,\n    isInvalid: isInvalid,\n    className: className,\n    defaultValue: defaultValue,\n    required: required,\n    maxLength: props.maxLength,\n    readOnly: props.readOnly,\n    disabled: isDisabled,\n    onBlur: onBlur,\n    onKeyUp: onKeyUp,\n    onKeyPress: e => {\n      e.key === 'Enter' && e.preventDefault();\n    },\n    autoComplete: \"off\",\n    ref: props.ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, label, isMandatory && /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 67\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, errors)));\n};\n\nFormInput.defaultProps = {\n  type: \"text\",\n  className: \"\"\n}; // FormInput.propTypes = {\n//     name: PropTypes.string.isRequired,\n//     type: PropTypes.string,\n//     placeholder: PropTypes.string.isRequired,\n//     type: PropTypes.oneOf(['text', 'number', 'password']),\n//     className: PropTypes.string,\n//     value: PropTypes.any,\n//     onChange: PropTypes.func.isRequired\n//   }\n\nexport default FormInput;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/form-input/form-input.component.jsx"],"names":["React","Form","FormInput","name","type","placeholder","onChange","className","value","isMandatory","isDisabled","children","label","defaultValue","required","onBlur","onKeyUp","errors","isInvalid","onKeyPress","formGroupClassName","props","maxLength","readOnly","e","key","preventDefault","ref","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,SAAS,GAAG;AAAA,MAAC;AACfC,IAAAA,IADe;AAEfC,IAAAA,IAFe;AAGfC,IAAAA,WAHe;AAIfC,IAAAA,QAJe;AAKfC,IAAAA,SALe;AAMfC,IAAAA,KANe;AAOf;AACAC,IAAAA,WARe;AASfC,IAAAA,UATe;AAUfC,IAAAA,QAVe;AAWfC,IAAAA,KAXe;AAYfC,IAAAA,YAZe;AAafC,IAAAA,QAbe;AAcfC,IAAAA,MAde;AAefC,IAAAA,OAfe;AAgBfC,IAAAA,MAhBe;AAiBfC,IAAAA,SAjBe;AAkBfC,IAAAA,UAlBe;AAmBfC,IAAAA,kBAnBe;AAoBf,OAAGC;AApBY,GAAD;AAAA,sBAsBV,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAuC,IAAA,SAAS,EAAG,sDAAqDD,kBAAkB,GAAEA,kBAAF,GAAsB,EAAG,EAAnJ;AAAsJ,IAAA,SAAS,EAAEjB,IAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,EAAE,EAAEA,IADR;AAEI,IAAA,KAAK,EAAES,KAFX;AAGI,IAAA,IAAI,EAAET,IAHV;AAII,IAAA,IAAI,EAAEC,IAJV;AAKI,IAAA,WAAW,EAAEC,WALjB;AAMI,IAAA,QAAQ,EAAEC,QANd;AAOI,IAAA,KAAK,EAAEE,KAPX;AAQI,IAAA,SAAS,EAAEU,SARf;AASI,IAAA,SAAS,EAAEX,SATf;AAUI,IAAA,YAAY,EAAEM,YAVlB;AAWI,IAAA,QAAQ,EAAEC,QAXd;AAYI,IAAA,SAAS,EAAEO,KAAK,CAACC,SAZrB;AAaI,IAAA,QAAQ,EAAED,KAAK,CAACE,QAbpB;AAcI,IAAA,QAAQ,EAAEb,UAdd;AAeI,IAAA,MAAM,EAAEK,MAfZ;AAgBI,IAAA,OAAO,EAAEC,OAhBb;AAiBI,IAAA,UAAU,EAAGQ,CAAD,IAAO;AAAEA,MAAAA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqBD,CAAC,CAACE,cAAF,EAArB;AAA0C,KAjBnE;AAkBI,IAAA,YAAY,EAAC,KAlBjB;AAmBI,IAAA,GAAG,EAAEL,KAAK,CAACM,GAnBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAsBI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAExB,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BS,KAA5B,EAAmCH,WAAW,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlD,CAtBJ,eAuBI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEQ,MADF,CAvBJ,CADJ,CAtBU;AAAA,CAAlB;;AAoDAf,SAAS,CAAC0B,YAAV,GAAyB;AACrBxB,EAAAA,IAAI,EAAE,MADe;AAErBG,EAAAA,SAAS,EAAE;AAFU,CAAzB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeL,SAAf","sourcesContent":["import React from 'react';\r\nimport './form-input.styles';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst FormInput = ({\r\n    name,\r\n    type,\r\n    placeholder,\r\n    onChange,\r\n    className,\r\n    value,\r\n    // error,\r\n    isMandatory,\r\n    isDisabled,\r\n    children,\r\n    label,\r\n    defaultValue,\r\n    required,\r\n    onBlur,\r\n    onKeyUp,\r\n    errors,\r\n    isInvalid,\r\n    onKeyPress,\r\n    formGroupClassName,\r\n    ...props\r\n}) => (\r\n        <React.Fragment>\r\n            <Form.Group className=\"floating-label\" className={`form-select w-100 floating-label react-select-wrap ${formGroupClassName? formGroupClassName: \"\"}`} controlId={name}>\r\n                <Form.Control\r\n                    id={name}\r\n                    label={label}\r\n                    name={name}\r\n                    type={type}\r\n                    placeholder={placeholder}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    isInvalid={isInvalid}\r\n                    className={className}\r\n                    defaultValue={defaultValue}\r\n                    required={required}\r\n                    maxLength={props.maxLength}\r\n                    readOnly={props.readOnly}\r\n                    disabled={isDisabled}\r\n                    onBlur={onBlur}\r\n                    onKeyUp={onKeyUp}\r\n                    onKeyPress={(e) => { e.key === 'Enter' && e.preventDefault(); }}\r\n                    autoComplete=\"off\"\r\n                    ref={props.ref}\r\n                />\r\n                <Form.Label htmlFor={name}>{label}{isMandatory && <sup>*</sup>}</Form.Label>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                { errors }\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </React.Fragment>\r\n    );\r\nFormInput.defaultProps = {\r\n    type: \"text\",\r\n    className: \"\"\r\n}\r\n// FormInput.propTypes = {\r\n//     name: PropTypes.string.isRequired,\r\n//     type: PropTypes.string,\r\n//     placeholder: PropTypes.string.isRequired,\r\n//     type: PropTypes.oneOf(['text', 'number', 'password']),\r\n//     className: PropTypes.string,\r\n//     value: PropTypes.any,\r\n//     onChange: PropTypes.func.isRequired\r\n//   }\r\n\r\nexport default FormInput;"]},"metadata":{},"sourceType":"module"}