{"ast":null,"code":"import React from'react';import{faPlus}from'@fortawesome/free-solid-svg-icons';import{Nav,Row,Col}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{FormattedMessage}from'react-intl';import DataGrid from'../../components/data-grid/data-grid.component';import{transactionStatus}from'../../components/Enumeration';var TestInstrumentCategoryTab=function TestInstrumentCategoryTab(props){var addInstCategoryId=props.controlMap.has(\"AddInstrumentCategory\")&&props.controlMap.get(\"AddInstrumentCategory\").ncontrolcode;var testInstrumentCatColumnList=[{\"idsName\":\"IDS_INSTRUMENTCATEGORY\",\"dataField\":\"sinstrumentcatname\",\"width\":\"200px\"},{\"idsName\":\"IDS_SETASDEFAULT\",\"dataField\":\"stransdisplaystatus\",\"width\":\"100px\",\"componentName\":\"switch\",\"switchFieldName\":\"ndefaultstatus\",\"switchStatus\":transactionStatus.YES,\"needRights\":true,\"controlName\":\"DefaultTestInstrumentCategory\"}];var methodUrl=\"TestInstrumentCategory\";return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestinstrumentcategory\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(addInstCategoryId)===-1,onClick:function onClick(){return props.getAvailableData(props.selectedTest,\"getAvailableInstrumentCategory\",\"instrumentcategory\",\"IDS_INSTRUMENTCATEGORY\",props.userInfo,addInstCategoryId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDINSTRUMENTCATEGORY\",defaultMessage:\"Instrument Category\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid,{key:\"testinstrumentcatkey\",primaryKeyField:\"ntestinstrumentcatcode\",data:props.TestInstrumentCategory||[],dataResult:props.dataResult,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:testInstrumentCatColumnList,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,inputParam:props.inputParam,userInfo:props.userInfo,deleteRecord:props.deleteRecord,pageable:false,scrollable:'scrollable',gridHeight:'600px',isActionRequired:true,deleteParam:{operation:\"delete\",methodUrl:methodUrl},methodUrl:methodUrl,hideColumnFilter:false,onSwitchChange:props.defaultRecord,switchParam:{operation:\"Default\",methodUrl:methodUrl}}))));};export default TestInstrumentCategoryTab;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/TestInstrumentCategoryTab.jsx"],"names":["React","faPlus","Nav","Row","Col","FontAwesomeIcon","FormattedMessage","DataGrid","transactionStatus","TestInstrumentCategoryTab","props","addInstCategoryId","controlMap","has","get","ncontrolcode","testInstrumentCatColumnList","YES","methodUrl","userRoleControlRights","indexOf","getAvailableData","selectedTest","userInfo","TestInstrumentCategory","dataResult","dataState","dataStateChange","inputParam","deleteRecord","operation","defaultRecord"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst TestInstrumentCategoryTab = (props) => {\r\n    const addInstCategoryId = props.controlMap.has(\"AddInstrumentCategory\") && props.controlMap.get(\"AddInstrumentCategory\").ncontrolcode;\r\n    const testInstrumentCatColumnList = [\r\n        {\"idsName\":\"IDS_INSTRUMENTCATEGORY\",\"dataField\":\"sinstrumentcatname\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_SETASDEFAULT\",\"dataField\":\"stransdisplaystatus\",\"width\":\"100px\", \"componentName\": \"switch\", \r\n        \"switchFieldName\": \"ndefaultstatus\", \"switchStatus\": transactionStatus.YES, \"needRights\": true, \"controlName\": \"DefaultTestInstrumentCategory\"}\r\n    ];    \r\n    const methodUrl = \"TestInstrumentCategory\";\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"addtestinstrumentcategory\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addInstCategoryId) === -1}\r\n                        onClick={()=>props.getAvailableData(props.selectedTest, \"getAvailableInstrumentCategory\", \r\n                            \"instrumentcategory\", \"IDS_INSTRUMENTCATEGORY\", props.userInfo, addInstCategoryId)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> {\" \"}\r\n                        <FormattedMessage id=\"IDS_ADDINSTRUMENTCATEGORY\" defaultMessage=\"Instrument Category\" />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid\r\n                        key=\"testinstrumentcatkey\"\r\n                        primaryKeyField=\"ntestinstrumentcatcode\"\r\n                        data={props.TestInstrumentCategory || []}\r\n                        dataResult={props.dataResult}\r\n                        dataState={props.dataState}\r\n                        dataStateChange={props.dataStateChange}\r\n                        extractedColumnList={testInstrumentCatColumnList}\r\n                        controlMap={ props.controlMap }\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        inputParam={props.inputParam}\r\n                        userInfo={props.userInfo}\r\n                        deleteRecord={props.deleteRecord}\r\n                        pageable={false}\r\n                        scrollable={'scrollable'}\r\n                        gridHeight={'600px'}\r\n                        isActionRequired={true}\r\n                        deleteParam={{operation:\"delete\", methodUrl}}\r\n                        methodUrl={methodUrl}\r\n                        hideColumnFilter={false}\r\n                        onSwitchChange={props.defaultRecord}\r\n                        switchParam={{operation:\"Default\", methodUrl}}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TestInstrumentCategoryTab;"]},"metadata":{},"sourceType":"module"}