{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\goodsin\\\\SampleReceiving.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faPrint } from '@fortawesome/free-solid-svg-icons';\nimport { showUnderDevelopment, callService, crudMaster, validateEsignCredential, updateStore, getGoodsInDetail, getGoodsInPrinterComboService, getGoodsInComboService, getChainCustodyComboDataService, filterColumnData, reloadGoodsIn } from '../../actions';\nimport { showEsign, getControlMap, formatInputDate, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport SampleReceivingTabs from './SampleReceivingTabs';\nimport Esign from '../audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport AddGoodsIn from './AddGoodsIn'; //import SampleReceivingFilter from './SampleReceivingFilter';\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\n\nimport { transactionStatus } from '../../components/Enumeration';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\nimport { ReactComponent as GoodsReceivedIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/goods-received.svg\";\nimport DateFilter from '../../components/DateFilter';\nimport AddPrinter from '../registration/AddPrinter';\nimport { Affix } from 'rsuite'; // import ReactTooltip from 'react-tooltip';\n// import { Tooltip } from '@progress/kendo-react-tooltip';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass SampleReceiving extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ConfirmDelete = deleteParam => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteOrReceiveRecord(deleteParam));\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      if (selectedRecord[\"sgoodsindate\"]) selectedRecord[\"dgoodsindate\"] = rearrangeDateFormat(this.props.Login.userInfo, selectedRecord[\"sgoodsindate\"]);\n      let operation = this.props.Login.operation;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"receive\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          operation: operation\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n\n      if (fieldName === \"nrecipientcode\") {\n        if (comboData === null) {\n          selectedRecord[\"sdeptname\"] = \"\"; //selectedRecord[\"sdeptcode\"] = 0;\n        } else {\n          this.props.Login.recipientList.map(dataItem => {\n            if (dataItem.value === comboData.value) {\n              selectedRecord[\"sdeptname\"] = dataItem.item.sdeptname; //selectedRecord[\"ndeptcode\"] = dataItem.item.ndeptcode;\n            }\n\n            return null;\n          });\n        }\n      } else if (fieldName === \"ntzgoodsindate\") {\n        if (comboData === null) {\n          selectedRecord[\"ntzgoodsindate\"] = 0;\n          selectedRecord[\"stzgoodsindate\"] = \"\";\n        } else {\n          selectedRecord[\"stzgoodsindate\"] = comboData.label;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onFilterSubmit = () => {\n      this.reloadData(true);\n    };\n\n    this.reloadData = isFilterSubmit => {\n      this.searchRef.current.value = \"\"; // let obj = this.convertDatetoString(selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\n      //     selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\n\n      let fromDate = this.props.Login.masterData.FromDate;\n      let toDate = this.props.Login.masterData.ToDate;\n\n      if (isFilterSubmit) {\n        let selectedRecord = this.state.selectedRecord || {};\n\n        if (selectedRecord && selectedRecord[\"fromdate\"] !== undefined) {\n          fromDate = selectedRecord[\"fromdate\"];\n        }\n\n        if (selectedRecord && selectedRecord[\"todate\"] !== undefined) {\n          toDate = selectedRecord[\"todate\"];\n        }\n      } //let obj = this.convertDatetoString(fromDate, toDate); \n\n\n      let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo,\n          fromDate: obj.fromDate,\n          toDate: obj.toDate,\n          currentDate: null //currentdate: isDateChange === true ? null : formatInputDate(new Date(), true)\n\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"GoodsIn\",\n        displayName: \"IDS_GOODSIN\",\n        userInfo: this.props.Login.userInfo\n      }; //this.props.callService(inputParam);\n\n      this.props.reloadGoodsIn(inputParam);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.state.selectedRecord[\"nnoofpackages\"] <= 0) {\n        return toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_ENTERTHEPACKAGEGREATERTHANZERO\"\n        }));\n      }\n\n      let inputData = [];\n      inputData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      inputData[\"userinfo\"] = this.props.Login.userInfo; // let obj = this.convertDatetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\n      //     this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\n\n      let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n      let fromDate = obj.fromDate;\n      let toDate = obj.toDate;\n      inputData[\"fromDate\"] = fromDate;\n      inputData[\"toDate\"] = toDate;\n      let postParam = undefined;\n\n      if (this.props.Login.operation === \"update\") {\n        // edit\n        postParam = {\n          inputListName: \"GoodsInList\",\n          selectedObject: \"SelectedGoodsIn\",\n          primaryKeyField: \"nrmsno\",\n          unchangeList: [\"FromDate\", \"ToDate\"]\n        };\n        inputData[\"goodsin\"] = JSON.parse(JSON.stringify(this.props.Login.selectedRecord));\n      } else {\n        //add               \n        inputData[\"goodsin\"] = {\n          \"nsitecode\": this.props.Login.userInfo.ntranssitecode\n        };\n      }\n\n      inputData[\"goodsin\"][\"noutofhours\"] = this.state.selectedRecord[\"noutofhours\"] ? this.state.selectedRecord[\"noutofhours\"] : transactionStatus.NO;\n      inputData[\"goodsin\"][\"nmanufcode\"] = this.state.selectedRecord[\"nmanufcode\"] ? this.state.selectedRecord[\"nmanufcode\"].value : -1;\n      inputData[\"goodsin\"][\"nrecipientcode\"] = this.state.selectedRecord[\"nrecipientcode\"] ? this.state.selectedRecord[\"nrecipientcode\"].value : -1; //inputData[\"goodsin\"][\"ndeptcode\"] = this.state.selectedRecord[\"ndeptcode\"] ? this.state.selectedRecord[\"ndeptcode\"] : -1;\n\n      inputData[\"goodsin\"][\"ncouriercode\"] = this.state.selectedRecord[\"ncouriercode\"] ? this.state.selectedRecord[\"ncouriercode\"].value : transactionStatus.NA;\n      inputData[\"goodsin\"][\"sconsignmentno\"] = this.state.selectedRecord[\"sconsignmentno\"] || \"\";\n      inputData[\"goodsin\"][\"dgoodsindate\"] = this.state.selectedRecord[\"dgoodsindate\"];\n      inputData[\"goodsin\"][\"nnoofpackages\"] = this.state.selectedRecord[\"nnoofpackages\"];\n      inputData[\"goodsin\"][\"ssecurityrefno\"] = this.state.selectedRecord[\"ssecurityrefno\"] || \"\";\n      inputData[\"goodsin\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] || \"\";\n      inputData[\"goodsin\"][\"ntzgoodsindate\"] = this.state.selectedRecord[\"ntzgoodsindate\"] ? this.state.selectedRecord[\"ntzgoodsindate\"].value : 1;\n      inputData[\"goodsin\"][\"stzgoodsindate\"] = this.state.selectedRecord[\"stzgoodsindate\"] || \"\";\n      const goodsInDate = inputData[\"goodsin\"][\"dgoodsindate\"]; //need this conversion when the datatype of the field is 'Instant'\n\n      inputData[\"goodsin\"][\"dgoodsindate\"] = formatInputDate(goodsInDate, false);\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"GoodsIn\",\n        displayName: \"IDS_GOODSIN\",\n        inputData: inputData,\n        postParam,\n        searchRef: this.searchRef,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef\n      };\n      const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n\n      if (esignNeeded) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: \"IDS_GOODSIN\",\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        const selectedRecord = {\n          \"dgoodsindate\": this.props.Login.currentTime,\n          //new Date(),\n          \"stzgoodsindate\": this.props.Login.userInfo.stimezoneid,\n          \"ntzgoodsindate\": {\n            \"value\": this.props.Login.userInfo.ntimezonecode,\n            \"label\": this.props.Login.userInfo.stimezoneid\n          }\n        };\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\n      }\n    };\n\n    this.onSavePrinterClick = () => {\n      const inputParam = {\n        classUrl: 'barcode',\n        methodUrl: 'Barcode',\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: {\n          nrmsno: this.props.Login.dataToPrint,\n          sprintername: this.state.selectedRecord.sprintername ? this.state.selectedRecord.sprintername.value : '',\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: this.props.Login.ncontrolcode\n        },\n        operation: 'printer'\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: this.props.Login.inputParam.displayName\n            }),\n            operation: 'printer'\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.deleteOrReceiveRecord = deleteParam => {\n      if (deleteParam.selectedRecord.ntransactionstatus === transactionStatus.GOODS_RECEIVED) {\n        let message = \"IDS_CANNOTDELETERECIVEDGOODS\";\n\n        if (deleteParam.operation === \"receive\") {\n          message = \"IDS_GOODSALREADYRECEIVED\";\n        }\n\n        toast.warn(this.props.intl.formatMessage({\n          id: message\n        }));\n      } else {\n        let validUser = true;\n\n        if (deleteParam.operation === \"receive\" && deleteParam.selectedRecord.nrecipientcode !== this.props.Login.userInfo.nusercode) {\n          validUser = false;\n        }\n\n        if (validUser) {\n          // let obj = this.convertDatetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\n          //     this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\n          let obj = convertDateValuetoString(this.state.selectedRecord[\"fromdate\"] || this.props.Login.masterData && this.props.Login.masterData.FromDate, this.state.selectedRecord[\"todate\"] || this.props.Login.masterData && this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n          let fromDate = obj.fromDate;\n          let toDate = obj.toDate;\n          const postParam = {\n            inputListName: \"GoodsInList\",\n            selectedObject: \"SelectedGoodsIn\",\n            primaryKeyField: \"nrmsno\",\n            primaryKeyValue: deleteParam.selectedRecord.nrmsno,\n            fetchUrl: \"goodsin/getGoodsIn\",\n            fecthInputObject: {\n              userinfo: this.props.Login.userInfo,\n              fromDate,\n              toDate\n            },\n            unchangeList: [\"FromDate\", \"ToDate\"]\n          };\n          const inputParam = {\n            classUrl: this.props.Login.inputParam.classUrl,\n            methodUrl: \"GoodsIn\",\n            displayName: \"IDS_GOODSIN\",\n            inputData: {\n              \"ncontrolcode\": deleteParam.ncontrolCode,\n              \"goodsin\": deleteParam.selectedRecord,\n              fromDate,\n              toDate,\n              \"userinfo\": this.props.Login.userInfo\n            },\n            operation: deleteParam.operation,\n            postParam\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openModal: true,\n                screenName: \"IDS_GOODSIN\",\n                operation: deleteParam.operation,\n                selectedId: deleteParam.selectedRecord.nrmsno\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_INVALIDUSERTORECEIVE\"\n          }));\n        }\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.state = {\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      selectedGoodsIn: undefined,\n      screenName: undefined,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      showSaveContinue: true\n    }; // this.breadCrumbData = [];\n\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.searchFieldList = [\"nnoofpackages\", \"nrecipientcode\", \"nrmsno\", \"scomments\", \"sconsignmentno\", \"scouriername\", \"sdeptname\", \"sdisplaystatus\", \"sgoodsindate\", \"smanufname\", \"soutofhours\", \"sreceiveddate\", \"ssecurityrefno\", \"stzgoodsindate\", \"suserfullname\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // if (props.Login.masterStatus !== \"\") {\n    //     if (props.screenName === \"IDS_GOODSIN\") {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let goodsInStatusCSS = \"\";\n\n    if (this.props.Login.masterData.SelectedGoodsIn && this.props.Login.masterData.SelectedGoodsIn.ntransactionstatus === 15) {\n      goodsInStatusCSS = \"outline-secondary\";\n    } else if (this.props.Login.masterData.SelectedGoodsIn && this.props.Login.masterData.SelectedGoodsIn.ntransactionstatus === 16) {\n      goodsInStatusCSS = \"outline-success\";\n    }\n\n    const addId = this.state.controlMap.has(\"AddGoodsIn\") && this.state.controlMap.get(\"AddGoodsIn\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditGoodsIn\") && this.state.controlMap.get(\"EditGoodsIn\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteGoodsIn\") && this.state.controlMap.get(\"DeleteGoodsIn\").ncontrolcode;\n    const receiveId = this.state.controlMap.has(\"ReceiveGoodsIn\") && this.state.controlMap.get(\"ReceiveGoodsIn\").ncontrolcode;\n    const printBarcodeId = this.state.controlMap.has(\"PrintBarcode\") ? this.state.controlMap.get(\"PrintBarcode\").ncontrolcode : -1;\n    const addParam = {\n      screenName: \"IDS_GOODSIN\",\n      primaryeyField: \"nrmsno\",\n      primaryKeyValue: undefined,\n      operation: \"create\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: addId\n    };\n    const editParam = {\n      screenName: \"IDS_GOODSIN\",\n      operation: \"update\",\n      primaryKeyField: \"nrmsno\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editId\n    };\n    const deleteParam = {\n      screenName: \"IDS_GOODSIN\",\n      methodUrl: \"GoodsIn\",\n      operation: \"delete\",\n      selectedRecord: this.props.Login.masterData.SelectedGoodsIn,\n      ncontrolCode: deleteId\n    };\n    const receiveParam = {\n      screenName: \"IDS_GOODSIN\",\n      methodUrl: \"GoodsIn\",\n      selectedRecord: this.props.Login.masterData.SelectedGoodsIn,\n      operation: \"receive\",\n      ncontrolCode: receiveId\n    }; // let obj = this.convertDatetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\n    //     this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\n\n    let obj = convertDateValuetoString(this.state.selectedRecord[\"fromdate\"] || this.props.Login.masterData && this.props.Login.masterData.FromDate, this.state.selectedRecord[\"todate\"] || this.props.Login.masterData && this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n    let fromDate = obj.fromDate;\n    let toDate = obj.toDate;\n    const filterParam = {\n      inputListName: \"GoodsInList\",\n      selectedObject: \"SelectedGoodsIn\",\n      primaryKeyField: \"nrmsno\",\n      fetchUrl: \"goodsin/getGoodsIn\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        fromDate,\n        toDate\n      },\n      masterData: this.props.Login.masterData,\n      unchangeList: [\"FromDate\", \"ToDate\"],\n      searchFieldList: this.searchFieldList\n    };\n    const mandatoryFields = [{\n      \"idsName\": \"IDS_MANUFACTURER\",\n      \"dataField\": \"nmanufcode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_RECIPIENT\",\n      \"dataField\": \"nrecipientcode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_NOOFPACKAGES\",\n      \"dataField\": \"nnoofpackages\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_GOODSINDATE\",\n      \"dataField\": \"dgoodsindate\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_TIMEZONE\",\n      \"dataField\": \"ntzgoodsindate\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n\n    if (this.state.selectedRecord[\"noutofhours\"] === transactionStatus.YES) {\n      mandatoryFields.push({\n        \"idsName\": \"IDS_SECURITYREFNO\",\n        \"dataField\": \"ssecurityrefno\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      });\n    } //let breadCrumbDataDate = this.convertDatetoString(this.props.Login.masterData && this.props.Login.masterData.FromDate, this.props.Login.masterData && this.props.Login.masterData.ToDate)\n\n\n    let breadCrumbDataDate = convertDateValuetoString(this.props.Login.masterData && this.props.Login.masterData.FromDate, this.props.Login.masterData && this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n    const breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": breadCrumbDataDate.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": breadCrumbDataDate.breadCrumbto\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster //formatMessage={this.props.intl.formatMessage}\n    , {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_GOODSIN\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.GoodsInList,\n      getMasterDetail: goodsIn => this.props.getGoodsInDetail(goodsIn, fromDate, toDate, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedGoodsIn,\n      primaryKeyField: \"nrmsno\",\n      mainField: \"suserfullname\",\n      firstField: \"nrmsno\",\n      secondField: \"sdisplaystatus\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      hidePaging: false,\n      addId: addId,\n      openModal: () => this.props.getGoodsInComboService(addParam),\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      needAccordianFilter: false,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      filterComponent: [{\n        \"IDS_FILTER\": /*#__PURE__*/React.createElement(DateFilter, {\n          selectedRecord: this.state.selectedRecord || {},\n          handleDateChange: this.handleDateChange,\n          fromDate: fromDate,\n          toDate: toDate,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 45\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.GoodsInList && this.props.Login.masterData.GoodsInList.length > 0 && this.props.Login.masterData.SelectedGoodsIn ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 49\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.nrmsno), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"text-muted font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${goodsInStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.Login.masterData.SelectedGoodsIn.sdisplaystatus,\n      message: this.props.Login.masterData.SelectedGoodsIn.sdisplaystatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 69\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editgoodsin\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: () => this.props.getGoodsInComboService({ ...editParam,\n        primaryKeyValue: this.props.Login.masterData.SelectedGoodsIn.nrmsno,\n        fromDate,\n        toDate\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deletegoodsin\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      className: \"btn btn-circle outline-grey mr-2\" //    data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete({ ...deleteParam\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"d-flex justify-content-end dropdown badget_menu icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(receiveId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RECEIVEDGOODS\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.deleteOrReceiveRecord({ ...receiveParam\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(GoodsReceivedIcon, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      name: \"goodsreceivedicon\" //title={this.props.intl.formatMessage({ id: \"IDS_RECEIVEDGOODS\" })} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 73\n      }\n    }))), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"printbarcode\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PRINTBARCODE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(printBarcodeId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: () => this.props.getGoodsInPrinterComboService({\n        selectedGoodsIn: this.props.Login.masterData.SelectedGoodsIn,\n        ncontrolcode: printBarcodeId,\n        userInfo: this.props.Login.userInfo\n      }) // onClick={this.props.showUnderDevelopment}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPrint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 69\n      }\n    }))))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_RECIPIENT\",\n      message: \"Recipient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.suserfullname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DEPARTMENT\",\n      message: \"Division\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.sdeptname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MANUFACTURER\",\n      message: \"Manufacturer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.smanufname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_NOOFPACKAGES\",\n      message: \"No. Of Packages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.nnoofpackages))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_GOODSINDATE\",\n      message: \"GoodsIn Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.sgoodsindate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TIMEZONE\",\n      message: \"Time Zone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.stzgoodsindate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_OUTOFHOURS\",\n      message: \"Out Of Hours\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.soutofhours))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_RECEIVEDDATETIME\",\n      message: \"Received Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.sreceiveddate === null || this.props.Login.masterData.SelectedGoodsIn.sreceiveddate.length === 0 ? '-' : this.props.Login.masterData.SelectedGoodsIn.sreceiveddate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COURIERCARRIER\",\n      message: \"Courier\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.ncouriercode === -1 ? '-' : this.props.Login.masterData.SelectedGoodsIn.scouriername))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CONSIGNMENTNO\",\n      message: \"Consignment No.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.sconsignmentno === null || this.props.Login.masterData.SelectedGoodsIn.sconsignmentno.length === 0 ? '-' : this.props.Login.masterData.SelectedGoodsIn.sconsignmentno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SECURITYREFNO\",\n      message: \"Security Ref No.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.ssecurityrefno === null || this.props.Login.masterData.SelectedGoodsIn.ssecurityrefno.length === 0 ? '-' : this.props.Login.masterData.SelectedGoodsIn.ssecurityrefno))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COMMENTS\",\n      message: \"Comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedGoodsIn.scomments === null || this.props.Login.masterData.SelectedGoodsIn.scomments.length === 0 ? '-' : this.props.Login.masterData.SelectedGoodsIn.scomments)))), /*#__PURE__*/React.createElement(SampleReceivingTabs, {\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      userInfo: this.props.Login.userInfo,\n      masterData: this.props.Login.masterData,\n      crudMaster: this.props.crudMaster,\n      errorCode: this.props.Login.errorCode,\n      masterStatus: this.props.Login.masterStatus,\n      openChildModal: this.props.Login.openChildModal,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.props.Login.selectedRecord,\n      getChainCustodyComboDataService: this.props.getChainCustodyComboDataService,\n      ncontrolCode: this.props.Login.ncontrolCode,\n      userRoleControlRights: this.state.userRoleControlRights,\n      esignRights: this.props.Login.userRoleControlRights,\n      screenData: this.props.Login.screenData,\n      validateEsignCredential: this.props.validateEsignCredential,\n      loadEsign: this.props.Login.loadEsign,\n      controlMap: this.state.controlMap,\n      selectedId: this.props.Login.selectedId,\n      fromDate: fromDate,\n      toDate: toDate,\n      dataState: this.props.Login.dataState,\n      timeZoneList: this.props.Login.timeZoneList || [],\n      currentTime: this.props.Login.currentTime,\n      settings: this.props.Login.settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 49\n      }\n    }))) : \"\"))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.Login.operation === \"printer\" ? this.onSavePrinterClick : this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      showSaveContinue: this.state.showSaveContinue,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.operation === \"printer\" ? [{\n        \"idsName\": \"IDS_PRINTER\",\n        \"dataField\": \"sprintername\"\n      }] : mandatoryFields,\n      buttonLabel: this.props.Login.operation === \"printer\" ? \"print\" : undefined,\n      loginoperation: this.props.Login.operation === \"printer\" ? true : false,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 29\n        }\n      }) : this.props.Login.operation === \"printer\" ? /*#__PURE__*/React.createElement(AddPrinter, {\n        printer: this.props.Login.printerList,\n        selectedPrinterData: this.state.selectedRecord || {},\n        PrinterChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(AddGoodsIn, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        manufacturerList: this.props.Login.manufacturerList || [],\n        courierList: this.props.Login.courierList || [],\n        recipientList: this.props.Login.recipientList || [],\n        timeZoneList: this.props.Login.timeZoneList || [],\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const filterData = this.generateBreadCrumData();\n      this.setState({\n        filterData\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = []; //let selectedRecord = this.state.selectedRecord\n    //  let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\n\n    if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\n      //let obj = this.convertDatetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate);\n      let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n      breadCrumbData.push({\n        \"label\": \"IDS_FROM\",\n        \"value\": obj.breadCrumbFrom\n      }, {\n        \"label\": \"IDS_TO\",\n        \"value\": obj.breadCrumbto\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n  // convertDatetoString(startDateValue, endDateValue) {\n  //     const startDate = startDateValue ? new Date(startDateValue) : new Date();\n  //     const endDate = endDateValue ? new Date(endDateValue) : new Date();\n  //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n  //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\n  //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n  //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\n  //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\n  //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\n  //     const fromDate = fromDateOnly + \"T00:00:00\";\n  //     const toDate = toDateOnly + \"T23:59:59\";\n  //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\n  // }\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getGoodsInPrinterComboService,\n  getGoodsInDetail,\n  getGoodsInComboService,\n  getChainCustodyComboDataService,\n  filterColumnData,\n  showUnderDevelopment,\n  reloadGoodsIn\n})(injectIntl(SampleReceiving));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/goodsin/SampleReceiving.jsx"],"names":["React","connect","injectIntl","FormattedMessage","toast","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faPrint","showUnderDevelopment","callService","crudMaster","validateEsignCredential","updateStore","getGoodsInDetail","getGoodsInPrinterComboService","getGoodsInComboService","getChainCustodyComboDataService","filterColumnData","reloadGoodsIn","showEsign","getControlMap","formatInputDate","convertDateValuetoString","rearrangeDateFormat","ListMaster","SlideOutModal","SampleReceivingTabs","Esign","DEFAULT_RETURN","AddGoodsIn","transactionStatus","BreadcrumbComponent","ListWrapper","ConfirmMessage","ReadOnlyText","ContentPanel","DateFilter","AddPrinter","Affix","mapStateToProps","state","Login","SampleReceiving","Component","constructor","props","ConfirmDelete","deleteParam","confirmMessage","confirm","intl","formatMessage","id","deleteOrReceiveRecord","openFilter","showFilter","updateInfo","typeName","data","closeFilter","closeModal","loadEsign","openModal","selectedRecord","userInfo","operation","selectedId","onComboChange","comboData","fieldName","recipientList","map","dataItem","value","item","sdeptname","label","setState","onNumericInputOnChange","name","onInputOnChange","event","target","type","checked","ACTIVE","DEACTIVE","YES","NO","handleDateChange","dateName","dateValue","onFilterSubmit","reloadData","isFilterSubmit","searchRef","current","fromDate","masterData","FromDate","toDate","ToDate","undefined","obj","inputParam","inputData","currentDate","classUrl","methodUrl","displayName","onSaveClick","saveType","formRef","warn","ncontrolCode","postParam","inputListName","selectedObject","primaryKeyField","unchangeList","JSON","parse","stringify","ntranssitecode","NA","goodsInDate","esignNeeded","userRoleControlRights","nformcode","screenData","screenName","currentTime","stimezoneid","ntimezonecode","onSavePrinterClick","nrmsno","dataToPrint","sprintername","userinfo","ncontrolcode","ntransactionstatus","GOODS_RECEIVED","message","validUser","nrecipientcode","nusercode","primaryKeyValue","fetchUrl","fecthInputObject","validateEsign","sreason","nreasoncode","spredefinedreason","password","masterStatus","error","selectedGoodsIn","controlMap","Map","showSaveContinue","createRef","searchFieldList","getDerivedStateFromProps","render","goodsInStatusCSS","SelectedGoodsIn","addId","has","get","editId","deleteId","receiveId","printBarcodeId","addParam","primaryeyField","editParam","receiveParam","filterParam","mandatoryFields","push","breadCrumbDataDate","breadCrumbData","breadCrumbFrom","breadCrumbto","length","searchedData","GoodsInList","goodsIn","sdisplaystatus","float","indexOf","suserfullname","smanufname","nnoofpackages","sgoodsindate","stzgoodsindate","soutofhours","sreceiveddate","ncouriercode","scouriername","sconsignmentno","ssecurityrefno","scomments","errorCode","openChildModal","dataState","timeZoneList","settings","printerList","manufacturerList","courierList","componentDidUpdate","previousProps","Object","values","filterData","generateBreadCrumData","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faPrint } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    showUnderDevelopment,\r\n    callService, crudMaster, validateEsignCredential, updateStore, getGoodsInDetail, getGoodsInPrinterComboService,\r\n    getGoodsInComboService, getChainCustodyComboDataService, filterColumnData,reloadGoodsIn\r\n} from '../../actions';\r\nimport { showEsign, getControlMap, formatInputDate,  convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport SampleReceivingTabs from './SampleReceivingTabs';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport AddGoodsIn from './AddGoodsIn';\r\n//import SampleReceivingFilter from './SampleReceivingFilter';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport { ReactComponent as GoodsReceivedIcon } from '../../assets/image/goods-received.svg';\r\nimport DateFilter from '../../components/DateFilter';\r\nimport AddPrinter from '../registration/AddPrinter';\r\nimport { Affix } from 'rsuite';\r\n// import ReactTooltip from 'react-tooltip';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass SampleReceiving extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            selectedGoodsIn: undefined,\r\n            screenName: undefined,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showSaveContinue: true\r\n        };\r\n        // this.breadCrumbData = [];\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.searchFieldList = [\"nnoofpackages\", \"nrecipientcode\", \"nrmsno\", \"scomments\",\r\n            \"sconsignmentno\", \"scouriername\", \"sdeptname\",\r\n            \"sdisplaystatus\", \"sgoodsindate\", \"smanufname\",\r\n            \"soutofhours\", \"sreceiveddate\", \"ssecurityrefno\", \"stzgoodsindate\",\r\n            \"suserfullname\"];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        // if (props.Login.masterStatus !== \"\") {\r\n        //     if (props.screenName === \"IDS_GOODSIN\") {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let goodsInStatusCSS = \"\";\r\n        if (this.props.Login.masterData.SelectedGoodsIn && this.props.Login.masterData.SelectedGoodsIn.ntransactionstatus === 15) {\r\n            goodsInStatusCSS = \"outline-secondary\";\r\n        }\r\n        else if (this.props.Login.masterData.SelectedGoodsIn && this.props.Login.masterData.SelectedGoodsIn.ntransactionstatus === 16) {\r\n            goodsInStatusCSS = \"outline-success\";\r\n        }\r\n\r\n        const addId = this.state.controlMap.has(\"AddGoodsIn\") && this.state.controlMap.get(\"AddGoodsIn\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditGoodsIn\") && this.state.controlMap.get(\"EditGoodsIn\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteGoodsIn\") && this.state.controlMap.get(\"DeleteGoodsIn\").ncontrolcode\r\n        const receiveId = this.state.controlMap.has(\"ReceiveGoodsIn\") && this.state.controlMap.get(\"ReceiveGoodsIn\").ncontrolcode\r\n        const printBarcodeId = this.state.controlMap.has(\"PrintBarcode\") ? this.state.controlMap.get(\"PrintBarcode\").ncontrolcode : -1;\r\n\r\n        const addParam = {\r\n            screenName: \"IDS_GOODSIN\", primaryeyField: \"nrmsno\",\r\n            primaryKeyValue: undefined, operation: \"create\", inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: addId\r\n        };\r\n\r\n\r\n        const editParam = {\r\n            screenName: \"IDS_GOODSIN\", operation: \"update\", primaryKeyField: \"nrmsno\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: editId\r\n        };\r\n\r\n        const deleteParam = { screenName: \"IDS_GOODSIN\", methodUrl: \"GoodsIn\", operation: \"delete\", selectedRecord: this.props.Login.masterData.SelectedGoodsIn, ncontrolCode: deleteId };\r\n        const receiveParam = {\r\n            screenName: \"IDS_GOODSIN\", methodUrl: \"GoodsIn\", selectedRecord: this.props.Login.masterData.SelectedGoodsIn,\r\n            operation: \"receive\", ncontrolCode: receiveId\r\n        };\r\n\r\n        // let obj = this.convertDatetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n        //     this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\r\n        let obj = convertDateValuetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n                                            this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate),\r\n                                            this.props.Login.userInfo)\r\n       \r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n\r\n        const filterParam = {\r\n            inputListName: \"GoodsInList\",\r\n            selectedObject: \"SelectedGoodsIn\",\r\n            primaryKeyField: \"nrmsno\",\r\n            fetchUrl: \"goodsin/getGoodsIn\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo, fromDate, toDate },\r\n            masterData: this.props.Login.masterData,\r\n            unchangeList: [\"FromDate\", \"ToDate\"],\r\n            searchFieldList: this.searchFieldList\r\n        }\r\n        const mandatoryFields = [{ \"idsName\": \"IDS_MANUFACTURER\", \"dataField\": \"nmanufcode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_RECIPIENT\", \"dataField\": \"nrecipientcode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_NOOFPACKAGES\", \"dataField\": \"nnoofpackages\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_GOODSINDATE\", \"dataField\": \"dgoodsindate\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntzgoodsindate\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }];\r\n\r\n        if (this.state.selectedRecord[\"noutofhours\"] === transactionStatus.YES) {\r\n            mandatoryFields.push({ \"idsName\": \"IDS_SECURITYREFNO\", \"dataField\": \"ssecurityrefno\"  , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"});\r\n        }\r\n        //let breadCrumbDataDate = this.convertDatetoString(this.props.Login.masterData && this.props.Login.masterData.FromDate, this.props.Login.masterData && this.props.Login.masterData.ToDate)\r\n        let breadCrumbDataDate = convertDateValuetoString(this.props.Login.masterData && this.props.Login.masterData.FromDate, \r\n                        this.props.Login.masterData && this.props.Login.masterData.ToDate,\r\n                        this.props.Login.userInfo)\r\n        \r\n        const breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": breadCrumbDataDate.breadCrumbFrom\r\n            },\r\n            {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": breadCrumbDataDate.breadCrumbto\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n\r\n                    {/* <div className=\"client-listing-wrap mtop-4\"> */}\r\n                    {/* Start of get display*/}\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster //formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_GOODSIN\" })}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.GoodsInList}\r\n                                getMasterDetail={(goodsIn) => this.props.getGoodsInDetail(goodsIn, fromDate, toDate,\r\n                                    this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedGoodsIn}\r\n                                primaryKeyField=\"nrmsno\"\r\n                                mainField=\"suserfullname\"\r\n                                firstField=\"nrmsno\"\r\n                                secondField=\"sdisplaystatus\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                hidePaging={false}\r\n                                addId={addId}\r\n                                openModal={() => this.props.getGoodsInComboService(addParam)}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                needAccordianFilter={false}\r\n\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n\r\n\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\":\r\n                                            <DateFilter\r\n                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                handleDateChange={this.handleDateChange}\r\n                                                fromDate={fromDate}\r\n                                                toDate={toDate}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.GoodsInList && this.props.Login.masterData.GoodsInList.length > 0 && this.props.Login.masterData.SelectedGoodsIn ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                <Card.Title className=\"product-title-main\">{this.props.Login.masterData.SelectedGoodsIn.nrmsno}</Card.Title>\r\n                                                <Card.Subtitle className=\"text-muted font-weight-normal\">\r\n                                                    <Row>\r\n                                                        <Col md={10} className=\"d-flex\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                                <span className={`btn btn-outlined ${goodsInStatusCSS} btn-sm ml-3`}>\r\n                                                                    {/* <i class=\"fas fa-check \"></i>  */}\r\n                                                                    <FormattedMessage id={this.props.Login.masterData.SelectedGoodsIn.sdisplaystatus} message={this.props.Login.masterData.SelectedGoodsIn.sdisplaystatus} />\r\n                                                                </span>\r\n                                                            </h2>\r\n                                                        </Col>\r\n                                                        <Col md={2}>\r\n                                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                            <div className=\"d-flex product-category\" style={{ float: \"right\" }}>\r\n\r\n                                                                <Nav.Link name=\"editgoodsin\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                  //  data-for=\"tooltip_list_wrap\"\r\n                                                                    className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    onClick={() => this.props.getGoodsInComboService({ ...editParam, primaryKeyValue: this.props.Login.masterData.SelectedGoodsIn.nrmsno, fromDate, toDate })}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link name=\"deletegoodsin\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                //    data-for=\"tooltip_list_wrap\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    onClick={() => this.ConfirmDelete({ ...deleteParam })}>\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                    {/* <ConfirmDialog\r\n                                                                            name=\"deleteMessage\"\r\n                                                                            message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                            doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                            doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                            icon={faTrashAlt}\r\n                                                                            // title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                            handleClickDelete={() => this.deleteOrReceiveRecord({ ...deleteParam })}\r\n                                                                        /> */}\r\n                                                                </Nav.Link>\r\n                                                                <ContentPanel className=\"d-flex justify-content-end dropdown badget_menu icon-group-wrap\">\r\n                                                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(receiveId) === -1}\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_RECEIVEDGOODS\" })}\r\n                                                                     //   data-for=\"tooltip_list_wrap\"\r\n                                                                        onClick={() => this.deleteOrReceiveRecord({ ...receiveParam })}>\r\n                                                                        {/* <Image src={checkedIcon} alt=\"filer-icon\" width=\"20\" height=\"20\" /> */}\r\n                                                                        <GoodsReceivedIcon className=\"custom_icons\" width=\"20\" height=\"20\"\r\n                                                                            name=\"goodsreceivedicon\"\r\n                                                                            //title={this.props.intl.formatMessage({ id: \"IDS_RECEIVEDGOODS\" })} \r\n                                                                            />\r\n                                                                    </Nav.Link>\r\n\r\n                                                                </ContentPanel>\r\n                                                                <Nav.Link name=\"printbarcode\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_PRINTBARCODE\" })}\r\n                                                                 //   data-for=\"tooltip_list_wrap\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(printBarcodeId) === -1}\r\n                                                                    className=\"btn btn-circle outline-grey mr-2\"\r\n\r\n                                                                    onClick={() => this.props.getGoodsInPrinterComboService({\r\n                                                                        selectedGoodsIn: this.props.Login.masterData.SelectedGoodsIn,\r\n                                                                        ncontrolcode: printBarcodeId,\r\n                                                                        userInfo: this.props.Login.userInfo\r\n                                                                    })}\r\n                                                                    // onClick={this.props.showUnderDevelopment}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faPrint} />\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n                                                            {/* </Tooltip> */}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body className='form-static-wrap'>\r\n                                                {/* <Card.Text> */}\r\n                                                <Row>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_RECIPIENT\" message=\"Recipient\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedGoodsIn.suserfullname}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_DEPARTMENT\" message=\"Division\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedGoodsIn.sdeptname}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_MANUFACTURER\" message=\"Manufacturer\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedGoodsIn.smanufname}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_NOOFPACKAGES\" message=\"No. Of Packages\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedGoodsIn.nnoofpackages}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_GOODSINDATE\" message=\"GoodsIn Date\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedGoodsIn.sgoodsindate}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TIMEZONE\" message=\"Time Zone\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedGoodsIn.stzgoodsindate}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_OUTOFHOURS\" message=\"Out Of Hours\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedGoodsIn.soutofhours}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_RECEIVEDDATETIME\" message=\"Received Date\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedGoodsIn.sreceiveddate === null || this.props.Login.masterData.SelectedGoodsIn.sreceiveddate.length === 0\r\n                                                                    ? '-' : this.props.Login.masterData.SelectedGoodsIn.sreceiveddate}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_COURIERCARRIER\" message=\"Courier\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedGoodsIn.ncouriercode === -1 ? '-' : this.props.Login.masterData.SelectedGoodsIn.scouriername}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_CONSIGNMENTNO\" message=\"Consignment No.\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n\r\n                                                                {this.props.Login.masterData.SelectedGoodsIn.sconsignmentno === null || this.props.Login.masterData.SelectedGoodsIn.sconsignmentno.length === 0\r\n                                                                    ? '-' : this.props.Login.masterData.SelectedGoodsIn.sconsignmentno}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_SECURITYREFNO\" message=\"Security Ref No.\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedGoodsIn.ssecurityrefno === null || this.props.Login.masterData.SelectedGoodsIn.ssecurityrefno.length === 0\r\n                                                                    ? '-' : this.props.Login.masterData.SelectedGoodsIn.ssecurityrefno}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_COMMENTS\" message=\"Comments\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                                {this.props.Login.masterData.SelectedGoodsIn.scomments === null || this.props.Login.masterData.SelectedGoodsIn.scomments.length === 0\r\n                                                                    ? '-' : this.props.Login.masterData.SelectedGoodsIn.scomments}\r\n                                                            </ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {/* </Card.Text> */}\r\n\r\n                                                <SampleReceivingTabs\r\n                                                    operation={this.props.Login.operation}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    screenName={this.props.Login.screenName}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    crudMaster={this.props.crudMaster}\r\n                                                    errorCode={this.props.Login.errorCode}\r\n                                                    masterStatus={this.props.Login.masterStatus}\r\n                                                    openChildModal={this.props.Login.openChildModal}\r\n                                                    updateStore={this.props.updateStore}\r\n                                                    selectedRecord={this.props.Login.selectedRecord}\r\n                                                    getChainCustodyComboDataService={this.props.getChainCustodyComboDataService}\r\n                                                    ncontrolCode={this.props.Login.ncontrolCode}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    esignRights={this.props.Login.userRoleControlRights}\r\n                                                    screenData={this.props.Login.screenData}\r\n                                                    validateEsignCredential={this.props.validateEsignCredential}\r\n                                                    loadEsign={this.props.Login.loadEsign}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    selectedId={this.props.Login.selectedId}\r\n                                                    fromDate={fromDate}\r\n                                                    toDate={toDate}\r\n                                                    dataState={this.props.Login.dataState}\r\n                                                    timeZoneList={this.props.Login.timeZoneList || []}\r\n                                                    currentTime={this.props.Login.currentTime}\r\n                                                    settings = {this.props.Login.settings}\r\n                                                />\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* </div> */}\r\n                </ListWrapper>\r\n                {/* End of get display*/}\r\n\r\n                {/* Start of Modal Sideout*/}\r\n                {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.props.Login.operation === \"printer\" ?\r\n                            this.onSavePrinterClick : this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        showSaveContinue={this.state.showSaveContinue}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === \"printer\" ?\r\n                            [{ \"idsName\": \"IDS_PRINTER\", \"dataField\": \"sprintername\" }]\r\n                            : mandatoryFields}\r\n                        buttonLabel = { this.props.Login.operation === \"printer\" ?\"print\":undefined}\r\n                        loginoperation = { this.props.Login.operation === \"printer\" ? true : false }\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.operation === \"printer\" ?\r\n                                <AddPrinter\r\n                                    printer={this.props.Login.printerList}\r\n                                    selectedPrinterData={this.state.selectedRecord || {}}\r\n                                    PrinterChange={this.onComboChange}\r\n                                />\r\n                                : <AddGoodsIn\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    handleDateChange={this.handleDateChange}\r\n                                    operation={this.props.Login.operation}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    manufacturerList={this.props.Login.manufacturerList || []}\r\n                                    courierList={this.props.Login.courierList || []}\r\n                                    recipientList={this.props.Login.recipientList || []}\r\n                                    timeZoneList={this.props.Login.timeZoneList || []}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    currentTime={this.props.Login.currentTime}\r\n                                />}\r\n                    /> : \"\"}\r\n                {/* End of Modal Sideout for GoodsIn Creation */}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n            this.setState({ filterData });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    ConfirmDelete = (deleteParam) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteOrReceiveRecord(deleteParam));\r\n    };\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        //let selectedRecord = this.state.selectedRecord\r\n       //  let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\r\n          \r\n       if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\r\n            //let obj = this.convertDatetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate);\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, \r\n                                               this.props.Login.masterData.ToDate,\r\n                                               this.props.Login.userInfo);         \r\n            \r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_FROM\",\r\n                    \"value\": obj.breadCrumbFrom\r\n                },\r\n                {\r\n                    \"label\": \"IDS_TO\",\r\n                    \"value\": obj.breadCrumbto\r\n                },\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n\r\n        if (selectedRecord[\"sgoodsindate\"])\r\n            selectedRecord[\"dgoodsindate\"] = rearrangeDateFormat(this.props.Login.userInfo, selectedRecord[\"sgoodsindate\"]);\r\n\r\n        let operation = this.props.Login.operation;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"receive\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null, operation: operation }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n\r\n        if (fieldName === \"nrecipientcode\") {\r\n            if (comboData === null) {\r\n                selectedRecord[\"sdeptname\"] = \"\";\r\n                //selectedRecord[\"sdeptcode\"] = 0;\r\n            }\r\n            else {\r\n                this.props.Login.recipientList.map(dataItem => {\r\n                    if (dataItem.value === comboData.value) {\r\n                        selectedRecord[\"sdeptname\"] = dataItem.item.sdeptname\r\n                        //selectedRecord[\"ndeptcode\"] = dataItem.item.ndeptcode;\r\n                    }\r\n                    return null;\r\n                })\r\n            }\r\n        }\r\n        else if (fieldName === \"ntzgoodsindate\") {\r\n            if (comboData === null) {\r\n                selectedRecord[\"ntzgoodsindate\"] = 0;\r\n                selectedRecord[\"stzgoodsindate\"] = \"\";\r\n            }\r\n            else {\r\n                selectedRecord[\"stzgoodsindate\"] = comboData.label;\r\n            }\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.reloadData(true);\r\n    }\r\n\r\n    reloadData = (isFilterSubmit) => {\r\n       \r\n        this.searchRef.current.value = \"\";\r\n        // let obj = this.convertDatetoString(selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n        //     selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\r\n    \r\n        let fromDate = this.props.Login.masterData.FromDate;\r\n        let toDate = this.props.Login.masterData.ToDate;\r\n        if (isFilterSubmit) {\r\n            let selectedRecord = this.state.selectedRecord || {};\r\n            if (selectedRecord && selectedRecord[\"fromdate\"] !== undefined) {\r\n                fromDate = selectedRecord[\"fromdate\"];\r\n            }\r\n            if (selectedRecord && selectedRecord[\"todate\"] !== undefined) {\r\n                toDate = selectedRecord[\"todate\"];\r\n            }\r\n        }\r\n        //let obj = this.convertDatetoString(fromDate, toDate); \r\n        let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);   \r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate: obj.fromDate,\r\n                toDate: obj.toDate,\r\n                currentDate:null\r\n                //currentdate: isDateChange === true ? null : formatInputDate(new Date(), true)\r\n            },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"GoodsIn\",\r\n            displayName: \"IDS_GOODSIN\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        //this.props.callService(inputParam);\r\n        this.props.reloadGoodsIn(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        if (this.state.selectedRecord[\"nnoofpackages\"] <= 0) {\r\n            return (toast.warn(this.props.intl.formatMessage({ id: \"IDS_ENTERTHEPACKAGEGREATERTHANZERO\" })));\r\n        }\r\n        let inputData = [];\r\n        inputData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        // let obj = this.convertDatetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n        //     this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\r\n         let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate,this.props.Login.userInfo);\r\n      \r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        inputData[\"fromDate\"] = fromDate;\r\n        inputData[\"toDate\"] = toDate;\r\n\r\n        let postParam = undefined;\r\n\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"GoodsInList\", selectedObject: \"SelectedGoodsIn\", primaryKeyField: \"nrmsno\", unchangeList: [\"FromDate\", \"ToDate\"] };\r\n            inputData[\"goodsin\"] = JSON.parse(JSON.stringify(this.props.Login.selectedRecord));\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"goodsin\"] = { \"nsitecode\": this.props.Login.userInfo.ntranssitecode };\r\n        }\r\n\r\n        inputData[\"goodsin\"][\"noutofhours\"] = this.state.selectedRecord[\"noutofhours\"] ? this.state.selectedRecord[\"noutofhours\"] : transactionStatus.NO;\r\n        inputData[\"goodsin\"][\"nmanufcode\"] = this.state.selectedRecord[\"nmanufcode\"] ? this.state.selectedRecord[\"nmanufcode\"].value : -1;\r\n        inputData[\"goodsin\"][\"nrecipientcode\"] = this.state.selectedRecord[\"nrecipientcode\"] ? this.state.selectedRecord[\"nrecipientcode\"].value : -1;\r\n        //inputData[\"goodsin\"][\"ndeptcode\"] = this.state.selectedRecord[\"ndeptcode\"] ? this.state.selectedRecord[\"ndeptcode\"] : -1;\r\n        inputData[\"goodsin\"][\"ncouriercode\"] = this.state.selectedRecord[\"ncouriercode\"] ? this.state.selectedRecord[\"ncouriercode\"].value : transactionStatus.NA;\r\n        inputData[\"goodsin\"][\"sconsignmentno\"] = this.state.selectedRecord[\"sconsignmentno\"] || \"\";\r\n        inputData[\"goodsin\"][\"dgoodsindate\"] = this.state.selectedRecord[\"dgoodsindate\"];\r\n        inputData[\"goodsin\"][\"nnoofpackages\"] = this.state.selectedRecord[\"nnoofpackages\"];\r\n        inputData[\"goodsin\"][\"ssecurityrefno\"] = this.state.selectedRecord[\"ssecurityrefno\"] || \"\";\r\n        inputData[\"goodsin\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] || \"\";\r\n        inputData[\"goodsin\"][\"ntzgoodsindate\"] = this.state.selectedRecord[\"ntzgoodsindate\"] ? this.state.selectedRecord[\"ntzgoodsindate\"].value : 1;\r\n        inputData[\"goodsin\"][\"stzgoodsindate\"] = this.state.selectedRecord[\"stzgoodsindate\"] || \"\";\r\n\r\n        const goodsInDate = inputData[\"goodsin\"][\"dgoodsindate\"];\r\n\r\n        //need this conversion when the datatype of the field is 'Instant'\r\n        inputData[\"goodsin\"][\"dgoodsindate\"] = formatInputDate(goodsInDate, false);\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"GoodsIn\",\r\n            displayName: \"IDS_GOODSIN\",\r\n            inputData: inputData, postParam, searchRef: this.searchRef,\r\n            operation: this.props.Login.operation, saveType, formRef\r\n        }\r\n      \r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: \"IDS_GOODSIN\",\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n\r\n            const selectedRecord = {\r\n                \"dgoodsindate\": this.props.Login.currentTime,//new Date(),\r\n                \"stzgoodsindate\": this.props.Login.userInfo.stimezoneid,\r\n                \"ntzgoodsindate\": { \"value\": this.props.Login.userInfo.ntimezonecode, \"label\": this.props.Login.userInfo.stimezoneid },\r\n            };\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\r\n        }\r\n    }\r\n\r\n    onSavePrinterClick = () => {\r\n        const inputParam = {\r\n            classUrl: 'barcode',\r\n            methodUrl: 'Barcode',\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                nrmsno: this.props.Login.dataToPrint,\r\n                sprintername: this.state.selectedRecord.sprintername ?\r\n                    this.state.selectedRecord.sprintername.value : '',\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontrolcode: this.props.Login.ncontrolcode\r\n            },\r\n            operation: 'printer'\r\n        };\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: 'printer'\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    deleteOrReceiveRecord = (deleteParam) => {\r\n\r\n        if (deleteParam.selectedRecord.ntransactionstatus === transactionStatus.GOODS_RECEIVED) {\r\n            let message = \"IDS_CANNOTDELETERECIVEDGOODS\";\r\n            if (deleteParam.operation === \"receive\") {\r\n                message = \"IDS_GOODSALREADYRECEIVED\";\r\n            }\r\n            toast.warn(this.props.intl.formatMessage({ id: message }));\r\n        }\r\n        else {\r\n            let validUser = true;\r\n            if (deleteParam.operation === \"receive\" && deleteParam.selectedRecord.nrecipientcode !== this.props.Login.userInfo.nusercode) {\r\n                validUser = false;\r\n            }\r\n\r\n            if (validUser) {\r\n                // let obj = this.convertDatetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n                //     this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\r\n                \r\n                let obj = convertDateValuetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n                                                    this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate),\r\n                                                    this.props.Login.userInfo)\r\n                   \r\n                let fromDate = obj.fromDate;\r\n                let toDate = obj.toDate;\r\n\r\n                const postParam = {\r\n                    inputListName: \"GoodsInList\", selectedObject: \"SelectedGoodsIn\",\r\n                    primaryKeyField: \"nrmsno\",\r\n                    primaryKeyValue: deleteParam.selectedRecord.nrmsno,\r\n                    fetchUrl: \"goodsin/getGoodsIn\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo, fromDate, toDate },\r\n                    unchangeList: [\"FromDate\", \"ToDate\"]\r\n                }\r\n\r\n                const inputParam = {\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    methodUrl: \"GoodsIn\",\r\n                    displayName: \"IDS_GOODSIN\",\r\n                    inputData: {\r\n                        \"ncontrolcode\": deleteParam.ncontrolCode,\r\n                        \"goodsin\": deleteParam.selectedRecord,\r\n                        fromDate, toDate,\r\n                        \"userinfo\": this.props.Login.userInfo\r\n                    },\r\n                    operation: deleteParam.operation, postParam\r\n                }\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: \"IDS_GOODSIN\",\r\n                            operation: deleteParam.operation, selectedId: deleteParam.selectedRecord.nrmsno\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                }\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INVALIDUSERTORECEIVE\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    // convertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = startDateValue ? new Date(startDateValue) : new Date();\r\n    //     const endDate = endDateValue ? new Date(endDateValue) : new Date();\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getGoodsInPrinterComboService,\r\n    getGoodsInDetail, getGoodsInComboService, getChainCustodyComboDataService, filterColumnData,\r\n    showUnderDevelopment, reloadGoodsIn\r\n})(injectIntl(SampleReceiving));\r\n\r\n"]},"metadata":{},"sourceType":"module"}