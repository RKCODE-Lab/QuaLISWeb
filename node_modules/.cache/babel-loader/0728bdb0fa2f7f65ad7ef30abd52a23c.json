{"ast":null,"code":"import React from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';var AddInstrumentSection=function AddInstrumentSection(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_SECTION\"}),isSearchable:true,name:\"nsectioncode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.Lab,optionId:\"nsectioncode\",optionValue:\"ssectionname\",disableSearch:false,value:props.selectedRecord[\"nsectioncode\"],defaultValue:props.selectedRecord[\"nsectioncode\"],onChange:function onChange(event){return props.onComboChange(event,\"nsectioncode\",2);},closeMenuOnSelect:true,alphabeticalSort:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_INCHARGE\"}),isSearchable:true,name:\"nusercode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.Users||[]// optionId='nusercode'\n// optionValue='susername'\n//disableSearch={false}\n,value:props.selectedRecord[\"nusercode\"]||\"\"// defaultValue={props.selectedRecord[\"SectionUsers\"]}\n,onChange:function onChange(event){return props.onComboChange(event,\"nusercode\",1);},closeMenuOnSelect:true,alphabeticalSort:true})));};export default injectIntl(AddInstrumentSection);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/instrumentmanagement/AddInstrumentSection.jsx"],"names":["React","FormSelectSearch","injectIntl","Row","Col","AddInstrumentSection","props","intl","formatMessage","id","Lab","selectedRecord","event","onComboChange","Users"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CAKA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,CACpC,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,SAAS,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,aAAN,CAAzB,CADf,CAEI,YAAY,CAAE,IAFlB,CAGI,IAAI,CAAE,cAHV,CAII,UAAU,CAAE,KAJhB,CAKI,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CALjB,CAMI,WAAW,CAAE,IANjB,CAOI,WAAW,CAAE,KAPjB,CAQI,OAAO,CAAEH,KAAK,CAACI,GARnB,CASI,QAAQ,CAAC,cATb,CAUI,WAAW,CAAC,cAVhB,CAWI,aAAa,CAAE,KAXnB,CAYI,KAAK,CAAEJ,KAAK,CAACK,cAAN,CAAqB,cAArB,CAZX,CAaI,YAAY,CAAEL,KAAK,CAACK,cAAN,CAAqB,cAArB,CAblB,CAcI,QAAQ,CAAE,kBAACC,KAAD,QAAWN,CAAAA,KAAK,CAACO,aAAN,CAAoBD,KAApB,CAA2B,cAA3B,CAA2C,CAA3C,CAAX,EAdd,CAeI,iBAAiB,CAAE,IAfvB,CAgBI,gBAAgB,CAAE,IAhBtB,EADJ,cAqBI,oBAAC,gBAAD,EACI,SAAS,CAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,cAAN,CAAzB,CADf,CAEI,YAAY,CAAE,IAFlB,CAGI,IAAI,CAAE,WAHV,CAII,UAAU,CAAE,KAJhB,CAKI,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CALjB,CAMI,WAAW,CAAE,IANjB,CAOI,WAAW,CAAE,KAPjB,CAQI,OAAO,CAAEH,KAAK,CAACQ,KAAN,EAAe,EACxB;AACA;AACA;AAXJ,CAYI,KAAK,CAAER,KAAK,CAACK,cAAN,CAAqB,WAArB,GAAqC,EAC7C;AAbH,CAcI,QAAQ,CAAE,kBAACC,KAAD,QAAWN,CAAAA,KAAK,CAACO,aAAN,CAAoBD,KAApB,CAA2B,WAA3B,CAAwC,CAAxC,CAAX,EAdd,CAeI,iBAAiB,CAAE,IAfvB,CAgBI,gBAAgB,CAAE,IAhBtB,EArBJ,CADJ,CADJ,CA4CH,CA7CD,CA+CA,cAAeV,CAAAA,UAAU,CAACG,oBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nconst AddInstrumentSection = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                    isSearchable={true}\r\n                    name={\"nsectioncode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Lab}\r\n                    optionId='nsectioncode'\r\n                    optionValue='ssectionname'\r\n                    disableSearch={false}\r\n                    value={props.selectedRecord[\"nsectioncode\"]}\r\n                    defaultValue={props.selectedRecord[\"nsectioncode\"]}\r\n                    onChange={(event) => props.onComboChange(event, \"nsectioncode\", 2)}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n\r\n                />\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_INCHARGE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nusercode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Users || []}\r\n                    // optionId='nusercode'\r\n                    // optionValue='susername'\r\n                    //disableSearch={false}\r\n                    value={props.selectedRecord[\"nusercode\"] || \"\"}\r\n                   // defaultValue={props.selectedRecord[\"SectionUsers\"]}\r\n                    onChange={(event) => props.onComboChange(event, \"nusercode\", 1)}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddInstrumentSection);"]},"metadata":{},"sourceType":"module"}