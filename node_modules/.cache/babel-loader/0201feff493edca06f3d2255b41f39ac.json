{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\testgroup\\\\TestGroupParameterTab.jsx\";\nimport React from 'react';\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\nimport { injectIntl } from 'react-intl';\nimport TestGroupParameterAccordion from './TestGroupParameterAccordion';\n\nconst TestGroupParameterTab = props => {\n  const {\n    TestGroupTestParameter,\n    selectedParameter,\n    TestGroupTestFormula,\n    TestGroupTestNumericParameter,\n    TestGroupTestPredefinedParameter,\n    TestGroupTestCharParameter,\n    SelectedSpecification\n  } = props.masterData;\n\n  function testGroupParameterAccordion(TestGroupParameter) {\n    const accordionMap = new Map();\n    TestGroupParameter.map(testGroupParameter => accordionMap.set(testGroupParameter.ntestparametercode, /*#__PURE__*/React.createElement(TestGroupParameterAccordion, {\n      testgrouptestparameter: testGroupParameter,\n      selectedSpecification: SelectedSpecification,\n      userRoleControlRights: props.userRoleControlRights,\n      controlMap: props.controlMap,\n      userInfo: props.userInfo,\n      selectedParameter: selectedParameter,\n      addParameter: props.addParameter,\n      deleteAction: props.deleteAction,\n      addCodedResult: props.addCodedResult,\n      addFormula: props.addFormula,\n      onSwitchChange: props.onSwitchChange,\n      addParameterSpecification: props.addParameterSpecification,\n      testGroupTestFormula: TestGroupTestFormula,\n      testGroupTestNumericParameter: TestGroupTestNumericParameter,\n      testGroupTestPredefinedParameter: TestGroupTestPredefinedParameter,\n      testGroupCharParameter: TestGroupTestCharParameter,\n      addTestGroupFormula: props.addTestGroupFormula,\n      editTestGroupParameter: props.editTestGroupParameter,\n      addTestGroupCodedResult: props.addTestGroupCodedResult,\n      viewTestGroupCheckList: props.viewTestGroupCheckList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    })));\n    return accordionMap;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, TestGroupTestParameter && TestGroupTestParameter.length > 0 && /*#__PURE__*/React.createElement(CustomAccordion, {\n    key: \"testgroupparameteraccordion\",\n    accordionTitle: \"sparametersynonym\",\n    accordionComponent: testGroupParameterAccordion(TestGroupTestParameter),\n    inputParam: {\n      masterData: props.masterData,\n      userinfo: props.userInfo\n    },\n    accordionClick: props.getTestGroupParameter,\n    accordionPrimaryKey: \"ntestgrouptestparametercode\",\n    accordionObjectName: \"testgrouptestparameter\",\n    selectedKey: selectedParameter ? selectedParameter.ntestgrouptestparametercode : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default injectIntl(TestGroupParameterTab);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testgroup/TestGroupParameterTab.jsx"],"names":["React","CustomAccordion","injectIntl","TestGroupParameterAccordion","TestGroupParameterTab","props","TestGroupTestParameter","selectedParameter","TestGroupTestFormula","TestGroupTestNumericParameter","TestGroupTestPredefinedParameter","TestGroupTestCharParameter","SelectedSpecification","masterData","testGroupParameterAccordion","TestGroupParameter","accordionMap","Map","map","testGroupParameter","set","ntestparametercode","userRoleControlRights","controlMap","userInfo","addParameter","deleteAction","addCodedResult","addFormula","onSwitchChange","addParameterSpecification","addTestGroupFormula","editTestGroupParameter","addTestGroupCodedResult","viewTestGroupCheckList","length","userinfo","getTestGroupParameter","ntestgrouptestparametercode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,8DAA5B;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,2BAAP,MAAwC,+BAAxC;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACrC,QAAM;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA,iBAA1B;AAA6CC,IAAAA,oBAA7C;AAAmEC,IAAAA,6BAAnE;AACFC,IAAAA,gCADE;AACgCC,IAAAA,0BADhC;AAC4DC,IAAAA;AAD5D,MACsFP,KAAK,CAACQ,UADlG;;AAEA,WAASC,2BAAT,CAAqCC,kBAArC,EAAyD;AACrD,UAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;AACAF,IAAAA,kBAAkB,CAACG,GAAnB,CAAwBC,kBAAD,IACnBH,YAAY,CAACI,GAAb,CAAiBD,kBAAkB,CAACE,kBAApC,eACI,oBAAC,2BAAD;AACI,MAAA,sBAAsB,EAAEF,kBAD5B;AAEI,MAAA,qBAAqB,EAAEP,qBAF3B;AAGI,MAAA,qBAAqB,EAAEP,KAAK,CAACiB,qBAHjC;AAII,MAAA,UAAU,EAAEjB,KAAK,CAACkB,UAJtB;AAKI,MAAA,QAAQ,EAAElB,KAAK,CAACmB,QALpB;AAMI,MAAA,iBAAiB,EAAEjB,iBANvB;AAOI,MAAA,YAAY,EAAEF,KAAK,CAACoB,YAPxB;AAQI,MAAA,YAAY,EAAEpB,KAAK,CAACqB,YARxB;AASI,MAAA,cAAc,EAAErB,KAAK,CAACsB,cAT1B;AAUI,MAAA,UAAU,EAAEtB,KAAK,CAACuB,UAVtB;AAWI,MAAA,cAAc,EAAEvB,KAAK,CAACwB,cAX1B;AAYI,MAAA,yBAAyB,EAAExB,KAAK,CAACyB,yBAZrC;AAaI,MAAA,oBAAoB,EAAEtB,oBAb1B;AAcI,MAAA,6BAA6B,EAAEC,6BAdnC;AAeI,MAAA,gCAAgC,EAAEC,gCAftC;AAgBI,MAAA,sBAAsB,EAAEC,0BAhB5B;AAiBI,MAAA,mBAAmB,EAAEN,KAAK,CAAC0B,mBAjB/B;AAkBI,MAAA,sBAAsB,EAAE1B,KAAK,CAAC2B,sBAlBlC;AAmBI,MAAA,uBAAuB,EAAE3B,KAAK,CAAC4B,uBAnBnC;AAoBI,MAAA,sBAAsB,EAAE5B,KAAK,CAAC6B,sBApBlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAyBA,WAAOlB,YAAP;AACH;;AAED,sBACI,0CACKV,sBAAsB,IAAIA,sBAAsB,CAAC6B,MAAvB,GAAgC,CAA1D,iBACG,oBAAC,eAAD;AACI,IAAA,GAAG,EAAC,6BADR;AAEI,IAAA,cAAc,EAAE,mBAFpB;AAGI,IAAA,kBAAkB,EAAErB,2BAA2B,CAACR,sBAAD,CAHnD;AAII,IAAA,UAAU,EAAE;AAAEO,MAAAA,UAAU,EAAER,KAAK,CAACQ,UAApB;AAAgCuB,MAAAA,QAAQ,EAAE/B,KAAK,CAACmB;AAAhD,KAJhB;AAKI,IAAA,cAAc,EAAEnB,KAAK,CAACgC,qBAL1B;AAMI,IAAA,mBAAmB,EAAE,6BANzB;AAOI,IAAA,mBAAmB,EAAE,wBAPzB;AAQI,IAAA,WAAW,EAAE9B,iBAAiB,GAAGA,iBAAiB,CAAC+B,2BAArB,GAAmD,CARrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CADJ;AAgBH,CAjDD;;AAmDA,eAAepC,UAAU,CAACE,qBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component'\r\nimport { injectIntl } from 'react-intl';\r\nimport TestGroupParameterAccordion from './TestGroupParameterAccordion';\r\n\r\nconst TestGroupParameterTab = (props) => {\r\n    const { TestGroupTestParameter, selectedParameter, TestGroupTestFormula, TestGroupTestNumericParameter,\r\n        TestGroupTestPredefinedParameter, TestGroupTestCharParameter, SelectedSpecification } = props.masterData;\r\n    function testGroupParameterAccordion(TestGroupParameter) {\r\n        const accordionMap = new Map();\r\n        TestGroupParameter.map((testGroupParameter) =>\r\n            accordionMap.set(testGroupParameter.ntestparametercode,\r\n                <TestGroupParameterAccordion\r\n                    testgrouptestparameter={testGroupParameter}\r\n                    selectedSpecification={SelectedSpecification}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    controlMap={props.controlMap}\r\n                    userInfo={props.userInfo}\r\n                    selectedParameter={selectedParameter}\r\n                    addParameter={props.addParameter}\r\n                    deleteAction={props.deleteAction}\r\n                    addCodedResult={props.addCodedResult}\r\n                    addFormula={props.addFormula}\r\n                    onSwitchChange={props.onSwitchChange}\r\n                    addParameterSpecification={props.addParameterSpecification}\r\n                    testGroupTestFormula={TestGroupTestFormula}\r\n                    testGroupTestNumericParameter={TestGroupTestNumericParameter}\r\n                    testGroupTestPredefinedParameter={TestGroupTestPredefinedParameter}\r\n                    testGroupCharParameter={TestGroupTestCharParameter}\r\n                    addTestGroupFormula={props.addTestGroupFormula}\r\n                    editTestGroupParameter={props.editTestGroupParameter}\r\n                    addTestGroupCodedResult={props.addTestGroupCodedResult}\r\n                    viewTestGroupCheckList={props.viewTestGroupCheckList}\r\n                />)\r\n        );\r\n        return accordionMap;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {TestGroupTestParameter && TestGroupTestParameter.length > 0 &&\r\n                <CustomAccordion\r\n                    key=\"testgroupparameteraccordion\"\r\n                    accordionTitle={\"sparametersynonym\"}\r\n                    accordionComponent={testGroupParameterAccordion(TestGroupTestParameter)}\r\n                    inputParam={{ masterData: props.masterData, userinfo: props.userInfo }}\r\n                    accordionClick={props.getTestGroupParameter}\r\n                    accordionPrimaryKey={\"ntestgrouptestparametercode\"}\r\n                    accordionObjectName={\"testgrouptestparameter\"}\r\n                    selectedKey={selectedParameter ? selectedParameter.ntestgrouptestparametercode : 0}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestGroupParameterTab);"]},"metadata":{},"sourceType":"module"}