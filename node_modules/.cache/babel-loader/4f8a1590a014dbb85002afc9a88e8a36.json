{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\reports\\\\reportsconfig\\\\ReportConfigFilter.js\";\nimport React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Row, Col } from \"react-bootstrap\";\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\n\nconst ReportConfigFilter = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"filterreporttypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REPORTTYPE\"\n    }),\n    placeholder: \"Please Select...\",\n    options: props.reportTypeList || [] // value = { props.selectedRecord ?props.selectedRecord[\"filterreporttypecode\"]:\"\"}\n    ,\n    value: props.selectedRecord.filterreporttypecode ? props.selectedRecord.filterreporttypecode : props.filterReportType ? {\n      \"label\": props.filterReportType.sdisplayname,\n      \"value\": props.filterReportType.nreporttypecode\n    } : \"\",\n    isMandatory: true,\n    isMulti: false,\n    isClearable: false,\n    isSearchable: true,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, \"filterreporttypecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default injectIntl(ReportConfigFilter);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/reports/reportsconfig/ReportConfigFilter.js"],"names":["React","injectIntl","Row","Col","FormSelectSearch","ReportConfigFilter","props","intl","formatMessage","id","reportTypeList","selectedRecord","filterreporttypecode","filterReportType","sdisplayname","nreporttypecode","event","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,gBAAP,MAA6B,qEAA7B;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,gBAAD;AACQ,IAAA,IAAI,EAAE,sBADd;AAEQ,IAAA,SAAS,EAAGA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAFpB;AAGQ,IAAA,WAAW,EAAC,kBAHpB;AAIQ,IAAA,OAAO,EAAEH,KAAK,CAACI,cAAN,IAAwB,EAJzC,CAKO;AALP;AAMQ,IAAA,KAAK,EAAEJ,KAAK,CAACK,cAAN,CAAqBC,oBAArB,GAA4CN,KAAK,CAACK,cAAN,CAAqBC,oBAAjE,GACFN,KAAK,CAACO,gBAAN,GAAyB;AAAE,eAASP,KAAK,CAACO,gBAAN,CAAuBC,YAAlC;AAAgD,eAASR,KAAK,CAACO,gBAAN,CAAuBE;AAAhF,KAAzB,GAA6H,EAP1I;AASQ,IAAA,WAAW,EAAE,IATrB;AAUQ,IAAA,OAAO,EAAE,KAVjB;AAWQ,IAAA,WAAW,EAAE,KAXrB;AAYQ,IAAA,YAAY,EAAE,IAZtB;AAaQ,IAAA,iBAAiB,EAAE,IAb3B;AAcQ,IAAA,QAAQ,EAAKC,KAAD,IAAUV,KAAK,CAACW,aAAN,CAAoBD,KAApB,EAA2B,sBAA3B,CAd9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADF;AAuBD,CAxBD;;AAyBA,eAAef,UAAU,CAACI,kBAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\n\r\nconst ReportConfigFilter = (props) => {\r\n  return (\r\n    <Row>\r\n        <Col md={12}>\r\n        \r\n            <FormSelectSearch\r\n                    name={\"filterreporttypecode\"}\r\n                    formLabel={ props.intl.formatMessage({ id:\"IDS_REPORTTYPE\"})}                              \r\n                    placeholder=\"Please Select...\"                              \r\n                    options={props.reportTypeList || []}\r\n                   // value = { props.selectedRecord ?props.selectedRecord[\"filterreporttypecode\"]:\"\"}\r\n                    value={props.selectedRecord.filterreporttypecode ? props.selectedRecord.filterreporttypecode\r\n                        :props.filterReportType ? { \"label\": props.filterReportType.sdisplayname, \"value\": props.filterReportType.nreporttypecode } : \"\"}\r\n      \r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isClearable={false}\r\n                    isSearchable={true}                                \r\n                    closeMenuOnSelect={true}\r\n                    onChange = {(event)=> props.onComboChange(event, \"filterreporttypecode\")}                               \r\n            />\r\n        </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default injectIntl(ReportConfigFilter);"]},"metadata":{},"sourceType":"module"}