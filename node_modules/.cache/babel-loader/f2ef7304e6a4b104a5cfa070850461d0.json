{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\AddAdhocParameter.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\nimport { injectIntl } from 'react-intl';\n\nconst AddAdhocParameter = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormMultiSelect, {\n    name: \"ntestparametercode\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ADHOCPARAMETER\"\n    }),\n    options: props.adhocParamter || [],\n    optionId: \"value\",\n    optionValue: \"label\",\n    value: props.selectedRecord[\"nparamtercode\"] ? props.selectedRecord[\"nparamtercode\"] || [] : [],\n    isMandatory: true,\n    isClearable: true,\n    disableSearch: false,\n    disabled: false,\n    closeMenuOnSelect: false,\n    alphabeticalSort: true,\n    allItemSelectedLabel: props.intl.formatMessage({\n      id: \"IDS_ALLITEMSAREMSELECTED\"\n    }),\n    noOptionsLabel: props.intl.formatMessage({\n      id: \"IDS_NOOPTION\"\n    }),\n    searchLabel: props.intl.formatMessage({\n      id: \"IDS_SEARCH\"\n    }),\n    selectAllLabel: props.intl.formatMessage({\n      id: \"IDS_SELECTALL\"\n    }),\n    onChange: event => props.onComboChange(event, \"nparamtercode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddAdhocParameter);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/AddAdhocParameter.jsx"],"names":["React","Row","Col","FormMultiSelect","injectIntl","AddAdhocParameter","props","intl","formatMessage","id","adhocParamter","selectedRecord","event","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,eAAP,MAA4B,gEAA5B;AACA,SAASC,UAAT,QAA2B,YAA3B;;AACA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,sBAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AACI,IAAA,IAAI,EAAE,oBADV;AAEI,IAAA,KAAK,EAAGA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAFZ;AAGI,IAAA,OAAO,EAAGH,KAAK,CAACI,aAAN,IAAuB,EAHrC;AAII,IAAA,QAAQ,EAAC,OAJb;AAKI,IAAA,WAAW,EAAC,OALhB;AAMI,IAAA,KAAK,EAAKJ,KAAK,CAACK,cAAN,CAAqB,eAArB,IAAwCL,KAAK,CAACK,cAAN,CAAqB,eAArB,KAAyC,EAAjF,GAAqF,EANnG;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,WAAW,EAAE,IARjB;AASI,IAAA,aAAa,EAAE,KATnB;AAUI,IAAA,QAAQ,EAAE,KAVd;AAWI,IAAA,iBAAiB,EAAE,KAXvB;AAYI,IAAA,gBAAgB,EAAE,IAZtB;AAaI,IAAA,oBAAoB,EAAEL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAb1B;AAcI,IAAA,cAAc,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAdpB;AAeI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAfjB;AAgBI,IAAA,cAAc,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAhBpB;AAiBI,IAAA,QAAQ,EAAKG,KAAD,IAAUN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,eAA3B,CAjB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFJ;AA8BH,CA/BD;;AAgCA,eAAeR,UAAU,CAACC,iBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport { injectIntl } from 'react-intl';\r\nconst AddAdhocParameter = (props) => {\r\n    return (\r\n\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormMultiSelect\r\n                    name={\"ntestparametercode\"}\r\n                    label={ props.intl.formatMessage({ id:\"IDS_ADHOCPARAMETER\" })}                              \r\n                    options={ props.adhocParamter || []}\r\n                    optionId=\"value\"\r\n                    optionValue=\"label\"\r\n                    value = { props.selectedRecord[\"nparamtercode\"] ? props.selectedRecord[\"nparamtercode\"] || [] :[]}\r\n                    isMandatory={true}                                               \r\n                    isClearable={true}\r\n                    disableSearch={false}                                \r\n                    disabled={false}\r\n                    closeMenuOnSelect={false}\r\n                    alphabeticalSort={true}\r\n                    allItemSelectedLabel={props.intl.formatMessage({ id:\"IDS_ALLITEMSAREMSELECTED\" })}\r\n                    noOptionsLabel={props.intl.formatMessage({ id:\"IDS_NOOPTION\" })}\r\n                    searchLabel={props.intl.formatMessage({ id:\"IDS_SEARCH\" })}\r\n                    selectAllLabel={props.intl.formatMessage({ id:\"IDS_SELECTALL\" })}\r\n                    onChange = {(event)=> props.onComboChange(event, \"nparamtercode\")}\r\n                />\r\n            </Col>\r\n              \r\n        </Row>\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default injectIntl(AddAdhocParameter);\r\n"]},"metadata":{},"sourceType":"module"}