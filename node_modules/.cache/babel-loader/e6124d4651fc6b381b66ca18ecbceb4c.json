{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\components\\\\AddLanguages.jsx\";\nimport React from 'react';\nimport FormInput from '../components/form-input/form-input.component';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { MediaHeader } from './App.styles';\n\nconst AddLanguageSynonym = props => {\n  let fieldName = props.fieldName || 'displayname';\n  let jsondataKeys = [];\n  delete props.selectedJsondata['salertdisplaystatus'];\n  jsondataKeys = Object.keys(props.selectedJsondata);\n  const headerName = props.needheader;\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, jsondataKeys.map(item => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, headerName && headerName === \"true\" ? /*#__PURE__*/React.createElement(MediaHeader, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 37\n      }\n    }, props.intl.formatMessage({\n      id: \"IDS_\" + (fieldName = item).toUpperCase()\n    })) : \"\", fieldName === item ? props.languages.map(lang => {\n      return /*#__PURE__*/React.createElement(FormInput, {\n        label: lang.label,\n        name: lang.value,\n        type: \"text\",\n        onChange: event => props.onInputOnChange(event, lang.label, item, fieldName),\n        placeholder: lang.label,\n        value: props.selectedFieldRecord[fieldName] && props.selectedFieldRecord[fieldName][lang.value] ? props.selectedFieldRecord[fieldName][lang.value] : \"\",\n        isMandatory: lang.value == \"en-US\" ? true : false,\n        required: true,\n        readOnly: false,\n        maxLength: \"35\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 45\n        }\n      });\n    }) : \"\");\n  }) //)\n  ));\n}; //     return (\n//         name2.map(item =>\n//             <>\n//                 {screenName && screenName === \"true\" ? \n//                 <MediaHeader className='mb-3'>\n//                     {fieldName=item}\n//                 </MediaHeader>:\"\"}\n//             </>\n//         )\n//     )\n// }\n\n\nexport default injectIntl(AddLanguageSynonym);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/components/AddLanguages.jsx"],"names":["React","FormInput","Row","Col","injectIntl","MediaHeader","AddLanguageSynonym","props","fieldName","jsondataKeys","selectedJsondata","Object","keys","headerName","needheader","map","item","intl","formatMessage","id","toUpperCase","languages","lang","label","value","event","onInputOnChange","selectedFieldRecord"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,+CAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClC,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAN,IAAmB,aAAnC;AACA,MAAIC,YAAY,GAAG,EAAnB;AACA,SAAQF,KAAK,CAACG,gBAAN,CAAuB,qBAAvB,CAAR;AACAD,EAAAA,YAAY,GAAGE,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACG,gBAAlB,CAAf;AACA,QAAMG,UAAU,GAAGN,KAAK,CAACO,UAAzB;AACA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQL,YAAY,CAACM,GAAb,CAAkBC,IAAD,IAAU;AACvB,wBACI,0CACKH,UAAU,IAAIA,UAAU,KAAK,MAA7B,gBACG,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,KAAK,CAACU,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE,SAAS,CAACX,SAAS,GAAGQ,IAAb,EAAmBI,WAAnB;AAAf,KAAzB,CADL,CADH,GAGoB,EAJzB,EAKKZ,SAAS,KAAKQ,IAAd,GACGT,KAAK,CAACc,SAAN,CAAgBN,GAAhB,CAAoBO,IAAI,IAAI;AACxB,0BACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEA,IAAI,CAACC,KADhB;AAEI,QAAA,IAAI,EAAED,IAAI,CAACE,KAFf;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,QAAQ,EAAGC,KAAD,IAAWlB,KAAK,CAACmB,eAAN,CAAsBD,KAAtB,EAA6BH,IAAI,CAACC,KAAlC,EAAyCP,IAAzC,EAA+CR,SAA/C,CAJzB;AAKI,QAAA,WAAW,EAAEc,IAAI,CAACC,KALtB;AAMI,QAAA,KAAK,EAAEhB,KAAK,CAACoB,mBAAN,CAA0BnB,SAA1B,KAAwCD,KAAK,CAACoB,mBAAN,CAA0BnB,SAA1B,EAAqCc,IAAI,CAACE,KAA1C,CAAxC,GAA2FjB,KAAK,CAACoB,mBAAN,CAA0BnB,SAA1B,EAAqCc,IAAI,CAACE,KAA1C,CAA3F,GAA8I,EANzJ;AAOI,QAAA,WAAW,EAAEF,IAAI,CAACE,KAAL,IAAc,OAAd,GAAwB,IAAxB,GAA+B,KAPhD;AAQI,QAAA,QAAQ,EAAE,IARd;AASI,QAAA,QAAQ,EAAE,KATd;AAUI,QAAA,SAAS,EAAE,IAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAcH,KAfD,CADH,GAiBO,EAtBZ,CADJ;AA4BH,GA7BD,CAFR,CAiCQ;AAjCR,GADJ,CADJ;AAyCH,CA/CD,C,CAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAepB,UAAU,CAACE,kBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport FormInput from '../components/form-input/form-input.component';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { MediaHeader } from './App.styles';\r\n\r\nconst AddLanguageSynonym = (props) => {\r\n    let fieldName = props.fieldName || 'displayname'\r\n    let jsondataKeys = [];\r\n    delete (props.selectedJsondata['salertdisplaystatus']);\r\n    jsondataKeys = Object.keys(props.selectedJsondata);\r\n    const headerName = props.needheader;\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                {\r\n                    jsondataKeys.map((item) => {\r\n                        return (\r\n                            <>\r\n                                {headerName && headerName === \"true\" ?\r\n                                    <MediaHeader className='mb-3'>\r\n                                        {props.intl.formatMessage({ id: \"IDS_\" + (fieldName = item).toUpperCase() })}\r\n                                    </MediaHeader> : \"\"}\r\n                                {fieldName === item ?\r\n                                    props.languages.map(lang => {\r\n                                        return (\r\n                                            <FormInput\r\n                                                label={lang.label}\r\n                                                name={lang.value}\r\n                                                type=\"text\"\r\n                                                onChange={(event) => props.onInputOnChange(event, lang.label, item, fieldName)}\r\n                                                placeholder={lang.label}\r\n                                                value={props.selectedFieldRecord[fieldName] && props.selectedFieldRecord[fieldName][lang.value] ? props.selectedFieldRecord[fieldName][lang.value] : \"\"}\r\n                                                isMandatory={lang.value == \"en-US\" ? true : false}\r\n                                                required={true}\r\n                                                readOnly={false}\r\n                                                maxLength={\"35\"}\r\n                                            />\r\n                                        );\r\n                                    }\r\n                                    ) : \"\"}\r\n\r\n\r\n                            </>\r\n                        )\r\n                    }\r\n                    )\r\n                    //)\r\n                }\r\n\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n//     return (\r\n//         name2.map(item =>\r\n//             <>\r\n//                 {screenName && screenName === \"true\" ? \r\n//                 <MediaHeader className='mb-3'>\r\n//                     {fieldName=item}\r\n//                 </MediaHeader>:\"\"}\r\n//             </>\r\n//         )\r\n//     )\r\n// }\r\nexport default injectIntl(AddLanguageSynonym)"]},"metadata":{},"sourceType":"module"}