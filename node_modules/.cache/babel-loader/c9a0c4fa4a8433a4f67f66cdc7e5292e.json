{"ast":null,"code":"import React from'react';import{Row,Col,Card,Tab,Nav,FormGroup,FormLabel}from'react-bootstrap';import{injectIntl,FormattedMessage}from'react-intl';import FormInput from'../../../components/form-input/form-input.component';import CustomSwitch from'../../../components/custom-switch/custom-switch.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import{ApprovalSubType,transactionStatus}from'../../../components/Enumeration';var AddApprovalConfig=function AddApprovalConfig(props){if(props.operation==='copy')return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COPYAPPROVALCONFIG\",message:\"Copy Approval Config\"})),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_APPROVALSUBTYPE\",message:\"Approval Sub Type\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},\" \",props.masterData.approvalSubTypeValue[\"label\"]))),props.masterData.registrationTypeValue&&props.masterData.registrationSubTypeValue?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_REGISTRATIONTYPE\",message:\"Registration Type\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},\" \",props.masterData.registrationTypeValue[\"label\"]))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_REGISTRATIONSUBTYPE\",message:\"Registration Sub Type\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},\" \",props.masterData.registrationSubTypeValue[\"label\"])))):\"\",/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_VERSIONNAME\",message:\"Version Name\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},\"  \",props.selectedVersion[\"sversionname\"]))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_VERSIONNO\",message:\"Version No\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"readonly-text font-weight-normal\"},\" \",props.selectedVersion[\"sapproveconfversiondesc\"])))))),\" \"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_VERSIONNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_VERSIONNAME\"}),name:\"sversionname\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},value:props.selectedRecord?props.selectedRecord[\"sversionname\"]:\"\",isMandatory:true,required:true,maxLength:100}),props.nsubType===ApprovalSubType.TESTRESULTAPPROVAL?/*#__PURE__*/React.createElement(React.Fragment,null,props.registrationTypeOptions?/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_REGISTRATIONTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"regtype\",optionId:\"nregtypecode\",optionValue:\"sregtypename\",options:props.registrationTypeOptions,value:props.selectedRecord?props.selectedRecord[\"regtype\"]:props.sthis.props.registrationTypeValue,onChange:function onChange(event){return props.onComboChange(event,null,'regtype');},isMandatory:false,isMulti:false,isSearchable:true,isDisabled:false}):\"\",props.registrationSubTypeOptions?/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_REGISTRATIONSUBTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"regsubtype\",optionId:\"nregsubtypecode\",optionValue:\"sregsubtypename\",options:props.registrationSubTypeOptions,value:props.selectedRecord?props.selectedRecord[\"regsubtype\"]:props.registrationSubTypeValue,isMandatory:false,isMulti:false,isSearchable:true,isDisabled:false,onChange:function onChange(event){return props.onComboChange(event,null,'regsubtype');}}):\"\"):\"\")));else{return/*#__PURE__*/React.createElement(Row,null,props.userRoleTree?props.userRoleTree.length>0?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_VERSIONNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_VERSIONNAME\"}),name:\"sversionname\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},value:props.selectedRecord?props.selectedRecord[\"sversionname\"]:\"\",isMandatory:true,required:true,maxLength:100})),props.versionConfig.map(function(action){return/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:action.stransdisplaystatus?action.stransdisplaystatus:''}),placeholder:props.intl.formatMessage({id:action.stransdisplaystatus?action.stransdisplaystatus:''}),type:\"switch\",name:\"\".concat(action.stransdisplaystatus),onChange:function onChange(event){return props.onInputOnChange(event);},defaultValue:props.selectedRecord[action.stransdisplaystatus]?props.selectedRecord[action.stransdisplaystatus]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:props.selectedRecord[action.stransdisplaystatus]?props.selectedRecord[action.stransdisplaystatus]===transactionStatus.YES?true:false:false,disabled:false}));}),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"at-tabs\"},/*#__PURE__*/React.createElement(Tab.Container,{defaultActiveKey:props.userRoleTree[0].suserrolename},/*#__PURE__*/React.createElement(Card.Header,{className:\"d-flex tab-card-header\"},/*#__PURE__*/React.createElement(Nav,{as:\"ul\",className:\"nav nav-tabs card-header-tabs flex-grow-1\"},props.userRoleTree.map(function(userrole,index){return/*#__PURE__*/React.createElement(Nav.Item,{as:\"li\"},/*#__PURE__*/React.createElement(Nav.Link,{eventKey:userrole.suserrolename},index===props.userRoleTree.length-1?\"\".concat(userrole.suserrolename,\"( \").concat(props.intl.formatMessage({id:\"IDS_TOPLEVEL\"}),\" )\"):userrole.suserrolename));}))),/*#__PURE__*/React.createElement(Tab.Content,null,props.userRoleTree.map(function(userrole,index1){return/*#__PURE__*/React.createElement(Tab.Pane,{className:\"p-5 fade \",eventKey:userrole.suserrolename},/*#__PURE__*/React.createElement(\"div\",{className:\"border border-dark border-top-0 border-right-0 border-left-0\"},/*#__PURE__*/React.createElement(Row,null,props.roleConfig.map(function(action){return/*#__PURE__*/React.createElement(React.Fragment,null,action.ntranscode!==transactionStatus.SECTIONWISEAPPROVAL&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:action.stransdisplaystatus?action.stransdisplaystatus:''}),placeholder:props.intl.formatMessage({id:action.stransdisplaystatus?action.stransdisplaystatus:''}),type:\"switch\",name:\"\".concat(action.stransdisplaystatus,\"_\").concat(userrole.nuserrolecode),onChange:function onChange(event){return props.onInputOnChange(event,userrole);},defaultValue:props.selectedRecord&&props.selectedRecord[userrole.nuserrolecode]&&props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode]===transactionStatus.YES?true:false,isMandatory:false,required:false,checked:props.selectedRecord&&props.selectedRecord[userrole.nuserrolecode]&&props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode]?props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode]===transactionStatus.YES?true:false:action.ntranscode===transactionStatus.PARTIALAPPROVAL?true:false,disabled:props.selectedRecord&&props.selectedRecord['IDS_AUTOAPPROVAL']&&props.selectedRecord['IDS_AUTOAPPROVAL']===transactionStatus.YES&&action.ntranscode===transactionStatus.AUTOAPPROVAL?true:false})),action.ntranscode===transactionStatus.SECTIONWISEAPPROVAL&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:action.stransdisplaystatus?action.stransdisplaystatus:''}),placeholder:props.intl.formatMessage({id:action.stransdisplaystatus?action.stransdisplaystatus:''}),type:\"switch\",name:\"\".concat(action.stransdisplaystatus,\"_\").concat(userrole.nuserrolecode),onChange:function onChange(event){return props.onInputOnChange(event,userrole);},defaultValue:props.selectedRecord?props.selectedRecord[userrole.nuserrolecode]?props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode]===transactionStatus.YES?true:false:false:false,isMandatory:false,required:false,checked:props.selectedRecord?props.selectedRecord[userrole.nuserrolecode]?props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode]===transactionStatus.YES&&props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode]===transactionStatus.NO?true:false:false:false,disabled:props.selectedRecord&&props.selectedRecord[userrole.nuserrolecode]&&props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode]&&props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode]===transactionStatus.NO?false:true})));}))),/*#__PURE__*/React.createElement(Row,null,props.actionStatus.map(function(action){return/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:action.stransdisplaystatus?action.stransdisplaystatus:''}),placeholder:props.intl.formatMessage({id:action.stransdisplaystatus?action.stransdisplaystatus:''}),type:\"switch\",name:\"\".concat(action.stransdisplaystatus,\"_\").concat(userrole.nuserrolecode),onChange:function onChange(event){return props.onInputOnChange(event,userrole,action);},defaultValue:props.selectedRecord?props.selectedRecord[userrole.nuserrolecode]?props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode]===transactionStatus.YES?true:false:false:false,isMandatory:false,required:false,checked:props.selectedRecord?props.selectedRecord[userrole.nuserrolecode]?props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode]===transactionStatus.YES?true:false:false:false,disabled:false}));})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"napprovalstatuscode_\".concat(userrole.nuserrolecode),formLabel:props.intl.formatMessage({id:\"IDS_APPROVALSTATUS\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"})//key={`napprovalstatuscode_${userrole.nuserrolecode}`}\n,value:props.selectedRecord[\"approvalstatus_\".concat(userrole.nuserrolecode)]?props.selectedRecord[\"approvalstatus_\".concat(userrole.nuserrolecode)]:props.approvalStatusValue,options:props.approvalStatusOptions,optionId:\"ntranscode\",optionValue:\"stransdisplaystatus\",isMandatory:true,isMulti:false,isDisabled:false,isSearchable:true,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,userrole,\"approvalstatus_\".concat(userrole.nuserrolecode));}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"filterstatus_\".concat(userrole.nuserrolecode),formLabel:props.intl.formatMessage({id:\"IDS_FILTERSTATUS\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),key:\"filterstatus_\".concat(userrole.nuserrolecode),value:props.selectedRecord[\"filterstatus_\".concat(userrole.nuserrolecode)]?props.selectedRecord[\"filterstatus_\".concat(userrole.nuserrolecode)]:props.filterStatusValues,options:props.filterStatusOptions,optionId:\"ntranscode\",optionValue:\"stransstatus\",isMandatory:true,isMulti:true,isDisabled:false,isSearchable:true,closeMenuOnSelect:false,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,userrole,\"filterstatus_\".concat(userrole.nuserrolecode));},isClearable:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"validationstatus_\".concat(userrole.nuserrolecode),formLabel:props.intl.formatMessage({id:\"IDS_VALIDATIONSTATUS\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),key:\"validationstatus_\".concat(userrole.nuserrolecode),value:props.selectedRecord[\"validationstatus_\".concat(userrole.nuserrolecode)]?props.selectedRecord[\"validationstatus_\".concat(userrole.nuserrolecode)]:props.validationStatusValues,options:props.userRoleTree.length>1&&index1===props.userRoleTree.length-1?props.topLevelValidStatusOptions:props.validationStatusOptions///options={props.validationStatusOptions}\n,optionId:\"ntranscode\",optionValue:\"stransstatus\",isMandatory:true,isMulti:true,isDisabled:false,isSearchable:true,closeMenuOnSelect:false,isClearable:true,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,userrole,\"validationstatus_\".concat(userrole.nuserrolecode));}}),props.checklistOptions?props.checklistOptions.length>0?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"checklist_\".concat(userrole.nuserrolecode),formLabel:props.intl.formatMessage({id:\"IDS_CHECKLIST\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),key:\"checklist_\".concat(userrole.nuserrolecode),value:props.selectedRecord[\"checklist_\".concat(userrole.nuserrolecode)]?props.selectedRecord[\"checklist_\".concat(userrole.nuserrolecode)]:props.checklistValues,options:props.checklistOptions,optionId:\"nchecklistcode\",optionValue:\"schecklistname\",isMandatory:true,isMulti:false,isDisabled:false,isSearchable:true,closeMenuOnSelect:true,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,userrole,\"checklist_\".concat(userrole.nuserrolecode));}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"checklist_\".concat(userrole.nuserrolecode),formLabel:props.intl.formatMessage({id:\"IDS_CHECKLIST\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),key:\"checklist_\".concat(userrole.nuserrolecode),value:props.selectedRecord[\"checklistVersion_\".concat(userrole.nuserrolecode)]?props.selectedRecord[\"checklistVersion_\".concat(userrole.nuserrolecode)]:props.checklistVersionValues,options:props.checklistVersionOptions,optionId:\"nchecklistversioncode\",optionValue:\"schecklistversionname\",isMandatory:true,isMulti:false,isDisabled:true,isSearchable:true,closeMenuOnSelect:false,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,userrole,\"checklist_\".concat(userrole.nuserrolecode));}})):\"\":\"\")));})))))))):\"\":\"\");}};export default injectIntl(AddApprovalConfig);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/approvalconfig/AddApprovalConfig.jsx"],"names":["React","Row","Col","Card","Tab","Nav","FormGroup","FormLabel","injectIntl","FormattedMessage","FormInput","CustomSwitch","FormSelectSearch","ApprovalSubType","transactionStatus","AddApprovalConfig","props","operation","masterData","approvalSubTypeValue","registrationTypeValue","registrationSubTypeValue","selectedVersion","intl","formatMessage","id","event","onInputOnChange","selectedRecord","nsubType","TESTRESULTAPPROVAL","registrationTypeOptions","sthis","onComboChange","registrationSubTypeOptions","userRoleTree","length","versionConfig","map","action","stransdisplaystatus","YES","suserrolename","userrole","index","index1","roleConfig","ntranscode","SECTIONWISEAPPROVAL","nuserrolecode","PARTIALAPPROVAL","AUTOAPPROVAL","NO","actionStatus","approvalStatusValue","approvalStatusOptions","filterStatusValues","filterStatusOptions","validationStatusValues","topLevelValidStatusOptions","validationStatusOptions","checklistOptions","checklistValues","checklistVersionValues","checklistVersionOptions"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Tab, Nav,FormGroup, FormLabel } from 'react-bootstrap';\r\nimport {injectIntl, FormattedMessage } from 'react-intl';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component'\r\nimport { ApprovalSubType, transactionStatus } from '../../../components/Enumeration'\r\nconst AddApprovalConfig = (props) => {\r\n   \r\n    if (props.operation === 'copy')\r\n        return (\r\n            <>\r\n            <Row>    \r\n                                             \r\n                   <Col md={12}><FormGroup>\r\n                         <Card>\r\n                              <Card.Header><FormattedMessage id=\"IDS_COPYAPPROVALCONFIG\" message=\"Copy Approval Config\"/></Card.Header>\r\n                              <Card.Body>                                \r\n                                   <Row>  \r\n                                        <Col md={6}>\r\n                                             <FormGroup>\r\n                                                <FormLabel><FormattedMessage id=\"IDS_APPROVALSUBTYPE\" message=\"Approval Sub Type\"/></FormLabel>\r\n                                                <span className=\"readonly-text font-weight-normal\"> {props.masterData.approvalSubTypeValue[\"label\"]}</span>\r\n                                             </FormGroup>\r\n                                        </Col>    \r\n                                        {props.masterData.registrationTypeValue && \r\n                                                       props.masterData.registrationSubTypeValue ? \r\n                                        <>\r\n                                         <Col md={6}>\r\n                                             <FormGroup>\r\n                                                  <FormLabel><FormattedMessage id=\"IDS_REGISTRATIONTYPE\" message=\"Registration Type\"/></FormLabel>\r\n                                                  <span className=\"readonly-text font-weight-normal\"> {props.masterData.registrationTypeValue[\"label\"]}</span>\r\n                                             </FormGroup>\r\n                                        </Col>    \r\n\r\n                                        <Col md={6}>\r\n                                             <FormGroup>\r\n                                                  <FormLabel><FormattedMessage id=\"IDS_REGISTRATIONSUBTYPE\" message=\"Registration Sub Type\"/></FormLabel>\r\n                                                  <span className=\"readonly-text font-weight-normal\"> {props.masterData.registrationSubTypeValue[\"label\"]}</span>\r\n                                             </FormGroup>\r\n                                        </Col>  \r\n                                        </> \r\n                                       :\"\" }    \r\n                                        <Col md={6}>\r\n                                             <FormGroup>\r\n                                                  <FormLabel><FormattedMessage id=\"IDS_VERSIONNAME\" message=\"Version Name\"/></FormLabel>\r\n                                                  <span className=\"readonly-text font-weight-normal\">  {props.selectedVersion[\"sversionname\"]}</span>\r\n                                             </FormGroup>\r\n                                        </Col>    \r\n\r\n                                        <Col md={6}>\r\n                                             <FormGroup>\r\n                                                  <FormLabel><FormattedMessage id=\"IDS_VERSIONNO\" message=\"Version No\"/></FormLabel>\r\n                                                  <span className=\"readonly-text font-weight-normal\"> {props.selectedVersion[\"sapproveconfversiondesc\"]}</span>\r\n                                             </FormGroup>\r\n                                        </Col>                                                                                             \r\n                                   </Row>\r\n                              </Card.Body>       \r\n                         </Card> </FormGroup>                       \r\n                    </Col>                            \r\n               </Row>\r\n              \r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_VERSIONNAME\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_VERSIONNAME\" })}\r\n                        name={\"sversionname\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"sversionname\"] : \"\"}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={100}\r\n                    />\r\n\r\n                  \r\n\r\n                    {props.nsubType === ApprovalSubType.TESTRESULTAPPROVAL ?\r\n                        <>\r\n                            {props.registrationTypeOptions ?\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    name=\"regtype\"\r\n                                    optionId=\"nregtypecode\"\r\n                                    optionValue=\"sregtypename\"\r\n                                    options={props.registrationTypeOptions}\r\n                                    value={props.selectedRecord ? props.selectedRecord[\"regtype\"] : props.sthis.props.registrationTypeValue}\r\n                                    onChange={(event) => props.onComboChange(event, null, 'regtype')}\r\n                                    isMandatory={false}\r\n                                    isMulti={false}\r\n                                    isSearchable={true}\r\n                                    isDisabled={false}\r\n                                />\r\n                                : \"\"}\r\n                            {props.registrationSubTypeOptions ?\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    name=\"regsubtype\"\r\n                                    optionId=\"nregsubtypecode\"\r\n                                    optionValue=\"sregsubtypename\"\r\n                                    options={props.registrationSubTypeOptions}\r\n                                    value={props.selectedRecord ? props.selectedRecord[\"regsubtype\"] : props.registrationSubTypeValue}\r\n                                    isMandatory={false}\r\n                                    isMulti={false}\r\n                                    isSearchable={true}\r\n                                    isDisabled={false}\r\n                                    onChange={(event) => props.onComboChange(event, null, 'regsubtype')}\r\n\r\n                                />\r\n                                : \"\"}\r\n                        </>\r\n                        : \"\"}\r\n                </Col>\r\n            </Row>\r\n            </>\r\n        )\r\n    else {\r\n        return (\r\n\r\n            <Row>\r\n                {props.userRoleTree ? props.userRoleTree.length > 0 ?\r\n                    <>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_VERSIONNAME\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_VERSIONNAME\" })}\r\n                                name={\"sversionname\"}\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                value={props.selectedRecord ? props.selectedRecord[\"sversionname\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={100}\r\n                            />\r\n                        </Col>\r\n                        {props.versionConfig.map(action =>\r\n                            <Col md={6}>\r\n                                <CustomSwitch\r\n                                    label={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                    placeholder={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                    type=\"switch\"\r\n                                    name={`${action.stransdisplaystatus}`}\r\n                                    onChange={(event) => props.onInputOnChange(event)}\r\n                                    defaultValue={props.selectedRecord[action.stransdisplaystatus] ? props.selectedRecord[action.stransdisplaystatus] === transactionStatus.YES ? true : false : false}\r\n                                    isMandatory={false}\r\n                                    required={false}\r\n                                    checked={props.selectedRecord[action.stransdisplaystatus] ? props.selectedRecord[action.stransdisplaystatus] === transactionStatus.YES ? true : false : false}\r\n                                    disabled={false}\r\n                                >\r\n                                </CustomSwitch>\r\n                            </Col>\r\n                        )}\r\n                        <Col md={12}>\r\n                            <Row noGutters={true}>\r\n                                <Col md=\"12\">\r\n                                    <Card className=\"at-tabs\">\r\n\r\n                                        <Tab.Container defaultActiveKey={props.userRoleTree[0].suserrolename}>\r\n                                            <Card.Header className=\"d-flex tab-card-header\">\r\n                                                <Nav as=\"ul\" className=\"nav nav-tabs card-header-tabs flex-grow-1\">\r\n                                                    {props.userRoleTree.map((userrole, index) =>\r\n                                                        <Nav.Item as=\"li\">\r\n                                                            <Nav.Link eventKey={userrole.suserrolename}>\r\n                                                            {index === props.userRoleTree.length-1  ?\r\n                                                                     `${userrole.suserrolename}( ${props.intl.formatMessage({id:\"IDS_TOPLEVEL\"})} )` \r\n                                                                     :userrole.suserrolename}\r\n                                                            </Nav.Link>\r\n                                                        </Nav.Item>\r\n                                                    )}\r\n                                                </Nav>\r\n                                            </Card.Header>\r\n                                            <Tab.Content>\r\n                                                {props.userRoleTree.map((userrole, index1) =>\r\n                                                    <Tab.Pane className=\"p-5 fade \" eventKey={userrole.suserrolename}>\r\n                                                        <div className=\"border border-dark border-top-0 border-right-0 border-left-0\">\r\n                                                            <Row>\r\n                                                            \r\n                                                                {props.roleConfig.map(action =>\r\n                                                                    <>\r\n                                                                        {action.ntranscode !== transactionStatus.SECTIONWISEAPPROVAL &&\r\n                                                                            <Col md={6}>\r\n                                                                                <CustomSwitch\r\n                                                                                    label={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                                    placeholder={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                                    type=\"switch\"\r\n                                                                                    name={`${action.stransdisplaystatus}_${userrole.nuserrolecode}`}\r\n                                                                                    onChange={(event) => props.onInputOnChange(event, userrole)}\r\n                                                                                    defaultValue={props.selectedRecord && props.selectedRecord[userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] === transactionStatus.YES ? true : false}\r\n                                                                                    isMandatory={false}\r\n                                                                                    required={false}\r\n                                                                                    checked={props.selectedRecord && props.selectedRecord[userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] === transactionStatus.YES ? true : false : action.ntranscode === transactionStatus.PARTIALAPPROVAL ? true : false}\r\n                                                                                    disabled={props.selectedRecord && props.selectedRecord['IDS_AUTOAPPROVAL'] && props.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES && action.ntranscode === transactionStatus.AUTOAPPROVAL ? true : false}\r\n                                                                                />\r\n\r\n                                                                            </Col>\r\n                                                                        }\r\n                                                                        {action.ntranscode === transactionStatus.SECTIONWISEAPPROVAL &&\r\n                                                                            <Col md={6}>\r\n                                                                                <CustomSwitch\r\n                                                                                    label={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                                    placeholder={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                                    type=\"switch\"\r\n                                                                                    name={`${action.stransdisplaystatus}_${userrole.nuserrolecode}`}\r\n                                                                                    onChange={(event) => props.onInputOnChange(event, userrole)}\r\n                                                                                    defaultValue={props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] === transactionStatus.YES ? true : false : false : false}\r\n                                                                                    isMandatory={false}\r\n                                                                                    required={false}\r\n                                                                                    checked={props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] === transactionStatus.YES && props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] === transactionStatus.NO ? true : false : false : false}\r\n                                                                                    disabled={props.selectedRecord && props.selectedRecord[userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] && props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] === transactionStatus.NO ? false : true}\r\n                                                                                />\r\n                                                                            </Col>\r\n                                                                        }\r\n                                                                    </>\r\n                                                                )}\r\n                                                            \r\n                                                            </Row>\r\n                                                        </div>\r\n                                                        <Row>\r\n                                                            {props.actionStatus.map(action =>\r\n\r\n                                                                <Col md={6}>\r\n                                                                    <CustomSwitch\r\n                                                                        label={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: action.stransdisplaystatus ? action.stransdisplaystatus : '' })}\r\n                                                                        type=\"switch\"\r\n                                                                        name={`${action.stransdisplaystatus}_${userrole.nuserrolecode}`}\r\n                                                                        onChange={(event) => props.onInputOnChange(event, userrole, action)}\r\n                                                                        defaultValue={props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] === transactionStatus.YES ? true : false : false : false}\r\n                                                                        isMandatory={false}\r\n                                                                        required={false}\r\n                                                                        checked={props.selectedRecord ? props.selectedRecord[userrole.nuserrolecode] ? props.selectedRecord[userrole.nuserrolecode][action.stransdisplaystatus+'_'+userrole.nuserrolecode] === transactionStatus.YES ? true : false : false : false}\r\n                                                                        disabled={false}\r\n                                                                    >\r\n                                                                    </CustomSwitch>\r\n                                                                </Col>\r\n                                                            )}\r\n                                                        </Row>\r\n                                                        <Row>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    name={`napprovalstatuscode_${userrole.nuserrolecode}`}\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_APPROVALSTATUS\" })}\r\n                                                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                    //key={`napprovalstatuscode_${userrole.nuserrolecode}`}\r\n                                                                    value={props.selectedRecord[`approvalstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`approvalstatus_${userrole.nuserrolecode}`] : props.approvalStatusValue}\r\n                                                                    options={props.approvalStatusOptions}\r\n                                                                    optionId=\"ntranscode\"\r\n                                                                    optionValue=\"stransdisplaystatus\"\r\n                                                                    isMandatory={true}\r\n                                                                    isMulti={false}\r\n                                                                    isDisabled={false}\r\n                                                                    isSearchable={true}\r\n                                                                    as={\"select\"}\r\n                                                                    onChange={(event) => props.onComboChange(event, userrole, `approvalstatus_${userrole.nuserrolecode}`)}\r\n                                                                />\r\n                                                                <FormSelectSearch\r\n                                                                    name={`filterstatus_${userrole.nuserrolecode}`}\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_FILTERSTATUS\" })}\r\n                                                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                    key={`filterstatus_${userrole.nuserrolecode}`}\r\n                                                                    value={props.selectedRecord[`filterstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`filterstatus_${userrole.nuserrolecode}`] : props.filterStatusValues}\r\n                                                                    options={props.filterStatusOptions}\r\n                                                                    optionId=\"ntranscode\"\r\n                                                                    optionValue=\"stransstatus\"\r\n                                                                    isMandatory={true}\r\n                                                                    isMulti={true}\r\n                                                                    isDisabled={false}\r\n                                                                    isSearchable={true}\r\n                                                                    closeMenuOnSelect={false}\r\n                                                                    as={\"select\"}\r\n                                                                    onChange={(event) => props.onComboChange(event, userrole, `filterstatus_${userrole.nuserrolecode}`)}\r\n                                                                    isClearable={true}\r\n                                                                />\r\n                                                                <FormSelectSearch\r\n                                                                    name={`validationstatus_${userrole.nuserrolecode}`}\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_VALIDATIONSTATUS\" })}\r\n                                                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                    key={`validationstatus_${userrole.nuserrolecode}`}\r\n                                                                    value={props.selectedRecord[`validationstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`validationstatus_${userrole.nuserrolecode}`] : props.validationStatusValues}\r\n                                                                    options={(props.userRoleTree.length > 1 && index1 === props.userRoleTree.length-1)  ? props.topLevelValidStatusOptions : props.validationStatusOptions}\r\n                                                                 \r\n                                                                    ///options={props.validationStatusOptions}\r\n                                                                    optionId=\"ntranscode\"\r\n                                                                    optionValue=\"stransstatus\"\r\n                                                                    isMandatory={true}\r\n                                                                    isMulti={true}\r\n                                                                    isDisabled={false}\r\n                                                                    isSearchable={true}\r\n                                                                    closeMenuOnSelect={false}\r\n                                                                    isClearable={true}\r\n                                                                    as={\"select\"}\r\n                                                                    onChange={(event) => props.onComboChange(event, userrole, `validationstatus_${userrole.nuserrolecode}`)}\r\n                                                                />\r\n                                                                {/* {props.decisionStatusOptions ? props.decisionStatusOptions.length > 0 ?\r\n\r\n                                                                    <FormSelectSearch\r\n                                                                        name={`decisionstatus_${userrole.nuserrolecode}`}\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_DECISIONSTATUS\" })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                        key={`decisionstatus_${userrole.nuserrolecode}`}\r\n                                                                        value={props.selectedRecord[`decisionstatus_${userrole.nuserrolecode}`] ? props.selectedRecord[`decisionstatus_${userrole.nuserrolecode}`] : props.decisionStatusValues}\r\n                                                                        options={props.decisionStatusOptions}\r\n                                                                        optionId=\"ntranscode\"\r\n                                                                        optionValue=\"stransstatus\"\r\n                                                                        isMandatory={false}\r\n                                                                        isMulti={true}\r\n                                                                        isDisabled={false}\r\n                                                                        isSearchable={true}\r\n                                                                        closeMenuOnSelect={false}\r\n                                                                        isClearable={true}\r\n                                                                        as={\"select\"}\r\n                                                                        onChange={(event) => props.onComboChange(event, userrole, `decisionstatus_${userrole.nuserrolecode}`)}\r\n                                                                    /> : \"\" : \"\"} */}\r\n                                                                {props.checklistOptions ? props.checklistOptions.length > 0 ?\r\n                                                                <>\r\n                                                                    <FormSelectSearch\r\n                                                                        name={`checklist_${userrole.nuserrolecode}`}\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_CHECKLIST\" })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                        key={`checklist_${userrole.nuserrolecode}`}\r\n                                                                        value={props.selectedRecord[`checklist_${userrole.nuserrolecode}`] ? props.selectedRecord[`checklist_${userrole.nuserrolecode}`] : props.checklistValues}\r\n                                                                        options={props.checklistOptions}\r\n                                                                        optionId=\"nchecklistcode\"\r\n                                                                        optionValue=\"schecklistname\"\r\n                                                                        isMandatory={true}\r\n                                                                        isMulti={false}\r\n                                                                        isDisabled={false}\r\n                                                                        isSearchable={true}\r\n                                                                        closeMenuOnSelect={true}\r\n                                                                        as={\"select\"}\r\n                                                                        onChange={(event) => props.onComboChange(event, userrole, `checklist_${userrole.nuserrolecode}`)}\r\n                                                                    />\r\n                                                                    <FormSelectSearch\r\n                                                                        name={`checklist_${userrole.nuserrolecode}`}\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_CHECKLIST\" })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                        key={`checklist_${userrole.nuserrolecode}`}\r\n                                                                        value={props.selectedRecord[`checklistVersion_${userrole.nuserrolecode}`] ? props.selectedRecord[`checklistVersion_${userrole.nuserrolecode}`] : props.checklistVersionValues}\r\n                                                                        options={props.checklistVersionOptions}\r\n                                                                        optionId=\"nchecklistversioncode\"\r\n                                                                        optionValue=\"schecklistversionname\"\r\n                                                                        isMandatory={true}\r\n                                                                        isMulti={false}\r\n                                                                        isDisabled={true}\r\n                                                                        isSearchable={true}\r\n                                                                        closeMenuOnSelect={false}\r\n                                                                        as={\"select\"}\r\n                                                                        onChange={(event) => props.onComboChange(event, userrole, `checklist_${userrole.nuserrolecode}`)}\r\n                                                                    />\r\n                                                                </>\r\n                                                                    : \"\" : \"\"}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Tab.Pane>\r\n                                                )}\r\n                                            </Tab.Content>\r\n                                        </Tab.Container>\r\n\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </>\r\n                    : \"\" : \"\"}\r\n            </Row>\r\n\r\n        );\r\n                                                                    \r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default injectIntl(AddApprovalConfig);"]},"metadata":{},"sourceType":"module"}