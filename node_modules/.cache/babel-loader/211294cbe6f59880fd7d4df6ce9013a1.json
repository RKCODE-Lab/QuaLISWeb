{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import FormInput from'../../components/form-input/form-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{Row,Col,Card,Nav,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt,faThumbsUp}from'@fortawesome/free-solid-svg-icons';import{connect}from'react-redux';import{sortData,getControlMap,showEsign,constructOptionList}from'../../components/CommonScript';import'../../assets/./styles/tree.css';import React,{Component}from'react';import{NavHeader}from'../../components/sidebar/sidebar.styles';import{ContentPanel,ListWrapper}from'./userroletemplate.styles';import{callService,crudMaster,updateStore,addScreenModel,validateEsignCredential,getURTFilterRegType,getURTFilterRegSubType,getURTFilterSubmit,fetchRecordById,getTreetemplate,filterColumnData,postCRUDOrganiseSearch}from'../../actions';import{injectIntl}from'react-intl';// import rsapi from '../../rsapi';\nimport{toast}from'react-toastify';import ListMaster from'../../components/list-master/list-master.component';import UserRoleTemplateFilter from'./UserRoleTemplateFilter';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import Esign from'../audittrail/Esign';// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport{ApprovalSubType,transactionStatus}from'../../components/Enumeration';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport BreadcrumbComponent from'../../components/Breadcrumb.Component';import{Affix}from'rsuite';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';// import ReactTooltip from 'react-tooltip';\nvar userroletempalate=/*#__PURE__*/function(_Component){_inherits(userroletempalate,_Component);var _super=_createSuper(userroletempalate);function userroletempalate(props){var _this;_classCallCheck(this,userroletempalate);_this=_super.call(this,props);_this.sidebarExpandCollapse=function(){_this.setState({sidebarview:true});};_this.closeModel=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"approve\"){loadEsign=false;openModal=false;// selectedRecord[\"agree\"] = 4;\nselectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}else{loadEsign=false;// selectedRecord[\"agree\"] = 4;\nselectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openModal=false;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.filterComboChange=function(event,fieldname){if(event!==null){// let uRL = \"\";\nvar inputData=[];if(fieldname===\"approvalSubType\"){// uRL = 'userroletemplate/getApprovalRegSubType';\ninputData={userinfo:_this.props.Login.userInfo,nflag:1,napprovalsubtypecode:parseInt(event.value),ntemplatecode:parseInt(event.item.ntemplatecode),isregneed:parseInt(event.item.nisregsubtypeconfigneed)};var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{defaultapprovalsubtype:event});var inputParam={masterData:masterData,inputData:inputData};_this.props.getURTFilterRegType(inputParam);}else if(fieldname===\"registrationType\"){// uRL = 'userroletemplate/getApprovalRegSubType';\ninputData={userinfo:_this.props.Login.userInfo,nflag:2,nregtypecode:parseInt(event.value),napprovalsubtypecode:_this.props.Login.masterData.defaultapprovalsubtype.value,ntemplatecode:_this.props.Login.masterData.defaultapprovalsubtype.item.ntemplatecode,isregneed:_this.props.Login.masterData.defaultapprovalsubtype.item.nisregsubtypeconfigneed};var _masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{defaultregtype:event});var _inputParam={masterData:_masterData,inputData:inputData};_this.props.getURTFilterRegSubType(_inputParam);}else{var _masterData2=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{defaultregsubtype:event});var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_masterData2}};_this.props.updateStore(updateInfo);}}};_this.ConfirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteRecord(\"delete\",deleteId);});};_this.approveRecord=function(operation,ncontrolCode){var selectedRecord=_this.props.Login.selectedRecord?_this.props.Login.selectedRecord:\"\";// const selectedInput = this.state.selectedInput ? this.state.selectedInput : \"\";\nvar selected=_this.props.Login.masterData.selectedURTVersion;if(selected[\"ntransactionstatus\"]===transactionStatus.APPROVED||selected[\"ntransactionstatus\"]===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTOAPPROVE\"}));}else{var inputData=[];inputData={\"ntreetemplatecode\":_this.props.Login.masterData.realApprovalSubTypeValue.item.ntemplatecode,\"napprovalsubtypecode\":_this.props.Login.masterData.realApprovalSubTypeValue.value,\"nregtypecode\":_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.value:-1,\"nregsubtypecode\":_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue.value:-1,\"ntreeversiontempcode\":selected.ntreeversiontempcode,\"napprovalconfigcode\":selectedRecord[\"napprovalconfigcode\"],\"userinfo\":_this.props.Login.userInfo,\"isregneed\":_this.props.Login.masterData.realApprovalSubTypeValue.item.nisregsubtypeconfigneed};var postParam={inputListName:\"listuserroletemplate\",selectedObject:\"selectedURTVersion\",primaryKeyField:\"ntreeversiontempcode\",primaryKeyValue:selected.ntreeversiontempcode,fetchUrl:\"userroletemplate/getUserroletemplatebyId\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={methodUrl:\"UserroleTemplatemaster\",classUrl:_this.props.Login.inputParam.classUrl,inputData:inputData,operation:operation,postParam:postParam,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,openModal:true,screenData:{inputParam:inputParam,masterData:masterData},operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.deleteRecord=function(operation,ncontrolCode){var selectedRecord=_this.props.Login.selectedRecord?_this.props.Login.selectedRecord:\"\";// const selectedInput = this.state.selectedInput ? this.state.selectedInput : \"\";\nvar selected=_this.props.Login.masterData.selectedURTVersion;if(selectedRecord[\"ntransactionstatus\"]===transactionStatus.APPROVED||selectedRecord[\"ntransactionstatus\"]===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTODELETE\"}));}else{var inputData=[];inputData={\"userinfo\":_this.props.Login.userInfo,\"ntreetemplatecode\":_this.props.Login.masterData.realApprovalSubTypeValue.item.ntemplatecode,\"napprovalsubtypecode\":_this.props.Login.masterData.realApprovalSubTypeValue.value,\"nregtypecode\":_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.value:-1,\"nregsubtypecode\":_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue.value:-1,\"ntreeversiontempcode\":selected.ntreeversiontempcode,\"isregneed\":_this.props.Login.masterData.realApprovalSubTypeValue.item.nisregsubtypeconfigneed};var postParam={inputListName:\"listuserroletemplate\",selectedObject:\"selectedURTVersion\",primaryKeyField:\"ntreeversiontempcode\",primaryKeyValue:selected.ntreeversiontempcode,fetchUrl:\"userroletemplate/getUserroletemplatebyId\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={methodUrl:\"UserroleTemplatemaster\",classUrl:_this.props.Login.inputParam.classUrl,inputData:inputData,operation:operation,postParam:postParam,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,openModal:true,screenData:{inputParam:inputParam,masterData:masterData},operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.saveTreetemplate=function(saveType,formRef){var listUserRoleTree=[];var levelno=0;var selectedRecord=_this.props.Login.selectedRecord?_this.props.Login.selectedRecord:\"\";//const selectedLevel = this.state.selectedRole.length>0 ? this.state.selectedRole : this.props.Login.selectedRecord?this.props.Login.selectedRecord:\"\";\n//this.state.selectedRole=this.props.Login.selectedRecord ? this.props.Login.selectedRecord : \"\";\nvar selectedInput=_this.state.selectedInput?_this.state.selectedInput:\"\";var selected=_this.props.Login.masterData.selectedURTVersion;_this.state.selectedRole=[];for(var index=0;index<_this.props.Login.totalLevel;index++){levelno=index+1;if(selectedRecord[index]){listUserRoleTree.push(selectedRecord[index].toString());//this.state.selectedRole.push((selectedRecord[index]).toString());\n}else{return toast.info(_this.props.intl.formatMessage({id:\"IDS_PLESESELECTTHELEVEL\"})+levelno);}// if (selectedLevel[index]) {\n//     listUserRoleTree.push((selectedLevel[index]).toString())\n//     this.state.selectedRole.push((listUserRoleTree[index]).toString());\n// }\n// else {\n//     return toast.info(this.props.intl.formatMessage({ id: \"IDS_PLESESELECTTHELEVEL\" }) + levelno);\n// }\n}var inputData=[];var methodUrl=\"\";inputData={\"userinfo\":_this.props.Login.userInfo,\"treetemptranstestgroup\":listUserRoleTree,\"specname\":selectedInput.sversiondescription,\"ntemplatecode\":_this.props.Login.masterData.realApprovalSubTypeValue.item.ntemplatecode,\"napprovalsubtypecode\":_this.props.Login.masterData.realApprovalSubTypeValue.value,\"nregtypecode\":_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.value:-1,\"nregsubtypecode\":_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue.value:-1,\"ntreeversiontempcode\":selected===undefined?-1:selected.ntreeversiontempcode?selected.ntreeversiontempcode:-1,\"napprovalconfigcode\":selectedRecord[\"napprovalconfigcode\"]?selectedRecord[\"napprovalconfigcode\"]:undefined,\"isregneed\":_this.props.Login.masterData.realApprovalSubTypeValue.item.nisregsubtypeconfigneed};var postParam=undefined;if(_this.props.Login.operation===\"create\"){methodUrl=\"UserRoleTemplatemaster\";}else{methodUrl=\"EditUserRoleTemplatemaster\";postParam={inputListName:\"listuserroletemplate\",selectedObject:\"selectedURTVersion\",primaryKeyField:\"ntreeversiontempcode\"};}var inputParam={methodUrl:methodUrl,classUrl:_this.props.Login.inputParam.classUrl,inputData:inputData,operation:_this.props.Login.operation,searchRef:_this.searchRef,formRef:formRef,postParam:postParam,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;//selectedRecord['esignreason']=\"\";\nif(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},selectedRecord:selectedRecord,saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.onChangeCombo=function(event,levelno,operation){var selectedRecord=_this.props.Login.selectedRecord?_this.props.Login.selectedRecord:{}||{};var index=_this.props.Login.userRoleActualData.findIndex(function(data){return data.nuserrolecode===parseInt(selectedRecord[levelno]);});if(event!==null){if(selectedRecord[levelno]){_this.props.Login.userRoleData.push(_this.props.Login.userRoleActualData[index]);}index=_this.props.Login.userRoleData.findIndex(function(data){return data.nuserrolecode===parseInt(event.value);});_this.props.Login.userRoleData.splice(index,1);index=_this.props.Login.userRoleActualData.findIndex(function(data){return data.nuserrolecode===parseInt(event.value);});_this.props.Login.userRoleTreeData[levelno]=_this.props.Login.userRoleActualData[index];selectedRecord[levelno]=event.value;// const  TaguserRoleData  = constructOptionList(this.props.Login.userRoleData ||[], \"nuserrolecode\",\n// \"suserrolename\" , undefined, undefined, undefined);\n// const  TagListuserRoleData  = TaguserRoleData.get(\"OptionList\")\nvar userRoleData=_this.props.Login.userRoleData||[];var userRoleTreeData=_this.props.Login.userRoleTreeData;var updateInfo={typeName:DEFAULT_RETURN,data:{userRoleData:userRoleData,selectedRecord:selectedRecord,userRoleTreeData:userRoleTreeData}};_this.props.updateStore(updateInfo);}else{if(selectedRecord[levelno]){_this.props.Login.userRoleData.push(_this.props.Login.userRoleActualData[index]);delete selectedRecord[levelno];}// const  TaguserRoleData  = constructOptionList(this.props.Login.userRoleData ||[], \"nuserrolecode\",\n// \"suserrolename\" , undefined, undefined, undefined);\n// const  TagListuserRoleData  = TaguserRoleData.get(\"OptionList\")\nvar _userRoleData=_this.props.Login.userRoleData||[];var _updateInfo={typeName:DEFAULT_RETURN,data:{userRoleData:_userRoleData}};_this.props.updateStore(_updateInfo,selectedRecord);}};_this.onEsignInputOnChange=function(event){// const selectedRecord = {...this.props.Login.selectedRecord,\n//     ...this.state.selectedRecord} || {};\nvar selectedRecord=_this.props.Login.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?3:4;}}else{selectedRecord[event.target.name]=event.target.value;}//this.setState({ selectedRecord });\nvar updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{// sreason: this.state.selectedRecord[\"esigncomments\"],\n// nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n// spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\nsreason:_this.props.Login.selectedRecord[\"esigncomments\"],nreasoncode:_this.props.Login.selectedRecord[\"esignreason\"]&&_this.props.Login.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.props.Login.selectedRecord[\"esignreason\"]&&_this.props.Login.selectedRecord[\"esignreason\"].label}),//password: this.state.selectedRecord[\"esignpassword\"]\npassword:_this.props.Login.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onInputOnChange=function(event){var selectedInput=_this.state.selectedInput||{};selectedInput[event.target.name]=event.target.value;// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { selectedInput }\n// }\n// this.props.updateStore(updateInfo);\n_this.setState({selectedInput:selectedInput});};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputData={userinfo:_this.props.Login.userInfo,nflag:_this.props.Login.masterData.realApprovalSubTypeValue.item.nisregsubtypeconfigneed===transactionStatus.YES?2:1,nregtypecode:parseInt(_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.value||-1:-1),nregsubtypecode:parseInt(_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue.value||-1:-1),napprovalsubtypecode:_this.props.Login.masterData.realApprovalSubTypeValue.value,ntreetemplatecode:_this.props.Login.masterData.realApprovalSubTypeValue.item.ntemplatecode,ntreeversiontempcode:-1,nmodulecode:1,isregneed:_this.props.Login.masterData.realApprovalSubTypeValue.item.nisregsubtypeconfigneed};var inputParam={masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{searchedData:undefined}),inputData:inputData};_this.props.getURTFilterSubmit(inputParam);// const inputParam = {\n//     inputData: { \"userinfo\": this.props.Login.userInfo },\n//     classUrl: \"userroletemplate\",\n//     methodUrl: \"Userroletemplate\",\n//     userInfo: this.props.Login.userInfo,\n//     displayName: \"IDS_USERROLETEMPLATE\"\n//     //screenName:\"IDS_USERROLETEMPLATE\"\n// };\n// this.props.callService(inputParam);\n};_this.onFilterSubmit=function(){var inputData={userinfo:_this.props.Login.userInfo,nflag:_this.props.Login.masterData.defaultapprovalsubtype.item.nisregsubtypeconfigneed===transactionStatus.YES?ApprovalSubType.TESTRESULTAPPROVAL:ApprovalSubType.TESTGROUPAPPROVAL,nregtypecode:parseInt(_this.props.Login.masterData.defaultregtype?_this.props.Login.masterData.defaultregtype.value||transactionStatus.NA:transactionStatus.NA),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultregsubtype?_this.props.Login.masterData.defaultregsubtype.value||transactionStatus.NA:transactionStatus.NA),napprovalsubtypecode:_this.props.Login.masterData.defaultapprovalsubtype.value,ntreetemplatecode:_this.props.Login.masterData.defaultapprovalsubtype.item.ntemplatecode,ntreeversiontempcode:-1,nmodulecode:1,isregneed:_this.props.Login.masterData.defaultapprovalsubtype.item.nisregsubtypeconfigneed};var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{realApprovalSubTypeValue:_this.props.Login.masterData.defaultapprovalsubtype,realRegTypeValue:_this.props.Login.masterData.defaultregtype,realRegSubTypeValue:_this.props.Login.masterData.defaultregsubtype});var inputParam={masterData:masterData,inputData:inputData,searchRef:_this.searchRef};if(inputData.napprovalsubtypecode===ApprovalSubType.TESTRESULTAPPROVAL){if(inputData.nregsubtypecode!==transactionStatus.NA&&inputData.nregtypecode!==transactionStatus.NA){_this.props.getURTFilterSubmit(inputParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}}else{_this.props.getURTFilterSubmit(inputParam);}};_this.state={openModal:false,userRoleTreeData:[],userRoleControlRights:[],URTvalues:[{URTvalue:\"\"}],selectedApprovalType:0,error:\"\",controlMap:new Map(),selectedInput:\"\",selectedRole:[],sidebarview:false};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.searchFieldList=[\"stransdisplaystatus\",\"sversionstatus\",\"sversiondescription\"];return _this;}_createClass(userroletempalate,[{key:\"appendInputtree\",value:function appendInputtree(e){var totalLevel=this.props.Login.totalLevel?this.props.Login.totalLevel:1;if(this.props.Login.selectedRecord[this.props.Login.id]!==undefined){var id=parseInt(this.props.Login.id)+1;if(id<9){if(totalLevel<this.props.Login.userRoleActualData.length){//let id = parseInt(e.currentTarget.id) + 1;\nvar totalid=totalLevel;if(totalid===id){if(this.props.Login.userRoleData.length<=0){toast.info(this.props.intl.formatMessage({id:\"IDS_NOUSERROLETOADDTONEXTLEVEL\"}));}else{var newInput=\"input-\".concat(totalLevel);var userRoleTreeData=this.props.Login.userRoleTreeData.concat([newInput]);var updateInfo={typeName:DEFAULT_RETURN,data:{userRoleTreeData:userRoleTreeData,totalLevel:totalLevel+1,id:id}};this.props.updateStore(updateInfo);}}}else{toast.info(this.props.intl.formatMessage({id:\"IDS_NOUSERROLETOADDTONEXTLEVEL\"}));}}}else{toast.info(this.props.intl.formatMessage({id:\"IDS_PLSSELECTUSERROLE\"}));}}},{key:\"removeTree\",value:function removeTree(event,i){var _this2=this;var userRoleTreeData=this.props.Login.userRoleTreeData;userRoleTreeData.splice(i,10);var totalLevel=this.props.Login.totalLevel?this.props.Login.totalLevel:1;var selectedRecord=this.props.Login.selectedRecord?this.props.Login.selectedRecord:\"\";var listUserRole=this.props.Login.userRoleData||[];if(selectedRecord[i]){var _loop=function _loop(j){var index=_this2.props.Login.userRoleActualData.findIndex(function(data){return data.nuserrolecode===parseInt(selectedRecord[j]);});listUserRole.push(_this2.props.Login.userRoleActualData[index]);delete selectedRecord[j];};for(var j=i;j<totalLevel;j++){_loop(j);};}// const  TagUserroleData  = constructOptionList(listUserRole ||[], \"nuserrolecode\",\n// \"suserrolename\" , undefined, undefined, undefined);\n// const  TagListUserroleData = TagUserroleData.get(\"OptionList\");\nvar userRoleData=listUserRole;var updateInfo={typeName:DEFAULT_RETURN,data:{userRoleTreeData:userRoleTreeData,userRoleData:userRoleData,selectedRecord:selectedRecord,totalLevel:i,id:i-1}};this.props.updateStore(updateInfo);}},{key:\"render\",value:function render(){var _this3=this;var _this$props$Login=this.props.Login,masterData=_this$props$Login.masterData,userInfo=_this$props$Login.userInfo,openModal=_this$props$Login.openModal,userRoleTreeData=_this$props$Login.userRoleTreeData,userRoleData=_this$props$Login.userRoleData,selectedRecord=_this$props$Login.selectedRecord;var _this$props$Login$mas=this.props.Login.masterData,listuserroletemplate=_this$props$Login$mas.listuserroletemplate,levelsuserroletemplate=_this$props$Login$mas.levelsuserroletemplate;var selectedInput=this.state.selectedInput;var selected=this.props.Login.masterData.selectedURTVersion;var addId=this.state.controlMap.has(\"AddUserRoleTempalate\")&&this.state.controlMap.get(\"AddUserRoleTempalate\").ncontrolcode;var editId=this.state.controlMap.has(\"EditUserRoleTempalate\")&&this.state.controlMap.get(\"EditUserRoleTempalate\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteUserRoleTempalate\")&&this.state.controlMap.get(\"DeleteUserRoleTempalate\").ncontrolcode;var approveId=this.state.controlMap.has(\"ApproveUserRoleTempalate\")&&this.state.controlMap.get(\"ApproveUserRoleTempalate\").ncontrolcode;var filterParam={inputListName:\"listuserroletemplate\",selectedObject:\"selectedURTVersion\",primaryKeyField:\"ntreeversiontempcode\",fetchUrl:\"userroletemplate/getUserroletemplatebyId\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};var mandatoryFields=[{\"mandatory\":true,\"idsName\":\"IDS_TEMPLATENAME\",\"dataField\":\"sversiondescription\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];var breadCrumbData=[];if(this.props.Login.masterData.realApprovalSubTypeValue&&this.props.Login.masterData.realApprovalSubTypeValue.value===ApprovalSubType.TESTRESULTAPPROVAL){breadCrumbData=[{\"label\":\"IDS_APPROVALSUBTYPE\",\"value\":this.props.Login.masterData.realApprovalSubTypeValue?this.props.Login.masterData.realApprovalSubTypeValue.label:\"-\"},{\"label\":\"IDS_REGTYPE\",\"value\":this.props.Login.masterData.realRegTypeValue?this.props.Login.masterData.realRegTypeValue.label:\"-\"},{\"label\":\"IDS_REGSUBTYPE\",\"value\":this.props.Login.masterData.realRegSubTypeValue?this.props.Login.masterData.realRegSubTypeValue.label:\"-\"}];}else{breadCrumbData=[{\"label\":\"IDS_APPROVALSUBTYPE\",\"value\":this.props.Login.masterData.realApprovalSubTypeValue?this.props.Login.masterData.realApprovalSubTypeValue.label:\"-\"}];}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.props.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(ListMaster,{masterData:masterData,formatMessage:this.props.intl.formatMessage,screenName:this.props.intl.formatMessage({id:\"IDS_USERROLETEMPLATE\"}),masterList:this.props.Login.masterData.searchedData||listuserroletemplate,userInfo:this.props.Login.userInfo,getMasterDetail:function getMasterDetail(URTvalue){return _this3.props.getTreetemplate(URTvalue,masterData,userInfo);},selectedMaster:this.props.Login.masterData.selectedURTVersion||{}//this.props.Login.masterData.selected}\n,primaryKeyField:\"ntreeversiontempcode\",mainField:\"sversiondescription\"//firstField=\"sversiondescription\"\n,firstField:\"stransdisplaystatus\"//secondField=\"stransdisplaystatus\"\n,isIDSField:\"No\",openModal:function openModal(){return _this3.props.addScreenModel(\"create\",masterData,userInfo,addId,selectedInput);},userRoleControlRights:this.state.userRoleControlRights,addId:addId,filterColumnData:this.props.filterColumnData,filterParam:filterParam,searchRef:this.searchRef,reloadData:this.reloadData,hidePaging:true,needAccordianFilter:false,showFilterIcon:true,onFilterSubmit:this.onFilterSubmit,filterComponent:[{\"IDS_USERROLETEMPLATEFILTER\":/*#__PURE__*/React.createElement(UserRoleTemplateFilter,{formatMessage:this.props.intl.formatMessage,filterApprovalSubtype:this.state.listApprovalsubtype||[],filterRegistrationType:this.state.listRegistrationType||[],filterRegistrationSubType:this.state.listRegistrationSubType||[],defaultapprovalsubtype:this.props.Login.masterData[\"defaultapprovalsubtype\"]||{},defaultregsubtype:this.props.Login.masterData[\"defaultregsubtype\"]||[],defaultregtype:this.props.Login.masterData[\"defaultregtype\"]||[],selectedApprovalType:this.props.Login.masterData.defaultapprovalsubtype||[],selectedInput:selectedInput||[],isRegNeed:this.props.Login.masterData.defaultapprovalsubtype?this.props.Login.masterData.defaultapprovalsubtype.item.nisregsubtypeconfigneed:transactionStatus.NO,filterComboChange:this.filterComboChange})}]})),this.props.Login.masterData.selectedURTVersion&&listuserroletemplate&&listuserroletemplate.length>0?/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.props.sidebarview?'8':\"10\"),className:\"position-relative\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-view-btn-block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-view-btn \",onClick:this.props.parentFunction},!this.props.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"}))),/*#__PURE__*/React.createElement(ListWrapper,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},selected&&/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"product-title-main\"},selected.sversiondescription))),/*#__PURE__*/React.createElement(Card.Subtitle,{className:\"readonly-text font-weight-normal\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:8,className:\"d-flex\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"product-title-sub\"},this.props.intl.formatMessage({id:\"IDS_VERSION\"}),\" : \",selected.nversionno===-1?\"-\":selected.nversionno),/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined \".concat(selected.ntransactionstatus===transactionStatus.DRAFT?\"outline-secondary\":selected.ntransactionstatus===transactionStatus.APPROVED?\"outline-success\":\"outline-danger\",\" btn-sm mx-md-3 mx-sm-2\")},selected.stransdisplaystatus)),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(Nav,{style:{float:\"right\"}},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})//  data-for=\"tooltip_list_wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(){return _this3.props.fetchRecordById(\"ntreeversiontempcode\",selected.ntreeversiontempcode,masterData,\"update\",_this3.props.Login.selectedRecord,selectedInput,userInfo,editId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"})//  data-for=\"tooltip_list_wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this3.ConfirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_APPROVE\"})//   data-for=\"tooltip_list_wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(approveId)===-1,onClick:function onClick(){return _this3.approveRecord(\"approve\",approveId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{name:\"URTapprove\",icon:faThumbsUp}))))))))),/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(ListWrapper,{className:\"card-body\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"tree-view1 border-left tree-left\"},levelsuserroletemplate?levelsuserroletemplate.map(function(input,i){return/*#__PURE__*/React.createElement(ListWrapper,{key:i,className:\"form-label-group tree-level list_get\"},/*#__PURE__*/React.createElement(NavHeader,{className:\"line\",style:{width:(i+1)*10}},\" \"),/*#__PURE__*/React.createElement(NavHeader,{id:i,value:_this3.props.Login.totalLevel,className:\"add_field_button\"},\"+\"),/*#__PURE__*/React.createElement(NavHeader,{className:\"levelcolour\",ml:1},_this3.props.intl.formatMessage({id:\"IDS_LEVEL\"}),\" \",i+1),/*#__PURE__*/React.createElement(ListWrapper,{style:{marginLeft:(i+8)*10}},/*#__PURE__*/React.createElement(FormInput,{className:\"input_custom\",value:input.sleveluserrole,id:\"levelname\",type:\"text\"})));}):\"\"))))):\"\")),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{operation:this.props.Login.operation,onSaveClick:this.saveTreetemplate,validateEsign:this.validateEsign,esign:this.props.Login.loadEsign,screenName:\"IDS_USERROLETEMPLATE\",mandatoryFields:mandatoryFields,selectedRecord:this.props.Login.loadEsign?this.props.Login.selectedRecord:selectedInput,closeModal:this.closeModel,show:openModal,inputParam:1,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation// formatMessage={this.props.intl.formatMessage}\n,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.Login.inputParam//selectedRecord={this.state.selectedRecord || {}}\n,selectedRecord:this.props.Login.selectedRecord||{}}):/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_TEMPLATENAME\"}),name:\"sversiondescription\",as:\"text\",onChange:function onChange(event){return _this3.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_TEMPLATENAME\"}),defaultValue:selectedInput?selectedInput[\"sversiondescription\"]:\"\",isMandatory:true,required:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ListWrapper,{className:\"tree-view border-left\"},userRoleTreeData?userRoleTreeData.map(function(input,i){return/*#__PURE__*/React.createElement(ListWrapper,{className:\"form-label-group tree-level\"},/*#__PURE__*/React.createElement(NavHeader,{className:\"line\",style:{width:(i+1)*10}},\" \"),/*#__PURE__*/React.createElement(NavHeader,{id:i,value:_this3.props.Login.totalLevel,className:\"add_field_button\"},\"+\"),/*#__PURE__*/React.createElement(NavHeader,{md:1},_this3.props.intl.formatMessage({id:\"IDS_LEVEL\"}),\" \",/*#__PURE__*/React.createElement(NavHeader,{className:\"tree-value\"},i+1)),/*#__PURE__*/React.createElement(Nav,{className:\"btn mr-2 action-icons-wrap\",style:{float:\"right\",visibility:i===0?'hidden':'visible'},\"data-tip\":_this3.props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(event){return _this3.removeTree(event,i);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{name:\"URTMDelete\",icon:faTrashAlt,className:\"ActionIconColor\"})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,style:{marginLeft:(i+3)*10}},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nuserrolecode\",placeholder:_this3.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,optionId:\"nuserrolecode\",optionValue:\"suserrolename\",defaultValue:{\"value\":input[\"nuserrolecode\"],\"label\":input[\"sleveluserrole\"]},options:userRoleData?constructOptionList(userRoleData||[],\"nuserrolecode\",\"suserrolename\",undefined,undefined,undefined).get(\"OptionList\"):[],onChange:function onChange(event){return _this3.onChangeCombo(event,i,_this3.props.Login.operation);},isMulti:false,isSearchable:false,isDisabled:false// placeholder=\"Select User Role\"\n,isClearable:true}))));}):\"\"),/*#__PURE__*/React.createElement(NavHeader,null,/*#__PURE__*/React.createElement(Button,{name:\"URTMAdd\",onClick:function onClick(e){return _this3.appendInputtree(e);},\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),className:\"btn btn-circle solid-blue\",role:\"button\"},\"+\"))))}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var updateState=false;var _this$state=this.state,selectedRecord=_this$state.selectedRecord,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,listApprovalsubtype=_this$state.listApprovalsubtype,listRegistrationType=_this$state.listRegistrationType,listRegistrationSubType=_this$state.listRegistrationSubType;if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);updateState=true;}}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){updateState=true;selectedRecord=this.props.Login.selectedRecord;}// if (this.props.Login.selectedInput !== previousProps.Login.selectedInput) {\n//     updateState = true;\n//     selectedInput = this.props.Login.selectedInput\n// }\nif(this.props.Login.masterData!==previousProps.Login.masterData){updateState=true;// const selectedRecord = {}\nvar selectedInput={};var Taglstapprovalsubtype;var TaglistRegistrationType;var TaglistRegistrationSubType;if(this.props.Login.masterData.levelsuserroletemplate&&this.props.Login.masterData.levelsuserroletemplate.length>0){selectedRecord[\"napprovalconfigcode\"]=this.props.Login.masterData.levelsuserroletemplate[0][\"napprovalconfigcode\"];selectedRecord[\"ntransactionstatus\"]=this.props.Login.masterData.levelsuserroletemplate[0][\"ntransactionstatus\"];}else{if(selectedRecord){selectedRecord[\"napprovalconfigcode\"]=-1;}else{selectedRecord={napprovalconfigcode:-1};}selectedRecord[\"ntransactionstatus\"]=this.props.Login.selectedRecord?this.props.Login.selectedRecord[\"ntransactionstatus\"]:[];}// selectedRecord[\"napprovalconfigcode\"] = this.props.Login.masterData.levelsuserroletemplate ? this.props.Login.masterData.levelsuserroletemplate.length > 0 ?\n//     this.props.Login.masterData.levelsuserroletemplate[0][\"napprovalconfigcode\"] : -1 : -1\n// selectedRecord[\"ntransactionstatus\"] = this.props.Login.masterData.levelsuserroletemplate ? this.props.Login.masterData.levelsuserroletemplate.length > 0 ?\n//     this.props.Login.masterData.levelsuserroletemplate[0][\"ntransactionstatus\"] :\n//     this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ntransactionstatus\"] : [] : [];\nif(this.props.Login.masterData.lstapprovalsubtype){Taglstapprovalsubtype=constructOptionList(this.props.Login.masterData.lstapprovalsubtype||[],\"napprovalsubtypecode\",\"ssubtypename\",\"ntemplatecode\",\"ascending\",undefined);listApprovalsubtype=Taglstapprovalsubtype.get(\"OptionList\");}if(this.props.Login.masterData.listRegistrationType){TaglistRegistrationType=constructOptionList(this.props.Login.masterData.listRegistrationType||[],\"nregtypecode\",\"sregtypename\",undefined,undefined,undefined);listRegistrationType=TaglistRegistrationType.get(\"OptionList\");}if(this.props.Login.masterData.listRegistrationSubType){TaglistRegistrationSubType=constructOptionList(this.props.Login.masterData.listRegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",\"ascending\",undefined);listRegistrationSubType=TaglistRegistrationSubType.get(\"OptionList\");}if(this.props.Login.masterData.levelsuserroletemplate){sortData(this.props.Login.masterData.levelsuserroletemplate,\"ascending\",\"nlevelno\");}selectedInput[\"isRegNeed\"]=this.props.Login.masterData.selectedInput?this.props.Login.masterData.selectedInput[\"isRegNeed\"]:this.props.Login.masterData.lstapprovalsubtype?this.props.Login.masterData.lstapprovalsubtype.length>0?this.props.Login.masterData.lstapprovalsubtype[0][\"nisregsubtypeconfigneed\"]:\"\"?\"\":\"\":\"\";if(updateState){this.setState({selectedRecord:selectedRecord,controlMap:controlMap,userRoleControlRights:userRoleControlRights,listApprovalsubtype:listApprovalsubtype,listRegistrationType:listRegistrationType,listRegistrationSubType:listRegistrationSubType,selectedInput:selectedInput});}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(!props.Login.loadEsign){return{selectedRecord:_objectSpread(_objectSpread({},state.selectedRecord),{},{esigncomments:'',esignpassword:''})};}return null;}}]);return userroletempalate;}(Component);var mapStatetoProps=function mapStatetoProps(state){return{Login:state.Login};};export default connect(mapStatetoProps,{callService:callService,crudMaster:crudMaster,addScreenModel:addScreenModel,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getURTFilterRegType:getURTFilterRegType,getURTFilterRegSubType:getURTFilterRegSubType,getURTFilterSubmit:getURTFilterSubmit,fetchRecordById:fetchRecordById,getTreetemplate:getTreetemplate,filterColumnData:filterColumnData,postCRUDOrganiseSearch:postCRUDOrganiseSearch})(injectIntl(userroletempalate));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/userroletemplate/userroletemplate.component.jsx"],"names":["FormInput","FormSelectSearch","Row","Col","Card","Nav","Button","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","connect","sortData","getControlMap","showEsign","constructOptionList","React","Component","NavHeader","ContentPanel","ListWrapper","callService","crudMaster","updateStore","addScreenModel","validateEsignCredential","getURTFilterRegType","getURTFilterRegSubType","getURTFilterSubmit","fetchRecordById","getTreetemplate","filterColumnData","postCRUDOrganiseSearch","injectIntl","toast","ListMaster","UserRoleTemplateFilter","SlideOutModal","DEFAULT_RETURN","Esign","ApprovalSubType","transactionStatus","BreadcrumbComponent","Affix","ConfirmMessage","userroletempalate","props","sidebarExpandCollapse","setState","sidebarview","closeModel","loadEsign","Login","openModal","selectedRecord","operation","updateInfo","typeName","data","filterComboChange","event","fieldname","inputData","userinfo","userInfo","nflag","napprovalsubtypecode","parseInt","value","ntemplatecode","item","isregneed","nisregsubtypeconfigneed","masterData","defaultapprovalsubtype","inputParam","nregtypecode","defaultregtype","defaultregsubtype","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","approveRecord","ncontrolCode","selected","selectedURTVersion","APPROVED","RETIRED","warn","realApprovalSubTypeValue","realRegTypeValue","realRegSubTypeValue","ntreeversiontempcode","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","fetchUrl","fecthInputObject","methodUrl","classUrl","state","userRoleControlRights","nformcode","screenData","saveTreetemplate","saveType","formRef","listUserRoleTree","levelno","selectedInput","selectedRole","index","totalLevel","push","toString","info","sversiondescription","undefined","searchRef","onChangeCombo","userRoleActualData","findIndex","nuserrolecode","userRoleData","splice","userRoleTreeData","onEsignInputOnChange","target","type","name","checked","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","onInputOnChange","reloadData","current","YES","nregsubtypecode","ntreetemplatecode","nmodulecode","searchedData","onFilterSubmit","TESTRESULTAPPROVAL","TESTGROUPAPPROVAL","NA","URTvalues","URTvalue","selectedApprovalType","error","controlMap","Map","createRef","searchFieldList","e","length","totalid","newInput","concat","i","listUserRole","j","listuserroletemplate","levelsuserroletemplate","addId","has","get","ncontrolcode","editId","approveId","filterParam","mandatoryFields","breadCrumbData","listApprovalsubtype","listRegistrationType","listRegistrationSubType","NO","parentFunction","nversionno","ntransactionstatus","DRAFT","stransdisplaystatus","float","indexOf","map","input","width","marginLeft","sleveluserrole","visibility","removeTree","appendInputtree","previousProps","updateState","Object","values","Taglstapprovalsubtype","TaglistRegistrationType","TaglistRegistrationSubType","napprovalconfigcode","lstapprovalsubtype","masterStatus","errorCode","esigncomments","esignpassword","mapStatetoProps"],"mappings":"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","sourcesContent":["import FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Row, Col, Card, Nav, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faThumbsUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport { sortData, getControlMap, showEsign, constructOptionList } from '../../components/CommonScript';\r\nimport '../../assets/./styles/tree.css';\r\nimport React, { Component } from 'react';\r\nimport { NavHeader } from '../../components/sidebar/sidebar.styles';\r\nimport { ContentPanel, ListWrapper } from './userroletemplate.styles';\r\nimport {\r\n    callService, crudMaster, updateStore, addScreenModel, validateEsignCredential,\r\n    getURTFilterRegType, getURTFilterRegSubType, getURTFilterSubmit,\r\n    fetchRecordById, getTreetemplate, filterColumnData, postCRUDOrganiseSearch\r\n} from '../../actions';\r\nimport { injectIntl } from 'react-intl';\r\n// import rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport UserRoleTemplateFilter from './UserRoleTemplateFilter';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport Esign from '../audittrail/Esign';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { ApprovalSubType, transactionStatus } from '../../components/Enumeration';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\n\r\nclass userroletempalate extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openModal: false,\r\n            userRoleTreeData: [],\r\n            userRoleControlRights: [],\r\n            URTvalues: [{ URTvalue: \"\" }],\r\n            selectedApprovalType: 0,\r\n            error: \"\",\r\n            controlMap: new Map(),\r\n            selectedInput: \"\",\r\n            selectedRole:[],\r\n            sidebarview:false\r\n        }\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.searchFieldList = [\"stransdisplaystatus\", \"sversionstatus\", \"sversiondescription\"];\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n    closeModel = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord=this.props.Login.selectedRecord;\r\n               \r\n        \r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                // selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason']=\"\";\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                // selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason']=\"\";\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign ,selectedRecord}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    appendInputtree(e) {\r\n        const totalLevel = this.props.Login.totalLevel ? this.props.Login.totalLevel : 1;\r\n        if (this.props.Login.selectedRecord[this.props.Login.id] !== undefined) {\r\n            let id = parseInt(this.props.Login.id) + 1;\r\n\r\n            if (id < 9) {\r\n                if (totalLevel < (this.props.Login.userRoleActualData.length)) {\r\n                    //let id = parseInt(e.currentTarget.id) + 1;\r\n                    let totalid = totalLevel;\r\n                    if (totalid === id) {\r\n                        if (this.props.Login.userRoleData.length <= 0) {\r\n                            toast.info(this.props.intl.formatMessage({ id: \"IDS_NOUSERROLETOADDTONEXTLEVEL\" }));\r\n                        }\r\n                        else {\r\n                            var newInput = `input-${totalLevel}`;\r\n                            var userRoleTreeData = this.props.Login.userRoleTreeData.concat([newInput])\r\n                            const updateInfo = {\r\n                                typeName: DEFAULT_RETURN,\r\n                                data: { userRoleTreeData, totalLevel: totalLevel + 1, id }\r\n                            }\r\n\r\n                            this.props.updateStore(updateInfo)\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_NOUSERROLETOADDTONEXTLEVEL\" }));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTUSERROLE\" }));\r\n        }\r\n    }\r\n\r\n    removeTree(event, i) {\r\n        let userRoleTreeData = this.props.Login.userRoleTreeData;\r\n        userRoleTreeData.splice(i, 10);\r\n        const totalLevel = this.props.Login.totalLevel ? this.props.Login.totalLevel : 1;\r\n        const selectedRecord = this.props.Login.selectedRecord ? this.props.Login.selectedRecord : \"\";\r\n        let listUserRole = this.props.Login.userRoleData || [];\r\n        if (selectedRecord[i]) {\r\n            for (let j = i; j < totalLevel; j++) {\r\n                let index = (this.props.Login.userRoleActualData).findIndex(data => data.nuserrolecode === parseInt(selectedRecord[j]));\r\n                listUserRole.push(this.props.Login.userRoleActualData[index]);\r\n                delete selectedRecord[j];\r\n            };\r\n        }\r\n\r\n        // const  TagUserroleData  = constructOptionList(listUserRole ||[], \"nuserrolecode\",\r\n        // \"suserrolename\" , undefined, undefined, undefined);\r\n        // const  TagListUserroleData = TagUserroleData.get(\"OptionList\");\r\n\r\n        let userRoleData = listUserRole;\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { userRoleTreeData, userRoleData, selectedRecord, totalLevel: i, id: i - 1 }\r\n        }\r\n\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    filterComboChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            // let uRL = \"\";\r\n            let inputData = [];\r\n            if (fieldname === \"approvalSubType\") {\r\n                // uRL = 'userroletemplate/getApprovalRegSubType';\r\n                inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nflag: 1,\r\n                    napprovalsubtypecode: parseInt(event.value),\r\n                    ntemplatecode: parseInt(event.item.ntemplatecode),\r\n                    isregneed: parseInt(event.item.nisregsubtypeconfigneed),\r\n                }\r\n                let masterData = { ...this.props.Login.masterData, defaultapprovalsubtype: event }\r\n                let inputParam = { masterData, inputData }\r\n                this.props.getURTFilterRegType(inputParam)\r\n            }\r\n            else if (fieldname === \"registrationType\") {\r\n                // uRL = 'userroletemplate/getApprovalRegSubType';\r\n                inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nflag: 2,\r\n                    nregtypecode: parseInt(event.value),\r\n                    napprovalsubtypecode: this.props.Login.masterData.defaultapprovalsubtype.value,\r\n                    ntemplatecode: this.props.Login.masterData.defaultapprovalsubtype.item.ntemplatecode,\r\n                    isregneed: this.props.Login.masterData.defaultapprovalsubtype.item.nisregsubtypeconfigneed,\r\n                }\r\n                let masterData = { ...this.props.Login.masterData, defaultregtype: event }\r\n                let inputParam = { masterData, inputData }\r\n                this.props.getURTFilterRegSubType(inputParam)\r\n            } else {\r\n\r\n                let masterData = { ...this.props.Login.masterData, defaultregsubtype: event }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData }\r\n                }\r\n\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { masterData, userInfo, openModal, userRoleTreeData, userRoleData, selectedRecord } = this.props.Login;\r\n        const { listuserroletemplate, levelsuserroletemplate } = this.props.Login.masterData;\r\n        const { selectedInput } = this.state;\r\n        const selected = this.props.Login.masterData.selectedURTVersion;\r\n        const addId = this.state.controlMap.has(\"AddUserRoleTempalate\") && this.state.controlMap.get(\"AddUserRoleTempalate\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditUserRoleTempalate\") && this.state.controlMap.get(\"EditUserRoleTempalate\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteUserRoleTempalate\") && this.state.controlMap.get(\"DeleteUserRoleTempalate\").ncontrolcode;\r\n        const approveId = this.state.controlMap.has(\"ApproveUserRoleTempalate\") && this.state.controlMap.get(\"ApproveUserRoleTempalate\").ncontrolcode;\r\n\r\n        const filterParam = {\r\n            inputListName: \"listuserroletemplate\",\r\n            selectedObject: \"selectedURTVersion\",\r\n            primaryKeyField: \"ntreeversiontempcode\",\r\n            fetchUrl: \"userroletemplate/getUserroletemplatebyId\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList\r\n        };\r\n\r\n        const mandatoryFields = [\r\n            { \"mandatory\": true, \"idsName\": \"IDS_TEMPLATENAME\", \"dataField\": \"sversiondescription\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n\r\n        ];\r\n        let breadCrumbData = []\r\n        if (this.props.Login.masterData.realApprovalSubTypeValue && this.props.Login.masterData.realApprovalSubTypeValue.value === ApprovalSubType.TESTRESULTAPPROVAL) {\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_APPROVALSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realApprovalSubTypeValue ? this.props.Login.masterData.realApprovalSubTypeValue.label : \"-\"\r\n                }, {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.label : \"-\"\r\n                }, {\r\n                    \"label\": \"IDS_REGSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.label : \"-\"\r\n                }\r\n            ];\r\n        } else {\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_APPROVALSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realApprovalSubTypeValue ? this.props.Login.masterData.realApprovalSubTypeValue.label : \"-\"\r\n                }\r\n            ]\r\n        }\r\n        return (\r\n            <>\r\n                {/* <Preloader loading={loading} /> */}\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}> \r\n                            <ListMaster\r\n                                masterData={masterData}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_USERROLETEMPLATE\" })}\r\n                                masterList={this.props.Login.masterData.searchedData || listuserroletemplate}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                getMasterDetail={(URTvalue) => this.props.getTreetemplate(URTvalue, masterData, userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.selectedURTVersion || {}}//this.props.Login.masterData.selected}\r\n                                primaryKeyField=\"ntreeversiontempcode\"\r\n                                mainField=\"sversiondescription\"\r\n                                //firstField=\"sversiondescription\"\r\n                                firstField=\"stransdisplaystatus\"\r\n                                //secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"No\"\r\n                                openModal={() => this.props.addScreenModel(\"create\", masterData, userInfo, addId, selectedInput)}\r\n\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                                needAccordianFilter={false}\r\n                                showFilterIcon={true}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_USERROLETEMPLATEFILTER\":\r\n                                            <UserRoleTemplateFilter\r\n                                                formatMessage={this.props.intl.formatMessage}\r\n                                                filterApprovalSubtype={this.state.listApprovalsubtype || []}\r\n                                                filterRegistrationType={this.state.listRegistrationType || []}\r\n                                                filterRegistrationSubType={this.state.listRegistrationSubType || []}\r\n                                                defaultapprovalsubtype={this.props.Login.masterData[\"defaultapprovalsubtype\"] || {}}\r\n                                                defaultregsubtype={this.props.Login.masterData[\"defaultregsubtype\"] || []}\r\n                                                defaultregtype={this.props.Login.masterData[\"defaultregtype\"] || []}\r\n                                                selectedApprovalType={this.props.Login.masterData.defaultapprovalsubtype || []}\r\n                                                selectedInput={selectedInput || []}\r\n                                                isRegNeed={this.props.Login.masterData.defaultapprovalsubtype ? this.props.Login.masterData.defaultapprovalsubtype.item.nisregsubtypeconfigneed : transactionStatus.NO}\r\n                                                filterComboChange={this.filterComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n\r\n                        {this.props.Login.masterData.selectedURTVersion && listuserroletemplate && listuserroletemplate.length > 0 ?\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?                    \r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i> \r\n                                    }\r\n                                </div>\r\n                            </div> \r\n                                <ListWrapper className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        {(selected) &&\r\n                                            <Card.Header>\r\n                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                <Card.Title>\r\n                                                    <>\r\n                                                        <h1 className=\"product-title-main\">{selected.sversiondescription}</h1>\r\n                                                    </>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"readonly-text font-weight-normal\">\r\n                                                    <Row>\r\n                                                        <Col md={8} className=\"d-flex\">\r\n                                                            <h3 className=\"product-title-sub\">{this.props.intl.formatMessage({ id: \"IDS_VERSION\" })} : {selected.nversionno === -1 ? \"-\" : selected.nversionno}</h3>\r\n                                                            <span className={`btn btn-outlined ${selected.ntransactionstatus === transactionStatus.DRAFT ? \"outline-secondary\" : selected.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\" : \"outline-danger\"} btn-sm mx-md-3 mx-sm-2`}>\r\n                                                                {selected.stransdisplaystatus}</span>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                            <Nav style={{ float: \"right\" }}>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                  //  data-for=\"tooltip_list_wrap\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                    onClick={() => this.props.fetchRecordById(\"ntreeversiontempcode\", selected.ntreeversiontempcode, masterData, \"update\", this.props.Login.selectedRecord, selectedInput, userInfo, editId)}>\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                  //  data-for=\"tooltip_list_wrap\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                    {/* <ConfirmDialog\r\n                                                                            name=\"deleteMessage\"\r\n                                                                            message=\"Are you sure?\"\r\n                                                                            doLabel=\"Ok\"\r\n                                                                            doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                            icon={faTrashAlt}\r\n                                                                            //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                            hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                            handleClickDelete={() => this.deleteRecord(\"delete\", deleteId)}\r\n                                                                        /> */}\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                                 //   data-for=\"tooltip_list_wrap\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                    onClick={() => this.approveRecord(\"approve\", approveId)}>\r\n                                                                    <FontAwesomeIcon name=\"URTapprove\" icon={faThumbsUp} />\r\n                                                                </Nav.Link>\r\n                                                            </Nav>\r\n                                                            {/* </Tooltip> */}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                        }\r\n                                    </Card>\r\n                                </ListWrapper>\r\n\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <ListWrapper className=\"card-body\">\r\n                                        <React.Fragment>\r\n                                            <ListWrapper className=\"tree-view1 border-left tree-left\">\r\n                                                {levelsuserroletemplate ? levelsuserroletemplate.map((input, i) =>\r\n                                                    <ListWrapper key={i} className=\"form-label-group tree-level list_get\">\r\n                                                        <NavHeader className=\"line\" style={{ width: (i + 1) * 10 }}> </NavHeader>\r\n                                                        <NavHeader id={i} value={this.props.Login.totalLevel}\r\n                                                            className=\"add_field_button\">+</NavHeader>\r\n                                                        <NavHeader className=\"levelcolour\" ml={1}>{this.props.intl.formatMessage({ id: \"IDS_LEVEL\" })} {i + 1}</NavHeader>\r\n                                                        <ListWrapper style={{ marginLeft: (i + 8) * 10 }}>\r\n                                                            <FormInput className=\"input_custom\" value={input.sleveluserrole} id=\"levelname\" type=\"text\" />\r\n                                                        </ListWrapper>\r\n                                                    </ListWrapper>\r\n                                                ) : \"\"\r\n                                                }\r\n                                            </ListWrapper>\r\n                                        </React.Fragment>\r\n                                    </ListWrapper>\r\n                                </ContentPanel>\r\n                            </Col>\r\n                            : \"\"}\r\n                    </Row >\r\n                </div>\r\n\r\n\r\n                {this.props.Login.openModal ?\r\n                    < SlideOutModal\r\n                        operation={this.props.Login.operation}\r\n                        onSaveClick={this.saveTreetemplate}\r\n                        validateEsign={this.validateEsign}\r\n                        esign={this.props.Login.loadEsign}\r\n                        screenName=\"IDS_USERROLETEMPLATE\"\r\n                        mandatoryFields={mandatoryFields}\r\n                        selectedRecord={this.props.Login.loadEsign ? this.props.Login.selectedRecord : selectedInput}\r\n                        closeModal={this.closeModel}\r\n                        show={openModal}\r\n                        inputParam={1}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                // formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onEsignInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                //selectedRecord={this.state.selectedRecord || {}}\r\n                                selectedRecord={this.props.Login.selectedRecord || {}}\r\n                            />\r\n\r\n                            : <Row>\r\n                                <Col md={12}>\r\n                                    <FormInput\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                                        name={\"sversiondescription\"}\r\n                                        as=\"text\"\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                                        defaultValue={selectedInput ? selectedInput[\"sversiondescription\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={12}>\r\n                                    <ListWrapper className=\"tree-view border-left\">\r\n                                        {userRoleTreeData ?\r\n                                            userRoleTreeData.map((input, i) =>\r\n                                                <ListWrapper className=\"form-label-group tree-level\">\r\n                                                    <NavHeader className=\"line\" style={{ width: (i + 1) * 10 }}> </NavHeader>\r\n                                                    <NavHeader id={i} value={this.props.Login.totalLevel}\r\n                                                        className=\"add_field_button\">+</NavHeader>\r\n                                                    <NavHeader md={1}>{this.props.intl.formatMessage({ id: \"IDS_LEVEL\" })} <NavHeader className=\"tree-value\">{i + 1}</NavHeader>\r\n                                                    </NavHeader>\r\n                                                    <Nav className=\"btn mr-2 action-icons-wrap\" style={{ float: \"right\", visibility: i === 0 ? 'hidden' : 'visible' }} \r\n                                                    data-tip={this.props.intl.formatMessage({id: \"IDS_DELETE\"})} onClick={(event) => this.removeTree(event, i)}>\r\n                                                        <FontAwesomeIcon name=\"URTMDelete\" icon={faTrashAlt} className=\"ActionIconColor\" />\r\n                                                    </Nav>\r\n                                                    <Row>\r\n                                                        <Col md={12} style={{ marginLeft: (i + 3) * 10 }}>\r\n                                                            <FormSelectSearch\r\n                                                                name={\"nuserrolecode\"}\r\n                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                isMandatory={false}\r\n                                                                optionId=\"nuserrolecode\"\r\n                                                                optionValue=\"suserrolename\"\r\n                                                                defaultValue={{ \"value\": input[\"nuserrolecode\"], \"label\": input[\"sleveluserrole\"] }}\r\n                                                                options={userRoleData ? constructOptionList(userRoleData || [], \"nuserrolecode\",\r\n                                                                    \"suserrolename\", undefined, undefined, undefined).get(\"OptionList\") : []}\r\n                                                                onChange={(event) => this.onChangeCombo(event, i, this.props.Login.operation)}\r\n                                                                isMulti={false}\r\n                                                                isSearchable={false}\r\n                                                                isDisabled={false}\r\n                                                                // placeholder=\"Select User Role\"\r\n                                                                isClearable={true}>\r\n\r\n                                                            </FormSelectSearch>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListWrapper>\r\n                                            )\r\n                                            : \"\"}\r\n                                    </ListWrapper>\r\n\r\n                                    <NavHeader>\r\n                                        <Button name=\"URTMAdd\" onClick={(e) => this.appendInputtree(e)}  \r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        className=\"btn btn-circle solid-blue\" role=\"button\">+</Button>\r\n                                    </NavHeader>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(\"delete\", deleteId));\r\n    }\r\n\r\n    //approve the record\r\n    approveRecord = (operation, ncontrolCode) => {\r\n        const selectedRecord = this.props.Login.selectedRecord ? this.props.Login.selectedRecord : \"\";\r\n        // const selectedInput = this.state.selectedInput ? this.state.selectedInput : \"\";\r\n        const selected = this.props.Login.masterData.selectedURTVersion;\r\n        if (selected[\"ntransactionstatus\"] === transactionStatus.APPROVED || selected[\"ntransactionstatus\"] === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\" }));\r\n        }\r\n        else {\r\n            let inputData = [];\r\n            inputData = {\r\n                \"ntreetemplatecode\": this.props.Login.masterData.realApprovalSubTypeValue.item.ntemplatecode,\r\n                \"napprovalsubtypecode\": this.props.Login.masterData.realApprovalSubTypeValue.value,\r\n                \"nregtypecode\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.value : -1,\r\n                \"nregsubtypecode\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.value : -1,\r\n                \"ntreeversiontempcode\": selected.ntreeversiontempcode,\r\n                \"napprovalconfigcode\": selectedRecord[\"napprovalconfigcode\"],\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"isregneed\": this.props.Login.masterData.realApprovalSubTypeValue.item.nisregsubtypeconfigneed\r\n            }\r\n\r\n\r\n            const postParam = {\r\n                inputListName: \"listuserroletemplate\", selectedObject: \"selectedURTVersion\",\r\n                primaryKeyField: \"ntreeversiontempcode\",\r\n                primaryKeyValue: selected.ntreeversiontempcode,\r\n                fetchUrl: \"userroletemplate/getUserroletemplatebyId\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const inputParam = {\r\n                methodUrl: \"UserroleTemplatemaster\",\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                inputData: inputData,\r\n                operation: operation,\r\n                postParam,\r\n                selectedRecord : {...this.state.selectedRecord}\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, openModal: true, screenData: { inputParam, masterData },\r\n                        operation: operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //to delete a recored\r\n    deleteRecord = (operation, ncontrolCode) => {\r\n        const selectedRecord = this.props.Login.selectedRecord ? this.props.Login.selectedRecord : \"\";\r\n        // const selectedInput = this.state.selectedInput ? this.state.selectedInput : \"\";\r\n        const selected = this.props.Login.masterData.selectedURTVersion;\r\n        if (selectedRecord[\"ntransactionstatus\"] === transactionStatus.APPROVED || selectedRecord[\"ntransactionstatus\"] === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTODELETE\" }));\r\n        }\r\n        else {\r\n            let inputData = [];\r\n            inputData = {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"ntreetemplatecode\": this.props.Login.masterData.realApprovalSubTypeValue.item.ntemplatecode,\r\n                \"napprovalsubtypecode\": this.props.Login.masterData.realApprovalSubTypeValue.value,\r\n                \"nregtypecode\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.value : -1,\r\n                \"nregsubtypecode\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.value : -1,\r\n                \"ntreeversiontempcode\": selected.ntreeversiontempcode,\r\n                \"isregneed\": this.props.Login.masterData.realApprovalSubTypeValue.item.nisregsubtypeconfigneed\r\n            }\r\n\r\n            const postParam = {\r\n                inputListName: \"listuserroletemplate\", selectedObject: \"selectedURTVersion\",\r\n                primaryKeyField: \"ntreeversiontempcode\",\r\n                primaryKeyValue: selected.ntreeversiontempcode,\r\n                fetchUrl: \"userroletemplate/getUserroletemplatebyId\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n\r\n            const inputParam = {\r\n                methodUrl: \"UserroleTemplatemaster\",\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                inputData: inputData,\r\n                operation: operation,\r\n                postParam,\r\n                selectedRecord: {...this.state.selectedRecord}\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, openModal: true, screenData: { inputParam, masterData },\r\n                        operation: operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    saveTreetemplate = (saveType, formRef) => {\r\n\r\n        let listUserRoleTree = [];\r\n        let levelno = 0;\r\n        let selectedRecord = this.props.Login.selectedRecord ? this.props.Login.selectedRecord : \"\";\r\n        //const selectedLevel = this.state.selectedRole.length>0 ? this.state.selectedRole : this.props.Login.selectedRecord?this.props.Login.selectedRecord:\"\";\r\n        //this.state.selectedRole=this.props.Login.selectedRecord ? this.props.Login.selectedRecord : \"\";\r\n        const selectedInput = this.state.selectedInput ? this.state.selectedInput : \"\";\r\n        const selected = this.props.Login.masterData.selectedURTVersion;\r\n\r\n        this.state.selectedRole=[];\r\n        for (let index = 0; index < this.props.Login.totalLevel; index++) {\r\n            levelno = index + 1;\r\n            if (selectedRecord[index]) {\r\n                listUserRoleTree.push((selectedRecord[index]).toString())\r\n                //this.state.selectedRole.push((selectedRecord[index]).toString());\r\n            }\r\n            else {\r\n                return toast.info(this.props.intl.formatMessage({ id: \"IDS_PLESESELECTTHELEVEL\" }) + levelno);\r\n            }\r\n           \r\n            // if (selectedLevel[index]) {\r\n            //     listUserRoleTree.push((selectedLevel[index]).toString())\r\n            //     this.state.selectedRole.push((listUserRoleTree[index]).toString());\r\n            // }\r\n            // else {\r\n            //     return toast.info(this.props.intl.formatMessage({ id: \"IDS_PLESESELECTTHELEVEL\" }) + levelno);\r\n            // }\r\n        }\r\n        let inputData = [];\r\n        let methodUrl = \"\";\r\n        inputData = {\r\n            \"userinfo\": this.props.Login.userInfo,\r\n            \"treetemptranstestgroup\": listUserRoleTree,\r\n            \"specname\": selectedInput.sversiondescription,\r\n            \"ntemplatecode\": this.props.Login.masterData.realApprovalSubTypeValue.item.ntemplatecode,\r\n            \"napprovalsubtypecode\": this.props.Login.masterData.realApprovalSubTypeValue.value,\r\n            \"nregtypecode\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.value : -1,\r\n            \"nregsubtypecode\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.value : -1,\r\n            \"ntreeversiontempcode\": selected === undefined ? -1 : selected.ntreeversiontempcode ? selected.ntreeversiontempcode : -1,\r\n            \"napprovalconfigcode\": selectedRecord[\"napprovalconfigcode\"] ? selectedRecord[\"napprovalconfigcode\"] : undefined,\r\n            \"isregneed\": this.props.Login.masterData.realApprovalSubTypeValue.item.nisregsubtypeconfigneed,\r\n        }\r\n\r\n\r\n        let postParam = undefined;\r\n\r\n        if (this.props.Login.operation === \"create\") {\r\n            methodUrl = \"UserRoleTemplatemaster\";\r\n        }\r\n        else {\r\n            methodUrl = \"EditUserRoleTemplatemaster\";\r\n            postParam = { inputListName: \"listuserroletemplate\", selectedObject: \"selectedURTVersion\", primaryKeyField: \"ntreeversiontempcode\" };\r\n        }\r\n        const inputParam = {\r\n            methodUrl: methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            searchRef: this.searchRef,\r\n            formRef, postParam, selectedRecord:{...this.state.selectedRecord}\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        \r\n        //selectedRecord['esignreason']=\"\";\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, selectedRecord,saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n    onChangeCombo = (event, levelno, operation) => {\r\n        const selectedRecord = this.props.Login.selectedRecord ? this.props.Login.selectedRecord : {} || {};\r\n        let index = (this.props.Login.userRoleActualData).findIndex(data => data.nuserrolecode === parseInt(selectedRecord[levelno]));\r\n        if (event !== null) {\r\n            if (selectedRecord[levelno]) {\r\n                this.props.Login.userRoleData.push(this.props.Login.userRoleActualData[index]);\r\n            }\r\n            index = (this.props.Login.userRoleData).findIndex(data => data.nuserrolecode === parseInt(event.value));\r\n            (this.props.Login.userRoleData).splice(index, 1);\r\n            index = (this.props.Login.userRoleActualData).findIndex(data => data.nuserrolecode === parseInt(event.value));\r\n            (this.props.Login.userRoleTreeData[levelno]) = (this.props.Login.userRoleActualData[index]);\r\n\r\n            selectedRecord[levelno] = event.value;\r\n\r\n            // const  TaguserRoleData  = constructOptionList(this.props.Login.userRoleData ||[], \"nuserrolecode\",\r\n            // \"suserrolename\" , undefined, undefined, undefined);\r\n            // const  TagListuserRoleData  = TaguserRoleData.get(\"OptionList\")\r\n\r\n            let userRoleData = this.props.Login.userRoleData || [];\r\n            let userRoleTreeData = this.props.Login.userRoleTreeData;\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { userRoleData, selectedRecord, userRoleTreeData }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            if (selectedRecord[levelno]) {\r\n                this.props.Login.userRoleData.push(this.props.Login.userRoleActualData[index]);\r\n                delete selectedRecord[levelno];\r\n            }\r\n            // const  TaguserRoleData  = constructOptionList(this.props.Login.userRoleData ||[], \"nuserrolecode\",\r\n            // \"suserrolename\" , undefined, undefined, undefined);\r\n            // const  TagListuserRoleData  = TaguserRoleData.get(\"OptionList\")\r\n\r\n            let userRoleData = this.props.Login.userRoleData || [];\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { userRoleData }\r\n            }\r\n            this.props.updateStore(updateInfo, selectedRecord);\r\n        }\r\n    }\r\n\r\n    onEsignInputOnChange = (event) => {\r\n        // const selectedRecord = {...this.props.Login.selectedRecord,\r\n        //     ...this.state.selectedRecord} || {};\r\n        const selectedRecord = this.props.Login.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            }\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        //this.setState({ selectedRecord });\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { selectedRecord}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    // sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    // nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    // spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n                    sreason: this.props.Login.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.props.Login.selectedRecord[\"esignreason\"] && this.props.Login.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.props.Login.selectedRecord[\"esignreason\"] && this.props.Login.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                //password: this.state.selectedRecord[\"esignpassword\"]\r\n                password: this.props.Login.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedInput = this.state.selectedInput || {};\r\n        selectedInput[event.target.name] = event.target.value;\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { selectedInput }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        this.setState({ selectedInput })\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        let inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n            nflag: this.props.Login.masterData.realApprovalSubTypeValue.item.nisregsubtypeconfigneed === transactionStatus.YES ? 2 : 1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.value || -1 : -1),\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.value || -1 : -1),\r\n            napprovalsubtypecode: this.props.Login.masterData.realApprovalSubTypeValue.value,\r\n            ntreetemplatecode: this.props.Login.masterData.realApprovalSubTypeValue.item.ntemplatecode,\r\n            ntreeversiontempcode: -1,\r\n            nmodulecode: 1,\r\n            isregneed: this.props.Login.masterData.realApprovalSubTypeValue.item.nisregsubtypeconfigneed,\r\n        };    \r\n\r\n        let inputParam = { masterData:{...this.props.Login.masterData, searchedData:undefined}, inputData };\r\n        this.props.getURTFilterSubmit(inputParam);\r\n\r\n        // const inputParam = {\r\n        //     inputData: { \"userinfo\": this.props.Login.userInfo },\r\n        //     classUrl: \"userroletemplate\",\r\n        //     methodUrl: \"Userroletemplate\",\r\n        //     userInfo: this.props.Login.userInfo,\r\n        //     displayName: \"IDS_USERROLETEMPLATE\"\r\n        //     //screenName:\"IDS_USERROLETEMPLATE\"\r\n        // };\r\n\r\n        // this.props.callService(inputParam);\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let updateState = false\r\n\r\n        let { selectedRecord, userRoleControlRights, controlMap,\r\n            listApprovalsubtype, listRegistrationType, listRegistrationSubType } = this.state;\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]\r\n                    && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                updateState = true;\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        // if (this.props.Login.selectedInput !== previousProps.Login.selectedInput) {\r\n        //     updateState = true;\r\n        //     selectedInput = this.props.Login.selectedInput\r\n        // }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            \r\n            updateState = true;\r\n            // const selectedRecord = {}\r\n            const selectedInput = {}\r\n            let Taglstapprovalsubtype;\r\n            let TaglistRegistrationType;\r\n            let TaglistRegistrationSubType;\r\n\r\n            if (this.props.Login.masterData.levelsuserroletemplate  &&\r\n                this.props.Login.masterData.levelsuserroletemplate.length > 0){\r\n\r\n                    selectedRecord[\"napprovalconfigcode\"] = this.props.Login.masterData.levelsuserroletemplate[0][\"napprovalconfigcode\"];\r\n                    selectedRecord[\"ntransactionstatus\"] = this.props.Login.masterData.levelsuserroletemplate[0][\"ntransactionstatus\"] ;\r\n            }\r\n            else{\r\n                if (selectedRecord){\r\n                    selectedRecord[\"napprovalconfigcode\"] = -1;\r\n                 }\r\n                else{\r\n                    selectedRecord = {napprovalconfigcode: -1};\r\n                }\r\n                selectedRecord[\"ntransactionstatus\"] = this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ntransactionstatus\"] : [];\r\n                \r\n            }\r\n            // selectedRecord[\"napprovalconfigcode\"] = this.props.Login.masterData.levelsuserroletemplate ? this.props.Login.masterData.levelsuserroletemplate.length > 0 ?\r\n            //     this.props.Login.masterData.levelsuserroletemplate[0][\"napprovalconfigcode\"] : -1 : -1\r\n\r\n            // selectedRecord[\"ntransactionstatus\"] = this.props.Login.masterData.levelsuserroletemplate ? this.props.Login.masterData.levelsuserroletemplate.length > 0 ?\r\n            //     this.props.Login.masterData.levelsuserroletemplate[0][\"ntransactionstatus\"] :\r\n            //     this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ntransactionstatus\"] : [] : [];\r\n\r\n            if (this.props.Login.masterData.lstapprovalsubtype) {\r\n                Taglstapprovalsubtype = constructOptionList(this.props.Login.masterData.lstapprovalsubtype || [], \"napprovalsubtypecode\", \"ssubtypename\", \"ntemplatecode\", \"ascending\", undefined);\r\n                listApprovalsubtype = Taglstapprovalsubtype.get(\"OptionList\");\r\n            }\r\n            if (this.props.Login.masterData.listRegistrationType) {\r\n                TaglistRegistrationType = constructOptionList(this.props.Login.masterData.listRegistrationType || [], \"nregtypecode\", \"sregtypename\", undefined, undefined, undefined);\r\n                listRegistrationType = TaglistRegistrationType.get(\"OptionList\");\r\n            }\r\n            if (this.props.Login.masterData.listRegistrationSubType) {\r\n                TaglistRegistrationSubType = constructOptionList(this.props.Login.masterData.listRegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", \"ascending\", undefined);\r\n                listRegistrationSubType = TaglistRegistrationSubType.get(\"OptionList\");\r\n            }\r\n            if (this.props.Login.masterData.levelsuserroletemplate) {\r\n                sortData(this.props.Login.masterData.levelsuserroletemplate, \"ascending\", \"nlevelno\");\r\n            }\r\n\r\n            selectedInput[\"isRegNeed\"] = this.props.Login.masterData.selectedInput ? this.props.Login.masterData.selectedInput[\"isRegNeed\"]\r\n                : this.props.Login.masterData.lstapprovalsubtype ? this.props.Login.masterData.lstapprovalsubtype.length > 0 ?\r\n                    this.props.Login.masterData.lstapprovalsubtype[0][\"nisregsubtypeconfigneed\"] :\r\n                    \"\" ? \"\" : \"\" : \"\";\r\n            if (updateState) {\r\n                this.setState({\r\n                    selectedRecord, controlMap, userRoleControlRights,\r\n                    listApprovalsubtype, listRegistrationType, listRegistrationSubType,\r\n                    selectedInput\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n\r\n        let inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n            nflag: this.props.Login.masterData.defaultapprovalsubtype.item.nisregsubtypeconfigneed === transactionStatus.YES ? ApprovalSubType.TESTRESULTAPPROVAL : ApprovalSubType.TESTGROUPAPPROVAL,\r\n            nregtypecode: parseInt(this.props.Login.masterData.defaultregtype ? this.props.Login.masterData.defaultregtype.value || transactionStatus.NA : transactionStatus.NA),\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.defaultregsubtype ? this.props.Login.masterData.defaultregsubtype.value || transactionStatus.NA : transactionStatus.NA),\r\n            napprovalsubtypecode: this.props.Login.masterData.defaultapprovalsubtype.value,\r\n            ntreetemplatecode: this.props.Login.masterData.defaultapprovalsubtype.item.ntemplatecode,\r\n            ntreeversiontempcode: -1,\r\n            nmodulecode: 1,\r\n            isregneed: this.props.Login.masterData.defaultapprovalsubtype.item.nisregsubtypeconfigneed,\r\n        };\r\n        let masterData = {\r\n            ...this.props.Login.masterData,\r\n            realApprovalSubTypeValue: this.props.Login.masterData.defaultapprovalsubtype,\r\n            realRegTypeValue: this.props.Login.masterData.defaultregtype,\r\n            realRegSubTypeValue: this.props.Login.masterData.defaultregsubtype\r\n        }\r\n        let inputParam = { masterData, inputData,searchRef:this.searchRef };\r\n        if(inputData.napprovalsubtypecode === ApprovalSubType.TESTRESULTAPPROVAL){\r\n           if(inputData.nregsubtypecode !== transactionStatus.NA && inputData.nregtypecode !== transactionStatus.NA)\r\n           {\r\n              this.props.getURTFilterSubmit(inputParam);\r\n           }else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n           }\r\n        }\r\n        else{\r\n            this.props.getURTFilterSubmit(inputParam);\r\n        }\r\n       \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (!props.Login.loadEsign) {\r\n            return { selectedRecord: { ...state.selectedRecord , esigncomments: '', esignpassword: '' } }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n\r\n}\r\nexport default connect(mapStatetoProps, {\r\n    callService, crudMaster, addScreenModel, updateStore,\r\n    validateEsignCredential, getURTFilterRegType, getURTFilterRegSubType, getURTFilterSubmit,\r\n    fetchRecordById, getTreetemplate, filterColumnData, postCRUDOrganiseSearch\r\n})(injectIntl(userroletempalate));\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}