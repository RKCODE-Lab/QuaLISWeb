{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';var AddSampleTestComments=function AddSampleTestComments(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},props.selectedRecord[\"ncommenttypevisible\"]&&props.selectedRecord[\"ncommenttypevisible\"].value===1?/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_COMMENTTYPE\"}),name:\"ncommenttypecode\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:props.selectedRecord?props.selectedRecord[\"ncommenttypecode\"]:\"\",options:props.CommentType,optionId:\"ncommenttypecode\",optionValue:\"scommenttype\",isMandatory:true,isMulti:false,isSearchable:false,closeMenuOnSelect:true,alphabeticalSort:true,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,\"ncommenttypecode\");}}):\"\"),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_COMMENTNAME\"}),name:\"ncommentsubtypecode\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:props.selectedRecord?props.selectedRecord[\"ncommentsubtypecode\"]:\"\",options:props.CommentSubType,optionId:\"ncommentsubtypecode\",optionValue:\"scommentsubtype\",isMandatory:true,isMulti:false,isSearchable:false,closeMenuOnSelect:true,alphabeticalSort:true,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,\"ncommentsubtypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},props.selectedRecord[\"ncommentsubtypecode\"]&&props.selectedRecord[\"ncommentsubtypecode\"].value===3&&props.selectedRecord[\"spredefinedenable\"]===\"true\"?/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_ABBREVIATIONNAME\"}),name:\"spredefinedname\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ABBREVIATIONNAME\"}),value:props.selectedRecord?props.selectedRecord[\"spredefinedname\"]:\"\",isMandatory:true,required:true,maxLength:100}):\"\"),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"sdescription\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[\"sdescription\"]?props.selectedRecord[\"sdescription\"]:\"\",isMandatory:true,required:true,maxLength:2000})));};export default injectIntl(AddSampleTestComments);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/basemaster/AddSampleTestComments.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormSelectSearch","FormTextarea","AddSampleTestComments","props","selectedRecord","value","intl","formatMessage","id","CommentType","event","onComboChange","CommentSubType","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\nconst AddSampleTestComments = (props) => {\r\n    return (\r\n\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n            {props.selectedRecord[\"ncommenttypevisible\"] && \r\n                 props.selectedRecord[\"ncommenttypevisible\"].value === 1 ?\r\n            <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTTYPE\" })}\r\n                    name={\"ncommenttypecode\"} \r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"ncommenttypecode\"] : \"\"}\r\n                    options={props.CommentType}\r\n                    optionId=\"ncommenttypecode\"\r\n                    optionValue=\"scommenttype\"\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"ncommenttypecode\")}\r\n                    \r\n                />\r\n                :\"\"}\r\n            </Col>\r\n            <Col md={12}>\r\n            <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTNAME\" })}\r\n                    name={\"ncommentsubtypecode\"} \r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"ncommentsubtypecode\"] : \"\"}\r\n                    options={props.CommentSubType}\r\n                    optionId=\"ncommentsubtypecode\"\r\n                    optionValue=\"scommentsubtype\"\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"ncommentsubtypecode\")}\r\n                    \r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n            {props.selectedRecord[\"ncommentsubtypecode\"] && \r\n                 props.selectedRecord[\"ncommentsubtypecode\"].value === 3 && props.selectedRecord[\"spredefinedenable\"]===\"true\"?\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_ABBREVIATIONNAME\" })}\r\n                    name={\"spredefinedname\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ABBREVIATIONNAME\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"spredefinedname\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                /> : \"\"}\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id:\"IDS_DESCRIPTION\" })}\r\n                    name=\"sdescription\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord[\"sdescription\"] ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={2000}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddSampleTestComments) ;\r\n"]},"metadata":{},"sourceType":"module"}