{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\dynamicpreregdesign\\\\ExternalOrderSlideout.jsx\";\nimport { process } from '@progress/kendo-data-query';\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { MediaHeader } from '../../components/App.styles';\n\nclass ExternalOrderSlideout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.handleExpandChange = (row, dataState) => {\n      this.setState({\n        dynamicGridSelectedId: Object.keys(row[\"dataItem\"][\"nexternalordersamplecode\"])\n      });\n    };\n\n    const dataState = {\n      skip: 0\n    };\n    this.state = {\n      data: this.props.dynamicExternalSample,\n      dataResult: process(this.props.dynamicExternalSample, dataState),\n      dataState: dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      dynamicGridSelectedId: this.props.dynamicGridSelectedId\n    };\n    this.parentColumnList = [{\n      \"idsName\": \"IDS_SAMPLEID\",\n      \"dataField\": \"sexternalsampleid\",\n      \"width\": \"185px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_COMPONENT\",\n      \"dataField\": \"scomponentname\",\n      \"width\": \"185px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_SAMPLEQTY\",\n      \"dataField\": \"ssampleqty\",\n      \"width\": \"185px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    this.childColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"150px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    } // { \"idsName\": \"IDS_DEFAULTROLE\", \"dataField\": \"sdefaultstatus\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\n    ];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MediaHeader, {\n      className: `labelfont`,\n      style: {\n        \"font-size\": \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, this.props.selectedDynamicViewControl.label, \":\", \" \" + this.props.selectedRecord[this.props.selectedDynamicViewControl.label].label))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nusercode\",\n      data: this.state.data,\n      dataResult: this.state.dataResult,\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: this.parentColumnList,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      isRefreshRequired: false,\n      isImportRequired: false,\n      hideColumnFilter: true //methodUrl=\"SectionUsers\"\n      //  deleteRecord={this.deleteRecord}\n      // deleteParam={usersDeleteParam}\n      ,\n      pageable: false,\n      scrollable: \"scrollable\" //isComponent={false}\n      //isActionRequired={true}\n      ,\n      isToolBarRequired: false,\n      selectedId: this.state.dynamicGridSelectedId,\n      expandField: \"expanded\",\n      handleExpandChange: this.handleExpandChange,\n      hasChild: true,\n      childColumnList: this.childColumnList,\n      childMappingField: \"nexternalordersamplecode\",\n      childList: this.props.dynamicExternalTestChild || new Map()\n      /**Uncomment below handleRowClick when row click is needed */\n      //handleRowClick={this.handleRowClick}  \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default injectIntl(ExternalOrderSlideout);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/dynamicpreregdesign/ExternalOrderSlideout.jsx"],"names":["process","React","Col","Row","injectIntl","DataGrid","MediaHeader","ExternalOrderSlideout","Component","constructor","props","dataStateChange","event","setState","dataState","dataResult","state","data","handleExpandChange","row","dynamicGridSelectedId","Object","keys","skip","dynamicExternalSample","userRoleControlRights","controlMap","Map","parentColumnList","childColumnList","render","selectedDynamicViewControl","label","selectedRecord","inputParam","userInfo","dynamicExternalTestChild"],"mappings":"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","sourcesContent":["import { process } from '@progress/kendo-data-query';\r\nimport React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { MediaHeader } from '../../components/App.styles';\r\n\r\nclass ExternalOrderSlideout extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0\r\n        };\r\n\r\n        this.state = {\r\n            data: this.props.dynamicExternalSample,\r\n            dataResult: process(this.props.dynamicExternalSample, dataState),\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            dynamicGridSelectedId: this.props.dynamicGridSelectedId\r\n\r\n        };\r\n        this.parentColumnList = [{ \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"sexternalsampleid\", \"width\": \"185px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                                { \"idsName\": \"IDS_COMPONENT\", \"dataField\": \"scomponentname\", \"width\": \"185px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                                { \"idsName\": \"IDS_SAMPLEQTY\", \"dataField\": \"ssampleqty\", \"width\": \"185px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                                ];\r\n\r\n        this.childColumnList = [{ \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            // { \"idsName\": \"IDS_DEFAULTROLE\", \"dataField\": \"sdefaultstatus\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        ];\r\n    }\r\n\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\r\n\r\n    handleExpandChange = (row, dataState) => {\r\n        this.setState({ dynamicGridSelectedId: Object.keys(row[\"dataItem\"][\"nexternalordersamplecode\"]) })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row className=\"mb-4\">\r\n                    <Col md={12}>\r\n\r\n                        <MediaHeader className={`labelfont`} style={{\"font-size\":\"20px\"}}>{this.props.selectedDynamicViewControl.label}:{\" \" + this.props.selectedRecord[this.props.selectedDynamicViewControl.label].label}</MediaHeader>\r\n                        {/* <MediaSubHeader>\r\n                            <MediaLabel className={`labelfont`}>Parameter: {props.selecteRecord.sparametersynonym}</MediaLabel>\r\n                        </MediaSubHeader> */}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <DataGrid\r\n                        primaryKeyField={\"nusercode\"}\r\n                        data={this.state.data}\r\n                        dataResult={this.state.dataResult}\r\n                        dataState={this.state.dataState}\r\n                        dataStateChange={this.dataStateChange}\r\n                        extractedColumnList={this.parentColumnList}\r\n                        controlMap={this.state.controlMap}\r\n                        userRoleControlRights={this.state.userRoleControlRights}\r\n                        inputParam={this.props.inputParam}\r\n                        userInfo={this.props.userInfo}\r\n                        isRefreshRequired={false}\r\n                        isImportRequired={false}\r\n                        hideColumnFilter={true}\r\n                        //methodUrl=\"SectionUsers\"\r\n                        //  deleteRecord={this.deleteRecord}\r\n                        // deleteParam={usersDeleteParam}\r\n                        pageable={false}\r\n                        scrollable={\"scrollable\"}\r\n                        //isComponent={false}\r\n                        //isActionRequired={true}\r\n                        isToolBarRequired={false}\r\n                        selectedId={this.state.dynamicGridSelectedId}\r\n                        expandField=\"expanded\"\r\n                        handleExpandChange={this.handleExpandChange}\r\n                        hasChild={true}\r\n                        childColumnList={this.childColumnList}\r\n                        childMappingField={\"nexternalordersamplecode\"}\r\n                        childList={this.props.dynamicExternalTestChild || new Map()}\r\n                    /**Uncomment below handleRowClick when row click is needed */\r\n                    //handleRowClick={this.handleRowClick}  \r\n                    />\r\n                </Row>\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\nexport default injectIntl(ExternalOrderSlideout);"]},"metadata":{},"sourceType":"module"}