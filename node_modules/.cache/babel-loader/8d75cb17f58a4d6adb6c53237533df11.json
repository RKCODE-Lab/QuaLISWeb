{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\dynamicpreregdesign\\\\DynamicPreRegDesign.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { updateStore, getReactInputFields, selectRegistrationTemplate, filterColumnData, getRegistrationTemplate, getEditRegTemplate, crudMaster, getPreviewTemplate, getChildValues } from '../../actions/index';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { Row, Col, FormGroup, FormLabel, Card, Nav } from 'react-bootstrap';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport { ContentPanel, MediaLabel, ReadOnlyText } from '../../components/App.styles';\nimport { constructOptionList, deleteAttachmentDropZone, getControlMap, getSameRecordFromTwoArrays, onDropAttachFileList, showEsign } from '../../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport PreRegDesignPopUp from './PreRegDesignPopUp';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite';\nimport PortalModal from '../../PortalModal';\nimport { faCopy, faEye, faPencilAlt, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport DynamicSlideout from './DynamicSlideout.jsx';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { transactionStatus } from '../../components/Enumeration';\nimport FormInput from '../../components/form-input/form-input.component';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass DynamicPreRegDesign extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.filterComboChange = comboData => {\n      this.setState({\n        selectedSampleType: comboData\n      });\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.reloadData();\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openPortal = this.props.Login.openPortal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          openPortal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openModal = false;\n        openPortal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openPortal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          design: [],\n          selectedFieldRecord: {},\n          showConfirmAlert: false\n        } // data: {openModal, loadEsign, selectedRecord}\n\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openModal = ncontrolCode => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          selectedRecord: {},\n          operation: \"copy\",\n          ncontrolCode,\n          selectedId: null,\n          openModal: true,\n          screenName: this.props.Login.inputParam.displayName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let dataState = undefined;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let selectedId = null;\n      inputData['registrationtemplate'] = {\n        nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\n        sregtemplatename: this.state.selectedRecord['sregtemplatename']\n      };\n      const inputParam = {\n        methodUrl: \"RegistrationTemplate\",\n        classUrl: 'dynamicpreregdesign',\n        searchRef: this.searchRef,\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: inputData,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        selectedId,\n        dataState\n      };\n      const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n\n      if (esignNeeded) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: this.props.Login.inputParam.displayName\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteApproveTemplate(\"delete\", deleteId));\n    };\n\n    this.deleteApproveTemplate = (operation, ncontrolCode) => {\n      const masterData = this.props.Login.masterData;\n      const postParam = {\n        inputListName: \"RegistrationTemplate\",\n        selectedObject: \"selectedTemplate\",\n        primaryKeyField: \"nreactregtemplatecode\",\n        fetchUrl: \"dynamicpreregdesign/getRegistrationTemplateById\",\n        primaryKeyValue: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo,\n          nsampletypecode: this.state.breadCrumbData[0] ? this.state.breadCrumbData[0].item.value : -1\n        },\n        masterData: this.props.Login.masterData\n      };\n      const inputParam = {\n        methodUrl: \"RegistrationTemplate\",\n        classUrl: 'dynamicpreregdesign',\n        postParam,\n        searchRef: this.searchRef,\n        inputData: {\n          registrationtemplate: {\n            nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode\n          },\n          userinfo: this.props.Login.userInfo\n        },\n        operation\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            operation: \"delete\"\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.selectedSampleType) {\n        this.props.getRegistrationTemplate(this.state.selectedSampleType, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SAMPLETYPENOTAVALIABLE\"\n        }));\n      }\n    };\n\n    this.getPreviewTemplate = (masterData, userInfo, editId) => {\n      let data = [];\n      const withoutCombocomponent = [];\n      const Layout = this.props.Login.masterData.selectedTemplate.jsondata;\n      Layout.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n              if (componentrow.inputtype === \"combo\") {\n                data.push(componentrow);\n              } else {\n                withoutCombocomponent.push(componentrow);\n              }\n            }) : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component);\n          });\n        });\n      });\n      const comboComponents = data;\n      let childColumnList = {};\n      data.map(columnList => {\n        const val = this.comboChild(data, columnList, childColumnList, true);\n        data = val.data;\n        childColumnList = val.childColumnList;\n      });\n      this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord, childColumnList, comboComponents, withoutCombocomponent, false, true, new Map(), true);\n    };\n\n    this.comboChild = (data, columnList, childColumnList, slice) => {\n      let retunObj = {}; // if (data.findIndex(x => x.label === columnList.label) !== -1) {\n\n      if (!childColumnList.hasOwnProperty(columnList.label)) {\n        if (childColumnList[columnList.label] === undefined) {\n          if (columnList.hasOwnProperty(\"child\")) {\n            let childList = [];\n            columnList.child.map(childData => {\n              const index = data.findIndex(x => x.label === childData.label);\n\n              if (index !== -1) {\n                childList.push(data[index]);\n\n                if (slice) {\n                  data = [...data.slice(0, index), ...data.slice(index + 1)];\n                }\n              }\n            });\n            childColumnList[columnList.label] = childList;\n\n            if (childList.length > 0) {\n              childList.map(y => {\n                if (y.hasOwnProperty(\"child\")) {\n                  const val = this.comboChild(data, y, childColumnList, slice);\n                  retunObj[\"data\"] = val.data;\n                  retunObj[\"childColumnList\"] = val.childColumnList;\n                } else {\n                  retunObj[\"data\"] = data;\n                  retunObj[\"childColumnList\"] = childColumnList;\n                }\n              });\n            } else {\n              retunObj[\"data\"] = data;\n              retunObj[\"childColumnList\"] = childColumnList;\n            }\n          } else {\n            retunObj[\"data\"] = data;\n            retunObj[\"childColumnList\"] = childColumnList;\n          }\n        } else {\n          retunObj[\"data\"] = data;\n          retunObj[\"childColumnList\"] = childColumnList;\n        }\n      } else {\n        retunObj[\"data\"] = data;\n        retunObj[\"childColumnList\"] = childColumnList;\n      }\n\n      return retunObj;\n    };\n\n    this.onComboChange = (comboData, control, customName) => {\n      let comboName = customName || control.label;\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData) {\n        selectedRecord[comboName] = comboData;\n      } else {\n        selectedRecord[comboName] = [];\n      }\n\n      if (control.child && control.child.length > 0) {\n        const childComboList = getSameRecordFromTwoArrays(this.state.comboComponents, control.child, \"label\");\n        let childColumnList = {};\n        childComboList.map(columnList => {\n          const val = this.comboChild(this.state.comboComponents, columnList, childColumnList, false);\n          childColumnList = val.childColumnList;\n        });\n        const parentList = getSameRecordFromTwoArrays(this.state.withoutCombocomponent, control.child, \"label\");\n        const inputParem = {\n          child: control.child,\n          source: control.source,\n          primarykeyField: control.valuemember,\n          value: comboData.value,\n          item: comboData.item\n        };\n        this.props.getChildValues(inputParem, this.props.Login.userInfo, selectedRecord, this.props.Login.comboData, childComboList, childColumnList, this.state.withoutCombocomponent, [...childComboList, ...parentList]);\n      } else {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onInputOnChange = (event, value) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'toggle') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else if (event.target.type === 'numeric') {\n        if (/\\D/.test(event.target.value)) selectedRecord[event.target.name] = event.target.value;\n      } else if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = value;\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = value;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      }); // this.saveComponentProperties()\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onDrop = (value, type, oldVlaue) => {\n      const design = this.state.design;\n      let columns = design[0].children;\n      let designData = this.props.Login.ReactInputFields;\n      value = JSON.parse(value.fields);\n      value = { ...value,\n        type: \"component\"\n      };\n      let designDataIndex = designData.findIndex(item => item.label === value.label);\n      let firstIndex = columns[0] ? columns[0].children.findIndex(item => item.label === value.label) : -1;\n      let secondIndex = columns[1] ? columns[1].children.findIndex(item => item.label === value.label) : -1;\n      if (designDataIndex >= 0) designData.splice(designDataIndex, 1);\n\n      if (firstIndex >= 0) {\n        if (type !== 1) {\n          columns[0].children.splice(firstIndex, 1); // columns[0].splice(to, 0, columns[0].splice(from, 1)[0]);\n        } else {\n          if (oldVlaue) {\n            oldVlaue = JSON.parse(oldVlaue);\n            let from = columns[0].children.findIndex(item => item.label === value.label);\n            let to = columns[0].children.findIndex(item => item.label === oldVlaue.label);\n            columns[0].children.splice(to, 0, columns[0].children.splice(from, 1)[0]);\n          }\n        }\n      } else if (type === 1) {\n        if (columns[0]) {\n          columns[0].children.push(value);\n        } else {\n          columns[0] = {\n            id: \"1\",\n            type: \"column\",\n            children: []\n          };\n          columns[0].children.push(value);\n        }\n      }\n\n      if (secondIndex >= 0) {\n        if (type !== 2) {\n          columns[1].splice(secondIndex, 1);\n        } else {\n          if (oldVlaue) {\n            oldVlaue = JSON.parse(oldVlaue);\n            let from = columns[1].children.findIndex(item => item.label === value.label);\n            let to = columns[1].children.findIndex(item => item.label === oldVlaue.label);\n            columns[1].children.splice(to, 0, columns[1].children.splice(from, 1)[0]);\n          }\n        }\n      } else if (type === 2) {\n        if (columns[1]) {\n          columns[1].children.push(value);\n        } else {\n          columns[1] = {\n            id: \"2\",\n            type: \"column\",\n            children: []\n          };\n          columns[1].children.push(value);\n        }\n      } // design.push(columns)\n\n\n      this.setState({\n        designData,\n        design\n      });\n    };\n\n    this.onDropFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\" //fileToDelete:file.name \n\n      });\n    };\n\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.state = {\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      addTemplateId: -1,\n      editId: -1,\n      deleteId: -1,\n      approveID: -1,\n      previewId: -1,\n      copyID: -1,\n      selectedRecord: {},\n      sampleTypeOptions: [],\n      selectedSampleType: {},\n      breadCrumbData: [],\n      design: [],\n      comboComponents: [],\n      withoutCombocomponent: []\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.masterStatus\n      }));\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== \"\" && props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    const Layout = this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate.jsondata;\n    const filterParam = {\n      inputListName: \"RegistrationTemplate\",\n      selectedObject: \"selectedTemplate\",\n      primaryKeyField: \"nreactregtemplatecode\",\n      fetchUrl: \"dynamicpreregdesign/getDynamicPreRegDesign\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.state.breadCrumbData[0] ? this.state.breadCrumbData[0].item.value : -1\n      },\n      masterData: this.props.Login.masterData,\n      unchangeList: [\"realSampleType\", \"SampleTypes\"],\n      searchFieldList: [\"sregtemplatename\", \"stransdisplaystatus\"]\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, this.state.breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: this.state.breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      filterColumnData: this.props.filterColumnData,\n      screenName: \"Dynamic Pre-Reg Design\",\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.RegistrationTemplate || [],\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      getMasterDetail: template => this.props.selectRegistrationTemplate(template, this.props.Login.masterData, this.props.Login.userInfo),\n      selectedMaster: this.props.Login.masterData.selectedTemplate,\n      primaryKeyField: \"nreactregtemplatecode\",\n      mainField: \"sregtemplatename\",\n      firstField: \"stransdisplaystatus\" // secondField=\"stransdisplaystatus\"\n      ,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: this.state.addTemplateId,\n      filterParam: filterParam,\n      hidePaging: false,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getReactInputFields(this.props.Login.userInfo, 'create'),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_SAMPLETYPEFILTER\": /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n          name: \"nsampletypecode\",\n          formLabel: this.props.intl.formatMessage({\n            id: \"IDS_SAMPLETYPE\"\n          }),\n          isSearchable: false,\n          placeholder: \"Please Select...\",\n          options: this.state.sampleTypeOptions,\n          value: this.state.selectedSampleType ? this.state.selectedSampleType : \"\",\n          onChange: value => this.filterComboChange(value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 53\n          }\n        })))\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.selectedTemplate ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.selectedTemplate.sregtemplatename), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(MediaLabel, {\n      className: `btn-outlined ${this.props.Login.masterData.selectedTemplate.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\" : \"outline-secondary\"} btn-sm mr-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.selectedTemplate.stransdisplaystatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PREVIEW\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\" // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\n      ,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.getPreviewTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.previewId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(this.state.editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getEditRegTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"delete\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(this.state.deleteId) === -1,\n      onClick: () => this.ConfirmDelete(this.state.approveID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"approve\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(this.state.approveID) === -1,\n      onClick: () => this.deleteApproveTemplate('approve', this.state.approveID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"copy\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COPY\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\" // hidden={this.state.userRoleControlRights.indexOf(this.state.copyID) === -1}\n      ,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.openModal(this.state.copyID),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 61\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 41\n      }\n    }, Layout ? Layout.map(item => /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 57\n      }\n    }, item.children.length > 0 ? item.children.map(column => /*#__PURE__*/React.createElement(Col, {\n      md: 12 / item.children.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 69\n      }\n    }, column.children.map(component => {\n      return component.hasOwnProperty(\"children\") ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 89\n        }\n      }, component.children.map(componentrow => /*#__PURE__*/React.createElement(Col, {\n        md: 12 / componentrow.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 97\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 101\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 105\n        }\n      }, componentrow.displayname ? componentrow.displayname[this.props.Login.language] : componentrow.label), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 105\n        }\n      }, \"-\"))))) : /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 93\n        }\n      }, component.displayname ? component.displayname[this.props.Login.language] : component.label), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 93\n        }\n      }, \" \", \"-\"));\n    }))) : \"\")) : \"\"))) : \"\"))), this.props.Login.openPortal ? /*#__PURE__*/React.createElement(PortalModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PreRegDesignPopUp, {\n      closeModal: this.closeModal,\n      nsampletypecode: this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.value : -1,\n      searchRef: this.searchRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    })) : \"\", this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      size: this.props.Login.operation === 'copy' ? 'lg' : \"xl\",\n      onSaveClick: this.props.Login.operation === 'copy' ? this.onSaveClick : this.closeModal,\n      hideSave: this.props.Login.operation === 'copy' ? false : true,\n      loginoperation: this.props.Login.operation === 'copy' ? false : true,\n      operation: this.props.Login.operation,\n      screenName: this.props.Login.operation === 'copy' ? \"IDS_TEMPLATE\" : \"IDS_PREVIEW\",\n      closeModal: this.closeModal,\n      show: this.props.Login.openModal,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.operation === 'copy' ? [{\n        \"idsName\": \"IDS_TEMPLATENAME\",\n        \"dataField\": \"sregtemplatename\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }] : [],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: event => this.onInputOnChange(event),\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 29\n        }\n      }) : this.props.Login.operation === 'copy' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_TEMPLATENAME\"\n        }),\n        name: \"sregtemplatename\",\n        type: \"text\",\n        onChange: event => this.setState({\n          selectedRecord: { ...this.state.selectedRecord,\n            sregtemplatename: event.target.value\n          }\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_TEMPLATENAME\"\n        }),\n        value: this.state.selectedRecord.sregtemplatename ? this.state.selectedRecord.sregtemplatename : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 41\n        }\n      }))) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.props.Login.selectedRecord,\n        templateData: this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate.jsondata,\n        handleChange: this.handleChange,\n        handleDateChange: this.handleDateChange,\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputChange: this.onNumericInputChange,\n        comboData: this.props.Login.comboData,\n        onComboChange: this.onComboChange,\n        onDropFile: this.onDropFile,\n        deleteAttachment: this.deleteAttachment,\n        userInfo: this.props.Login.userInfo,\n        timeZoneList: this.props.Login.timeZoneList,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }) : \"\");\n  } // onSaveClickPreview=()=>{\n  // }\n\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      userRoleControlRights,\n      controlMap,\n      addTemplateId,\n      sampleTypeOptions,\n      breadCrumbData,\n      selectedSampleType,\n      editId,\n      deleteId,\n      approveID,\n      copyID,\n      selectedRecord,\n      comboComponents,\n      previewId,\n      withoutCombocomponent\n    } = this.state;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      updateState = true;\n      addTemplateId = controlMap.has(\"AddTemplate\") && controlMap.get(\"AddTemplate\").ncontrolcode;\n      editId = controlMap.has(\"EditTemplate\") && controlMap.get(\"EditTemplate\").ncontrolcode;\n      deleteId = controlMap.has(\"DeleteTemplate\") && controlMap.get(\"DeleteTemplate\").ncontrolcode;\n      approveID = controlMap.has(\"ApproveTemplate\") && controlMap.get(\"ApproveTemplate\").ncontrolcode;\n      copyID = controlMap.has(\"CopyTemplate\") && controlMap.get(\"CopyTemplate\").ncontrolcode;\n      previewId = controlMap.has(\"PreviewTemplate\") && controlMap.get(\"PreviewTemplate\").ncontrolcode;\n    }\n\n    if (this.props.Login.masterData.SampleTypes !== previousProps.Login.masterData.SampleTypes) {\n      sampleTypeOptions = constructOptionList(this.props.Login.masterData.SampleTypes || [], 'nsampletypecode', 'ssampletypename', 'nsampletypecode', \"ascending\").get(\"OptionList\");\n      selectedSampleType = sampleTypeOptions.length > 0 ? sampleTypeOptions[0] : {};\n      breadCrumbData = sampleTypeOptions.length > 0 ? [{\n        \"label\": \"IDS_SAMPLETYPE\",\n        \"value\": sampleTypeOptions[0].label,\n        \"item\": sampleTypeOptions[0]\n      }] : [];\n      updateState = true;\n    }\n\n    if (this.props.Login.realSampleType !== previousProps.Login.realSampleType) {\n      updateState = true;\n      breadCrumbData = this.props.Login.realSampleType || this.state.breadCrumbData;\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      updateState = true;\n      selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.comboComponents !== previousProps.Login.comboComponents) {\n      updateState = true;\n      comboComponents = this.props.Login.comboComponents;\n    }\n\n    if (this.props.Login.withoutCombocomponent !== previousProps.Login.withoutCombocomponent) {\n      updateState = true;\n      withoutCombocomponent = this.props.Login.withoutCombocomponent;\n    }\n\n    if (updateState) {\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        addTemplateId,\n        sampleTypeOptions,\n        breadCrumbData,\n        selectedSampleType,\n        editId,\n        deleteId,\n        approveID,\n        copyID,\n        selectedRecord,\n        comboComponents,\n        previewId,\n        withoutCombocomponent\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  updateStore,\n  crudMaster,\n  getReactInputFields,\n  selectRegistrationTemplate,\n  filterColumnData,\n  getRegistrationTemplate,\n  getEditRegTemplate,\n  getPreviewTemplate,\n  getChildValues\n})(injectIntl(DynamicPreRegDesign));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dynamicpreregdesign/DynamicPreRegDesign.jsx"],"names":["React","connect","injectIntl","updateStore","getReactInputFields","selectRegistrationTemplate","filterColumnData","getRegistrationTemplate","getEditRegTemplate","crudMaster","getPreviewTemplate","getChildValues","DEFAULT_RETURN","Row","Col","FormGroup","FormLabel","Card","Nav","ListMaster","ContentPanel","MediaLabel","ReadOnlyText","constructOptionList","deleteAttachmentDropZone","getControlMap","getSameRecordFromTwoArrays","onDropAttachFileList","showEsign","toast","PreRegDesignPopUp","FormSelectSearch","BreadcrumbComponent","Affix","PortalModal","faCopy","faEye","faPencilAlt","faThumbsUp","faTrashAlt","FontAwesomeIcon","ConfirmMessage","DynamicSlideout","SlideOutModal","Esign","transactionStatus","FormInput","mapStateToProps","state","Login","DynamicPreRegDesign","Component","constructor","props","openFilter","showFilter","updateInfo","typeName","data","filterComboChange","comboData","setState","selectedSampleType","closeFilter","onFilterSubmit","reloadData","closeModal","loadEsign","openModal","openPortal","selectedRecord","operation","selectedId","design","selectedFieldRecord","showConfirmAlert","ncontrolCode","screenName","inputParam","displayName","onSaveClick","saveType","formRef","inputData","dataState","undefined","userInfo","nreactregtemplatecode","masterData","selectedTemplate","sregtemplatename","methodUrl","classUrl","searchRef","esignNeeded","userRoleControlRights","nformcode","screenData","intl","formatMessage","id","ConfirmDelete","deleteId","confirmMessage","confirm","deleteApproveTemplate","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","primaryKeyValue","fecthInputObject","userinfo","nsampletypecode","breadCrumbData","item","value","registrationtemplate","current","warn","editId","withoutCombocomponent","Layout","jsondata","map","row","children","column","component","hasOwnProperty","componentrow","inputtype","push","comboComponents","childColumnList","columnList","val","comboChild","Map","slice","retunObj","label","childList","child","childData","index","findIndex","x","length","y","onComboChange","control","customName","comboName","childComboList","parentList","inputParem","source","primarykeyField","valuemember","onInputOnChange","event","target","type","name","checked","YES","NO","test","onNumericInputChange","handleDateChange","dateValue","dateName","onDrop","oldVlaue","columns","designData","ReactInputFields","JSON","parse","fields","designDataIndex","firstIndex","secondIndex","splice","from","to","onDropFile","attachedFiles","fieldName","maxSize","actionType","deleteAttachment","file","createRef","controlMap","addTemplateId","approveID","previewId","copyID","sampleTypeOptions","getDerivedStateFromProps","masterStatus","error","render","filterParam","unchangeList","searchFieldList","searchedData","RegistrationTemplate","template","ntransactionstatus","APPROVED","stransdisplaystatus","e","indexOf","displayname","language","validateEsign","handleChange","timeZoneList","defaultTimeZone","componentDidUpdate","previousProps","updateState","Object","values","ncontrolcode","has","get","SampleTypes","realSampleType","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    updateStore, getReactInputFields, selectRegistrationTemplate, filterColumnData,\r\n    getRegistrationTemplate, getEditRegTemplate, crudMaster, getPreviewTemplate, getChildValues\r\n} from '../../actions/index'\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { Row, Col, FormGroup, FormLabel, Card, Nav } from 'react-bootstrap';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { ContentPanel, MediaLabel, ReadOnlyText } from '../../components/App.styles';\r\nimport { constructOptionList, deleteAttachmentDropZone, getControlMap, getSameRecordFromTwoArrays, onDropAttachFileList, showEsign } from '../../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport PreRegDesignPopUp from './PreRegDesignPopUp';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport PortalModal from '../../PortalModal';\r\nimport { faCopy, faEye, faPencilAlt, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport DynamicSlideout from './DynamicSlideout.jsx'\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass DynamicPreRegDesign extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.state = {\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            addTemplateId: -1,\r\n            editId: -1, deleteId: -1, approveID: -1, previewId: -1, copyID: -1,\r\n            selectedRecord: {},\r\n            sampleTypeOptions: [],\r\n            selectedSampleType: {},\r\n            breadCrumbData: [],\r\n            design: [],\r\n            comboComponents: [],\r\n            withoutCombocomponent: []\r\n        };\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.masterStatus }));\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const Layout = this.props.Login.masterData.selectedTemplate &&\r\n            this.props.Login.masterData.selectedTemplate.jsondata\r\n\r\n        const filterParam = {\r\n            inputListName: \"RegistrationTemplate\",\r\n            selectedObject: \"selectedTemplate\",\r\n            primaryKeyField: \"nreactregtemplatecode\",\r\n            fetchUrl: \"dynamicpreregdesign/getDynamicPreRegDesign\",\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo, nsampletypecode: this.state.breadCrumbData[0] ?\r\n                    this.state.breadCrumbData[0].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            unchangeList: [\"realSampleType\", \"SampleTypes\"],\r\n            searchFieldList: [\"sregtemplatename\", \"stransdisplaystatus\"]\r\n        };\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {this.state.breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={this.state.breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                screenName={\"Dynamic Pre-Reg Design\"}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.RegistrationTemplate || []}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                getMasterDetail={(template) => this.props.selectRegistrationTemplate(template, this.props.Login.masterData, this.props.Login.userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.selectedTemplate}\r\n                                primaryKeyField=\"nreactregtemplatecode\"\r\n                                mainField=\"sregtemplatename\"\r\n                                firstField=\"stransdisplaystatus\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={this.state.addTemplateId}\r\n                                filterParam={filterParam}\r\n                                hidePaging={false}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getReactInputFields(this.props.Login.userInfo, 'create')}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_SAMPLETYPEFILTER\":\r\n                                            <Row>\r\n                                                <Col md={12}>\r\n                                                    <FormSelectSearch\r\n                                                        name={\"nsampletypecode\"}\r\n                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                                                        isSearchable={false}\r\n                                                        placeholder=\"Please Select...\"\r\n                                                        options={this.state.sampleTypeOptions}\r\n                                                        value={this.state.selectedSampleType ? this.state.selectedSampleType : \"\"}\r\n                                                        onChange={value => this.filterComboChange(value)}\r\n                                                    >\r\n                                                    </FormSelectSearch>\r\n                                                </Col>\r\n                                            </Row>\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            {this.props.Login.masterData.selectedTemplate ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {this.props.Login.masterData.selectedTemplate.sregtemplatename}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        <MediaLabel className={`btn-outlined ${this.props.Login.masterData.selectedTemplate.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\"\r\n                                                            : \"outline-secondary\"} btn-sm mr-3`}>\r\n                                                            {this.props.Login.masterData.selectedTemplate.stransdisplaystatus}\r\n                                                        </MediaLabel>\r\n                                                    </h2>\r\n                                                    <div className=\"d-inline\">\r\n                                                        <Nav.Link name=\"editInstrument\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEW\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.getPreviewTemplate(this.props.Login.masterData,\r\n                                                                this.props.Login.userInfo, this.state.previewId\r\n                                                            )}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faEye} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"editInstrument\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.editId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.props.getEditRegTemplate(this.props.Login.masterData, this.props.Login.userInfo, this.state.editId)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"delete\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.deleteId) === -1}\r\n                                                            onClick={() => this.ConfirmDelete(this.state.approveID)}>\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"approve\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(this.state.approveID) === -1}\r\n                                                            onClick={() => this.deleteApproveTemplate('approve', this.state.approveID)}>\r\n                                                            <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link name=\"copy\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                            data-for=\"tooltip_list_wrap\"\r\n                                                            // hidden={this.state.userRoleControlRights.indexOf(this.state.copyID) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.openModal(this.state.copyID)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faCopy} />\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body>\r\n                                            {\r\n                                                Layout ?\r\n                                                    Layout.map((item) =>\r\n                                                        <Row>\r\n                                                            {item.children.length > 0 ?\r\n                                                                item.children.map((column) =>\r\n                                                                    <Col md={12 / item.children.length}>\r\n                                                                        {\r\n                                                                            column.children.map((component) => {\r\n                                                                                return (\r\n                                                                                    component.hasOwnProperty(\"children\") ?\r\n                                                                                        <Row>\r\n                                                                                            {component.children.map(componentrow =>\r\n                                                                                                <Col md={12 / componentrow.length}>\r\n                                                                                                    <FormGroup>\r\n                                                                                                        <FormLabel>{componentrow.displayname ? componentrow.displayname[this.props.Login.language] : componentrow.label}</FormLabel>\r\n                                                                                                        <ReadOnlyText>{\"-\"}</ReadOnlyText>\r\n                                                                                                    </FormGroup>\r\n                                                                                                </Col>\r\n                                                                                            )\r\n                                                                                            }\r\n                                                                                        </Row>\r\n                                                                                        :\r\n                                                                                        <FormGroup>\r\n                                                                                            <FormLabel>{component.displayname ? component.displayname[this.props.Login.language] : component.label}</FormLabel>\r\n                                                                                            <ReadOnlyText> {\"-\"}</ReadOnlyText>\r\n                                                                                        </FormGroup>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n\r\n                                                                    </Col>\r\n                                                                )\r\n                                                                : \"\"}\r\n                                                        </Row>\r\n                                                    )\r\n                                                    :\r\n                                                    \"\"\r\n                                            }\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openPortal ?\r\n                    <PortalModal>\r\n                        <PreRegDesignPopUp\r\n                            closeModal={this.closeModal}\r\n                            nsampletypecode={this.state.breadCrumbData.length ? this.state.breadCrumbData[0].item.value : -1}\r\n                            searchRef={this.searchRef}\r\n                        />\r\n                    </PortalModal> : \"\"}\r\n\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        size={this.props.Login.operation === 'copy' ? 'lg' :\"xl\"}\r\n                        onSaveClick={this.props.Login.operation === 'copy' ? this.onSaveClick :this.closeModal}\r\n                        hideSave={this.props.Login.operation === 'copy' ? false : true}\r\n                        loginoperation={this.props.Login.operation === 'copy' ? false : true}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.operation === 'copy' ? \"IDS_TEMPLATE\" : \"IDS_PREVIEW\"}\r\n                        closeModal={this.closeModal}\r\n                        show={this.props.Login.openModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === 'copy' ?[{ \"idsName\": \"IDS_TEMPLATENAME\", \"dataField\": \"sregtemplatename\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" }]:[]}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={(event) => this.onInputOnChange(event)}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.operation === 'copy' ?\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormInput\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                                            name={\"sregtemplatename\"}\r\n                                            type=\"text\"\r\n                                            onChange={(event) => this.setState({ selectedRecord: { ...this.state.selectedRecord, sregtemplatename: event.target.value } })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                                            value={this.state.selectedRecord.sregtemplatename ? this.state.selectedRecord.sregtemplatename : \"\"}\r\n                                            isMandatory={true}\r\n                                            required={true}\r\n                                            maxLength={\"30\"}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                :\r\n                                <DynamicSlideout\r\n                                    selectedRecord={this.props.Login.selectedRecord}\r\n                                    templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                        this.props.Login.masterData.selectedTemplate.jsondata}\r\n                                    handleChange={this.handleChange}\r\n                                    handleDateChange={this.handleDateChange}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onNumericInputChange={this.onNumericInputChange}\r\n                                    comboData={this.props.Login.comboData}\r\n                                    onComboChange={this.onComboChange}\r\n                                    onDropFile={this.onDropFile}\r\n                                    deleteAttachment={this.deleteAttachment}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    timeZoneList={this.props.Login.timeZoneList}\r\n                                    defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                />\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    // onSaveClickPreview=()=>{\r\n\r\n    // }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let updateState = false;\r\n        let { userRoleControlRights, controlMap, addTemplateId,\r\n            sampleTypeOptions, breadCrumbData, selectedSampleType,\r\n            editId, deleteId, approveID, copyID, selectedRecord, comboComponents, previewId, withoutCombocomponent\r\n        } = this.state;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            updateState = true;\r\n            addTemplateId = controlMap.has(\"AddTemplate\") && controlMap.get(\"AddTemplate\").ncontrolcode;\r\n            editId = controlMap.has(\"EditTemplate\") && controlMap.get(\"EditTemplate\").ncontrolcode;\r\n            deleteId = controlMap.has(\"DeleteTemplate\") && controlMap.get(\"DeleteTemplate\").ncontrolcode;\r\n            approveID = controlMap.has(\"ApproveTemplate\") && controlMap.get(\"ApproveTemplate\").ncontrolcode;\r\n            copyID = controlMap.has(\"CopyTemplate\") && controlMap.get(\"CopyTemplate\").ncontrolcode;\r\n            previewId = controlMap.has(\"PreviewTemplate\") && controlMap.get(\"PreviewTemplate\").ncontrolcode;\r\n        }\r\n        if (this.props.Login.masterData.SampleTypes !== previousProps.Login.masterData.SampleTypes) {\r\n            sampleTypeOptions = constructOptionList(this.props.Login.masterData.SampleTypes || [], 'nsampletypecode', 'ssampletypename', 'nsampletypecode', \"ascending\").get(\"OptionList\")\r\n            selectedSampleType = sampleTypeOptions.length > 0 ? sampleTypeOptions[0] : {};\r\n            breadCrumbData = sampleTypeOptions.length > 0 ? [\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": sampleTypeOptions[0].label,\r\n                    \"item\": sampleTypeOptions[0]\r\n                }\r\n            ] : [];\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.realSampleType !== previousProps.Login.realSampleType) {\r\n            updateState = true;\r\n            breadCrumbData = this.props.Login.realSampleType || this.state.breadCrumbData;\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        if (this.props.Login.comboComponents !== previousProps.Login.comboComponents) {\r\n            updateState = true;\r\n            comboComponents = this.props.Login.comboComponents\r\n        }\r\n        if (this.props.Login.withoutCombocomponent !== previousProps.Login.withoutCombocomponent) {\r\n            updateState = true;\r\n            withoutCombocomponent = this.props.Login.withoutCombocomponent\r\n        }\r\n        if (updateState) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap, addTemplateId, sampleTypeOptions,\r\n                breadCrumbData, selectedSampleType,\r\n                editId, deleteId, approveID, copyID, selectedRecord, comboComponents, previewId, withoutCombocomponent\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    filterComboChange = (comboData) => {\r\n        this.setState({ selectedSampleType: comboData })\r\n    }\r\n    closeFilter = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterSubmit = () => {\r\n        this.reloadData()\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openPortal = this.props.Login.openPortal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openPortal = false;\r\n                selectedRecord = {};\r\n\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            openPortal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, openPortal, loadEsign, selectedRecord, selectedId: null, design: [], selectedFieldRecord: {}, showConfirmAlert: false }\r\n            // data: {openModal, loadEsign, selectedRecord}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    openModal = (ncontrolCode) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: {}, operation: \"copy\", ncontrolCode, selectedId:null,\r\n                openModal: true, screenName: this.props.Login.inputParam.displayName\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let dataState =undefined;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let selectedId = null;\r\n        inputData['registrationtemplate'] =\r\n        {\r\n            nreactregtemplatecode:this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\r\n            sregtemplatename:this.state.selectedRecord['sregtemplatename']\r\n        }\r\n        \r\n        const inputParam = {\r\n            methodUrl: \"RegistrationTemplate\",\r\n            classUrl: 'dynamicpreregdesign',\r\n            searchRef: this.searchRef,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData, operation: this.props.Login.operation,\r\n            saveType, formRef,  selectedId,dataState\r\n        }\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteApproveTemplate(\"delete\", deleteId));\r\n    }\r\n    deleteApproveTemplate = (operation, ncontrolCode) => {\r\n        const masterData = this.props.Login.masterData;\r\n        const postParam = {\r\n            inputListName: \"RegistrationTemplate\",\r\n            selectedObject: \"selectedTemplate\",\r\n            primaryKeyField: \"nreactregtemplatecode\",\r\n            fetchUrl: \"dynamicpreregdesign/getRegistrationTemplateById\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode,\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo, nsampletypecode: this.state.breadCrumbData[0] ?\r\n                    this.state.breadCrumbData[0].item.value : -1\r\n            },\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"RegistrationTemplate\",\r\n            classUrl: 'dynamicpreregdesign',\r\n            postParam,\r\n            searchRef: this.searchRef,\r\n            inputData: {\r\n                registrationtemplate: {\r\n                    nreactregtemplatecode: this.props.Login.masterData.selectedTemplate.nreactregtemplatecode\r\n                },\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            operation\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    openModal: true,\r\n                    operation: \"delete\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.selectedSampleType) {\r\n            this.props.getRegistrationTemplate(this.state.selectedSampleType, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVALIABLE\" }));\r\n        }\r\n    }\r\n    getPreviewTemplate = (masterData, userInfo, editId) => {\r\n        let data = [];\r\n        const withoutCombocomponent = []\r\n        const Layout = this.props.Login.masterData.selectedTemplate.jsondata\r\n        Layout.map(row => {\r\n            row.children.map(column => {\r\n                column.children.map(component => {\r\n                    return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            data.push(componentrow)\r\n                        } else {\r\n                            withoutCombocomponent.push(componentrow)\r\n                        }\r\n                    })\r\n                        : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component)\r\n                })\r\n            })\r\n        })\r\n        const comboComponents = data\r\n        let childColumnList = {};\r\n        data.map(columnList => {\r\n            const val = this.comboChild(data, columnList, childColumnList, true);\r\n            data = val.data;\r\n            childColumnList = val.childColumnList\r\n        })\r\n        this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord,\r\n            childColumnList, comboComponents, withoutCombocomponent, false, true, new Map(), true)\r\n\r\n    }\r\n    comboChild = (data, columnList, childColumnList, slice) => {\r\n        let retunObj = {}\r\n        // if (data.findIndex(x => x.label === columnList.label) !== -1) {\r\n        if (!childColumnList.hasOwnProperty(columnList.label)) {\r\n            if (childColumnList[columnList.label] === undefined) {\r\n                if (columnList.hasOwnProperty(\"child\")) {\r\n                    let childList = []\r\n                    columnList.child.map(childData => {\r\n                        const index = data.findIndex(x => x.label === childData.label)\r\n                        if (index !== -1) {\r\n                            childList.push(data[index])\r\n                            if (slice) {\r\n                                data = [...data.slice(0, index), ...data.slice(index + 1)]\r\n                            }\r\n                        }\r\n                    })\r\n                    childColumnList[columnList.label] = childList;\r\n                    if (childList.length > 0) {\r\n                        childList.map(y => {\r\n                            if (y.hasOwnProperty(\"child\")) {\r\n                                const val = this.comboChild(data, y, childColumnList, slice)\r\n                                retunObj[\"data\"] = val.data;\r\n                                retunObj[\"childColumnList\"] = val.childColumnList;\r\n                            } else {\r\n                                retunObj[\"data\"] = data;\r\n                                retunObj[\"childColumnList\"] = childColumnList;\r\n                            }\r\n                        })\r\n                    } else {\r\n                        retunObj[\"data\"] = data;\r\n                        retunObj[\"childColumnList\"] = childColumnList;\r\n                    }\r\n                } else {\r\n                    retunObj[\"data\"] = data;\r\n                    retunObj[\"childColumnList\"] = childColumnList;\r\n                }\r\n            } else {\r\n                retunObj[\"data\"] = data;\r\n                retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n            }\r\n        } else {\r\n            retunObj[\"data\"] = data;\r\n            retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n        }\r\n        return retunObj;\r\n    }\r\n    onComboChange = (comboData, control, customName) => {\r\n\r\n        let comboName = customName || control.label;\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n        }\r\n        if (control.child && control.child.length > 0) {\r\n            const childComboList = getSameRecordFromTwoArrays(this.state.comboComponents, control.child, \"label\")\r\n            let childColumnList = {};\r\n            childComboList.map(columnList => {\r\n                const val = this.comboChild(this.state.comboComponents, columnList, childColumnList, false);\r\n                childColumnList = val.childColumnList\r\n            })\r\n\r\n            const parentList = getSameRecordFromTwoArrays(this.state.withoutCombocomponent, control.child, \"label\")\r\n\r\n            const inputParem = {\r\n                child: control.child,\r\n                source: control.source,\r\n                primarykeyField: control.valuemember,\r\n                value: comboData.value,\r\n                item: comboData.item\r\n            }\r\n            this.props.getChildValues(inputParem,\r\n                this.props.Login.userInfo, selectedRecord, this.props.Login.comboData,\r\n                childComboList, childColumnList, this.state.withoutCombocomponent, [...childComboList, ...parentList])\r\n        } else {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event, value) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'toggle') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else if (event.target.type === 'numeric') {\r\n            if (/\\D/.test(event.target.value))\r\n                selectedRecord[event.target.name] = event.target.value;\r\n        } else if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = value;\r\n        } else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = value\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n        // this.saveComponentProperties()\r\n    }\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onDrop = (value, type, oldVlaue) => {\r\n        const design = this.state.design;\r\n        let columns = design[0].children;\r\n        let designData = this.props.Login.ReactInputFields;\r\n        value = JSON.parse(value.fields);\r\n        value = { ...value, type: \"component\" }\r\n        let designDataIndex = designData.findIndex(item => item.label === value.label);\r\n        let firstIndex = columns[0] ? columns[0].children.findIndex(item => item.label === value.label) : -1;\r\n        let secondIndex = columns[1] ? columns[1].children.findIndex(item => item.label === value.label) : -1;\r\n\r\n        if (designDataIndex >= 0)\r\n            designData.splice(designDataIndex, 1);\r\n        if (firstIndex >= 0) {\r\n            if (type !== 1) {\r\n                columns[0].children.splice(firstIndex, 1);\r\n                // columns[0].splice(to, 0, columns[0].splice(from, 1)[0]);\r\n            } else {\r\n                if (oldVlaue) {\r\n                    oldVlaue = JSON.parse(oldVlaue);\r\n                    let from = columns[0].children.findIndex(item => item.label === value.label);\r\n                    let to = columns[0].children.findIndex(item => item.label === oldVlaue.label);\r\n                    columns[0].children.splice(to, 0, columns[0].children.splice(from, 1)[0]);\r\n                }\r\n            }\r\n\r\n        } else if (type === 1) {\r\n            if (columns[0]) {\r\n                columns[0].children.push(value);\r\n            } else {\r\n                columns[0] = {\r\n                    id: \"1\",\r\n                    type: \"column\",\r\n                    children: []\r\n                }\r\n\r\n                columns[0].children.push(value);\r\n            }\r\n        }\r\n        if (secondIndex >= 0) {\r\n            if (type !== 2) {\r\n                columns[1].splice(secondIndex, 1);\r\n            } else {\r\n                if (oldVlaue) {\r\n                    oldVlaue = JSON.parse(oldVlaue);\r\n                    let from = columns[1].children.findIndex(item => item.label === value.label);\r\n                    let to = columns[1].children.findIndex(item => item.label === oldVlaue.label);\r\n                    columns[1].children.splice(to, 0, columns[1].children.splice(from, 1)[0]);\r\n                }\r\n            }\r\n        } else if (type === 2) {\r\n            if (columns[1]) {\r\n                columns[1].children.push(value);\r\n            } else {\r\n                columns[1] = {\r\n                    id: \"2\",\r\n                    type: \"column\",\r\n                    children: []\r\n                }\r\n                columns[1].children.push(value);\r\n            }\r\n        }\r\n\r\n        // design.push(columns)\r\n        this.setState({ designData, design })\r\n    }\r\n    onDropFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    updateStore, crudMaster,\r\n    getReactInputFields, selectRegistrationTemplate, filterColumnData,\r\n    getRegistrationTemplate, getEditRegTemplate, getPreviewTemplate, getChildValues\r\n})(injectIntl(DynamicPreRegDesign))"]},"metadata":{},"sourceType":"module"}