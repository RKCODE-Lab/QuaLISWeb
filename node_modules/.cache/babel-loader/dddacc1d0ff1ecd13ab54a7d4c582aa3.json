{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';// import FormInput from '../../components/form-input/form-input.component';\n// import FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';var AddBarcode=function AddBarcode(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:'nbarcode',formLabel:props.intl.formatMessage({id:\"IDS_BARCODE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.BarcodeList||[],value:props.selectedRecord?props.selectedRecord[\"nbarcode\"]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nbarcode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PRINTERNAME\"}),name:\"sprintername\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:props.selectedRecord?props.selectedRecord[\"sprintername\"]:\"\",options:props.Printer,optionId:\"sprintername\",optionValue:\"sprintername\",isMandatory:true,isMulti:false,isSearchable:true,closeMenuOnSelect:true,alphabeticalSort:false,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,\"sprintername\");}})),/*#__PURE__*/React.createElement(Col,{md:12},props.nbarcodeprint?/*#__PURE__*/React.createElement(FormNumericInput,{name:\"nbarcodeprintcount\",label:props.intl.formatMessage({id:\"IDS_NUMBEROFPRINT\"}),type:\"number\",value:props.selectedRecord[\"nbarcodeprintcount\"]&&props.selectedRecord[\"nbarcodeprintcount\"],placeholder:props.intl.formatMessage({id:\"IDS_NUMBEROFPRINT\"}),strict:true,min:0,maxLength:6,onChange:function onChange(value){return props.onNumericInputChange(value,\"nbarcodeprintcount\");},noStyle:true,precision:0,className:\"form-control\",errors:\"Please provide a valid number.\"}):\"\"));};export default injectIntl(AddBarcode);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/BarcodeTemplate/AddBarcode.jsx"],"names":["React","Row","Col","FormSelectSearch","injectIntl","FormNumericInput","AddBarcode","props","intl","formatMessage","id","BarcodeList","selectedRecord","event","onComboChange","Printer","nbarcodeprint","value","onNumericInputChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\n import { Row, Col } from 'react-bootstrap';\r\n// import FormInput from '../../components/form-input/form-input.component';\r\n// import FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n\r\n\r\nconst AddBarcode = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={'nbarcode'}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_BARCODE\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.BarcodeList || []}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nbarcode\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, \"nbarcode\")}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_PRINTERNAME\" })}\r\n                    name={\"sprintername\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sprintername\"] : \"\"}\r\n                    options={props.Printer}\r\n                    optionId=\"sprintername\"\r\n                    optionValue=\"sprintername\"\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={false}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"sprintername\")}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n            {props.nbarcodeprint ?\r\n                <FormNumericInput\r\n                    name={\"nbarcodeprintcount\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_NUMBEROFPRINT\" })}\r\n                    type=\"number\"\r\n                    value={props.selectedRecord[\"nbarcodeprintcount\"]&&props.selectedRecord[\"nbarcodeprintcount\"]}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_NUMBEROFPRINT\" })}\r\n                    strict={true}\r\n                    min={0}\r\n                    maxLength={6}\r\n                    onChange={(value) => props.onNumericInputChange(value, \"nbarcodeprintcount\")}\r\n                    noStyle={true}\r\n                    precision={0}\r\n                    className=\"form-control\"\r\n                    errors=\"Please provide a valid number.\"\r\n                />\r\n                : \"\"}\r\n\r\n        </Col>\r\n\r\n        </Row >\r\n    );\r\n};\r\nexport default injectIntl(AddBarcode);"]},"metadata":{},"sourceType":"module"}