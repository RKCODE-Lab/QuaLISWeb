{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { initRequest } from './LoginAction';\nimport { toast } from 'react-toastify';\nimport { sortData } from '../components/CommonScript';\nexport function SyncRecords(userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/synchronization/syncRecords\", {\n      'userinfo': userInfo\n    }).then(response => {\n      if (response.data[\"SyncMessage\"]) {\n        toast.info(response.data[\"SyncMessage\"]);\n      } //masterData = {...masterData, ...response.data}; \n\n\n      const masterData = response.data;\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          operation: null,\n          modalName: undefined,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getSyncHistoryDetail(syncHistory, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    console.log(\"syncHistory:\", syncHistory);\n    return rsapi.post(\"synchistory/getSyncHistory\", {\n      nsyncbatchcode: syncHistory.nsyncbatchcode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          operation: null,\n          modalName: undefined,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/actions/SyncConfigurationAction.js"],"names":["rsapi","DEFAULT_RETURN","initRequest","toast","sortData","SyncRecords","userInfo","dispatch","post","then","response","data","info","masterData","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getSyncHistoryDetail","syncHistory","console","log","nsyncbatchcode","userinfo"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { toast } from 'react-toastify';\r\nimport {sortData} from '../components/CommonScript';\r\n\r\nexport function SyncRecords (userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/synchronization/syncRecords\",\r\n            { 'userinfo': userInfo})\r\n            .then(response => {             \r\n\r\n                if(response.data[\"SyncMessage\"])\r\n                {\r\n                    toast.info(response.data[\"SyncMessage\"]);\r\n                }\r\n                //masterData = {...masterData, ...response.data}; \r\n                const masterData = response.data;      \r\n                sortData(masterData);\r\n                dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n                     loading:false}}); \r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getSyncHistoryDetail (syncHistory, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    console.log(\"syncHistory:\", syncHistory);\r\n    return rsapi.post(\"synchistory/getSyncHistory\", {nsyncbatchcode:syncHistory.nsyncbatchcode, userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}"]},"metadata":{},"sourceType":"module"}