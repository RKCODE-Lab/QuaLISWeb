{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import{transactionStatus,attachmentType,reportTypeEnum,reportCOAType}from'../../../components/Enumeration';import CustomSwitch from'../../../components/custom-switch/custom-switch.component';import DropZone from'../../../components/dropzone/dropzone.component';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import FormInput from'../../../components/form-input/form-input.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import ReactSelectAddEdit from'../../../components/react-select-add-edit/react-select-add-edit-component';var AddReportMaster=function AddReportMaster(props){//console.log(\"propsiin reportmaster:\", props.selectedRecord)\nvar isReportTypeDisabled=false;if(props.operation===\"update\"){isReportTypeDisabled=true;}else{if(props.filterReportType&&props.filterReportType.nreporttypecode!==0){isReportTypeDisabled=true;}}return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nreporttypecode\",formLabel:props.intl.formatMessage({id:\"IDS_REPORTTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.reportTypeList||[],value:props.selectedRecord[\"nreporttypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true//isDisabled={props.operation === \"update\"}\n,isDisabled:isReportTypeDisabled,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nreporttypecode\");}}),props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"]['item'].isneedregtype===transactionStatus.YES?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsampletypecode\",formLabel:props.intl.formatMessage({id:\"IDS_SAMPLETYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.sampleTypeList||[]//options={ props.selectedRecord[\"nreporttypecode\"]['item'].nreporttypecode === reportTypeEnum.SAMPLE?props.regType:props.regTypeList || []}\n,value:props.selectedRecord[\"nsampletypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nsampletypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nregtypecode\",formLabel:props.intl.formatMessage({id:\"IDS_REGTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.regTypeList||[]//options={ props.selectedRecord[\"nreporttypecode\"]['item'].nreporttypecode === reportTypeEnum.SAMPLE?props.regType:props.regTypeList || []}\n,value:props.selectedRecord[\"nregtypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nregtypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nregsubtypecode\",formLabel:props.intl.formatMessage({id:\"IDS_REGSUBTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.regSubTypeList||[],value:props.selectedRecord[\"nregsubtypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nregsubtypecode\");}}))):\"\",props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"]['item'].isneedregtype===transactionStatus.YES?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:props.selectedRecord[\"nreporttypecode\"]['item'].isneedsection===transactionStatus.YES?6:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"napproveconfversioncode\",formLabel:props.intl.formatMessage({id:\"IDS_APPROVECONFIGVERSION\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.ApproveConfigList||[],value:props.selectedRecord[\"napproveconfversioncode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"napproveconfversioncode\");}})),props.selectedRecord[\"nreporttypecode\"]['item'].isneedsection===transactionStatus.YES?/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsectioncode\",formLabel:props.intl.formatMessage({id:\"IDS_LAB\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.sectionList||[],value:props.selectedRecord[\"nsectioncode\"]||\"\",isMandatory:false,isMulti:false,isClearable:true,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nsectioncode\");}})):\"\"):\"\",props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"].value!==reportTypeEnum.MIS&&props.selectedRecord[\"nreporttypecode\"].value!==reportTypeEnum.SCREENWISE?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ncoareporttypecode\",formLabel:props.intl.formatMessage({id:\"IDS_REPORTSUBTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.coaReportTypeList||[],value:props.selectedRecord[\"ncoareporttypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"ncoareporttypecode\");}})):\"\",props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.COA&&props.selectedRecord[\"ncoareporttypecode\"]&&props.selectedRecord[\"ncoareporttypecode\"].value===reportCOAType.PROJECTWISE?/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nreporttemplatecode\",formLabel:props.intl.formatMessage({id:\"IDS_REPORTTEMPLATE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.reportTemplateList||[],value:props.selectedRecord[\"nreporttemplatecode\"]||\"\",isMandatory:false,isMulti:false,isClearable:true,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nreporttemplatecode\");}}):\"\",props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.SCREENWISE?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nformcode\",formLabel:props.intl.formatMessage({id:\"IDS_SCREENNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.controlScreen||[],value:props.selectedRecord[\"nformcode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nformcode\");}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ncontrolcode\",formLabel:props.intl.formatMessage({id:\"IDS_CONTROLNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.controlButton||[],value:props.selectedRecord[\"ncontrolcode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"ncontrolcode\");}})):\"\",props.selectedRecord[\"nreporttypecode\"]&&props.selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.MIS?/*#__PURE__*/React.createElement(ReactSelectAddEdit,{name:\"nreportmodulecode\",label:props.intl.formatMessage({id:\"IDS_MODULENAME\"}),className:\"color-select\",classNamePrefix:\"react-select\",optionId:\"nreportmodulecode\",optionValue:\"sdisplayname\",options:props.reportModuleList||[],isMandatory:true,getValue:function getValue(value){return props.onComboChange(value,\"nreportmodulecode\");},value:props.selectedRecord[\"nreportmodulecode\"]?props.selectedRecord[\"nreportmodulecode\"]:\"\"// defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\n}):\"\",props.selectedRecord[\"nreporttypecode\"]&&(props.selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.BATCH||props.selectedRecord[\"nreporttypecode\"].value===reportTypeEnum.SAMPLE)?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ncertificatetypecode\",formLabel:props.intl.formatMessage({id:\"IDS_CERTIFICATETYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.certificateTypeList||[],value:props.selectedRecord[\"ncertificatetypecode\"]||\"\",isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"ncertificatetypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_REPORTBATCHTYPE\"}),name:\"sbatchdisplayname\",type:\"text\",placeholder:props.intl.formatMessage({id:\"IDS_REPORTBATCHTYPE\"}),value:props.selectedRecord?props.selectedRecord[\"sbatchdisplayname\"]:\"\",isMandatory:false,required:false,readOnly:true,onChange:function onChange(event){return props.onInputOnChange(event);}}))):\"\",/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_REPORTNAME\"}),name:\"sreportname\",type:\"text\",placeholder:props.intl.formatMessage({id:\"IDS_REPORTNAME\"}),value:props.selectedRecord?props.selectedRecord[\"sreportname\"]:\"\",isMandatory:true,required:true,maxLength:100,readOnly:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"sdescription\",label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[\"sdescription\"]||\"\",rows:\"2\",isMandatory:false,required:false,maxLength:255,isDisabled:props.operation===\"update\"&&props.reportVersionStatus===transactionStatus.APPROVED,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ntransactionstatus\",type:\"switch\",label:props.intl.formatMessage({id:\"IDS_ISACTIVE\"}),placeholder:props.intl.formatMessage({id:\"IDS_ISACTIVE\"}),value:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false,isMandatory:false,required:false,checked:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false,onChange:function onChange(event){return props.onInputOnChange(event);}}),props.operation===\"create\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(CustomSwitch,{name:\"nisplsqlquery\",type:\"switch\",label:props.intl.formatMessage({id:\"IDS_ISPLSQLQUERY\"}),placeholder:props.intl.formatMessage({id:\"IDS_ISPLSQLQUERY\"}),value:props.selectedRecord[\"nisplsqlquery\"]===transactionStatus.YES?true:false,isMandatory:false,required:false,checked:props.selectedRecord[\"nisplsqlquery\"]===transactionStatus.YES?true:false,onChange:function onChange(event){return props.onInputOnChange(event);}}),Object.keys(props.selectedRecord).length>0&&/*#__PURE__*/React.createElement(DropZone,{label:props.intl.formatMessage({id:\"IDS_FILE\"}),maxFiles:1,accept:\".jrxml,.mrt\",minSize:0,maxSize:10,fileNameLength:150,onDrop:function onDrop(event){return props.onDropImage(event,\"sfilename\",1);},multiple:false,isMandatory:true,editFiles:props.selectedRecord?props.selectedRecord:{},attachmentTypeCode:props.operation===\"update\"?attachmentType.OTHERS:\"\",fileName:\"sfilename\",deleteAttachment:function deleteAttachment(){return props.deleteFile(\"sfilename\");},actionType:props.actionType})):\"\"));};export default injectIntl(AddReportMaster);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/reports/reportsconfig/AddReportMaster.js"],"names":["React","Row","Col","injectIntl","transactionStatus","attachmentType","reportTypeEnum","reportCOAType","CustomSwitch","DropZone","FormTextarea","FormInput","FormSelectSearch","ReactSelectAddEdit","AddReportMaster","props","isReportTypeDisabled","operation","filterReportType","nreporttypecode","intl","formatMessage","id","reportTypeList","selectedRecord","event","onComboChange","isneedregtype","YES","sampleTypeList","reportVersionStatus","APPROVED","regTypeList","regSubTypeList","isneedsection","ApproveConfigList","sectionList","value","MIS","SCREENWISE","coaReportTypeList","COA","PROJECTWISE","reportTemplateList","controlScreen","controlButton","reportModuleList","BATCH","SAMPLE","certificateTypeList","onInputOnChange","ACTIVE","Object","keys","length","onDropImage","OTHERS","deleteFile","actionType"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { transactionStatus, attachmentType, reportTypeEnum, reportCOAType } from '../../../components/Enumeration';\r\nimport CustomSwitch from '../../../components/custom-switch/custom-switch.component';\r\nimport DropZone from '../../../components/dropzone/dropzone.component';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport ReactSelectAddEdit from '../../../components/react-select-add-edit/react-select-add-edit-component'\r\n\r\nconst AddReportMaster = (props) => {\r\n        //console.log(\"propsiin reportmaster:\", props.selectedRecord)\r\n        let isReportTypeDisabled = false;\r\n        if (props.operation === \"update\") {\r\n                isReportTypeDisabled = true;\r\n        }\r\n        else {\r\n                if (props.filterReportType && props.filterReportType.nreporttypecode !== 0) {\r\n                        isReportTypeDisabled = true;\r\n                }\r\n        }\r\n        return (\r\n                <Row>\r\n                        <Col md={12}>\r\n                                <FormSelectSearch\r\n                                        name={\"nreporttypecode\"}\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={props.reportTypeList || []}\r\n                                        value={props.selectedRecord[\"nreporttypecode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isClearable={false}\r\n                                        isSearchable={true}\r\n                                        //isDisabled={props.operation === \"update\"}\r\n                                        isDisabled={isReportTypeDisabled}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange={(event) => props.onComboChange(event, \"nreporttypecode\")}\r\n                                />\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        props.selectedRecord[\"nreporttypecode\"]['item'].isneedregtype === transactionStatus.YES ?\r\n                                        <Row>\r\n                                                <Col md={6}>\r\n                                                        <FormSelectSearch\r\n                                                                name={\"nsampletypecode\"}\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={props.sampleTypeList || []}\r\n                                                                //options={ props.selectedRecord[\"nreporttypecode\"]['item'].nreporttypecode === reportTypeEnum.SAMPLE?props.regType:props.regTypeList || []}\r\n                                                                value={props.selectedRecord[\"nsampletypecode\"] || \"\"}\r\n                                                                isMandatory={true}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                onChange={(event) => props.onComboChange(event, \"nsampletypecode\")}\r\n                                                        />\r\n\r\n                                                </Col>\r\n\r\n                                                <Col md={6}>\r\n                                                        <FormSelectSearch\r\n                                                                name={\"nregtypecode\"}\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_REGTYPE\" })}\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={props.regTypeList || []}\r\n                                                                //options={ props.selectedRecord[\"nreporttypecode\"]['item'].nreporttypecode === reportTypeEnum.SAMPLE?props.regType:props.regTypeList || []}\r\n                                                                value={props.selectedRecord[\"nregtypecode\"] || \"\"}\r\n                                                                isMandatory={true}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                onChange={(event) => props.onComboChange(event, \"nregtypecode\")}\r\n                                                        />\r\n\r\n                                                </Col>\r\n\r\n                                                <Col md={6}>\r\n\r\n                                                        <FormSelectSearch\r\n                                                                name={\"nregsubtypecode\"}\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_REGSUBTYPE\" })}\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={props.regSubTypeList || []}\r\n                                                                value={props.selectedRecord[\"nregsubtypecode\"] || \"\"}\r\n                                                                isMandatory={true}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                onChange={(event) => props.onComboChange(event, \"nregsubtypecode\")}\r\n                                                        />\r\n\r\n                                                </Col>\r\n\r\n\r\n                                        </Row>\r\n                                        : \"\"}\r\n\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        props.selectedRecord[\"nreporttypecode\"]['item'].isneedregtype === transactionStatus.YES ?\r\n                                        <Row>\r\n                                                 <Col md={props.selectedRecord[\"nreporttypecode\"]['item'].isneedsection === transactionStatus.YES?6:12}>\r\n                                                <FormSelectSearch\r\n                                                        name={\"napproveconfversioncode\"}\r\n                                                        formLabel={props.intl.formatMessage({ id: \"IDS_APPROVECONFIGVERSION\" })}\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                        options={props.ApproveConfigList || []}\r\n                                                        value={props.selectedRecord[\"napproveconfversioncode\"] || \"\"}\r\n                                                        isMandatory={true}\r\n                                                        isMulti={false}\r\n                                                        isClearable={false}\r\n                                                        isSearchable={true}\r\n                                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                        closeMenuOnSelect={true}\r\n                                                        onChange={(event) => props.onComboChange(event, \"napproveconfversioncode\")}\r\n                                                />\r\n                                                </Col>\r\n\r\n                                                {props.selectedRecord[\"nreporttypecode\"]['item'].isneedsection === transactionStatus.YES ?\r\n                                                        <Col md={6}>\r\n                                                                <FormSelectSearch\r\n                                                                        name={\"nsectioncode\"}\r\n                                                                        formLabel={props.intl.formatMessage({ id: \"IDS_LAB\" })}\r\n                                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                        options={props.sectionList || []}\r\n                                                                        value={props.selectedRecord[\"nsectioncode\"] || \"\"}\r\n                                                                        isMandatory={false}\r\n                                                                        isMulti={false}\r\n                                                                        isClearable={true}\r\n                                                                        isSearchable={true}\r\n                                                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                        closeMenuOnSelect={true}\r\n                                                                        onChange={(event) => props.onComboChange(event, \"nsectioncode\")}\r\n                                                                />\r\n\r\n                                                        </Col> : \"\"}\r\n\r\n                                        </Row> : \"\"}\r\n\r\n\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        props.selectedRecord[\"nreporttypecode\"].value !== reportTypeEnum.MIS\r\n                                        && props.selectedRecord[\"nreporttypecode\"].value !== reportTypeEnum.SCREENWISE ? <>\r\n\r\n                                        <FormSelectSearch\r\n                                                name={\"ncoareporttypecode\"}\r\n                                                formLabel={props.intl.formatMessage({ id: \"IDS_REPORTSUBTYPE\" })}\r\n                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                options={props.coaReportTypeList || []}\r\n                                                value={props.selectedRecord[\"ncoareporttypecode\"] || \"\"}\r\n                                                isMandatory={true}\r\n                                                isMulti={false}\r\n                                                isClearable={false}\r\n                                                isSearchable={true}\r\n                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                closeMenuOnSelect={true}\r\n                                                onChange={(event) => props.onComboChange(event, \"ncoareporttypecode\")}\r\n                                        />\r\n\r\n                                        {/* {props.selectedRecord[\"nreporttypecode\"] &&\r\n                            props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SAMPLE?\r\n                                <FormSelectSearch\r\n                                        name={\"nreportdecisiontypecode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_DECISIONTYPE\"})}                              \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                 \r\n                                        options={ props.decisionTypeList || []}\r\n                                        value = { props.selectedRecord[\"nreportdecisiontypecode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isClearable={false}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, \"nreportdecisiontypecode\")}                               \r\n                                /> \r\n                           :\"\"} */}\r\n                                </> : \"\"}\r\n\r\n                                { props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"] && props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.COA \r\n                                        && props.selectedRecord[\"ncoareporttypecode\"] && props.selectedRecord[\"ncoareporttypecode\"].value === reportCOAType.PROJECTWISE ?\r\n                                        \r\n                                        <FormSelectSearch\r\n                                        name={\"nreporttemplatecode\"}\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={props.reportTemplateList || []}\r\n                                        value={props.selectedRecord[\"nreporttemplatecode\"] || \"\"}\r\n                                        isMandatory={false}\r\n                                        isMulti={false}\r\n                                        isClearable={true}\r\n                                        isSearchable={true}\r\n                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange={(event) => props.onComboChange(event, \"nreporttemplatecode\")}\r\n                                /> \r\n                                : \"\"\r\n                                }\r\n\r\n\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SCREENWISE ?\r\n                                        <><FormSelectSearch\r\n                                                name={\"nformcode\"}\r\n                                                formLabel={props.intl.formatMessage({ id: \"IDS_SCREENNAME\" })}\r\n                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                options={props.controlScreen || []}\r\n                                                value={props.selectedRecord[\"nformcode\"] || \"\"}\r\n                                                isMandatory={true}\r\n                                                isMulti={false}\r\n                                                isClearable={false}\r\n                                                isSearchable={true}\r\n                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                closeMenuOnSelect={true}\r\n                                                onChange={(event) => props.onComboChange(event, \"nformcode\")}\r\n                                        />\r\n                                                <FormSelectSearch\r\n                                                        name={\"ncontrolcode\"}\r\n                                                        formLabel={props.intl.formatMessage({ id: \"IDS_CONTROLNAME\" })}\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                        options={props.controlButton || []}\r\n                                                        value={props.selectedRecord[\"ncontrolcode\"] || \"\"}\r\n                                                        isMandatory={true}\r\n                                                        isMulti={false}\r\n                                                        isClearable={false}\r\n                                                        isSearchable={true}\r\n                                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                        closeMenuOnSelect={true}\r\n                                                        onChange={(event) => props.onComboChange(event, \"ncontrolcode\")}\r\n                                                />\r\n                                        </>\r\n                                        : \"\"}\r\n\r\n\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.MIS ?\r\n\r\n                                        <ReactSelectAddEdit\r\n                                                name=\"nreportmodulecode\"\r\n                                                label={props.intl.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                                                className=\"color-select\"\r\n                                                classNamePrefix=\"react-select\"\r\n                                                optionId=\"nreportmodulecode\"\r\n                                                optionValue=\"sdisplayname\"\r\n                                                options={props.reportModuleList || []}\r\n                                                isMandatory={true}\r\n                                                getValue={value => props.onComboChange(value, \"nreportmodulecode\")}\r\n                                                value={props.selectedRecord[\"nreportmodulecode\"] ? props.selectedRecord[\"nreportmodulecode\"] : \"\"}\r\n                                        // defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\r\n                                        />\r\n                                        : \"\"}\r\n\r\n                                {props.selectedRecord[\"nreporttypecode\"] &&\r\n                                        (props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.BATCH\r\n                                                || props.selectedRecord[\"nreporttypecode\"].value === reportTypeEnum.SAMPLE) ?\r\n                                        <Row>\r\n                                                <Col md={6}>\r\n                                                        <FormSelectSearch\r\n                                                                name={\"ncertificatetypecode\"}\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_CERTIFICATETYPE\" })}\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={props.certificateTypeList || []}\r\n                                                                value={props.selectedRecord[\"ncertificatetypecode\"] || \"\"}\r\n                                                                isMandatory={true}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                onChange={(event) => props.onComboChange(event, \"ncertificatetypecode\")}\r\n                                                        />\r\n                                                </Col>\r\n                                                <Col md={6}>\r\n                                                        <FormInput\r\n                                                                label={props.intl.formatMessage({ id: \"IDS_REPORTBATCHTYPE\" })}\r\n                                                                name={\"sbatchdisplayname\"}\r\n                                                                type=\"text\"\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_REPORTBATCHTYPE\" })}\r\n                                                                value={props.selectedRecord ? props.selectedRecord[\"sbatchdisplayname\"] : \"\"}\r\n                                                                isMandatory={false}\r\n                                                                required={false}\r\n                                                                readOnly={true}\r\n                                                                onChange={(event) => props.onInputOnChange(event)}\r\n                                                        />\r\n                                                </Col>\r\n                                        </Row>\r\n\r\n                                        : \"\"}\r\n\r\n                                <FormInput\r\n                                        label={props.intl.formatMessage({ id: \"IDS_REPORTNAME\" })}\r\n                                        name={\"sreportname\"}\r\n                                        type=\"text\"\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_REPORTNAME\" })}\r\n                                        value={props.selectedRecord ? props.selectedRecord[\"sreportname\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                        readOnly={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                />\r\n\r\n                                <FormTextarea\r\n                                        name={\"sdescription\"}\r\n                                        label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                        value={props.selectedRecord[\"sdescription\"] || \"\"}\r\n                                        rows=\"2\"\r\n                                        isMandatory={false}\r\n                                        required={false}\r\n                                        maxLength={255}\r\n                                        isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                />\r\n\r\n                                <CustomSwitch\r\n                                        name={\"ntransactionstatus\"}\r\n                                        type=\"switch\"\r\n                                        label={props.intl.formatMessage({ id: \"IDS_ISACTIVE\" })}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_ISACTIVE\" })}\r\n                                        value={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                                        isMandatory={false}\r\n                                        required={false}\r\n                                        checked={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                                        onChange={(event) => props.onInputOnChange(event)}\r\n                                />\r\n                                {props.operation === \"create\" ? <>\r\n\r\n                                        <CustomSwitch\r\n                                                name={\"nisplsqlquery\"}\r\n                                                type=\"switch\"\r\n                                                label={props.intl.formatMessage({ id: \"IDS_ISPLSQLQUERY\" })}\r\n                                                placeholder={props.intl.formatMessage({ id: \"IDS_ISPLSQLQUERY\" })}\r\n                                                value={props.selectedRecord[\"nisplsqlquery\"] === transactionStatus.YES ? true : false}\r\n                                                isMandatory={false}\r\n                                                required={false}\r\n                                                checked={props.selectedRecord[\"nisplsqlquery\"] === transactionStatus.YES ? true : false}\r\n                                                onChange={(event) => props.onInputOnChange(event)}\r\n                                        />\r\n\r\n                                        {Object.keys(props.selectedRecord).length > 0 &&\r\n\r\n                                                <DropZone\r\n                                                        label={props.intl.formatMessage({ id: \"IDS_FILE\" })}\r\n                                                        maxFiles={1}\r\n                                                        accept=\".jrxml,.mrt\"\r\n                                                        minSize={0}\r\n                                                        maxSize={10}\r\n                                                        fileNameLength={150}\r\n                                                        onDrop={(event) => props.onDropImage(event, \"sfilename\", 1)}\r\n                                                        multiple={false}\r\n                                                        isMandatory={true}\r\n                                                        editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                                                        attachmentTypeCode={props.operation === \"update\" ? attachmentType.OTHERS : \"\"}\r\n                                                        fileName=\"sfilename\"\r\n                                                        deleteAttachment={() => props.deleteFile(\"sfilename\")}\r\n                                                        actionType={props.actionType}\r\n                                                />\r\n\r\n                                        }\r\n                                </>\r\n                                        : \"\"}\r\n                        </Col>\r\n                </Row>\r\n        )\r\n}\r\n\r\nexport default injectIntl(AddReportMaster);"]},"metadata":{},"sourceType":"module"}