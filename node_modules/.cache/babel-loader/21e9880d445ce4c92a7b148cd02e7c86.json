{"ast":null,"code":"import*as React from'react';import{injectIntl}from'react-intl';import{Row,Col,Form}from'react-bootstrap';import'@progress/kendo-react-animation';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var AddContainerStorageCondition=function AddContainerStorageCondition(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nstorageconditioncode\",formLabel:props.intl.formatMessage({id:\"IDS_STORAGECONDITIONNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.storageCondition,value:props.selectedRecord[\"nstorageconditioncode\"],isMandatory:true,isClearable:false,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,'nstorageconditioncode',0);}})));};export default injectIntl(AddContainerStorageCondition);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/basemaster/AddContainerStorageCondition.jsx"],"names":["React","injectIntl","Row","Col","Form","FormSelectSearch","AddContainerStorageCondition","props","intl","formatMessage","id","storageCondition","selectedRecord","event","onComboChange"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,KAA+B,iBAA/B,CACA,MAAO,iCAAP,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CAEA,GAAMC,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,CAACC,KAAD,CAAW,CAC5C,mBACE,oBAAC,GAAD,mBAEE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACE,oBAAC,gBAAD,EACE,IAAI,CAAE,uBADR,CAEE,SAAS,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,0BAAN,CAAzB,CAFb,CAGE,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CAHf,CAIE,OAAO,CAAEH,KAAK,CAACI,gBAJjB,CAKE,KAAK,CAAEJ,KAAK,CAACK,cAAN,CAAqB,uBAArB,CALT,CAME,WAAW,CAAE,IANf,CAOE,WAAW,CAAE,KAPf,CAQE,OAAO,CAAE,KARX,CASE,YAAY,CAAE,IAThB,CAUE,UAAU,CAAE,KAVd,CAWE,iBAAiB,CAAE,IAXrB,CAYE,QAAQ,CAAE,kBAACC,KAAD,QAAWN,CAAAA,KAAK,CAACO,aAAN,CAAoBD,KAApB,CAA2B,uBAA3B,CAAmD,CAAnD,CAAX,EAZZ,EADF,CAFF,CADF,CAqBH,CAtBD,CAuBA,cAAeZ,CAAAA,UAAU,CAACK,4BAAD,CAAzB","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst AddContainerStorageCondition = (props) => {\r\n    return (\r\n      <Row>\r\n  \r\n        <Col md={12}>\r\n          <FormSelectSearch\r\n            name={\"nstorageconditioncode\"}\r\n            formLabel={props.intl.formatMessage({ id: \"IDS_STORAGECONDITIONNAME\" })}\r\n            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n            options={props.storageCondition}\r\n            value={props.selectedRecord[\"nstorageconditioncode\"]}\r\n            isMandatory={true}\r\n            isClearable={false}\r\n            isMulti={false}\r\n            isSearchable={true}\r\n            isDisabled={false}\r\n            closeMenuOnSelect={true}\r\n            onChange={(event) => props.onComboChange(event, 'nstorageconditioncode',0)}\r\n          />\r\n        </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddContainerStorageCondition);"]},"metadata":{},"sourceType":"module"}