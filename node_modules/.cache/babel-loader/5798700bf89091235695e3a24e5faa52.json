{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import PerfectScrollbar from'react-perfect-scrollbar';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import TestGroupParameterTab from'./TestGroupParameterTab';import CustomTab from'../../components/custom-tabs/custom-tabs.component';import{showEsign,sortData}from'../../components/CommonScript';import Esign from'../audittrail/Esign';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{parameterType,SampleType,transactionStatus}from'../../components/Enumeration';import EditTestGroupParameter from'./EditTestGroupParameter';import AddCodedResult from'../testmanagement/AddCodedResult';import FormTextarea from'../../components/form-textarea/form-textarea.component';import AddSpecification from'../testmanagement/AddSpecification';import TemplateForm from'../checklist/checklist/TemplateForm';import{toast}from'react-toastify';import TestGroupMaterialTab from'./TestGroupMaterialTab';import AddTestGroupTestMaterial from'./AddTestGroupTestMaterial';import AddTestGroupNumericSpecification from'./AddTestGroupNumericSpecification';import ConfirmMessage from\"../../components/confirm-alert/confirm-message.component\";import TestGroupRulesEngineTab from'./TestGroupRulesEngineTab';var TestGroupTestTab=/*#__PURE__*/function(_Component){_inherits(TestGroupTestTab,_Component);var _super=_createSuper(TestGroupTestTab);function TestGroupTestTab(props){var _this;_classCallCheck(this,TestGroupTestTab);_this=_super.call(this,props);_this.onTemplateInputChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onTemplateComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});};_this.onTemplateDateChange=function(dateName,dateValue){var _ref=_this.state.selectedRecord||{},selectedRecord=_ref.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.handleClose=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:{},testGroupCheckList:{},openTemplateModal:false}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.loadEsign;var openChildModal=_this.props.openChildModal;var selectedRecord=_this.props.selectedRecord;if(_this.props.loadEsign){if(_this.props.operation===\"delete\"||_this.props.operation===\"Default\"){loadEsign=false;openChildModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord[\"agree\"]=4;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openChildModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openChildModal:openChildModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};_this.EditSpecDetails=function(viewdetails,ncontrolCode){_this.props.addTestGroupNumericTab(\"update\",viewdetails,_this.props.userInfo,{testgroupspecification:_this.props.masterData.SelectedSpecification},_this.props.masterData,ncontrolCode);};_this.DeleteSpecDetails=function(viewdetails,ncontrolCode){_this.SpecConfirmDelete(\"delete\",1,viewdetails,ncontrolCode);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_PARAMETER\",/*#__PURE__*/React.createElement(TestGroupParameterTab,{controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,userInfo:_this.props.userInfo,inputParam:_this.props.inputParam,masterData:_this.props.masterData,deleteAction:_this.deleteAction,onSwitchChange:_this.onSwitchChange,addTestFile:_this.props.addTestFile,viewTestFile:_this.viewTestFile,defaultRecord:_this.defaultRecord,filterData:_this.props.filterData,getTestGroupParameter:_this.props.getTestGroupParameter,editTestGroupParameter:_this.props.editTestGroupParameter,addTestGroupCodedResult:_this.props.addTestGroupCodedResult,addTestGroupNumericTab:_this.props.addTestGroupNumericTab,viewTestGroupCheckList:_this.props.viewTestGroupCheckList,EditSpecDetails:_this.EditSpecDetails,DeleteSpecDetails:_this.DeleteSpecDetails,dataState:_this.props.dataState,dataStateChange:_this.props.dataStateChange}));return tabMap;};_this.testTabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_PARAMETER\",/*#__PURE__*/React.createElement(TestGroupParameterTab,{paneHeight:_this.props.paneHeight,controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,userInfo:_this.props.userInfo,inputParam:_this.props.inputParam,masterData:_this.props.masterData,deleteAction:_this.deleteAction,onSwitchChange:_this.onSwitchChange,addTestFile:_this.props.addTestFile,viewTestFile:_this.viewTestFile,defaultRecord:_this.defaultRecord,filterData:_this.props.filterData,getTestGroupParameter:_this.props.getTestGroupParameter,editTestGroupParameter:_this.props.editTestGroupParameter,addTestGroupCodedResult:_this.props.addTestGroupCodedResult,addTestGroupNumericTab:_this.props.addTestGroupNumericTab,viewTestGroupCheckList:_this.props.viewTestGroupCheckList,EditSpecDetails:_this.EditSpecDetails,DeleteSpecDetails:_this.DeleteSpecDetails,hasDynamicColSize:true,dataState:_this.props.dataState,dataStateChange:_this.props.dataStateChange}));tabMap.set(\"IDS_MATERIAL\",/*#__PURE__*/React.createElement(TestGroupMaterialTab,{paneHeight:_this.props.paneHeight,controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,userInfo:_this.props.userInfo,inputParam:_this.props.inputParam,masterData:_this.props.masterData,ConfirmDelete:_this.ConfirmDelete,getDataForTestMaterial:_this.props.getDataForTestMaterial,getTestGroupMaterial:_this.props.getTestGroupMaterial,getDataForEditTestMaterial:_this.props.getDataForEditTestMaterial,selectedRecord:_this.state.selectedRecord}));tabMap.set(\"IDS_RULESENGINE\",/*#__PURE__*/React.createElement(TestGroupRulesEngineTab,{paneHeight:_this.props.paneHeight,getTestGroupRulesEngineAdd:_this.props.getTestGroupRulesEngineAdd,controlMap:_this.props.controlMap,userRoleControlRights:_this.props.userRoleControlRights,userInfo:_this.props.userInfo,selectedRecord:_this.state.selectedRecord,masterData:_this.props.masterData,settings:_this.props.settings,skipRulesEngine:_this.props.skipRulesEngine,takeRulesEngine:_this.props.takeRulesEngine,getEditTestGroupRulesEngine:_this.props.getEditTestGroupRulesEngine,getSelectedTestGroupRulesEngine:_this.props.getSelectedTestGroupRulesEngine,ConfirmDeleteRule:_this.props.ConfirmDeleteRule,approveVersion:_this.props.approveVersion,openflowview:_this.props.openflowview,handlePageChangeRuleEngine:_this.props.handlePageChangeRuleEngine,viewOutcome:_this.props.viewOutcome,filterParamRulesEngine:_this.props.filterParamRulesEngine,filterTransactionList:_this.props.filterTransactionList}));return tabMap;};_this.ConfirmDelete=function(operation,deleteId,selectedRecord){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.DeleteTestMaterial(operation,deleteId,selectedRecord);});};_this.SpecConfirmDelete=function(operation,deleteId,selectedRecord,ncontrolCode){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteAction(selectedRecord,\"delete\",ncontrolCode,\"TestGroupAddSpecification\",\"openChildModal\");});};_this.DeleteTestMaterial=function(operation,ncontrolCode){var selectedSpecification=_this.props.masterData.SelectedSpecification;if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){var selectedRecord=_this.state.selectedRecord;var inputData=[];inputData={ntreeversiontempcode:_this.props.masterData.selectedNode.ntreeversiontempcode};inputData[\"testgrouptestmaterial\"]={ntestgrouptestmaterialcode:_this.props.masterData.selectedMaterial.ntestgrouptestmaterialcode,ntestgrouptestcode:_this.props.masterData.selectedMaterial.ntestgrouptestcode};inputData[\"userinfo\"]=_this.props.userInfo;var inputParam={methodUrl:\"TestGroupTestMaterial\",classUrl:_this.props.inputParam.classUrl,inputData:inputData,operation:\"delete\"};var masterData=_this.props.masterData;if(showEsign(_this.props.esignRights,_this.props.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_TESTGROUPTESTMATERIAL\",operation:operation.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openChildModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}};_this.onSaveClick=function(saveType,formRef){var inputParam={};// if(this.props.screenName === \"IDS_TEST\" \n//     || this.props.screenName === \"IDS_EDITTESTGROUPTEST\") {\n//     inputParam = this.onSaveTest(saveType, formRef);\n// } else \nif(_this.props.screenName===\"IDS_FORMULA\"){inputParam=_this.onSaveFormula(saveType,formRef);}else if(_this.props.screenName===\"IDS_PARAMETER\"){inputParam=_this.onSaveParameter(saveType,formRef);}else if(_this.props.screenName===\"IDS_CODEDRESULT\"){inputParam=_this.onSaveCodedResult(saveType,formRef);}else if(_this.props.screenName===\"IDS_CLINICALSPEC\"){inputParam=_this.onSaveSpecification(saveType,formRef);}else if(_this.props.screenName===\"IDS_TESTGROUPTESTMATERIAL\"){inputParam=_this.onSaveMaterial(saveType,formRef);}if(showEsign(_this.props.esignRights,_this.props.userInfo.nformcode,_this.props.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.masterData,\"openChildModal\",{});}};_this.onSaveParameter=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;var parameterList=[\"ntestgrouptestparametercode\",\"ntestgrouptestcode\",\"ntestparametercode\",\"sparametersynonym\",\"nroundingdigits\",\"nresultmandatory\",\"nreportmandatory\",\"sspecdesc\",\"nsorter\"];var testGroupTestParameter={nparametertypecode:selectedRecord.nparametertypecode.value,nunitcode:selectedRecord.nunitcode?selectedRecord.nunitcode.value:-1,nchecklistversioncode:selectedRecord.nchecklistversioncode?selectedRecord.nchecklistversioncode.value:-1};parameterList.map(function(item){return testGroupTestParameter[item]=selectedRecord[item]?selectedRecord[item]:\"\";});var inputData={testgrouptestparameter:testGroupTestParameter,userinfo:_this.props.userInfo};if(selectedRecord.nparametertypecode.value===parameterType.NUMERIC){var testGroupTestNumericParameter={};var numericList=[\"sminlod\",\"smaxlod\",\"sminb\",\"smina\",\"smaxa\",\"smaxb\",\"sminloq\",\"smaxloq\",\"sdisregard\",\"sresultvalue\"];testGroupTestNumericParameter[\"ntestgrouptestparametercode\"]=selectedRecord.ntestgrouptestparametercode;numericList.map(function(item){return testGroupTestNumericParameter[item]=selectedRecord[item]?selectedRecord[item]===\"0\"?selectedRecord[item]:selectedRecord[item].replace(/^0+/,''):null;});inputData[\"testgrouptestnumericparameter\"]=testGroupTestNumericParameter;if(selectedRecord.ntestformulacode){var testFormula=selectedRecord.ntestformulacode.item;var testgrouptestformula={ntestgrouptestparametercode:selectedRecord.ntestgrouptestparametercode,ntestgrouptestcode:selectedRecord.ntestgrouptestcode,ntestformulacode:testFormula.ntestformulacode,sformulacalculationcode:testFormula.sformulacalculationcode,sformulacalculationdetail:testFormula.sformulacalculationdetail,ntransactionstatus:transactionStatus.YES};inputData[\"testgrouptestformula\"]=testgrouptestformula;}else{inputData[\"testgrouptestformula\"]=null;}}else if(selectedRecord.nparametertypecode.value===parameterType.CHARACTER){var characterList=[\"ntestgrouptestparametercode\",\"scharname\"];var testGroupTestCharParameter={};characterList.map(function(item){return testGroupTestCharParameter[item]=selectedRecord[item]?selectedRecord[item]:\"\";});inputData[\"testgrouptestcharparameter\"]=testGroupTestCharParameter;}else if(selectedRecord.nparametertypecode.value===parameterType.PREDEFINED){var testGroupTestPredefParameter={ntestgrouptestparametercode:selectedRecord.ntestgrouptestparametercode,ngradecode:selectedRecord.ngradecode.value,spredefinedname:selectedRecord.spredefinedname,ntestgrouptestpredefcode:selectedRecord.ntestgrouptestpredefcode,ndefaultstatus:selectedRecord.ndefaultstatus};inputData[\"testgrouptestpredefparameter\"]=testGroupTestPredefParameter;}console.log(\"input data:\",inputData);var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:\"update\",methodUrl:\"TestGroupParameter\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};return inputParam;};_this.onSaveFormula=function(saveType,formRef){var masterData=_this.props.masterData;var selectedRecord=_this.state.selectedRecord;var selectedParameter=masterData.selectedParameter;var testFormulaArray=selectedRecord.ntestformulacode.map(function(test){return{ntestgrouptestcode:selectedParameter.ntestgrouptestcode,ntestgrouptestparametercode:selectedParameter.ntestgrouptestparametercode,ntestformulacode:test.item.ntestformulacode,sformulacalculationcode:test.item.sformulacalculationcode,sformulacalculationdetail:test.item.sformulacalculationdetail,ntransactionstatus:transactionStatus.NO};});var inputData={testgroupspecification:masterData.SelectedSpecification,testgrouptestformula:testFormulaArray,userinfo:_this.props.userInfo};var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:_this.props.operation,methodUrl:\"TestGroupTestFormula\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};return inputParam;};_this.onSaveCodedResult=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;var testGroupPredefParameter={ndefaultstatus:transactionStatus.NO,nstatus:transactionStatus.ACTIVE,ntestgrouptestpredefcode:selectedRecord[\"ntestgrouptestpredefcode\"],ntestgrouptestparametercode:_this.props.masterData.selectedParameter[\"ntestgrouptestparametercode\"],ngradecode:selectedRecord[\"ngradecode\"].value,spredefinedname:selectedRecord[\"spredefinedname\"],sresultparacomment:selectedRecord[\"sresultparacomment\"],ntestpredefinedcode:_this.props.masterData.selectedParameter[\"ntestpredefinedcode\"]};var inputParam={inputData:{testgrouptestpredefinedparameter:testGroupPredefParameter,userinfo:_this.props.userInfo,testgroupspecification:_this.props.masterData.SelectedSpecification},classUrl:\"testgroup\",operation:_this.props.operation,methodUrl:\"TestGroupPredefParameter\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};return inputParam;};_this.onSaveSpecification=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;// if(selectedRecord[\"nfromage\"]<selectedRecord[\"ntoage\"]){\nvar TestGroupAddSpecification={nstatus:transactionStatus.ACTIVE,ntestgrouptestparametercode:_this.props.masterData.selectedParameter[\"ntestgrouptestparametercode\"],ngendercode:selectedRecord[\"ngendercode\"].value,nfromage:selectedRecord[\"nfromage\"],ntoage:selectedRecord[\"ntoage\"],shigha:selectedRecord[\"nhigha\"],shighb:selectedRecord[\"nhighb\"],slowa:selectedRecord[\"nlowa\"],slowb:selectedRecord[\"nlowb\"],sresultvalue:selectedRecord[\"sresultvalue\"],ntestgrouptestclinicspeccode:selectedRecord[\"ntestgrouptestclinicspeccode\"]};var inputParam={inputData:{testgroupaddspecification:TestGroupAddSpecification,userinfo:_this.props.userInfo,testgroupspecification:_this.props.masterData.SelectedSpecification},classUrl:\"testgroup\",operation:_this.props.operation,methodUrl:\"TestGroupAddSpecification\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};return inputParam;// }else{\n//     toast.warn(this.props.intl.formatMessage({id: \"IDS_SELECTEDTEMPLATEISRETIRED\"})); \n// }\n};_this.onSaveMaterial=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;var testGroupTestMaterial=[];if(_this.props.operation===\"create\"){testGroupTestMaterial={ntestgrouptestcode:_this.props.masterData.SelectedTest.ntestgrouptestcode,ntestgrouptestmaterialcode:_this.props.masterData.SelectedTest.ntestgrouptestmaterialcode,nmaterialtypecode:selectedRecord[\"nmaterialtypecode\"].item.jsondata.nmaterialtypecode,nmaterialcatcode:selectedRecord[\"nmaterialcatcode\"].value,nmaterialcode:selectedRecord[\"nmaterialcode\"].value,smaterialname:selectedRecord[\"nmaterialcode\"].label,sremarks:selectedRecord[\"sremarks\"],nstatus:transactionStatus.ACTIVE};}else{testGroupTestMaterial={ntestgrouptestcode:_this.props.masterData.SelectedTest.ntestgrouptestcode,ntestgrouptestmaterialcode:_this.props.masterData.selectedMaterial.ntestgrouptestmaterialcode,nmaterialtypecode:selectedRecord[\"nmaterialtypecode\"].value,nmaterialcatcode:selectedRecord[\"nmaterialcatcode\"].value,nmaterialcode:selectedRecord[\"nmaterialcode\"].value,sremarks:selectedRecord[\"sremarks\"],nstatus:transactionStatus.ACTIVE};}var inputParam={inputData:{testgrouptestmaterial:testGroupTestMaterial,ntreeversiontempcode:_this.props.masterData.selectedNode.ntreeversiontempcode,userinfo:_this.props.userInfo},classUrl:\"testgroup\",operation:_this.props.operation,methodUrl:\"TestGroupTestMaterial\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};return inputParam;};_this.deleteTest=function(deleteParam){var masterData=_this.props.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=_this.props.masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var screenName=deleteParam.screenName;var inputParam={inputData:{testgrouptest:deleteParam.selectedRecord,userinfo:_this.props.userInfo,testgroupspecification:testgroupspecification,treetemplatemanipulation:_this.props.masterData.selectedNode},classUrl:\"testgroup\",operation:\"delete\",methodUrl:\"Test\",screenName:\"IDS_TEST\",postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:deleteParam.selectedRecord.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};var _masterData=_this.props.masterData;if(showEsign(_this.props.esignRights,_this.props.userInfo.nformcode,_this.props.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_masterData},openModal:true,screenName:screenName,operation:deleteParam.operation,selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_masterData,\"openModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};_this.deleteAction=function(item,operation,ncontrolCode,methodUrl,modalName){var masterData=_this.props.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var _inputData;var selected=item;var inputParam={inputData:(_inputData={},_defineProperty(_inputData,methodUrl.toLowerCase(),selected),_defineProperty(_inputData,\"userinfo\",_this.props.userInfo),_defineProperty(_inputData,\"testgroupspecification\",_this.props.masterData.SelectedSpecification),_inputData),classUrl:\"testgroup\",operation:operation,methodUrl:methodUrl,screenName:\"IDS_TEST\",postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:_this.props.masterData.SelectedTest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.userInfo},masterData:_this.props.masterData,searchFieldList:_this.searchFieldList}};var _masterData2=_this.props.masterData;if(showEsign(_this.props.esignRights,_this.props.userInfo.nformcode,ncontrolCode)){var _data;var updateInfo={typeName:DEFAULT_RETURN,data:(_data={loadEsign:true,screenData:{inputParam:inputParam,masterData:_masterData2}},_defineProperty(_data,modalName,true),_defineProperty(_data,\"screenName\",\"IDS_TEST\"),_defineProperty(_data,\"operation\",operation),_defineProperty(_data,\"selectedRecord\",{}),_data)};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_masterData2,\"openChildModal\",{});}}};_this.onSwitchChange=function(item,key,methodUrl,event){var masterData=_this.props.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{//NIBSCRT-2236\nvar testgroupspecification=_this.props.masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var _inputData2;var dataItem=item;if(methodUrl===\"TestGroupTestFormula\"){dataItem[\"ntransactionstatus\"]=transactionStatus.YES;}else if(methodUrl==='TestGroupPredefParameter'){// if(this.props.masterData.SelectedSpecification.napprovalstatus === transactionStatus.DRAFT || this.props.masterData.SelectedSpecification.napprovalstatus === transactionStatus.CORRECTION)\n// {\ndataItem['ndefaultstatus']=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;// }\n// else{\n//     return toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\n// }\n}else{dataItem[\"ndefaultstatus\"]=transactionStatus.YES;}var inputParam={inputData:(_inputData2={},_defineProperty(_inputData2,key,dataItem),_defineProperty(_inputData2,\"userinfo\",_this.props.userInfo),_defineProperty(_inputData2,\"testgroupspecification\",_this.props.masterData.SelectedSpecification),_inputData2),classUrl:\"testgroup\",operation:\"default\",methodUrl:methodUrl};_this.props.crudMaster(inputParam,_this.props.masterData,\"openChildModal\",{});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName,caseNo){var _inputParam;var inputData=[];var masterData=_objectSpread({},_this.props.masterData);var inputParam=[];var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});break;case 2:selectedRecord[\"parameterTypeCode\"]=comboData.value;selectedRecord[fieldName]=comboData;var needRoundingDigit=comboData.value===parameterType.NUMERIC?false:true;var needUnit=comboData.value===parameterType.NUMERIC?false:true;selectedRecord[\"nroundingdigits\"]=0;selectedRecord[\"nunitcode\"]=comboData.value===parameterType.NUMERIC?_this.props.parameterData.defaultUnit:undefined;var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,testGroupInputData:_objectSpread(_objectSpread({},_this.props.testGroupInputData),{},{needRoundingDigit:needRoundingDigit,needUnit:needUnit})}};_this.props.updateStore(updateInfo);break;case 3:selectedRecord[\"schecklistversionname\"]=comboData.item.schecklistversionname;selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});break;case 4:var oldnmaterialtypecode=selectedRecord[\"nmaterialtypecode\"].value?selectedRecord[\"nmaterialtypecode\"].value:selectedRecord[\"nmaterialtypecode\"];if(oldnmaterialtypecode!==comboData.value){delete selectedRecord['nmaterialcatcode'];delete selectedRecord['nmaterialcode'];}selectedRecord[\"nmaterialtypecode\"]=comboData.value;selectedRecord[fieldName]=comboData;inputData={userinfo:_this.props.userInfo,nmaterialtypecode:parseInt(comboData.value)};inputParam={materialType:_this.props.materialType,operation:_this.props.operation,masterData:masterData,inputData:inputData,selectedRecord:selectedRecord,screenName:\"IDS_TESTGROUPTESTMATERIAL\",ncontrolCode:_this.props.ncontrolCode};_this.props.getMaterialCategoryBasedMaterialType(inputParam);break;case 5:if(selectedRecord[\"nmaterialcatcode\"]){var oldnmaterialcatcode=selectedRecord[\"nmaterialcatcode\"].value?selectedRecord[\"nmaterialcatcode\"].value:selectedRecord[\"nmaterialcatcode\"];if(oldnmaterialcatcode!==comboData.value){delete selectedRecord['nmaterialcode'];}}selectedRecord[\"nmaterialcatcode\"]=comboData.value;selectedRecord[fieldName]=comboData;inputData={userinfo:_this.props.userInfo,nmaterialcatcode:parseInt(selectedRecord[\"nmaterialcatcode\"].value),nmaterialtypecode:parseInt(selectedRecord[\"nmaterialtypecode\"].value)};inputParam=(_inputParam={masterData:masterData,inputData:inputData,selectedRecord:selectedRecord,operation:_this.props.operation},_defineProperty(_inputParam,\"selectedRecord\",selectedRecord),_defineProperty(_inputParam,\"screenName\",\"IDS_TESTGROUPTESTMATERIAL\"),_defineProperty(_inputParam,\"ncontrolCode\",_this.props.ncontrolCode),_inputParam);_this.props.getMaterialBasedMaterialCategory(inputParam);break;default:break;}};_this.onInputOnChange=function(event,caseNo,optional){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?optional[0]:optional[1];}else if(event.target.type==='radio'){selectedRecord[event.target.name]=optional;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});break;case 2:selectedRecord[event.target.name]=event.target.value;var indexKey=Object.keys(optional)[0];var value=Object.values(optional)[0];var treeData={ntreeversiontempcode:value.ntreeversiontempcode,npositioncode:value.nlevelno-1,sleveldescription:event.target.value,ntemptranstestgroupcode:value.ntemptranstestgroupcode,nformcode:62,schildnode:value.schildnode,nnextchildcode:value.schildnode};var treetemplatemanipulation=selectedRecord.treetemplatemanipulation||[];treetemplatemanipulation[indexKey]=treeData;selectedRecord[\"treetemplatemanipulation\"]=treetemplatemanipulation;_this.setState({selectedRecord:selectedRecord});break;case 4:var inputValue=event.target.value;if(/^-?\\d*?\\.?\\d*?$/.test(inputValue)||inputValue===\"\"){selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});break;default:break;}};_this.onNumericInputChange=function(value,name){console.log(\"value:\",value,name);var selectedRecord=_this.state.selectedRecord||{};if(name===\"nroundingdigits\"){// if (/^-?\\d*?$/.test(value.target.value) || value.target.value === \"\") {\n//     console.log(\"val:\", value.target.value);\n//     selectedRecord[name] = value.target.value;\n// }\n// if (/^-?\\d*?$/.test(value) || value === \"\") {\n//    // console.log(\"val:\", value);\n//     selectedRecord[name] = value;\n// }\n//const values = value.target.value.replace(/[^-^0-9]/g, '');\nif(/^[0-9]+$/.test(value.target.value)||value.target.value===\"\"){selectedRecord[name]=value.target.value;}else{selectedRecord[name]=\"\";}}else{selectedRecord[name]=value;}_this.setState({selectedRecord:selectedRecord});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.screenData};_this.props.validateEsignCredential(inputParam,\"openChildModal\");};_this.state={selectedRecord:{}};_this.confirmMessage=new ConfirmMessage();_this.codedResultMandatory=[{\"idsName\":\"IDS_CODEDRESULT\",\"dataField\":\"spredefinedname\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_ACTUALRESULT\",\"dataField\":\"ngradecode\",\"width\":\"200px\",\"mandatory\":true}];_this.clinicalSpecMandatory=[{\"idsName\":\"IDS_GENDER\",\"dataField\":\"ngendercode\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_FROMAGE\",\"dataField\":\"nfromage\",\"width\":\"200px\",\"mandatory\":true},{\"idsName\":\"IDS_TOAGE\",\"dataField\":\"ntoage\",\"width\":\"200px\",\"mandatory\":true}];return _this;}_createClass(TestGroupTestTab,[{key:\"render\",value:function render(){var _this2=this;if(this.props.masterData.TestGroupTestClinicalSpec){sortData(this.props.masterData.TestGroupTestClinicalSpec,\"ascending\",\"nfromage\");}this.paramColumnList=[{\"idsName\":\"IDS_PARAMETERSYNONYM\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PARAMETERTYPE\",\"dataField\":\"nparametertypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];if(this.state.selectedRecord[\"parameterTypeCode\"]&&this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.NUMERIC){this.paramColumnList=[{\"idsName\":\"IDS_PARAMETERSYNONYM\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PARAMETERTYPE\",\"dataField\":\"nparametertypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_ROUNDINGDIGITS\",\"dataField\":\"nroundingdigits\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_UNIT\",\"dataField\":\"nunitcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];}if(this.state.selectedRecord[\"parameterTypeCode\"]&&this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.PREDEFINED){this.paramColumnList=[{\"idsName\":\"IDS_PARAMETERSYNONYM\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PARAMETERTYPE\",\"dataField\":\"nparametertypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_CODEDRESULT\",\"dataField\":\"spredefinedname\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_ACTUALRESULT\",\"dataField\":\"ngradecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];}var paramMandatoryFields=[];this.paramColumnList.forEach(function(item){return item.mandatory===true?paramMandatoryFields.push(item):\"\";});this.materialColumnList=[{\"idsName\":\"IDS_MATERIALTYPE\",\"dataField\":\"nmaterialtypecode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALCATEGORY\",\"dataField\":\"nmaterialcatcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALNAME\",\"dataField\":\"nmaterialcode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"grouped-param-inner\"},!this.props.testView?/*#__PURE__*/React.createElement(CustomTab,{paneHeight:this.props.paneHeight,tabDetail:this.tabDetail(),onTabChange:this.onTabChange}):/*#__PURE__*/React.createElement(CustomTab,{paneHeight:this.props.paneHeight,tabDetail:this.testTabDetail(),onTabChange:this.onTabChange}))),this.props.openChildModal&&this.props.screenName&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.openChildModal,closeModal:this.closeModal,operation:this.props.operation,inputParam:this.props.inputParam,screenName:this.props.screenName,esign:this.props.loadEsign,validateEsign:this.validateEsign,onSaveClick:this.onSaveClick,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.screenName===\"IDS_PARAMETER\"?paramMandatoryFields:this.props.screenName===\"IDS_CODEDRESULT\"?this.codedResultMandatory:this.props.screenName===\"IDS_CLINICALSPEC\"?this.clinicalSpecMandatory:this.props.screenName===\"IDS_TESTGROUPTESTMATERIAL\"?this.materialColumnList:[],addComponent:this.props.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.operation,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.screenName===\"IDS_PARAMETER\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(EditTestGroupParameter,{selectedRecord:this.state.selectedRecord||{},testGroupInputData:this.props.testGroupInputData,onComboChange:this.onComboChange,onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange//TestGroupTestClinicalSpec={this.props.masterData.TestGroupTestClinicalSpec}\n}),this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.PREDEFINED||this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.CHARACTER||this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.NUMERIC?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",{className:\"horizontal-line\"}))):\"\",this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.PREDEFINED&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(AddCodedResult,{onInputOnChange:this.onInputOnChange,parameterData:this.props.parameterData,selectedRecord:this.state.selectedRecord,onComboChange:this.onComboChange})),this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.CHARACTER&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(FormTextarea,{name:\"scharname\",label:this.props.intl.formatMessage({id:\"IDS_TESTCHARACTER\"}),onChange:function onChange(event){return _this2.onInputOnChange(event,1);},placeholder:this.props.intl.formatMessage({id:\"IDS_TESTCHARACTER\"}),value:this.state.selectedRecord[\"scharname\"],rows:\"2\",required:false,maxLength:255}))),this.state.selectedRecord[\"parameterTypeCode\"]===parameterType.NUMERIC&&this.props.masterData.selectedNode.nsampletypecode!==SampleType.CLINICALTYPE&&/*#__PURE__*/React.createElement(AddSpecification,{selectedRecord:this.state.selectedRecord,onInputOnChange:this.onInputOnChange})):this.props.screenName===\"IDS_CODEDRESULT\"?/*#__PURE__*/React.createElement(AddCodedResult,{onInputOnChange:this.onInputOnChange,parameterData:this.props.parameterData,selectedRecord:this.state.selectedRecord,onComboChange:this.onComboChange}):this.props.screenName===\"IDS_CLINICALSPEC\"?/*#__PURE__*/React.createElement(AddTestGroupNumericSpecification,{onInputOnChange:this.onInputOnChange,parameterData:this.props.parameterData,selectedRecord:this.state.selectedRecord,onComboChange:this.onComboChange,onNumericInputChange:this.onNumericInputChange}):/*#__PURE__*/React.createElement(AddTestGroupTestMaterial,{materialType:this.props.materialType,selectedRecord:this.state.selectedRecord,materialCategoryList:this.props.materialCategoryList,materialList:this.props.materialList,onComboChange:this.onComboChange,onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange})}),this.props.testGroupCheckList&&this.props.testGroupCheckList.templateData&&this.props.testGroupCheckList.templateData.length>0&&/*#__PURE__*/React.createElement(TemplateForm,{templateData:this.props.testGroupCheckList.templateData,handleClose:this.handleClose,screenName:\"IDS_VIEWCHECKLIST\",needSaveButton:false,viewScreen:this.props.openTemplateModal,onTemplateInputChange:this.onTemplateInputChange,onTemplateComboChange:this.onTemplateComboChange,onTemplateDateChange:this.onTemplateDateChange}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.selectedRecord!==previousProps.selectedRecord){this.setState({selectedRecord:this.props.selectedRecord});}}}]);return TestGroupTestTab;}(Component);export default injectIntl(TestGroupTestTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/TestGroupTestTab.jsx"],"names":["React","Component","injectIntl","Row","Col","PerfectScrollbar","DEFAULT_RETURN","TestGroupParameterTab","CustomTab","showEsign","sortData","Esign","SlideOutModal","parameterType","SampleType","transactionStatus","EditTestGroupParameter","AddCodedResult","FormTextarea","AddSpecification","TemplateForm","toast","TestGroupMaterialTab","AddTestGroupTestMaterial","AddTestGroupNumericSpecification","ConfirmMessage","TestGroupRulesEngineTab","TestGroupTestTab","props","onTemplateInputChange","event","selectedRecord","state","target","type","name","checked","YES","NO","value","setState","onTemplateComboChange","comboData","fieldName","onTemplateDateChange","dateName","dateValue","Date","handleClose","updateInfo","typeName","data","testGroupCheckList","openTemplateModal","updateStore","closeModal","loadEsign","openChildModal","operation","onTabChange","tabProps","screenName","EditSpecDetails","viewdetails","ncontrolCode","addTestGroupNumericTab","userInfo","testgroupspecification","masterData","SelectedSpecification","DeleteSpecDetails","SpecConfirmDelete","tabDetail","tabMap","Map","set","controlMap","userRoleControlRights","inputParam","deleteAction","onSwitchChange","addTestFile","viewTestFile","defaultRecord","filterData","getTestGroupParameter","editTestGroupParameter","addTestGroupCodedResult","viewTestGroupCheckList","dataState","dataStateChange","testTabDetail","paneHeight","ConfirmDelete","getDataForTestMaterial","getTestGroupMaterial","getDataForEditTestMaterial","getTestGroupRulesEngineAdd","settings","skipRulesEngine","takeRulesEngine","getEditTestGroupRulesEngine","getSelectedTestGroupRulesEngine","ConfirmDeleteRule","approveVersion","openflowview","handlePageChangeRuleEngine","viewOutcome","filterParamRulesEngine","filterTransactionList","deleteId","confirmMessage","confirm","intl","formatMessage","id","DeleteTestMaterial","selectedSpecification","napprovalstatus","DRAFT","CORRECTION","inputData","ntreeversiontempcode","selectedNode","ntestgrouptestmaterialcode","selectedMaterial","ntestgrouptestcode","methodUrl","classUrl","esignRights","nformcode","screenData","openModal","crudMaster","warn","onSaveClick","saveType","formRef","onSaveFormula","onSaveParameter","onSaveCodedResult","onSaveSpecification","onSaveMaterial","parameterList","testGroupTestParameter","nparametertypecode","nunitcode","nchecklistversioncode","map","item","testgrouptestparameter","userinfo","NUMERIC","testGroupTestNumericParameter","numericList","ntestgrouptestparametercode","replace","ntestformulacode","testFormula","testgrouptestformula","sformulacalculationcode","sformulacalculationdetail","ntransactionstatus","CHARACTER","characterList","testGroupTestCharParameter","PREDEFINED","testGroupTestPredefParameter","ngradecode","spredefinedname","ntestgrouptestpredefcode","ndefaultstatus","console","log","searchRef","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","SelectedTest","fetchUrl","fecthInputObject","searchFieldList","selectedParameter","testFormulaArray","test","testGroupPredefParameter","nstatus","ACTIVE","sresultparacomment","ntestpredefinedcode","testgrouptestpredefinedparameter","TestGroupAddSpecification","ngendercode","nfromage","ntoage","shigha","shighb","slowa","slowb","sresultvalue","ntestgrouptestclinicspeccode","testgroupaddspecification","testGroupTestMaterial","nmaterialtypecode","jsondata","nmaterialcatcode","nmaterialcode","smaterialname","label","sremarks","testgrouptestmaterial","deleteTest","deleteParam","treeVersionTemplateIndex","findIndex","x","templateVersionStatus","RETIRED","testgrouptest","treetemplatemanipulation","modalName","selected","toLowerCase","key","dataItem","onEsignInputOnChange","onComboChange","caseNo","needRoundingDigit","needUnit","parameterData","defaultUnit","undefined","testGroupInputData","schecklistversionname","oldnmaterialtypecode","parseInt","materialType","getMaterialCategoryBasedMaterialType","oldnmaterialcatcode","getMaterialBasedMaterialCategory","onInputOnChange","optional","indexKey","Object","keys","values","treeData","npositioncode","nlevelno","sleveldescription","ntemptranstestgroupcode","schildnode","nnextchildcode","inputValue","onNumericInputChange","validateEsign","sreason","nreasoncode","spredefinedreason","password","validateEsignCredential","codedResultMandatory","clinicalSpecMandatory","TestGroupTestClinicalSpec","paramColumnList","paramMandatoryFields","forEach","mandatory","push","materialColumnList","testView","nsampletypecode","CLINICALTYPE","materialCategoryList","materialList","templateData","length","previousProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport TestGroupParameterTab from './TestGroupParameterTab';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport { showEsign, sortData } from '../../components/CommonScript';\r\nimport Esign from '../audittrail/Esign';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { parameterType, SampleType, transactionStatus } from '../../components/Enumeration';\r\nimport EditTestGroupParameter from './EditTestGroupParameter';\r\nimport AddCodedResult from '../testmanagement/AddCodedResult';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport AddSpecification from '../testmanagement/AddSpecification';\r\nimport TemplateForm from '../checklist/checklist/TemplateForm';\r\nimport { toast } from 'react-toastify';\r\nimport TestGroupMaterialTab from './TestGroupMaterialTab';\r\nimport AddTestGroupTestMaterial from './AddTestGroupTestMaterial';\r\nimport AddTestGroupNumericSpecification from './AddTestGroupNumericSpecification';\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport TestGroupRulesEngineTab from './TestGroupRulesEngineTab';\r\n\r\nclass TestGroupTestTab extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedRecord: {}\r\n        }\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.codedResultMandatory = [{ \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true }];\r\n\r\n        this.clinicalSpecMandatory = [{ \"idsName\": \"IDS_GENDER\", \"dataField\": \"ngendercode\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_FROMAGE\", \"dataField\": \"nfromage\", \"width\": \"200px\", \"mandatory\": true },\r\n        { \"idsName\": \"IDS_TOAGE\", \"dataField\": \"ntoage\", \"width\": \"200px\", \"mandatory\": true }];\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.masterData.TestGroupTestClinicalSpec) {\r\n            sortData(this.props.masterData.TestGroupTestClinicalSpec, \"ascending\", \"nfromage\");\r\n        }\r\n\r\n\r\n        this.paramColumnList = [\r\n            { \"idsName\": \"IDS_PARAMETERSYNONYM\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"nparametertypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ]\r\n        if (this.state.selectedRecord[\"parameterTypeCode\"] && this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.NUMERIC) {\r\n            this.paramColumnList = [\r\n                { \"idsName\": \"IDS_PARAMETERSYNONYM\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"nparametertypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_ROUNDINGDIGITS\", \"dataField\": \"nroundingdigits\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_UNIT\", \"dataField\": \"nunitcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ]\r\n        }\r\n        if (this.state.selectedRecord[\"parameterTypeCode\"] && this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.PREDEFINED) {\r\n            this.paramColumnList = [\r\n                { \"idsName\": \"IDS_PARAMETERSYNONYM\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"nparametertypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"spredefinedname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_ACTUALRESULT\", \"dataField\": \"ngradecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ]\r\n        }\r\n        const paramMandatoryFields = [];\r\n\r\n        this.paramColumnList.forEach(item => item.mandatory === true ?\r\n            paramMandatoryFields.push(item) : \"\"\r\n        );\r\n        this.materialColumnList = [\r\n            { \"idsName\": \"IDS_MATERIALTYPE\", \"dataField\": \"nmaterialtypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_MATERIALCATEGORY\", \"dataField\": \"nmaterialcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_MATERIALNAME\", \"dataField\": \"nmaterialcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n\r\n        ]\r\n        return (\r\n            <>\r\n                <PerfectScrollbar>\r\n                    <div className='grouped-param-inner'>\r\n                        {!this.props.testView ?\r\n                            <CustomTab paneHeight={this.props.paneHeight} tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                            :\r\n                            <CustomTab paneHeight={this.props.paneHeight} tabDetail={this.testTabDetail()} onTabChange={this.onTabChange} />\r\n\r\n                        }\r\n                    </div>\r\n                </PerfectScrollbar>\r\n\r\n                {this.props.openChildModal && this.props.screenName &&\r\n                    <SlideOutModal\r\n                        show={this.props.openChildModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.operation}\r\n                        inputParam={this.props.inputParam}\r\n                        screenName={this.props.screenName}\r\n                        esign={this.props.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        onSaveClick={this.onSaveClick}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.screenName === \"IDS_PARAMETER\" ? paramMandatoryFields :\r\n                            this.props.screenName === \"IDS_CODEDRESULT\" ? this.codedResultMandatory : this.props.screenName === \"IDS_CLINICALSPEC\" ? this.clinicalSpecMandatory : this.props.screenName === \"IDS_TESTGROUPTESTMATERIAL\"\r\n                                ? this.materialColumnList : []}\r\n                        addComponent={this.props.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.operation}\r\n                                onInputOnChange={this.onEsignInputOnChange}\r\n                                inputParam={this.props.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.screenName === \"IDS_PARAMETER\" ?\r\n                                <>\r\n                                    <EditTestGroupParameter\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        testGroupInputData={this.props.testGroupInputData}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onNumericInputChange={this.onNumericInputChange}\r\n                                    //TestGroupTestClinicalSpec={this.props.masterData.TestGroupTestClinicalSpec}\r\n                                    />\r\n                                    {this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.PREDEFINED ||\r\n                                        this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.CHARACTER ||\r\n                                        this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.NUMERIC ?\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className=\"horizontal-line\"></div>\r\n                                            </Col>\r\n                                        </Row> : \"\"\r\n                                    }\r\n\r\n                                    {this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.PREDEFINED &&\r\n                                        <Row>\r\n                                            <AddCodedResult\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                parameterData={this.props.parameterData}\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                onComboChange={this.onComboChange}\r\n                                            />\r\n                                        </Row>}\r\n                                    {this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.CHARACTER &&\r\n                                        <Row>\r\n                                            <Col md=\"12\">\r\n                                                <FormTextarea\r\n                                                    name={\"scharname\"}\r\n                                                    label={this.props.intl.formatMessage({ id: \"IDS_TESTCHARACTER\" })}\r\n                                                    onChange={(event) => this.onInputOnChange(event, 1)}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_TESTCHARACTER\" })}\r\n                                                    value={this.state.selectedRecord[\"scharname\"]}\r\n                                                    rows=\"2\"\r\n                                                    required={false}\r\n                                                    maxLength={255}\r\n                                                >\r\n                                                </FormTextarea>\r\n                                            </Col>\r\n                                        </Row>}\r\n                                    {this.state.selectedRecord[\"parameterTypeCode\"] === parameterType.NUMERIC && this.props.masterData.selectedNode.nsampletypecode!==SampleType.CLINICALTYPE &&\r\n                                        <AddSpecification\r\n                                            selectedRecord={this.state.selectedRecord}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                        />}\r\n                                </> :\r\n                                this.props.screenName === \"IDS_CODEDRESULT\" ?\r\n                                    <AddCodedResult\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        parameterData={this.props.parameterData}\r\n                                        selectedRecord={this.state.selectedRecord}\r\n                                        onComboChange={this.onComboChange}\r\n                                    />\r\n                                    :\r\n                                    this.props.screenName === \"IDS_CLINICALSPEC\" ?\r\n                                        <AddTestGroupNumericSpecification\r\n\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            parameterData={this.props.parameterData}\r\n                                            selectedRecord={this.state.selectedRecord}\r\n                                            onComboChange={this.onComboChange}\r\n                                            onNumericInputChange={this.onNumericInputChange}\r\n                                        />\r\n                                        : <AddTestGroupTestMaterial\r\n                                            materialType={this.props.materialType}\r\n                                            selectedRecord={this.state.selectedRecord}\r\n                                            materialCategoryList={this.props.materialCategoryList}\r\n                                            materialList={this.props.materialList}\r\n                                            onComboChange={this.onComboChange}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onNumericInputChange={this.onNumericInputChange}\r\n\r\n                                        />\r\n\r\n                        }\r\n                    />\r\n                }\r\n                {this.props.testGroupCheckList && this.props.testGroupCheckList.templateData &&\r\n                    this.props.testGroupCheckList.templateData.length > 0 &&\r\n                    <TemplateForm\r\n                        templateData={this.props.testGroupCheckList.templateData}\r\n                        handleClose={this.handleClose}\r\n                        screenName=\"IDS_VIEWCHECKLIST\"\r\n                        needSaveButton={false}\r\n                        viewScreen={this.props.openTemplateModal}\r\n                        onTemplateInputChange={this.onTemplateInputChange}\r\n                        onTemplateComboChange={this.onTemplateComboChange}\r\n                        onTemplateDateChange={this.onTemplateDateChange}\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    onTemplateInputChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateComboChange = (comboData, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state.selectedRecord || {};\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleClose = () => {\r\n        let updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: {},\r\n                testGroupCheckList: {},\r\n                openTemplateModal: false\r\n            }\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.loadEsign;\r\n        let openChildModal = this.props.openChildModal;\r\n        let selectedRecord = this.props.selectedRecord;\r\n        if (this.props.loadEsign) {\r\n            if (this.props.operation === \"delete\" || this.props.operation === \"Default\") {\r\n                loadEsign = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        } else {\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openChildModal, loadEsign, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    EditSpecDetails = (viewdetails, ncontrolCode) => {\r\n\r\n        this.props.addTestGroupNumericTab(\"update\", viewdetails, this.props.userInfo, { testgroupspecification: this.props.masterData.SelectedSpecification }, this.props.masterData, ncontrolCode)\r\n    };\r\n\r\n    DeleteSpecDetails = (viewdetails, ncontrolCode) => {\r\n        this.SpecConfirmDelete(\"delete\", 1, viewdetails, ncontrolCode)\r\n    };\r\n\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_PARAMETER\",\r\n            <TestGroupParameterTab\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                userInfo={this.props.userInfo}\r\n                inputParam={this.props.inputParam}\r\n                masterData={this.props.masterData}\r\n                deleteAction={this.deleteAction}\r\n                onSwitchChange={this.onSwitchChange}\r\n                addTestFile={this.props.addTestFile}\r\n                viewTestFile={this.viewTestFile}\r\n                defaultRecord={this.defaultRecord}\r\n                filterData={this.props.filterData}\r\n                getTestGroupParameter={this.props.getTestGroupParameter}\r\n                editTestGroupParameter={this.props.editTestGroupParameter}\r\n                addTestGroupCodedResult={this.props.addTestGroupCodedResult}\r\n                addTestGroupNumericTab={this.props.addTestGroupNumericTab}\r\n                viewTestGroupCheckList={this.props.viewTestGroupCheckList}\r\n                EditSpecDetails={this.EditSpecDetails}\r\n                DeleteSpecDetails={this.DeleteSpecDetails}\r\n                dataState={this.props.dataState}\r\n                dataStateChange={this.props.dataStateChange}\r\n\r\n            />);\r\n        return tabMap;\r\n    }\r\n    testTabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_PARAMETER\",\r\n            <TestGroupParameterTab\r\n                paneHeight={this.props.paneHeight}\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                userInfo={this.props.userInfo}\r\n                inputParam={this.props.inputParam}\r\n                masterData={this.props.masterData}\r\n                deleteAction={this.deleteAction}\r\n                onSwitchChange={this.onSwitchChange}\r\n                addTestFile={this.props.addTestFile}\r\n                viewTestFile={this.viewTestFile}\r\n                defaultRecord={this.defaultRecord}\r\n                filterData={this.props.filterData}\r\n                getTestGroupParameter={this.props.getTestGroupParameter}\r\n                editTestGroupParameter={this.props.editTestGroupParameter}\r\n                addTestGroupCodedResult={this.props.addTestGroupCodedResult}\r\n                addTestGroupNumericTab={this.props.addTestGroupNumericTab}\r\n                viewTestGroupCheckList={this.props.viewTestGroupCheckList}\r\n                EditSpecDetails={this.EditSpecDetails}\r\n                DeleteSpecDetails={this.DeleteSpecDetails}\r\n                hasDynamicColSize={true}\r\n                dataState={this.props.dataState}\r\n                dataStateChange={this.props.dataStateChange}\r\n            />);\r\n        tabMap.set(\"IDS_MATERIAL\",\r\n            <TestGroupMaterialTab\r\n                paneHeight={this.props.paneHeight}\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                userInfo={this.props.userInfo}\r\n                inputParam={this.props.inputParam}\r\n                masterData={this.props.masterData}\r\n                ConfirmDelete={this.ConfirmDelete}\r\n                getDataForTestMaterial={this.props.getDataForTestMaterial}\r\n                getTestGroupMaterial={this.props.getTestGroupMaterial}\r\n                getDataForEditTestMaterial={this.props.getDataForEditTestMaterial}\r\n                selectedRecord={this.state.selectedRecord}\r\n\r\n            />);\r\n            tabMap.set(\"IDS_RULESENGINE\",\r\n            <TestGroupRulesEngineTab\r\n                paneHeight={this.props.paneHeight}\r\n                getTestGroupRulesEngineAdd={this.props.getTestGroupRulesEngineAdd}\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                userInfo={this.props.userInfo} \r\n                selectedRecord={this.state.selectedRecord} \r\n                masterData={this.props.masterData}\r\n                settings={this.props.settings}\r\n                skipRulesEngine={this.props.skipRulesEngine}\r\n                takeRulesEngine={this.props.takeRulesEngine}\r\n                getEditTestGroupRulesEngine={ this.props.getEditTestGroupRulesEngine}\r\n                getSelectedTestGroupRulesEngine={this.props.getSelectedTestGroupRulesEngine}\r\n                ConfirmDeleteRule={this.props.ConfirmDeleteRule}\r\n                approveVersion={this.props.approveVersion}\r\n                openflowview={this.props.openflowview} \r\n                handlePageChangeRuleEngine={this.props.handlePageChangeRuleEngine} \r\n                viewOutcome={this.props.viewOutcome} \r\n                filterParamRulesEngine={this.props.filterParamRulesEngine}\r\n                filterTransactionList={this.props.filterTransactionList} \r\n\r\n            />);\r\n        return tabMap;\r\n    }\r\n    ConfirmDelete = (operation, deleteId, selectedRecord) => {\r\n        this.confirmMessage.confirm(\r\n            \"deleteMessage\",\r\n            this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () =>\r\n                this.DeleteTestMaterial(\r\n                    operation,\r\n                    deleteId, selectedRecord\r\n                )\r\n        );\r\n    };\r\n\r\n    SpecConfirmDelete = (operation, deleteId, selectedRecord, ncontrolCode) => {\r\n        this.confirmMessage.confirm(\r\n            \"deleteMessage\",\r\n            this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () =>\r\n                this.deleteAction(selectedRecord, \"delete\", ncontrolCode, \"TestGroupAddSpecification\", \"openChildModal\")\r\n        );\r\n    };\r\n    DeleteTestMaterial = (operation, ncontrolCode) => {\r\n        let selectedSpecification= this.props.masterData.SelectedSpecification;\r\n        if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT\r\n            || selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n        let selectedRecord = this.state.selectedRecord\r\n        let inputData = [];\r\n        inputData = { ntreeversiontempcode: this.props.masterData.selectedNode.ntreeversiontempcode }\r\n\r\n        inputData[\"testgrouptestmaterial\"] = {\r\n            ntestgrouptestmaterialcode: this.props.masterData.selectedMaterial.ntestgrouptestmaterialcode,\r\n            ntestgrouptestcode: this.props.masterData.selectedMaterial.ntestgrouptestcode,\r\n\r\n        };\r\n\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupTestMaterial\",\r\n            classUrl: this.props.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n        };\r\n        const masterData = this.props.masterData;\r\n        if (\r\n            showEsign(\r\n                this.props.esignRights,\r\n                this.props.userInfo.nformcode,\r\n                ncontrolCode\r\n            )\r\n        ) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    openModal: true,\r\n                    screenName: \"IDS_TESTGROUPTESTMATERIAL\",\r\n                    operation: operation.operation,\r\n                },\r\n            };\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n        }\r\n    }\r\n    else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n    }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        // if(this.props.screenName === \"IDS_TEST\" \r\n        //     || this.props.screenName === \"IDS_EDITTESTGROUPTEST\") {\r\n        //     inputParam = this.onSaveTest(saveType, formRef);\r\n        // } else \r\n        if (this.props.screenName === \"IDS_FORMULA\") {\r\n            inputParam = this.onSaveFormula(saveType, formRef);\r\n        } else if (this.props.screenName === \"IDS_PARAMETER\") {\r\n            inputParam = this.onSaveParameter(saveType, formRef);\r\n        } else if (this.props.screenName === \"IDS_CODEDRESULT\") {\r\n            inputParam = this.onSaveCodedResult(saveType, formRef);\r\n        } else if (this.props.screenName === \"IDS_CLINICALSPEC\") {\r\n            inputParam = this.onSaveSpecification(saveType, formRef);\r\n        }\r\n        else if (this.props.screenName === \"IDS_TESTGROUPTESTMATERIAL\") {\r\n            inputParam = this.onSaveMaterial(saveType, formRef);\r\n        }\r\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\", {});\r\n        }\r\n    }\r\n\r\n    onSaveParameter = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const parameterList = [\"ntestgrouptestparametercode\", \"ntestgrouptestcode\", \"ntestparametercode\", \"sparametersynonym\", \"nroundingdigits\",\r\n            \"nresultmandatory\", \"nreportmandatory\", \"sspecdesc\", \"nsorter\"];\r\n        let testGroupTestParameter = {\r\n            nparametertypecode: selectedRecord.nparametertypecode.value,\r\n            nunitcode: selectedRecord.nunitcode?selectedRecord.nunitcode.value:-1,\r\n            nchecklistversioncode:selectedRecord.nchecklistversioncode? selectedRecord.nchecklistversioncode.value:-1\r\n        }\r\n        parameterList.map(item => {\r\n            return testGroupTestParameter[item] = selectedRecord[item] ? selectedRecord[item] : \"\";\r\n        });\r\n        let inputData = {\r\n            testgrouptestparameter: testGroupTestParameter,\r\n            userinfo: this.props.userInfo\r\n        };\r\n        if (selectedRecord.nparametertypecode.value === parameterType.NUMERIC) {\r\n            let testGroupTestNumericParameter = {};\r\n            const numericList = [\"sminlod\", \"smaxlod\", \"sminb\", \"smina\", \"smaxa\", \"smaxb\", \"sminloq\", \"smaxloq\", \"sdisregard\", \"sresultvalue\"];\r\n            testGroupTestNumericParameter[\"ntestgrouptestparametercode\"] = selectedRecord.ntestgrouptestparametercode;\r\n            numericList.map(item => {\r\n                return testGroupTestNumericParameter[item] = selectedRecord[item] ? selectedRecord[item] === \"0\" ? selectedRecord[item] : selectedRecord[item].replace(/^0+/, '') : null;\r\n            });\r\n            inputData[\"testgrouptestnumericparameter\"] = testGroupTestNumericParameter;\r\n            if (selectedRecord.ntestformulacode) {\r\n                const testFormula = selectedRecord.ntestformulacode.item;\r\n                const testgrouptestformula = {\r\n                    ntestgrouptestparametercode: selectedRecord.ntestgrouptestparametercode,\r\n                    ntestgrouptestcode: selectedRecord.ntestgrouptestcode,\r\n                    ntestformulacode: testFormula.ntestformulacode,\r\n                    sformulacalculationcode: testFormula.sformulacalculationcode,\r\n                    sformulacalculationdetail: testFormula.sformulacalculationdetail,\r\n                    ntransactionstatus: transactionStatus.YES\r\n                };\r\n                inputData[\"testgrouptestformula\"] = testgrouptestformula;\r\n            } else {\r\n                inputData[\"testgrouptestformula\"] = null;\r\n            }\r\n        } else if (selectedRecord.nparametertypecode.value === parameterType.CHARACTER) {\r\n            const characterList = [\"ntestgrouptestparametercode\", \"scharname\"];\r\n            let testGroupTestCharParameter = {};\r\n            characterList.map(item => {\r\n                return testGroupTestCharParameter[item] = selectedRecord[item] ? selectedRecord[item] : \"\";\r\n            });\r\n            inputData[\"testgrouptestcharparameter\"] = testGroupTestCharParameter;\r\n        } else if (selectedRecord.nparametertypecode.value === parameterType.PREDEFINED) {\r\n            const testGroupTestPredefParameter = {\r\n                ntestgrouptestparametercode: selectedRecord.ntestgrouptestparametercode,\r\n                ngradecode: selectedRecord.ngradecode.value,\r\n                spredefinedname: selectedRecord.spredefinedname,\r\n                ntestgrouptestpredefcode: selectedRecord.ntestgrouptestpredefcode,\r\n                ndefaultstatus: selectedRecord.ndefaultstatus\r\n            }\r\n            inputData[\"testgrouptestpredefparameter\"] = testGroupTestPredefParameter;\r\n        }\r\n        console.log(\"input data:\", inputData);\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: \"update\",\r\n            methodUrl: \"TestGroupParameter\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam: {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n            }\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveFormula = (saveType, formRef) => {\r\n        const masterData = this.props.masterData;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const selectedParameter = masterData.selectedParameter;\r\n        const testFormulaArray = selectedRecord.ntestformulacode.map(test => {\r\n            return {\r\n                ntestgrouptestcode: selectedParameter.ntestgrouptestcode,\r\n                ntestgrouptestparametercode: selectedParameter.ntestgrouptestparametercode,\r\n                ntestformulacode: test.item.ntestformulacode,\r\n                sformulacalculationcode: test.item.sformulacalculationcode,\r\n                sformulacalculationdetail: test.item.sformulacalculationdetail,\r\n                ntransactionstatus: transactionStatus.NO\r\n            }\r\n        });\r\n        const inputData = {\r\n            testgroupspecification: masterData.SelectedSpecification,\r\n            testgrouptestformula: testFormulaArray,\r\n            userinfo: this.props.userInfo\r\n        }\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: this.props.operation,\r\n            methodUrl: \"TestGroupTestFormula\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam: {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n            }\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveCodedResult = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const testGroupPredefParameter = {\r\n            ndefaultstatus: transactionStatus.NO,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            ntestgrouptestpredefcode: selectedRecord[\"ntestgrouptestpredefcode\"],\r\n            ntestgrouptestparametercode: this.props.masterData.selectedParameter[\"ntestgrouptestparametercode\"],\r\n            ngradecode: selectedRecord[\"ngradecode\"].value,\r\n            spredefinedname: selectedRecord[\"spredefinedname\"],\r\n            sresultparacomment: selectedRecord[\"sresultparacomment\"],\r\n            ntestpredefinedcode: this.props.masterData.selectedParameter[\"ntestpredefinedcode\"],\r\n\r\n        };\r\n        const inputParam = {\r\n            inputData: {\r\n                testgrouptestpredefinedparameter: testGroupPredefParameter,\r\n                userinfo: this.props.userInfo,\r\n                testgroupspecification: this.props.masterData.SelectedSpecification\r\n            },\r\n            classUrl: \"testgroup\",\r\n            operation: this.props.operation,\r\n            methodUrl: \"TestGroupPredefParameter\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam: {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n            }\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n\r\n\r\n    onSaveSpecification = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        // if(selectedRecord[\"nfromage\"]<selectedRecord[\"ntoage\"]){\r\n        \r\n        const TestGroupAddSpecification = {\r\n            nstatus: transactionStatus.ACTIVE,\r\n            ntestgrouptestparametercode: this.props.masterData.selectedParameter[\"ntestgrouptestparametercode\"],\r\n            ngendercode: selectedRecord[\"ngendercode\"].value,\r\n            nfromage: selectedRecord[\"nfromage\"],\r\n            ntoage: selectedRecord[\"ntoage\"],\r\n            shigha: selectedRecord[\"nhigha\"],\r\n            shighb: selectedRecord[\"nhighb\"],\r\n            slowa: selectedRecord[\"nlowa\"],\r\n            slowb: selectedRecord[\"nlowb\"],\r\n            sresultvalue: selectedRecord[\"sresultvalue\"],\r\n\r\n            ntestgrouptestclinicspeccode: selectedRecord[\"ntestgrouptestclinicspeccode\"],\r\n\r\n        };\r\n\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                testgroupaddspecification: TestGroupAddSpecification,\r\n                userinfo: this.props.userInfo,\r\n                testgroupspecification: this.props.masterData.SelectedSpecification\r\n            },\r\n            classUrl: \"testgroup\",\r\n            operation: this.props.operation,\r\n            methodUrl: \"TestGroupAddSpecification\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam: {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n            }\r\n        }\r\n        return inputParam;\r\n    // }else{\r\n    //     toast.warn(this.props.intl.formatMessage({id: \"IDS_SELECTEDTEMPLATEISRETIRED\"})); \r\n    // }\r\n    }\r\n    onSaveMaterial = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        let testGroupTestMaterial = []\r\n        if (this.props.operation === \"create\") {\r\n            testGroupTestMaterial = {\r\n                ntestgrouptestcode: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                ntestgrouptestmaterialcode: this.props.masterData.SelectedTest.ntestgrouptestmaterialcode,\r\n                nmaterialtypecode: selectedRecord[\"nmaterialtypecode\"].item.jsondata.nmaterialtypecode,\r\n                nmaterialcatcode: selectedRecord[\"nmaterialcatcode\"].value,\r\n                nmaterialcode: selectedRecord[\"nmaterialcode\"].value,\r\n                smaterialname: selectedRecord[\"nmaterialcode\"].label,\r\n                sremarks: selectedRecord[\"sremarks\"],\r\n                nstatus: transactionStatus.ACTIVE,\r\n\r\n            };\r\n        }\r\n        else {\r\n            testGroupTestMaterial = {\r\n                ntestgrouptestcode: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                ntestgrouptestmaterialcode: this.props.masterData.selectedMaterial.ntestgrouptestmaterialcode,\r\n                nmaterialtypecode: selectedRecord[\"nmaterialtypecode\"].value,\r\n                nmaterialcatcode: selectedRecord[\"nmaterialcatcode\"].value,\r\n                nmaterialcode: selectedRecord[\"nmaterialcode\"].value,\r\n                sremarks: selectedRecord[\"sremarks\"],\r\n                nstatus: transactionStatus.ACTIVE,\r\n\r\n            };\r\n        }\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                testgrouptestmaterial: testGroupTestMaterial,\r\n                ntreeversiontempcode: this.props.masterData.selectedNode.ntreeversiontempcode,\r\n                userinfo: this.props.userInfo,\r\n            },\r\n            classUrl: \"testgroup\",\r\n            operation: this.props.operation,\r\n            methodUrl: \"TestGroupTestMaterial\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam: {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n            }\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    deleteTest = (deleteParam) => {\r\n\r\n        const masterData = this.props.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const testgroupspecification = this.props.masterData.SelectedSpecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                const screenName = deleteParam.screenName;\r\n                const inputParam = {\r\n                    inputData: {\r\n                        testgrouptest: deleteParam.selectedRecord,\r\n                        userinfo: this.props.userInfo,\r\n                        testgroupspecification,\r\n                        treetemplatemanipulation: this.props.masterData.selectedNode\r\n                    },\r\n                    classUrl: \"testgroup\",\r\n                    operation: \"delete\",\r\n                    methodUrl: \"Test\",\r\n                    screenName: \"IDS_TEST\",\r\n                    postParam: {\r\n                        inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                        primaryKeyValue: deleteParam.selectedRecord.ntestgrouptestcode,\r\n                        fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                        masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n                    }\r\n                }\r\n                const masterData = this.props.masterData;\r\n                if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData },\r\n                            openModal: true, screenName: screenName, operation: deleteParam.operation, selectedRecord: {}\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\", {});\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteAction = (item, operation, ncontrolCode, methodUrl, modalName) => {\r\n\r\n        const masterData = this.props.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const selected = item;\r\n            const inputParam = {\r\n                inputData: {\r\n                    [methodUrl.toLowerCase()]: selected,\r\n                    userinfo: this.props.userInfo,\r\n                    testgroupspecification: this.props.masterData.SelectedSpecification\r\n                },\r\n                classUrl: \"testgroup\",\r\n                operation: operation,\r\n                methodUrl: methodUrl,\r\n                screenName: \"IDS_TEST\",\r\n                postParam: {\r\n                    inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                    primaryKeyValue: this.props.masterData.SelectedTest.ntestgrouptestcode,\r\n                    fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.userInfo },\r\n                    masterData: this.props.masterData, searchFieldList: this.searchFieldList\r\n                }\r\n            }\r\n            const masterData = this.props.masterData;\r\n            if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        [modalName]: true, screenName: \"IDS_TEST\", operation: operation, selectedRecord: {}\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onSwitchChange = (item, key, methodUrl, event) => {\r\n        const masterData = this.props.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            //NIBSCRT-2236\r\n            const testgroupspecification = this.props.masterData.SelectedSpecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                let dataItem = item;\r\n                if (methodUrl === \"TestGroupTestFormula\") {\r\n                    dataItem[\"ntransactionstatus\"] = transactionStatus.YES;\r\n                } else if (methodUrl === 'TestGroupPredefParameter') {\r\n                    // if(this.props.masterData.SelectedSpecification.napprovalstatus === transactionStatus.DRAFT || this.props.masterData.SelectedSpecification.napprovalstatus === transactionStatus.CORRECTION)\r\n                    // {\r\n                    dataItem['ndefaultstatus'] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                    // }\r\n                    // else{\r\n                    //     return toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n                    // }\r\n\r\n                }\r\n                else {\r\n                    dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\r\n                }\r\n                const inputParam = {\r\n                    inputData: {\r\n                        [key]: dataItem,\r\n                        userinfo: this.props.userInfo,\r\n                        testgroupspecification: this.props.masterData.SelectedSpecification\r\n                    },\r\n                    classUrl: \"testgroup\",\r\n                    operation: \"default\",\r\n                    methodUrl: methodUrl\r\n                }\r\n                this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\", {});\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    onEsignInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName, caseNo) => {\r\n        let inputData = [];\r\n        let masterData = { ...this.props.masterData }\r\n        let inputParam = []\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                selectedRecord[fieldName] = comboData;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 2:\r\n                selectedRecord[\"parameterTypeCode\"] = comboData.value;\r\n                selectedRecord[fieldName] = comboData;\r\n                const needRoundingDigit = comboData.value === parameterType.NUMERIC ? false : true;\r\n                const needUnit = comboData.value === parameterType.NUMERIC ? false : true;\r\n                selectedRecord[\"nroundingdigits\"] =  0;\r\n                selectedRecord[\"nunitcode\"] = comboData.value === parameterType.NUMERIC ? this.props.parameterData.defaultUnit : undefined;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        selectedRecord,\r\n                        testGroupInputData: {\r\n                            ...this.props.testGroupInputData,\r\n                            needRoundingDigit, needUnit\r\n                        }\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n                break;\r\n\r\n            case 3:\r\n                selectedRecord[\"schecklistversionname\"] = comboData.item.schecklistversionname;\r\n                selectedRecord[fieldName] = comboData;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n            case 4:\r\n                let oldnmaterialtypecode = selectedRecord[\"nmaterialtypecode\"].value ? selectedRecord[\"nmaterialtypecode\"].value : selectedRecord[\"nmaterialtypecode\"];\r\n\r\n                if (oldnmaterialtypecode !== comboData.value) {\r\n                    delete selectedRecord['nmaterialcatcode']\r\n                    delete selectedRecord['nmaterialcode']\r\n                }\r\n                selectedRecord[\"nmaterialtypecode\"] = comboData.value;\r\n\r\n                selectedRecord[fieldName] = comboData;\r\n                inputData = {\r\n                    userinfo: this.props.userInfo,\r\n                    nmaterialtypecode: parseInt(comboData.value),\r\n                }\r\n                inputParam = { materialType: this.props.materialType, \r\n                    operation: this.props.operation, masterData,\r\n                     inputData, selectedRecord, \r\n                     screenName: \"IDS_TESTGROUPTESTMATERIAL\",ncontrolCode:this.props.ncontrolCode }\r\n                this.props.getMaterialCategoryBasedMaterialType(inputParam)\r\n                break;\r\n            case 5:\r\n                if (selectedRecord[\"nmaterialcatcode\"]) {\r\n                    let oldnmaterialcatcode = selectedRecord[\"nmaterialcatcode\"].value ? selectedRecord[\"nmaterialcatcode\"].value : selectedRecord[\"nmaterialcatcode\"];\r\n                    if (oldnmaterialcatcode !== comboData.value) {\r\n\r\n                        delete selectedRecord['nmaterialcode']\r\n                    }\r\n                }\r\n                selectedRecord[\"nmaterialcatcode\"] = comboData.value;\r\n\r\n                selectedRecord[fieldName] = comboData;\r\n                inputData = {\r\n                    userinfo: this.props.userInfo,\r\n                    nmaterialcatcode: parseInt(selectedRecord[\"nmaterialcatcode\"].value),\r\n                    nmaterialtypecode: parseInt(selectedRecord[\"nmaterialtypecode\"].value),\r\n\r\n                }\r\n                inputParam = { masterData, inputData, \r\n                    selectedRecord, operation: this.props.operation, \r\n                    selectedRecord, screenName: \"IDS_TESTGROUPTESTMATERIAL\" ,ncontrolCode:this.props.ncontrolCode }\r\n                this.props.getMaterialBasedMaterialCategory(inputParam)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event, caseNo, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                if (event.target.type === 'checkbox') {\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? optional[0] : optional[1];\r\n                } else if (event.target.type === 'radio') {\r\n                    selectedRecord[event.target.name] = optional;\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 2:\r\n                selectedRecord[event.target.name] = event.target.value;\r\n                const indexKey = Object.keys(optional)[0];\r\n                const value = Object.values(optional)[0];\r\n                const treeData = {\r\n                    ntreeversiontempcode: value.ntreeversiontempcode,\r\n                    npositioncode: value.nlevelno - 1,\r\n                    sleveldescription: event.target.value,\r\n                    ntemptranstestgroupcode: value.ntemptranstestgroupcode,\r\n                    nformcode: 62,\r\n                    schildnode: value.schildnode,\r\n                    nnextchildcode: value.schildnode\r\n                }\r\n                let treetemplatemanipulation = selectedRecord.treetemplatemanipulation || [];\r\n                treetemplatemanipulation[indexKey] = treeData;\r\n                selectedRecord[\"treetemplatemanipulation\"] = treetemplatemanipulation;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 4:\r\n                const inputValue = event.target.value;\r\n                if (/^-?\\d*?\\.?\\d*?$/.test(inputValue) || inputValue === \"\") {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        console.log(\"value:\", value, name);\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (name === \"nroundingdigits\") {\r\n\r\n            // if (/^-?\\d*?$/.test(value.target.value) || value.target.value === \"\") {\r\n            //     console.log(\"val:\", value.target.value);\r\n            //     selectedRecord[name] = value.target.value;\r\n            // }\r\n            // if (/^-?\\d*?$/.test(value) || value === \"\") {\r\n            //    // console.log(\"val:\", value);\r\n            //     selectedRecord[name] = value;\r\n            // }\r\n             //const values = value.target.value.replace(/[^-^0-9]/g, '');\r\n             if (/^[0-9]+$/.test(value.target.value) || value.target.value === \"\") {\r\n                selectedRecord[name] = value.target.value;\r\n     \r\n             }else{\r\n                selectedRecord[name] = \"\";\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[name] = value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.selectedRecord !== previousProps.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.selectedRecord });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default injectIntl(TestGroupTestTab);"]},"metadata":{},"sourceType":"module"}