{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"factory\"];\nimport React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nvar getTitleInListValues = Utils.ListUtils.getTitleInListValues;\nexport default (function (_ref) {\n  var delta = _ref.delta,\n      isFuncArg = _ref.isFuncArg,\n      valueSrc = _ref.valueSrc,\n      immValue = _ref.value,\n      immValueError = _ref.valueError,\n      asyncListValues = _ref.asyncListValues,\n      isSpecialRange = _ref.isSpecialRange,\n      fieldDefinition = _ref.fieldDefinition,\n      widget = _ref.widget,\n      widgetDefinition = _ref.widgetDefinition,\n      widgetValueLabel = _ref.widgetValueLabel,\n      valueLabels = _ref.valueLabels,\n      textSeparators = _ref.textSeparators,\n      setValueHandler = _ref.setValueHandler,\n      config = _ref.config,\n      field = _ref.field,\n      operator = _ref.operator,\n      readonly = _ref.readonly,\n      parentField = _ref.parentField,\n      parentFuncs = _ref.parentFuncs,\n      id = _ref.id,\n      groupId = _ref.groupId;\n\n  var widgetFactory = widgetDefinition.factory,\n      fieldWidgetProps = _objectWithoutProperties(widgetDefinition, _excluded);\n\n  var isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  var defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  var value = isSpecialRange ? [immValue.get(0), immValue.get(1)] : immValue ? immValue.get(delta) : undefined;\n  var valueError = immValueError && (isSpecialRange ? [immValueError.get(0), immValueError.get(1)] : immValueError.get(delta)) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined) value = undefined;\n\n  var _ref2 = fieldDefinition || {},\n      fieldSettings = _ref2.fieldSettings;\n\n  var widgetProps = Object.assign({}, fieldWidgetProps, fieldSettings, {\n    config: config,\n    field: field,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id: id,\n    groupId: groupId\n  });\n\n  if (widget == \"field\") {//\n  }\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? widgetProps.labelYes || \"YES\" : widgetProps.labelNo || \"NO\";\n    } else if (fieldSettings.listValues) {\n      if (Array.isArray(defaultValue)) return defaultValue.map(function (v) {\n        return getTitleInListValues(fieldSettings.listValues, v) || v;\n      }).join(\", \");else return getTitleInListValues(fieldSettings.listValues, defaultValue) || defaultValue;\n    }\n\n    return \"\" + defaultValue;\n  }\n\n  return widgetFactory(widgetProps);\n});","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/@react-awesome-query-builder/ui/esm/components/rule/WidgetFactory.js"],"names":["_objectWithoutProperties","_excluded","React","Utils","getTitleInListValues","ListUtils","_ref","delta","isFuncArg","valueSrc","immValue","value","immValueError","valueError","asyncListValues","isSpecialRange","fieldDefinition","widget","widgetDefinition","widgetValueLabel","valueLabels","textSeparators","setValueHandler","config","field","operator","readonly","parentField","parentFuncs","id","groupId","widgetFactory","factory","fieldWidgetProps","isConst","valueSources","length","defaultValue","get","undefined","_ref2","fieldSettings","widgetProps","Object","assign","label","placeholder","placeholders","setValue","labelYes","labelNo","listValues","Array","isArray","map","v","join"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"factory\"];\nimport React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nvar getTitleInListValues = Utils.ListUtils.getTitleInListValues;\nexport default (function (_ref) {\n  var delta = _ref.delta,\n    isFuncArg = _ref.isFuncArg,\n    valueSrc = _ref.valueSrc,\n    immValue = _ref.value,\n    immValueError = _ref.valueError,\n    asyncListValues = _ref.asyncListValues,\n    isSpecialRange = _ref.isSpecialRange,\n    fieldDefinition = _ref.fieldDefinition,\n    widget = _ref.widget,\n    widgetDefinition = _ref.widgetDefinition,\n    widgetValueLabel = _ref.widgetValueLabel,\n    valueLabels = _ref.valueLabels,\n    textSeparators = _ref.textSeparators,\n    setValueHandler = _ref.setValueHandler,\n    config = _ref.config,\n    field = _ref.field,\n    operator = _ref.operator,\n    readonly = _ref.readonly,\n    parentField = _ref.parentField,\n    parentFuncs = _ref.parentFuncs,\n    id = _ref.id,\n    groupId = _ref.groupId;\n  var widgetFactory = widgetDefinition.factory,\n    fieldWidgetProps = _objectWithoutProperties(widgetDefinition, _excluded);\n  var isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  var defaultValue = fieldDefinition.defaultValue;\n  if (!widgetFactory) {\n    return \"?\";\n  }\n  var value = isSpecialRange ? [immValue.get(0), immValue.get(1)] : immValue ? immValue.get(delta) : undefined;\n  var valueError = immValueError && (isSpecialRange ? [immValueError.get(0), immValueError.get(1)] : immValueError.get(delta)) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined) value = undefined;\n  var _ref2 = fieldDefinition || {},\n    fieldSettings = _ref2.fieldSettings;\n  var widgetProps = Object.assign({}, fieldWidgetProps, fieldSettings, {\n    config: config,\n    field: field,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id: id,\n    groupId: groupId\n  });\n  if (widget == \"field\") {\n    //\n  }\n  if (isConst && defaultValue) {\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? widgetProps.labelYes || \"YES\" : widgetProps.labelNo || \"NO\";\n    } else if (fieldSettings.listValues) {\n      if (Array.isArray(defaultValue)) return defaultValue.map(function (v) {\n        return getTitleInListValues(fieldSettings.listValues, v) || v;\n      }).join(\", \");else return getTitleInListValues(fieldSettings.listValues, defaultValue) || defaultValue;\n    }\n    return \"\" + defaultValue;\n  }\n  return widgetFactory(widgetProps);\n});"]},"metadata":{},"sourceType":"module"}