{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{callService,updateStore,crudMaster,formSortingService1,formModuleGetSorting,moduleSortingOrder1,saveExecutionOrder}from'../../actions';import{getControlMap,constructOptionList}from'../../components/CommonScript';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import SortableItemUI from'./FormModuleSortingConfig';import{sortData}from'../../components/CommonScript';import{Sortable}from\"@progress/kendo-react-sortable\";import{DEFAULT_RETURN}from\"../../actions/LoginTypes\";import{LocalizationProvider}from'@progress/kendo-react-intl';import ListBoxDraggable from'../../components/ListBoxDraggable';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Sorting=/*#__PURE__*/function(_React$Component){_inherits(Sorting,_React$Component);var _super=_createSuper(Sorting);function Sorting(props){var _this;_classCallCheck(this,Sorting);_this=_super.call(this,props);_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;if(_this.state.bool===1){if(fieldName===\"nmenucode\"){_this.props.formSortingService1({inputData:{nmenucode:selectedRecord.nmenucode.value,userinfo:_this.props.Login.userInfo,primarykey:selectedRecord.nmenucode.value,boolValue:1},masterData:_this.props.Login.masterData,url:\"sorting/getFilter\"});}}else if(_this.state.bool===2){if(fieldName===\"nmenucode\"){_this.props.formSortingService1({inputData:{nmenucode:selectedRecord.nmenucode.value,userinfo:_this.props.Login.userInfo,primarykey:selectedRecord.nmenucode.value,boolValue:2},masterData:_this.props.Login.masterData,url:\"sorting/getFilter\"});}}if(fieldName===\"nmodulecode\"){_this.props.formSortingService1({inputData:{nmenucode:selectedRecord.nmodulecode.item.nmenucode,nmodulecode:selectedRecord.nmodulecode.value,userinfo:_this.props.Login.userInfo,primarykey:selectedRecord.nmodulecode.item.nmenucode,primarykey1:selectedRecord.nmodulecode.value,boolValue:1},masterData:_this.props.Login.masterData,url:\"sorting/getFilter1\"});}else{_this.setState({selectedRecord:selectedRecord});}};_this.booleanValue=function(fieldName){if(fieldName==\"formSorting\"){_this.setState({bool:1,btnControl1:\"primary active\",btnControl:\"primary disabled\"});var updateInfo={typeName:DEFAULT_RETURN,data:{boolValue:1,displayName:_this.props.intl.formatMessage({id:\"IDS_SCREENORGANISINGFORM\"})}};_this.props.updateStore(updateInfo);_this.props.Login.masterData[\"nFlag\"]=0;_this.props.formModuleGetSorting({inputData:{boolValue:1,userinfo:_this.props.Login.userInfo},masterData:_this.props.Login.masterData,url:\"sorting/getSorting\"});}else if(fieldName==\"moduleSorting\"){_this.setState({bool:2,btnControl:\"primary active\",btnControl1:\"primary disabled\"});var _updateInfo={typeName:DEFAULT_RETURN,data:{boolValue:2,displayName:_this.props.intl.formatMessage({id:\"IDS_SCREENORGANISINGMODULE\"})}};_this.props.updateStore(_updateInfo);_this.props.Login.masterData[\"nFlag\"]=0;_this.props.formModuleGetSorting({inputData:{boolValue:2,userinfo:_this.props.Login.userInfo},masterData:_this.props.Login.masterData,url:\"sorting/getSorting\"});}};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.state={masterStatus:\"\",error:\"\",selectedRecord:{},isOpen:false,userRoleControlRights:[],controlMap:new Map(),data:[],bool:1,btnControl:\"primary disabled\",btnControl1:\"primary active\"};return _this;}_createClass(Sorting,[{key:\"render\",value:function render(){var _this2=this;// if (this.props.Login.inputParam !== undefined) {\n//     this.extractedColumnList = []\n// }\nvar masterdata=_objectSpread({},this.props.Login.masterData);// delete(masterdata.MenuList);\n// delete(masterdata.SelectedMenuSorting);\n// delete(masterdata.SelectedModuleSorting);\n// delete(masterdata.moduleList);\n// delete(masterdata.nFlag); \n// delete(masterdata.formsList); \n// let palettes=masterdata && Object.keys(masterdata);\n// const masterdata1 = [];\n// const palettes2 = [];\n// if(this.state.bool == 1){\n//     this.props.Login.masterData.nFlag === 1 || this.props.Login.nFlag ===1 ?\n// masterdata1.push(...this.props.Login.masterData.SelectedModuleSorting && this.props.Login.masterData.SelectedModuleSorting) :\n// palettes.map(item => this.props.Login.masterData.SelectedModuleSorting && this.props.Login.masterData.SelectedModuleSorting.map(\n//     item1 =>item === item1.smodulename ? masterdata1.push(item1) : \"\"))\n// let m1 = Object.keys(masterdata1);\n// let m2 = \n// m1.map((item)=>({\n//     smodulename : masterdata1[item].smodulename,\n//     nsorter : masterdata1[item].nsorter,\n//     nmodulecode : masterdata1[item].nmodulecode,\n//     sdisplayname : masterdata1[item].sdisplayname\n// })) \n// const palettes1 = Object.values(m2.map((item)=>item));\n// palettes1 && palettes1.map((item, index)=>{\n//     let formList =masterdata[item.smodulename]\n//     sortData(masterdata[item.smodulename],'ascending','nsorter')\n//     palettes2.push({\n//       data: formList,\n//       name: item.sdisplayname,\n//       id: index,\n//       nmoduleSorter: item.nsorter,\n//       nmodulecode : item.nmodulecode\n//     })  \n//   })\n// }\n// else if(this.state.bool == 2){\n//     this.props.Login.masterData.nFlag === 1 || this.props.Login.nFlag ===1 ?\n//     masterdata1.push(...this.props.Login.masterData.SelectedMenuSorting) :\n//     palettes.map(item => this.props.Login.masterData.SelectedMenuSorting.map(\n//         item1 =>item === item1.smenuname ? masterdata1.push(item1) : \"\"))\n//     let m1 = Object.keys(masterdata1);\n//     let m2 = \n//     m1.map((item)=>({\n//         smenuname : masterdata1[item].smenuname,\n//         nsorter : masterdata1[item].nsorter,\n//         nmenucode : masterdata1[item].nmenucode,\n//         sdisplayname : masterdata1[item].sdisplayname\n//     })) \n//     const palettes1 = Object.values(m2.map((item)=>item));\n//         palettes1 && palettes1.map((item, index)=>{\n//         let formList =masterdata[item.smenuname]\n//         sortData(masterdata[item.smenuname],'ascending','nsorter')\n//         palettes2.push({\n//           data: formList,\n//           name: item.sdisplayname,\n//           id: index,\n//           nmenuSorter: item.nsorter,\n//           nmenucode : item.nmenucode\n//         })  \n//       })\n// }\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-5\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-\"+this.state.btnControl+\" btn-padd-custom\",style:{float:\"right\",marginRight:\"35px\"},onClick:function onClick(){return _this2.booleanValue('moduleSorting');}},this.props.intl.formatMessage({id:\"IDS_MODULE\"})),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-\"+this.state.btnControl1+\" btn-padd-custom\",style:{float:\"right\",marginRight:\"35px\"},onClick:function onClick(){return _this2.booleanValue('formSorting');}},this.props.intl.formatMessage({id:\"IDS_FORM\"})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nmenucode\",formLabel:this.props.intl.formatMessage({id:\"IDS_MENU\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:sortData(this.state.lstMenuSorting,'ascending','value')||[],value:this.props.Login.masterData&&this.props.Login.masterData.SelectedMenuSorting&&{value:this.props.Login.masterData.SelectedMenuSorting?this.props.Login.masterData.SelectedMenuSorting['nmenucode']:\"\",label:this.props.Login.masterData.SelectedMenuSorting?this.props.Login.masterData.SelectedMenuSorting['sdisplayname']:\"\"},isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'nmenucode');},maxMenuHeight:150})),this.state.bool===1?/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nmodulecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_MODULE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:sortData(this.state.lstModuleSorting,'ascending','value')||[],value:this.props.Login.masterData&&this.props.Login.masterData.SelectedModuleSorting&&{value:this.props.Login.masterData.SelectedModuleSorting?this.props.Login.masterData.SelectedModuleSorting['nmodulecode']:\"\",label:this.props.Login.masterData.SelectedModuleSorting?this.props.Login.masterData.SelectedModuleSorting['sdisplayname']:\"\"},isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'nmodulecode');},maxMenuHeight:150})):\"\"),/*#__PURE__*/React.createElement(Col,{md:10},this.props.Login.masterData.SelectedMenuSorting||this.props.Login.masterData.SelectedModuleSorting?/*#__PURE__*/React.createElement(LocalizationProvider,{language:this.props.Login.language},/*#__PURE__*/React.createElement(ListBoxDraggable,{masterList:this.state.bool===1?sortData(masterdata['QualisForms'],'ascending','nsorter')||[]:sortData(masterdata['QualisModules'],'ascending','nsorter'),mainField:\"sdisplayname\",hideSearch:true,primaryKeyField:\"nsorter\",sortableField:'nsorter',userInfo:this.props.Login.userInfo,masterData:masterdata,saveExecutionOrder:this.state.bool===1?function(props){_this2.props.formSortingService1({inputData:{userinfo:_this2.props.Login.userInfo,primarykey:_this2.props.Login.masterData.SelectedModuleSorting&&_this2.props.Login.masterData.SelectedModuleSorting['nmenucode'],nmodulecode:_this2.props.Login.masterData.SelectedModuleSorting&&_this2.props.Login.masterData.SelectedModuleSorting['nmodulecode'],changedValues:props},masterData:_this2.props.masterData,url:\"sorting/updateForms\"});}:function(props){_this2.props.moduleSortingOrder1({inputData:{userinfo:_this2.props.Login.userInfo,primarykey:_this2.props.Login.masterData.SelectedMenuSorting&&_this2.props.Login.masterData.SelectedMenuSorting['nmenucode'],changedValues:props},masterData:_this2.props.masterData,url:\"sorting/updateModules\"});}})):\"\")));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);var menuMap=constructOptionList(this.props.Login.masterData.MenuList||[],\"nmenucode\",\"sdisplayname\",undefined,undefined,true);var MenuList=menuMap.get(\"OptionList\");var moduleMap=constructOptionList(this.props.Login.masterData.moduleList||[],\"nmodulecode\",\"sdisplayname\",undefined,undefined,true);var moduleList=moduleMap.get(\"OptionList\");this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,lstMenuSorting:MenuList,lstModuleSorting:moduleList});}else{var _moduleMap=constructOptionList(this.props.Login.masterData.moduleList||[],\"nmodulecode\",\"sdisplayname\",undefined,undefined,true);var _moduleList=_moduleMap.get(\"OptionList\");this.setState({isOpen:false,selectedRecord:this.props.Login.selectedRecord,lstModuleSorting:_moduleList});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}}]);return Sorting;}(React.Component);export default connect(mapStateToProps,{callService:callService,updateStore:updateStore,crudMaster:crudMaster,saveExecutionOrder:saveExecutionOrder,formSortingService1:formSortingService1,formModuleGetSorting:formModuleGetSorting,moduleSortingOrder1:moduleSortingOrder1})(injectIntl(Sorting));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/credentialmanagement/Sorting.jsx"],"names":["React","connect","injectIntl","Row","Col","callService","updateStore","crudMaster","formSortingService1","formModuleGetSorting","moduleSortingOrder1","saveExecutionOrder","getControlMap","constructOptionList","FormSelectSearch","SortableItemUI","sortData","Sortable","DEFAULT_RETURN","LocalizationProvider","ListBoxDraggable","mapStateToProps","state","Login","Sorting","props","onComboChange","comboData","fieldName","selectedRecord","bool","inputData","nmenucode","value","userinfo","userInfo","primarykey","boolValue","masterData","url","nmodulecode","item","primarykey1","setState","booleanValue","btnControl1","btnControl","updateInfo","typeName","data","displayName","intl","formatMessage","id","formRef","createRef","extractedColumnList","masterStatus","error","isOpen","userRoleControlRights","controlMap","Map","masterdata","float","marginRight","lstMenuSorting","SelectedMenuSorting","label","event","lstModuleSorting","SelectedModuleSorting","language","changedValues","previousProps","nformcode","Object","values","map","push","ncontrolcode","menuMap","MenuList","undefined","get","moduleMap","moduleList","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { callService, updateStore, crudMaster, formSortingService1, formModuleGetSorting, moduleSortingOrder1,saveExecutionOrder } from '../../actions';\r\nimport { getControlMap, constructOptionList } from '../../components/CommonScript';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport SortableItemUI from './FormModuleSortingConfig';\r\nimport { sortData } from '../../components/CommonScript';\r\nimport { Sortable } from \"@progress/kendo-react-sortable\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport {  LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport ListBoxDraggable from '../../components/ListBoxDraggable';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Sorting extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n\r\n        this.state = {\r\n            masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            isOpen: false,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            data : [],\r\n            bool : 1,\r\n            btnControl : \"primary disabled\",\r\n            btnControl1 : \"primary active\"\r\n        };\r\n    };\r\n\r\n    render() {\r\n\r\n        // if (this.props.Login.inputParam !== undefined) {\r\n\r\n        //     this.extractedColumnList = []\r\n        // }\r\n\r\n         let masterdata = {...this.props.Login.masterData};\r\n        // delete(masterdata.MenuList);\r\n        // delete(masterdata.SelectedMenuSorting);\r\n        // delete(masterdata.SelectedModuleSorting);\r\n        // delete(masterdata.moduleList);\r\n        // delete(masterdata.nFlag); \r\n        // delete(masterdata.formsList); \r\n\r\n        // let palettes=masterdata && Object.keys(masterdata);\r\n        // const masterdata1 = [];\r\n        // const palettes2 = [];\r\n\r\n        // if(this.state.bool == 1){\r\n        //     this.props.Login.masterData.nFlag === 1 || this.props.Login.nFlag ===1 ?\r\n        // masterdata1.push(...this.props.Login.masterData.SelectedModuleSorting && this.props.Login.masterData.SelectedModuleSorting) :\r\n        // palettes.map(item => this.props.Login.masterData.SelectedModuleSorting && this.props.Login.masterData.SelectedModuleSorting.map(\r\n        //     item1 =>item === item1.smodulename ? masterdata1.push(item1) : \"\"))\r\n\r\n        // let m1 = Object.keys(masterdata1);\r\n\r\n        // let m2 = \r\n        // m1.map((item)=>({\r\n        //     smodulename : masterdata1[item].smodulename,\r\n        //     nsorter : masterdata1[item].nsorter,\r\n        //     nmodulecode : masterdata1[item].nmodulecode,\r\n        //     sdisplayname : masterdata1[item].sdisplayname\r\n        // })) \r\n\r\n        // const palettes1 = Object.values(m2.map((item)=>item));\r\n\r\n        // palettes1 && palettes1.map((item, index)=>{\r\n        //     let formList =masterdata[item.smodulename]\r\n        //     sortData(masterdata[item.smodulename],'ascending','nsorter')\r\n        //     palettes2.push({\r\n        //       data: formList,\r\n        //       name: item.sdisplayname,\r\n        //       id: index,\r\n        //       nmoduleSorter: item.nsorter,\r\n        //       nmodulecode : item.nmodulecode\r\n        //     })  \r\n        //   })\r\n        // }\r\n        // else if(this.state.bool == 2){\r\n        //     this.props.Login.masterData.nFlag === 1 || this.props.Login.nFlag ===1 ?\r\n        //     masterdata1.push(...this.props.Login.masterData.SelectedMenuSorting) :\r\n        //     palettes.map(item => this.props.Login.masterData.SelectedMenuSorting.map(\r\n        //         item1 =>item === item1.smenuname ? masterdata1.push(item1) : \"\"))\r\n    \r\n        //     let m1 = Object.keys(masterdata1);\r\n    \r\n        //     let m2 = \r\n        //     m1.map((item)=>({\r\n        //         smenuname : masterdata1[item].smenuname,\r\n        //         nsorter : masterdata1[item].nsorter,\r\n        //         nmenucode : masterdata1[item].nmenucode,\r\n        //         sdisplayname : masterdata1[item].sdisplayname\r\n        //     })) \r\n    \r\n        //     const palettes1 = Object.values(m2.map((item)=>item));\r\n    \r\n        //         palettes1 && palettes1.map((item, index)=>{\r\n        //         let formList =masterdata[item.smenuname]\r\n        //         sortData(masterdata[item.smenuname],'ascending','nsorter')\r\n        //         palettes2.push({\r\n        //           data: formList,\r\n        //           name: item.sdisplayname,\r\n        //           id: index,\r\n        //           nmenuSorter: item.nsorter,\r\n        //           nmenucode : item.nmenucode\r\n        //         })  \r\n        //       })\r\n        // }\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-5\">\r\n                    <button className={\"btn btn-\"+(this.state.btnControl)+\" btn-padd-custom\"} style={{ float: \"right\", marginRight : \"35px\" }}\r\n                    onClick={() => this.booleanValue('moduleSorting') }>{this.props.intl.formatMessage({ id: \"IDS_MODULE\" })}</button>\r\n                    <button className={\"btn btn-\"+(this.state.btnControl1)+\" btn-padd-custom\"} style={{ float: \"right\", marginRight : \"35px\" }}\r\n                    onClick={() => this.booleanValue('formSorting')}>{this.props.intl.formatMessage({ id: \"IDS_FORM\" })}</button>\r\n                    <Row>\r\n                    <Col md={3}>\r\n                        <FormSelectSearch\r\n                            name={\"nmenucode\"}\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_MENU\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={sortData(this.state.lstMenuSorting,'ascending','value') || []}\r\n                            value={this.props.Login.masterData && this.props.Login.masterData.SelectedMenuSorting\r\n                            && {\r\n                            value: this.props.Login.masterData.SelectedMenuSorting? this.props.Login.masterData.SelectedMenuSorting['nmenucode'] :\"\",\r\n                            label: this.props.Login.masterData.SelectedMenuSorting? this.props.Login.masterData.SelectedMenuSorting['sdisplayname'] : \"\"\r\n                            }}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isClearable={false}\r\n                            isSearchable={true}\r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            className=\"mb-2\"\r\n                            onChange={(event) => this.onComboChange(event, 'nmenucode')}\r\n                            maxMenuHeight={150}\r\n                        /></Col>\r\n                        {this.state.bool === 1 ?\r\n                        <Col md={3}>\r\n                        <FormSelectSearch\r\n                            name={\"nmodulecode\"}\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_MODULE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={ sortData(this.state.lstModuleSorting,'ascending','value') || []}\r\n                            value={this.props.Login.masterData && this.props.Login.masterData.SelectedModuleSorting\r\n                            && {\r\n                            value: this.props.Login.masterData.SelectedModuleSorting? this.props.Login.masterData.SelectedModuleSorting['nmodulecode'] : \"\",\r\n                            label: this.props.Login.masterData.SelectedModuleSorting? this.props.Login.masterData.SelectedModuleSorting['sdisplayname'] : \"\",\r\n                            }}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isClearable={false}\r\n                            isSearchable={true}\r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            className=\"mb-2\"\r\n                            onChange={(event) => this.onComboChange(event, 'nmodulecode')}\r\n                            maxMenuHeight={150}\r\n                        /></Col>: \"\"}\r\n                        </Row>\r\n                        <Col md={10}>\r\n                    {this.props.Login.masterData.SelectedMenuSorting || this.props.Login.masterData.SelectedModuleSorting ? \r\n                    <LocalizationProvider language={this.props.Login.language}>\r\n                    {/* <Sortable\r\n                    idField={\"id\"}\r\n                    data={palettes2 || []}\r\n                    itemUI={SortableItemUI}\r\n                    onDragOver={this.onDragOver}\r\n                    onNavigate={this.onNavigate}\r\n                    masterdata={masterdata}\r\n                  /> */}\r\n                           <ListBoxDraggable\r\n                        masterList={this.state.bool === 1?sortData(masterdata['QualisForms'],'ascending','nsorter')|| []: sortData(masterdata['QualisModules'],'ascending','nsorter')} \r\n                        mainField={ \"sdisplayname\"} \r\n                        hideSearch={true}\r\n                        primaryKeyField=\"nsorter\"\r\n                        sortableField={'nsorter'} \r\n                        userInfo={this.props.Login.userInfo} \r\n                        masterData={masterdata}\r\n                        saveExecutionOrder=    { this.state.bool === 1?(props)=>{this.props.formSortingService1({\r\n                            inputData: {\r\n                               userinfo: this.props.Login.userInfo,\r\n                               primarykey:  this.props.Login.masterData.SelectedModuleSorting&&this.props.Login.masterData.SelectedModuleSorting['nmenucode'],\r\n                               nmodulecode:  this.props.Login.masterData.SelectedModuleSorting&&this.props.Login.masterData.SelectedModuleSorting['nmodulecode'],\r\n                               changedValues : props\r\n                           },\r\n                           masterData: this.props.masterData,\r\n                           url: \"sorting/updateForms\"\r\n                       })} :(props)=>{   this.props.moduleSortingOrder1({\r\n                        inputData: {\r\n                           userinfo: this.props.Login.userInfo,\r\n                           primarykey: this.props.Login.masterData.SelectedMenuSorting&&this.props.Login.masterData.SelectedMenuSorting['nmenucode'],\r\n                          changedValues : props\r\n                       },\r\n                       masterData: this.props.masterData,\r\n                       url: \"sorting/updateModules\"\r\n                    }) }} \r\n                        >\r\n                        </ListBoxDraggable>\r\n                  </LocalizationProvider>\r\n                   : \"\"}\r\n                    </Col>                                                                 \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                const menuMap = constructOptionList(this.props.Login.masterData.MenuList || [], \"nmenucode\",\r\n                    \"sdisplayname\", undefined, undefined, true);\r\n                const MenuList = menuMap.get(\"OptionList\");\r\n                const moduleMap = constructOptionList(this.props.Login.masterData.moduleList || [], \"nmodulecode\",\r\n                    \"sdisplayname\", undefined, undefined, true);\r\n                const moduleList = moduleMap.get(\"OptionList\");\r\n\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, lstMenuSorting: MenuList, lstModuleSorting: moduleList,\r\n                });\r\n            }\r\n            else {\r\n                const moduleMap = constructOptionList(this.props.Login.masterData.moduleList || [], \"nmodulecode\",\r\n                    \"sdisplayname\", undefined, undefined, true);\r\n                const moduleList = moduleMap.get(\"OptionList\");\r\n\r\n                this.setState({\r\n                    isOpen: false,\r\n                    selectedRecord: this.props.Login.selectedRecord,lstModuleSorting: moduleList\r\n                });\r\n            }\r\n        } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n\r\n        if(this.state.bool === 1){\r\n        if (fieldName === \"nmenucode\") {\r\n            this.props.formSortingService1({\r\n                inputData: {\r\n                    nmenucode: selectedRecord.nmenucode.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    primarykey: selectedRecord.nmenucode.value,\r\n                    boolValue: 1\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                url:\"sorting/getFilter\"\r\n            });\r\n        }\r\n    }\r\n    else if(this.state.bool === 2){\r\n        if (fieldName === \"nmenucode\") {\r\n            this.props.formSortingService1({\r\n                inputData: {\r\n                    nmenucode: selectedRecord.nmenucode.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    primarykey: selectedRecord.nmenucode.value,\r\n                    boolValue: 2\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                url:\"sorting/getFilter\"\r\n            });\r\n        }      \r\n    }\r\n        if(fieldName === \"nmodulecode\"){\r\n            this.props.formSortingService1({\r\n                inputData: {\r\n                    nmenucode: selectedRecord.nmodulecode.item.nmenucode,\r\n                    nmodulecode: selectedRecord.nmodulecode.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    primarykey: selectedRecord.nmodulecode.item.nmenucode,\r\n                    primarykey1: selectedRecord.nmodulecode.value,\r\n                    boolValue: 1\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                url:\"sorting/getFilter1\"\r\n            });\r\n        }\r\n        else{\r\n            this.setState({ selectedRecord });\r\n        } \r\n    }\r\n          \r\n    // onNavigate = (event) => {\r\n    //     this.setState({\r\n    //       palettes: event.newState,\r\n    //     });\r\n    //   };\r\n\r\n      booleanValue = (fieldName) => {\r\n          if(fieldName == \"formSorting\"){\r\n              this.setState({\r\n                  bool:1,\r\n                  btnControl1:\"primary active\",\r\n                  btnControl:\"primary disabled\"\r\n              })\r\n\r\n              const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    boolValue: 1,\r\n                    displayName: this.props.intl.formatMessage({ id: \"IDS_SCREENORGANISINGFORM\" }),\r\n                    }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n            this.props.Login.masterData[\"nFlag\"] = 0;\r\n\r\n              this.props.formModuleGetSorting({\r\n                inputData: {\r\n                    boolValue:1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                url:\"sorting/getSorting\"\r\n            });\r\n          }\r\n          else if(fieldName == \"moduleSorting\"){\r\n              this.setState({\r\n                  bool:2,\r\n                  btnControl:\"primary active\",\r\n                  btnControl1:\"primary disabled\"\r\n              })\r\n\r\n              const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    boolValue: 2,\r\n                    displayName: this.props.intl.formatMessage({ id: \"IDS_SCREENORGANISINGMODULE\" }),\r\n                    }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n            this.props.Login.masterData[\"nFlag\"] = 0;\r\n\r\n              this.props.formModuleGetSorting({\r\n                inputData: {\r\n                    boolValue:2,\r\n                    userinfo: this.props.Login.userInfo,\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                url:\"sorting/getSorting\"\r\n            });\r\n          }\r\n      }\r\n}\r\n\r\nexport default connect(mapStateToProps, { callService, updateStore, crudMaster,saveExecutionOrder, formSortingService1, formModuleGetSorting, moduleSortingOrder1 })(injectIntl(Sorting));\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}