{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\joballocation\\\\NewJobAlloct.jsx\";\nimport React from \"react\";\nimport { Scheduler, TimelineView, DayView, WeekView, MonthView, SchedulerEditItem, AgendaView, SchedulerProportionalViewItem, SchedulerHeader } from '@progress/kendo-react-scheduler';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col, Row } from \"react-bootstrap\";\nimport { injectIntl } from \"react-intl\"; //import { FormWithCustomEditor } from './custom-form';\n// import { EditItemWithDynamicTitle } from './custom-item';\n//import {CustomEditItem} from './editors'\n\nimport { guid } from '@progress/kendo-react-common';\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport './Calender.css';\nimport CustomEditItem, { CustomEditSlot, CustomEditSlotForMonth, CustomTask, CustomViewSlot, CustomViewSlotForMonth, headerComponent } from \"./EditItem\";\nimport { FormWithCustomEditor } from \"./custom-form\";\nimport { toast } from \"react-toastify\";\n\nclass NewJobAlloct extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDataChange = ({\n      created,\n      updated,\n      deleted\n    }) => {\n      console.log('data change');\n      let data = this.state.data;\n      const aa = created.concat(created.map(item => Object.assign({}, item, {\n        id: guid()\n      })));\n\n      if (aa.length > 1) {\n        if (data.filter(x => x.insertRecord).length === 0) {\n          data = data.filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\n          .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\n          .concat(this.props.selectedTest.map(y => Object.assign({}, y, { ...created.map(item => Object.assign({}, item, {\n              id: guid(),\n              insertRecord: true,\n              title: `ArNo:${y.sarno && y.sarno} - Test Name:${y.stestsynonym && y.stestsynonym} - Status:${y.stransdisplaystatus && y.stransdisplaystatus}`\n            }))[0]\n          })));\n          this.setState({\n            data\n          });\n        } else {\n          toast.info(\"Already assigned.delete old One\");\n        }\n      }\n\n      if (updated.length > 0) {\n        this.setState(old => ({\n          data: old.data // Filter the deleted items\n          .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\n          .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\n          .concat(created.map(item => Object.assign({}, item, {\n            id: guid()\n          })))\n        }));\n      }\n\n      if (deleted.length > 0) {\n        this.setState(old => ({\n          data: old.data // Filter the deleted items\n          .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\n          .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\n          .concat(created.map(item => Object.assign({}, item, {\n            id: guid(),\n            title: `${this.props.selectedTest[0].sarno && this.props.selectedTest[0].sarno} - ${this.props.selectedTest[0].stestsynonym && this.props.selectedTest[0].stestsynonym} - ${this.props.selectedTest[0].stransdisplaystatus && this.props.selectedTest[0].stransdisplaystatus}`\n          })))\n        }));\n      }\n\n      this.props.parentScheduleState(data);\n    };\n\n    this.state = {\n      data: [],\n      resource: [{\n        name: 'instrumentCategory',\n        data: [],\n        field: 'InstrumentCategory',\n        valueField: 'value',\n        textField: 'text',\n        colorField: 'color'\n      }, {\n        name: 'instrument',\n        data: [],\n        field: 'Instrument',\n        valueField: 'value',\n        textField: 'text',\n        colorField: 'color'\n      }] // instrument:[]\n\n    };\n  }\n\n  render() {\n    var displayDate = new Date(Date.UTC(currentYear, new Date().getMonth(), new Date().getDate()));\n    console.log(\"job Allocation\", this.state.data);\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TECHNIQUE\"\n      }),\n      isSearchable: true,\n      name: \"ntechniquecode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      isClearable: true,\n      options: this.props.Technique,\n      value: this.props.selectedRecord[\"ntechniquecode\"] || \"\",\n      defaultValue: this.props.selectedRecord[\"ntechniquecode\"],\n      onChange: event => this.props.onComboChange(event, \"ntechniquecode\"),\n      closeMenuOnSelect: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_USERS\"\n      }),\n      isSearchable: true,\n      name: \"nusercode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      isClearable: false,\n      options: this.props.Users,\n      value: this.props.selectedRecord[\"nusercode\"] || \"\",\n      defaultValue: this.props.selectedRecord[\"nusercode\"],\n      onChange: event => this.props.onComboChange(event, \"nusercode\"),\n      closeMenuOnSelect: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Scheduler, {\n      data: this.state.data,\n      onDataChange: this.handleDataChange,\n      editable: {\n        add: true,\n        remove: true,\n        drag: true,\n        resize: true,\n        select: true,\n        edit: true\n      },\n      height: 500,\n      editItem: CustomEditItem,\n      form: FormWithCustomEditor,\n      defaultDate: displayDate // viewSlot={CustomViewSlotForMonth}\n      ,\n      editSlot: CustomEditSlotForMonth // header={(props) =>\n      //      <SchedulerHeader {...props}  children={headerComponent}   /> \n      //   }\n      // viewSlot={CustomViewSlot}\n      //  editSlot={CustomEditSlot}\n      // editItem={CustomEditItem}\n      //  allDayLabel={false}\n      // isAllDay={false}\n      // isRecurring={false}\n      //   onFormItemChange={this.onchnge}\n      //  dataItem={[\"one\",\"two\"]}\n      //  onFormSubmitAction={this.onchnge}\n      //  editItem={this.CustomEditItem}\n      //group={{ resources: ['users'] }}\n      //</Col> resources={this.state.resource}\n      // resources={[{...this.state.resource[0]},{...this.state.resource[1],data:this.props.Instrument?this.props.Instrument.map((x, i) => {\n      //     return {\n      //         text: x.label,\n      //         value: x.value,\n      //         color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n      //     }\n      // }):[]}]}\n      // modelFields={{\n      //     id: \"id\",\n      //     title: \"title\",\n      //     description: \"description\",\n      //     start: \"start\",\n      //     end: \"end\",\n      //     // recurrenceRule: \"RecurrenceRule\",\n      //     //  recurrenceId: \"RecurrenceID\",\n      //     //  recurrenceExceptions: \"RecurrenceException\",\n      // }}\n      // editItem={EditItemWithDynamicTitle}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AgendaView, {\n      slotDivisions: 1,\n      task: CustomTask,\n      editable: {\n        add: false,\n        remove: false,\n        drag: false,\n        resize: false,\n        select: false,\n        edit: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(MonthView //viewItem={SchedulerProportionalViewItem} //slotDivisions={1}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(WeekView, {\n      viewItem: SchedulerProportionalViewItem,\n      slotDivisions: 1 // viewSlot={CustomViewSlot}\n      //editSlot={CustomEditSlot}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(DayView, {\n      viewItem: SchedulerProportionalViewItem,\n      slotDivisions: 1,\n      allDaySlot: false //viewSlot={CustomViewSlot}\n      // editSlot={CustomEditSlot} \n      ,\n      numberOfDays: 3,\n      style: {\n        zorder: 25000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TimelineView //slotDivisions={1}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps) {\n    let data = []; //let resource = this.state.resource\n\n    if (this.props.userData !== undefined) {\n      if (!(this.props.userData.length <= this.state.data.length)) {\n        for (let i = 0; i < this.props.userData.length; i++) {\n          data.push({ ...this.props.userData[i].jsondata,\n            ...this.props.userData[i]\n          });\n        }\n\n        data = data.map((dataItem, i) => ({\n          start: parseAdjust(dataItem.UserStartDate + \".000z\"),\n          end: parseAdjust(dataItem.UserEndDate + \".000z\"),\n          title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\n          id: dataItem.id ? dataItem.id : i,\n          startTimezone: dataItem.startTimezone,\n          endTimezone: dataItem.endTimezone,\n          description: dataItem.Comments ? dataItem.Comments : \"\",\n          Instrument: dataItem.Instrument.value,\n          InstrumentCategory: dataItem.InstrumentCategory.value,\n          sarno: dataItem.sarno,\n          ssamplearno: dataItem.ssamplearno,\n          stestsynonym: dataItem.stestsynonym,\n          ntransactionstatus: dataItem.ntransactionstatus,\n          stransdisplaystatus: dataItem.stransdisplaystatus\n        })); // if (this.props.InstrumentCategory && this.props.InstrumentCategory.length > 0) {\n        //     const userList = this.props.InstrumentCategory.map((x, i) => {\n        //         return {\n        //             text: x.label,\n        //             value: x.value,\n        //             color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n        //         }\n        //     })\n        //     resource[0].data = userList\n        // }\n\n        this.setState({\n          data: data\n        });\n      } // if (this.props.Instrument !== this.state.instrument) {\n      //     const userList = this.props.Instrument.map((x, i) => {\n      //         return {\n      //             text: x.sinstrumentid,\n      //             value: x.ninstrumentcode,\n      //             color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n      //         }\n      //     })\n      //     resource[0].data = userList\n      // }\n      // this.setState({ data: data, resource});\n\n    }\n  }\n\n}\n\nexport default injectIntl(NewJobAlloct);\nexport const currentYear = new Date().getFullYear();\nexport const parseAdjust = eventDate => {\n  const date = new Date(eventDate);\n  date.setFullYear(currentYear);\n  return date;\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/joballocation/NewJobAlloct.jsx"],"names":["React","Scheduler","TimelineView","DayView","WeekView","MonthView","SchedulerEditItem","AgendaView","SchedulerProportionalViewItem","SchedulerHeader","FormSelectSearch","Col","Row","injectIntl","guid","DEFAULT_RETURN","CustomEditItem","CustomEditSlot","CustomEditSlotForMonth","CustomTask","CustomViewSlot","CustomViewSlotForMonth","headerComponent","FormWithCustomEditor","toast","NewJobAlloct","Component","constructor","props","handleDataChange","created","updated","deleted","console","log","data","state","aa","concat","map","item","Object","assign","id","length","filter","x","insertRecord","find","current","undefined","selectedTest","y","title","sarno","stestsynonym","stransdisplaystatus","setState","info","old","parentScheduleState","resource","name","field","valueField","textField","colorField","render","displayDate","Date","UTC","currentYear","getMonth","getDate","intl","formatMessage","Technique","selectedRecord","event","onComboChange","Users","add","remove","drag","resize","select","edit","zorder","componentDidUpdate","previousProps","userData","i","push","jsondata","dataItem","start","parseAdjust","UserStartDate","end","UserEndDate","startTimezone","endTimezone","description","Comments","Instrument","value","InstrumentCategory","ssamplearno","ntransactionstatus","getFullYear","eventDate","date","setFullYear"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Scheduler, TimelineView, DayView, WeekView, MonthView, SchedulerEditItem, AgendaView, SchedulerProportionalViewItem, SchedulerHeader } from '@progress/kendo-react-scheduler';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\n//import { FormWithCustomEditor } from './custom-form';\r\n// import { EditItemWithDynamicTitle } from './custom-item';\r\n//import {CustomEditItem} from './editors'\r\nimport { guid } from '@progress/kendo-react-common';\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport './Calender.css'\r\nimport CustomEditItem, { CustomEditSlot, CustomEditSlotForMonth, CustomTask, CustomViewSlot, CustomViewSlotForMonth, headerComponent } from \"./EditItem\";\r\nimport { FormWithCustomEditor } from \"./custom-form\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass NewJobAlloct extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            resource: [{\r\n                name: 'instrumentCategory',\r\n                data: [],\r\n                field: 'InstrumentCategory',\r\n                valueField: 'value',\r\n                textField: 'text',\r\n                colorField: 'color'\r\n            }, {\r\n                name: 'instrument',\r\n                data: [],\r\n                field: 'Instrument',\r\n                valueField: 'value',\r\n                textField: 'text',\r\n                colorField: 'color'\r\n            }],\r\n            // instrument:[]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var displayDate = new Date(Date.UTC(currentYear, new Date().getMonth(), new Date().getDate()));\r\n        console.log(\"job Allocation\", this.state.data);\r\n        return (\r\n            <Row>\r\n                <Col md={3}>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TECHNIQUE\" })}\r\n                                isSearchable={true}\r\n                                name={\"ntechniquecode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={false}\r\n                                isClearable={true}\r\n                                options={this.props.Technique}\r\n                                value={this.props.selectedRecord[\"ntechniquecode\"] || \"\"}\r\n                                defaultValue={this.props.selectedRecord[\"ntechniquecode\"]}\r\n                                onChange={(event) => this.props.onComboChange(event, \"ntechniquecode\")}\r\n                                closeMenuOnSelect={true}\r\n                            >\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                                isSearchable={true}\r\n                                name={\"nusercode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={true}\r\n                                isClearable={false}\r\n                                options={this.props.Users}\r\n                                value={this.props.selectedRecord[\"nusercode\"] || \"\"}\r\n                                defaultValue={this.props.selectedRecord[\"nusercode\"]}\r\n                                onChange={(event) => this.props.onComboChange(event, \"nusercode\")}\r\n                                closeMenuOnSelect={true}\r\n                            >\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <Scheduler data={this.state.data}\r\n                        onDataChange={this.handleDataChange}\r\n                        editable={{\r\n                            add: true,\r\n                            remove: true,\r\n                            drag: true,\r\n                            resize: true,\r\n                            select: true,\r\n                            edit: true\r\n                        }}\r\n                        height={500}\r\n                        editItem={CustomEditItem}\r\n                        form={FormWithCustomEditor}\r\n                        defaultDate={displayDate}\r\n                        // viewSlot={CustomViewSlotForMonth}\r\n                        editSlot={CustomEditSlotForMonth}\r\n                    // header={(props) =>\r\n                    //      <SchedulerHeader {...props}  children={headerComponent}   /> \r\n                    //   }\r\n                    // viewSlot={CustomViewSlot}\r\n                    //  editSlot={CustomEditSlot}\r\n\r\n                    // editItem={CustomEditItem}\r\n                    //  allDayLabel={false}\r\n                    // isAllDay={false}\r\n                    // isRecurring={false}\r\n                    //   onFormItemChange={this.onchnge}\r\n                    //  dataItem={[\"one\",\"two\"]}\r\n                    //  onFormSubmitAction={this.onchnge}\r\n                    //  editItem={this.CustomEditItem}\r\n                    //group={{ resources: ['users'] }}\r\n                    //</Col> resources={this.state.resource}\r\n\r\n\r\n                    // resources={[{...this.state.resource[0]},{...this.state.resource[1],data:this.props.Instrument?this.props.Instrument.map((x, i) => {\r\n                    //     return {\r\n                    //         text: x.label,\r\n                    //         value: x.value,\r\n                    //         color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\r\n                    //     }\r\n                    // }):[]}]}\r\n                    // modelFields={{\r\n                    //     id: \"id\",\r\n                    //     title: \"title\",\r\n                    //     description: \"description\",\r\n                    //     start: \"start\",\r\n                    //     end: \"end\",\r\n                    //     // recurrenceRule: \"RecurrenceRule\",\r\n                    //     //  recurrenceId: \"RecurrenceID\",\r\n                    //     //  recurrenceExceptions: \"RecurrenceException\",\r\n                    // }}\r\n                    // editItem={EditItemWithDynamicTitle}\r\n                    >\r\n\r\n                        <AgendaView slotDivisions={1} task={CustomTask} editable={{\r\n                            add: false,\r\n                            remove: false,\r\n                            drag: false,\r\n                            resize: false,\r\n                            select: false,\r\n                            edit: false\r\n                        }} />\r\n                        <MonthView //viewItem={SchedulerProportionalViewItem} //slotDivisions={1}\r\n\r\n                        />\r\n                        <WeekView viewItem={SchedulerProportionalViewItem} slotDivisions={1}\r\n                        // viewSlot={CustomViewSlot}\r\n                        //editSlot={CustomEditSlot}\r\n                        />\r\n                        <DayView viewItem={SchedulerProportionalViewItem} slotDivisions={1} allDaySlot={false}\r\n                            //viewSlot={CustomViewSlot}\r\n                            // editSlot={CustomEditSlot} \r\n                            numberOfDays={3}\r\n                            style={{ zorder: 25000 }}\r\n                        />\r\n                        <TimelineView //slotDivisions={1}\r\n                        />\r\n\r\n                    </Scheduler>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n        );\r\n\r\n    }\r\n\r\n\r\n    handleDataChange = ({\r\n        created,\r\n        updated,\r\n        deleted\r\n    }) => {\r\n        console.log('data change')\r\n        let data = this.state.data;\r\n        const aa = created.concat(created.map(item => Object.assign({}, item, {\r\n            id: guid()\r\n        })));\r\n        if (aa.length > 1) {\r\n\r\n            if (data.filter(x => x.insertRecord).length === 0) {\r\n\r\n                data= data.filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\r\n                .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\r\n                .concat(this.props.selectedTest.map((y) => Object.assign({}, y, {\r\n                    ...created.map(item => Object.assign({}, item, {\r\n                        id: guid(), insertRecord: true, title: `ArNo:${y.sarno && y.sarno} - Test Name:${y.stestsynonym && y.stestsynonym} - Status:${y.stransdisplaystatus && y.stransdisplaystatus}`\r\n                    }))[0]\r\n                })\r\n                ))\r\n\r\n\r\n                this.setState({data});\r\n            } else {\r\n\r\n                toast.info(\"Already assigned.delete old One\")\r\n            }\r\n\r\n        }\r\n        if (updated.length > 0) {\r\n\r\n            this.setState(old => ({\r\n                data: old.data     // Filter the deleted items\r\n                    .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\r\n                    .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\r\n                    .concat(created.map(item => Object.assign({}, item, {\r\n                        id: guid()\r\n                    })))\r\n            }));\r\n        }\r\n\r\n        if (deleted.length > 0) {\r\n\r\n            this.setState(old => ({\r\n                data: old.data     // Filter the deleted items\r\n                    .filter(item => deleted.find(current => current.id === item.id) === undefined) // Find and replace the updated items\r\n                    .map(item => updated.find(current => current.id === item.id) || item) // Add the newly created items and assign an `id`.\r\n                    .concat(created.map(item => Object.assign({}, item, {\r\n                        id: guid(), title: `${this.props.selectedTest[0].sarno && this.props.selectedTest[0].sarno} - ${this.props.selectedTest[0].stestsynonym && this.props.selectedTest[0].stestsynonym} - ${this.props.selectedTest[0].stransdisplaystatus && this.props.selectedTest[0].stransdisplaystatus}`\r\n                    })))\r\n            }));\r\n        }\r\n\r\n        this.props.parentScheduleState(data);\r\n    };\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let data = [];\r\n        //let resource = this.state.resource\r\n        if (this.props.userData !== undefined) {\r\n            if (!(this.props.userData.length <= this.state.data.length)) {\r\n                for (let i = 0; i < this.props.userData.length; i++) {\r\n                    data.push({ ...this.props.userData[i].jsondata, ...this.props.userData[i] });\r\n                }\r\n\r\n                data = data.map((dataItem, i) => ({\r\n                    start: parseAdjust(dataItem.UserStartDate + \".000z\"),\r\n                    end: parseAdjust(dataItem.UserEndDate + \".000z\"),\r\n                    title: `ArNo:${dataItem.sarno && dataItem.sarno} - Test Name:${dataItem.stestsynonym && dataItem.stestsynonym} - Status:${dataItem.stransdisplaystatus && dataItem.stransdisplaystatus}`,\r\n                    id: dataItem.id ? dataItem.id : i,\r\n                    startTimezone: dataItem.startTimezone,\r\n                    endTimezone: dataItem.endTimezone,\r\n                    description: dataItem.Comments ? dataItem.Comments : \"\",\r\n                    Instrument: dataItem.Instrument.value,\r\n                    InstrumentCategory: dataItem.InstrumentCategory.value,\r\n                    sarno: dataItem.sarno,\r\n                    ssamplearno: dataItem.ssamplearno,\r\n                    stestsynonym: dataItem.stestsynonym,\r\n                    ntransactionstatus: dataItem.ntransactionstatus,\r\n                    stransdisplaystatus: dataItem.stransdisplaystatus\r\n                }))\r\n\r\n                // if (this.props.InstrumentCategory && this.props.InstrumentCategory.length > 0) {\r\n                //     const userList = this.props.InstrumentCategory.map((x, i) => {\r\n                //         return {\r\n                //             text: x.label,\r\n                //             value: x.value,\r\n                //             color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\r\n                //         }\r\n                //     })\r\n                //     resource[0].data = userList\r\n                // }\r\n\r\n                this.setState({ data: data });\r\n            }\r\n\r\n            // if (this.props.Instrument !== this.state.instrument) {\r\n            //     const userList = this.props.Instrument.map((x, i) => {\r\n            //         return {\r\n            //             text: x.sinstrumentid,\r\n            //             value: x.ninstrumentcode,\r\n            //             color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\r\n            //         }\r\n            //     })\r\n            //     resource[0].data = userList\r\n            // }\r\n\r\n            // this.setState({ data: data, resource});\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default injectIntl(NewJobAlloct);\r\nexport const currentYear = new Date().getFullYear();\r\nexport const parseAdjust = eventDate => {\r\n    const date = new Date(eventDate);\r\n    date.setFullYear(currentYear);\r\n    return date;\r\n};"]},"metadata":{},"sourceType":"module"}