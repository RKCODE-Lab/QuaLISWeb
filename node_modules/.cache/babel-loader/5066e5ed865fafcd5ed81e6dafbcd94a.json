{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\Release.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, filterColumnData, getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType, getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport, getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample } from '../../actions';\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchJsonData, showEsign } from '../../components/CommonScript';\nimport { designProperties, formCode, transactionStatus } from '../../components/Enumeration';\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\nimport { Affix } from 'rsuite';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport ReleaseFilter from './ReleaseFilter';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { ContentPanel, ProductList } from '../product/product.styled';\nimport { faEdit, faExpandArrowsAlt, faEye, faRecycle, faStore, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { ReactComponent as Generate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/generate-certificate.svg\";\nimport { ReactComponent as ReGenerate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/regenerate-icon.svg\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fileViewUrl, reportUrl } from '../../rsapi';\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\nimport { REPORTTYPE } from \"../../components/Enumeration\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Release extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getReleasedApprovalVersion(inputParam);\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item\n            };\n            this.props.getReleasedRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item\n            };\n            this.props.getReleasedRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getReleasedApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          // const inputParamData = {\n          //     dfrom: obj.fromDate,\n          //     dto: obj.toDate,\n          //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          //     userinfo: this.props.Login.userInfo,\n          //     masterData: { ...this.props.Login.masterData },\n          //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n          //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n          //     ndesigntemplatemappingcode: comboData.value,\n          //     DesignTemplateMappingValue: comboData.item\n          // }\n          // this.props.getReleaseFilterBasedTest(inputParamData)\n          let masterData = { ...this.props.Login.masterData,\n            DesignTemplateMappingValue: comboData.item\n          };\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getReleasedFilterStatus(inputParamData);\n          }\n        } //Don't Remove\n        // else if (fieldName === 'nsectioncode') {\n        //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n        //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             nsectioncode: comboData.value === -1 ? null\n        //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //                 : comboData.value,\n        //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n        //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleasedFilterBasedTest(inputParamData);\n        //     }\n        // }\n        // else if (fieldName === 'njobstatuscode') {\n        //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n        //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\n        //         const updateInfo = {\n        //             typeName: DEFAULT_RETURN,\n        //             data: { masterData }\n        //         }\n        //         this.props.updateStore(updateInfo);\n        //     }\n        // }\n        else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ncoareporttypecode') {\n          if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\n            let masterData = { ...this.props.Login.masterData,\n              ReportTypeValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } // else {\n        //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n        //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n        //         //  const updateInfo = {\n        //         //     typeName: DEFAULT_RETURN,\n        //         //    data: { masterData }\n        //         // }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: comboData.value,\n        //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n        //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n        //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\n        //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n        //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleaseFilterBasedTest(inputParamData);\n        //     }\n        // }\n\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      this.props.Login.change = false;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue; //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\n      //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\n\n      let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        //  realUserSectionValue, realTestValue,\n        realDesignTemplateMappingValue,\n        realReportTypeValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode) {\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.checkFunction = data => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          arrayfalse: data.arrayfalse,\n          childfalsearray: data.childfalsearray\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkFunction1 = () => {\n      this.setState({\n        count: 1\n      });\n    };\n\n    this.expandFunc = change => {\n      let count = change.count;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...this.props.Login.masterData\n          },\n          change: change.change,\n          isAddPopup: false,\n          isEditPopup: false,\n          isDeletePopup: false,\n          checkFlag: \"1\",\n          count: count\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewReport = () => {\n      if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\n        let showReport = true;\n        this.setState({\n          showReport\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REPORTNOTGENERATED\"\n        }));\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n\n      if (fieldName === 'nprojecttypecode') {\n        const inputParamData = {\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          nprojecttypecode: comboData.value,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getApprovedProjectByProjectType(inputParamData);\n      }\n\n      if (fieldName === 'nprojectmastercode') {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let realFromDate = obj.fromDate;\n        let realToDate = obj.toDate;\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          realFromDate,\n          realToDate,\n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nprojectmastercode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          // ModalStatusValue: true,\n          isPopup: true,\n          isAddPopup: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData\n          };\n          this.props.getReleasedSample(inputParam);\n        }\n      }\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let closeModal = true;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          closeModal\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.previewReport = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          nflag: 2,\n          change: this.props.Login.change,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          url: this.props.Login.settings[24],\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          userinfo: this.props.Login.userInfo,\n          action: 'IDS_DOWNLOADFILE',\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.previewAndFinalReport(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.downloadReleasedFile = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          url: this.props.Login.settings[24],\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          // ntransactionsamplecode: ntransactionsamplecode,\n          //ntransactiontestcode: ntransactiontestcode,\n          nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          // ntransactionstatus: String(transactionStatus.RELEASED),\n          ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          userinfo: this.props.Login.userInfo,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          nsectioncode: -1,\n          nflag: 2,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.regenerateReleasedFile = action => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          //   ntransactiontestcode: ntransactiontestcode,\n          //  nsectioncode: this.props.Login.masterData.UserSectionValue ?\n          //     this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\n          //        this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\n          //        String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\n          //    null,\n          //  ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          ntransactionstatus: String(transactionStatus.RELEASED),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          nflag: 2,\n          userinfo: this.props.Login.userInfo,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          action,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.previewAndFinalReport(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.onSaveModalClick = () => {\n      let ntransactionsamplecode = \"\";\n      let ntransactiontestcode = \"\";\n      let npreregno = \"\";\n\n      if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n        if (this.state.npreregno && this.state.npreregno.length > 0) {\n          let sample = this.state.npreregno.filter((c, index) => {\n            return this.state.npreregno.indexOf(c) === index;\n          });\n          let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n            return this.state.ntransactionsamplecode.indexOf(c) === index;\n          });\n          let test = this.state.ntransactiontestcode.filter((c, index) => {\n            return this.state.ntransactiontestcode.indexOf(c) === index;\n          });\n          npreregno = sample.map(x => x).join(\",\");\n          ntransactionsamplecode = subsample.map(x => x).join(\",\");\n          ntransactiontestcode = test.map(x => x).join(\",\");\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            inputData: {\n              change: this.props.Login.change,\n              npreregno: String(npreregno),\n              ntransactionsamplecode: ntransactionsamplecode,\n              ntransactiontestcode: ntransactiontestcode,\n              ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\n              url: this.props.Login.settings[24],\n              ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              isAddPopup: false,\n              isEditPopup: false,\n              nflag: 2,\n              userinfo: this.props.Login.userInfo,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n            },\n            userinfo: this.props.Login.userInfo,\n            methodUrl: \"Release\",\n            classUrl: \"release\",\n            operation: this.props.Login.operation\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                operation: this.props.Login.operation,\n                screenName: this.props.Login.screenName\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            if (this.props.Login.isDeletePopup) {\n              this.props.getDeleteApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData);\n            } else if (this.props.Login.isEditPopup) {\n              this.props.UpdateApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData);\n            } else {\n              this.props.getApprovedRecordsAsDraft(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData);\n            }\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTANYONESAMPLE\"\n          }));\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTANYONESAMPLE\"\n        }));\n      }\n    };\n\n    this.sendToPortal = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        url: this.props.Login.settings[24],\n        isPortal: true,\n        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n        allPreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.getReportForPortal(inputParam);\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData\"];\n      this.props.Login.change = false;\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ncoareporttypecode: realReportTypeValue && realReportTypeValue.ncoareporttypecode || -1,\n        ntransactionstatus: realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined || realFilterStatusValue.ntransactionstatus !== '0' ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n        // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode !== -1) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord[\"agree\"] = 4;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeDocModal = () => {\n      let openModal = false;\n      let showReport = false;\n      let selectedRecord = {};\n      this.setState({\n        showReport,\n        openModal,\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[event.target.name] = event.target.value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.selectionChange = (event, nflag, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (nflag === undefined) {\n        this.state.dataResult.data.map(item => {\n          if (item.npreregno === event.dataItem.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let preregno = event.dataItem.npreregno;\n        let ncoahistorycode = event.dataItem.ncoahistorycode;\n        let ssystemfilename = event.dataItem.ssystemfilename;\n        const coaFileInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncoahistorycode,\n            ssystemfilename\n          }\n        };\n        this.props.updateStore(coaFileInfo);\n        this.childHeaderSelectionChange(event, preregno, checkedflag);\n      } else {\n        let data = [];\n        event.dataItems.map(item => {\n          data.push({\n            \"npreregno\": item.npreregno\n          });\n        });\n        this.childHeaderSelectionChange(event, data, checkedflag);\n      }\n    };\n\n    this.childHeaderSelectionChange = (event, preregno, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let subsamplecode = [];\n      let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno;\n\n      if (npreregno.length === 0 || npreregno.length === undefined) {\n        this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\n          item.selected = checked;\n\n          if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n            subsamplecode.push({\n              \"ntransactionsamplecode\": item.ntransactionsamplecode\n            });\n          }\n        });\n        this.props.Login.masterData.ReleaseSample.map(data => {\n          if (data.npreregno === npreregno) {\n            data.selected = checked;\n          }\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } else {\n        npreregno.map(value => {\n          this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\n            item.selected = checked;\n\n            if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n              subsamplecode.push({\n                \"ntransactionsamplecode\": item.ntransactionsamplecode\n              });\n            }\n          });\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      }\n    };\n\n    this.subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let transactionsamplecode = [];\n\n      if (subsamplecode !== undefined) {\n        transactionsamplecode = subsamplecode;\n        transactionsamplecode.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n      } else {\n        event.dataItems.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n        this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\n          if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      }\n    };\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (event.dataItems.length !== 0) {\n        this.state.dataResult.data.map(item => {\n          item.selected = checked;\n          return item;\n        });\n        this.selectionChange(event, 1, checked);\n      } else {\n        this.setState({\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      }\n    };\n\n    this.childSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          item.selected = checked;\n        }\n      });\n      let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n        return item.slected === true;\n      });\n\n      if (data === true) {\n        this.props.Login.masterData.ReleaseSample.map(item => {\n          if (event.dataItem.npreregno === item.npreregno) {\n            item.selected = checked;\n          }\n        });\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      }\n    };\n\n    this.subChildSelectionChange = event => {\n      let x = [];\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n          item.selected = checked;\n          this.collectData(item);\n        }\n      });\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\n            x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode];\n          }\n        }\n      });\n      let y = x.filter(t => t.selected === true);\n\n      if (x.length === y.length) {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true;\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false;\n          }\n        });\n      }\n\n      this.state.dataResult.data.map(item => {\n        if (item.npreregno === event.dataItem.npreregno) {\n          if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\n            x = this.props.Login.masterData.ReleaseSubSample[item.npreregno];\n          }\n        }\n      });\n      let y1 = x.filter(t => t.selected === true);\n\n      if (x.length === y1.length) {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === y1[0].npreregno) {\n            this.state.dataResult.data[i].selected = true;\n          }\n        });\n      } else {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === event.dataItem.npreregno) {\n            this.state.dataResult.data[i].selected = false;\n          }\n        });\n      }\n    };\n\n    this.collectData = (item, checkedflag) => {\n      let npreregno = this.state.npreregno || [];\n      let ntransactionsamplecode = this.state.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.state.ntransactiontestcode || [];\n\n      if (item.selected === true) {\n        if (!npreregno.includes(item.npreregno)) {\n          npreregno.push(item.npreregno);\n        }\n\n        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n          ntransactionsamplecode.push(item.ntransactionsamplecode);\n        } // Don't Remove\n\n\n        if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n          ntransactiontestcode.push(item.ntransactiontestcode);\n        }\n      } else {\n        const preregno = npreregno.filter(data => data !== item.npreregno);\n        npreregno = preregno;\n        const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\n        ntransactionsamplecode = transactionsamplecode; // Don't Remove\n\n        const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode);\n        ntransactiontestcode = transactiontestcode;\n      }\n\n      this.setState({\n        npreregno: checkedflag === false ? [] : npreregno,\n        ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode,\n        ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\n      });\n    };\n\n    this.formRef = React.createRef();\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      childDataResult: [],\n      dataState: dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      SampletypeList: [],\n      ProjecttypeList: [],\n      ProjectMasterList: [],\n      ReporttypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      searchedData: [],\n      count: 0,\n      SampleGridItem: [],\n      combinedSearchField: [],\n      npreregno: [],\n      ntransactiontestcode: [],\n      ntransactionsamplecode: [],\n      stateDynamicDesign: []\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sreportno\", \"susername\", \"stransdisplaystatus\"];\n  } // expandNextData(y) {\n  //     let change = []\n  //     let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\n  //     let data = x.data.every(item => {\n  //         return item.expanded === true\n  //     })\n  //     if (data === true) {\n  //         change = true\n  //     } else {\n  //         change = false\n  //     }\n  //     this.expandFunc({ change: change })\n  // }\n\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let filePath = \"\";\n\n    if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\n      filePath = reportUrl();\n    } else {\n      filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\n    }\n\n    let userStatusCSS = \"\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\n      userStatusCSS = \"outline-secondary\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\n      userStatusCSS = \"outline-success\";\n    } else {\n      userStatusCSS = \"outline-Final\";\n    }\n\n    const filterParam = {\n      inputListName: \"ReleaseHistory\",\n      selectedObject: \"selectedReleaseHistory\",\n      primaryKeyField: \"ncoaparentcode\",\n      fetchUrl: \"release/getReleaseHistory\",\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList,\n      fecthInputObject: {\n        isSearch: true,\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        masterData: this.props.Login.masterData,\n        searchFieldList: this.searchFieldList,\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        //  nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      }\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_REPORTTYPE\",\n      \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" : this.props.Login.masterData.ReportTypeValue ? this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\n    }];\n    const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"Release\") && this.state.controlMap.get('Release').ncontrolcode;\n    const previewId = this.state.controlMap.has(\"PreviewReport\") && this.state.controlMap.get(\"PreviewReport\").ncontrolcode;\n    const downloadId = this.state.controlMap.has(\"DownloadRelease\") && this.state.controlMap.get(\"DownloadRelease\").ncontrolcode;\n    const regenerateId = this.state.controlMap.has(\"RegenerateRelease\") && this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\n    const viewreportId = this.state.controlMap.has(\"ViewReportRelease\") && this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\n    const sendtoportalId = this.state.controlMap.has(\"SendToPortal\") && this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditSamples\") && this.state.controlMap.get(\"EditSamples\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"RemoveSamples\") && this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\n    const ReleaseMasterDataParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\n      //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\n      masterData: { ...this.props.Login.masterData\n      },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.npreregno || \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n        //   'nsectioncode': this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode // 'ncoahistorycode':COAHistory\n\n      }\n    };\n    const ApprovedModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'isAddPopup': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1\n      }\n    };\n    const RemoveModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'nneedremove': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\n        ncontrolCode: deleteId\n      }\n    };\n    const EditModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'nneededit': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\n        ncontrolCode: editId\n      }\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Release\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory,\n      getMasterDetail: ReleaseSample => this.props.getReleasedDataDetails({ ...ReleaseMasterDataParam,\n        ...ReleaseSample\n      }),\n      selectedMaster: this.props.Login.masterData.selectedReleaseHistory,\n      primaryKeyField: \"ncoaparentcode\",\n      mainField: \"sreportno\",\n      firstField: \"susername\",\n      secondField: \"sgenerateddate\" // secondField=\"stransdisplaystatus\"\n      ,\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: releaseId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openModal: () => this.props.getApprovedSample(ApprovedModalParam, releaseId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ReleaseFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          ReportType: this.state.ReporttypeList || [],\n          ReportTypeValue: this.props.Login.masterData.ReportTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {} //   UserSection={this.state.UserSectionList || []}\n          //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\n          //   Test={this.state.TestList || []}\n          //  TestValue={this.props.Login.masterData.TestValue || []}\n          ,\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          userInfo: this.props.Login.userInfo,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 58\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData.selectedReleaseHistory.stransdisplaystatus)), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nprojectspecrequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDITSAMPLES\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      onClick: () => this.props.getEditApprovedSample(EditModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nprojectspecrequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REMOVESAMPLES\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.props.getRemoveApprovedSample(RemoveModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(previewId) === -1,\n      onClick: () => this.previewReport(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(downloadId) === -1,\n      onClick: () => this.downloadReleasedFile(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Generate, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(regenerateId) === -1,\n      onClick: () => this.regenerateReleasedFile('IDS_REGENERATEFILE'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ReGenerate, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_VIEWREPORT\"\n      }),\n      hidden: this.state.userRoleControlRights.indexOf(viewreportId) === -1,\n      onClick: () => this.viewReport(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faExpandArrowsAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 61\n      }\n    })), this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nportalrequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_SENDTOPORTAL\"\n      }),\n      hidden: this.state.userRoleControlRights.indexOf(sendtoportalId) === -1,\n      onClick: () => this.sendToPortal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 65\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n      needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n      data: this.state.data,\n      dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      expandNextData: this.expandNextData,\n      checkFunction: this.checkFunction,\n      checkFunction1: this.checkFunction1,\n      expandFunc: this.expandFunc //expandData={this.expandData}\n      ,\n      childDataResult: this.state.childDataResult,\n      subChildDataResult: this.state.subChildDataResult,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n      expandField: \"expanded\",\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '525px',\n      gridTop: '10px' //   isActionRequired={true}\n      //   isToolBarRequired={true}\n      //  isExpandRequired={true}\n      //   isDownloadRequired={true}\n      ,\n      isCheckBoxRequired: false,\n      isCollapseRequired: true,\n      selectedId: this.props.Login.selectedId,\n      hasChild: true,\n      hasSubChild: true,\n      childList: this.props.Login.masterData.ReleasedSubSampleDetails,\n      childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n      childMappingField: \"npreregno\",\n      subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n      ,\n      subChildList: this.props.Login.masterData.ReleasedTestDetails,\n      selectedsubcild: this.props.Login.selectedsubcild,\n      methodUrl: \"Release\",\n      headerSelectionChange: this.headerSelectionChange,\n      childHeaderSelectionChange: this.childHeaderSelectionChange,\n      childSelectionChange: this.childSelectionChange,\n      subChildSelectionChange: this.subChildSelectionChange,\n      subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n      selectionChange: this.selectionChange,\n      releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 45\n      }\n    })))) : \"\"))), this.state.showReport ? /*#__PURE__*/React.createElement(DocViewer, {\n      file: filePath,\n      showReport: this.state.showReport,\n      closeModal: this.closeDocModal,\n      type: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 25\n      }\n    }) : \"\", this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      size: \"xl\",\n      closeModal: this.closeModal,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_RELEASE\"\n      }),\n      onSaveClick: this.onSaveModalClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 37\n        }\n      }, this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode === 7 && this.props.Login.isDeletePopup !== true && /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nprojecttypecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_PROJECTTYPE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.ProjectTypeList,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true,\n        isDisabled: false,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nprojecttypecode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 37\n        }\n      }, this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode === 7 && this.props.Login.isDeletePopup !== true && /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nprojectmastercode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_PROJECTCODE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.projectMasterList,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true,\n        isDisabled: false,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nprojectmastercode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n        needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        data: this.state.data,\n        dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        dataState: this.state.dataState,\n        dataStateChange: this.dataStateChange,\n        expandNextData: this.expandNextData,\n        checkFunction: this.checkFunction,\n        checkFunction1: this.checkFunction1,\n        expandFunc: this.expandFunc,\n        childDataResult: this.state.childDataResult,\n        subChildDataResult: this.state.subChildDataResult,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        expandField: \"expanded\",\n        handleExpandChange: this.handleExpandChange,\n        childHandleExpandChange: this.childHandleExpandChange,\n        isCheckBoxRequired: true,\n        reloadData: this.reloadData,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        pageable: true,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        gridTop: '10px' // isActionRequired={true}\n        //   isToolBarRequired={true}\n        //  isExpandRequired={true}\n        //   isDownloadRequired={true}\n        ,\n        isCollapseRequired: true,\n        selectedId: this.props.Login.selectedId,\n        hasChild: true,\n        hasSubChild: true,\n        childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleaseSubSample,\n        childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n        childMappingField: \"npreregno\",\n        subChildMappingField: \"ntransactionsamplecode\",\n        subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleaseTest,\n        selectedsubcild: this.props.Login.selectedsubcild,\n        methodUrl: \"Release\",\n        headerSelectionChange: this.headerSelectionChange,\n        childHeaderSelectionChange: this.childHeaderSelectionChange,\n        childSelectAll: this.props.Login.childSelectAll,\n        childSelectionChange: this.childSelectionChange,\n        subChildSelectionChange: this.subChildSelectionChange,\n        subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n        subChildSelectAll: this.props.Login.subChildSelectAll,\n        selectionChange: this.selectionChange,\n        selectAll: this.props.Login.selectAll,\n        releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 33\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      SampleGridItem,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      ReporttypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      //UserSectionList, TestList,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicSubSampleGridItem,\n      stateDynamicDesign,\n      checkedflag,\n      dataState\n    } = this.state;\n    let bool = false;\n    let reportFilePath = \"\";\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      reportFilePath = this.props.Login.masterData.ReportPDFFile;\n      bool = true;\n    } // else {\n    //     if (this.state.dataState === undefined) {\n    //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\n    //     }\n    //     //  const npreregno =  [];\n    //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n    //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\n      checkedflag = this.props.Login.checkedflag;\n      bool = true;\n    } // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\n    //     npreregno = this.props.Login.npreregno\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false); // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\n      // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \n\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      ReporttypeList = ReporttypeListMap.get(\"OptionList\"); // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\n      //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\n\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\"); //  UserSectionList = UserSectionListMap.get(\"OptionList\");\n      //   TestList = TestListMap.get(\"OptionList\");\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\n      DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      let allData = {\n        userRoleControlRights,\n        controlMap,\n        SampleGridItem,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        ReporttypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        //UserSectionList, TestList,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicSubSampleGridItem,\n        stateDynamicDesign,\n        checkedflag,\n        data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n        dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        reportFilePath\n      };\n\n      if (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true) {\n        this.setState({ ...allData,\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      } else {\n        this.setState(allData);\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData,\n  getApprovedRecordsAsDraft,\n  getReleasedRegistrationType,\n  getReleasedRegistrationSubType,\n  getReleasedFilterStatus,\n  getReleasedApprovalVersion,\n  getReleasedFilterBasedTest,\n  getReleasedSample,\n  getApprovedSample,\n  generateReleasedReport,\n  getReleasedDataDetails,\n  getApprovedProjectByProjectType,\n  getApprovedProjectType,\n  getReportForPortal,\n  previewAndFinalReport,\n  getRemoveApprovedSample,\n  getDeleteApprovedSample,\n  UpdateApprovedSample,\n  getEditApprovedSample\n})(injectIntl(Release));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/release/Release.jsx"],"names":["React","Row","Col","Card","FormGroup","FormLabel","Nav","toast","process","connect","injectIntl","callService","crudMaster","updateStore","validateEsignCredential","filterColumnData","getApprovedRecordsAsDraft","getReleasedRegistrationType","getReleasedRegistrationSubType","getReleasedFilterStatus","getReleasedApprovalVersion","getReleasedFilterBasedTest","getReleasedSample","generateReleasedReport","getApprovedSample","getReleasedDataDetails","getApprovedProjectByProjectType","getApprovedProjectType","getReportForPortal","previewAndFinalReport","getRemoveApprovedSample","getDeleteApprovedSample","UpdateApprovedSample","getEditApprovedSample","ListMaster","getControlMap","convertDateValuetoString","rearrangeDateFormat","constructOptionList","searchJsonData","showEsign","designProperties","formCode","transactionStatus","DataGridWithMultipleGrid","Affix","DEFAULT_RETURN","BreadcrumbComponent","ReleaseFilter","SlideOutModal","Esign","ContentPanel","ProductList","faEdit","faExpandArrowsAlt","faEye","faRecycle","faStore","faTrash","FormSelectSearch","FontAwesomeIcon","fileViewUrl","reportUrl","DocViewer","REPORTTYPE","mapStateToProps","state","Login","Release","Component","constructor","props","dataStateChange","event","setState","dataState","dataResult","data","handleDateChange","dateName","dateValue","Date","dfrom","masterData","fromDate","userInfo","dto","toDate","obj","inputParam","inputData","nflag","nregtypecode","RegTypeValue","nregsubtypecode","RegSubTypeValue","String","userinfo","onFilterComboChange","comboData","fieldName","inputParamData","value","SampleTypeValue","nsampletypecode","item","DesignTemplateMappingValue","updateInfo","typeName","ApprovalVersionValue","napproveconfversioncode","napprovalversioncode","ndesigntemplatemappingcode","TestValue","ntestcode","ReportTypeValue","ncoareporttypecode","onFilterSubmit","searchRef","current","change","realFromDate","realToDate","realSampleTypeValue","realRegTypeValue","realRegSubTypeValue","realFilterStatusValue","FilterStatusValue","realApprovalVersionValue","realReportTypeValue","realDesignTemplateMappingValue","npreregno","parseInt","ntransactionstatus","undefined","RELEASED","napprovalconfigcode","napprovalconfigversioncode","nneedsubsample","nneedtemplatebasedflow","info","intl","formatMessage","id","checkFunction","arrayfalse","childfalsearray","checkFunction1","count","expandFunc","isAddPopup","isEditPopup","isDeletePopup","checkFlag","viewReport","ReportPDFFile","length","showReport","warn","onComboChange","selectedRecord","nprojecttypecode","realUserSectionValue","UserSectionValue","realTestValue","nprojectmastercode","nsectioncode","UserSection","map","section","join","isPopup","sfilterstatus","closeModalShow","loadEsign","closeModal","modalShow","selectedId","previewReport","ncoaparentcode","selectedReleaseHistory","spreregno","ntransactionsamplecode","stransactionsamplecode","ntransactiontestcode","stransactiontestcode","url","settings","action","downloadReleasedFile","nclinicaltyperequired","nprimarykey","nreporttypecode","COAREPORT","sprimarykeyname","regenerateReleasedFile","onSaveModalClick","ReleaseSample","sample","filter","c","index","indexOf","subsample","test","x","methodUrl","classUrl","operation","userRoleControlRights","nformcode","ncontrolCode","screenData","screenName","sendToPortal","isPortal","allPreregno","reloadData","openModal","closeDocModal","onInputOnChange","target","name","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","selectionChange","checkedflag","checked","syntheticEvent","dataItem","selected","preregno","ncoahistorycode","ssystemfilename","coaFileInfo","childHeaderSelectionChange","dataItems","push","subsamplecode","ReleaseSubSample","includes","subChildHeaderSelectionChange","transactionsamplecode","ReleaseTest","collectData","every","headerSelectionChange","childSelectionChange","slected","subChildSelectionChange","y","t","i","y1","transactiontestcode","formRef","createRef","skip","take","masterStatus","error","childDataResult","controlMap","Map","SampletypeList","ProjecttypeList","ProjectMasterList","ReporttypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","sampleSearchField","subsampleSearchField","testSearchField","searchedData","SampleGridItem","combinedSearchField","stateDynamicDesign","searchFieldList","getDerivedStateFromProps","gridfillingColumn","temparray","option","LABEL","slanguagetypecode","VALUE","render","filePath","filetype","reportFilePath","userStatusCSS","activeIconCSS","DRAFT","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","isSearch","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","scoareporttypename","releaseId","has","get","ncontrolcode","previewId","downloadId","regenerateId","viewreportId","sendtoportalId","editId","deleteId","ReleaseMasterDataParam","ApprovedModalParam","PARTIAL","RemoveModalParam","EditModalParam","ReleaseHistory","openFilter","closeFilter","showFilter","ConfigVersionList","DesignTemplateMapping","onDesignTemplateChange","Object","values","stransdisplaystatus","nprojectspecrequired","YES","nportalrequired","searchedData1","ReleasedSampleDetails","expandNextData","subChildDataResult","DynamicGridItem","DynamicTestGridItem","ReleasedSubSampleDetails","DynamicSubSampleGridItem","ReleasedTestDetails","selectedsubcild","ProjectTypeList","projectMasterList","handleExpandChange","childHandleExpandChange","searchedData2","searchedData3","childSelectAll","subChildSelectAll","selectAll","componentDidUpdate","previousProps","bool","SampletypeListMap","SampleType","ReporttypeListMap","ReportType","RegistrationTypeListMap","RegType","RegistrationSubTypeListMap","RegSubType","FilterStatusListMap","FilterStatus","ConfigVersionListMap","ApprovalVersion","UserSectionListMap","TestListMap","Test","DynamicDesign","dynamicColumn","JSON","parse","jsondata","samplegriditem","testListFields","releasetestfields","subsamplelistitem","DesignTemplateMappingMap","allData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,EAAoCC,SAApC,EAA+CC,GAA/C,QAA0D,iBAA1D;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SACIC,WADJ,EACiBC,UADjB,EAC6BC,WAD7B,EAC0CC,uBAD1C,EAEIC,gBAFJ,EAGIC,yBAHJ,EAIIC,2BAJJ,EAIiCC,8BAJjC,EAKIC,uBALJ,EAK6BC,0BAL7B,EAKyDC,0BALzD,EAKqFC,iBALrF,EAKwGC,sBALxG,EAMIC,iBANJ,EAMuBC,sBANvB,EAM+CC,+BAN/C,EAMgFC,sBANhF,EAMwGC,kBANxG,EAOIC,qBAPJ,EAO0BC,uBAP1B,EAOkDC,uBAPlD,EAO0EC,oBAP1E,EAOgGC,qBAPhG,QAQO,eARP;AASA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,SAASC,aAAT,EAAwBC,wBAAxB,EAAkDC,mBAAlD,EAAuEC,mBAAvE,EAA4FC,cAA5F,EAA4GC,SAA5G,QAA6H,+BAA7H;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,iBAArC,QAA8D,8BAA9D;AACA,OAAOC,wBAAP,MAAqC,qDAArC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,2BAA1C;AACA,SAASC,MAAT,EAAiBC,iBAAjB,EAAoCC,KAApC,EAA2CC,SAA3C,EAAsDC,OAAtD,EAA+DC,OAA/D,QAA8E,mCAA9E;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;;;AAIA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,aAAvC;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAQ;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAR;AACH,CAFD;;AAIA,MAAMC,OAAN,SAAsBpE,KAAK,CAACqE,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAyDnBC,eAzDmB,GAyDAC,KAAD,IAAW;AAGzB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF,KAAK,CAACE,SAAnB;AAA8BC,QAAAA,UAAU,EAAEpE,OAAO,CAAC,KAAK0D,KAAL,CAAWW,IAAZ,EAAkBJ,KAAK,CAACE,SAAxB;AAAjD,OAAd,EAHyB,CAIzB;AACH,KA9DkB;;AAAA,SA6EnBG,gBA7EmB,GA6EA,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACxC,UAAIA,SAAS,KAAK,IAAlB,EAAwB;AACpBA,QAAAA,SAAS,GAAG,IAAIC,IAAJ,EAAZ;AACH;;AACD,UAAIC,KAAK,GAAG,KAAKX,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA5B,GAAuC/C,mBAAmB,CAAC,KAAKkC,KAAL,CAAWJ,KAAX,CAAiBkB,QAAlB,EAA4B,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAAxD,CAA1D,GAA8H,IAAIH,IAAJ,EAA1I;AACA,UAAIK,GAAG,GAAG,KAAKf,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAA5B,GAAqClD,mBAAmB,CAAC,KAAKkC,KAAL,CAAWJ,KAAX,CAAiBkB,QAAlB,EAA4B,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAxD,CAAxD,GAA0H,IAAIN,IAAJ,EAApI;AACA,UAAIO,GAAG,GAAG,EAAV;;AACA,UAAIT,QAAQ,KAAK,UAAjB,EAA6B;AACzBS,QAAAA,GAAG,GAAGpD,wBAAwB,CAAC4C,SAAD,EAAYM,GAAZ,EAAiB,KAAKf,KAAL,CAAWJ,KAAX,CAAiBkB,QAAlC,CAA9B;AACAH,QAAAA,KAAK,GAAGM,GAAG,CAACJ,QAAZ;AACAE,QAAAA,GAAG,GAAGE,GAAG,CAACD,MAAV;AACH,OAJD,MAIO;AACHC,QAAAA,GAAG,GAAGpD,wBAAwB,CAAC8C,KAAD,EAAQF,SAAR,EAAmB,KAAKT,KAAL,CAAWJ,KAAX,CAAiBkB,QAApC,CAA9B;AACAH,QAAAA,KAAK,GAAGM,GAAG,CAACJ,QAAZ;AACAE,QAAAA,GAAG,GAAGE,GAAG,CAACD,MAAV;AAEH;;AACD,UAAIE,UAAU,GAAG;AACbC,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE,CADA;AAEPC,UAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,CAAyCD,YAF5F;AAGPE,UAAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4CD,eAHrG;AAIPZ,UAAAA,KAAK,EAAEc,MAAM,CAACd,KAAD,CAJN;AAKPI,UAAAA,GAAG,EAAEU,MAAM,CAACV,GAAD,CALJ;AAMPW,UAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB;AANpB,SADE;AASbF,QAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB;AAThB,OAAjB;AAYA,WAAKZ,KAAL,CAAWnD,0BAAX,CAAsCqE,UAAtC;AACH,KA3GkB;;AAAA,SA6GnBS,mBA7GmB,GA6GG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAE5C,UAAID,SAAJ,EAAe;AACX,YAAIX,GAAG,GAAGpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA7B,EAAuC,KAAKb,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBkB,QAA5F,CAAlC;AACA,YAAIgB,cAAc,GAAG,EAArB;;AACA,YAAID,SAAS,KAAK,iBAAlB,EAAqC;AACjC,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4CC,eAApE,EAAqF;AACjFH,YAAAA,cAAc,GAAG;AACbV,cAAAA,KAAK,EAAE,CADM;AAEbT,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAFE;AAGbE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAHI;AAIbiB,cAAAA,eAAe,EAAEL,SAAS,CAACG,KAJd;AAKbL,cAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QALd;AAMbF,cAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UANhB;AAOboB,cAAAA,eAAe,EAAEJ,SAAS,CAACM;AAPd,aAAjB;AASA,iBAAKlC,KAAL,CAAWtD,2BAAX,CAAuCoF,cAAvC;AACH;AACJ,SAbD,MAeK,IAAID,SAAS,KAAK,cAAlB,EAAkC;AACnC,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,CAAyCD,YAAjE,EAA+E;AAC3ES,YAAAA,cAAc,GAAG;AACbV,cAAAA,KAAK,EAAE,CADM;AAEbT,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAFE;AAGbE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAHI;AAIbiB,cAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4CC,eAJhD;AAKbZ,cAAAA,YAAY,EAAEO,SAAS,CAACG,KALX;AAMbL,cAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QANd;AAObF,cAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UAPhB;AAQbU,cAAAA,YAAY,EAAEM,SAAS,CAACM;AARX,aAAjB;AAUA,iBAAKlC,KAAL,CAAWrD,8BAAX,CAA0CmF,cAA1C;AACH;AACJ,SAdI,MAcE,IAAID,SAAS,KAAK,iBAAlB,EAAqC;AAExC,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4CD,eAApE,EAAqF;AACjF,gBAAIJ,SAAS,GAAG;AACZC,cAAAA,KAAK,EAAE,CADK;AAEZT,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAFC;AAGZE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAHG;AAIZiB,cAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4CC,eAJjD;AAKZZ,cAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,CAAyCD,YAL3C;AAMZE,cAAAA,eAAe,EAAEK,SAAS,CAACG,KANf;AAOZL,cAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB;AAPf,aAAhB;AASAgB,YAAAA,cAAc,GAAG;AACbX,cAAAA,SADa;AAEbP,cAAAA,UAAU,EAAE,EACR,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UADZ;AAERY,gBAAAA,eAAe,EAAEI,SAAS,CAACM;AAFnB;AAFC,aAAjB;AAOA,iBAAKlC,KAAL,CAAWnD,0BAAX,CAAsCiF,cAAtC;AACH;AACJ,SArBM,MAwBF,IAAID,SAAS,KAAK,4BAAlB,EAAgD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAIjB,UAAU,GAAG,EAAE,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UAAtB;AAAkCuB,YAAAA,0BAA0B,EAAEP,SAAS,CAACM;AAAxE,WAAjB;AACA,gBAAME,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAE9D,cADK;AAEf+B,YAAAA,IAAI,EAAE;AAAEM,cAAAA;AAAF;AAFS,WAAnB;AAIA,eAAKZ,KAAL,CAAW1D,WAAX,CAAuB8F,UAAvB;AACH,SAzBI,MA0BA,IAAIP,SAAS,KAAK,yBAAlB,EAA6C;AAC9C,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiDC,uBAAzE,EAAkG;AAC9FT,YAAAA,cAAc,GAAG;AACbV,cAAAA,KAAK,EAAE,CADM;AAEbT,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAFE;AAGbE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAHI;AAIbiB,cAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4CC,eAJhD;AAKbZ,cAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,CAAyCD,YAL1C;AAMbE,cAAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4CD,eANhD;AAObiB,cAAAA,oBAAoB,EAAEZ,SAAS,CAACG,KAPnB;AAQbL,cAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QARd;AASbF,cAAAA,UAAU,EAAE,EAAE,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UAAtB;AAAkC0B,gBAAAA,oBAAoB,EAAEV,SAAS,CAACM;AAAlE,eATC;AAUbV,cAAAA,eAAe,EAAE,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAVhC;AAWbiB,cAAAA,0BAA0B,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAA5B,GAAyD,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAArF,GAAkH,CAAC;AAXlI,aAAjB;AAaA,iBAAKzC,KAAL,CAAWpD,uBAAX,CAAmCkF,cAAnC;AACH;AACJ,SAjBI,CAkBL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDK,aAsDA,IAAID,SAAS,KAAK,WAAlB,EAA+B;AAChC,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8B,SAA5B,CAAsCC,SAA9D,EAAyE;AACrE,gBAAI/B,UAAU,GAAG,EAAE,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UAAtB;AAAkC8B,cAAAA,SAAS,EAAEd,SAAS,CAACM;AAAvD,aAAjB;AACA,kBAAME,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAE9D,cADK;AAEf+B,cAAAA,IAAI,EAAE;AAAEM,gBAAAA;AAAF;AAFS,aAAnB;AAIA,iBAAKZ,KAAL,CAAW1D,WAAX,CAAuB8F,UAAvB;AACH;AACJ,SATI,MAUA,IAAIP,SAAS,KAAK,oBAAlB,EAAwC;AACzC,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,CAA4CC,kBAApE,EAAwF;AACpF,gBAAIjC,UAAU,GAAG,EAAE,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UAAtB;AAAkCgC,cAAAA,eAAe,EAAEhB,SAAS,CAACM;AAA7D,aAAjB;AACA,kBAAME,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAE9D,cADK;AAEf+B,cAAAA,IAAI,EAAE;AAAEM,gBAAAA;AAAF;AAFS,aAAnB;AAIA,iBAAKZ,KAAL,CAAW1D,WAAX,CAAuB8F,UAAvB;AACH;AACJ,SA3JU,CA4JX;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACH;AACJ,KA3SkB;;AAAA,SA6SnBU,cA7SmB,GA6SF,MAAM;AACnB,WAAKC,SAAL,CAAeC,OAAf,CAAuBjB,KAAvB,GAA+B,EAA/B;AACA,WAAK/B,KAAL,CAAWJ,KAAX,CAAiBqD,MAAjB,GAA0B,KAA1B;AAEA,UAAIhC,GAAG,GAAGpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA7B,EAAuC,KAAKb,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBkB,QAA5F,CAAlC;AACA,UAAIoC,YAAY,GAAGjC,GAAG,CAACJ,QAAvB;AACA,UAAIsC,UAAU,GAAGlC,GAAG,CAACD,MAArB;AACA,UAAIoC,mBAAmB,GAAG,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAArG;AACA,UAAIqB,gBAAgB,GAAG,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA/F;AACA,UAAIgC,mBAAmB,GAAG,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAArG;AACA,UAAI+B,qBAAqB,GAAG,KAAKvD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAAzG;AACA,UAAIC,wBAAwB,GAAG,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,IAAoD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA/G,CAXmB,CAYnB;AACA;;AACA,UAAIoB,mBAAmB,GAAG,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAArG;AACA,UAAIe,8BAA8B,GAAG,KAAK3D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,IAA0D,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA3H;AACA,UAAIvB,UAAU,GAAG,EACb,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UADP;AACmBsC,QAAAA,YADnB;AACiCC,QAAAA,UADjC;AAC6CC,QAAAA,mBAD7C;AACkEC,QAAAA,gBADlE;AAEbC,QAAAA,mBAFa;AAEQC,QAAAA,qBAFR;AAE+BE,QAAAA,wBAF/B;AAGb;AACAE,QAAAA,8BAJa;AAKbD,QAAAA;AALa,OAAjB;AAOA,UAAIvC,SAAS,GAAG;AACZyC,QAAAA,SAAS,EAAE,GADC;AAEZ3B,QAAAA,eAAe,EAAG,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4CC,eAA5F,IAAgH,CAAC,CAFtH;AAGZZ,QAAAA,YAAY,EAAEwC,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,CAAyCD,YAAtF,CAAR,IAA+G,CAAC,CAHlH;AAIZE,QAAAA,eAAe,EAAEsC,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4CD,eAA5F,CAAR,IAAwH,CAAC,CAJ9H;AAKZuC,QAAAA,kBAAkB,EAAI,KAAK9D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA9C,KAAqEC,SAAvH,IAAqI,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA9C,KAAqE,GAA3M,GAAkNrC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA/C,CAAN,GAA2E,GAA3E,GAAiFrC,MAAM,CAACrD,iBAAiB,CAAC4F,QAAnB,CAAzS,GAAwU,IALhV;AAMZnB,QAAAA,kBAAkB,EAAEgB,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,CAA4CC,kBAA5F,CAAR,IAA2H,CAAC,CANpI;AAOZoB,QAAAA,mBAAmB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,GAAmD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD2B,mBAAjD,IAAwE,CAAC,CAA5H,GAAgI,IAPzI;AAQZzB,QAAAA,oBAAoB,EAAE,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,IAAoD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD4B,0BAArG,GAAkIzC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD4B,0BAAlD,CAAxI,GAAwN,CAAC,CARnO;AASZ;AACA;AACAC,QAAAA,cAAc,EAAG,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4C2C,cAA5F,IAA+G,KAXnH;AAYZC,QAAAA,sBAAsB,EAAG,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDc,sBAApG,IAA+H,KAZ3I;AAaZ1C,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QAbf;AAcZ2B,QAAAA,0BAA0B,EAAE,CAAC,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,IAA0D,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,CAAuDM,0BAAjH,GACvB,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,CAAuDM,0BADhC,GAC6D,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAD1F,KACyH,CAAC;AAf1I,OAAhB;;AAiBA,UAAIhB,SAAS,CAACc,eAAV,KAA8B,CAAC,CAA/B,IAAoCd,SAAS,CAACE,YAAV,KAA2B,CAAC,CAAhE,IAAqEF,SAAS,CAACI,eAAV,KAA8B,CAAC,CAApG,IACGJ,SAAS,CAAC2C,kBAAV,KAAiC,IADpC,IAC4C3C,SAAS,CAAC8C,mBAAV,KAAkC,CAAC,CAD/E,IACoF9C,SAAS,CAACqB,oBAAV,KAAmC,IADvH,CAEA;AAFA,SAGGrB,SAAS,CAAC0B,kBAHjB,EAGqC;AAEjC1B,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBF,GAAG,CAACJ,QAAzB;AACAM,QAAAA,SAAS,CAAC,KAAD,CAAT,GAAmBF,GAAG,CAACD,MAAvB;AACA,YAAIE,UAAU,GAAG;AACbN,UAAAA,UADa;AAEbO,UAAAA;AAFa,SAAjB;AAIA,aAAKnB,KAAL,CAAWjD,iBAAX,CAA6BmE,UAA7B;AACH,OAZD,MAYO;AACHlF,QAAAA,KAAK,CAACqI,IAAN,CAAW,KAAKrE,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AAEJ,KArWkB;;AAAA,SAuWnBC,aAvWmB,GAuWFnE,IAAD,IAAU;AACtB,YAAM8B,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE9D,cADK;AAEf+B,QAAAA,IAAI,EAAE;AACFoE,UAAAA,UAAU,EAAEpE,IAAI,CAACoE,UADf;AAEFC,UAAAA,eAAe,EAAErE,IAAI,CAACqE;AAFpB;AAFS,OAAnB;AAOA,WAAK3E,KAAL,CAAW1D,WAAX,CAAuB8F,UAAvB;AACH,KAhXkB;;AAAA,SAiXnBwC,cAjXmB,GAiXF,MAAM;AACnB,WAAKzE,QAAL,CAAc;AACV0E,QAAAA,KAAK,EAAE;AADG,OAAd;AAGH,KArXkB;;AAAA,SAsXnBC,UAtXmB,GAsXL7B,MAAD,IAAY;AACrB,UAAI4B,KAAK,GAAG5B,MAAM,CAAC4B,KAAnB;AACA,YAAMzC,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE9D,cADK;AAEf+B,QAAAA,IAAI,EAAE;AACFM,UAAAA,UAAU,EAAE,EAAE,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB;AAAtB,WADV;AAEFqC,UAAAA,MAAM,EAAEA,MAAM,CAACA,MAFb;AAGF8B,UAAAA,UAAU,EAAE,KAHV;AAIFC,UAAAA,WAAW,EAAC,KAJV;AAKFC,UAAAA,aAAa,EAAC,KALZ;AAMFC,UAAAA,SAAS,EAAE,GANT;AAOFL,UAAAA,KAAK,EAAEA;AAPL;AAFS,OAAnB;AAYA,WAAK7E,KAAL,CAAW1D,WAAX,CAAuB8F,UAAvB;AACH,KArYkB;;AAAA,SA4YnB+C,UA5YmB,GA4YN,MAAM;AACf,UAAI,KAAKnF,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwE,aAA5B,IAA6C,KAAKpF,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwE,aAA5B,CAA0CC,MAA1C,GAAmD,CAApG,EAAuG;AACnG,YAAIC,UAAU,GAAG,IAAjB;AACA,aAAKnF,QAAL,CAAc;AAAEmF,UAAAA;AAAF,SAAd;AACH,OAHD,MAIK;AACDtJ,QAAAA,KAAK,CAACuJ,IAAN,CAAW,KAAKvF,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KApZkB;;AAAA,SAihCnBgB,aAjhCmB,GAihCH,CAAC5D,SAAD,EAAYC,SAAZ,KAA0B;AACtC,UAAID,SAAS,KAAK,IAAlB,EAAwB;AACpB,cAAM6D,cAAc,GAAG,KAAK9F,KAAL,CAAW8F,cAAX,IAA6B,EAApD;AACAA,QAAAA,cAAc,CAAC5D,SAAD,CAAd,GAA4BD,SAA5B;AACA,aAAKzB,QAAL,CAAc;AAAEsF,UAAAA;AAAF,SAAd;AACH;;AAED,UAAI5D,SAAS,KAAK,kBAAlB,EAAsC;AAClC,cAAMC,cAAc,GAAG;AAEnBG,UAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4CC,eAF1C;AAGnBZ,UAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,CAAyCD,YAHpC;AAInBE,UAAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4CD,eAJ1C;AAKnBmE,UAAAA,gBAAgB,EAAE9D,SAAS,CAACG,KALT;AAMnBL,UAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QANR;AAOnBF,UAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB;AAPV,SAAvB;AASA,aAAKZ,KAAL,CAAW7C,+BAAX,CAA2C2E,cAA3C;AACH;;AACD,UAAID,SAAS,KAAK,oBAAlB,EAAwC;AAEpC,YAAIZ,GAAG,GAAGpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA7B,EAAuC,KAAKb,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBkB,QAA5F,CAAlC;AACA,YAAIoC,YAAY,GAAGjC,GAAG,CAACJ,QAAvB;AACA,YAAIsC,UAAU,GAAGlC,GAAG,CAACD,MAArB;AACA,YAAIoC,mBAAmB,GAAG,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAArG;AACA,YAAIqB,gBAAgB,GAAG,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA/F;AACA,YAAIgC,mBAAmB,GAAG,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAArG;AACA,YAAI+B,qBAAqB,GAAG,KAAKvD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAAzG;AACA,YAAIC,wBAAwB,GAAG,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,IAAoD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA/G;AACA,YAAIqD,oBAAoB,GAAG,KAAK3F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAA5B,IAAgD,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAAvG;AACA,YAAIC,aAAa,GAAG,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8B,SAA5B,IAAyC,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8B,SAAzF;AACA,YAAIgB,mBAAmB,GAAG,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAArG;AACA,YAAIe,8BAA8B,GAAG,KAAK3D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,IAA0D,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA3H;AACA,YAAIvB,UAAU,GAAG,EACb,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UADP;AACmBsC,UAAAA,YADnB;AACiCC,UAAAA,UADjC;AAC6CC,UAAAA,mBAD7C;AACkEC,UAAAA,gBADlE;AAEbC,UAAAA,mBAFa;AAEQC,UAAAA,qBAFR;AAE+BE,UAAAA,wBAF/B;AAEyDkC,UAAAA,oBAFzD;AAE+EE,UAAAA,aAF/E;AAE8FlC,UAAAA,8BAF9F;AAE8HD,UAAAA;AAF9H,SAAjB;AAIA,YAAIvC,SAAS,GAAG;AACZyC,UAAAA,SAAS,EAAE,GADC;AAEZ3B,UAAAA,eAAe,EAAG,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4CC,eAA5F,IAAgH,CAAC,CAFtH;AAGZZ,UAAAA,YAAY,EAAEwC,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,CAAyCD,YAAtF,CAAR,IAA+G,CAAC,CAHlH;AAIZE,UAAAA,eAAe,EAAEsC,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4CD,eAA5F,CAAR,IAAwH,CAAC,CAJ9H;AAKZsB,UAAAA,kBAAkB,EAAEgB,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,CAAgDb,kBAApG,CAAR,IAAmI,CAAC,CAL5I;AAMZiB,UAAAA,kBAAkB,EAAI,KAAK9D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA9C,KAAqEC,SAAvH,IAAqI,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA9C,KAAqE,GAA3M,GAAkNrC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA/C,CAAxN,GAA6R,IANrS;AAOZgC,UAAAA,kBAAkB,EAAElE,SAAS,CAACG,KAPlB;AAQZkC,UAAAA,mBAAmB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,GAAmD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD2B,mBAAjD,IAAwE,CAAC,CAA5H,GAAgI,IARzI;AASZzB,UAAAA,oBAAoB,EAAE,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,IAAoD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD4B,0BAArG,GAAkIzC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD4B,0BAAlD,CAAxI,GAAwN,IATlO;AAUZ6B,UAAAA,YAAY,EAAE,KAAK/F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAA5B,GAA+C,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAA5B,CAA6CG,YAA7C,KAA8D,CAAC,CAA/D,GAAmE,KAAK/F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoF,WAA5B,CAAwCC,GAAxC,CAA4CC,OAAO,IAAIA,OAAO,CAACH,YAA/D,EAA6EI,IAA7E,CAAkF,GAAlF,CAAnE,GAA4J1E,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAA5B,CAA6CG,YAA9C,CAAjN,GAA+Q,IAVjR;AAWZpD,UAAAA,SAAS,EAAE,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8B,SAA5B,GAAwC,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8B,SAA5B,CAAsCC,SAA9E,GAA0F,CAAC,CAX1F;AAYZwB,UAAAA,cAAc,EAAG,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4C2C,cAA5F,IAA+G,KAZnH;AAaZC,UAAAA,sBAAsB,EAAG,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDc,sBAApG,IAA+H,KAb3I;AAcZ1C,UAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QAdf;AAeb;AACCsF,UAAAA,OAAO,EAAE,IAhBG;AAiBZrB,UAAAA,UAAU,EAAE,IAjBA;AAkBZtC,UAAAA,0BAA0B,EAAE,CAAC,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,IAA0D,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,CAAuDM,0BAAjH,GACvB,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,CAAuDM,0BADhC,GAC6D,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAD1F,KACyH,CAAC;AAnB1I,SAAhB;;AAqBA,YAAIhB,SAAS,CAACc,eAAV,KAA8B,CAAC,CAA/B,IAAoCd,SAAS,CAACE,YAAV,KAA2B,CAAC,CAAhE,IAAqEF,SAAS,CAACI,eAAV,KAA8B,CAAC,CAApG,IACGJ,SAAS,CAAC2C,kBAAV,KAAiC,IADpC,IAC4C3C,SAAS,CAAC8C,mBAAV,KAAkC,CAAC,CAD/E,IACoF9C,SAAS,CAACqB,oBAAV,KAAmC,IADvH,IAEGe,qBAAqB,CAAC8C,aAAtB,KAAwC,IAF/C,EAEqD;AAEjDlF,UAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBF,GAAG,CAACJ,QAAzB;AACAM,UAAAA,SAAS,CAAC,KAAD,CAAT,GAAmBF,GAAG,CAACD,MAAvB;AACA,cAAIE,UAAU,GAAG;AACbN,YAAAA,UADa;AAEbO,YAAAA;AAFa,WAAjB;AAKA,eAAKnB,KAAL,CAAWjD,iBAAX,CAA6BmE,UAA7B;AACH;AACJ;AACJ,KAzlCkB;;AAAA,SA0lCnBoF,cA1lCmB,GA0lCF,MAAM;AACnB,UAAIC,SAAS,GAAG,KAAKvG,KAAL,CAAWJ,KAAX,CAAiB2G,SAAjC;AACA,UAAIC,UAAU,GAAG,IAAjB;AACA,UAAIC,SAAS,GAAG,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB6G,SAAjC;AACA,UAAIhB,cAAc,GAAG,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAtC;;AACA,UAAI,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB2G,SAArB,EAAgC;AAC5BA,QAAAA,SAAS,GAAG,KAAZ;AACH,OAFD,MAEO;AACHE,QAAAA,SAAS,GAAG,KAAZ;AACAhB,QAAAA,cAAc,GAAG,EAAjB;AACH;;AAED,YAAMrD,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE9D,cADK;AAEf+B,QAAAA,IAAI,EAAE;AAAEmG,UAAAA,SAAF;AAAahB,UAAAA,cAAb;AAA6BiB,UAAAA,UAAU,EAAE,IAAzC;AAA+CH,UAAAA,SAA/C;AAAyDC,UAAAA;AAAzD;AAFS,OAAnB;AAIA,WAAKxG,KAAL,CAAW1D,WAAX,CAAuB8F,UAAvB;AACH,KA3mCkB;;AAAA,SA6mCnBuE,aA7mCmB,GA6mCH,MAAM;AAElB,UAAI1F,GAAG,GAAGpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BsC,YAA7B,EAA2C,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuC,UAAvE,EAAmF,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkB,QAApG,CAAlC;AACA,YAAMI,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE,CADA;AAEP6B,UAAAA,MAAM,EAAE,KAAKjD,KAAL,CAAWJ,KAAX,CAAiBqD,MAFlB;AAGP2D,UAAAA,cAAc,EAAE,KAAK5G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDD,cAH5D;AAIPhD,UAAAA,SAAS,EAAE,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDC,SAJvD;AAKPC,UAAAA,sBAAsB,EAAE,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDG,sBALpE;AAMPC,UAAAA,oBAAoB,EAAE,KAAKjH,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDK,oBANlE;AAOPC,UAAAA,GAAG,EAAE,KAAKnH,KAAL,CAAWJ,KAAX,CAAiBwH,QAAjB,CAA0B,EAA1B,CAPE;AAQPnF,UAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eAR7G;AASP8D,UAAAA,YAAY,EAAE,KAAK/F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAA5B,GACV,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAA5B,CAA6CG,YAA7C,KAA8D,CAAC,CAA/D,GACI,KAAK/F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoF,WAA5B,CAAwCC,GAAxC,CAA4CC,OAAO,IAAIA,OAAO,CAACH,YAA/D,EAA6EI,IAA7E,CAAkF,GAAlF,CADJ,GAEI1E,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAA5B,CAA6CG,YAA9C,CAHA,GAIV,IAbG;AAcPpD,UAAAA,SAAS,EAAE,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiF,aAA5B,IAA6C,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiF,aAA5B,CAA0ClD,SAd3F;AAePmB,UAAAA,kBAAkB,EAAErC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA/C,CAfnB;AAgBP7B,UAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eAhB7G;AAiBPZ,UAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,IAAgD,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,CAA6ChC,YAjBpG;AAkBPE,UAAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgD/B,eAlB7G;AAoBPiB,UAAAA,oBAAoB,EAAE,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD4B,0BApBhE;AAqBPC,UAAAA,cAAc,EAAG,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDa,cAApG,IAAuH,KArBhI;AAsBPC,UAAAA,sBAAsB,EAAG,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDc,sBAApG,IAA+H,KAtBhJ;AAuBPzD,UAAAA,KAAK,EAAEM,GAAG,CAACJ,QAvBJ;AAwBPE,UAAAA,GAAG,EAAEE,GAAG,CAACD,MAxBF;AAyBPU,UAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QAzBpB;AA0BPuG,UAAAA,MAAM,EAAE,kBA1BD;AA2BP5E,UAAAA,0BAA0B,EAAG,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAA5B,IAA0D,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAAvF,IAAsH,CAAC;AA3B5I,SADI;AA8Bff,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB;AA9BZ,OAAnB;AAgCA,WAAKd,KAAL,CAAW1C,qBAAX,CAAiC4D,UAAU,CAACC,SAA5C,EAAuD,KAAKnB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAxE;AACH,KAjpCkB;;AAAA,SAkpCnB0G,oBAlpCmB,GAkpCI,MAAM;AAEzB,UAAIrG,GAAG,GAAGpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BsC,YAA7B,EAA2C,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuC,UAAvE,EAAmF,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkB,QAApG,CAAlC;AACA,YAAMI,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACP8B,UAAAA,MAAM,EAAE,KAAKjD,KAAL,CAAWJ,KAAX,CAAiBqD,MADlB;AAEP2D,UAAAA,cAAc,EAAE,KAAK5G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDD,cAF5D;AAGPhD,UAAAA,SAAS,EAAE,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDC,SAHvD;AAIPC,UAAAA,sBAAsB,EAAE,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDG,sBAJpE;AAKPC,UAAAA,oBAAoB,EAAE,KAAKjH,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDK,oBALlE;AAMPC,UAAAA,GAAG,EAAE,KAAKnH,KAAL,CAAWJ,KAAX,CAAiBwH,QAAjB,CAA0B,EAA1B,CANE;AAOPnF,UAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eAP7G;AAQR;AACC;AACA8D,UAAAA,YAAY,EAAE,KAAK/F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAA5B,GACV,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAA5B,CAA6CG,YAA7C,KAA8D,CAAC,CAA/D,GACI,KAAK/F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoF,WAA5B,CAAwCC,GAAxC,CAA4CC,OAAO,IAAIA,OAAO,CAACH,YAA/D,EAA6EI,IAA7E,CAAkF,GAAlF,CADJ,GAEI1E,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgF,gBAA5B,CAA6CG,YAA9C,CAHA,GAIV,IAdG;AAePpD,UAAAA,SAAS,EAAE,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiF,aAA5B,IAA6C,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiF,aAA5B,CAA0ClD,SAf3F;AAgBP;AACA;AACA;AACA;AAED;AACCmB,UAAAA,kBAAkB,EAAErC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA/C,CAtBnB;AAuBP7B,UAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eAvB7G;AAwBPZ,UAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,IAAgD,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,CAA6ChC,YAxBpG;AAyBPE,UAAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgD/B,eAzB7G;AA0BPgG,UAAAA,qBAAqB,EAAE,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDmE,qBA1BnH;AA2BP/E,UAAAA,oBAAoB,EAAE,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD4B,0BA3BhE;AA4BPC,UAAAA,cAAc,EAAG,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDa,cAApG,IAAuH,KA5BhI;AA6BPC,UAAAA,sBAAsB,EAAG,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDc,sBAApG,IAA+H,KA7BhJ;AA8BPzD,UAAAA,KAAK,EAAEM,GAAG,CAACJ,QA9BJ;AA+BPE,UAAAA,GAAG,EAAEE,GAAG,CAACD,MA/BF;AAgCPU,UAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QAhCpB;AAiCP;AACA;AACA0G,UAAAA,WAAW,EAAE,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDC,SAnCzD;AAoCPjE,UAAAA,kBAAkB,EAAE,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,CAAgDb,kBApChH;AAqCP4E,UAAAA,eAAe,EAAEhI,UAAU,CAACiI,SArCrB;AAsCPC,UAAAA,eAAe,EAAE,WAtCV;AAuCP5B,UAAAA,YAAY,EAAE,CAAC,CAvCR;AAwCP3E,UAAAA,KAAK,EAAE,CAxCA;AAyCPqB,UAAAA,0BAA0B,EAAG,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAA5B,IAA0D,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAAvF,IAAsH,CAAC;AAzC5I,SADI;AA4Cff,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB;AA5CZ,OAAnB;AA8CA,WAAKd,KAAL,CAAWhD,sBAAX,CAAkCkE,UAAU,CAACC,SAA7C,EAAwD,KAAKnB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAzE;AAIH,KAvsCkB;;AAAA,SAwsCnBgH,sBAxsCmB,GAwsCOP,MAAD,IAAY;AAEjC,UAAIpG,GAAG,GAAGpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BsC,YAA7B,EAA2C,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuC,UAAvE,EAAmF,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkB,QAApG,CAAlC;AAEA,YAAMI,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACP8B,UAAAA,MAAM,EAAE,KAAKjD,KAAL,CAAWJ,KAAX,CAAiBqD,MADlB;AAENW,UAAAA,SAAS,EAAE,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDC,SAFxD;AAGPF,UAAAA,cAAc,EAAE,KAAK5G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDD,cAH5D;AAIPG,UAAAA,sBAAsB,EAAE,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDG,sBAJpE;AAKPC,UAAAA,oBAAoB,EAAE,KAAKjH,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDK,oBALlE;AAOV;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEApD,UAAAA,kBAAkB,EAAErC,MAAM,CAACrD,iBAAiB,CAAC4F,QAAnB,CAnBnB;AAoBP/B,UAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eApB7G;AAqBPZ,UAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,IAAgD,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,CAA6ChC,YArBpG;AAsBPE,UAAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgD/B,eAtB7G;AAwBPiB,UAAAA,oBAAoB,EAAE,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD4B,0BAxBhE;AAyBPC,UAAAA,cAAc,EAAG,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDa,cAApG,IAAuH,KAzBhI;AA0BPC,UAAAA,sBAAsB,EAAG,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDc,sBAApG,IAA+H,KA1BhJ;AA2BPzD,UAAAA,KAAK,EAAEM,GAAG,CAACJ,QA3BJ;AA4BPE,UAAAA,GAAG,EAAEE,GAAG,CAACD,MA5BF;AA6BPI,UAAAA,KAAK,EAAE,CA7BA;AA8BPM,UAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QA9BpB;AA+BP;AACA;AACAuG,UAAAA,MAjCO;AAkCP5E,UAAAA,0BAA0B,EAAG,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAA5B,IAA0D,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAAvF,IAAsH,CAAC;AAlC5I,SADI;AAqCff,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB;AArCZ,OAAnB;AAuCA,WAAKd,KAAL,CAAW1C,qBAAX,CAAiC4D,UAAU,CAACC,SAA5C,EAAuD,KAAKnB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAxE;AAIH,KAvvCkB;;AAAA,SAwvCnBiH,gBAxvCmB,GAwvCA,MAAM;AACrB,UAAId,sBAAsB,GAAG,EAA7B;AACA,UAAIE,oBAAoB,GAAG,EAA3B;AACA,UAAIrD,SAAS,GAAG,EAAhB;;AACA,UAAI,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAA5B,IAA6C,KAAK9H,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAA5B,CAA0CzC,MAA1C,KAAqD,CAAtG,EAAyG;AACrG,YAAI,KAAK1F,KAAL,CAAWiE,SAAX,IAAwB,KAAKjE,KAAL,CAAWiE,SAAX,CAAqByB,MAArB,GAA8B,CAA1D,EAA6D;AACzD,cAAI0C,MAAM,GAAG,KAAKpI,KAAL,CAAWiE,SAAX,CAAqBoE,MAArB,CAA4B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACnD,mBAAO,KAAKvI,KAAL,CAAWiE,SAAX,CAAqBuE,OAArB,CAA6BF,CAA7B,MAAoCC,KAA3C;AACH,WAFY,CAAb;AAGA,cAAIE,SAAS,GAAG,KAAKzI,KAAL,CAAWoH,sBAAX,CAAkCiB,MAAlC,CAAyC,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACnE,mBAAO,KAAKvI,KAAL,CAAWoH,sBAAX,CAAkCoB,OAAlC,CAA0CF,CAA1C,MAAiDC,KAAxD;AACH,WAFe,CAAhB;AAGA,cAAIG,IAAI,GAAG,KAAK1I,KAAL,CAAWsH,oBAAX,CAAgCe,MAAhC,CAAuC,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC5D,mBAAO,KAAKvI,KAAL,CAAWsH,oBAAX,CAAgCkB,OAAhC,CAAwCF,CAAxC,MAA+CC,KAAtD;AACH,WAFU,CAAX;AAIAtE,UAAAA,SAAS,GAAGmE,MAAM,CAAC9B,GAAP,CAAWqC,CAAC,IAAIA,CAAhB,EAAmBnC,IAAnB,CAAwB,GAAxB,CAAZ;AACAY,UAAAA,sBAAsB,GAAGqB,SAAS,CAACnC,GAAV,CAAcqC,CAAC,IAAIA,CAAnB,EAAsBnC,IAAtB,CAA2B,GAA3B,CAAzB;AACAc,UAAAA,oBAAoB,GAAGoB,IAAI,CAACpC,GAAL,CAASqC,CAAC,IAAIA,CAAd,EAAiBnC,IAAjB,CAAsB,GAAtB,CAAvB;AACA,cAAIlF,GAAG,GAAGpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BsC,YAA7B,EAA2C,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuC,UAAvE,EAAmF,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkB,QAApG,CAAlC;AACA,gBAAMI,UAAU,GAAG;AACfC,YAAAA,SAAS,EAAE;AACP8B,cAAAA,MAAM,EAAE,KAAKjD,KAAL,CAAWJ,KAAX,CAAiBqD,MADlB;AAEPW,cAAAA,SAAS,EAAEnC,MAAM,CAACmC,SAAD,CAFV;AAGPmD,cAAAA,sBAAsB,EAAEA,sBAHjB;AAIPE,cAAAA,oBAAoB,EAAEA,oBAJf;AAKPL,cAAAA,cAAc,EAAE,KAAK5G,KAAL,CAAWJ,KAAX,CAAiBoF,WAAjB,IAAgC,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBqF,aAAjD,GAAiE,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,IAC1E,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDD,cAD1C,GACyD,CAAC,CANnE;AAOPO,cAAAA,GAAG,EAAE,KAAKnH,KAAL,CAAWJ,KAAX,CAAiBwH,QAAjB,CAA0B,EAA1B,CAPE;AAQPtD,cAAAA,kBAAkB,EAAErC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA/C,CARnB;AASP7B,cAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eAT7G;AAUPY,cAAAA,kBAAkB,EAAE,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,CAAgDb,kBAVhH;AAWPxB,cAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,IAAgD,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,CAA6ChC,YAXpG;AAYPE,cAAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgD/B,eAZ7G;AAaPiB,cAAAA,oBAAoB,EAAE,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD4B,0BAbhE;AAcPC,cAAAA,cAAc,EAAG,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDa,cAApG,IAAuH,KAdhI;AAePC,cAAAA,sBAAsB,EAAG,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDc,sBAApG,IAA+H,KAfhJ;AAgBPzD,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAhBJ;AAiBPE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAjBF;AAkBP+D,cAAAA,UAAU,EAAE,KAlBL;AAmBPC,cAAAA,WAAW,EAAE,KAnBN;AAoBP5D,cAAAA,KAAK,EAAE,CApBA;AAqBPM,cAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QArBpB;AAsBP2B,cAAAA,0BAA0B,EAAG,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAA5B,IAA0D,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAAvF,IAAsH,CAAC;AAtB5I,aADI;AAyBff,YAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QAzBZ;AA0BfyH,YAAAA,SAAS,EAAE,SA1BI;AA2BfC,YAAAA,QAAQ,EAAE,SA3BK;AA4BfC,YAAAA,SAAS,EAAC,KAAKzI,KAAL,CAAWJ,KAAX,CAAiB6I;AA5BZ,WAAnB;AA+BI,gBAAM7H,UAAU,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UAApC;;AACA,cAAI3C,SAAS,CAAC,KAAK+B,KAAL,CAAWJ,KAAX,CAAiB8I,qBAAlB,EAAyC,KAAK1I,KAAL,CAAWJ,KAAX,CAAiBkB,QAAjB,CAA0B6H,SAAnE,EAA6E,KAAK3I,KAAL,CAAWJ,KAAX,CAAiBgJ,YAA9F,CAAb,EAA0H;AAEtH,kBAAMxG,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAE9D,cADK;AAEf+B,cAAAA,IAAI,EAAE;AACFiG,gBAAAA,SAAS,EAAE,IADT;AAEFsC,gBAAAA,UAAU,EAAE;AAAE3H,kBAAAA,UAAF;AAAcN,kBAAAA;AAAd,iBAFV;AAGF6H,gBAAAA,SAAS,EAAC,KAAKzI,KAAL,CAAWJ,KAAX,CAAiB6I,SAHzB;AAIFK,gBAAAA,UAAU,EAAE,KAAK9I,KAAL,CAAWJ,KAAX,CAAiBkJ;AAJ3B;AAFS,aAAnB;AASA,iBAAK9I,KAAL,CAAW1D,WAAX,CAAuB8F,UAAvB;AACH,WAZD,MAaK;AACD,gBAAI,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBqF,aAArB,EAAoC;AAChC,mBAAKjF,KAAL,CAAWxC,uBAAX,CAAmC,KAAKwC,KAAL,CAAWJ,KAAX,CAAiBkB,QAApD,EAA8D,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAA/E,EAA2FM,UAAU,CAACC,SAAtG;AACH,aAFD,MAGK,IAAI,KAAKnB,KAAL,CAAWJ,KAAX,CAAiBoF,WAArB,EAAkC;AACnC,mBAAKhF,KAAL,CAAWvC,oBAAX,CAAiC,KAAKuC,KAAL,CAAWJ,KAAX,CAAiBkB,QAAlD,EAA4D,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAA7E,EAAyFM,UAAU,CAACC,SAApG;AACH,aAFI,MAGA;AACD,mBAAKnB,KAAL,CAAWvD,yBAAX,CAAqC,KAAKuD,KAAL,CAAWJ,KAAX,CAAiBkB,QAAtD,EAAgE,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjF,EAA6FM,UAAU,CAACC,SAAxG;AACH;AACJ;AAER,SAxED,MAyEK;AACDnF,UAAAA,KAAK,CAACqI,IAAN,CAAW,KAAKrE,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAAX;AACH;AACJ,OA7ED,MA8EK;AACDxI,QAAAA,KAAK,CAACqI,IAAN,CAAW,KAAKrE,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KA70CkB;;AAAA,SAw8CnBuE,YAx8CmB,GAw8CJ,MAAM;AACb,YAAM7H,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AAAEO,UAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB;AAA7B,SADI;AAEfqG,QAAAA,GAAG,EAAE,KAAKnH,KAAL,CAAWJ,KAAX,CAAiBwH,QAAjB,CAA0B,EAA1B,CAFU;AAGf4B,QAAAA,QAAQ,EAAC,IAHM;AAIfpC,QAAAA,cAAc,EAAE,KAAK5G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDD,cAJpD;AAKfqC,QAAAA,WAAW,EAAE,KAAKjJ,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDC,SALjD;AAMf7E,QAAAA,eAAe,EAAE,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eANrG;AAOfP,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB;AAPZ,OAAnB;AAWA,WAAKd,KAAL,CAAW3C,kBAAX,CAA8B6D,UAA9B;AAEP,KAt9CkB;;AAAA,SAw9CnBgI,UAx9CmB,GAw9CN,MAAM;AACf,WAAKnG,SAAL,CAAeC,OAAf,CAAuBjB,KAAvB,GAA+B,EAA/B;AACA,aAAO,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B,cAA5B,CAAP;AAEA,WAAKZ,KAAL,CAAWJ,KAAX,CAAiBqD,MAAjB,GAA0B,KAA1B;AACA,UAAI;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA,UAAhB;AAA4BC,QAAAA,mBAA5B;AAAiDC,QAAAA,gBAAjD;AAAmEC,QAAAA,mBAAnE;AACAC,QAAAA,qBADA;AACuBE,QAAAA,wBADvB;AAEA;AACAC,QAAAA;AAHA,UAGwB,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAH7C;AAIA,UAAIA,UAAU,GAAG,EACb,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UADP;AACmBsC,QAAAA,YADnB;AACiCC,QAAAA,UADjC;AAC6CC,QAAAA,mBAD7C;AACkEC,QAAAA,gBADlE;AACoFC,QAAAA,mBADpF;AACyGC,QAAAA,qBADzG;AACgIE,QAAAA,wBADhI;AAEb;AACAC,QAAAA;AAHa,OAAjB;AAKA,UAAIvC,SAAS,GAAG;AACZyC,QAAAA,SAAS,EAAE,GADC;AAEZO,QAAAA,cAAc,EAAGb,mBAAmB,IAAIA,mBAAmB,CAACa,cAA5C,IAA+D,KAFnE;AAGZC,QAAAA,sBAAsB,EAAGd,mBAAmB,IAAIA,mBAAmB,CAACc,sBAA5C,IAAuE,KAHnF;AAIZnC,QAAAA,eAAe,EAAGmB,mBAAmB,IAAIA,mBAAmB,CAACnB,eAA5C,IAAgE,CAAC,CAJtE;AAKZZ,QAAAA,YAAY,EAAGgC,gBAAgB,IAAIA,gBAAgB,CAAChC,YAAtC,IAAuD,CAAC,CAL1D;AAMZE,QAAAA,eAAe,EAAG+B,mBAAmB,IAAIA,mBAAmB,CAAC/B,eAA5C,IAAgE,CAAC,CANtE;AAOZsB,QAAAA,kBAAkB,EAAGa,mBAAmB,IAAIA,mBAAmB,CAACb,kBAA5C,IAAmE,CAAC,CAP5E;AAQZiB,QAAAA,kBAAkB,EAAIP,qBAAqB,IAAIA,qBAAqB,CAACO,kBAAtB,KAA6CC,SAAvE,IAAqFR,qBAAqB,CAACO,kBAAtB,KAA6C,GAAnI,GAA0IrC,MAAM,CAAC8B,qBAAqB,CAACO,kBAAvB,CAAN,GAAmD,GAAnD,GAAyDrC,MAAM,CAACrD,iBAAiB,CAAC4F,QAAnB,CAAzM,GAAwO,IARhP;AASZC,QAAAA,mBAAmB,EAAER,wBAAwB,GAAGA,wBAAwB,CAACQ,mBAAzB,IAAgD,CAAC,CAApD,GAAwD,IATzF;AAUZzB,QAAAA,oBAAoB,EAAEiB,wBAAwB,IAAIA,wBAAwB,CAACS,0BAArD,GAAkFzC,MAAM,CAACgC,wBAAwB,CAACS,0BAA1B,CAAxF,GAAgJ,CAAC,CAV3J;AAWZ;AACA;AACAxC,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QAbf;AAcZ2B,QAAAA,0BAA0B,EAAG,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B+C,8BAA5B,IAA8D,KAAK3D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B+C,8BAA5B,CAA2DlB,0BAA1H,IAAyJ,CAAC;AAd1K,OAAhB;;AAgBA,UAAItB,SAAS,CAACc,eAAV,KAA8B,CAAC,CAA/B,IAAoCd,SAAS,CAACE,YAAV,KAA2B,CAAC,CAAhE,IAAqEF,SAAS,CAACI,eAAV,KAA8B,CAAC,CAApG,IACGJ,SAAS,CAAC2C,kBAAV,KAAiC,IADpC,IAC4C3C,SAAS,CAAC8C,mBAAV,KAAkC,CAAC,CAD/E,IACoF9C,SAAS,CAACqB,oBAAV,KAAmC,IADvH,CAEA;AAFA,SAGGrB,SAAS,CAAC0B,kBAAV,KAAiC,CAAC,CAHzC,EAIE;AAEE,YAAI5B,GAAG,GAAGpD,wBAAwB,CAACqF,YAAD,EAAeC,UAAf,EAA2B,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkB,QAA5C,CAAlC;AACAK,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBF,GAAG,CAACJ,QAAzB;AACAM,QAAAA,SAAS,CAAC,KAAD,CAAT,GAAmBF,GAAG,CAACD,MAAvB;AACA,YAAIE,UAAU,GAAG;AACbN,UAAAA,UADa;AAEbO,UAAAA;AAFa,SAAjB;AAIA,aAAKnB,KAAL,CAAWjD,iBAAX,CAA6BmE,UAA7B;AACH,OAdD,MAcO;AACHlF,QAAAA,KAAK,CAACqI,IAAN,CAAW,KAAKrE,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KAvgDkB;;AAAA,SAwgDnBgC,UAxgDmB,GAwgDN,MAAM;AACf,UAAID,SAAS,GAAG,KAAKvG,KAAL,CAAWJ,KAAX,CAAiB2G,SAAjC;AACA,UAAI4C,SAAS,GAAG,KAAKnJ,KAAL,CAAWJ,KAAX,CAAiBuJ,SAAjC;AACA,UAAI1D,cAAc,GAAG,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAtC;;AACA,UAAI,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB2G,SAArB,EAAgC;AAC5B,YAAI,KAAKvG,KAAL,CAAWJ,KAAX,CAAiB6I,SAAjB,KAA+B,QAAnC,EAA6C;AACzClC,UAAAA,SAAS,GAAG,KAAZ;AACA4C,UAAAA,SAAS,GAAG,KAAZ;AACA1D,UAAAA,cAAc,GAAG,EAAjB;AACH,SAJD,MAKK;AACDc,UAAAA,SAAS,GAAG,KAAZ;AACAd,UAAAA,cAAc,CAAC,OAAD,CAAd,GAA0B,CAA1B;AACAA,UAAAA,cAAc,CAAC,eAAD,CAAd,GAAkC,EAAlC;AACAA,UAAAA,cAAc,CAAC,eAAD,CAAd,GAAkC,EAAlC;AACAA,UAAAA,cAAc,CAAC,aAAD,CAAd,GAAgC,EAAhC;AACH;AACJ,OAbD,MAcK;AACD0D,QAAAA,SAAS,GAAG,KAAZ;AACA1D,QAAAA,cAAc,GAAG,EAAjB;AACH;;AAED,YAAMrD,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE9D,cADK;AAEf+B,QAAAA,IAAI,EAAE;AAAE6I,UAAAA,SAAF;AAAa5C,UAAAA,SAAb;AAAwBd,UAAAA,cAAxB;AAAwCiB,UAAAA,UAAU,EAAE;AAApD;AAFS,OAAnB;AAIA,WAAK1G,KAAL,CAAW1D,WAAX,CAAuB8F,UAAvB;AAEH,KAriDkB;;AAAA,SAsiDnBgH,aAtiDmB,GAsiDH,MAAM;AAClB,UAAID,SAAS,GAAG,KAAhB;AACA,UAAI7D,UAAU,GAAG,KAAjB;AACA,UAAIG,cAAc,GAAG,EAArB;AACA,WAAKtF,QAAL,CAAc;AAAEmF,QAAAA,UAAF;AAAc6D,QAAAA,SAAd;AAAyB1D,QAAAA;AAAzB,OAAd;AACH,KA3iDkB;;AAAA,SA4iDnB4D,eA5iDmB,GA4iDAnJ,KAAD,IAAW;AACzB,UAAIuF,cAAc,GAAG,KAAK9F,KAAL,CAAW8F,cAAX,IAA6B,EAAlD;AACAA,MAAAA,cAAc,CAACvF,KAAK,CAACoJ,MAAN,CAAaC,IAAd,CAAd,GAAoCrJ,KAAK,CAACoJ,MAAN,CAAavH,KAAjD;AACA,WAAK5B,QAAL,CAAc;AAAEsF,QAAAA;AAAF,OAAd;AACH,KAhjDkB;;AAAA,SAijDnB+D,aAjjDmB,GAijDH,MAAM;AAClB,YAAMtI,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACP,sBAAY,EACR,GAAG,KAAKnB,KAAL,CAAWJ,KAAX,CAAiBkB,QADZ;AAER2I,YAAAA,OAAO,EAAE,KAAK9J,KAAL,CAAW8F,cAAX,CAA0B,eAA1B,CAFD;AAGRiE,YAAAA,WAAW,EAAE,KAAK/J,KAAL,CAAW8F,cAAX,CAA0B,aAA1B,KAA4C,KAAK9F,KAAL,CAAW8F,cAAX,CAA0B,aAA1B,EAAyC1D,KAH1F;AAIR4H,YAAAA,iBAAiB,EAAE,KAAKhK,KAAL,CAAW8F,cAAX,CAA0B,aAA1B,KAA4C,KAAK9F,KAAL,CAAW8F,cAAX,CAA0B,aAA1B,EAAyCmE;AAJhG,WADL;AAQPC,UAAAA,QAAQ,EAAE,KAAKlK,KAAL,CAAW8F,cAAX,CAA0B,eAA1B;AARH,SADI;AAWfoD,QAAAA,UAAU,EAAE,KAAK7I,KAAL,CAAWJ,KAAX,CAAiBiJ;AAXd,OAAnB;AAaA,WAAK7I,KAAL,CAAWzD,uBAAX,CAAmC2E,UAAnC,EAA+C,WAA/C;AACH,KAhkDkB;;AAAA,SAikDnB4I,eAjkDmB,GAikDD,CAAC5J,KAAD,EAAQkB,KAAR,EAAe2I,WAAf,KAA+B;AAC7C,YAAMC,OAAO,GAAG9J,KAAK,CAAC+J,cAAN,CAAqBX,MAArB,CAA4BU,OAA5C;;AACA,UAAI5I,KAAK,KAAK2C,SAAd,EAAyB;AACrB,aAAKpE,KAAL,CAAWU,UAAX,CAAsBC,IAAtB,CAA2B2F,GAA3B,CAA+B/D,IAAI,IAAI;AACnC,cAAIA,IAAI,CAAC0B,SAAL,KAAmB1D,KAAK,CAACgK,QAAN,CAAetG,SAAtC,EAAiD;AAC7C1B,YAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACH;AAEJ,SALD;AAMA,YAAII,QAAQ,GAAGlK,KAAK,CAACgK,QAAN,CAAetG,SAA9B;AACA,YAAIyG,eAAe,GAAGnK,KAAK,CAACgK,QAAN,CAAeG,eAArC;AACA,YAAIC,eAAe,GAAGpK,KAAK,CAACgK,QAAN,CAAeI,eAArC;AACA,cAAMC,WAAW,GAAG;AAChBlI,UAAAA,QAAQ,EAAE9D,cADM;AAEhB+B,UAAAA,IAAI,EAAE;AAAE+J,YAAAA,eAAF;AAAmBC,YAAAA;AAAnB;AAFU,SAApB;AAIA,aAAKtK,KAAL,CAAW1D,WAAX,CAAuBiO,WAAvB;AAEA,aAAKC,0BAAL,CAAgCtK,KAAhC,EAAuCkK,QAAvC,EAAiDL,WAAjD;AACH,OAjBD,MAkBK;AACD,YAAIzJ,IAAI,GAAG,EAAX;AACAJ,QAAAA,KAAK,CAACuK,SAAN,CAAgBxE,GAAhB,CAAoB/D,IAAI,IAAI;AACxB5B,UAAAA,IAAI,CAACoK,IAAL,CAAU;AAAE,yBAAaxI,IAAI,CAAC0B;AAApB,WAAV;AACH,SAFD;AAGA,aAAK4G,0BAAL,CAAgCtK,KAAhC,EAAuCI,IAAvC,EAA6CyJ,WAA7C;AAEH;AAEJ,KA9lDkB;;AAAA,SA+lDnBS,0BA/lDmB,GA+lDU,CAACtK,KAAD,EAAQkK,QAAR,EAAkBL,WAAlB,KAAkC;AAC3D,YAAMC,OAAO,GAAG9J,KAAK,CAAC+J,cAAN,CAAqBX,MAArB,CAA4BU,OAA5C;AACA,UAAIW,aAAa,GAAG,EAApB;AACA,UAAI/G,SAAS,GAAGwG,QAAQ,KAAKrG,SAAb,GAAyB7D,KAAK,CAACuK,SAAN,CAAgB,CAAhB,EAAmB7G,SAA5C,GAAwDwG,QAAxE;;AACA,UAAIxG,SAAS,CAACyB,MAAV,KAAqB,CAArB,IAA0BzB,SAAS,CAACyB,MAAV,KAAqBtB,SAAnD,EAA8D;AAC1D,aAAK/D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6ChH,SAA7C,EAAwDqC,GAAxD,CAA4D/D,IAAI,IAAI;AAEhEA,UAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;;AACA,cAAI,CAACW,aAAa,CAACE,QAAd,CAAuB3I,IAAI,CAAC6E,sBAA5B,CAAL,EAA0D;AACtD4D,YAAAA,aAAa,CAACD,IAAd,CAAmB;AAAE,wCAA0BxI,IAAI,CAAC6E;AAAjC,aAAnB;AACH;AAEJ,SAPD;AAQA,aAAK/G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAA5B,CAA0C7B,GAA1C,CAA8C3F,IAAI,IAAI;AAClD,cAAIA,IAAI,CAACsD,SAAL,KAAmBA,SAAvB,EAAkC;AAC9BtD,YAAAA,IAAI,CAAC6J,QAAL,GAAgBH,OAAhB;AACH;AACJ,SAJD;AAMA,aAAKc,6BAAL,CAAmC5K,KAAnC,EAA0CyK,aAA1C,EAAyDZ,WAAzD;AACH,OAhBD,MAiBK;AACDnG,QAAAA,SAAS,CAACqC,GAAV,CAAclE,KAAK,IAAI;AACnB,eAAK/B,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C7I,KAAK,CAAC6B,SAAnD,EAA8DqC,GAA9D,CAAkE/D,IAAI,IAAI;AACtEA,YAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;;AACA,gBAAI,CAACW,aAAa,CAACE,QAAd,CAAuB3I,IAAI,CAAC6E,sBAA5B,CAAL,EAA0D;AACtD4D,cAAAA,aAAa,CAACD,IAAd,CAAmB;AAAE,0CAA0BxI,IAAI,CAAC6E;AAAjC,eAAnB;AACH;AACJ,WALD;AAOH,SARD;AASA,aAAK+D,6BAAL,CAAmC5K,KAAnC,EAA0CyK,aAA1C,EAAyDZ,WAAzD;AACH;AAEJ,KAjoDkB;;AAAA,SAmoDnBe,6BAnoDmB,GAmoDa,CAAC5K,KAAD,EAAQyK,aAAR,EAAuBZ,WAAvB,KAAuC;AACnE,YAAMC,OAAO,GAAG9J,KAAK,CAAC+J,cAAN,CAAqBX,MAArB,CAA4BU,OAA5C;AACA,UAAIe,qBAAqB,GAAG,EAA5B;;AACA,UAAIJ,aAAa,KAAK5G,SAAtB,EAAiC;AAC7BgH,QAAAA,qBAAqB,GAAGJ,aAAxB;AACAI,QAAAA,qBAAqB,CAAC9E,GAAtB,CAA0BlE,KAAK,IAC3B,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoK,WAA5B,CAAwCjJ,KAAK,CAACgF,sBAA9C,EAAsEd,GAAtE,CAA0E/D,IAAI,IAAI;AAC9EA,UAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACA,eAAKiB,WAAL,CAAiB/I,IAAjB,EAAuB6H,WAAvB;AAEA,iBAAO7H,IAAP;AACH,SALD,CADJ;AAQH,OAVD,MAWK;AACDhC,QAAAA,KAAK,CAACuK,SAAN,CAAgBxE,GAAhB,CAAoBlE,KAAK,IACrB,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoK,WAA5B,CAAwCjJ,KAAK,CAACgF,sBAA9C,EAAsEd,GAAtE,CAA0E/D,IAAI,IAAI;AAC9EA,UAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACA,eAAKiB,WAAL,CAAiB/I,IAAjB,EAAuB6H,WAAvB;AACA,iBAAO7H,IAAP;AACH,SAJD,CADJ;AAOA,aAAKlC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1K,KAAK,CAACuK,SAAN,CAAgB,CAAhB,EAAmB7G,SAAhE,EAA2EqC,GAA3E,CAA+E/D,IAAI,IAAI;AACnF,cAAIhC,KAAK,CAACuK,SAAN,CAAgB,CAAhB,EAAmB1D,sBAAnB,KAA8C7E,IAAI,CAAC6E,sBAAvD,EAA+E;AAC3E7E,YAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACH;AACJ,SAJD;AAKA,YAAI1J,IAAI,GAAG,KAAKN,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1K,KAAK,CAACuK,SAAN,CAAgB,CAAhB,EAAmB7G,SAAhE,EAA2EsH,KAA3E,CAAiFhJ,IAAI,IAAI;AAChG,iBAAOA,IAAI,CAACiI,QAAL,KAAkB,IAAzB;AACH,SAFU,CAAX;;AAGA,YAAI7J,IAAI,KAAK,IAAb,EAAmB;AACf,eAAKN,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAA5B,CAA0C7B,GAA1C,CAA8C/D,IAAI,IAAI;AAClD,gBAAIhC,KAAK,CAACuK,SAAN,CAAgB,CAAhB,EAAmB7G,SAAnB,KAAiC1B,IAAI,CAAC0B,SAA1C,EAAqD;AACjD1B,cAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACH;AACJ,WAJD;AAKH,SAND,MAOK;AACD,eAAKhK,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAA5B,CAA0C7B,GAA1C,CAA8C/D,IAAI,IAAI;AAClD,gBAAIhC,KAAK,CAACuK,SAAN,CAAgB,CAAhB,EAAmB7G,SAAnB,KAAiC1B,IAAI,CAAC0B,SAA1C,EAAqD;AACjD1B,cAAAA,IAAI,CAACiI,QAAL,GAAgB,KAAhB;AACH;AACJ,WAJD;AAKH;AACJ;AACJ,KAhrDkB;;AAAA,SAirDnBgB,qBAjrDmB,GAirDMjL,KAAD,IAAW;AAC/B,YAAM8J,OAAO,GAAG9J,KAAK,CAAC+J,cAAN,CAAqBX,MAArB,CAA4BU,OAA5C;;AACA,UAAI9J,KAAK,CAACuK,SAAN,CAAgBpF,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,aAAK1F,KAAL,CAAWU,UAAX,CAAsBC,IAAtB,CAA2B2F,GAA3B,CAA+B/D,IAAI,IAAI;AACnCA,UAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACA,iBAAO9H,IAAP;AACH,SAHD;AAIA,aAAK4H,eAAL,CAAqB5J,KAArB,EAA4B,CAA5B,EAA+B8J,OAA/B;AACH,OAND,MAOK;AACD,aAAK7J,QAAL,CAAc;AAAEyD,UAAAA,SAAS,EAAE,EAAb;AAAiBmD,UAAAA,sBAAsB,EAAE,EAAzC;AAA6CE,UAAAA,oBAAoB,EAAE;AAAnE,SAAd;AACH;AACJ,KA7rDkB;;AAAA,SA8rDnBmE,oBA9rDmB,GA8rDKlL,KAAD,IAAW;AAC9B,YAAM8J,OAAO,GAAG9J,KAAK,CAAC+J,cAAN,CAAqBX,MAArB,CAA4BU,OAA5C;AACA,WAAKhK,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1K,KAAK,CAACgK,QAAN,CAAetG,SAA5D,EAAuEqC,GAAvE,CAA2E/D,IAAI,IAAI;AAC/E,YAAIA,IAAI,CAAC0B,SAAL,KAAmB1D,KAAK,CAACgK,QAAN,CAAetG,SAAlC,IAA+C1B,IAAI,CAAC6E,sBAAL,KAAgC7G,KAAK,CAACgK,QAAN,CAAenD,sBAAlG,EAA0H;AACtH7E,UAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACH;AAEJ,OALD;AAMA,UAAI1J,IAAI,GAAG,KAAKN,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1K,KAAK,CAACgK,QAAN,CAAetG,SAA5D,EAAuEsH,KAAvE,CAA6EhJ,IAAI,IAAI;AAC5F,eAAOA,IAAI,CAACmJ,OAAL,KAAiB,IAAxB;AACH,OAFU,CAAX;;AAGA,UAAI/K,IAAI,KAAK,IAAb,EAAmB;AACf,aAAKN,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAA5B,CAA0C7B,GAA1C,CAA8C/D,IAAI,IAAI;AAClD,cAAIhC,KAAK,CAACgK,QAAN,CAAetG,SAAf,KAA6B1B,IAAI,CAAC0B,SAAtC,EAAiD;AAC7C1B,YAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACH;AACJ,SAJD;AAKA,aAAKhK,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoK,WAA5B,CAAwC9K,KAAK,CAACgK,QAAN,CAAenD,sBAAvD,EAA+Ed,GAA/E,CAAmF/D,IAAI,IAAI;AACvF,cAAIhC,KAAK,CAACgK,QAAN,CAAenD,sBAAf,KAA0C7E,IAAI,CAAC6E,sBAAnD,EAA2E;AACvE7E,YAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACA,iBAAKiB,WAAL,CAAiB/I,IAAjB;AACH;AACJ,SALD;AAMH,OAZD,MAaK;AACD,aAAKlC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoK,WAA5B,CAAwC9K,KAAK,CAACgK,QAAN,CAAenD,sBAAvD,EAA+Ed,GAA/E,CAAmF/D,IAAI,IAAI;AACvF,cAAIhC,KAAK,CAACgK,QAAN,CAAenD,sBAAf,KAA0C7E,IAAI,CAAC6E,sBAAnD,EAA2E;AACvE7E,YAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACA,iBAAKiB,WAAL,CAAiB/I,IAAjB;AACH;AACJ,SALD;AAMA,YAAI5B,IAAI,GAAG,KAAKN,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1K,KAAK,CAACgK,QAAN,CAAetG,SAA5D,EAAuEsH,KAAvE,CAA6EhJ,IAAI,IAAI;AAC5F,iBAAOA,IAAI,CAACiI,QAAL,KAAkB,IAAzB;AACH,SAFU,CAAX;;AAGA,YAAI7J,IAAI,KAAK,IAAb,EAAmB;AACf,eAAKN,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAA5B,CAA0C7B,GAA1C,CAA8C/D,IAAI,IAAI;AAClD,gBAAIhC,KAAK,CAACgK,QAAN,CAAetG,SAAf,KAA6B1B,IAAI,CAAC0B,SAAtC,EAAiD;AAC7C1B,cAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACH;AACJ,WAJD;AAKH,SAND,MAOK;AACD,eAAKhK,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAA5B,CAA0C7B,GAA1C,CAA8C/D,IAAI,IAAI;AAClD,gBAAIhC,KAAK,CAACgK,QAAN,CAAetG,SAAf,KAA6B1B,IAAI,CAAC0B,SAAtC,EAAiD;AAC7C1B,cAAAA,IAAI,CAACiI,QAAL,GAAgB,KAAhB;AACH;AACJ,WAJD;AAKH;AACJ;AACJ,KA/uDkB;;AAAA,SAgvDnBmB,uBAhvDmB,GAgvDQpL,KAAD,IAAW;AACjC,UAAIoI,CAAC,GAAG,EAAR;AACA,YAAM0B,OAAO,GAAG9J,KAAK,CAAC+J,cAAN,CAAqBX,MAArB,CAA4BU,OAA5C;AACA,WAAKhK,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoK,WAA5B,CAAwC9K,KAAK,CAACgK,QAAN,CAAenD,sBAAvD,EAA+Ed,GAA/E,CAAmF/D,IAAI,IAAI;AACvF,YAAIA,IAAI,CAAC+E,oBAAL,KAA8B/G,KAAK,CAACgK,QAAN,CAAejD,oBAAjD,EAAuE;AACnE/E,UAAAA,IAAI,CAACiI,QAAL,GAAgBH,OAAhB;AACA,eAAKiB,WAAL,CAAiB/I,IAAjB;AACH;AACJ,OALD;AAMA,WAAKlC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1K,KAAK,CAACgK,QAAN,CAAetG,SAA5D,EAAuEqC,GAAvE,CAA2E/D,IAAI,IAAI;AAE/E,YAAIA,IAAI,CAAC6E,sBAAL,KAAgC7G,KAAK,CAACgK,QAAN,CAAenD,sBAAnD,EAA2E;AACvE,cAAI,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoK,WAA5B,CAAwC9I,IAAI,CAAC6E,sBAA7C,CAAJ,EAA0E;AACtEuB,YAAAA,CAAC,GAAG,KAAKtI,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoK,WAA5B,CAAwC9I,IAAI,CAAC6E,sBAA7C,CAAJ;AACH;AACJ;AAEJ,OARD;AASA,UAAIwE,CAAC,GAAGjD,CAAC,CAACN,MAAF,CAASwD,CAAC,IAAIA,CAAC,CAACrB,QAAF,KAAe,IAA7B,CAAR;;AACA,UAAI7B,CAAC,CAACjD,MAAF,KAAakG,CAAC,CAAClG,MAAnB,EAA2B;AACvB,aAAKrF,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1K,KAAK,CAACgK,QAAN,CAAetG,SAA5D,EAAuEqC,GAAvE,CAA2E,CAACuF,CAAD,EAAIC,CAAJ,KAAU;AACjF,cAAID,CAAC,CAACzE,sBAAF,KAA6BwE,CAAC,CAAC,CAAD,CAAD,CAAKxE,sBAAtC,EAA8D;AAC1D,iBAAK/G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1K,KAAK,CAACgK,QAAN,CAAetG,SAA5D,EAAuE6H,CAAvE,EAA0EtB,QAA1E,GAAqF,IAArF;AACH;AACJ,SAJD;AAMH,OAPD,MAQK;AACD,aAAKnK,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1K,KAAK,CAACgK,QAAN,CAAetG,SAA5D,EAAuEqC,GAAvE,CAA2E,CAACuF,CAAD,EAAIC,CAAJ,KAAU;AACjF,cAAID,CAAC,CAACzE,sBAAF,KAA6B7G,KAAK,CAACgK,QAAN,CAAenD,sBAAhD,EAAwE;AACpE,iBAAK/G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1K,KAAK,CAACgK,QAAN,CAAetG,SAA5D,EAAuE6H,CAAvE,EAA0EtB,QAA1E,GAAqF,KAArF;AACH;AACJ,SAJD;AAKH;;AACD,WAAKxK,KAAL,CAAWU,UAAX,CAAsBC,IAAtB,CAA2B2F,GAA3B,CAA+B/D,IAAI,IAAI;AACnC,YAAIA,IAAI,CAAC0B,SAAL,KAAmB1D,KAAK,CAACgK,QAAN,CAAetG,SAAtC,EAAiD;AAC7C,cAAI,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1I,IAAI,CAAC0B,SAAlD,CAAJ,EAAkE;AAC9D0E,YAAAA,CAAC,GAAG,KAAKtI,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAA5B,CAA6C1I,IAAI,CAAC0B,SAAlD,CAAJ;AACH;AACJ;AAEJ,OAPD;AAQA,UAAI8H,EAAE,GAAGpD,CAAC,CAACN,MAAF,CAASwD,CAAC,IAAIA,CAAC,CAACrB,QAAF,KAAe,IAA7B,CAAT;;AACA,UAAI7B,CAAC,CAACjD,MAAF,KAAaqG,EAAE,CAACrG,MAApB,EAA4B;AACxB,aAAK1F,KAAL,CAAWU,UAAX,CAAsBC,IAAtB,CAA2B2F,GAA3B,CAA+B,CAACuF,CAAD,EAAIC,CAAJ,KAAU;AACrC,cAAID,CAAC,CAAC5H,SAAF,KAAgB8H,EAAE,CAAC,CAAD,CAAF,CAAM9H,SAA1B,EAAqC;AACjC,iBAAKjE,KAAL,CAAWU,UAAX,CAAsBC,IAAtB,CAA2BmL,CAA3B,EAA8BtB,QAA9B,GAAyC,IAAzC;AACH;AACJ,SAJD;AAKH,OAND,MAOK;AACD,aAAKxK,KAAL,CAAWU,UAAX,CAAsBC,IAAtB,CAA2B2F,GAA3B,CAA+B,CAACuF,CAAD,EAAIC,CAAJ,KAAU;AACrC,cAAID,CAAC,CAAC5H,SAAF,KAAgB1D,KAAK,CAACgK,QAAN,CAAetG,SAAnC,EAA8C;AAC1C,iBAAKjE,KAAL,CAAWU,UAAX,CAAsBC,IAAtB,CAA2BmL,CAA3B,EAA8BtB,QAA9B,GAAyC,KAAzC;AACH;AACJ,SAJD;AAKH;AACJ,KAzyDkB;;AAAA,SA0yDnBc,WA1yDmB,GA0yDL,CAAC/I,IAAD,EAAO6H,WAAP,KAAuB;AACjC,UAAInG,SAAS,GAAG,KAAKjE,KAAL,CAAWiE,SAAX,IAAwB,EAAxC;AACA,UAAImD,sBAAsB,GAAG,KAAKpH,KAAL,CAAWoH,sBAAX,IAAqC,EAAlE;AACA,UAAIE,oBAAoB,GAAG,KAAKtH,KAAL,CAAWsH,oBAAX,IAAmC,EAA9D;;AACA,UAAI/E,IAAI,CAACiI,QAAL,KAAkB,IAAtB,EAA4B;AACxB,YAAI,CAACvG,SAAS,CAACiH,QAAV,CAAmB3I,IAAI,CAAC0B,SAAxB,CAAL,EAAyC;AACrCA,UAAAA,SAAS,CAAC8G,IAAV,CAAexI,IAAI,CAAC0B,SAApB;AACH;;AACD,YAAI,CAACmD,sBAAsB,CAAC8D,QAAvB,CAAgC3I,IAAI,CAAC6E,sBAArC,CAAL,EAAmE;AAC/DA,UAAAA,sBAAsB,CAAC2D,IAAvB,CAA4BxI,IAAI,CAAC6E,sBAAjC;AACH,SANuB,CAOxB;;;AACA,YAAI,CAACE,oBAAoB,CAAC4D,QAArB,CAA8B3I,IAAI,CAAC+E,oBAAnC,CAAL,EAA+D;AAC3DA,UAAAA,oBAAoB,CAACyD,IAArB,CAA0BxI,IAAI,CAAC+E,oBAA/B;AACH;AACJ,OAXD,MAYK;AACD,cAAMmD,QAAQ,GAAGxG,SAAS,CAACoE,MAAV,CAAiB1H,IAAI,IAAIA,IAAI,KAAK4B,IAAI,CAAC0B,SAAvC,CAAjB;AACAA,QAAAA,SAAS,GAAGwG,QAAZ;AAEA,cAAMW,qBAAqB,GAAGhE,sBAAsB,CAACiB,MAAvB,CAA8B1H,IAAI,IAAIA,IAAI,KAAK4B,IAAI,CAAC6E,sBAApD,CAA9B;AACAA,QAAAA,sBAAsB,GAAGgE,qBAAzB,CALC,CAMD;;AACA,cAAMY,mBAAmB,GAAG1E,oBAAoB,CAACe,MAArB,CAA4B1H,IAAI,IAAIA,IAAI,KAAK4B,IAAI,CAAC+E,oBAAlD,CAA5B;AACAA,QAAAA,oBAAoB,GAAG0E,mBAAvB;AACH;;AACD,WAAKxL,QAAL,CAAc;AACVyD,QAAAA,SAAS,EAAEmG,WAAW,KAAK,KAAhB,GAAwB,EAAxB,GAA6BnG,SAD9B;AAEVmD,QAAAA,sBAAsB,EAAEgD,WAAW,KAAK,KAAhB,GAAwB,EAAxB,GAA6BhD,sBAF3C;AAEmEE,QAAAA,oBAAoB,EAAE8C,WAAW,KAAK,KAAhB,GAAwB,EAAxB,GAA6B9C;AAFtH,OAAd;AAIH,KAx0DkB;;AAEf,SAAK2E,OAAL,GAAenQ,KAAK,CAACoQ,SAAN,EAAf;AAEA,UAAMzL,SAAS,GAAG;AACd0L,MAAAA,IAAI,EAAE,CADQ;AAEdC,MAAAA,IAAI,EAAE,KAAK/L,KAAL,CAAWJ,KAAX,CAAiBwH,QAAjB,GAA4BvD,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBwH,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAF9D,KAAlB;AAIA,SAAKzH,KAAL,GAAa;AACTW,MAAAA,IAAI,EAAE,EADG;AACC0L,MAAAA,YAAY,EAAE,EADf;AACmBC,MAAAA,KAAK,EAAE,EAD1B;AAC8BxG,MAAAA,cAAc,EAAE,EAD9C;AAETpF,MAAAA,UAAU,EAAE,EAFH;AAGT6L,MAAAA,eAAe,EAAE,EAHR;AAIT9L,MAAAA,SAAS,EAAEA,SAJF;AAKTsI,MAAAA,qBAAqB,EAAE,EALd;AAMTyD,MAAAA,UAAU,EAAE,IAAIC,GAAJ,EANH;AAOTC,MAAAA,cAAc,EAAE,EAPP;AAQTC,MAAAA,eAAe,EAAE,EARR;AASTC,MAAAA,iBAAiB,EAAE,EATV;AAUTC,MAAAA,cAAc,EAAE,EAVP;AAWTC,MAAAA,oBAAoB,EAAE,EAXb;AAYTC,MAAAA,uBAAuB,EAAE,EAZhB;AAaTC,MAAAA,gBAAgB,EAAE,EAbT;AAcTC,MAAAA,iBAAiB,EAAE,EAdV;AAeTC,MAAAA,oBAAoB,EAAE,EAfb;AAgBTC,MAAAA,eAAe,EAAE,EAhBR;AAiBTC,MAAAA,YAAY,EAAE,EAjBL;AAkBTlI,MAAAA,KAAK,EAAE,CAlBE;AAmBTmI,MAAAA,cAAc,EAAE,EAnBP;AAoBTC,MAAAA,mBAAmB,EAAE,EApBZ;AAqBTrJ,MAAAA,SAAS,EAAE,EArBF;AAsBTqD,MAAAA,oBAAoB,EAAE,EAtBb;AAuBTF,MAAAA,sBAAsB,EAAE,EAvBf;AAwBTmG,MAAAA,kBAAkB,EAAE;AAxBX,KAAb;AA4BA,SAAKnK,SAAL,GAAiBtH,KAAK,CAACoQ,SAAN,EAAjB;AACA,SAAKsB,eAAL,GAAuB,CAAC,WAAD,EAAc,WAAd,EAA0B,qBAA1B,CAAvB;AACH,GAvCiC,CA2ClC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAQ+B,SAAxBC,wBAAwB,CAACpN,KAAD,EAAQL,KAAR,EAAe;AAE1C,QAAIK,KAAK,CAACJ,KAAN,CAAYoM,YAAZ,KAA6B,EAA7B,IAAmChM,KAAK,CAACJ,KAAN,CAAYoM,YAAZ,KAA6BrM,KAAK,CAACqM,YAA1E,EAAwF;AACpFhQ,MAAAA,KAAK,CAACuJ,IAAN,CAAWvF,KAAK,CAACJ,KAAN,CAAYoM,YAAvB;AACAhM,MAAAA,KAAK,CAACJ,KAAN,CAAYoM,YAAZ,GAA2B,EAA3B;AACH;;AAED,QAAIhM,KAAK,CAACJ,KAAN,CAAYqM,KAAZ,KAAsBtM,KAAK,CAACsM,KAAhC,EAAuC;AACnCjQ,MAAAA,KAAK,CAACiQ,KAAN,CAAYjM,KAAK,CAACJ,KAAN,CAAYqM,KAAxB;AACAjM,MAAAA,KAAK,CAACJ,KAAN,CAAYqM,KAAZ,GAAoB,EAApB;AACH;;AACD,WAAO,IAAP;AACH;;AA0TDoB,EAAAA,iBAAiB,CAAC/M,IAAD,EAAO;AACpB,UAAMgN,SAAS,GAAGhN,IAAI,IAAIA,IAAI,CAAC2F,GAAL,CAAUsH,MAAD,IAAY;AAC3C,aAAO;AAAE,mBAAWA,MAAM,CAACrP,gBAAgB,CAACsP,KAAlB,CAAN,CAA+B,KAAKxN,KAAL,CAAWJ,KAAX,CAAiBkB,QAAjB,CAA0B2M,iBAAzD,CAAb;AAA0F,qBAAaF,MAAM,CAACrP,gBAAgB,CAACwP,KAAlB,CAA7G;AAAuI,iBAAS,OAAhJ;AAAyJ,sBAAc;AAAvK,OAAP;AACH,KAFyB,CAA1B;AAGA,WAAOJ,SAAP;AACH;;AAUDK,EAAAA,MAAM,GAAG;AACL,QAAI1M,GAAG,GAAGpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BsC,YAA7B,EAA2C,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuC,UAAvE,EAAmF,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkB,QAApG,CAAlC;AACA,QAAI8M,QAAQ,GAAG,EAAf;;AACA,QAAI,KAAK5N,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiN,QAA5B,IAAwC,KAAK7N,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiN,QAA5B,IAAwC,KAApF,EAA2F;AACvFD,MAAAA,QAAQ,GAAGrO,SAAS,EAApB;AACH,KAFD,MAEO;AACHqO,MAAAA,QAAQ,GAAGtO,WAAW,KAAK,2BAAhB,GAA8C,KAAKK,KAAL,CAAWmO,cAApE;AACH;;AACD,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,aAAa,GAAG,aAApB;;AACA,QAAI,KAAKhO,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,IAAsD,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmD/C,kBAAnD,KAA0E1F,iBAAiB,CAAC6P,KAAtJ,EAA6J;AACzJF,MAAAA,aAAa,GAAG,mBAAhB;AACAC,MAAAA,aAAa,GAAG,EAAhB;AACH,KAHD,MAIK,IAAI,KAAKhO,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,IAAsD,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmD/C,kBAAnD,KAA0E1F,iBAAiB,CAAC4F,QAAtJ,EAAgK;AACjK+J,MAAAA,aAAa,GAAG,iBAAhB;AACH,KAFI,MAGA;AACDA,MAAAA,aAAa,GAAG,eAAhB;AACH;;AACD,UAAMG,WAAW,GAAG;AAChBC,MAAAA,aAAa,EAAE,gBADC;AAEhBC,MAAAA,cAAc,EAAE,wBAFA;AAGhBC,MAAAA,eAAe,EAAE,gBAHD;AAIhBC,MAAAA,QAAQ,EAAE,2BAJM;AAKhB1N,MAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UALb;AAMhBuM,MAAAA,eAAe,EAAE,KAAKA,eANN;AAOhBoB,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,QAAQ,EAAE,IADI;AACE9M,QAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWJ,KAAX,CAAiBkB,QAD7B;AAEdO,QAAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,CAAyCD,YAFrF;AAGdE,QAAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgD/B,eAHtG;AAIdN,QAAAA,GAAG,EAAEpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA7B,EAAuC,KAAKb,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBkB,QAA5F,CAJf;AAKdH,QAAAA,KAAK,EAAEM,GAAG,CAACJ,QALG;AAMdE,QAAAA,GAAG,EAAEE,GAAG,CAACD,MANK;AAOdJ,QAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB,UAPf;AAQduM,QAAAA,eAAe,EAAE,KAAKA,eARR;AASdlL,QAAAA,eAAe,EAAG,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4CC,eAA5F,IAAgH,CAAC,CATpH;AAUdZ,QAAAA,YAAY,EAAEwC,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,CAAyCD,YAAtF,CAAR,IAA+G,CAAC,CAVhH;AAWdwB,QAAAA,kBAAkB,EAAEgB,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,CAA4CC,kBAA5F,CAAR,IAA2H,CAAC,CAXlI;AAYdtB,QAAAA,eAAe,EAAEsC,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4CD,eAA5F,CAAR,IAAwH,CAAC,CAZ5H;AAaduC,QAAAA,kBAAkB,EAAI,KAAK9D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA9C,KAAqEC,SAAvH,IACd,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA9C,KAAqE,GADzG,GACgHrC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,CAA8CM,kBAA/C,CADtH,GAC2L,IAdjM;AAedG,QAAAA,mBAAmB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,GAAmD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD2B,mBAAjD,IAAwE,CAAC,CAA5H,GAAgI,IAfvI;AAgBdzB,QAAAA,oBAAoB,EAAE,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,IAAoD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD4B,0BAArG,GAAkIzC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,CAAiD4B,0BAAlD,CAAxI,GAAwN,IAhBhO;AAiBd;AACA;AACAC,QAAAA,cAAc,EAAG,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4C2C,cAA5F,IAA+G,KAnBjH;AAoBdC,QAAAA,sBAAsB,EAAG,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDc,sBAApG,IAA+H,KApBzI;AAqBd3B,QAAAA,0BAA0B,EAAE,CAAC,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,IAA0D,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,CAAuDM,0BAAjH,GACvB,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,CAAuDM,0BADhC,GAC6D,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAD1F,KACyH,CAAC;AAtBxI;AAPF,KAApB;AAiCA,QAAIsM,cAAc,GAAG,CACjB;AACI,eAAS,UADb;AAEI,eAASxN,GAAG,CAACyN;AAFjB,KADiB,EAId;AACC,eAAS,QADV;AAEC,eAASzN,GAAG,CAAC0N;AAFd,KAJc,EASjB;AACI,eAAS,aADb;AAEI,eAAS,KAAK3O,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,GAA+C,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,CAA6CuL,YAA7C,IAA6D,IAA5G,GACL,KAAK5O,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,GAA2C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,CAAyCsN,YAAzC,IAAyD,IAApG,GAA2G;AAHnH,KATiB,EAad;AACC,eAAS,gBADV;AAEC,eAAS,KAAK5O,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,GAAkD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDuL,eAAhD,IAAmE,IAArH,GACL,KAAK7O,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,GACI,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4CqN,eADhD,GACkE;AAJvE,KAbc,EAkBd;AACC,eAAS,gBADV;AAEC,eAAS,KAAK7O,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,GAAkD,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,CAAgDoL,kBAAhD,IAAsE,IAAxH,GACL,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,GACI,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,CAA4CkM,kBADhD,GACqE;AAJ1E,KAlBc,CAArB;AAyBA,UAAMC,SAAS,GAAG,KAAK/O,KAAL,CAAWJ,KAAX,CAAiBsB,UAAjB,IAA+B,KAAKvB,KAAL,CAAWwM,UAAX,CAAsB6C,GAAtB,CAA0B,SAA1B,CAA/B,IACX,KAAKrP,KAAL,CAAWwM,UAAX,CAAsB8C,GAAtB,CAA0B,SAA1B,EAAqCC,YAD5C;AAEA,UAAMC,SAAS,GACX,KAAKxP,KAAL,CAAWwM,UAAX,CAAsB6C,GAAtB,CAA0B,eAA1B,KACA,KAAKrP,KAAL,CAAWwM,UAAX,CAAsB8C,GAAtB,CAA0B,eAA1B,EAA2CC,YAF/C;AAGA,UAAME,UAAU,GACZ,KAAKzP,KAAL,CAAWwM,UAAX,CAAsB6C,GAAtB,CAA0B,iBAA1B,KACA,KAAKrP,KAAL,CAAWwM,UAAX,CAAsB8C,GAAtB,CAA0B,iBAA1B,EAA6CC,YAFjD;AAGA,UAAMG,YAAY,GACd,KAAK1P,KAAL,CAAWwM,UAAX,CAAsB6C,GAAtB,CAA0B,mBAA1B,KACA,KAAKrP,KAAL,CAAWwM,UAAX,CAAsB8C,GAAtB,CAA0B,mBAA1B,EAA+CC,YAFnD;AAGA,UAAMI,YAAY,GACd,KAAK3P,KAAL,CAAWwM,UAAX,CAAsB6C,GAAtB,CAA0B,mBAA1B,KACA,KAAKrP,KAAL,CAAWwM,UAAX,CAAsB8C,GAAtB,CAA0B,mBAA1B,EAA+CC,YAFnD;AAGA,UAAMK,cAAc,GAChB,KAAK5P,KAAL,CAAWwM,UAAX,CAAsB6C,GAAtB,CAA0B,cAA1B,KACA,KAAKrP,KAAL,CAAWwM,UAAX,CAAsB8C,GAAtB,CAA0B,cAA1B,EAA0CC,YAF9C;AAGA,UAAMM,MAAM,GACR,KAAK7P,KAAL,CAAWwM,UAAX,CAAsB6C,GAAtB,CAA0B,aAA1B,KACA,KAAKrP,KAAL,CAAWwM,UAAX,CAAsB8C,GAAtB,CAA0B,aAA1B,EAAyCC,YAF7C;AAGA,UAAMO,QAAQ,GACV,KAAK9P,KAAL,CAAWwM,UAAX,CAAsB6C,GAAtB,CAA0B,eAA1B,KACA,KAAKrP,KAAL,CAAWwM,UAAX,CAAsB8C,GAAtB,CAA0B,eAA1B,EAA2CC,YAF/C;AAGA,UAAMQ,sBAAsB,GAAG;AAC3BxM,MAAAA,YAAY,EAAEjC,GAAG,CAACJ,QADS;AAE3BsC,MAAAA,UAAU,EAAElC,GAAG,CAACD,MAFW;AAG3BoC,MAAAA,mBAAmB,EAAE,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAHrE;AAI3BqB,MAAAA,gBAAgB,EAAE,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAJ/D;AAK3BgC,MAAAA,mBAAmB,EAAE,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eALrE;AAM3BkC,MAAAA,mBAAmB,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eANrE;AAO3BW,MAAAA,qBAAqB,EAAE,KAAKvD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAPzE;AAQ3BC,MAAAA,wBAAwB,EAAE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,IAAoD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAR/E;AAS3B;AACA;AACAqB,MAAAA,8BAA8B,EAAE,KAAK3D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,IAA0D,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAX3F;AAY3BvB,MAAAA,UAAU,EAAE,EAAE,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB;AAAtB,OAZe;AAc3BO,MAAAA,SAAS,EAAE;AACPF,QAAAA,GAAG,EAAEpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA7B,EAAuC,KAAKb,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBkB,QAA5F,CADtB;AAEP,iBAASG,GAAG,CAACJ,QAFN;AAGP,eAAOI,GAAG,CAACD,MAHJ;AAIP,qBAAc,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,IAAsD,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDjD,SAA1G,IAAwH,GAJ9H;AAKP,2BAAoB,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eAApG,IAAwH,CAAC,CALrI;AAMP,wBAAgB4B,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,IAAgD,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,CAA6ChC,YAA9F,CAAR,IAAuH,CAAC,CANjI;AAOP,2BAAmBwC,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgD/B,eAApG,CAAR,IAAgI,CAAC,CAP7I;AAQP,8BAAsBE,MAAM,CAACrD,iBAAiB,CAAC4F,QAAnB,CAAN,GAAqC,GAArC,GAA2CvC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,IAAqD,KAAKvD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,CAAkDO,kBAAxG,CARhE;AASP;AACA;AACA,+BAAuB,KAAK9D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,GAAuD,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDQ,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IAXxJ;AAYP,gCAAwB,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,IAAwD,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDS,0BAA7G,GAA0IzC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDS,0BAAtD,CAAhJ,GAAoO,IAZrP;AAaP,0BAAmB,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDa,cAApG,IAAuH,KAblI;AAcP,oBAAY,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBkB,QAdtB;AAeP,sCAA+B,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B+C,8BAA5B,IAA8D,KAAK3D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B+C,8BAA5B,CAA2DlB,0BAA1H,IAAyJ,CAAC,CAfjL;AAgBP,8BAAsB,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,CAAgDb,kBAhBlH,CAkBP;;AAlBO;AAdgB,KAA/B;AAqCA,UAAM8M,kBAAkB,GAAG;AACvBzM,MAAAA,YAAY,EAAEjC,GAAG,CAACJ,QADK;AAEvBsC,MAAAA,UAAU,EAAElC,GAAG,CAACD,MAFO;AAGvBoC,MAAAA,mBAAmB,EAAE,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAHzE;AAIvBqB,MAAAA,gBAAgB,EAAE,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAJnE;AAKvBgC,MAAAA,mBAAmB,EAAE,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eALzE;AAMvB+B,MAAAA,qBAAqB,EAAE,KAAKvD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAN7E;AAOvBC,MAAAA,wBAAwB,EAAE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,IAAoD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAPnF;AAQvBqB,MAAAA,8BAA8B,EAAE,KAAK3D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,IAA0D,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,CAAuDM,0BAR1H;AASvB7B,MAAAA,UAAU,EAAE,EAAE,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB;AAAtB,OATW;AAUvB8C,MAAAA,mBAAmB,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAVzE;AAYvBzB,MAAAA,SAAS,EAAE;AACPF,QAAAA,GAAG,EAAEpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA7B,EAAuC,KAAKb,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBkB,QAA5F,CADtB;AAEP2E,QAAAA,cAAc,EAAE,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,IAAmC,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAApD,IAAsE,EAF/E;AAGP,iBAASxE,GAAG,CAACJ,QAHN;AAIP,eAAOI,GAAG,CAACD,MAJJ;AAKP,qBAAa,GALN;AAMP,2BAAoB,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eAApG,IAAwH,CAAC,CANrI;AAOP,wBAAgB4B,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,IAAgD,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,CAA6ChC,YAA9F,CAAR,IAAuH,CAAC,CAPjI;AAQP,2BAAmBwC,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgD/B,eAApG,CAAR,IAAgI,CAAC,CAR7I;AASP,8BAAsB,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,IAAqD,KAAKvD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,CAAkDO,kBAAvG,GAA4HrC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,CAAkDO,kBAAnD,CAAN,GAA+E,GAA/E,GAAqFrC,MAAM,CAACrD,iBAAiB,CAACwR,OAAnB,CAAvN,GAAqP,IATpQ;AAUP,+BAAuB,KAAK5P,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,GAAuD,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDQ,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IAVxJ;AAWP,gCAAwB,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,IAAwD,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDS,0BAA7G,GAA0IzC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDS,0BAAtD,CAAhJ,GAAoO,IAXrP;AAYP,0BAAmB,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDa,cAApG,IAAuH,KAZlI;AAaP,oBAAY,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBkB,QAbtB;AAcP,sCAA+B,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAA5B,IAA0D,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAAvF,IAAsH,CAAC,CAd9I;AAeP,sBAAc,IAfP;AAgBP,mBAAW,IAhBJ;AAiBP,8BAAsBoB,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,CAAgDb,kBAApG,CAAR,IAAmI,CAAC;AAjBnJ;AAZY,KAA3B;AAkCA,UAAMgN,gBAAgB,GAAG;AACrB3M,MAAAA,YAAY,EAAEjC,GAAG,CAACJ,QADG;AAErBsC,MAAAA,UAAU,EAAElC,GAAG,CAACD,MAFK;AAGrBoC,MAAAA,mBAAmB,EAAE,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAH3E;AAIrBqB,MAAAA,gBAAgB,EAAE,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAJrE;AAKrBgC,MAAAA,mBAAmB,EAAE,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAL3E;AAMrB+B,MAAAA,qBAAqB,EAAE,KAAKvD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAN/E;AAOrBC,MAAAA,wBAAwB,EAAE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,IAAoD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAPrF;AAQrBqB,MAAAA,8BAA8B,EAAE,KAAK3D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,IAA0D,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,CAAuDM,0BAR5H;AASrB7B,MAAAA,UAAU,EAAE,EAAE,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB;AAAtB,OATS;AAUrB8C,MAAAA,mBAAmB,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAV3E;AAYrBzB,MAAAA,SAAS,EAAE;AACPF,QAAAA,GAAG,EAAEpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA7B,EAAuC,KAAKb,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBkB,QAA5F,CADtB;AAEP2E,QAAAA,cAAc,EAAE,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,IAAmC,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAApD,IAAsE,EAF/E;AAGP,iBAASxE,GAAG,CAACJ,QAHN;AAIP,eAAOI,GAAG,CAACD,MAJJ;AAKP,qBAAa,GALN;AAMP,2BAAoB,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eAApG,IAAwH,CAAC,CANrI;AAOP,wBAAgB4B,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,IAAgD,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,CAA6ChC,YAA9F,CAAR,IAAuH,CAAC,CAPjI;AAQP,2BAAmBwC,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgD/B,eAApG,CAAR,IAAgI,CAAC,CAR7I;AASP,8BAAsB,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,IAAqD,KAAKvD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,CAAkDO,kBAAvG,GAA4HrC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,CAAkDO,kBAAnD,CAAlI,GAA4M,IAT3N;AAUP,+BAAuB,KAAK9D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,GAAuD,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDQ,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IAVxJ;AAWP,gCAAwB,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,IAAwD,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDS,0BAA7G,GAA0IzC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDS,0BAAtD,CAAhJ,GAAoO,IAXrP;AAYP,0BAAmB,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDa,cAApG,IAAuH,KAZlI;AAaP,oBAAY,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBkB,QAbtB;AAcP,sCAA+B,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAA5B,IAA0D,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAAvF,IAAsH,CAAC,CAd9I;AAeP,uBAAe,IAfR;AAgBP,8BAAsBoB,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,CAAgDb,kBAApG,CAAR,IAAmI,CAAC,CAhBnJ;AAiBP,0BAAiB,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,IAAoD,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDD,cAAvG,IAAyH,CAAC,CAjBpI;AAkBNgC,QAAAA,YAAY,EAAC6G;AAlBP;AAZU,KAAzB;AAmCA,UAAMK,cAAc,GAAG;AACnB5M,MAAAA,YAAY,EAAEjC,GAAG,CAACJ,QADC;AAEnBsC,MAAAA,UAAU,EAAElC,GAAG,CAACD,MAFG;AAGnBoC,MAAAA,mBAAmB,EAAE,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAH7E;AAInBqB,MAAAA,gBAAgB,EAAE,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAJvE;AAKnBgC,MAAAA,mBAAmB,EAAE,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAL7E;AAMnB+B,MAAAA,qBAAqB,EAAE,KAAKvD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBANjF;AAOnBC,MAAAA,wBAAwB,EAAE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,IAAoD,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAPvF;AAQnBqB,MAAAA,8BAA8B,EAAE,KAAK3D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,IAA0D,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,CAAuDM,0BAR9H;AASnB7B,MAAAA,UAAU,EAAE,EAAE,GAAG,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBgB;AAAtB,OATO;AAUnB8C,MAAAA,mBAAmB,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAV7E;AAYnBzB,MAAAA,SAAS,EAAE;AACPF,QAAAA,GAAG,EAAEpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA7B,EAAuC,KAAKb,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBkB,QAA5F,CADtB;AAEP2E,QAAAA,cAAc,EAAE,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,IAAmC,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAApD,IAAsE,EAF/E;AAGP,iBAASxE,GAAG,CAACJ,QAHN;AAIP,eAAOI,GAAG,CAACD,MAJJ;AAKP,qBAAa,GALN;AAMP,2BAAoB,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,IAAmD,KAAKpD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwC,mBAA5B,CAAgDnB,eAApG,IAAwH,CAAC,CANrI;AAOP,wBAAgB4B,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,IAAgD,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByC,gBAA5B,CAA6ChC,YAA9F,CAAR,IAAuH,CAAC,CAPjI;AAQP,2BAAmBwC,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgD/B,eAApG,CAAR,IAAgI,CAAC,CAR7I;AASP,8BAAsB,KAAKvB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,IAAqD,KAAKvD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,CAAkDO,kBAAvG,GAA4HrC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2C,qBAA5B,CAAkDO,kBAAnD,CAAlI,GAA4M,IAT3N;AAUP,+BAAuB,KAAK9D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,GAAuD,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDQ,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IAVxJ;AAWP,gCAAwB,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,IAAwD,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDS,0BAA7G,GAA0IzC,MAAM,CAAC,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6C,wBAA5B,CAAqDS,0BAAtD,CAAhJ,GAAoO,IAXrP;AAYP,0BAAmB,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,IAAmD,KAAKtD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0C,mBAA5B,CAAgDa,cAApG,IAAuH,KAZlI;AAaP,oBAAY,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBkB,QAbtB;AAcP,sCAA+B,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAA5B,IAA0D,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6B,0BAAvF,IAAsH,CAAC,CAd9I;AAeP,qBAAa,IAfN;AAgBP,mBAAU,IAhBH;AAiBP,8BAAsBoB,QAAQ,CAAC,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8C,mBAA5B,CAAgDb,kBAApG,CAAR,IAAmI,CAAC,CAjBnJ;AAkBP,0BAAiB,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,IAAoD,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmDD,cAAvG,IAAyH,CAAC,CAlBpI;AAmBNgC,QAAAA,YAAY,EAAC4G;AAnBP;AAZQ,KAAvB;AAoCA,wBACI,uDACI;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKf,cAAc,CAACpJ,MAAf,GAAwB,CAAxB,gBACG,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,mBAAD;AAAqB,MAAA,cAAc,EAAEoJ,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,GAGc,EAJnB,eAMI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,aAAa,EAAE,KAAKzO,KAAL,CAAWsE,IAAX,CAAgBC,aADnC;AAEI,MAAA,UAAU,EAAE,SAFhB;AAGI,MAAA,UAAU,EAAE,KAAKvE,KAAL,CAAWJ,KAAX,CAAiBgB,UAHjC;AAII,MAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWJ,KAAX,CAAiBkB,QAJ/B;AAKI,MAAA,UAAU,EAAE,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BmM,YAA5B,IAA4C,KAAK/M,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BmP,cALxF;AAMI,MAAA,eAAe,EAAGjI,aAAD,IACb,KAAK9H,KAAL,CAAW9C,sBAAX,CAEI,EACI,GAAGwS,sBADP;AAEI,WAAG5H;AAFP,OAFJ,CAPR;AAeI,MAAA,cAAc,EAAE,KAAK9H,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAfhD;AAgBI,MAAA,eAAe,EAAC,gBAhBpB;AAiBI,MAAA,SAAS,EAAC,WAjBd;AAkBI,MAAA,UAAU,EAAC,WAlBf;AAmBI,MAAA,WAAW,EAAC,gBAnBhB,CAoBE;AApBF;AAqBI,MAAA,UAAU,EAAC,KArBf;AAsBI,MAAA,gBAAgB,EAAE,KAAK7G,KAAL,CAAWxD,gBAtBjC;AAuBI,MAAA,WAAW,EAAE0R,WAvBjB;AAwBI,MAAA,qBAAqB,EAAE,KAAKvO,KAAL,CAAW+I,qBAxBtC;AAyBI,MAAA,KAAK,EAAEqG,SAzBX;AA0BI,MAAA,SAAS,EAAE,KAAKhM,SA1BpB;AA2BI,MAAA,UAAU,EAAE,KAAKmG,UA3BrB;AA4BI,MAAA,UAAU,EAAE,KA5BhB;AA6BI,MAAA,SAAS,EAAE,MAAM,KAAKlJ,KAAL,CAAW/C,iBAAX,CAA6B0S,kBAA7B,EAAiDZ,SAAjD,CA7BrB;AA8BI,MAAA,UAAU,EAAE,KAAKiB,UA9BrB;AA+BI,MAAA,WAAW,EAAE,KAAKC,WA/BtB;AAgCI,MAAA,cAAc,EAAE,KAAKnN,cAhCzB;AAiCI,MAAA,cAAc,EAAE,IAjCpB;AAkCI,MAAA,UAAU,EAAE,KAAK9C,KAAL,CAAWJ,KAAX,CAAiBsQ,UAlCjC;AAmCI,MAAA,eAAe,EAAE,CACb;AACI,sCAAiB,oBAAC,aAAD;AACb,UAAA,UAAU,EAAE,KAAKvQ,KAAL,CAAW0M,cAAX,IAA6B,EAD5B;AAEb,UAAA,eAAe,EAAE,KAAKrM,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,EAFnD;AAGb,UAAA,UAAU,EAAE,KAAKrC,KAAL,CAAW6M,cAAX,IAA6B,EAH5B;AAIb,UAAA,eAAe,EAAE,KAAKxM,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,EAJnD;AAKb,UAAA,OAAO,EAAE,KAAKjD,KAAL,CAAW8M,oBAAX,IAAmC,EAL/B;AAMb,UAAA,YAAY,EAAE,KAAKzM,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BU,YAA5B,IAA4C,EAN7C;AAOb,UAAA,UAAU,EAAE,KAAK3B,KAAL,CAAW+M,uBAAX,IAAsC,EAPrC;AAQb,UAAA,eAAe,EAAE,KAAK1M,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,EARnD;AASb,UAAA,eAAe,EAAE,KAAK7B,KAAL,CAAWwQ,iBAAX,IAAgC,EATpC;AAUb,UAAA,oBAAoB,EAAE,KAAKnQ,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B0B,oBAA5B,IAAoD,EAV7D;AAWb,UAAA,qBAAqB,EAAE,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwP,qBAXtC;AAYb,UAAA,0BAA0B,EAAE,KAAKpQ,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuB,0BAA5B,IAA0D,EAZzE,CAab;AACA;AACA;AACA;AAhBa;AAiBb,UAAA,YAAY,EAAE,KAAKxC,KAAL,CAAWgN,gBAAX,IAA+B,EAjBhC;AAkBb,UAAA,iBAAiB,EAAE,KAAK3M,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B4C,iBAA5B,IAAiD,EAlBvD;AAmBb,UAAA,QAAQ,EAAE,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA5B,GAAuC/C,mBAAmB,CAAC,KAAKkC,KAAL,CAAWJ,KAAX,CAAiBkB,QAAlB,EAA4B,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAAxD,CAA1D,GAA8H,IAAIH,IAAJ,EAnB3H;AAoBb,UAAA,MAAM,EAAE,KAAKV,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAA5B,GAAqClD,mBAAmB,CAAC,KAAKkC,KAAL,CAAWJ,KAAX,CAAiBkB,QAAlB,EAA4B,KAAKd,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAxD,CAAxD,GAA0H,IAAIN,IAAJ,EApBrH;AAqBb,UAAA,mBAAmB,EAAE,KAAKiB,mBArBb;AAsBb,UAAA,gBAAgB,EAAE,KAAKpB,gBAtBV;AAuBb,UAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWJ,KAAX,CAAiBkB,QAvBd;AAwBb,UAAA,sBAAsB,EAAE,KAAKuP,sBAxBhB;AAyBb,UAAA,oBAAoB,EAAE,KAAK1Q,KAAL,CAAWuN,kBAAX,IAAiC,EAzB1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADrB,OADa,CAnCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAuEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlN,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BmP,cAA5B,IAA8C,KAAK/P,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BmP,cAA5B,CAA2C1K,MAA3C,GAAoD,CAAlG,IAAuG,KAAKrF,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAAnI,IAA6JyJ,MAAM,CAACC,MAAP,CAAc,KAAKvQ,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA1C,EAAkExB,MAAlE,GAA2E,CAAxO,gBACG,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,SAAS,EAAG,oBAAmB0I,aAAc,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEqB,KAAK/N,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiG,sBAA5B,CAAmD2J,mBAFxE,CADA,CADJ,eAQI,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,qDAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKxQ,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4CyO,oBAA5C,KAAqErS,iBAAiB,CAACsS,GAAtI,iBACG,oBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd;AAEI,kBAAU,KAAK1Q,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFd;AAEwE,oBAAW,MAFnF;AAGI,MAAA,MAAM,EAAE,KAAK7E,KAAL,CAAW+I,qBAAX,CAAiCP,OAAjC,CAAyCqH,MAAzC,MAAqD,CAAC,CAHlE;AAII,MAAA,OAAO,EAAE,MAAM,KAAKxP,KAAL,CAAWtC,qBAAX,CAAiCoS,cAAjC,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEhR,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAFR,EAaI,KAAKkB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4CyO,oBAA5C,KAAqErS,iBAAiB,CAACsS,GAAtI,iBACA,oBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd;AAEI,kBAAU,KAAK1Q,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFd;AAE0E,oBAAW,MAFrF;AAGI,MAAA,MAAM,EAAE,KAAK7E,KAAL,CAAW+I,qBAAX,CAAiCP,OAAjC,CAAyCsH,QAAzC,MAAuD,CAAC,CAHpE;AAIG,MAAA,OAAO,EAAE,MAAM,KAAKzP,KAAL,CAAWzC,uBAAX,CAAmCsS,gBAAnC,CAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE1Q,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAdJ,eAyBA,oBAAC,GAAD,CAAK,IAAL;AACQ,MAAA,SAAS,EAAC,kCADlB;AAEQ,kBAAU,KAAKa,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFlB;AAE8E,oBAAW,MAFzF;AAGQ,MAAA,MAAM,EAAE,KAAK7E,KAAL,CAAW+I,qBAAX,CAAiCP,OAAjC,CAAyCgH,SAAzC,MAAwD,CAAC,CAHzE;AAIO,MAAA,OAAO,EAAE,MAAM,KAAKxI,aAAL,EAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOQ,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE3H,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPR,CAzBA,eAmCI,oBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd;AAEI,kBAAU,KAAKgB,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFd;AAEyE,oBAAW,MAFpF,CAGI;AAHJ;AAII,MAAA,MAAM,EAAE,KAAK7E,KAAL,CAAW+I,qBAAX,CAAiCP,OAAjC,CAAyCiH,UAAzC,MAAyD,CAAC,CAJtE;AAKI,MAAA,OAAO,EAAE,MAAM,KAAK9H,oBAAL,EALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,cAApB;AAAmC,MAAA,KAAK,EAAC,IAAzC;AAA8C,MAAA,MAAM,EAAC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAnCJ,eA2CI,oBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd;AAEI,kBAAU,KAAKtH,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFd;AAE2E,oBAAW,MAFtF,CAGI;AAHJ;AAII,MAAA,MAAM,EAAE,KAAK7E,KAAL,CAAW+I,qBAAX,CAAiCP,OAAjC,CAAyCkH,YAAzC,MAA2D,CAAC,CAJxE;AAKI,MAAA,OAAO,EAAE,MAAM,KAAKzH,sBAAL,CAA4B,oBAA5B,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAqC,MAAA,KAAK,EAAC,IAA3C;AAAgD,MAAA,MAAM,EAAC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA3CJ,eAqDI,oBAAC,GAAD,CAAK,IAAL;AAEI,MAAA,SAAS,EAAC,kCAFd,CAGI;AAHJ;AAII,kBAAU,KAAK5H,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAJd;AAKI,MAAA,MAAM,EAAE,KAAK7E,KAAL,CAAW+I,qBAAX,CAAiCP,OAAjC,CAAyCmH,YAAzC,MAA2D,CAAC,CALxE;AAMI,MAAA,OAAO,EAAE,MAAM,KAAKnK,UAAL,EANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEpG,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CArDJ,EA8DK,KAAKiB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,IAA+C,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoB,eAA5B,CAA4C2O,eAA5C,KAAgEvS,iBAAiB,CAACsS,GAAjI,iBACG,oBAAC,GAAD,CAAK,IAAL;AAEI,MAAA,SAAS,EAAC,kCAFd,CAGI;AAHJ;AAII,kBAAU,KAAK1Q,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAJd;AAKI,MAAA,MAAM,EAAE,KAAK7E,KAAL,CAAW+I,qBAAX,CAAiCP,OAAjC,CAAyCoH,cAAzC,MAA6D,CAAC,CAL1E;AAMI,MAAA,OAAO,EAAE,MAAM,KAAKxG,YAAL,EANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE7J,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CA/DR,CAFJ,CADJ,CARJ,CADJ,eAyFI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYI,oBAAC,wBAAD;AACI,MAAA,aAAa,EAAE,KAAKc,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4C2C,cAA3F,IAA6G,KADhI;AAEI,MAAA,IAAI,EAAE,KAAKxE,KAAL,CAAWW,IAFrB;AAGI,MAAA,UAAU,EAAErE,OAAO,CAAC,KAAK+D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgQ,aAA5B,IAA6C,KAAK5Q,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgQ,aAAzE,IAA0F,KAAK5Q,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiQ,qBAA5B,IAAqD,KAAK7Q,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiQ,qBAA3K,IAAoM,EAArM,EAAyM,KAAKlR,KAAL,CAAWS,SAApN,CAHvB;AAII,MAAA,SAAS,EAAE,KAAKT,KAAL,CAAWS,SAJ1B;AAKI,MAAA,eAAe,EAAE,KAAKH,eAL1B;AAMI,MAAA,cAAc,EAAE,KAAK6Q,cANzB;AAOI,MAAA,aAAa,EAAE,KAAKrM,aAPxB;AAQI,MAAA,cAAc,EAAE,KAAKG,cARzB;AASI,MAAA,UAAU,EAAE,KAAKE,UATrB,CAUI;AAVJ;AAWI,MAAA,eAAe,EAAE,KAAKnF,KAAL,CAAWuM,eAXhC;AAYI,MAAA,kBAAkB,EAAE,KAAKvM,KAAL,CAAWoR,kBAZnC;AAaI,MAAA,mBAAmB,EAAE,KAAK1D,iBAAL,CAAuB,KAAK1N,KAAL,CAAWqR,eAAlC,KAAsD,EAb/E;AAcI,MAAA,kBAAkB,EAAE,KAAK3D,iBAAL,CAAuB,KAAK1N,KAAL,CAAWsR,mBAAlC,KAA0D,EAdlF;AAgBI,MAAA,WAAW,EAAC,UAhBhB;AAiBI,MAAA,UAAU,EAAE,KAAK/H,UAjBrB;AAkBI,MAAA,UAAU,EAAE,KAAKvJ,KAAL,CAAWwM,UAlB3B;AAmBI,MAAA,qBAAqB,EAAE,KAAKxM,KAAL,CAAW+I,qBAnBtC;AAoBI,MAAA,UAAU,EAAE,KAAK1I,KAAL,CAAWJ,KAAX,CAAiBsB,UApBjC;AAqBI,MAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWJ,KAAX,CAAiBkB,QArB/B;AAsBI,MAAA,QAAQ,EAAE,IAtBd;AAuBI,MAAA,UAAU,EAAE,YAvBhB;AAwBI,MAAA,UAAU,EAAE,OAxBhB;AAyBI,MAAA,OAAO,EAAE,MAzBb,CA0BI;AACA;AACA;AACA;AA7BJ;AA8BI,MAAA,kBAAkB,EAAE,KA9BxB;AA+BI,MAAA,kBAAkB,EAAE,IA/BxB;AAiCI,MAAA,UAAU,EAAE,KAAKd,KAAL,CAAWJ,KAAX,CAAiB8G,UAjCjC;AAkCI,MAAA,QAAQ,EAAE,IAlCd;AAmCI,MAAA,WAAW,EAAE,IAnCjB;AAoCI,MAAA,SAAS,EACL,KAAK1G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BsQ,wBArCpC;AAuCI,MAAA,eAAe,EAAE,KAAK7D,iBAAL,CAAuB,KAAK1N,KAAL,CAAWwR,wBAAlC,KAA+D,EAvCpF;AAwCI,MAAA,iBAAiB,EAAE,WAxCvB;AAyCI,MAAA,oBAAoB,EAAE,wBAzC1B,CA2CI;AA3CJ;AA4CI,MAAA,YAAY,EACR,KAAKnR,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwQ,mBA7CpC;AA+CI,MAAA,eAAe,EAAE,KAAKpR,KAAL,CAAWJ,KAAX,CAAiByR,eA/CtC;AAgDI,MAAA,SAAS,EAAE,SAhDf;AAiDI,MAAA,qBAAqB,EAAE,KAAKlG,qBAjDhC;AAkDI,MAAA,0BAA0B,EAAE,KAAKX,0BAlDrC;AAmDI,MAAA,oBAAoB,EAAE,KAAKY,oBAnD/B;AAoDI,MAAA,uBAAuB,EAAE,KAAKE,uBApDlC;AAqDI,MAAA,6BAA6B,EAAE,KAAKR,6BArDxC;AAsDI,MAAA,eAAe,EAAE,KAAKhB,eAtD1B;AAuDI,MAAA,aAAa,EAAE,KAAKjC,gBAvDxB,CAwDG;AAxDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CAzFJ,CADJ,CADH,GAoKK,EArKV,CAvEJ,CANJ,CADJ,EA2PQ,KAAKlI,KAAL,CAAW2F,UAAX,gBACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEsI,QAAjB;AACI,MAAA,UAAU,EAAE,KAAKjO,KAAL,CAAW2F,UAD3B;AAEI,MAAA,UAAU,EAAE,KAAK8D,aAFrB;AAGI,MAAA,IAAI,EAAE,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAMM,EAjQd,EAoQQ,KAAKpJ,KAAL,CAAWJ,KAAX,CAAiBuJ,SAAjB,iBACA,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKnJ,KAAL,CAAWJ,KAAX,CAAiBuJ,SAAtC;AACI,MAAA,IAAI,EAAE,IADV;AAEI,MAAA,UAAU,EAAE,KAAK3C,UAFrB;AAGI,MAAA,UAAU,EAAE,KAAKxG,KAAL,CAAWJ,KAAX,CAAiBsB,UAHjC;AAII,MAAA,UAAU,EAAE,KAAKlB,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAJhB;AAKI,MAAA,WAAW,EAAE,KAAKqD,gBALtB;AAMI,MAAA,KAAK,EAAE,KAAK7H,KAAL,CAAWJ,KAAX,CAAiB2G,SAN5B;AAOI,MAAA,aAAa,EAAE,KAAKiD,aAPxB;AAQI,MAAA,YAAY,EAAE,KAAKxJ,KAAL,CAAWJ,KAAX,CAAiBoM,YARnC;AASI,MAAA,WAAW,EAAE,KAAKhM,KAAL,CAAW1D,WAT5B;AAUI,MAAA,cAAc,EAAE,KAAKqD,KAAL,CAAW8F,cAAX,IAA6B,EAVjD;AAWI,MAAA,YAAY,EAAE,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB2G,SAAjB,gBACV,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKvG,KAAL,CAAWJ,KAAX,CAAiB6I,SAAnC;AACI,QAAA,aAAa,EAAE,KAAKzI,KAAL,CAAWsE,IAAX,CAAgBC,aADnC;AAEI,QAAA,eAAe,EAAE,KAAK8E,eAF1B;AAGI,QAAA,UAAU,EAAE,KAAKrJ,KAAL,CAAWJ,KAAX,CAAiBsB,UAHjC;AAII,QAAA,cAAc,EAAE,KAAKvB,KAAL,CAAW8F,cAAX,IAA6B,EAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU,gBAOR,uDACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKzF,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,CAA4CC,kBAA5C,KAAmE,CAAlH,IACG,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBqF,aAAjB,KAAiC,IADpC,iBAEG,oBAAC,gBAAD;AACI,QAAA,IAAI,EAAE,kBADV;AAEI,QAAA,SAAS,EAAE,KAAKjF,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAFf;AAGI,QAAA,WAAW,EAAE,KAAKxE,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAHjB;AAII,QAAA,OAAO,EAAE,KAAKxE,KAAL,CAAWJ,KAAX,CAAiB0R,eAJ9B;AAKI,QAAA,KAAK,EAAE,KAAKtR,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,GAAkC,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,CAAgC,kBAAhC,CAAlC,GAAwF,EALnG;AAMI,QAAA,YAAY,EAAE,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,GAAkC,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,CAAgC,kBAAhC,CAAlC,GAAwF,EAN1G;AAOI,QAAA,WAAW,EAAE,IAPjB;AAQI,QAAA,OAAO,EAAE,KARb;AASI,QAAA,YAAY,EAAE,IATlB;AAUI,QAAA,UAAU,EAAE,KAVhB;AAWI,QAAA,iBAAiB,EAAE,IAXvB;AAYI,QAAA,gBAAgB,EAAE,IAZtB;AAaI,QAAA,QAAQ,EAAGvF,KAAD,IAAW,KAAKsF,aAAL,CAAmBtF,KAAnB,EAA0B,kBAA1B,EAA8C,CAA9C,CAbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,CADJ,eAqBI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,IAA+C,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgC,eAA5B,CAA4CC,kBAA5C,KAAmE,CAAlH,IACI,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBqF,aAAjB,KAAiC,IADrC,iBAEG,oBAAC,gBAAD;AACI,QAAA,IAAI,EAAE,oBADV;AAEI,QAAA,SAAS,EAAE,KAAKjF,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAFf;AAGI,QAAA,WAAW,EAAE,KAAKxE,KAAL,CAAWsE,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAHjB;AAII,QAAA,OAAO,EAAE,KAAKxE,KAAL,CAAWJ,KAAX,CAAiB2R,iBAJ9B;AAKI,QAAA,KAAK,EAAE,KAAKvR,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,GAAkC,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,CAAgC,oBAAhC,CAAlC,GAA0F,EALrG;AAMI,QAAA,YAAY,EAAE,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,GAAkC,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,CAAgC,oBAAhC,CAAlC,GAA0F,EAN5G;AAOI,QAAA,WAAW,EAAE,IAPjB;AAQI,QAAA,OAAO,EAAE,KARb;AASI,QAAA,YAAY,EAAE,IATlB;AAUI,QAAA,UAAU,EAAE,KAVhB;AAWI,QAAA,iBAAiB,EAAE,IAXvB;AAYI,QAAA,gBAAgB,EAAE,IAZtB;AAaI,QAAA,QAAQ,EAAGvF,KAAD,IAAW,KAAKsF,aAAL,CAAmBtF,KAAnB,EAA0B,oBAA1B,EAAgD,CAAhD,CAbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,CArBJ,CADF,eA2CE,oBAAC,wBAAD;AACI,QAAA,aAAa,EAAE,KAAKF,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,IAA+C,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BY,eAA5B,CAA4C2C,cAA3F,IAA6G,KADhI;AAEI,QAAA,IAAI,EAAE,KAAKxE,KAAL,CAAWW,IAFrB;AAGI,QAAA,UAAU,EAAErE,OAAO,CAAC,KAAK+D,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgQ,aAA5B,IAA6C,KAAK5Q,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgQ,aAAzE,IAA0F,KAAK5Q,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAA5B,IAA6C,KAAK9H,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAAnK,IAAoL,EAArL,EAAyL,KAAKnI,KAAL,CAAWS,SAApM,CAHvB;AAII,QAAA,SAAS,EAAE,KAAKT,KAAL,CAAWS,SAJ1B;AAKI,QAAA,eAAe,EAAE,KAAKH,eAL1B;AAMI,QAAA,cAAc,EAAE,KAAK6Q,cANzB;AAOI,QAAA,aAAa,EAAE,KAAKrM,aAPxB;AAQI,QAAA,cAAc,EAAE,KAAKG,cARzB;AASI,QAAA,UAAU,EAAE,KAAKE,UATrB;AAUI,QAAA,eAAe,EAAE,KAAKnF,KAAL,CAAWuM,eAVhC;AAWI,QAAA,kBAAkB,EAAE,KAAKvM,KAAL,CAAWoR,kBAXnC;AAYI,QAAA,mBAAmB,EAAE,KAAK1D,iBAAL,CAAuB,KAAK1N,KAAL,CAAWqR,eAAlC,KAAsD,EAZ/E;AAaI,QAAA,kBAAkB,EAAE,KAAK3D,iBAAL,CAAuB,KAAK1N,KAAL,CAAWsR,mBAAlC,KAA0D,EAblF;AAeI,QAAA,WAAW,EAAC,UAfhB;AAgBI,QAAA,kBAAkB,EAAE,KAAKO,kBAhB7B;AAiBI,QAAA,uBAAuB,EAAE,KAAKC,uBAjBlC;AAkBI,QAAA,kBAAkB,EAAE,IAlBxB;AAoBI,QAAA,UAAU,EAAE,KAAKvI,UApBrB;AAqBI,QAAA,UAAU,EAAE,KAAKvJ,KAAL,CAAWwM,UArB3B;AAsBI,QAAA,qBAAqB,EAAE,KAAKxM,KAAL,CAAW+I,qBAtBtC;AAuBI,QAAA,UAAU,EAAE,KAAK1I,KAAL,CAAWJ,KAAX,CAAiBsB,UAvBjC;AAwBI,QAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWJ,KAAX,CAAiBkB,QAxB/B;AAyBI,QAAA,QAAQ,EAAE,IAzBd;AA0BI,QAAA,UAAU,EAAE,YA1BhB;AA2BI,QAAA,UAAU,EAAE,OA3BhB;AA4BI,QAAA,OAAO,EAAE,MA5Bb,CA6BG;AACC;AACA;AACA;AAhCJ;AAiCI,QAAA,kBAAkB,EAAE,IAjCxB;AAmCI,QAAA,UAAU,EAAE,KAAKd,KAAL,CAAWJ,KAAX,CAAiB8G,UAnCjC;AAoCI,QAAA,QAAQ,EAAE,IApCd;AAqCI,QAAA,WAAW,EAAE,IArCjB;AAsCI,QAAA,SAAS,EACL,KAAK1G,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B8Q,aAA5B,IACA,KAAK1R,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BgK,gBAxCpC;AA0CI,QAAA,eAAe,EAAE,KAAKyC,iBAAL,CAAuB,KAAK1N,KAAL,CAAWwR,wBAAlC,KAA+D,EA1CpF;AA2CI,QAAA,iBAAiB,EAAE,WA3CvB;AA4CI,QAAA,oBAAoB,EAAE,wBA5C1B;AA6CI,QAAA,YAAY,EACR,KAAKnR,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B+Q,aAA5B,IACA,KAAK3R,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoK,WA/CpC;AAiDI,QAAA,eAAe,EAAE,KAAKhL,KAAL,CAAWJ,KAAX,CAAiByR,eAjDtC;AAkDI,QAAA,SAAS,EAAE,SAlDf;AAmDI,QAAA,qBAAqB,EAAE,KAAKlG,qBAnDhC;AAoDI,QAAA,0BAA0B,EAAE,KAAKX,0BApDrC;AAqDI,QAAA,cAAc,EAAE,KAAKxK,KAAL,CAAWJ,KAAX,CAAiBgS,cArDrC;AAsDI,QAAA,oBAAoB,EAAE,KAAKxG,oBAtD/B;AAuDI,QAAA,uBAAuB,EAAE,KAAKE,uBAvDlC;AAwDI,QAAA,6BAA6B,EAAE,KAAKR,6BAxDxC;AAyDI,QAAA,iBAAiB,EAAE,KAAK9K,KAAL,CAAWJ,KAAX,CAAiBiS,iBAzDxC;AA0DI,QAAA,eAAe,EAAE,KAAK/H,eA1D1B;AA2DI,QAAA,SAAS,EAAE,KAAK9J,KAAL,CAAWJ,KAAX,CAAiBkS,SA3DhC;AA4DI,QAAA,aAAa,EAAE,KAAKjK,gBA5DxB,CA6DG;AA7DH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3CF,CAlBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArQR,CADJ;AAwYH;;AA8TDkK,EAAAA,kBAAkB,CAACC,aAAD,EAAgB;AAC9B,QAAI;AAAEtJ,MAAAA,qBAAF;AAAyByD,MAAAA,UAAzB;AACAa,MAAAA,cADA;AAEAvH,MAAAA,cAFA;AAEgB4G,MAAAA,cAFhB;AAEgCI,MAAAA,oBAFhC;AAEsDD,MAAAA,cAFtD;AAGAE,MAAAA,uBAHA;AAGyBC,MAAAA,gBAHzB;AAG2CwD,MAAAA,iBAH3C;AAIA;AACAa,MAAAA,eALA;AAKiBC,MAAAA,mBALjB;AAKsCE,MAAAA,wBALtC;AAMCjE,MAAAA,kBAND;AAMqBnD,MAAAA,WANrB;AAMkC3J,MAAAA;AANlC,QAMgD,KAAKT,KANzD;AAQA,QAAIsS,IAAI,GAAG,KAAX;AACA,QAAInE,cAAc,GAAG,EAArB;;AAEA,QAAI,KAAK9N,KAAL,CAAWJ,KAAX,CAAiBkB,QAAjB,CAA0B6H,SAA1B,KAAwCqJ,aAAa,CAACpS,KAAd,CAAoBkB,QAApB,CAA6B6H,SAAzE,EAAoF;AAChFD,MAAAA,qBAAqB,GAAG,EAAxB;;AACA,UAAI,KAAK1I,KAAL,CAAWJ,KAAX,CAAiB8I,qBAArB,EAA4C;AACxC,aAAK1I,KAAL,CAAWJ,KAAX,CAAiB8I,qBAAjB,CAAuC,KAAK1I,KAAL,CAAWJ,KAAX,CAAiBkB,QAAjB,CAA0B6H,SAAjE,KAA+E2H,MAAM,CAACC,MAAP,CAAc,KAAKvQ,KAAL,CAAWJ,KAAX,CAAiB8I,qBAAjB,CAAuC,KAAK1I,KAAL,CAAWJ,KAAX,CAAiBkB,QAAjB,CAA0B6H,SAAjE,CAAd,EAA2F1C,GAA3F,CAA+F/D,IAAI,IAC9KwG,qBAAqB,CAACgC,IAAtB,CAA2BxI,IAAI,CAACgN,YAAhC,CAD2E,CAA/E;AAEH;;AACD/C,MAAAA,UAAU,GAAGvO,aAAa,CAAC,KAAKoC,KAAL,CAAWJ,KAAX,CAAiB8I,qBAAlB,EAAyC,KAAK1I,KAAL,CAAWJ,KAAX,CAAiBkB,QAAjB,CAA0B6H,SAAnE,CAA1B;AACAmF,MAAAA,cAAc,GAAG,KAAK9N,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwE,aAA7C;AAEA6M,MAAAA,IAAI,GAAG,IAAP;AACH,KAtB6B,CAuB9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,QAAI,KAAKjS,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,KAAoCuM,aAAa,CAACpS,KAAd,CAAoB6F,cAA5D,EAA4E;AAExEA,MAAAA,cAAc,GAAG,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F,cAAlC;AACAwM,MAAAA,IAAI,GAAG,IAAP;AACH;;AACD,QAAI,KAAKjS,KAAL,CAAWJ,KAAX,CAAiBmK,WAAjB,KAAiCiI,aAAa,CAACpS,KAAd,CAAoBmK,WAAzD,EAAsE;AAElEA,MAAAA,WAAW,GAAG,KAAK/J,KAAL,CAAWJ,KAAX,CAAiBmK,WAA/B;AACAkI,MAAAA,IAAI,GAAG,IAAP;AACH,KA3C6B,CA4C9B;AAEA;AACA;AACA;;;AACA,QAAI,KAAKjS,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,KAAgCoR,aAAa,CAACpS,KAAd,CAAoBgB,UAAxD,EAAoE;AAChE,YAAMsR,iBAAiB,GAAGnU,mBAAmB,CAAC,KAAKiC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BuR,UAA5B,IAA0C,EAA3C,EAA+C,iBAA/C,EAAkE,iBAAlE,EAAqF,WAArF,EAAkG,iBAAlG,EAAqH,KAArH,CAA7C;AACA,YAAMC,iBAAiB,GAAGrU,mBAAmB,CAAC,KAAKiC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4ByR,UAA5B,IAA0C,EAA3C,EAA+C,oBAA/C,EAAqE,oBAArE,EAA2F,WAA3F,EAAwG,oBAAxG,EAA8H,KAA9H,CAA7C,CAFgE,CAGhE;AACA;;AACA,YAAMC,uBAAuB,GAAGvU,mBAAmB,CAAC,KAAKiC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B2R,OAA5B,IAAuC,EAAxC,EAA4C,cAA5C,EAA4D,cAA5D,EAA4E,SAA5E,EAAuF,WAAvF,EAAoG,cAApG,EAAoH,KAApH,CAAnD;AACA,YAAMC,0BAA0B,GAAGzU,mBAAmB,CAAC,KAAKiC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B6R,UAA5B,IAA0C,EAA3C,EAA+C,iBAA/C,EAAkE,iBAAlE,EAAqF,SAArF,EAAgG,WAAhG,EAA6G,iBAA7G,EAAgI,KAAhI,CAAtD;AACA,YAAMC,mBAAmB,GAAG3U,mBAAmB,CAAC,KAAKiC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4B+R,YAA5B,IAA4C,EAA7C,EAAiD,oBAAjD,EAAuE,eAAvE,EAAwF5O,SAAxF,EAAmGA,SAAnG,EAA8G,IAA9G,CAA/C;AACA,YAAM6O,oBAAoB,GAAG7U,mBAAmB,CAAC,KAAKiC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BiS,eAA5B,IAA+C,EAAhD,EAAoD,4BAApD,EAAkF,cAAlF,EAAkG,YAAlG,EAAgH,oBAAhH,EAAsI,KAAtI,CAAhD;AACA,YAAMC,kBAAkB,GAAG/U,mBAAmB,CAAC,KAAKiC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoF,WAA5B,IAA2C,EAA5C,EAAgD,cAAhD,EAAgE,cAAhE,EAAgFjC,SAAhF,EAA2FA,SAA3F,EAAsG,IAAtG,CAA9C;AACA,YAAMgP,WAAW,GAAGhV,mBAAmB,CAAC,KAAKiC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BoS,IAA5B,IAAoC,EAArC,EAAyC,WAAzC,EAAsD,cAAtD,EAAsEjP,SAAtE,EAAiFA,SAAjF,EAA4F,IAA5F,CAAvC;AACAsI,MAAAA,cAAc,GAAG6F,iBAAiB,CAACjD,GAAlB,CAAsB,YAAtB,CAAjB;AACAzC,MAAAA,cAAc,GAAG4F,iBAAiB,CAACnD,GAAlB,CAAsB,YAAtB,CAAjB,CAZgE,CAahE;AACA;;AACAxC,MAAAA,oBAAoB,GAAG6F,uBAAuB,CAACrD,GAAxB,CAA4B,YAA5B,CAAvB;AACAvC,MAAAA,uBAAuB,GAAG8F,0BAA0B,CAACvD,GAA3B,CAA+B,YAA/B,CAA1B;AACAtC,MAAAA,gBAAgB,GAAG+F,mBAAmB,CAACzD,GAApB,CAAwB,YAAxB,CAAnB;AACAkB,MAAAA,iBAAiB,GAAGyC,oBAAoB,CAAC3D,GAArB,CAAyB,YAAzB,CAApB,CAlBgE,CAmBhE;AACA;;AACAgD,MAAAA,IAAI,GAAG,IAAP;AACH;;AAED,QAAI,KAAKjS,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BqS,aAA5B,IAA6C,KAAKjT,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BqS,aAA5B,KAA8CjB,aAAa,CAACpS,KAAd,CAAoBgB,UAApB,CAA+BqS,aAA9H,EAA6I;AACzI,YAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKpT,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BqS,aAA5B,CAA0CI,QAA1C,CAAmDtR,KAA9D,CAAtB;AACAiP,MAAAA,eAAe,GAAGkC,aAAa,CAACI,cAAd,GAA+BJ,aAAa,CAACI,cAA7C,GAA8D,EAAhF;AACArC,MAAAA,mBAAmB,GAAGiC,aAAa,CAACK,cAAd,CAA6BC,iBAA7B,GAAiDN,aAAa,CAACK,cAAd,CAA6BC,iBAA9E,GAAkG,EAAxH;AACArC,MAAAA,wBAAwB,GAAG+B,aAAa,CAACO,iBAAd,GAAkCP,aAAa,CAACO,iBAAhD,GAAoE,EAA/F;AAEAxB,MAAAA,IAAI,GAAG,IAAP;AAEA,UAAIhR,GAAG,GAAGpD,wBAAwB,CAAC,KAAKmC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BC,QAA7B,EAAuC,KAAKb,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKhB,KAAL,CAAWJ,KAAX,CAAiBkB,QAA5F,CAAlC;AACA2E,MAAAA,cAAc,CAAC,UAAD,CAAd,GAA6BxE,GAAG,CAACJ,QAAjC;AACA4E,MAAAA,cAAc,CAAC,QAAD,CAAd,GAA2BxE,GAAG,CAACD,MAA/B;AAEAiR,MAAAA,IAAI,GAAG,IAAP;AACH;;AACD,QAAI,KAAKjS,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwP,qBAA5B,KAAsD4B,aAAa,CAACpS,KAAd,CAAoBgB,UAApB,CAA+BwP,qBAAzF,EAAgH;AAE5G,YAAMsD,wBAAwB,GAAG3V,mBAAmB,CAAC,KAAKiC,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BwP,qBAA5B,IAAqD,EAAtD,EAA0D,4BAA1D,EAChD,kBADgD,EAC5BrM,SAD4B,EACjBA,SADiB,EACN,KADM,CAApD;AAGAmJ,MAAAA,kBAAkB,GAAGwG,wBAAwB,CAACzE,GAAzB,CAA6B,YAA7B,CAArB;AACH;;AAED,QAAIgD,IAAJ,EAAU;AACNA,MAAAA,IAAI,GAAG,KAAP;AACA,UAAI0B,OAAO,GAAG;AACVjL,QAAAA,qBADU;AACayD,QAAAA,UADb;AAEVa,QAAAA,cAFU;AAEMvH,QAAAA,cAFN;AAEsB4G,QAAAA,cAFtB;AAEsCI,QAAAA,oBAFtC;AAE4DD,QAAAA,cAF5D;AAGVE,QAAAA,uBAHU;AAGeC,QAAAA,gBAHf;AAGiCwD,QAAAA,iBAHjC;AAIV;AACAa,QAAAA,eALU;AAKOC,QAAAA,mBALP;AAK4BE,QAAAA,wBAL5B;AAKsDjE,QAAAA,kBALtD;AAK0EnD,QAAAA,WAL1E;AAMVzJ,QAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWJ,KAAX,CAAiBU,IAAjB,IAAyB,KAAKN,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAArD,IAAsE,EANlE;AAOVzH,QAAAA,UAAU,EAAEpE,OAAO,CAAC,KAAK+D,KAAL,CAAWJ,KAAX,CAAiBU,IAAjB,IAAyB,KAAKN,KAAL,CAAWJ,KAAX,CAAiBgB,UAAjB,CAA4BkH,aAArD,IAAsE,EAAvE,EAA2E,KAAKnI,KAAL,CAAWS,SAAtF,CAPT;AAQV0N,QAAAA;AARU,OAAd;;AAUA,UAAI,KAAK9N,KAAL,CAAWJ,KAAX,CAAiBmF,UAAjB,IAA6B,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBmF,UAAjB,KAAgC,IAAjE,EAAuE;AACnE,aAAK5E,QAAL,CAAc,EAAE,GAAGwT,OAAL;AAAa/P,UAAAA,SAAS,EAAE,EAAxB;AAA2BmD,UAAAA,sBAAsB,EAAC,EAAlD;AAAqDE,UAAAA,oBAAoB,EAAC;AAA1E,SAAd;AAEH,OAHD,MAIK;AACD,aAAK9G,QAAL,CAAcwT,OAAd;AACH;AAEJ,KApBD,MAsBK,IAAI,KAAK3T,KAAL,CAAWJ,KAAX,CAAiB6F,cAAjB,KAAoCuM,aAAa,CAACpS,KAAd,CAAoB6F,cAA5D,EAA4E;AAC7E,WAAKtF,QAAL,CAAc;AAAEsF,QAAAA,cAAc,EAAE,KAAKzF,KAAL,CAAWJ,KAAX,CAAiB6F;AAAnC,OAAd;AACH;AAEJ;;AAx8CiC;;AA60DtC,eAAevJ,OAAO,CAACwD,eAAD,EAAkB;AACpCtD,EAAAA,WADoC;AACvBC,EAAAA,UADuB;AACXC,EAAAA,WADW;AACEC,EAAAA,uBADF;AAC2BC,EAAAA,gBAD3B;AAEpCC,EAAAA,yBAFoC;AAETC,EAAAA,2BAFS;AAEoBC,EAAAA,8BAFpB;AAGpCC,EAAAA,uBAHoC;AAGXC,EAAAA,0BAHW;AAGiBC,EAAAA,0BAHjB;AAG6CC,EAAAA,iBAH7C;AAGgEE,EAAAA,iBAHhE;AAIlCD,EAAAA,sBAJkC;AAIVE,EAAAA,sBAJU;AAIcC,EAAAA,+BAJd;AAI+CC,EAAAA,sBAJ/C;AAIuEC,EAAAA,kBAJvE;AAKpCC,EAAAA,qBALoC;AAKdC,EAAAA,uBALc;AAKUC,EAAAA,uBALV;AAKkCC,EAAAA,oBALlC;AAKwDC,EAAAA;AALxD,CAAlB,CAAP,CAMZvB,UAAU,CAAC0D,OAAD,CANE,CAAf","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    filterColumnData,\r\n    getApprovedRecordsAsDraft,\r\n    getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport,\r\n    getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\r\n    previewAndFinalReport,getRemoveApprovedSample,getDeleteApprovedSample,UpdateApprovedSample ,getEditApprovedSample\r\n} from '../../actions';\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchJsonData, showEsign } from '../../components/CommonScript';\r\nimport { designProperties, formCode, transactionStatus } from '../../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\r\nimport { Affix } from 'rsuite';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReleaseFilter from './ReleaseFilter';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ContentPanel, ProductList } from '../product/product.styled';\r\nimport { faEdit, faExpandArrowsAlt, faEye, faRecycle, faStore, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { ReactComponent as Generate } from '../../assets/image/generate-certificate.svg'\r\nimport { ReactComponent as ReGenerate } from '../../assets/image/regenerate-icon.svg'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fileViewUrl, reportUrl } from '../../rsapi';\r\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\r\nimport { REPORTTYPE } from \"../../components/Enumeration\";\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Release extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            childDataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            SampletypeList: [],\r\n            ProjecttypeList: [],\r\n            ProjectMasterList: [],\r\n            ReporttypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            searchedData: [],\r\n            count: 0,\r\n            SampleGridItem: [],\r\n            combinedSearchField: [],\r\n            npreregno: [],\r\n            ntransactiontestcode: [],\r\n            ntransactionsamplecode: [],\r\n            stateDynamicDesign: [],\r\n\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"sreportno\", \"susername\",\"stransdisplaystatus\"];\r\n    }\r\n\r\n\r\n\r\n    // expandNextData(y) {\r\n    //     let change = []\r\n    //     let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\r\n\r\n    //     let data = x.data.every(item => {\r\n    //         return item.expanded === true\r\n    //     })\r\n    //     if (data === true) {\r\n    //         change = true\r\n    //     } else {\r\n    //         change = false\r\n    //     }\r\n    //     this.expandFunc({ change: change })\r\n\r\n    // }\r\n    dataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getReleasedApprovalVersion(inputParam)\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item\r\n                    };\r\n                    this.props.getReleasedRegistrationType(inputParamData)\r\n                }\r\n            }\r\n\r\n            else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item\r\n                    }\r\n                    this.props.getReleasedRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getReleasedApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n\r\n\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                // const inputParamData = {\r\n                //     dfrom: obj.fromDate,\r\n                //     dto: obj.toDate,\r\n                //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     masterData: { ...this.props.Login.masterData },\r\n                //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                //     ndesigntemplatemappingcode: comboData.value,\r\n                //     DesignTemplateMappingValue: comboData.item\r\n                // }\r\n                // this.props.getReleaseFilterBasedTest(inputParamData)\r\n\r\n                let masterData = { ...this.props.Login.masterData, DesignTemplateMappingValue: comboData.item }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getReleasedFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            //Don't Remove\r\n            // else if (fieldName === 'nsectioncode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n            //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             nsectioncode: comboData.value === -1 ? null\r\n            //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //                 : comboData.value,\r\n            //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n            //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            //         }\r\n\r\n            //         this.props.getReleasedFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n            // else if (fieldName === 'njobstatuscode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n            //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: { masterData }\r\n            //         }\r\n            //         this.props.updateStore(updateInfo);\r\n            //     }\r\n            // }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ncoareporttypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\r\n                    let masterData = { ...this.props.Login.masterData, ReportTypeValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            // else {\r\n            //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n            //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n            //         //  const updateInfo = {\r\n            //         //     typeName: DEFAULT_RETURN,\r\n            //         //    data: { masterData }\r\n            //         // }\r\n\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: comboData.value,\r\n            //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n            //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n            //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n            //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n            //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n\r\n            //         }\r\n\r\n            //         this.props.getReleaseFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        this.props.Login.change = false\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            //  realUserSectionValue, realTestValue,\r\n            realDesignTemplateMappingValue,\r\n            realReportTypeValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    //end- search logic\r\n    checkFunction = (data) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                arrayfalse: data.arrayfalse,\r\n                childfalsearray: data.childfalsearray\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    checkFunction1 = () => {\r\n        this.setState({\r\n            count: 1\r\n        })\r\n    }\r\n    expandFunc = (change) => {\r\n        let count = change.count;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...this.props.Login.masterData },\r\n                change: change.change,\r\n                isAddPopup: false,\r\n                isEditPopup:false,\r\n                isDeletePopup:false,\r\n                checkFlag: \"1\",\r\n                count: count\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n    viewReport = () => {\r\n        if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\r\n            let showReport = true;\r\n            this.setState({ showReport });\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTNOTGENERATED\" }));\r\n        }\r\n    }\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let filePath = \"\";\r\n        if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\r\n            filePath = reportUrl();\r\n        } else {\r\n            filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\r\n        }\r\n        let userStatusCSS = \"\";\r\n        let activeIconCSS = \"fa fa-check\";\r\n        if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\r\n            userStatusCSS = \"outline-secondary\";\r\n            activeIconCSS = \"\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else {\r\n            userStatusCSS = \"outline-Final\";\r\n        }\r\n        const filterParam = {\r\n            inputListName: \"ReleaseHistory\",\r\n            selectedObject: \"selectedReleaseHistory\",\r\n            primaryKeyField: \"ncoaparentcode\",\r\n            fetchUrl: \"release/getReleaseHistory\",\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList,\r\n            fecthInputObject: {\r\n                isSearch: true, userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: this.searchFieldList,\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined)\r\n                    || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                //  nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n        };\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REPORTTYPE\",\r\n                \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" :\r\n                    this.props.Login.masterData.ReportTypeValue ?\r\n                        this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\r\n            }\r\n        ];\r\n        const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"Release\")\r\n            && this.state.controlMap.get('Release').ncontrolcode; \r\n        const previewId =\r\n            this.state.controlMap.has(\"PreviewReport\") &&\r\n            this.state.controlMap.get(\"PreviewReport\").ncontrolcode;\r\n        const downloadId =\r\n            this.state.controlMap.has(\"DownloadRelease\") &&\r\n            this.state.controlMap.get(\"DownloadRelease\").ncontrolcode;\r\n        const regenerateId =\r\n            this.state.controlMap.has(\"RegenerateRelease\") &&\r\n            this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\r\n        const viewreportId =\r\n            this.state.controlMap.has(\"ViewReportRelease\") &&\r\n            this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\r\n        const sendtoportalId =\r\n            this.state.controlMap.has(\"SendToPortal\") &&\r\n            this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\r\n        const editId =\r\n            this.state.controlMap.has(\"EditSamples\") &&\r\n            this.state.controlMap.get(\"EditSamples\").ncontrolcode;\r\n        const deleteId =\r\n            this.state.controlMap.has(\"RemoveSamples\") &&\r\n            this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\r\n        const ReleaseMasterDataParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\r\n            //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\r\n            masterData: { ...this.props.Login.masterData },\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.npreregno) || \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                //   'nsectioncode': this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n\r\n                // 'ncoahistorycode':COAHistory\r\n\r\n            }\r\n        };\r\n\r\n        const ApprovedModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'isAddPopup': true,\r\n                'isPopup': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n\r\n\r\n            }\r\n        };\r\n        const RemoveModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus)  : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'nneedremove': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'ncoaparentcode':this.props.Login.masterData.selectedReleaseHistory&&this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\r\n                 ncontrolCode:deleteId,\r\n\r\n\r\n            }\r\n        };\r\n        const EditModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus)  : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'nneededit': true,\r\n                'isPopup':true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'ncoaparentcode':this.props.Login.masterData.selectedReleaseHistory&&this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\r\n                 ncontrolCode:editId,\r\n\r\n\r\n            }\r\n        };\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Release\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory}\r\n                                getMasterDetail={(ReleaseSample) =>\r\n                                    this.props.getReleasedDataDetails(\r\n\r\n                                        {\r\n                                            ...ReleaseMasterDataParam,\r\n                                            ...ReleaseSample\r\n                                        }\r\n                                    )\r\n                                }\r\n                                selectedMaster={this.props.Login.masterData.selectedReleaseHistory}\r\n                                primaryKeyField=\"ncoaparentcode\"\r\n                                mainField=\"sreportno\"\r\n                                firstField=\"susername\" \r\n                                secondField=\"sgenerateddate\"\r\n                              // secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={releaseId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getApprovedSample(ApprovedModalParam, releaseId)}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <ReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            ReportType={this.state.ReporttypeList || []}\r\n                                            ReportTypeValue={this.props.Login.masterData.ReportTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            //   UserSection={this.state.UserSectionList || []}\r\n                                            //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            //   Test={this.state.TestList || []}\r\n                                            //  TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                            <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                {/* <i className={activeIconCSS}></i> */}\r\n                                                                {this.props.Login.masterData.selectedReleaseHistory.stransdisplaystatus}\r\n                                                            </span>\r\n                                                {/* {this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.sreportno} */}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                        {this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nprojectspecrequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.props.getEditApprovedSample(EditModalParam)}\r\n                                                            \r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faEdit} />\r\n\r\n                                                            </Nav.Link>\r\n                                                          } \r\n                                                       {this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nprojectspecrequired === transactionStatus.YES &&\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                           onClick={() => this.props.getRemoveApprovedSample(RemoveModalParam)}\r\n                                                            \r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faTrash} />\r\n\r\n                                                        </Nav.Link>\r\n                                                        }  \r\n                                                    <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(previewId) === -1}\r\n                                                           onClick={() => this.previewReport()}\r\n                                                            \r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faEye} />\r\n\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                            onClick={() => this.downloadReleasedFile()}>\r\n                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(regenerateId) === -1}\r\n                                                            onClick={() => this.regenerateReleasedFile('IDS_REGENERATEFILE')}>\r\n                                                            <ReGenerate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link>\r\n\r\n\r\n                                                        <Nav.Link\r\n\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(viewreportId) === -1}\r\n                                                            onClick={() => this.viewReport()}>\r\n                                                            <FontAwesomeIcon icon={faExpandArrowsAlt} />\r\n                                                        </Nav.Link>\r\n                                                        {this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nportalrequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n\r\n                                                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(sendtoportalId) === -1}\r\n                                                                onClick={() => this.sendToPortal()}>\r\n                                                                <FontAwesomeIcon icon={faStore} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                    </ProductList>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            {/* <Row>\r\n                                                <Col md=\"4\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REPORTNO\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                            this.props.Login.masterData.selectedReleaseHistory.sreportno}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n\r\n                                            </Row> */}\r\n                                            <DataGridWithMultipleGrid\r\n                                                needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                data={this.state.data}\r\n                                                dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState)}\r\n                                                dataState={this.state.dataState}\r\n                                                dataStateChange={this.dataStateChange}\r\n                                                expandNextData={this.expandNextData}\r\n                                                checkFunction={this.checkFunction}\r\n                                                checkFunction1={this.checkFunction1}\r\n                                                expandFunc={this.expandFunc}\r\n                                                //expandData={this.expandData}\r\n                                                childDataResult={this.state.childDataResult}\r\n                                                subChildDataResult={this.state.subChildDataResult}\r\n                                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                                expandField=\"expanded\"\r\n                                                reloadData={this.reloadData}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                pageable={true}\r\n                                                scrollable={'scrollable'}\r\n                                                gridHeight={'525px'}\r\n                                                gridTop={'10px'}\r\n                                                //   isActionRequired={true}\r\n                                                //   isToolBarRequired={true}\r\n                                                //  isExpandRequired={true}\r\n                                                //   isDownloadRequired={true}\r\n                                                isCheckBoxRequired={false}\r\n                                                isCollapseRequired={true}\r\n\r\n                                                selectedId={this.props.Login.selectedId}\r\n                                                hasChild={true}\r\n                                                hasSubChild={true}\r\n                                                childList={\r\n                                                    this.props.Login.masterData.ReleasedSubSampleDetails\r\n                                                }\r\n                                                childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                childMappingField={\"npreregno\"}\r\n                                                subChildMappingField={\"ntransactionsamplecode\"}\r\n\r\n                                                // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                                subChildList={\r\n                                                    this.props.Login.masterData.ReleasedTestDetails\r\n                                                }\r\n                                                selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                methodUrl={\"Release\"}\r\n                                                headerSelectionChange={this.headerSelectionChange}\r\n                                                childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                childSelectionChange={this.childSelectionChange}\r\n                                                subChildSelectionChange={this.subChildSelectionChange}\r\n                                                subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                selectionChange={this.selectionChange}\r\n                                                releaseRecord={this.onSaveModalClick}\r\n                                               // viewDownloadFile={this.viewDownloadFile}\r\n                                            />\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"\r\n                            }\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div >\r\n                {\r\n                    this.state.showReport ?\r\n                        <DocViewer file={filePath}\r\n                            showReport={this.state.showReport}\r\n                            closeModal={this.closeDocModal}\r\n                            type={\"pdf\"}>\r\n                        </DocViewer>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        size={\"xl\"}\r\n                        closeModal={this.closeModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.intl.formatMessage({ id: \"IDS_RELEASE\" })}\r\n                        onSaveClick={this.onSaveModalClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <>\r\n                                <Row>\r\n                                    <Col md={4}>\r\n                                        {this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode === 7 &&\r\n                                            this.props.Login.isDeletePopup!==true &&\r\n                                            <FormSelectSearch\r\n                                                name={\"nprojecttypecode\"}\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                options={this.props.Login.ProjectTypeList}\r\n                                                value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                isMandatory={true}\r\n                                                isMulti={false}\r\n                                                isSearchable={true}\r\n                                                isDisabled={false}\r\n                                                closeMenuOnSelect={true}\r\n                                                alphabeticalSort={true}\r\n                                                onChange={(event) => this.onComboChange(event, 'nprojecttypecode', 1)}\r\n                                            />\r\n                                        }\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        {this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode === 7 &&\r\n                                             this.props.Login.isDeletePopup!==true &&\r\n                                            <FormSelectSearch\r\n                                                name={\"nprojectmastercode\"}\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                options={this.props.Login.projectMasterList}\r\n                                                value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\"}\r\n                                                defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\"}\r\n                                                isMandatory={true}\r\n                                                isMulti={false}\r\n                                                isSearchable={true}\r\n                                                isDisabled={false}\r\n                                                closeMenuOnSelect={true}\r\n                                                alphabeticalSort={true}\r\n                                                onChange={(event) => this.onComboChange(event, 'nprojectmastercode', 1)}\r\n                                            />\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                                <DataGridWithMultipleGrid\r\n                                    needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                    data={this.state.data}\r\n                                    dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    expandNextData={this.expandNextData}\r\n                                    checkFunction={this.checkFunction}\r\n                                    checkFunction1={this.checkFunction1}\r\n                                    expandFunc={this.expandFunc}\r\n                                    childDataResult={this.state.childDataResult}\r\n                                    subChildDataResult={this.state.subChildDataResult}\r\n                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                    subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                    expandField=\"expanded\"\r\n                                    handleExpandChange={this.handleExpandChange}\r\n                                    childHandleExpandChange={this.childHandleExpandChange}\r\n                                    isCheckBoxRequired={true}\r\n\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    pageable={true}\r\n                                    scrollable={'scrollable'}\r\n                                    gridHeight={'600px'}\r\n                                    gridTop={'10px'}\r\n                                   // isActionRequired={true}\r\n                                    //   isToolBarRequired={true}\r\n                                    //  isExpandRequired={true}\r\n                                    //   isDownloadRequired={true}\r\n                                    isCollapseRequired={true}\r\n\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    hasChild={true}\r\n                                    hasSubChild={true}\r\n                                    childList={\r\n                                        this.props.Login.masterData.searchedData2 ||\r\n                                        this.props.Login.masterData.ReleaseSubSample\r\n                                    }\r\n                                    childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                    childMappingField={\"npreregno\"}\r\n                                    subChildMappingField={\"ntransactionsamplecode\"}\r\n                                    subChildList={\r\n                                        this.props.Login.masterData.searchedData3 ||\r\n                                        this.props.Login.masterData.ReleaseTest\r\n                                    }\r\n                                    selectedsubcild={this.props.Login.selectedsubcild}\r\n                                    methodUrl={\"Release\"}\r\n                                    headerSelectionChange={this.headerSelectionChange}\r\n                                    childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                    childSelectAll={this.props.Login.childSelectAll}\r\n                                    childSelectionChange={this.childSelectionChange}\r\n                                    subChildSelectionChange={this.subChildSelectionChange}\r\n                                    subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                    subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                    selectionChange={this.selectionChange}\r\n                                    selectAll={this.props.Login.selectAll}\r\n                                    releaseRecord={this.onSaveModalClick}\r\n                                   // viewDownloadFile={this.viewDownloadFile}\r\n                                />\r\n                            </>}\r\n                    />\r\n                }\r\n\r\n            </>\r\n        );\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n        if (fieldName === 'nprojecttypecode') {\r\n            const inputParamData = {\r\n\r\n                nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                nprojecttypecode: comboData.value,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n            }\r\n            this.props.getApprovedProjectByProjectType(inputParamData)\r\n        }\r\n        if (fieldName === 'nprojectmastercode') {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let realFromDate = obj.fromDate;\r\n            let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nprojectmastercode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n               // ModalStatusValue: true,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData\r\n                }\r\n\r\n                this.props.getReleasedSample(inputParam)\r\n            }\r\n        }\r\n    }\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let closeModal = true;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign,closeModal },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n   \r\n    previewReport = () => {\r\n   \r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                change: this.props.Login.change,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                        this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                        String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                    null,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) ,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                action :'IDS_DOWNLOADFILE',\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.previewAndFinalReport(inputParam.inputData, this.props.Login.masterData)\r\n    }\r\n    downloadReleasedFile = () => {\r\n      \r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n               // ntransactionsamplecode: ntransactionsamplecode,\r\n                //ntransactiontestcode: ntransactiontestcode,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                        this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                        String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                    null,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n               // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) ,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                nsectioncode: -1,\r\n                nflag: 2,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData)\r\n\r\n\r\n\r\n    }\r\n    regenerateReleasedFile = (action) => {\r\n    \r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n      \r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                 npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n\r\n             //   ntransactiontestcode: ntransactiontestcode,\r\n                //  nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                //     this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                //        this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                //        String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                //    null,\r\n                //  ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n                ntransactionstatus: String(transactionStatus.RELEASED),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                nflag: 2,\r\n                userinfo: this.props.Login.userInfo,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                action,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.previewAndFinalReport(inputParam.inputData, this.props.Login.masterData)\r\n\r\n\r\n\r\n    }\r\n    onSaveModalClick = () => {\r\n        let ntransactionsamplecode = \"\"\r\n        let ntransactiontestcode = \"\"\r\n        let npreregno = \"\"\r\n        if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\r\n            if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n                let sample = this.state.npreregno.filter((c, index) => {\r\n                    return this.state.npreregno.indexOf(c) === index;\r\n                });\r\n                let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n                    return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n                });\r\n                let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n                    return this.state.ntransactiontestcode.indexOf(c) === index;\r\n                });\r\n                \r\n                npreregno = sample.map(x => x).join(\",\")\r\n                ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n                ntransactiontestcode = test.map(x => x).join(\",\")\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                const inputParam = {\r\n                    inputData: {\r\n                        change: this.props.Login.change,\r\n                        npreregno: String(npreregno),\r\n                        ntransactionsamplecode: ntransactionsamplecode,\r\n                        ntransactiontestcode: ntransactiontestcode,\r\n                        ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\r\n                            && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\r\n                        url: this.props.Login.settings[24],\r\n                        ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        isAddPopup: false,\r\n                        isEditPopup: false,\r\n                        nflag: 2,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    methodUrl: \"Release\",\r\n                    classUrl: \"release\",\r\n                    operation:this.props.Login.operation\r\n                }\r\n              \r\n                    const masterData = this.props.Login.masterData;\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)) {\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true,\r\n                                screenData: { inputParam, masterData },\r\n                                operation:this.props.Login.operation,\r\n                                screenName: this.props.Login.screenName,\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        if (this.props.Login.isDeletePopup) {\r\n                            this.props.getDeleteApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\r\n                        }\r\n                        else if (this.props.Login.isEditPopup) {\r\n                            this.props.UpdateApprovedSample (this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)  \r\n                        }\r\n                        else {\r\n                            this.props.getApprovedRecordsAsDraft(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\r\n                        }\r\n                    }\r\n                \r\n            }\r\n            else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n            }\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n        }\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            SampleGridItem,\r\n            selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n            RegistrationSubTypeList, FilterStatusList, ConfigVersionList,\r\n            //UserSectionList, TestList,\r\n            DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem,\r\n             stateDynamicDesign, checkedflag, dataState } = this.state;\r\n\r\n        let bool = false;\r\n        let reportFilePath = \"\";\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            reportFilePath = this.props.Login.masterData.ReportPDFFile;\r\n\r\n            bool = true;\r\n        }\r\n        // else {\r\n        //     if (this.state.dataState === undefined) {\r\n        //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n        //     }\r\n        //     //  const npreregno =  [];\r\n        //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        //     bool = true;\r\n\r\n        // }\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\r\n\r\n            checkedflag = this.props.Login.checkedflag\r\n            bool = true;\r\n        }\r\n        // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\r\n\r\n        //     npreregno = this.props.Login.npreregno\r\n        //     bool = true;\r\n        // }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false);\r\n            // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\r\n            // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            ReporttypeList = ReporttypeListMap.get(\"OptionList\");\r\n            // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\r\n            //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            //  UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            //   TestList = TestListMap.get(\"OptionList\");\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\r\n            DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n\r\n        if (bool) {\r\n            bool = false;\r\n            let allData = {\r\n                userRoleControlRights, controlMap,\r\n                SampleGridItem, selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n                RegistrationSubTypeList, FilterStatusList, ConfigVersionList,\r\n                //UserSectionList, TestList,\r\n                DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem, stateDynamicDesign, checkedflag,\r\n                data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n                reportFilePath\r\n            }\r\n            if (this.props.Login.isAddPopup&&this.props.Login.isAddPopup === true) {\r\n                this.setState({ ...allData,npreregno: [],ntransactionsamplecode:[],ntransactiontestcode:[] });\r\n\r\n            }\r\n            else {\r\n                this.setState(allData);\r\n            }\r\n\r\n        }\r\n       \r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n    }\r\n    sendToPortal = () => {\r\n            const inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                url: this.props.Login.settings[24],\r\n                isPortal:true,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                allPreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                userinfo: this.props.Login.userInfo\r\n\r\n            }\r\n\r\n            this.props.getReportForPortal(inputParam)\r\n        \r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData\"]\r\n\r\n        this.props.Login.change = false\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue } = this.props.Login.masterData\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ncoareporttypecode: (realReportTypeValue && realReportTypeValue.ncoareporttypecode) || -1,\r\n            ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n            // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode !== -1\r\n        ) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    closeDocModal = () => {\r\n        let openModal = false;\r\n        let showReport = false;\r\n        let selectedRecord = {};\r\n        this.setState({ showReport, openModal, selectedRecord });\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[event.target.name] = event.target.value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    selectionChange = (event, nflag, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (nflag === undefined) {\r\n            this.state.dataResult.data.map(item => {\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n\r\n            })\r\n            let preregno = event.dataItem.npreregno\r\n            let ncoahistorycode = event.dataItem.ncoahistorycode\r\n            let ssystemfilename = event.dataItem.ssystemfilename\r\n            const coaFileInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { ncoahistorycode, ssystemfilename },\r\n            };\r\n            this.props.updateStore(coaFileInfo);\r\n\r\n            this.childHeaderSelectionChange(event, preregno, checkedflag)\r\n        }\r\n        else {\r\n            let data = []\r\n            event.dataItems.map(item => {\r\n                data.push({ \"npreregno\": item.npreregno })\r\n            })\r\n            this.childHeaderSelectionChange(event, data, checkedflag)\r\n\r\n        }\r\n\r\n    }\r\n    childHeaderSelectionChange = (event, preregno, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let subsamplecode = [];\r\n        let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno\r\n        if (npreregno.length === 0 || npreregno.length === undefined) {\r\n            this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\r\n\r\n                item.selected = checked\r\n                if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                    subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                }\r\n\r\n            })\r\n            this.props.Login.masterData.ReleaseSample.map(data => {\r\n                if (data.npreregno === npreregno) {\r\n                    data.selected = checked\r\n                }\r\n            })\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n        else {\r\n            npreregno.map(value => {\r\n                this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\r\n                    item.selected = checked\r\n                    if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                        subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                    }\r\n                })\r\n\r\n            })\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n\r\n    }\r\n\r\n    subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let transactionsamplecode = []\r\n        if (subsamplecode !== undefined) {\r\n            transactionsamplecode = subsamplecode\r\n            transactionsamplecode.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n\r\n                    return item;\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            event.dataItems.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n                    return item;\r\n                })\r\n            )\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\r\n                if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\r\n                return item.selected === true;\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (event.dataItems.length !== 0) {\r\n            this.state.dataResult.data.map(item => {\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n            this.selectionChange(event, 1, checked);\r\n        }\r\n        else {\r\n            this.setState({ npreregno: [], ntransactionsamplecode: [], ntransactiontestcode: [] })\r\n        }\r\n    }\r\n    childSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                item.selected = checked;\r\n            }\r\n\r\n        })\r\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n            return item.slected === true\r\n        })\r\n        if (data === true) {\r\n            this.props.Login.masterData.ReleaseSample.map(item => {\r\n                if (event.dataItem.npreregno === item.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n                return item.selected === true\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    subChildSelectionChange = (event) => {\r\n        let x = []\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = checked;\r\n                this.collectData(item)\r\n            }\r\n        })\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n\r\n            if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\r\n                    x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y = x.filter(t => t.selected === true);\r\n        if (x.length === y.length) {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false\r\n                }\r\n            })\r\n        }\r\n        this.state.dataResult.data.map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno) {\r\n                if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\r\n                    x = this.props.Login.masterData.ReleaseSubSample[item.npreregno]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y1 = x.filter(t => t.selected === true);\r\n        if (x.length === y1.length) {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === y1[0].npreregno) {\r\n                    this.state.dataResult.data[i].selected = true\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === event.dataItem.npreregno) {\r\n                    this.state.dataResult.data[i].selected = false\r\n                }\r\n            })\r\n        }\r\n    }\r\n    collectData = (item, checkedflag) => {\r\n        let npreregno = this.state.npreregno || []\r\n        let ntransactionsamplecode = this.state.ntransactionsamplecode || []\r\n        let ntransactiontestcode = this.state.ntransactiontestcode || []\r\n        if (item.selected === true) {\r\n            if (!npreregno.includes(item.npreregno)) {\r\n                npreregno.push(item.npreregno)\r\n            }\r\n            if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                ntransactionsamplecode.push(item.ntransactionsamplecode)\r\n            }\r\n            // Don't Remove\r\n            if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                ntransactiontestcode.push(item.ntransactiontestcode)\r\n            }\r\n        }\r\n        else {\r\n            const preregno = npreregno.filter(data => data !== item.npreregno)\r\n            npreregno = preregno\r\n\r\n            const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode)\r\n            ntransactionsamplecode = transactionsamplecode\r\n            // Don't Remove\r\n            const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode)\r\n            ntransactiontestcode = transactiontestcode\r\n        }\r\n        this.setState({\r\n            npreregno: checkedflag === false ? [] : npreregno,\r\n            ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode, ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\r\n        })\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, getApprovedSample\r\n    , generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\r\n    previewAndFinalReport,getRemoveApprovedSample,getDeleteApprovedSample,UpdateApprovedSample ,getEditApprovedSample\r\n})(injectIntl(Release));"]},"metadata":{},"sourceType":"module"}