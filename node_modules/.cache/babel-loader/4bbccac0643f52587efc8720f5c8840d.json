{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\AddPredefinedUserFormula.jsx\";\nimport React, { Component } from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col, Row } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { injectIntl } from 'react-intl';\n\nclass AddPredefinedUserFormula extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"sformulaname\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_FORMULANAME\"\n      }),\n      type: \"text\",\n      onChange: event => this.props.onInputOnChange(event, 1),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_FORMULANAME\"\n      }),\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"sformulaname\"] : \"\",\n      isMandatory: \"*\",\n      required: true,\n      maxLength: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"npredefinedformulacode\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_PREDEFINEDFORMULA\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.preDefinedFormula || [],\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"npredefinedformulacode\"] : \"\",\n      isMandatory: true,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: false,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, 'npredefinedformulacode', 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }\n    })));\n  }\n\n}\n\nexport default injectIntl(AddPredefinedUserFormula);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/testmanagement/AddPredefinedUserFormula.jsx"],"names":["React","Component","FormSelectSearch","Col","Row","FormInput","injectIntl","AddPredefinedUserFormula","render","props","intl","formatMessage","id","event","onInputOnChange","selectedRecord","preDefinedFormula","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAGA,MAAMC,wBAAN,SAAuCN,SAAvC,CAAiD;AAE7CO,EAAAA,MAAM,GAAG;AAEL,wBACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD,oBAAC,SAAD;AACK,MAAA,IAAI,EAAE,cADX;AAEK,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFZ;AAGK,MAAA,IAAI,EAAC,MAHV;AAIK,MAAA,QAAQ,EAAGC,KAAD,IAAW,KAAKJ,KAAL,CAAWK,eAAX,CAA2BD,KAA3B,EAAkC,CAAlC,CAJ1B;AAKK,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CALlB;AAMK,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWM,cAAX,GAA2B,KAAKN,KAAL,CAAWM,cAAX,CAA0B,cAA1B,CAA3B,GAAqE,EANjF;AAOK,MAAA,WAAW,EAAC,GAPjB;AAQK,MAAA,QAAQ,EAAE,IARf;AASK,MAAA,SAAS,EAAE,GAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,eAYD,oBAAC,gBAAD;AACK,MAAA,IAAI,EAAE,wBADX;AAEK,MAAA,SAAS,EAAE,KAAKN,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAFhB;AAGK,MAAA,WAAW,EAAE,KAAKH,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAHlB;AAIK,MAAA,OAAO,EAAG,KAAKH,KAAL,CAAWO,iBAAX,IAAgC,EAJ/C;AAKK,MAAA,KAAK,EAAK,KAAKP,KAAL,CAAWM,cAAX,GAA4B,KAAKN,KAAL,CAAWM,cAAX,CAA0B,wBAA1B,CAA5B,GAAgF,EAL/F;AAMK,MAAA,WAAW,EAAE,IANlB;AAOK,MAAA,OAAO,EAAE,KAPd;AAQK,MAAA,YAAY,EAAE,IARnB;AASK,MAAA,UAAU,EAAE,KATjB;AAUK,MAAA,iBAAiB,EAAE,IAVxB;AAWK,MAAA,QAAQ,EAAKF,KAAD,IAAU,KAAKJ,KAAL,CAAWQ,aAAX,CAAyBJ,KAAzB,EAAgC,wBAAhC,EAAyD,CAAzD,CAX3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZC,CADJ,CADR;AA+BC;;AAnCwC;;AAuC7C,eAAeP,UAAU,CAACC,wBAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nclass AddPredefinedUserFormula extends Component {\r\n\r\n    render() {\r\n        \r\n        return(\r\n                <Row>\r\n                    <Col md={12}>    \r\n                   <FormInput\r\n                        name={\"sformulaname\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_FORMULANAME\" })}\r\n                        type=\"text\"\r\n                        onChange={(event) => this.props.onInputOnChange(event, 1)}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_FORMULANAME\" })}\r\n                        value={this.props.selectedRecord? this.props.selectedRecord[\"sformulaname\"]:\"\"}\r\n                        isMandatory=\"*\"\r\n                        required={true}\r\n                        maxLength={100}\r\n                    />\r\n                   <FormSelectSearch\r\n                        name={\"npredefinedformulacode\"}\r\n                        formLabel={this.props.intl.formatMessage({ id:\"IDS_PREDEFINEDFORMULA\"})}                              \r\n                        placeholder={this.props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                              \r\n                        options={ this.props.preDefinedFormula || []}\r\n                        value = { this.props.selectedRecord ? this.props.selectedRecord[\"npredefinedformulacode\"]:\"\"}\r\n                        isMandatory={true}\r\n                        isMulti={false}\r\n                        isSearchable={true}                                \r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        onChange = {(event)=> this.props.onComboChange(event, 'npredefinedformulacode',1)}                               \r\n                                />\r\n                    </Col>\r\n                        \r\n                </Row>\r\n            )   \r\n        }\r\n\r\n    }\r\n    \r\n    export default injectIntl(AddPredefinedUserFormula);"]},"metadata":{},"sourceType":"module"}