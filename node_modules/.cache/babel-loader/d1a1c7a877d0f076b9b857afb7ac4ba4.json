{"ast":null,"code":"import React from'react';import{faPlus}from'@fortawesome/free-solid-svg-icons';import{Nav,Row,Col}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{FormattedMessage}from'react-intl';import DataGrid from'../../components/data-grid/data-grid.component';import{transactionStatus}from'../../components/Enumeration';var TestContainerTypeTab=function TestContainerTypeTab(props){var addContainerTypeId=props.controlMap.has(\"AddTestContainerType\")&&props.controlMap.get(\"AddTestContainerType\").ncontrolcode;var testContinerTypeColumnList=[{\"idsName\":\"IDS_CONTAINERTYPE\",\"dataField\":\"scontainertype\",\"width\":\"200px\"},{\"idsName\":\"IDS_QUANTITY\",\"dataField\":\"nquantity\",\"width\":\"200px\"},{\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",\"width\":\"200px\"},{\"idsName\":\"IDS_SETASDEFAULT\",\"dataField\":\"stransdisplaystatus\",\"width\":\"100px\",\"componentName\":\"switch\",//ALPD-3510\n\"switchFieldName\":\"ndefaultstatus\",\"switchStatus\":transactionStatus.YES,\"needRights\":true,\"controlName\":\"DefaultTestContainerType\"}];var methodUrl=\"TestContainerType\";// const editId = props.inputParam && props.controlMap.has(\"Edit\".concat(props.inputParam.methodUrl))\n//                     && props.controlMap.get(\"Edit\".concat(props.inputParam.methodUrl)).ncontrolcode;\nvar editParam={screenName:\"IDS_CONTAINERTYPE\",operation:\"update\",primaryKeyField:\"ntestcontainertypecode\",inputParam:props.inputParam,userInfo:props.userInfo// ,  ncontrolCode:editId\n};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addcontainertype\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(addContainerTypeId)===-1// onClick={()=>props.getAvailableData(props.selectedTest, \"getAvailableContainerType\", \n//     \"containertype\", \"IDS_CONTAINERTYPE\", props.userInfo, addContainerTypeId)}>\n,onClick:function onClick(){return props.addContainerType(\"create\",props.selectedTest,props.userInfo,addContainerTypeId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CONTAINERTYPE\",defaultMessage:\"Container Type\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid,{key:\"testcontainertypekey\",primaryKeyField:\"ntestcontainertypecode\",data:props.TestContainerType||[],dataResult:props.dataResult,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:testContinerTypeColumnList,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,inputParam:props.inputParam,userInfo:props.userInfo,deleteRecord:props.deleteRecord,pageable:true,scrollable:'scrollable',gridHeight:'450px',isActionRequired:true,deleteParam:{operation:\"delete\",methodUrl:methodUrl},methodUrl:methodUrl,fetchRecord:props.getActiveTestContainerTypeById,editParam:editParam,hideColumnFilter:false,onSwitchChange:props.defaultRecord,switchParam:{operation:\"Default\",methodUrl:methodUrl}}))));};export default TestContainerTypeTab;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/TestContainerTypeTab.jsx"],"names":["React","faPlus","Nav","Row","Col","FontAwesomeIcon","FormattedMessage","DataGrid","transactionStatus","TestContainerTypeTab","props","addContainerTypeId","controlMap","has","get","ncontrolcode","testContinerTypeColumnList","YES","methodUrl","editParam","screenName","operation","primaryKeyField","inputParam","userInfo","userRoleControlRights","indexOf","addContainerType","selectedTest","TestContainerType","dataResult","dataState","dataStateChange","deleteRecord","getActiveTestContainerTypeById","defaultRecord"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst TestContainerTypeTab = (props) => {\r\n    const addContainerTypeId = props.controlMap.has(\"AddTestContainerType\") && props.controlMap.get(\"AddTestContainerType\").ncontrolcode;\r\n    const testContinerTypeColumnList = [\r\n        {\"idsName\":\"IDS_CONTAINERTYPE\",\"dataField\":\"scontainertype\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_QUANTITY\",\"dataField\":\"nquantity\",\"width\":\"200px\"},\r\n\r\n        {\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_SETASDEFAULT\",\"dataField\":\"stransdisplaystatus\",\"width\":\"100px\", \"componentName\": \"switch\", \r\n        //ALPD-3510\r\n        \"switchFieldName\": \"ndefaultstatus\", \"switchStatus\": transactionStatus.YES, \"needRights\": true, \"controlName\": \"DefaultTestContainerType\"}\r\n\r\n    ];    \r\n    const methodUrl = \"TestContainerType\";\r\n    // const editId = props.inputParam && props.controlMap.has(\"Edit\".concat(props.inputParam.methodUrl))\r\n    //                     && props.controlMap.get(\"Edit\".concat(props.inputParam.methodUrl)).ncontrolcode;\r\n    const editParam = {screenName:\"IDS_CONTAINERTYPE\" , operation:\"update\", \r\n    primaryKeyField:\"ntestcontainertypecode\", inputParam:props.inputParam,  userInfo:props.userInfo\r\n   // ,  ncontrolCode:editId\r\n};\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"addcontainertype\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addContainerTypeId) === -1}\r\n                        // onClick={()=>props.getAvailableData(props.selectedTest, \"getAvailableContainerType\", \r\n                        //     \"containertype\", \"IDS_CONTAINERTYPE\", props.userInfo, addContainerTypeId)}>\r\n                        onClick={() => props.addContainerType(\"create\", props.selectedTest, props.userInfo, addContainerTypeId)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> {\" \"}\r\n                        <FormattedMessage id=\"IDS_CONTAINERTYPE\" defaultMessage=\"Container Type\" />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid\r\n                        key=\"testcontainertypekey\"\r\n                        primaryKeyField=\"ntestcontainertypecode\"\r\n                        data={props.TestContainerType || []}\r\n                        dataResult={props.dataResult}\r\n                        dataState={props.dataState}\r\n                        dataStateChange={props.dataStateChange}\r\n                        extractedColumnList={testContinerTypeColumnList}\r\n                        controlMap={ props.controlMap }\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        inputParam={props.inputParam}\r\n                        userInfo={props.userInfo}\r\n                        deleteRecord={props.deleteRecord}\r\n                        pageable={true}\r\n                        scrollable={'scrollable'}\r\n                        gridHeight={'450px'}\r\n                        isActionRequired={true}\r\n                        deleteParam={{operation:\"delete\", methodUrl}}\r\n                        methodUrl={methodUrl}\r\n                        fetchRecord = {props.getActiveTestContainerTypeById}\r\n                        editParam={editParam}\r\n                        hideColumnFilter={false}\r\n                        onSwitchChange={props.defaultRecord}\r\n                        switchParam={{operation:\"Default\", methodUrl}}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TestContainerTypeTab;"]},"metadata":{},"sourceType":"module"}