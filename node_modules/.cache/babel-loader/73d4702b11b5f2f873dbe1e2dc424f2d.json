{"ast":null,"code":"import*as React from'react';import{injectIntl}from'react-intl';import{Row,Col,Form}from'react-bootstrap';import'@progress/kendo-react-animation';import FormInput from'../../components/form-input/form-input.component';import TreeViewEditable from'../../components/form-tree-editable/form-tree-editable.component';var AddTreeview=function AddTreeview(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_SAMPLESTORAGELOCATIONNAME\"}),name:\"ssamplestoragelocationname\",type:\"text\",onChange:function onChange(event){return props.onInputChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_SAMPLESTORAGELOCATIONNAME\"}),value:props.selectedRecord?props.selectedRecord[\"ssamplestoragelocationname\"]:\"\",isMandatory:true,required:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(TreeViewEditable,{id:\"samplestoragelocation\",name:\"samplestoragelocation\"// label=\"Sample Storage Location\"\n,placeholder:\"Enter samplestoragelocation\",data:props.treeData,expandIcons:true,item:props.itemRender,onExpandChange:props.onExpandChange,onItemClick:props.onItemClick})));};export default injectIntl(AddTreeview);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/AddTreeview.jsx"],"names":["React","injectIntl","Row","Col","Form","FormInput","TreeViewEditable","AddTreeview","props","intl","formatMessage","id","event","onInputChange","selectedRecord","treeData","itemRender","onExpandChange","onItemClick"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,KAA+B,iBAA/B,CACA,MAAO,iCAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,mBACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eAaE,oBAAC,SAAD,EACE,KAAK,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,+BAAN,CAAzB,CADT,CAEE,IAAI,CAAE,4BAFR,CAGE,IAAI,CAAC,MAHP,CAIE,QAAQ,CAAE,kBAACC,KAAD,QAAWJ,CAAAA,KAAK,CAACK,aAAN,CAAoBD,KAApB,CAAX,EAJZ,CAKE,WAAW,CAAEJ,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,+BAAN,CAAzB,CALf,CAME,KAAK,CAAEH,KAAK,CAACM,cAAN,CAAuBN,KAAK,CAACM,cAAN,CAAqB,4BAArB,CAAvB,CAA4E,EANrF,CAOE,WAAW,CAAE,IAPf,CAQE,QAAQ,CAAE,IARZ,EAbF,CADF,cAyBE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACE,oBAAC,gBAAD,EACE,EAAE,CAAC,uBADL,CAEE,IAAI,CAAC,uBACL;AAHF,CAIE,WAAW,CAAC,6BAJd,CAKE,IAAI,CAAEN,KAAK,CAACO,QALd,CAME,WAAW,CAAE,IANf,CAOE,IAAI,CAAEP,KAAK,CAACQ,UAPd,CAQE,cAAc,CAAER,KAAK,CAACS,cARxB,CASE,WAAW,CAAET,KAAK,CAACU,WATrB,EADF,CAzBF,CADF,CAwCD,CAzCD,CA0CA,cAAejB,CAAAA,UAAU,CAACM,WAAD,CAAzB","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport TreeViewEditable from '../../components/form-tree-editable/form-tree-editable.component';\r\n\r\nconst AddTreeview = (props) => {\r\n  return (\r\n    <Row>\r\n      <Col md={12}>\r\n        {/* <Form.Control\r\n          id='ssamplestoragelocationname'\r\n          name={\"ssamplestoragelocationname\"}\r\n          type='text'\r\n          label={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          autoFocus\r\n          autoComplete=\"off\"\r\n          onChange={props.onInputChange}\r\n          value={props.selectedRecord ? props.selectedRecord[\"ssamplestoragelocationname\"] : \"\"}\r\n\r\n        /> */}\r\n        <FormInput\r\n          label={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          name={\"ssamplestoragelocationname\"}\r\n          type=\"text\"\r\n          onChange={(event) => props.onInputChange(event)}\r\n          placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          value={props.selectedRecord ? props.selectedRecord[\"ssamplestoragelocationname\"] : \"\"}\r\n          isMandatory={true}\r\n          required={true}         \r\n        />\r\n      </Col>\r\n      <Col md={12}>\r\n        <TreeViewEditable\r\n          id=\"samplestoragelocation\"\r\n          name=\"samplestoragelocation\"\r\n          // label=\"Sample Storage Location\"\r\n          placeholder=\"Enter samplestoragelocation\"\r\n          data={props.treeData}\r\n          expandIcons={true}\r\n          item={props.itemRender}\r\n          onExpandChange={props.onExpandChange}\r\n          onItemClick={props.onItemClick}\r\n        />\r\n      </Col>\r\n    </Row>)\r\n}\r\nexport default injectIntl(AddTreeview);\r\n"]},"metadata":{},"sourceType":"module"}