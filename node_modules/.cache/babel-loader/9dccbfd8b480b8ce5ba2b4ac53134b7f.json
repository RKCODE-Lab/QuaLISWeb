{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import{faChevronRight,faComment,faCommentMedical,faComments,faCommentsDollar,faEye,faFlag,faGripVertical,faPlay,faPlus,faRecycle,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{Button,Card,Col,Form,Nav,Row}from'react-bootstrap';import{process}from'@progress/kendo-data-query';import CustomAccordion from'../../components/custom-accordion/custom-accordion.component';import{AtTableWrap,FormControlStatic,FontIconWrap}from'../../components/data-grid/data-grid.styles';import{FormattedMessage,injectIntl}from'react-intl';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';import{BuilderBorder,ContionalButton,DeleteRule}from'../configurationmaster/RuleEngineSqlbuilder.styled';import'../../assets/styles/querybuilder.css';import CustomTabs from'../../components/custom-tabs/custom-tabs.component';import{ColumnType,parameterType,transactionStatus}from'../../components/Enumeration';import FormTextarea from'../../components/form-textarea/form-textarea.component';import{stringOperatorData,conditionalOperatorData,numericOperatorData,joinConditionData,aggregateFunction,orderByList}from'../configurationmaster/RuleEngineQueryBuilderData';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormCheckbox from'../../components/form-checkbox/form-checkbox.component';import DataGrid from'../../components/data-grid/data-grid.component';import FormMultiSelect from'../../components/form-multi-select/form-multi-select.component';import SplitterLayout from'react-splitter-layout';import ModalShow from'../../components/ModalShow';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import{sortData}from'../../components/CommonScript';var AddTestGroupRule=function AddTestGroupRule(props){var fieldsForGrid=props.activeTabIndex==1?[{\"idsName\":\"IDS_TOSITE\",\"dataField\":\"stositename\",\"width\":\"200px\"},{\"idsName\":\"IDS_FROMSITE\",\"dataField\":\"sfromsitename\",\"width\":\"200px\"}]:props.activeTabIndex==2?[{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULTS\",\"dataField\":\"spredefinedname\",\"width\":\"200px\"},{\"idsName\":\"IDS_COMMENTSUBTYPE\",\"dataField\":\"scommentsubtype\",\"width\":\"200px\"},{\"idsName\":\"IDS_COMMENTTYPE\",\"dataField\":\"scommenttype\",\"width\":\"200px\"}]:props.activeTabIndex==3?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_REPEATCOUNT\",\"dataField\":\"nrepeatcountno\",\"width\":\"200px\"}]:props.activeTabIndex==4?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_OPTIONALPARAMETERS\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_PASSFLAG\",\"dataField\":\"sgradename\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULTS\",\"dataField\":\"senforcestatuscomment\",\"width\":\"200px\"}]:\"\";var customStyle={'padding-top':'8px','padding-left':'2px','padding-right':'50px'};function createRules(items,groupIndex){var design=[];console.log('props.selectedRecord->>',props.selectedRecord);props.selectedRecord&&_toConsumableArray(Array(items)).map(function(data,index){var stringOperators=stringOperatorData;design.push(/*#__PURE__*/React.createElement(React.Fragment,null,index>0?props.selectedRecord[\"groupList\"][groupIndex]['button_or']===true?/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:\"builder-btn-primary\",marginLeft:0},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OR\",defaultMessage:\"Or\"}))):props.selectedRecord[\"groupList\"][groupIndex]['button_and']===true?/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:\"builder-btn-primary\",marginLeft:0},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_AND\",defaultMessage:\"And\"}))):\"\":\"\",/*#__PURE__*/React.createElement(Row,{className:\"my-3 ml-1\"},/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",style:customStyle,\"data-tip\":props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(){return props.deleteRule(groupIndex,index);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Col,{md:4,className:\"pl-0\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"stestname\",showOption:true,options:props.rulesOption||[],optionId:\"stestname\",optionValue:\"displayname\",value:props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]||\"\",onChange:function onChange(value){return props.onRuleChange(value,\"stestname\",groupIndex,index);}})),props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"orderresulttype\",placeholder:\"\",showOption:true,options:props.resultTypeList,optionId:\"nresultypecode\",optionValue:\"orderresulttype\",value:props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]||\"\",onChange:function onChange(value){return props.onMasterDataChange(value,\"orderresulttype\",groupIndex,index);}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname\",placeholder:\"\",showOption:true,options:props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===3&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode']===parameterType.NUMERIC?numericOperatorData:stringOperators,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname\",groupIndex,index);}})),props.selectedRecord[\"groupList\"][groupIndex][index]?props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===3&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode']===parameterType.PREDEFINED?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember),showOption:true,options:props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==1?props.DiagnosticCaseList:props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==2?props.GradeList:props.PredefinedParameterOptions&&props.PredefinedParameterOptions.length>0&&props.PredefinedParameterOptions[groupIndex]&&props.PredefinedParameterOptions[groupIndex].length>0&&props.PredefinedParameterOptions[groupIndex][index],optionId:props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember,optionValue:props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember,value:props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==1?'ndiagnosticcasecode':props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==2?'ngradecode':'ntestgrouptestpredefcode']||\"\",onChange:function onChange(value){return props.onMasterDataChange(value,props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===1?'ndiagnosticcasecode':props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==2?'ngradecode':'ntestgrouptestpredefcode',groupIndex,index);}})):props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===3&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode']===parameterType.CHARACTER?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormTextarea,{name:\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember),placeholder:props.intl.formatMessage({id:\"IDS_RESULTS\"}),value:props.selectedRecord[\"groupList\"][groupIndex][index]?props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestcharcode\"]:\"\",rows:\"2\",isMandatory:false,required:false,maxLength:255,onChange:function onChange(event){return props.onRuleInputChange(event,'ntestgrouptestcharcode',groupIndex,index);}})):props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===3&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode']===parameterType.NUMERIC?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember),placeholder:props.intl.formatMessage({id:\"IDS_RESULTS\"}),value:props.selectedRecord[\"groupList\"][groupIndex][index]?props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestnumericcode\"]:\"\",type:\"text\",strict:true,maxLength:10,noStyle:true,onChange:function onChange(event){return props.onRuleNumericInputOnChange(event,'ntestgrouptestnumericcode',groupIndex,index);},precision:2,min:0,className:\"form-control\",isMandatory:false,required:false})):/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember),showOption:true,options:props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==1?props.DiagnosticCaseList:props.GradeList,optionId:props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember,optionValue:props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items&&props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember,value:props.selectedRecord[\"groupList\"][groupIndex][index]&&props.selectedRecord[\"groupList\"][groupIndex][index][props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value==1?'ndiagnosticcasecode':'ngradecode']||\"\",onChange:function onChange(value){return props.onMasterDataChange(value,props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value===1?'ndiagnosticcasecode':'ngradecode'// `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`\n,groupIndex,index);}})):\"\"))));});return design;}function createGroupRules(){console.log('props.addGroupList->',props);var indexCount=0;var design=[];console.log('props.addGroupList->',props.addGroupList);props.selectedRecord[\"groupList\"]&&props.addGroupList.length>0&&props.addGroupList.map(function(items,index){var stringOperators=stringOperatorData;if(props.selectedRecord[\"groupList\"]&&props.selectedRecord[\"groupList\"][index][\"stestname\"]&&!props.selectedRecord[\"groupList\"][index][\"stestname\"].items.needmasterdata&&props.selectedRecord[\"groupList\"][index][\"stestname\"].items.columntype===ColumnType.TEXTINPUT){var temp=stringOperators.filter(function(item){if(item.items.symbolType!==6){return item;}});stringOperators=temp;}if(items>-1){indexCount=indexCount+1;};design.push(/*#__PURE__*/React.createElement(React.Fragment,null,index>0&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupListJoins\"]&&props.selectedRecord[\"groupListJoins\"][index-1]&&props.selectedRecord[\"groupListJoins\"][index-1][\"button_and\"]===true?\"builder-btn-primary\":\"\",marginLeft:1,onClick:function onClick(){return props.onConditionClick(\"button_and\",index-1,true);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_AND\",defaultMessage:\"And\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupListJoins\"]&&props.selectedRecord[\"groupListJoins\"][index-1]&&props.selectedRecord[\"groupListJoins\"][index-1][\"button_or\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_or\",index-1,true);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OR\",defaultMessage:\"Or\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupListJoins\"]&&props.selectedRecord[\"groupListJoins\"][index-1]&&props.selectedRecord[\"groupListJoins\"][index-1][\"button_not\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_not\",index-1,true);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_NOT\",defaultMessage:\"NOT\"})))),items>-1?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BuilderBorder,{key:index,className:\"p-3 mb-1\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.addRule(\"views\",index);},className:\"mr-1 rulesengine-rule-btn\"},'+',\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RULE\",defaultMessage:\"Rule\"})),items>1?/*#__PURE__*/React.createElement(Row,{className:\"rulesengine-condition-btn \"},/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_and\"]===true?\"builder-btn-primary\":\"\",marginLeft:1,onClick:function onClick(){return props.onConditionClick(\"button_and\",index,false);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_AND\",defaultMessage:\"And\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_or\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_or\",index,false);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OR\",defaultMessage:\"Or\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_not\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_not\",index,false);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_NOT\",defaultMessage:\"NOT\"})))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"notbtn rulesengine-condition-btn \"},/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_not\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_not\",index,false);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_NOT\",defaultMessage:\"NOT\"}))))))),/*#__PURE__*/React.createElement(React.Fragment,null,createRules(items,index)))):/*#__PURE__*/React.createElement(React.Fragment,null)));});return design;}function testParameterAccordion(TestParameter){var accordionMap=new Map();TestParameter.map(function(testParameter){return accordionMap.set(testParameter.npkAtestparametercode,/*#__PURE__*/React.createElement(Col,{md:\"12\",testParameter:testParameter},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"d-flex justify-content-end pr-0\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",className:\"add-txt-btn pr-0\",testParameter:testParameter,onClick:function onClick(){return props.addModalSite();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,testParameter:testParameter}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OUTSOURCE\",defaultMessage:\"Add Site\",testParameter:testParameter})))),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:props.masterData[\"testSite\"]&&process(sortData(props.masterData[\"testSite\"][testParameter.npkAtestparametercode],'descending','npksitecode')||[],props.dataStateObject&&props.dataStateObject[testParameter.npkAtestparametercode]?props.dataStateObject[testParameter.npkAtestparametercode]:{skip:0,take:10}),dataState:props.dataStateObject&&props.dataStateObject[testParameter.npkAtestparametercode]?props.dataStateObject[testParameter.npkAtestparametercode]:{skip:0,take:10},dataStateChange:function dataStateChange(event){props.dataStateChange(event,testParameter.npkAtestparametercode);},extractedColumnList:fieldsForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:true,isActionRequired:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,testParameter:testParameter,deleteRecord:props.deletModalSite,deleteParam:{operation:\"delete\"},actionIcons:[{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",hidden:false,objectName:\"delete\",onClick:props.deletModalSite}]}))// : \"\"\n));});return accordionMap;}function testCommentsAccordion(TestParameter){var accordionMap=new Map();TestParameter.map(function(testParameterComments){return accordionMap.set(testParameterComments.npkBtestparametercode,/*#__PURE__*/React.createElement(Col,{md:\"12\",testParameterComments:testParameterComments},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"d-flex justify-content-end pr-0\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",className:\"add-txt-btn\",testParameterComments:testParameterComments,onClick:function onClick(){return props.addComments();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,testParameterComments:testParameterComments}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COMMENTS\",defaultMessage:\"Add Test Comments\",testParameterComments:testParameterComments})))),/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:props.masterData[\"testComments\"]&&process(sortData(props.masterData[\"testComments\"][testParameterComments.npkBtestparametercode],'descending','npKAsampletestcommentscode')||[],props.dataStateObject&&props.dataStateObject[testParameterComments.npkBtestparametercode]?props.dataStateObject[testParameterComments.npkBtestparametercode]:{skip:0,take:10}),dataState:props.dataStateObject&&props.dataStateObject[testParameterComments.npkBtestparametercode]?props.dataStateObject[testParameterComments.npkBtestparametercode]:{skip:0,take:10},dataStateChange:function dataStateChange(event){props.dataStateChange(event,testParameterComments.npkBtestparametercode);},extractedColumnList:fieldsForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:true,isActionRequired:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,testParameterComments:testParameterComments,deleteRecord:props.deletModalSite,deleteParam:{operation:\"delete\"},actionIcons:[{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",hidden:false,objectName:\"delete\",onClick:props.deletModalSite}]})));});return accordionMap;}function reportCommentsAccordion(TestParameter){var accordionMap=new Map();TestParameter.map(function(testParameterreportComments){return accordionMap.set(testParameterreportComments.ntestgrouptestparametercode,/*#__PURE__*/React.createElement(Col,{md:\"12\",testParameterreportComments:testParameterreportComments},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"deletetestparameter\",className:\"add-txt-btn\",testParameterreportComments:testParameterreportComments,onClick:function onClick(){return props.deleteModalTest();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,testParameterreportComments:testParameterreportComments}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_DELETE\",defaultMessage:\"Delete\",testParameterreportComments:testParameterreportComments})))),/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\",testParameterreportComments:testParameterreportComments},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\",testParameterreportComments:testParameterreportComments},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",className:\"add-txt-btn\",testParameterreportComments:testParameterreportComments,onClick:function onClick(){return props.addComments();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,testParameterreportComments:testParameterreportComments}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDREPORTCOMMENTS\",defaultMessage:\"Add Report Comments\",testParameterreportComments:testParameterreportComments})))),/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:props.masterData[\"reportComments\"]&&process(props.masterData[\"reportComments\"][testParameterreportComments.ntestgrouptestparametercode]||[],props.dataState?props.dataState:{skip:0,take:10}),dataState:props.dataState?props.dataState:{skip:0,take:10},dataStateChange:props.dataStateChange,extractedColumnList:fieldsForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:true,isActionRequired:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,gridHeight:'600px',testParameterComments:testParameterreportComments,deleteRecord:props.deletModalSite,deleteParam:{operation:\"delete\"},actionIcons:[{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",hidden:false,objectName:\"delete\",onClick:props.deletModalSite}]})));});return accordionMap;}function TabDetails(){var resultTabMap=new Map();if(props.addOutcomeList.length===0){props.activeTabIndex==1?resultTabMap.set(\"IDS_Test\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",onClick:function onClick(){return props.addTest(\"IDS_Test\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_Test\",defaultMessage:\"Add Test\"})))),props.masterData.testParameter&&props.masterData.testParameter.length>0&&/*#__PURE__*/React.createElement(CustomAccordion,{key:\"parameteraccordion\",clickIconGroup:true,deleteAccordion:props.deleteModalTest,accordionTitle:\"stestsynonym\",accordionComponent:testParameterAccordion(props.masterData.testParameter),inputParam:{masterData:props.masterData,userInfo:props.userInfo,nFlag:5},accordionClick:props.getOutcomeDetails,accordionPrimaryKey:\"npkAtestparametercode\",accordionObjectName:\"testParameter\",selectedKey:props.masterData.selectedParameterRulesEngine?props.masterData.selectedParameterRulesEngine.npkAtestparametercode:0}))):props.activeTabIndex==2?resultTabMap.set(\"IDS_COMMENTS\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",onClick:function onClick(){return props.addTest(\"IDS_COMMENTS\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_Test\",defaultMessage:\"Add Test\"})))),props.masterData.testParameterComments&&props.masterData.testParameterComments.length>0&&/*#__PURE__*/React.createElement(CustomAccordion,{key:\"parameteraccordion\",clickIconGroup:true,deleteAccordion:props.deleteModalTest,accordionTitle:\"stestsynonym\",accordionComponent:testCommentsAccordion(props.masterData.testParameterComments),inputParam:{masterData:props.masterData,userInfo:props.userInfo,nFlag:5},accordionClick:props.getOutcomeDetails,accordionPrimaryKey:\"npkBtestparametercode\",accordionObjectName:\"testParameterComments\",selectedKey:props.masterData.selectedParameterRulesEngine?props.masterData.selectedParameterRulesEngine.npkBtestparametercode:0}))):props.activeTabIndex==3?resultTabMap.set(\"IDS_REPEAT\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",onClick:function onClick(){return props.addTest(\"IDS_REPEAT\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_Test\",defaultMessage:\"Add Test\"})))),props.masterData.testRepeat&&props.masterData.testRepeat.length>0&&/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:props.masterData[\"testRepeat\"]&&process(sortData(props.masterData[\"testRepeat\"],'descending','npkCtestparametercode')||[],props.dataStatetestRepeat?props.dataStatetestRepeat:{skip:0,take:10}),dataState:props.dataStatetestRepeat?props.dataStatetestRepeat:{skip:0,take:10},dataStateChange:function dataStateChange(event){props.dataStateChangetestRepeat(event);},extractedColumnList:fieldsForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:true,isActionRequired:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,gridHeight:'600px',testRepeat:props.masterData.testRepeat,deleteRecord:props.deleteModalTest,deleteParam:{operation:\"delete\"},actionIcons:[{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",hidden:false,objectName:\"delete\",onClick:props.deleteModalTest}]}))):props.activeTabIndex==4?resultTabMap.set(\"IDS_ENFORCERESULT\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",onClick:function onClick(){return props.addTest(\"IDS_ENFORCERESULT\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_Test\",defaultMessage:\"Add Test\"})))),props.masterData.testenforceTests&&props.masterData.testenforceTests.length>0&&/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:props.masterData[\"testenforceTests\"]&&process(sortData(props.masterData[\"testenforceTests\"],'descending','npkDtestparametercode')||[],props.dataStatetestEnforce?props.dataStatetestEnforce:{skip:0,take:10}),dataState:props.dataStatetestEnforce?props.dataStatetestEnforce:{skip:0,take:10},dataStateChange:function dataStateChange(event){props.dataStateChangetestEnforce(event);},extractedColumnList:fieldsForGrid,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,pageable:true,isActionRequired:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,gridHeight:'600px',testenforceTests:props.masterData.testenforceTests,deleteRecord:props.deleteModalTest,deleteParam:{operation:\"delete\"},actionIcons:[{title:props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",hidden:false,objectName:\"delete\",onClick:props.deleteModalTest}]}))):resultTabMap.set(\"IDS_REPORTCOMMENTS\",/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addtestparameter\",onClick:function onClick(){return props.addTest();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_Test\",defaultMessage:\"Add Test\"})))),props.masterData.testParameterreportComments&&props.masterData.testParameterreportComments.length>0&&/*#__PURE__*/React.createElement(CustomAccordion,{key:\"parameteraccordion\",accordionTitle:\"stestparametersynonym\",accordionComponent:reportCommentsAccordion(props.masterData.testParameterreportComments),inputParam:{masterData:props.masterData,userInfo:props.userInfo,nFlag:5},accordionClick:props.getOutcomeDetails,accordionPrimaryKey:\"ntestgrouptestparametercode\",accordionObjectName:\"testParameterreportComments\",selectedKey:props.masterData.selectedParameterRulesEngine?props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode:0})));}return resultTabMap;}function testfilter(list){var activeTabIndex=props.activeTabIndex;if(props.masterData.selectedParameterRulesEngine){var dynamicList=activeTabIndex===2?props.masterData[\"testComments\"]&&props.masterData[\"testComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode]:props.masterData[\"reportComments\"]&&props.masterData[\"reportComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode];if(dynamicList!==undefined){list=list.filter(function(_ref){var value=_ref.value;return!dynamicList.some(function(x){return x.nsampletestcommentscode==value;});});}}return list;}var mandatoryFields=props.action==='IDS_SAVERULEMODAL'?[{\"idsName\":\"IDS_RULESENGINENAME\",\"dataField\":\"srulename\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"file\"}]:props.activeTabIndex===1?props.action==='IDS_ADDTEST'?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ntestgrouptestcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"}// { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\n// { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\n]:[{\"idsName\":\"IDS_FROMSITE\",\"dataField\":\"nfromsitecode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_TOSITE\",\"dataField\":\"ntositecode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}]:props.activeTabIndex===2?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ntestgrouptestcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_COMMENTTYPE\",\"dataField\":\"ncommenttypecode\",\"width\":\"200px\"},{\"idsName\":\"IDS_COMMENTSUBTYPE\",\"dataField\":\"ncommentsubtypecode\",\"width\":\"200px\"},props.isneedsgeneralcomments===true?{\"idsName\":\"IDS_GENERALCOMMENTS\",\"dataField\":\"sgeneralcomments\",\"width\":\"200px\"}:{\"idsName\":\"IDS_PREFINEDCOMMENTS\",\"dataField\":\"nsampletestcommentscode\",\"width\":\"200px\"}]:props.activeTabIndex===3?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ntestgrouptestcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"}]:props.activeTabIndex===4?[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ntestgrouptestcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_OPTIONALPARAMETERS\",\"dataField\":\"ntestgrouptestparametercode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_PASSFLAG\",\"dataField\":\"ngradecode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_RESULTS\",\"dataField\":\"senforcestatuscomment\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"file\"}]:\"\";return/*#__PURE__*/React.createElement(\"div\",{class:\"modal-inner-content\"},/*#__PURE__*/React.createElement(\"div\",{class:\"row margin-top-negative-1\"},/*#__PURE__*/React.createElement(\"div\",{class:\"p-0 col-md-12\"},/*#__PURE__*/React.createElement(\"div\",{class:\"vertical-tab-top popup rules-engine-add-rule\"},/*#__PURE__*/React.createElement(Col,{className:\"tab-left-area p-0  \".concat(props.activeTabIndex?'active':\"\",\" \").concat(props.enablePropertyPopup?'active-popup':\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"center-area-wrap vertical-tab border-0 mr-0 popup-fixed-center-headed-full-width\"},/*#__PURE__*/React.createElement(\"div\",{className:\"center-area mt-3 mb-0 mx-4\"},/*#__PURE__*/React.createElement(Row,{className:\"d-flex pt-0\"},/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.addGroup(\"views\");},className:\"mr-1\"},'+',\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_GROUP\",defaultMessage:\"Group\"})),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.resetRule();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RESET\",defaultMessage:\"Reset\"})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"ml-0 mr-0\"},props.addGroupList.length>0?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BuilderBorder,{className:\"border-0 mb-0\"},\"    \",createGroupRules(),\"   \")):/*#__PURE__*/React.createElement(React.Fragment,null)))))),/*#__PURE__*/React.createElement(\"div\",{md:6,className:\"\".concat(props.enablePropertyPopup?'active-popup':\"\",\" vertical-tab vertical-tab-expand \").concat(props.activeTabIndex?'active':\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(props.enablePropertyPopup?'active-popup':\"\",\" vertical-tab-content pager_wrap wrap-class \").concat(props.activeTabIndex?'active':\"\"),style:{width:props.enablePropertyPopup?props.propertyPopupWidth+'%':\"\"}},/*#__PURE__*/React.createElement(\"span\",{className:\" vertical-tab-close \".concat(props.activeTabIndex?'active':\"\"),onClick:function onClick(){return props.changePropertyView(0);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faChevronRight}),\" \"),/*#__PURE__*/React.createElement(\"div\",{className:\" vertical-tab-content-common  \".concat(props.activeTabIndex&&props.activeTabIndex?'active':\"\")},/*#__PURE__*/React.createElement(\"h4\",{className:\"inner_h4\"},props.intl.formatMessage({id:\"IDS_OUTCOME\"})),props.activeTabIndex&&props.activeTabIndex?/*#__PURE__*/React.createElement(CustomTabs,{activeKey:props.activeTestTab,tabDetail:TabDetails()}):\"\")),/*#__PURE__*/React.createElement(\"div\",{className:\"tab-head\"},/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(props.activeTabIndex&&props.activeTabIndex==1?'active':\"\"),onClick:function onClick(){return props.changePropertyView(1);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),/*#__PURE__*/React.createElement(\"span\",null,props.intl.formatMessage({id:\"IDS_Test\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(props.activeTabIndex&&props.activeTabIndex==2?'active':\"\"),onClick:function onClick(){return props.changePropertyView(2);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faComments}),/*#__PURE__*/React.createElement(\"span\",null,props.intl.formatMessage({id:\"IDS_COMMENTS\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(props.activeTabIndex&&props.activeTabIndex==3?'active':\"\"),onClick:function onClick(){return props.changePropertyView(3);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faRecycle}),/*#__PURE__*/React.createElement(\"span\",null,props.intl.formatMessage({id:\"IDS_REPEAT\"}))),/*#__PURE__*/React.createElement(\"li\",{className:\"\".concat(props.activeTabIndex&&props.activeTabIndex==4?'active':\"\"),onClick:function onClick(){return props.changePropertyView(4);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFlag}),/*#__PURE__*/React.createElement(\"span\",null,props.intl.formatMessage({id:\"IDS_ENFORCERESULT\"})))))),props.openModalPopup&&/*#__PURE__*/React.createElement(ModalShow,{modalShow:true,modalTitle:props.action==='IDS_SAVERULEMODAL'?'IDS_RULESENGINENAME':props.action==='IDS_ADDREPORTCOMMENTS'?props.intl.formatMessage({id:'IDS_ADDREPORTCOMMENTS'}):props.action==='IDS_ADDTESTCOMMENTS'?props.intl.formatMessage({id:'IDS_ADDTESTCOMMENTS'}):props.action==='IDS_ADDTEST'?props.activeTabIndex==3?props.intl.formatMessage({id:'IDS_ADDREPEATTEST'}):props.intl.formatMessage({id:'IDS_ADDTEST'}):props.intl.formatMessage({id:'IDS_ADDOUTSOURCESITE'}),closeModal:props.closeModalShow,onSaveClick:props.action==='IDS_SAVERULEMODAL'?props.save:props.modalsaveClick// validateEsign={this.validateEsign}\n,selectedRecord:props.selectedRecord,mandatoryFields:mandatoryFields,modalBody:props.openmodalsavePopup===true?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{formGroupClassName:\"remove-floating-label-margin\",label:props.intl.formatMessage({id:\"IDS_RULESENGINENAME\"}),name:\"srulename\",type:\"text\",required:false,isMandatory:true,value:props.selectedRecord[\"srulename\"]||\"\",onChange:function onChange(event){return props.onInputChange(event);}}))):props.activeTabIndex==1?/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TESTNAME\"}),isSearchable:true,name:\"ntestgrouptestcode\",showOption:true,options:props.testInitiateTestCombo||[],optionId:\"ntestgrouptestcode\",optionValue:\"stestparametersynonym\",value:props.selectedRecord[\"ntestgrouptestcode\"]&&props.selectedRecord[\"ntestgrouptestcode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntestgrouptestcode');},isMandatory:true,isDisabled:props.action==='IDS_ADDTEST'?false:true}))),(props.action==='IDS_ADDSITE'// || props.action === 'IDS_ADDTEST'\n?true:false)?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_FROMSITE\"})// formGroupClassName=\"remove-floating-label-margin\"\n,isSearchable:true,name:\"nfromsitecode\",showOption:true,options:props.siteList||[],optionId:\"nfromsitecode\",optionValue:\"ssitename\",isMandatory:true,value:props.selectedRecord[\"nfromsitecode\"]&&props.selectedRecord[\"nfromsitecode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'nfromsitecode');}//  isMandatory={true}\n})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TOSITE\"})//    formGroupClassName=\"remove-floating-label-margin\"\n,isSearchable:true,name:\"ntositecode\",showOption:true,options:props.siteList||[],optionId:\"ntositecode\",optionValue:\"ssitename\",isMandatory:true,value:props.selectedRecord[\"ntositecode\"]&&props.selectedRecord[\"ntositecode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntositecode');}//  isMandatory={true}\n}))):\"\"):props.activeTabIndex==2?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TESTNAME\"}),isSearchable:true,name:\"ntestgrouptestcode\",showOption:true,options:props.testCommentsTestCombo||[],optionId:\"ntestgrouptestcode\",optionValue:\"stestparametersynonym\",value:props.selectedRecord[\"ntestgrouptestcode\"]&&props.selectedRecord[\"ntestgrouptestcode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntestgrouptestcode');},isMandatory:true,isDisabled:props.action==='IDS_ADDTEST'?false:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_COMMENTTYPE\"}),isSearchable:true,name:\"ncommenttypecode\",showOption:true,options:props.CommentType||[],optionId:\"ncommenttypecode\",optionValue:\"scommenttype\",value:props.selectedRecord[\"ncommenttypecode\"]&&props.selectedRecord[\"ncommenttypecode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ncommenttypecode');},isMandatory:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_COMMENTSUBTYPE\"}),isSearchable:true,name:\"ncommentsubtypecode\",showOption:true,options:props.CommentSubType||[],optionId:\"ncommentsubtypecode\",optionValue:\"scommentsubtype\",value:props.selectedRecord[\"ncommentsubtypecode\"]&&props.selectedRecord[\"ncommentsubtypecode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ncommentsubtypecode');},isMandatory:true})),props.selectedRecord[\"ncommentsubtypecode\"]?props.isneedsgeneralcomments===true?/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sgeneralcomments\",label:props.intl.formatMessage({id:\"IDS_GENERALCOMMENTS\"}),type:\"text\",value:props.selectedRecord&&props.selectedRecord['sgeneralcomments']||\"\"// isMandatory={control.mandatory}\n// required={control.mandatory}\n,onChange:function onChange(event){return props.onInputChange(event,1);},rows:\"2\",maxLength:\"255\",isDisabled:false,isMandatory:true})):/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PREDEFINEDNAME\"}),isSearchable:true,name:\"nsampletestcommentscode\",showOption:true,options:props.predefcomments||[],optionId:\"nsampletestcommentscode\",optionValue:\"spredefinedname\",value:props.selectedRecord[\"nsampletestcommentscode\"]&&props.selectedRecord[\"nsampletestcommentscode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'nsampletestcommentscode');},isMandatory:true}),/*#__PURE__*/React.createElement(FormTextarea,{formGroupClassName:\"remove-floating-label-margin\",label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"sdescription\",type:\"text\",required:false,isMandatory:true,value:props.selectedRecord[\"sdescription\"]&&props.selectedRecord[\"sdescription\"]||\"\",onChange:function onChange(event){return props.onInputChange(event);}})):\"\"):props.activeTabIndex==3?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TESTNAME\"}),isSearchable:true,name:\"ntestgrouptestcode\",showOption:true,options:props.testRepeatTestCombo||[],optionId:\"ntestgrouptestcode\",optionValue:\"stestparametersynonym\",value:props.selectedRecord[\"ntestgrouptestcode\"]&&props.selectedRecord[\"ntestgrouptestcode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntestgrouptestcode');},isMandatory:true,isDisabled:props.action==='IDS_ADDTEST'?false:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormNumericInput,{name:'nrepeatcountno',label:props.intl.formatMessage({id:\"IDS_REPEATCOUNT\"}),placeholder:props.intl.formatMessage({id:\"IDS_REPEATCOUNT\"}),value:props.selectedRecord[\"nrepeatcountno\"]?props.selectedRecord[\"nrepeatcountno\"]:\"\",type:\"text\",strict:true,maxLength:10,noStyle:true,onChange:function onChange(event){return props.onRuleNumericInputOnChange(event,'nrepeatcountno');},precision:2,min:0,className:\"form-control\",isMandatory:false,required:false}))):props.activeTabIndex==4?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_TESTNAME\"}),isSearchable:true,name:\"ntestgrouptestcode\",showOption:true,options:props.testenforceTestCombo||[],optionId:\"ntestgrouptestcode\",optionValue:\"stestparametersynonym\",value:props.selectedRecord[\"ntestgrouptestcode\"]&&props.selectedRecord[\"ntestgrouptestcode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntestgrouptestcode');},isMandatory:true,isDisabled:props.action==='IDS_ADDTEST'?false:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_OPTIONALPARAMETERS\"}),isSearchable:true,name:\"ntestgrouptestparametercode\",showOption:true,options:props.testGroupTestParameterRulesEngine||[],optionId:\"ntestgrouptestparametercode\",optionValue:\"stestparametersynonym\",value:props.selectedRecord[\"ntestgrouptestparametercode\"]&&props.selectedRecord[\"ntestgrouptestparametercode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ntestgrouptestparametercode');},isMandatory:true,isDisabled:false})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"senforcestatuscomment\",label:props.intl.formatMessage({id:\"IDS_RESULTS\"}),placeholder:props.intl.formatMessage({id:\"IDS_RESULTS\"}),value:props.selectedRecord?props.selectedRecord[\"senforcestatuscomment\"]:\"\",rows:\"2\",isMandatory:true,required:false,maxLength:255,onChange:function onChange(event){return props.onInputChange(event,1);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PASSFLAG\"}),isSearchable:true,name:\"ngradecode\",showOption:true,options:props.GradeList||[],optionId:\"ngradecode\",optionValue:\"sgradename\",value:props.selectedRecord[\"ngradecode\"]&&props.selectedRecord[\"ngradecode\"]||\"\",onChange:function onChange(value){return props.onmodalComboChange(value,'ngradecode');},isMandatory:true,isDisabled:false}))):\"\"})))));};export default injectIntl(AddTestGroupRule);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/AddTestGroupRule.js"],"names":["faChevronRight","faComment","faCommentMedical","faComments","faCommentsDollar","faEye","faFlag","faGripVertical","faPlay","faPlus","faRecycle","faTrashAlt","FontAwesomeIcon","React","Button","Card","Col","Form","Nav","Row","process","CustomAccordion","AtTableWrap","FormControlStatic","FontIconWrap","FormattedMessage","injectIntl","FormSelectSearch","FormInput","BuilderBorder","ContionalButton","DeleteRule","CustomTabs","ColumnType","parameterType","transactionStatus","FormTextarea","stringOperatorData","conditionalOperatorData","numericOperatorData","joinConditionData","aggregateFunction","orderByList","CustomSwitch","DateTimePicker","FormCheckbox","DataGrid","FormMultiSelect","SplitterLayout","ModalShow","FormNumericInput","sortData","AddTestGroupRule","props","fieldsForGrid","activeTabIndex","customStyle","createRules","items","groupIndex","design","console","log","selectedRecord","Array","map","data","index","stringOperators","push","intl","formatMessage","id","deleteRule","rulesOption","value","onRuleChange","resultTypeList","onMasterDataChange","NUMERIC","onSymbolChange","PREDEFINED","valuemember","DiagnosticCaseList","GradeList","PredefinedParameterOptions","length","displaymember","CHARACTER","event","onRuleInputChange","onRuleNumericInputOnChange","createGroupRules","indexCount","addGroupList","needmasterdata","columntype","TEXTINPUT","temp","filter","item","symbolType","onConditionClick","addRule","testParameterAccordion","TestParameter","accordionMap","Map","testParameter","set","npkAtestparametercode","addModalSite","masterData","dataStateObject","skip","take","dataStateChange","controlMap","userRoleControlRights","deletModalSite","operation","title","controlname","hidden","objectName","onClick","testCommentsAccordion","testParameterComments","npkBtestparametercode","addComments","reportCommentsAccordion","testParameterreportComments","ntestgrouptestparametercode","deleteModalTest","dataState","TabDetails","resultTabMap","addOutcomeList","addTest","userInfo","nFlag","getOutcomeDetails","selectedParameterRulesEngine","testRepeat","dataStatetestRepeat","dataStateChangetestRepeat","testenforceTests","dataStatetestEnforce","dataStateChangetestEnforce","testfilter","list","dynamicList","undefined","some","x","nsampletestcommentscode","mandatoryFields","action","isneedsgeneralcomments","enablePropertyPopup","addGroup","resetRule","width","propertyPopupWidth","changePropertyView","activeTestTab","openModalPopup","closeModalShow","save","modalsaveClick","openmodalsavePopup","onInputChange","testInitiateTestCombo","onmodalComboChange","siteList","testCommentsTestCombo","CommentType","CommentSubType","predefcomments","testRepeatTestCombo","testenforceTestCombo","testGroupTestParameterRulesEngine"],"mappings":"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","sourcesContent":["import { faChevronRight, faComment, faCommentMedical, faComments, faCommentsDollar, faEye, faFlag, faGripVertical, faPlay, faPlus, faRecycle, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Col, Form, Nav, Row } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\r\nimport { AtTableWrap, FormControlStatic, FontIconWrap } from '../../components/data-grid/data-grid.styles';\r\n\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { BuilderBorder, ContionalButton, DeleteRule } from '../configurationmaster/RuleEngineSqlbuilder.styled';\r\nimport '../../assets/styles/querybuilder.css';\r\n\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\n\r\nimport { ColumnType, parameterType, transactionStatus } from '../../components/Enumeration';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData, aggregateFunction, orderByList } from '../configurationmaster/RuleEngineQueryBuilderData';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormCheckbox from '../../components/form-checkbox/form-checkbox.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport { sortData } from '../../components/CommonScript';\r\n\r\n\r\nconst AddTestGroupRule = (props) => {\r\n    const fieldsForGrid = props.activeTabIndex == 1 ? [\r\n        { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"stositename\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"sfromsitename\", \"width\": \"200px\" }\r\n\r\n    ] : props.activeTabIndex == 2 ? [\r\n        { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_COMMENTSUBTYPE\", \"dataField\": \"scommentsubtype\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_COMMENTTYPE\", \"dataField\": \"scommenttype\", \"width\": \"200px\" }\r\n\r\n    ] : props.activeTabIndex == 3 ? [\r\n        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_REPEATCOUNT\", \"dataField\": \"nrepeatcountno\", \"width\": \"200px\" }  \r\n    ] : props.activeTabIndex == 4 ? [\r\n        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_OPTIONALPARAMETERS\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_PASSFLAG\", \"dataField\": \"sgradename\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"senforcestatuscomment\", \"width\": \"200px\" }\r\n    ] : \"\";\r\n    const customStyle = {\r\n        'padding-top': '8px',\r\n        'padding-left': '2px',\r\n        'padding-right': '50px'\r\n    }\r\n    function createRules(items, groupIndex) {\r\n        let design = [];\r\n        console.log('props.selectedRecord->>', props.selectedRecord)\r\n        props.selectedRecord && [...Array(items)].map((data, index) => {\r\n            let stringOperators = stringOperatorData;\r\n            design.push(\r\n                <>\r\n                    {index > 0 ? props.selectedRecord[\"groupList\"][groupIndex]['button_or'] === true ?\r\n                        <ContionalButton type=\"button\" className={\"builder-btn-primary\"} marginLeft={0}\r\n                        >\r\n                            <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                        </ContionalButton> :\r\n                        props.selectedRecord[\"groupList\"][groupIndex]['button_and'] === true ?\r\n                            <ContionalButton type=\"button\" className={\"builder-btn-primary\"} marginLeft={0}\r\n                            >\r\n                                <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                            </ContionalButton> : \"\" : \"\"}\r\n                    <Row className=\"my-3 ml-1\">\r\n                        <FontIconWrap className=\"d-font-icon action-icons-wrap\" style={customStyle} data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                            onClick={() => props.deleteRule(groupIndex, index)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                        </FontIconWrap>\r\n                        {/* <DeleteRule marginLeft={1} onClick={() => props.deleteRule(groupIndex, index)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt}  className=\"d-font-icon action-icons-wrap\" />\r\n                        </DeleteRule>  */}\r\n                        <Col md={4} className=\"pl-0\"  >\r\n                            <FormSelectSearch\r\n                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                isSearchable={true}\r\n                                name={\"stestname\"}\r\n                                showOption={true}\r\n                                options={props.rulesOption || []}\r\n                                optionId='stestname'\r\n                                optionValue='displayname'\r\n                                value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] || \"\"}\r\n                                onChange={value => props.onRuleChange(value, \"stestname\", groupIndex, index)}\r\n                            ></FormSelectSearch>\r\n                        </Col>\r\n\r\n\r\n                        {\r\n                            props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] &&\r\n                            <>\r\n                                {/* <Col md={1}>\r\n                                    <FormInput\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        name={`sinputname`}\r\n                                        type=\"text\"\r\n                                        value={props.intl.formatMessage({ id: \"IDS_WITH\" })}\r\n                                        disabled={true}\r\n                                    />\r\n                                </Col> */}\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={\"orderresulttype\"}\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={props.resultTypeList}\r\n                                        optionId='nresultypecode'\r\n                                        optionValue='orderresulttype'\r\n                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] || \"\"}\r\n                                        onChange={value => props.onMasterDataChange(value, \"orderresulttype\", groupIndex, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={\"ssymbolname\"}\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']\r\n                                                ['nparametertypecode'] === parameterType.NUMERIC ?\r\n                                                numericOperatorData : stringOperators}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, \"ssymbolname\", groupIndex, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {/* {props.selectedRecord[\"groupList\"][groupIndex][index] ?\r\n                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 ?\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.PREDEFINED ?\r\n                                            <Col md={2}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    isSearchable={true}\r\n                                                    name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                    showOption={true}\r\n                                                    options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                        props.DiagnosticCaseList : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? props.GradeList\r\n                                                            : props.PredefinedParameterOptions}\r\n\r\n                                                    optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                    optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                        [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' :\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'] || \"\"}\r\n                                                    onChange={value => props.onMasterDataChange(value,\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' :\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'\r\n                                                        , groupIndex, index)}\r\n                                                ></FormSelectSearch>\r\n                                            </Col> : props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.CHARACTER ?\r\n                                                <Col md={2}>\r\n                                                    <FormTextarea\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                        value={props.selectedRecord ? props.selectedRecord[\"senforcestatuscomment\"] : \"\"}\r\n                                                        rows=\"2\"\r\n                                                        isMandatory={false}\r\n                                                        required={false}\r\n                                                        maxLength={255}\r\n                                                        onChange={(event) => props.onRuleInputChange(event, 'ntestgrouptestcharcode', groupIndex, index)}\r\n                                                    />\r\n                                                </Col> :\r\n                                                <Col md={2}>\r\n                                                    <FormNumericInput\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                        value={props.selectedRecord ? props.selectedRecord[\"senforcestatuscomment\"] : \"\"}\r\n                                                        type=\"number\"\r\n                                                        strict={true}\r\n                                                        maxLength={10}\r\n                                                        noStyle={true}\r\n                                                        onChange={(event) => props.onRuleNumericInputOnChange(event, 'ntestgrouptestnumericcode', groupIndex, index)}\r\n                                                        precision={0}\r\n                                                        min={0}\r\n                                                        className=\"form-control\"\r\n                                                        isMandatory={false}\r\n                                                        required={false}\r\n                                                    />\r\n                                                </Col> :\r\n                                        //asusual\r\n                                        <Col md={2}>\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                isSearchable={true}\r\n                                                name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                showOption={true}\r\n                                                options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                    props.DiagnosticCaseList : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? props.GradeList\r\n                                                        : props.PredefinedParameterOptions}\r\n\r\n                                                optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                    [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'] || \"\"}\r\n                                                onChange={value => props.onMasterDataChange(value,\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'\r\n                                                    , groupIndex, index)}\r\n                                            ></FormSelectSearch>\r\n                                        </Col> : \"\"\r\n                                } */}\r\n\r\n\r\n                                {props.selectedRecord[\"groupList\"][groupIndex][index] ?\r\n                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.PREDEFINED ?\r\n                                        <Col md={2}>\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                isSearchable={true}\r\n                                                name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                showOption={true}\r\n                                                options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                    props.DiagnosticCaseList : props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? props.GradeList\r\n                                                        : props.PredefinedParameterOptions &&\r\n                                                        props.PredefinedParameterOptions.length > 0 && props.PredefinedParameterOptions[groupIndex] &&\r\n                                                        props.PredefinedParameterOptions[groupIndex].length > 0 &&\r\n                                                        props.PredefinedParameterOptions[groupIndex][index]}\r\n\r\n                                                optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                    [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'] || \"\"}\r\n                                                onChange={value => props.onMasterDataChange(value,\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' :\r\n                                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 2 ? 'ngradecode' : 'ntestgrouptestpredefcode'\r\n                                                    , groupIndex, index)}\r\n                                            ></FormSelectSearch>\r\n                                        </Col> :\r\n                                        props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.CHARACTER ?\r\n                                            <Col md={2}>\r\n                                                <FormTextarea\r\n                                                    name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                    placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index] ? props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestcharcode\"] : \"\"}\r\n                                                    rows=\"2\"\r\n                                                    isMandatory={false}\r\n                                                    required={false}\r\n                                                    maxLength={255}\r\n                                                    onChange={(event) => props.onRuleInputChange(event, 'ntestgrouptestcharcode', groupIndex, index)}\r\n                                                />\r\n                                            </Col> :\r\n                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 3 &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"]['item']['nparametertypecode'] === parameterType.NUMERIC ?\r\n                                                <Col md={2}>\r\n                                                    <FormNumericInput\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n\r\n                                                        placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] ? props.selectedRecord[\"groupList\"][groupIndex][index][\"ntestgrouptestnumericcode\"] : \"\"}\r\n                                                        type=\"text\"\r\n                                                        strict={true}\r\n                                                        maxLength={10}\r\n                                                        noStyle={true}\r\n                                                        onChange={(event) => props.onRuleNumericInputOnChange(event, 'ntestgrouptestnumericcode', groupIndex, index)}\r\n                                                        precision={2}\r\n                                                        min={0}\r\n                                                        className=\"form-control\"\r\n                                                        isMandatory={false}\r\n                                                        required={false}\r\n                                                    />\r\n                                                </Col> :\r\n                                                <Col md={2}>\r\n                                                    <FormSelectSearch\r\n                                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                                        isSearchable={true}\r\n                                                        name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                                        showOption={true}\r\n                                                        options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                            props.DiagnosticCaseList : props.GradeList}\r\n\r\n                                                        optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                                        optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n\r\n                                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                            [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' : 'ngradecode'] || \"\"}\r\n                                                        onChange={value => props.onMasterDataChange(value,\r\n                                                            props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' : 'ngradecode'// `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`\r\n                                                            , groupIndex, index)}\r\n                                                    ></FormSelectSearch>\r\n                                                </Col> : \"\"\r\n                                }\r\n\r\n\r\n                            </>\r\n                        }\r\n                    </Row>\r\n                </>\r\n            )\r\n        });\r\n        return design;\r\n    }\r\n    function createGroupRules() {\r\n        console.log('props.addGroupList->', props)\r\n        let indexCount = 0;\r\n        let design = [];\r\n        console.log('props.addGroupList->', props.addGroupList)\r\n        props.selectedRecord[\"groupList\"] && props.addGroupList.length > 0 && props.addGroupList.map((items, index) => {\r\n\r\n            let stringOperators = stringOperatorData;\r\n            if (props.selectedRecord[\"groupList\"] && props.selectedRecord[\"groupList\"][index][\"stestname\"]\r\n                && !props.selectedRecord[\"groupList\"][index][\"stestname\"].items.needmasterdata\r\n                && props.selectedRecord[\"groupList\"][index][\"stestname\"].items.columntype === ColumnType.TEXTINPUT) {\r\n                const temp = stringOperators.filter(item => {\r\n                    if (item.items.symbolType !== 6) {\r\n                        return item\r\n                    }\r\n                });\r\n                stringOperators = temp;\r\n            }\r\n\r\n            if (items > -1) {\r\n                indexCount = indexCount + 1;\r\n            };\r\n            design.push(\r\n                <>{index > 0 && <Row>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_and\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n                        onClick={() => props.onConditionClick(\"button_and\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                    </ContionalButton>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_or\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                        onClick={() => props.onConditionClick(\"button_or\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                    </ContionalButton>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                        onClick={() => props.onConditionClick(\"button_not\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                    </ContionalButton>\r\n                </Row>}\r\n                    {items > -1 ?\r\n                        <>\r\n                            <BuilderBorder key={index} className=\"p-3 mb-1\">\r\n                                <Row >\r\n\r\n                                    <Col md={12} >\r\n                                        <Button onClick={() => props.addRule(\"views\", index)} className=\"mr-1 rulesengine-rule-btn\">\r\n                                            {'+'} <FormattedMessage id=\"IDS_RULE\" defaultMessage=\"Rule\" />\r\n                                        </Button>\r\n                                        {items > 1 ?\r\n                                            <Row className=\"rulesengine-condition-btn \">\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_and\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n                                                    onClick={() => props.onConditionClick(\"button_and\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                                                </ContionalButton>\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_or\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                                    onClick={() => props.onConditionClick(\"button_or\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                                                </ContionalButton>\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                                    onClick={() => props.onConditionClick(\"button_not\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                                                </ContionalButton>\r\n                                            </Row>\r\n\r\n                                            :\r\n                                            <>\r\n                                                <Row className=\"notbtn rulesengine-condition-btn \">\r\n                                                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                                        onClick={() => props.onConditionClick(\"button_not\", index, false)}>\r\n                                                        <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                                                    </ContionalButton>\r\n                                                </Row>\r\n                                            </>\r\n                                        }\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <>\r\n                                    {createRules(items, index)}\r\n                                </>\r\n\r\n                            </BuilderBorder>\r\n\r\n                        </> : <></>\r\n                    }\r\n\r\n\r\n                </>)\r\n        });\r\n\r\n        return design;\r\n    }\r\n\r\n\r\n    function testParameterAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameter) =>\r\n            accordionMap.set(testParameter.npkAtestparametercode,\r\n                <Col md=\"12\" testParameter={testParameter}>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end pr-0\">\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn pr-0\" testParameter={testParameter}\r\n                                onClick={() => props.addModalSite()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameter={testParameter} /> { }\r\n                                <FormattedMessage id=\"IDS_OUTSOURCE\" defaultMessage=\"Add Site\" testParameter={testParameter} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        <>\r\n\r\n                            <DataGrid\r\n                                key=\"testsectionkey\"\r\n                                primaryKeyField=\"nresultusedmaterialcode\"\r\n                                dataResult={props.masterData[\"testSite\"] && process(sortData(props.masterData[\"testSite\"][testParameter.npkAtestparametercode], 'descending', 'npksitecode') || [],\r\n                                    props.dataStateObject && props.dataStateObject[testParameter.npkAtestparametercode]\r\n                                        ? props.dataStateObject[testParameter.npkAtestparametercode] : { skip: 0, take: 10 })}\r\n                                dataState={props.dataStateObject && props.dataStateObject[testParameter.npkAtestparametercode]\r\n                                    ? props.dataStateObject[testParameter.npkAtestparametercode] : { skip: 0, take: 10 }}\r\n                                dataStateChange={(event) => { props.dataStateChange(event, testParameter.npkAtestparametercode) }}\r\n\r\n                                extractedColumnList={fieldsForGrid}\r\n                                controlMap={props.controlMap}\r\n                                userRoleControlRights={props.userRoleControlRights}\r\n                                pageable={true}\r\n                                isActionRequired={true}\r\n                                scrollable={'scrollable'}\r\n                                hideColumnFilter={true}\r\n                                selectedId={0}\r\n                                testParameter={testParameter}\r\n                                deleteRecord={props.deletModalSite}\r\n                                deleteParam={{ operation: \"delete\" }}\r\n                                actionIcons={[{\r\n                                    title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                    controlname: \"faTrashAlt\",\r\n                                    hidden: false,\r\n                                    objectName: \"delete\",\r\n                                    onClick: props.deletModalSite\r\n\r\n                                }]}\r\n                            >\r\n                            </DataGrid></>\r\n                        // : \"\"\r\n                    }\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function testCommentsAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameterComments) =>\r\n            accordionMap.set(testParameterComments.npkBtestparametercode,\r\n                <Col md=\"12\" testParameterComments={testParameterComments}>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end pr-0\">\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" testParameterComments={testParameterComments}\r\n                                onClick={() => props.addComments()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameterComments={testParameterComments} /> { }\r\n                                <FormattedMessage id=\"IDS_COMMENTS\" defaultMessage=\"Add Test Comments\" testParameterComments={testParameterComments} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                        dataResult={props.masterData[\"testComments\"] && process(sortData(props.masterData[\"testComments\"][testParameterComments.npkBtestparametercode], 'descending', 'npKAsampletestcommentscode') || [],\r\n                            props.dataStateObject && props.dataStateObject[testParameterComments.npkBtestparametercode]\r\n                                ? props.dataStateObject[testParameterComments.npkBtestparametercode] : { skip: 0, take: 10 })}\r\n                        dataState={props.dataStateObject && props.dataStateObject[testParameterComments.npkBtestparametercode]\r\n                            ? props.dataStateObject[testParameterComments.npkBtestparametercode] : { skip: 0, take: 10 }}\r\n                        dataStateChange={(event) => { props.dataStateChange(event, testParameterComments.npkBtestparametercode) }}\r\n\r\n                        extractedColumnList={fieldsForGrid}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        pageable={true}\r\n                        isActionRequired={true}\r\n                        scrollable={'scrollable'}\r\n                        hideColumnFilter={true}\r\n                        selectedId={0}\r\n                        testParameterComments={testParameterComments}\r\n                        deleteRecord={props.deletModalSite}\r\n                        deleteParam={{ operation: \"delete\" }}\r\n                        actionIcons={[{\r\n                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                            controlname: \"faTrashAlt\",\r\n                            hidden: false,\r\n                            objectName: \"delete\",\r\n                            onClick: props.deletModalSite\r\n\r\n                        }]}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function reportCommentsAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameterreportComments) =>\r\n            accordionMap.set(testParameterreportComments.ntestgrouptestparametercode,\r\n                <Col md=\"12\" testParameterreportComments={testParameterreportComments}>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end\">\r\n                            <Nav.Link name=\"deletetestparameter\" className=\"add-txt-btn\" testParameterreportComments={testParameterreportComments}\r\n                                onClick={() => props.deleteModalTest()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faTrashAlt} testParameterreportComments={testParameterreportComments} /> { }\r\n                                <FormattedMessage id=\"IDS_DELETE\" defaultMessage=\"Delete\" testParameterreportComments={testParameterreportComments} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"actions-stripe\" testParameterreportComments={testParameterreportComments}>\r\n                        <div className=\"d-flex justify-content-end\" testParameterreportComments={testParameterreportComments}>\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" testParameterreportComments={testParameterreportComments}\r\n                                onClick={() => props.addComments()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameterreportComments={testParameterreportComments} /> { }\r\n                                <FormattedMessage id=\"IDS_ADDREPORTCOMMENTS\" defaultMessage=\"Add Report Comments\" testParameterreportComments={testParameterreportComments} />\r\n                            </Nav.Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                        dataResult={props.masterData[\"reportComments\"] && process(props.masterData[\"reportComments\"][testParameterreportComments.ntestgrouptestparametercode] || [],\r\n                            props.dataState\r\n                                ? props.dataState : { skip: 0, take: 10 })}\r\n                        dataState={props.dataState\r\n                            ? props.dataState : { skip: 0, take: 10 }}\r\n                        dataStateChange={props.dataStateChange}\r\n\r\n                        extractedColumnList={fieldsForGrid}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        pageable={true}\r\n                        isActionRequired={true}\r\n                        scrollable={'scrollable'}\r\n                        hideColumnFilter={true}\r\n                        selectedId={0}\r\n                        gridHeight={'600px'}\r\n                        testParameterComments={testParameterreportComments}\r\n                        deleteRecord={props.deletModalSite}\r\n                        deleteParam={{ operation: \"delete\" }}\r\n                        actionIcons={[{\r\n                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                            controlname: \"faTrashAlt\",\r\n                            hidden: false,\r\n                            objectName: \"delete\",\r\n                            onClick: props.deletModalSite\r\n\r\n                        }]}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function TabDetails() {\r\n        const resultTabMap = new Map();\r\n        if (props.addOutcomeList.length === 0) {\r\n            props.activeTabIndex == 1 ?\r\n                resultTabMap.set(\"IDS_Test\",\r\n                    <>\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Nav.Link name=\"addtestparameter\"\r\n                                    onClick={() => props.addTest(\"IDS_Test\")}>\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        {props.masterData.testParameter && props.masterData.testParameter.length > 0 &&\r\n                            <CustomAccordion\r\n                                key=\"parameteraccordion\"\r\n                                clickIconGroup={true}\r\n                                deleteAccordion={props.deleteModalTest}\r\n                                accordionTitle={\"stestsynonym\"}\r\n                                accordionComponent={testParameterAccordion(props.masterData.testParameter)}\r\n                                inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                accordionClick={props.getOutcomeDetails}\r\n                                accordionPrimaryKey={\"npkAtestparametercode\"}\r\n                                accordionObjectName={\"testParameter\"}\r\n                                selectedKey={props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.npkAtestparametercode : 0}\r\n                            />\r\n                        }\r\n                    </>\r\n                ) : props.activeTabIndex == 2 ?\r\n                    resultTabMap.set(\"IDS_COMMENTS\",\r\n                        <>\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Nav.Link name=\"addtestparameter\"\r\n                                        onClick={() => props.addTest(\"IDS_COMMENTS\")}>\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                                        <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            {props.masterData.testParameterComments && props.masterData.testParameterComments.length > 0 &&\r\n                                <CustomAccordion\r\n                                    key=\"parameteraccordion\"\r\n                                    clickIconGroup={true}\r\n                                    deleteAccordion={props.deleteModalTest}\r\n                                    accordionTitle={\"stestsynonym\"}\r\n                                    accordionComponent={testCommentsAccordion(props.masterData.testParameterComments)}\r\n                                    inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                    accordionClick={props.getOutcomeDetails}\r\n                                    accordionPrimaryKey={\"npkBtestparametercode\"}\r\n                                    accordionObjectName={\"testParameterComments\"}\r\n                                    selectedKey={props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.npkBtestparametercode : 0}\r\n                                />\r\n                            }\r\n                        </>\r\n                    ) : props.activeTabIndex == 3 ?\r\n                        resultTabMap.set(\"IDS_REPEAT\",\r\n                            <>\r\n                                <div className=\"actions-stripe\">\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <Nav.Link name=\"addtestparameter\"\r\n                                            onClick={() => props.addTest(\"IDS_REPEAT\")}>\r\n                                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                                            <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                </div>\r\n                                {props.masterData.testRepeat && props.masterData.testRepeat.length > 0 &&\r\n                                    <DataGrid\r\n                                        key=\"testsectionkey\"\r\n                                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                                        dataResult={props.masterData[\"testRepeat\"] && process(sortData(props.masterData[\"testRepeat\"], 'descending', 'npkCtestparametercode') || [],\r\n                                            props.dataStatetestRepeat\r\n                                                ? props.dataStatetestRepeat : { skip: 0, take: 10 })}\r\n                                        dataState={props.dataStatetestRepeat\r\n                                            ? props.dataStatetestRepeat : { skip: 0, take: 10 }}\r\n                                        dataStateChange={(event) => { props.dataStateChangetestRepeat(event) }}\r\n                                        extractedColumnList={fieldsForGrid}\r\n                                        controlMap={props.controlMap}\r\n                                        userRoleControlRights={props.userRoleControlRights}\r\n                                        pageable={true}\r\n                                        isActionRequired={true}\r\n                                        scrollable={'scrollable'}\r\n                                        hideColumnFilter={true}\r\n                                        selectedId={0}\r\n                                        gridHeight={'600px'}\r\n                                        testRepeat={props.masterData.testRepeat}\r\n                                        deleteRecord={props.deleteModalTest}\r\n                                        deleteParam={{ operation: \"delete\" }}\r\n                                        actionIcons={[{\r\n                                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                            controlname: \"faTrashAlt\",\r\n                                            hidden: false,\r\n                                            objectName: \"delete\",\r\n                                            onClick: props.deleteModalTest\r\n                                        }]}\r\n                                    >\r\n                                    </DataGrid>\r\n                                }\r\n                            </>\r\n                        ) : props.activeTabIndex == 4 ?\r\n                            resultTabMap.set(\"IDS_ENFORCERESULT\",\r\n                                <>\r\n                                    <div className=\"actions-stripe\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <Nav.Link name=\"addtestparameter\"\r\n                                                onClick={() => props.addTest(\"IDS_ENFORCERESULT\")}>\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                            </Nav.Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    {props.masterData.testenforceTests && props.masterData.testenforceTests.length > 0 &&\r\n                                        <DataGrid\r\n                                            key=\"testsectionkey\"\r\n                                            primaryKeyField=\"nresultusedmaterialcode\"\r\n                                            dataResult={props.masterData[\"testenforceTests\"] && process(sortData(props.masterData[\"testenforceTests\"], 'descending', 'npkDtestparametercode') || [],\r\n                                                props.dataStatetestEnforce\r\n                                                    ? props.dataStatetestEnforce : { skip: 0, take: 10 })}\r\n                                            dataState={props.dataStatetestEnforce\r\n                                                ? props.dataStatetestEnforce : { skip: 0, take: 10 }}\r\n                                            dataStateChange={(event) => { props.dataStateChangetestEnforce(event) }}\r\n                                            extractedColumnList={fieldsForGrid}\r\n                                            controlMap={props.controlMap}\r\n                                            userRoleControlRights={props.userRoleControlRights}\r\n                                            pageable={true}\r\n                                            isActionRequired={true}\r\n                                            scrollable={'scrollable'}\r\n                                            hideColumnFilter={true}\r\n                                            selectedId={0}\r\n                                            gridHeight={'600px'}\r\n                                            testenforceTests={props.masterData.testenforceTests}\r\n                                            deleteRecord={props.deleteModalTest}\r\n                                            deleteParam={{ operation: \"delete\" }}\r\n                                            actionIcons={[{\r\n                                                title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                controlname: \"faTrashAlt\",\r\n                                                hidden: false,\r\n                                                objectName: \"delete\",\r\n                                                onClick: props.deleteModalTest\r\n                                            }]}\r\n                                        >\r\n                                        </DataGrid>\r\n                                    }\r\n                                </>\r\n                            ) :\r\n                            resultTabMap.set(\"IDS_REPORTCOMMENTS\",\r\n                                <>\r\n                                    <div className=\"actions-stripe\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <Nav.Link name=\"addtestparameter\"\r\n                                                onClick={() => props.addTest()}>\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                            </Nav.Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    {props.masterData.testParameterreportComments && props.masterData.testParameterreportComments.length > 0 &&\r\n                                        <CustomAccordion\r\n                                            key=\"parameteraccordion\"\r\n                                            accordionTitle={\"stestparametersynonym\"}\r\n                                            accordionComponent={reportCommentsAccordion(props.masterData.testParameterreportComments)}\r\n                                            inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                            accordionClick={props.getOutcomeDetails}\r\n                                            accordionPrimaryKey={\"ntestgrouptestparametercode\"}\r\n                                            accordionObjectName={\"testParameterreportComments\"}\r\n                                            selectedKey={props.masterData.selectedParameterRulesEngine ? props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode : 0}\r\n                                        />\r\n                                    }\r\n                                </>\r\n                            )\r\n        }\r\n        return resultTabMap;\r\n    }\r\n    function testfilter(list) {\r\n        let activeTabIndex = props.activeTabIndex\r\n        if (props.masterData.selectedParameterRulesEngine) {\r\n            let dynamicList = activeTabIndex === 2 ? props.masterData[\"testComments\"] && props.masterData[\"testComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode]\r\n                : props.masterData[\"reportComments\"] && props.masterData[\"reportComments\"][props.masterData.selectedParameterRulesEngine.ntestgrouptestparametercode]\r\n            if (dynamicList !== undefined) {\r\n                list = list.filter(({ value }) => !dynamicList.some(x => x.nsampletestcommentscode == value))\r\n            }\r\n        }\r\n        return list\r\n    }\r\n    const mandatoryFields =\r\n        props.action === 'IDS_SAVERULEMODAL' ?\r\n            [{ \"idsName\": \"IDS_RULESENGINENAME\", \"dataField\": \"srulename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }] :\r\n            props.activeTabIndex === 1 ?\r\n                props.action === 'IDS_ADDTEST' ? [\r\n                    { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    // { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    // { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                ] :\r\n                    [\r\n                        { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                    ]\r\n                :\r\n                props.activeTabIndex === 2 ? [\r\n                    { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    { \"idsName\": \"IDS_COMMENTTYPE\", \"dataField\": \"ncommenttypecode\", \"width\": \"200px\" },\r\n                    { \"idsName\": \"IDS_COMMENTSUBTYPE\", \"dataField\": \"ncommentsubtypecode\", \"width\": \"200px\" },\r\n                    props.isneedsgeneralcomments === true ?\r\n                        { \"idsName\": \"IDS_GENERALCOMMENTS\", \"dataField\": \"sgeneralcomments\", \"width\": \"200px\" } :\r\n                        { \"idsName\": \"IDS_PREFINEDCOMMENTS\", \"dataField\": \"nsampletestcommentscode\", \"width\": \"200px\" }\r\n                ] :\r\n                    props.activeTabIndex === 3 ? [\r\n                        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n                    ] : props.activeTabIndex === 4 ? [\r\n                        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestgrouptestcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_OPTIONALPARAMETERS\", \"dataField\": \"ntestgrouptestparametercode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_PASSFLAG\", \"dataField\": \"ngradecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"senforcestatuscomment\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }\r\n                    ] : \"\"\r\n    return (\r\n\r\n        <div class=\"modal-inner-content\">\r\n            <div class=\"row margin-top-negative-1\">\r\n                <div class=\"p-0 col-md-12\">\r\n                    <div class=\"vertical-tab-top popup rules-engine-add-rule\">\r\n                                    <Col className={`tab-left-area p-0  ${props.activeTabIndex\r\n                                        ? 'active' : \"\"} ${props.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                        <div className=\"center-area-wrap vertical-tab border-0 mr-0 popup-fixed-center-headed-full-width\">\r\n                                            <div className=\"center-area mt-3 mb-0 mx-4\">\r\n                                                <Row className='d-flex pt-0'>\r\n                                                    <Col md={6}>\r\n                                                        <Button onClick={() => props.addGroup(\"views\")} className=\"mr-1\">\r\n                                                            {'+'} <FormattedMessage id=\"IDS_GROUP\" defaultMessage=\"Group\" />\r\n                                                        </Button>\r\n                                                        <Button onClick={() => props.resetRule()}>\r\n                                                            <FormattedMessage id=\"IDS_RESET\" defaultMessage=\"Reset\" />\r\n                                                        </Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col md={12} className=\"ml-0 mr-0\">\r\n\r\n                                                        {props.addGroupList.length > 0 ?\r\n                                                            <>\r\n                                                                <BuilderBorder className='border-0 mb-0'>    {\r\n                                                                    createGroupRules()}   </BuilderBorder>\r\n                                                            </>\r\n\r\n                                                            : <></>}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                        <div md={6} className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab vertical-tab-expand ${props.activeTabIndex\r\n                            ? 'active' : \"\"}`} >\r\n                            <div className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${props.activeTabIndex\r\n                                ? 'active' : \"\"}`} style={{ width: props.enablePropertyPopup ? props.propertyPopupWidth + '%' : \"\" }}>\r\n                                <span className={` vertical-tab-close ${props.activeTabIndex\r\n                                    ? 'active' : \"\"}`} onClick={() => props.changePropertyView(0)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                <div className={` vertical-tab-content-common  ${props.activeTabIndex && props.activeTabIndex\r\n                                    ? 'active' : \"\"}`}>\r\n                                    <h4 className='inner_h4'>\r\n                                        {props.intl.formatMessage({ id: \"IDS_OUTCOME\" })}\r\n                                    </h4>\r\n                                    {props.activeTabIndex && props.activeTabIndex\r\n                                        ?\r\n                                        <CustomTabs activeKey={props.activeTestTab\r\n                                        } tabDetail={TabDetails()} />\r\n                                        : \"\"}\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className='tab-head'>\r\n                                <ul>\r\n                                    <li className={`${props.activeTabIndex && props.activeTabIndex == 1 ? 'active' : \"\"}`}\r\n                                        onClick={() => props.changePropertyView(1)}>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                        <span>\r\n                                            {props.intl.formatMessage({ id: \"IDS_Test\" })}\r\n                                        </span>\r\n                                    </li>\r\n                                    <li className={`${props.activeTabIndex && props.activeTabIndex == 2 ? 'active' : \"\"}`}\r\n                                        onClick={() => props.changePropertyView(2)}>\r\n                                        <FontAwesomeIcon icon={faComments} />\r\n                                        <span>\r\n                                            {props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                        </span>\r\n                                    </li>\r\n                                    <li className={`${props.activeTabIndex && props.activeTabIndex == 3 ? 'active' : \"\"}`}\r\n                                        onClick={() => props.changePropertyView(3)}>\r\n                                        <FontAwesomeIcon icon={faRecycle} />\r\n                                        <span>\r\n                                            {props.intl.formatMessage({ id: \"IDS_REPEAT\" })}\r\n                                        </span>\r\n                                    </li>\r\n                                    <li className={`${props.activeTabIndex && props.activeTabIndex == 4 ? 'active' : \"\"}`}\r\n                                        onClick={() => props.changePropertyView(4)}>\r\n                                        <FontAwesomeIcon icon={faFlag} />\r\n                                        <span>\r\n                                            {props.intl.formatMessage({ id: \"IDS_ENFORCERESULT\" })}\r\n                                        </span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            props.openModalPopup &&\r\n                            <ModalShow\r\n                                modalShow={true}\r\n                                modalTitle={props.action === 'IDS_SAVERULEMODAL' ? 'IDS_RULESENGINENAME' :\r\n                                    props.action === 'IDS_ADDREPORTCOMMENTS' ? props.intl.formatMessage({ id: 'IDS_ADDREPORTCOMMENTS' }) :\r\n                                        props.action === 'IDS_ADDTESTCOMMENTS' ? props.intl.formatMessage({ id: 'IDS_ADDTESTCOMMENTS' })\r\n                                            : props.action === 'IDS_ADDTEST' ? props.activeTabIndex == 3 ? props.intl.formatMessage({ id: 'IDS_ADDREPEATTEST' }) :\r\n                                                props.intl.formatMessage({ id: 'IDS_ADDTEST' }) :\r\n                                                props.intl.formatMessage({ id: 'IDS_ADDOUTSOURCESITE' })}\r\n\r\n                                closeModal={props.closeModalShow}\r\n                                onSaveClick={props.action === 'IDS_SAVERULEMODAL' ? props.save : props.modalsaveClick}\r\n                                // validateEsign={this.validateEsign}\r\n                                selectedRecord={props.selectedRecord}\r\n                                mandatoryFields={mandatoryFields}\r\n                                modalBody={\r\n\r\n                                    props.openmodalsavePopup === true ?\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <FormInput\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    label={props.intl.formatMessage({ id: \"IDS_RULESENGINENAME\" })}\r\n                                                    name={`srulename`}\r\n                                                    type=\"text\"\r\n                                                    required={false}\r\n                                                    isMandatory={true}\r\n                                                    value={props.selectedRecord[\"srulename\"] || \"\"}\r\n                                                    onChange={(event) => props.onInputChange(event)}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        :\r\n                                        props.activeTabIndex == 1 ?\r\n                                            <Col md={12}>\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormSelectSearch\r\n                                                            formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"ntestgrouptestcode\"}\r\n                                                            showOption={true}\r\n                                                            options={props.testInitiateTestCombo || []}\r\n                                                            optionId='ntestgrouptestcode'\r\n                                                            optionValue='stestparametersynonym'\r\n                                                            value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                            onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                            isMandatory={true}\r\n                                                            isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                        ></FormSelectSearch>\r\n                                                    </Col> \r\n                                                </Row>\r\n                                                \r\n                                                {(\r\n                                                    props.action === 'IDS_ADDSITE'// || props.action === 'IDS_ADDTEST'\r\n                                                        ? true : false\r\n                                                )\r\n                                                    ?\r\n                                                    <Row>\r\n                                                        <Col md={12}>\r\n                                                            <FormSelectSearch\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_FROMSITE\" })}\r\n                                                                // formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                isSearchable={true}\r\n                                                                name={\"nfromsitecode\"}\r\n                                                                showOption={true}\r\n                                                                options={props.siteList || []}\r\n                                                                optionId='nfromsitecode'\r\n                                                                optionValue='ssitename'\r\n                                                                isMandatory={true}\r\n                                                                value={props.selectedRecord[\"nfromsitecode\"] && props.selectedRecord[\"nfromsitecode\"] || \"\"}\r\n                                                                onChange={value => props.onmodalComboChange(value, 'nfromsitecode')}\r\n                                                            //  isMandatory={true}\r\n                                                            ></FormSelectSearch>\r\n                                                        </Col>\r\n                                                        <Col md={12}>\r\n                                                            <FormSelectSearch\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_TOSITE\" })}\r\n                                                                //    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                isSearchable={true}\r\n                                                                name={\"ntositecode\"}\r\n                                                                showOption={true}\r\n                                                                options={props.siteList || []}\r\n                                                                optionId='ntositecode'\r\n                                                                optionValue='ssitename'\r\n                                                                isMandatory={true}\r\n                                                                value={props.selectedRecord[\"ntositecode\"] && props.selectedRecord[\"ntositecode\"] || \"\"}\r\n                                                                onChange={value => props.onmodalComboChange(value, 'ntositecode')}\r\n                                                            //  isMandatory={true}\r\n                                                            ></FormSelectSearch>\r\n                                                        </Col>\r\n                                                    </Row> : \"\"\r\n                                                }\r\n                                            </Col>\r\n                                            :\r\n                                            props.activeTabIndex == 2 ?\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormSelectSearch\r\n                                                            formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"ntestgrouptestcode\"}\r\n                                                            showOption={true}\r\n                                                            options={props.testCommentsTestCombo || []}\r\n                                                            optionId='ntestgrouptestcode'\r\n                                                            optionValue='stestparametersynonym'\r\n                                                            value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                            onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                            isMandatory={true}\r\n                                                            isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                        ></FormSelectSearch>\r\n                                                    </Col> \r\n                                                    <Col md={12}>\r\n                                                        <FormSelectSearch\r\n                                                            formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTTYPE\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"ncommenttypecode\"}\r\n                                                            showOption={true}\r\n                                                            options={props.CommentType || []}\r\n                                                            optionId='ncommenttypecode'\r\n                                                            optionValue='scommenttype'\r\n                                                            value={props.selectedRecord[\"ncommenttypecode\"] && props.selectedRecord[\"ncommenttypecode\"] || \"\"}\r\n                                                            onChange={value => props.onmodalComboChange(value, 'ncommenttypecode')}\r\n                                                            isMandatory={true}\r\n                                                        ></FormSelectSearch>\r\n                                                    </Col>\r\n                                                    <Col md={12}>\r\n                                                        <FormSelectSearch\r\n                                                            formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTSUBTYPE\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"ncommentsubtypecode\"}\r\n                                                            showOption={true}\r\n                                                            options={props.CommentSubType || []}\r\n                                                            optionId='ncommentsubtypecode'\r\n                                                            optionValue='scommentsubtype'\r\n                                                            value={props.selectedRecord[\"ncommentsubtypecode\"] && props.selectedRecord[\"ncommentsubtypecode\"] || \"\"}\r\n                                                            onChange={value => props.onmodalComboChange(value, 'ncommentsubtypecode')}\r\n                                                            isMandatory={true}\r\n                                                        ></FormSelectSearch>\r\n                                                    </Col>\r\n                                                    {props.selectedRecord[\"ncommentsubtypecode\"] ?\r\n                                                        props.isneedsgeneralcomments === true ?\r\n                                                            <Col md={12}>\r\n                                                                <FormTextarea\r\n                                                                    name={\"sgeneralcomments\"}\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_GENERALCOMMENTS\" })}\r\n                                                                    type=\"text\"\r\n                                                                    value={props.selectedRecord && props.selectedRecord['sgeneralcomments'] || \"\"}\r\n                                                                    // isMandatory={control.mandatory}\r\n                                                                    // required={control.mandatory}\r\n                                                                    onChange={(event) => props.onInputChange(event, 1)}\r\n                                                                    rows=\"2\"\r\n                                                                    maxLength={\"255\"}\r\n                                                                    isDisabled={false}\r\n                                                                    isMandatory={true}\r\n                                                                />\r\n                                                            </Col> : <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_PREDEFINEDNAME\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"nsampletestcommentscode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.predefcomments || []}\r\n                                                                    optionId='nsampletestcommentscode'\r\n                                                                    optionValue='spredefinedname'\r\n                                                                    value={props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'nsampletestcommentscode')}\r\n                                                                    isMandatory={true}\r\n                                                                ></FormSelectSearch>\r\n                                                                {/* <FormInput\r\n                                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                    name={`sdescription`}\r\n                                                                    type=\"text\"\r\n                                                                    required={false}\r\n                                                                    isMandatory={true}\r\n                                                                    value={props.selectedRecord[\"sdescription\"] && props.selectedRecord[\"sdescription\"] || \"\"}\r\n                                                                    onChange={(event) => props.onInputChange(event)}\r\n                                                                /> */}\r\n                                                                <FormTextarea\r\n                                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                    name={`sdescription`}\r\n                                                                    type=\"text\"\r\n                                                                    required={false}\r\n                                                                    isMandatory={true}\r\n                                                                    value={props.selectedRecord[\"sdescription\"] && props.selectedRecord[\"sdescription\"] || \"\"}\r\n                                                                    onChange={(event) => props.onInputChange(event)}\r\n                                                                />\r\n                                                            </Col>\r\n                                                        : \"\"\r\n                                                    }\r\n\r\n                                                </Row>\r\n                                                : props.activeTabIndex == 3 ?\r\n                                                    <Row>\r\n                                                        <Col md={12}>\r\n                                                            <FormSelectSearch\r\n                                                                formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                                isSearchable={true}\r\n                                                                name={\"ntestgrouptestcode\"}\r\n                                                                showOption={true}\r\n                                                                options={props.testRepeatTestCombo || []}\r\n                                                                optionId='ntestgrouptestcode'\r\n                                                                optionValue='stestparametersynonym'\r\n                                                                value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                                onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                                isMandatory={true}\r\n                                                                isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                            ></FormSelectSearch>\r\n                                                        </Col>\r\n                                                        <Col md={12}>\r\n                                                            <FormNumericInput\r\n                                                                name={'nrepeatcountno'} \r\n                                                                label={props.intl.formatMessage({ id: \"IDS_REPEATCOUNT\" })}\r\n                                                                placeholder={props.intl.formatMessage({ id: \"IDS_REPEATCOUNT\" })}\r\n                                                                value={props.selectedRecord[\"nrepeatcountno\"]  ? props.selectedRecord[\"nrepeatcountno\"] : \"\"}\r\n                                                                type=\"text\"\r\n                                                                strict={true}\r\n                                                                maxLength={10}\r\n                                                                noStyle={true}\r\n                                                                onChange={(event) => props.onRuleNumericInputOnChange(event, 'nrepeatcountno')}\r\n                                                                precision={2}\r\n                                                                min={0}\r\n                                                                className=\"form-control\"\r\n                                                                isMandatory={false}\r\n                                                                required={false}\r\n                                                            />\r\n                                                        </Col> \r\n                                                    </Row> : props.activeTabIndex == 4 ?\r\n                                                        <Row>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"ntestgrouptestcode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.testenforceTestCombo || []}\r\n                                                                    optionId='ntestgrouptestcode'\r\n                                                                    optionValue='stestparametersynonym'\r\n                                                                    value={props.selectedRecord[\"ntestgrouptestcode\"] && props.selectedRecord[\"ntestgrouptestcode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'ntestgrouptestcode')}\r\n                                                                    isMandatory={true}\r\n                                                                    isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                                                ></FormSelectSearch>\r\n                                                            </Col>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_OPTIONALPARAMETERS\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"ntestgrouptestparametercode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.testGroupTestParameterRulesEngine || []}\r\n                                                                    optionId='ntestgrouptestparametercode'\r\n                                                                    optionValue='stestparametersynonym'\r\n                                                                    value={props.selectedRecord[\"ntestgrouptestparametercode\"] && props.selectedRecord[\"ntestgrouptestparametercode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'ntestgrouptestparametercode')}\r\n                                                                    isMandatory={true}\r\n                                                                    isDisabled={false}\r\n                                                                ></FormSelectSearch>\r\n                                                            </Col>\r\n                                                            <Col md={12}>\r\n                                                                <FormTextarea\r\n                                                                    name=\"senforcestatuscomment\"\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                                    placeholder={props.intl.formatMessage({ id: \"IDS_RESULTS\" })}\r\n                                                                    value={props.selectedRecord ? props.selectedRecord[\"senforcestatuscomment\"] : \"\"}\r\n                                                                    rows=\"2\"\r\n                                                                    isMandatory={true}\r\n                                                                    required={false}\r\n                                                                    maxLength={255}\r\n                                                                    onChange={(event) => props.onInputChange(event, 1)}\r\n                                                                />\r\n                                                            </Col>\r\n                                                            <Col md={12}>\r\n                                                                <FormSelectSearch\r\n                                                                    formLabel={props.intl.formatMessage({ id: \"IDS_PASSFLAG\" })}\r\n                                                                    isSearchable={true}\r\n                                                                    name={\"ngradecode\"}\r\n                                                                    showOption={true}\r\n                                                                    options={props.GradeList || []}\r\n                                                                    optionId='ngradecode'\r\n                                                                    optionValue='sgradename'\r\n                                                                    value={props.selectedRecord[\"ngradecode\"] && props.selectedRecord[\"ngradecode\"] || \"\"}\r\n                                                                    onChange={value => props.onmodalComboChange(value, 'ngradecode')}\r\n                                                                    isMandatory={true}\r\n                                                                    isDisabled={false}\r\n                                                                ></FormSelectSearch>\r\n                                                            </Col>\r\n                                                        </Row> : \"\"\r\n                                }\r\n                            />\r\n                        }\r\n                    </div></div></div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddTestGroupRule);"]},"metadata":{},"sourceType":"module"}