{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\layout\\\\layout.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from \"react-router-dom\";\nimport IdleTimer from 'react-idle-timer';\nimport PropTypes from 'prop-types';\nimport IdleTimeOutModal from '../confirm-alert/IdleTimeOutModal';\nimport Sidebar from '../sidebar/sidebar.component';\nimport Header from '../header/header.component';\nimport routes from '../../routes';\nimport { navPage, updateStore, callService } from '../../actions';\nimport rsapi from '../../rsapi';\nimport { toast } from 'react-toastify';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport { IDLE_LOGOUT } from '../../actions/LoginTypes';\nimport { injectIntl } from 'react-intl'; // import { updateStore } from '../../actions/LoginAction';\n\nimport ScrollToTop from '../../actions/ScrollToTop';\nimport SearchBar from '../searchbarcomponent/SearchBar';\nimport { formatInputDate } from '../CommonScript';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onAction = e => {};\n\n    this._onActive = e => {};\n\n    this._onIdle = e => {\n      if (this.state.showIdleModal !== true) {\n        let uRL = \"\";\n        let inputData = [];\n        uRL = 'login/insertAuditAction';\n        inputData = {\n          userinfo: this.props.Login.userInfo,\n          // scomments: `UserName:${this.props.Login.userInfo.susername}, \n          // LoginID:${this.props.Login.userInfo.sloginid}`,\n          scomments: `User Name:${this.props.Login.userInfo.susername}; User Role:${this.props.Login.userInfo.suserrolename}; Login ID:${this.props.Login.userInfo.sloginid}`,\n          sauditaction: \"IDS_IDLETIMELOCK\"\n        };\n        rsapi.post(uRL, inputData).then(response => {\n          this.setState({\n            showIdleModal: true,\n            sessionExpired: Date.now() + 60000\n          });\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(error.response.data);\n          }\n        });\n      }\n    };\n\n    this.handleLogin = event => {\n      if (event) {\n        if (this.password.current !== null && this.password.current.elements[0].value === \"\") {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_ENTERPASSWORD\"\n          }));\n          return;\n        } else {\n          let uRL = \"\";\n          let inputData = [];\n          uRL = 'login/idleTimeAuditAction';\n          inputData = {\n            userinfo: this.props.Login.userInfo,\n            //password: this.state.password,\n            password: this.password.current.elements[0].value,\n            flag: true,\n            nFlag: 1\n          };\n          rsapi.post(uRL, inputData).then(response => {\n            if (response.data['PassFlag'] === this.props.intl.formatMessage({\n              id: \"IDS_SUCCESS\"\n            })) {\n              this.password.current.elements[0].value = \"\";\n              this.setState({\n                showIdleModal: false,\n                openModal: false\n              });\n            } else {\n              toast.info(response.data['PassFlag']);\n            }\n          }).catch(error => {\n            if (error.response.status === 500) {\n              toast.warn(error.message);\n            } else {\n              toast.warn(error.response.data);\n            }\n          });\n        }\n      }\n    };\n\n    this.enterKeyLogin = event => {\n      if (event.keyCode === 13) {\n        this.handleLogin(event);\n        event.preventDefault();\n      }\n    };\n\n    this.handleLogout = event => {\n      if (event) {\n        let uRL = \"\";\n        let inputData = [];\n        uRL = 'login/idleTimeAuditAction';\n        inputData = {\n          userinfo: this.props.Login.userInfo,\n          //password: this.state.password,\n          //password: this.password.current.elements[0].value,\n          flag: false,\n          nFlag: 2\n        };\n        rsapi.post(uRL, inputData).then(response => {\n          const updateInfo = {\n            typeName: IDLE_LOGOUT,\n            data: {\n              masterData: [],\n              inputParam: undefined,\n              idleneed: false\n            }\n          };\n          this.props.updateStore(updateInfo); //this.password.current.elements[0].value = \"\"\n          //this.setState({ showIdleModal: false })\n\n          this.props.navPage(\"login\");\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(error.response.data);\n          }\n        });\n      }\n    };\n\n    this.renderer = event => {\n      // event.preventDefault();\n      const {\n        minutes,\n        seconds,\n        completed\n      } = event;\n\n      if (completed) {\n        // Render a completed state\n        let uRL = \"\";\n        let inputData = [];\n        uRL = 'login/insertAuditAction';\n        inputData = {\n          userinfo: this.props.Login.userInfo,\n          // scomments: `UserName:${this.props.Login.userInfo.susername}, \n          // LoginID:${this.props.Login.userInfo.sloginid}`,\n          scomments: `User Name:${this.props.Login.userInfo.susername}; User Role:${this.props.Login.userInfo.suserrolename}; Login ID:${this.props.Login.userInfo.sloginid}`,\n          sauditaction: \"IDS_SESSIONEXPIRED\",\n          nFlag: 2\n        };\n        rsapi.post(uRL, inputData).then(response => {\n          const updateInfo = {\n            typeName: IDLE_LOGOUT,\n            data: {\n              masterData: [],\n              inputParam: undefined,\n              idleneed: false\n            }\n          }; //this.props.navPage(\"login\");\n\n          this.props.updateStore(updateInfo);\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(error.response.data);\n          }\n        });\n      } else {\n        // Render a countdown\n        console.log(\"minutes\" + minutes + \"seconds\" + seconds);\n        return /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            'margin-left': '0.3rem',\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 20\n          }\n        }, minutes, \" minutes \", seconds, \" seconds..!\");\n      }\n\n      return null;\n    };\n\n    this.onInputChangeSearch = event => {\n      let defaultSearch = [];\n      this.props.Login.menuDesign.map((menuItem, index) => {\n        menuItem.lstmodule && menuItem.lstmodule.map((moduleItem, moduleIndex) => {\n          moduleItem.lstforms && moduleItem.lstforms.map((formItem, formIndex) => {\n            //   console.log(formItem.sdisplayname.toLowerCase(),event.target.value,formItem.sdisplayname.toLowerCase().includes(event.target.value))\n            if (formItem.sdisplayname.toLowerCase().includes(event.target.value.toLowerCase())) {\n              defaultSearch.push(formItem);\n            }\n          });\n        });\n      });\n      this.setState({\n        defaultSearch,\n        searchText: event.target.value.toLowerCase(),\n        menuClick: false\n      });\n    };\n\n    this.onClickBackToMenu = e => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.setState({\n        defaultSearch: [],\n        menuClick: false,\n        nmenucode: undefined\n      });\n    };\n\n    this.onClickSearchMenu = (menu, inputRef) => {\n      let defaultSearch = [];\n      this.props.Login.menuDesign.map((menuItem, index) => {\n        if (menu.nmenucode === menuItem.nmenucode) {\n          menuItem.lstmodule && menuItem.lstmodule.map((moduleItem, moduleIndex) => {\n            moduleItem.lstforms && moduleItem.lstforms.map((formItem, formIndex) => {\n              //   console.log(formItem.sdisplayname.toLowerCase(),event.target.value,formItem.sdisplayname.toLowerCase().includes(event.target.value))\n              //  if (formItem.sdisplayname.toLowerCase().includes(event.target.value.toLowerCase())) {\n              defaultSearch.push(formItem); //   }\n            });\n          });\n        }\n      });\n      this.setState({\n        defaultSearch,\n        menuClick: true,\n        nmenucode: menu.nmenucode\n      });\n    };\n\n    this.getDetail = (classUrl, methodUrl, formCode, displayName, moduleCode, formname, nmenucode) => {\n      if (this.props.Login.userInfo.nformcode !== formCode) {\n        const userInfo = { ...this.props.Login.userInfo,\n          \"nformcode\": formCode,\n          \"nmodulecode\": moduleCode,\n          \"sformname\": formname.sformname\n        };\n        const inputParam = {\n          inputData: {\n            \"userinfo\": userInfo,\n            currentdate: formatInputDate(new Date(), true)\n          },\n          classUrl,\n          methodUrl,\n          displayName,\n          key: \"MenuId_\" + nmenucode\n        };\n        this.props.callService(inputParam);\n      }\n    };\n\n    this.onClickButton = forms => {\n      const {\n        history\n      } = this.props;\n      history.push('/' + forms.sclassname);\n      this.inputRef.current.value = \"\";\n      this.setState({\n        defaultSearch: [],\n        searchText: \"\",\n        menuClick: false\n      });\n      this.getDetail(forms.sclassname.toLowerCase(), forms.surl, forms.nformcode, forms.sdisplayname, forms.nmodulecode, forms, forms.nmenucode);\n    };\n\n    this.layOutGetHome = (updateInfo, form) => {\n      const {\n        history\n      } = this.props;\n      history.push('/home');\n      this.inputRef.current.value = \"\";\n      this.setState({\n        defaultSearch: [],\n        searchText: \"\",\n        menuClick: false\n      });\n      this.props.updateStore(updateInfo); //  this.props.layOutGetHome(updateInfo)\n    };\n\n    this.state = {\n      timeout: this.props.Login.idleTimeout,\n      showIdleModal: false,\n      userLoggedIn: false,\n      isTimedOut: false,\n      password: \"\",\n      sessionExpired: this.props.Login.sessionExpired,\n      defaultSearch: [],\n      searchText: '',\n      menuClick: false\n    };\n    this.inputRef = React.createRef();\n    this.idleTimer = null; //this.selectInputOnChange = this.selectInputOnChange.bind(this)\n\n    this.password = React.createRef();\n  }\n\n  // selectInputOnChange = (event) => {\n  //     let password = \"\"\n  //     if (event !== null) {\n  //         password = event.target.value\n  //     }\n  //     this.setState({ password: password })\n  // }\n  render() {\n    this.confirmMessage = new ConfirmMessage();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IdleTimer, {\n      ref: ref => {\n        this.idleTimer = ref;\n      },\n      element: document,\n      onActive: this._onActive,\n      onAction: this._onAction,\n      onIdle: this._onIdle,\n      debounce: 250,\n      timeout: this.state.timeout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }), this.props.Login.idleneed ? /*#__PURE__*/React.createElement(IdleTimeOutModal, {\n      showIdleModal: this.state.showIdleModal,\n      handleLogin: this.handleLogin,\n      handleLogout: this.handleLogout,\n      UserInfo: this.props.Login.userInfo,\n      passwordref: this.password //selectInputOnChange={this.selectInputOnChange}\n      ,\n      idealTime: this.props.Login.idleTimeout,\n      Login: this.props.Login,\n      sessionExpired: this.state.sessionExpired,\n      enterKeyLogin: this.enterKeyLogin,\n      renderer: this.renderer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 25\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(Sidebar, {\n      history: this.props,\n      layOutGetHome: this.layOutGetHome,\n      inputRef: this.inputRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"content-wrapper\",\n      className: \"d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      history: this.props,\n      searchBar: /*#__PURE__*/React.createElement(SearchBar, {\n        options: this.state.defaultSearch,\n        optionDisplayMember: 'sdisplayname',\n        onClickButton: this.onClickButton,\n        onInputChange: this.onInputChangeSearch,\n        pathname: this.props.history.location.pathname,\n        inputRef: this.inputRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid px-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ScrollToTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 37\n      }\n    }, routes.map((route, index) => {\n      return route.component ? /*#__PURE__*/React.createElement(Route, {\n        key: index,\n        path: route.path,\n        exact: route.exact,\n        name: route.name,\n        render: props => /*#__PURE__*/React.createElement(route.component, Object.assign({\n          onClickSearchMenu: this.onClickSearchMenu,\n          onClickSearchForm: this.onClickButton,\n          menuClick: this.state.menuClick,\n          onClickBackToMenu: this.onClickBackToMenu,\n          searchText: this.state.searchText,\n          defaultSearch: this.state.defaultSearch\n        }, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 57\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 49\n        }\n      }) : null;\n    }))))))));\n  }\n\n}\n\nLayout.propTypes = {\n  match: PropTypes.any.isRequired,\n  history: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  navPage,\n  updateStore,\n  callService\n})(injectIntl(Layout));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/layout/layout.component.jsx"],"names":["React","connect","Route","Switch","IdleTimer","PropTypes","IdleTimeOutModal","Sidebar","Header","routes","navPage","updateStore","callService","rsapi","toast","ConfirmMessage","IDLE_LOGOUT","injectIntl","ScrollToTop","SearchBar","formatInputDate","mapStateToProps","state","Login","Layout","Component","constructor","props","_onAction","e","_onActive","_onIdle","showIdleModal","uRL","inputData","userinfo","userInfo","scomments","susername","suserrolename","sloginid","sauditaction","post","then","response","setState","sessionExpired","Date","now","catch","error","status","message","warn","data","handleLogin","event","password","current","elements","value","info","intl","formatMessage","id","flag","nFlag","openModal","enterKeyLogin","keyCode","preventDefault","handleLogout","updateInfo","typeName","masterData","inputParam","undefined","idleneed","renderer","minutes","seconds","completed","console","log","color","onInputChangeSearch","defaultSearch","menuDesign","map","menuItem","index","lstmodule","moduleItem","moduleIndex","lstforms","formItem","formIndex","sdisplayname","toLowerCase","includes","target","push","searchText","menuClick","onClickBackToMenu","stopPropagation","nmenucode","onClickSearchMenu","menu","inputRef","getDetail","classUrl","methodUrl","formCode","displayName","moduleCode","formname","nformcode","sformname","currentdate","key","onClickButton","forms","history","sclassname","surl","nmodulecode","layOutGetHome","form","timeout","idleTimeout","userLoggedIn","isTimedOut","createRef","idleTimer","render","confirmMessage","ref","document","location","pathname","route","component","path","exact","name","propTypes","match","any","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport IdleTimer from 'react-idle-timer';\r\nimport PropTypes from 'prop-types';\r\nimport IdleTimeOutModal from '../confirm-alert/IdleTimeOutModal';\r\nimport Sidebar from '../sidebar/sidebar.component';\r\nimport Header from '../header/header.component';\r\nimport routes from '../../routes';\r\nimport { navPage, updateStore, callService } from '../../actions'\r\nimport rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { IDLE_LOGOUT } from '../../actions/LoginTypes';\r\nimport { injectIntl } from 'react-intl';\r\n// import { updateStore } from '../../actions/LoginAction';\r\nimport ScrollToTop from '../../actions/ScrollToTop';\r\nimport SearchBar from '../searchbarcomponent/SearchBar';\r\nimport { formatInputDate } from '../CommonScript';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nclass Layout extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timeout: this.props.Login.idleTimeout,\r\n            showIdleModal: false,\r\n            userLoggedIn: false,\r\n            isTimedOut: false,\r\n            password: \"\",\r\n            sessionExpired: this.props.Login.sessionExpired,\r\n            defaultSearch: [],\r\n            searchText: '',\r\n            menuClick: false\r\n        }\r\n        this.inputRef=React.createRef();\r\n        this.idleTimer = null\r\n        //this.selectInputOnChange = this.selectInputOnChange.bind(this)\r\n        this.password = React.createRef();\r\n    }\r\n\r\n    _onAction = (e) => {\r\n\r\n    }\r\n\r\n    _onActive = (e) => {\r\n\r\n    }\r\n\r\n    _onIdle = (e) => {\r\n        if (this.state.showIdleModal !== true) {\r\n            let uRL = \"\";\r\n            let inputData = [];\r\n            uRL = 'login/insertAuditAction';\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                // scomments: `UserName:${this.props.Login.userInfo.susername}, \r\n                // LoginID:${this.props.Login.userInfo.sloginid}`,\r\n                scomments: `User Name:${this.props.Login.userInfo.susername}; User Role:${this.props.Login.userInfo.suserrolename}; Login ID:${this.props.Login.userInfo.sloginid}`,\r\n                sauditaction: \"IDS_IDLETIMELOCK\"\r\n            }\r\n            rsapi.post(uRL, inputData)\r\n                .then(response => {\r\n                    this.setState({ showIdleModal: true, sessionExpired: Date.now() + 60000 });\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    handleLogin = (event) => {\r\n        if (event) {\r\n            if (this.password.current !== null && this.password.current.elements[0].value === \"\") {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERPASSWORD\" }));\r\n                return;\r\n            }\r\n            else {\r\n                let uRL = \"\";\r\n                let inputData = [];\r\n                uRL = 'login/idleTimeAuditAction';\r\n                inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    //password: this.state.password,\r\n                    password: this.password.current.elements[0].value,\r\n                    flag: true, nFlag: 1\r\n                }\r\n\r\n                rsapi.post(uRL, inputData)\r\n                    .then(response => {\r\n                        if (response.data['PassFlag'] === this.props.intl.formatMessage({ id: \"IDS_SUCCESS\" })) {\r\n                            this.password.current.elements[0].value = \"\"\r\n                            this.setState({ showIdleModal: false, openModal: false })\r\n                        }\r\n                        else {\r\n                            toast.info(response.data['PassFlag']);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.warn(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    enterKeyLogin = (event) => {\r\n        if (event.keyCode === 13) {\r\n            this.handleLogin(event);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n\r\n    handleLogout = (event) => {\r\n        if (event) {\r\n            let uRL = \"\";\r\n            let inputData = [];\r\n            uRL = 'login/idleTimeAuditAction';\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                //password: this.state.password,\r\n                //password: this.password.current.elements[0].value,\r\n                flag: false, nFlag: 2\r\n            }\r\n\r\n            rsapi.post(uRL, inputData)\r\n                .then(response => {\r\n\r\n                    const updateInfo = {\r\n                        typeName: IDLE_LOGOUT,\r\n                        data: {\r\n                            masterData: [], inputParam: undefined, idleneed: false\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n\r\n                    //this.password.current.elements[0].value = \"\"\r\n                    //this.setState({ showIdleModal: false })\r\n                    this.props.navPage(\"login\");\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    renderer = (event) => {\r\n        // event.preventDefault();\r\n        const { minutes, seconds, completed } = event;\r\n        if (completed) {\r\n            // Render a completed state\r\n            let uRL = \"\";\r\n            let inputData = [];\r\n            uRL = 'login/insertAuditAction';\r\n            inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                // scomments: `UserName:${this.props.Login.userInfo.susername}, \r\n                // LoginID:${this.props.Login.userInfo.sloginid}`,\r\n                scomments: `User Name:${this.props.Login.userInfo.susername}; User Role:${this.props.Login.userInfo.suserrolename}; Login ID:${this.props.Login.userInfo.sloginid}`,\r\n                sauditaction: \"IDS_SESSIONEXPIRED\", nFlag: 2\r\n            }\r\n\r\n            rsapi.post(uRL, inputData)\r\n                .then(response => {\r\n\r\n                    const updateInfo = {\r\n                        typeName: IDLE_LOGOUT,\r\n                        data: {\r\n                            masterData: [], inputParam: undefined, idleneed: false\r\n                        }\r\n                    }\r\n                    //this.props.navPage(\"login\");\r\n                    this.props.updateStore(updateInfo);\r\n\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            // Render a countdown\r\n            console.log(\"minutes\" + minutes + \"seconds\" + seconds)\r\n            return <span style={{ 'margin-left': '0.3rem', color: 'red' }}>{minutes} minutes {seconds} seconds..!</span>;\r\n\r\n        }\r\n        return null;\r\n    };\r\n\r\n    onInputChangeSearch = (event) => {\r\n        let defaultSearch = []\r\n        this.props.Login.menuDesign.map((menuItem, index) => {\r\n            menuItem.lstmodule && menuItem.lstmodule.map((moduleItem, moduleIndex) => {\r\n                moduleItem.lstforms && moduleItem.lstforms.map((formItem, formIndex) => {\r\n\r\n                    //   console.log(formItem.sdisplayname.toLowerCase(),event.target.value,formItem.sdisplayname.toLowerCase().includes(event.target.value))\r\n                    if (formItem.sdisplayname.toLowerCase().includes(event.target.value.toLowerCase())) {\r\n                        defaultSearch.push(formItem)\r\n                    }\r\n                })\r\n            })\r\n        })\r\n        this.setState({ defaultSearch, searchText: event.target.value.toLowerCase(), menuClick: false })\r\n    }\r\n    onClickBackToMenu = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation()\r\n        this.setState({\r\n            defaultSearch: [],\r\n            menuClick: false, nmenucode: undefined\r\n        })\r\n    }\r\n\r\n    onClickSearchMenu = (menu,inputRef) => {\r\n        let defaultSearch = []\r\n        this.props.Login.menuDesign.map((menuItem, index) => {\r\n            if (menu.nmenucode === menuItem.nmenucode) {\r\n                menuItem.lstmodule && menuItem.lstmodule.map((moduleItem, moduleIndex) => {\r\n                    moduleItem.lstforms && moduleItem.lstforms.map((formItem, formIndex) => {\r\n                        //   console.log(formItem.sdisplayname.toLowerCase(),event.target.value,formItem.sdisplayname.toLowerCase().includes(event.target.value))\r\n                        //  if (formItem.sdisplayname.toLowerCase().includes(event.target.value.toLowerCase())) {\r\n                        defaultSearch.push(formItem)\r\n                        //   }\r\n                    })\r\n                })\r\n            }\r\n        })\r\n        this.setState({\r\n            defaultSearch,\r\n            menuClick: true, nmenucode: menu.nmenucode\r\n        })\r\n    }\r\n\r\n    getDetail = (classUrl, methodUrl, formCode, displayName, moduleCode, formname,nmenucode) => {\r\n\r\n        if (this.props.Login.userInfo.nformcode !== formCode) {\r\n            const userInfo = {\r\n                ...this.props.Login.userInfo, \"nformcode\": formCode,\r\n                \"nmodulecode\": moduleCode, \"sformname\": formname.sformname,\r\n            }\r\n            const inputParam = {\r\n                inputData: { \"userinfo\": userInfo, currentdate: formatInputDate(new Date(), true) },\r\n                classUrl, methodUrl, displayName,key:\"MenuId_\"+nmenucode\r\n            };\r\n\r\n            this.props.callService(inputParam);\r\n        }\r\n    }\r\n\r\n    onClickButton = (forms) => {\r\n        const { history } = this.props;\r\n        history.push('/' + forms.sclassname);\r\n        this.inputRef.current.value=\"\"\r\n        this.setState({ defaultSearch: [], searchText: \"\", menuClick: false })\r\n        this.getDetail(forms.sclassname.toLowerCase(), forms.surl,\r\n            forms.nformcode, forms.sdisplayname, forms.nmodulecode, forms, forms.nmenucode)\r\n    }\r\n\r\n    layOutGetHome = (updateInfo,form) => {\r\n        const { history } = this.props;\r\n        history.push('/home');\r\n        this.inputRef.current.value=\"\"\r\n        this.setState({ defaultSearch: [], searchText: \"\", menuClick: false})\r\n        this.props.updateStore(updateInfo);\r\n        //  this.props.layOutGetHome(updateInfo)\r\n    }\r\n\r\n    // selectInputOnChange = (event) => {\r\n    //     let password = \"\"\r\n    //     if (event !== null) {\r\n    //         password = event.target.value\r\n    //     }\r\n    //     this.setState({ password: password })\r\n    // }\r\n\r\n    render() {\r\n        this.confirmMessage = new ConfirmMessage();\r\n        return (\r\n            <>\r\n                <div id=\"app-wrapper\">\r\n                    <IdleTimer\r\n                        ref={ref => { this.idleTimer = ref }}\r\n                        element={document}\r\n                        onActive={this._onActive}\r\n                        onAction={this._onAction}\r\n                        onIdle={this._onIdle}\r\n                        debounce={250}\r\n                        timeout={this.state.timeout} />\r\n                    {this.props.Login.idleneed ?\r\n                        <IdleTimeOutModal\r\n                            showIdleModal={this.state.showIdleModal}\r\n                            handleLogin={this.handleLogin}\r\n                            handleLogout={this.handleLogout}\r\n                            UserInfo={this.props.Login.userInfo}\r\n                            passwordref={this.password}\r\n                            //selectInputOnChange={this.selectInputOnChange}\r\n                            idealTime={this.props.Login.idleTimeout}\r\n                            Login={this.props.Login}\r\n                            sessionExpired={this.state.sessionExpired}\r\n                            enterKeyLogin={this.enterKeyLogin}\r\n                            renderer={this.renderer} />\r\n                        : \"\"}\r\n                    <Sidebar history={this.props} layOutGetHome={this.layOutGetHome}  inputRef={ this.inputRef} />\r\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                        <div id=\"content\">\r\n                            <Header history={this.props} searchBar={\r\n                                <SearchBar options={this.state.defaultSearch}\r\n                                    optionDisplayMember={'sdisplayname'}\r\n                                    onClickButton={this.onClickButton}\r\n                                    onInputChange={this.onInputChangeSearch}\r\n                                    pathname={this.props.history.location.pathname}\r\n                                    inputRef={this.inputRef}\r\n\r\n                                />} />\r\n                            <div className=\"container-fluid px-0\">\r\n                                <ScrollToTop>\r\n                                    <Switch>\r\n                                        {routes.map((route, index) => {\r\n                                            return route.component ? (\r\n                                                <Route\r\n                                                    key={index}\r\n                                                    path={route.path}\r\n                                                    exact={route.exact}\r\n                                                    name={route.name}\r\n                                                    render={props => (\r\n                                                        <route.component\r\n                                                            onClickSearchMenu={this.onClickSearchMenu}\r\n                                                            onClickSearchForm={this.onClickButton}\r\n                                                            menuClick={this.state.menuClick}\r\n                                                            onClickBackToMenu={this.onClickBackToMenu}\r\n                                                            searchText={this.state.searchText} defaultSearch={this.state.defaultSearch} {...props} />\r\n                                                    )} />\r\n                                            ) : (null);\r\n                                        })}\r\n                                    </Switch>\r\n                                </ScrollToTop>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLayout.propTypes = {\r\n    match: PropTypes.any.isRequired,\r\n    history: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, { navPage, updateStore, callService })(injectIntl(Layout));"]},"metadata":{},"sourceType":"module"}