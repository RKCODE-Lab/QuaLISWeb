{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{FormattedMessage,injectIntl}from'react-intl';//import { Grid, GridColumn as Column,GridNoRecords } from '@progress/kendo-react-grid';\nimport{Grid,GridColumn as Column,GridNoRecords,GridColumnMenuFilter}from'@progress/kendo-react-grid';import{AtTableWrap,FontIconWrap}from'../data-grid/data-grid.styles';import{loadMessages,LocalizationProvider}from'@progress/kendo-react-intl';import ColumnMenu from'./ColumnMenu';import{process}from'@progress/kendo-data-query';import{Col,Row}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faRemoveFormat,faTimes,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{faClosedCaptioning}from'@fortawesome/free-regular-svg-icons';import{connect}from'react-redux';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var DataGridWithSelection=/*#__PURE__*/function(_React$Component){_inherits(DataGridWithSelection,_React$Component);var _super=_createSuper(DataGridWithSelection);function DataGridWithSelection(){_classCallCheck(this,DataGridWithSelection);return _super.apply(this,arguments);}_createClass(DataGridWithSelection,[{key:\"columnProps\",value:function columnProps(field){if(this.props.dataState){if(!this.props.hideColumnFilter){var returntype={field:field,columnMenu:ColumnMenu,headerClassName:this.isColumnActive(field,this.props.dataState)?'active':''};return returntype;}}}},{key:\"isColumnActive\",value:function isColumnActive(field,dataState){return GridColumnMenuFilter.active(field,dataState.filter);}},{key:\"render\",value:function render(){var _this=this;var pageSizes=this.props.pageSizes?this.props.pageSizes:this.props.Login.settings&&this.props.Login.settings[4].split(\",\").map(function(setting){return parseInt(setting);});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:this.props.userInfo.slanguagetypecode},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Grid// data={this.props.data}\n,Object.assign({sortable:true,data:this.props.dataState?process(this.props.data||[],this.props.dataState):this.props.data,style:{height:'400px'},selectedField:\"selected\",onSelectionChange:this.props.selectionChange,onHeaderSelectionChange:this.props.headerSelectionChange,onRowClick:this.props.rowClick// ADDed by Neeraj-ALPD-5136\n//WorkList Screen -> Including filter in Data selection Kendo Grid \n//Command by neeraj\n,onDataStateChange:this.props.dataStateChange},this.props.dataState,{scrollable:this.props.scrollable// pageable={true}\n,pageable:this.props.pageable&&this.props.data&&this.props.data.length>0?{buttonCount:10,pageSizes:pageSizes,previousNext:false}:false}),/*#__PURE__*/React.createElement(GridNoRecords,null,this.props.intl.formatMessage({id:\"IDS_NORECORDSAVAILABLE\"})),!this.props.isHidemulipleselect?/*#__PURE__*/React.createElement(Column,{field:\"selected\",width:\"50px\",title:this.props.title,headerSelectionValue:this.props.selectAll}):\"\",this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(Column,Object.assign({key:index,width:item.width,title:_this.props.intl.formatMessage({id:item.idsName})},_this.columnProps(item.dataField),{cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]},item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):row[\"dataItem\"][item.dataField]);}}));}),// ADDed by Neeraj-ALPD-5136\n//WorkList Screen -> Including filter in Data selection Kendo Grid \n//Command by neeraj\n//start\nthis.props.isActionRequired?/*#__PURE__*/React.createElement(Column,{locked:true,headerClassName:\"text-center\",title:this.props.intl.formatMessage({id:'IDS_ACTION'}),sort:false,cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{className:\"k-grid-content-sticky k-command-cell pl-0 selectedId === row[\\\"dataItem\\\"][this.props.primaryKeyField] ? 'active' : ''\",style:{left:'0',right:'0',borderRightWidth:'1px',textAlign:'center'}},/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this.props.intl.formatMessage({id:\"IDS_REMOVE\"}),\"data-place\":\"top\",onClick:function onClick(){return _this.props.handleClickDelete(row);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTimes})));}}):\"\"//--end\n))))));}}]);return DataGridWithSelection;}(React.Component);export default connect(mapStateToProps)(injectIntl(DataGridWithSelection));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/data-grid/DataGridWithSelection.jsx"],"names":["React","FormattedMessage","injectIntl","Grid","GridColumn","Column","GridNoRecords","GridColumnMenuFilter","AtTableWrap","FontIconWrap","loadMessages","LocalizationProvider","ColumnMenu","process","Col","Row","FontAwesomeIcon","faRemoveFormat","faTimes","faTrashAlt","faClosedCaptioning","connect","mapStateToProps","state","Login","DataGridWithSelection","field","props","dataState","hideColumnFilter","returntype","columnMenu","headerClassName","isColumnActive","active","filter","pageSizes","settings","split","map","setting","parseInt","userInfo","slanguagetypecode","data","height","selectionChange","headerSelectionChange","rowClick","dataStateChange","scrollable","pageable","length","buttonCount","previousNext","intl","formatMessage","id","isHidemulipleselect","title","selectAll","extractedColumnList","item","index","width","idsName","columnProps","dataField","row","isIdsField","isActionRequired","left","right","borderRightWidth","textAlign","handleClickDelete","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n//import { Grid, GridColumn as Column,GridNoRecords } from '@progress/kendo-react-grid';\r\nimport { Grid, GridColumn as Column, GridNoRecords, GridColumnMenuFilter } from '@progress/kendo-react-grid';\r\nimport { AtTableWrap, FontIconWrap } from '../data-grid/data-grid.styles';\r\nimport { loadMessages, LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport ColumnMenu from './ColumnMenu';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRemoveFormat, faTimes, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faClosedCaptioning } from '@fortawesome/free-regular-svg-icons';\r\nimport { connect } from 'react-redux';\r\nconst mapStateToProps = state => {\r\n        return ({ Login: state.Login })\r\n    }\r\nclass DataGridWithSelection extends React.Component {\r\n\r\n\r\n    columnProps(field) {\r\n        if (this.props.dataState) {\r\n            if (!this.props.hideColumnFilter) {\r\n                const returntype = {\r\n                    field: field,\r\n                    columnMenu: ColumnMenu,\r\n                    headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\r\n                }\r\n                return returntype;\r\n            }\r\n        }\r\n    }\r\n\r\n    isColumnActive(field, dataState) {\r\n        return GridColumnMenuFilter.active(field, dataState.filter)\r\n    }\r\n\r\n\r\n    render() {\r\n        const pageSizes = this.props.pageSizes ? this.props.pageSizes : \r\n        this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))\r\n        return (\r\n            <div>\r\n\r\n                <AtTableWrap className=\"at-list-table\">\r\n                    <LocalizationProvider language={this.props.userInfo.slanguagetypecode}>\r\n                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                        <Row noGutters={true}>\r\n                            <Col md=\"12\">\r\n                                <Grid\r\n                                    // data={this.props.data}\r\n                                    sortable\r\n                                    data={this.props.dataState ? process(this.props.data || [],\r\n                                        this.props.dataState) : this.props.data}\r\n                                    style={{ height: '400px' }}\r\n                                    selectedField=\"selected\"\r\n                                    onSelectionChange={this.props.selectionChange}\r\n                                    onHeaderSelectionChange={this.props.headerSelectionChange}\r\n                                    onRowClick={this.props.rowClick}\r\n                                    // ADDed by Neeraj-ALPD-5136\r\n                                    //WorkList Screen -> Including filter in Data selection Kendo Grid \r\n                                    //Command by neeraj\r\n                                    onDataStateChange={this.props.dataStateChange}\r\n                                    {...this.props.dataState}\r\n                                    scrollable={this.props.scrollable}\r\n                                   // pageable={true}\r\n                                    pageable={this.props.pageable && this.props.data && this.props.data.length > 0\r\n                                         ? { buttonCount: 10, pageSizes: pageSizes, previousNext: false } : false}\r\n\r\n                                >\r\n\r\n                                    <GridNoRecords>\r\n                                        {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                                    </GridNoRecords>\r\n                                    {!this.props.isHidemulipleselect ?\r\n                                        <Column\r\n                                            field=\"selected\"\r\n                                            width=\"50px\"\r\n                                            title={this.props.title}\r\n                                            headerSelectionValue={this.props.selectAll}\r\n                                        /> : \"\"}\r\n                                    {this.props.extractedColumnList.map((item, index) =>\r\n                                        <Column key={index}\r\n                                            width={item.width}\r\n                                            title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                            {...this.columnProps(item.dataField)}\r\n                                            cell={(row) => (\r\n                                                <td data-tip={row[\"dataItem\"][item.dataField]}>\r\n                                                    {item.isIdsField ?\r\n                                                        <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                                        : row[\"dataItem\"][item.dataField]}\r\n                                                </td>\r\n                                            )} />\r\n                                    )}\r\n                                    {   // ADDed by Neeraj-ALPD-5136\r\n                                        //WorkList Screen -> Including filter in Data selection Kendo Grid \r\n                                        //Command by neeraj\r\n                                        //start\r\n                                        this.props.isActionRequired ?\r\n                                            <Column\r\n                                                locked\r\n                                                headerClassName=\"text-center\"\r\n                                                title={this.props.intl.formatMessage({ id: 'IDS_ACTION' })}\r\n                                                sort={false}\r\n                                                cell={(row) => (\r\n                                                    <td className={`k-grid-content-sticky k-command-cell pl-0 selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''`} style={{ left: '0', right: '0', borderRightWidth: '1px', textAlign: 'center' }}>\r\n                                                        <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REMOVE\" })} data-place=\"top\"\r\n                                                            onClick={() => this.props.handleClickDelete(row)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faTimes} />\r\n                                                        </FontIconWrap>\r\n                                                    </td>\r\n                                                )} />\r\n                                            : \"\"\r\n                                        //--end\r\n                                    }\r\n\r\n                                </Grid>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalizationProvider >\r\n                </AtTableWrap>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(injectIntl(DataGridWithSelection));"]},"metadata":{},"sourceType":"module"}