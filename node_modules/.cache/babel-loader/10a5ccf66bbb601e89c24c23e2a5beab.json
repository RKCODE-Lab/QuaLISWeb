{"ast":null,"code":"//import { CommonDragLogic } from '@progress/kendo-react-grid/dist/npm/drag/CommonDragLogic';\nimport { toast } from 'react-toastify';\nimport { rearrangeDateFormatforKendoDataTool } from '../actions';\nimport { transactionStatus } from './Enumeration'; //import CryptoJS from 'crypto-js';\n//import CryptoJS from 'crypto-js';\n\nimport CryptoJS from 'crypto-js';\nimport { intl } from '../components/App'; //added by perumalraj on 07-08-2020\n\nexport function extractFieldHeader(fieldList) {\n  let columnList = [];\n\n  if (fieldList !== undefined && fieldList.length !== 0) {\n    columnList = fieldList.filter(function (value, index, arr) {\n      return value[\"controlType\"] !== \"NA\";\n    });\n  }\n\n  return columnList;\n}\nexport function ltrim(text) {\n  if (text !== undefined) {\n    return text.replace(/^\\s+/, \"\").replace(/\\\\n/g, '');\n  }\n}\nexport function whitespaceTrim(event) {\n  if (event.target !== undefined) event.target.value = event.target.value.trim();\n  return event;\n}\nexport function rtrim(text) {\n  if (text !== undefined && text !== \"\") return text.replace(/\\s+$/, \"\");\n}\nexport function getCurrentDateTime() {\n  const tempDate = new Date();\n  const date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\n  return date;\n}\nexport function sortData(masterData, sortType, columnName) {\n  if (masterData) {\n    if (Array.isArray(masterData)) {\n      sortByField(masterData, sortType, columnName);\n    } else {\n      Object.keys(masterData).map(data => {\n        if (Array.isArray(masterData[data])) {\n          sortByField(masterData[data], sortType, columnName);\n        }\n\n        return null;\n      });\n    }\n  }\n\n  return masterData;\n}\nexport function sortDataForDate(masterData) {\n  let value = [];\n  masterData.map((item, index) => {\n    const valueFormed = {\n      \"dtransactiondate\": new Date(item.dtransactiondate),\n      ...masterData[index]\n    };\n    value.push(valueFormed);\n  });\n  masterData = value.sort((objA, objB) => Number(objA.dtransactiondate) - Number(objB.dtransactiondate));\n  return masterData;\n}\nexport function sortByField(masterData, sortType, columnName) {\n  if (masterData !== undefined && masterData.length > 0) {\n    if (columnName === undefined || columnName === null) {\n      if (masterData[0] !== undefined) {\n        columnName = Object.keys(masterData[0])[0];\n      }\n    }\n\n    if (sortType === \"ascending\") {\n      masterData.sort((obj1, obj2) => obj1[columnName] !== null && obj2[columnName] !== null ? typeof obj1[columnName] === 'string' && typeof obj2[columnName] === 'string' ? obj1[columnName].toLowerCase() > obj2[columnName].toLowerCase() ? 1 : -1 : obj1[columnName] > obj2[columnName] ? 1 : -1 : \"\");\n    } else {\n      // console.log(columnName)\n      masterData.sort((obj1, obj2) => obj1[columnName] !== null && obj2[columnName] !== null ? typeof obj1[columnName] === 'string' && typeof obj2[columnName] === 'string' ? obj1[columnName].toLowerCase() < obj2[columnName].toLowerCase() ? 1 : -1 : obj1[columnName] < obj2[columnName] ? 1 : -1 : \"\");\n    }\n  }\n\n  return masterData;\n}\nexport function searchData(filterValue, originalData, fieldList) {\n  let searchedData = [];\n\n  if (originalData && originalData.length > 0) {\n    let temp = originalData.filter(item => {\n      const itemArray = [];\n      fieldList.map(itemKey => item[itemKey] && item[itemKey] !== null ? itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase() : item[itemKey].toString().toLowerCase()) : \"\"); //   console.log(itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1)\n      //  console.log(filterValue.toLowerCase())\n\n      return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1;\n    });\n    searchedData = temp;\n  }\n\n  return searchedData;\n} //end- search logic\n//For Searching Json Data\n\nexport function searchJsonData(filterValue, originalData, fieldList) {\n  let searchedData = [];\n\n  if (originalData.length > 0) {\n    let temp = originalData.filter(item => {\n      const itemArray = [];\n      fieldList.map(itemKey => itemKey.jsonfeild ? item[itemKey.jsonfeild][itemKey.feild] && item[itemKey.jsonfeild][itemKey.feild] !== null ? itemArray.push(typeof item[itemKey.jsonfeild][itemKey.feild] === \"string\" ? item[itemKey.jsonfeild][itemKey.feild].toLowerCase() : item[itemKey.jsonfeild][itemKey.feild].toString().toLowerCase()) : \"\" : item[itemKey.feild] && item[itemKey.feild] !== null ? itemArray.push(typeof item[itemKey.feild] === \"string\" ? item[itemKey.feild].toLowerCase() : item[itemKey.feild].toString().toLowerCase()) : \"\"); //   console.log(itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1)\n      //  console.log(filterValue.toLowerCase())\n\n      return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1;\n    });\n    searchedData = temp;\n  }\n\n  return searchedData;\n} //Given by Perumal\n//To get Label Value Pair for a search select combo box\n\nexport function getComboLabelValue(selectedItem, optionList, findKey, labelKey, jsonfeild, slanguagetypecode) {\n  let lblValueList = [];\n  optionList.map(option => {\n    if (option[jsonfeild]) {\n      if (selectedItem && selectedItem[findKey] === option[findKey]) {\n        lblValueList.push({\n          \"value\": option[findKey],\n          \"label\": option[jsonfeild][labelKey][slanguagetypecode] ? option[jsonfeild][labelKey][slanguagetypecode] : option[jsonfeild][labelKey]\n        });\n      }\n\n      return null;\n    } else {\n      if (selectedItem && selectedItem[findKey] === option[findKey]) {\n        lblValueList.push({\n          \"value\": option[findKey],\n          \"label\": option[labelKey]\n        });\n      }\n\n      return null;\n    }\n  });\n  return selectedItem[findKey] = lblValueList[0];\n} // To provide esign rights\n\nexport function showEsign(itemMap, nformcode, ncontrolcode) {\n  const controlList = itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [];\n  const index = controlList.findIndex(x => x.ncontrolcode === ncontrolcode);\n  return controlList[index] && controlList[index].nneedesign === 3 ? true : false;\n} // To provide control rights\n\nexport function getControlMap(itemMap, nformcode) {\n  const controlList = itemMap ? itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [] : [];\n  const controlMap = new Map();\n  controlList.map(item => {\n    return controlMap.set(item.scontrolname, { ...item\n    });\n  });\n  return controlMap;\n}\nexport function formatDate(date, dateType) {\n  let d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = '' + d.getFullYear(),\n      hour = '' + d.getHours(),\n      min = '' + d.getMinutes(),\n      sec = '' + d.getSeconds();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  if (hour.length < 2) hour = '0' + hour;\n  if (min.length < 2) min = '0' + min;\n  if (sec.length < 2) sec = '0' + sec;\n  return [year, month, day].join('-').concat(\" \" + hour + \":\" + min + \":\" + sec); // if(dateType === \"dateonly\"){\n  //   return [year, month, day].join('-')\n  // }\n  // else if(dateType === \"timeonly\"){\n  //   return [hour + \":\" + min + \":\" + sec];\n  // }\n  // else{\n  //   return [year, month, day].join('-').concat(\" \" + hour + \":\" + min + \":\" + sec);\n  // }  \n}\nexport function getStartOfDay(date) {\n  date.setHours(0, 0, 0);\n  return formatDate(date);\n}\nexport function getEndOfDay(date) {\n  date.setHours(23, 59, 59);\n  return formatDate(date);\n}\nexport function getDateByMinutes(date, holdMinutes) {\n  const someDate = new Date(date);\n  const adjustedDate = new Date(someDate);\n  return adjustedDate.setMinutes(someDate.getMinutes() + holdMinutes);\n}\nexport function validateTwoDigitDate(value) {\n  if (value.length === 1) {\n    value = \"0\".concat(value);\n  }\n\n  return value;\n} // To provide esign rights for child Tabs\n\nexport function showEsignForChildTabs(itemMap, ncontrolcode) {\n  //  const controlList = itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [];\n  const index = itemMap.findIndex(x => x.ncontrolcode === ncontrolcode);\n  return itemMap[index] && itemMap[index].nneedesign === 3 ? true : false;\n}\nexport function addDays(dateValue, daysToAdd) {\n  const copy = new Date(Number(dateValue));\n  copy.setDate(dateValue.getDate() + daysToAdd);\n  return copy;\n}\nexport function validatePhoneNumber(inputValue) {\n  let output = \"\"; // Get the regular expression to test against for this particular object\n\n  let regAllow = /^[0-9,',',\\n,\\s,[,\\], '+',-]+$/; // Check for an allowed character, if not found, cancel the keypress's event bubbling\n\n  if (inputValue.match(regAllow)) {\n    // Do nothing, i.e. allow.\n    output = inputValue;\n  }\n\n  return output;\n}\nexport function validateDays(inputValue) {\n  let output = \"\";\n  let isTrue = false;\n  let regAllow = /^[+|-]?[0-9]+$/;\n\n  if (inputValue.length > 1) {\n    const s = inputValue.substring(inputValue.length - 1);\n\n    if (s !== \"+\" && s !== \"-\") {\n      isTrue = regAllow.test(inputValue);\n    }\n  } else {\n    const s = inputValue.substring(inputValue.length - 1);\n\n    if (s !== \"+\" && s !== \"-\") {\n      isTrue = regAllow.test(inputValue);\n    } else {\n      isTrue = true;\n    }\n  }\n\n  if (isTrue) {\n    output = inputValue;\n  }\n\n  return output;\n}\nexport function validateCreateView(inputValue) {\n  const regAllow = /^[a-z0-9_$]+$/;\n  const regLagAllow = /[а-яЁё]/;\n  const regStringAllow = /^[a-z]+$/; //  /[а-яЁё]/\n  //  /^[a-z]+$/\n  //return  regStringAllow.test(inputValue[0]) ? regAllow.test(inputValue[inputValue.length-1]) ?\n  // inputValue : \"\"  : regStringAllow.test(inputValue) ? inputValue : \"\";\n\n  return regLagAllow.test(inputValue[inputValue.length - 1]) ? inputValue : regStringAllow.test(inputValue[inputValue.length - 1]) ? inputValue : inputValue.length > 1 ? regAllow.test(inputValue[inputValue.length - 1]) ? inputValue : \"\" : \"\";\n}\nexport function validateEmail(inputValue) {\n  let output = false; //let regAllow = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  //checks for presence of '@', '.' and 2 characters after '.'\n  //let regAllow = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  //let regAllow = /^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/g;\n  //A form with an email field that that must be in the following order: characters@characters.domain \n  //(characters followed by an @ sign, followed by more characters, and then a \".\". After the \".\" sign, you can only write 2 to 3 letters from a to z:\n\n  let regAllow = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/; // Check for an allowed character, if not found, cancel the keypress's event bubbling\n\n  if (inputValue.match(regAllow)) {\n    // Do nothing, i.e. allow.\n    output = true; //inputValue;\n  }\n\n  return output;\n}\nexport function formatInputDate(date, includeMilliseconds) {\n  let formattedDate = \"\";\n\n  if (includeMilliseconds) {\n    formattedDate = date.getFullYear() + \"-\" + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"00\" + date.getDate()).slice(-2) + 'T' + (\"00\" + date.getHours()).slice(-2) + \":\" + (\"00\" + date.getMinutes()).slice(-2) + \":\" + (\"00\" + date.getSeconds()).slice(-2) + \".\" + (\"000\" + date.getMilliseconds()).slice(-3) + \"Z\";\n  } else {\n    formattedDate = date.getFullYear() + \"-\" + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"00\" + date.getDate()).slice(-2) + 'T' + (\"00\" + date.getHours()).slice(-2) + \":\" + (\"00\" + date.getMinutes()).slice(-2) + \":\" + (\"00\" + date.getSeconds()).slice(-2) + \"Z\";\n  }\n\n  return formattedDate;\n}\nexport function formatInputDateWithoutT(date, includeMilliseconds) {\n  let formattedDate = \"\";\n\n  if (includeMilliseconds) {\n    formattedDate = date.getFullYear() + \"-\" + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"00\" + date.getDate()).slice(-2) + \" \" + (\"00\" + date.getHours()).slice(-2) + \":\" + (\"00\" + date.getMinutes()).slice(-2) + \":\" + (\"00\" + date.getSeconds()).slice(-2) + \".\" + (\"000\" + date.getMilliseconds()).slice(-3);\n  } else {\n    formattedDate = date.getFullYear() + \"-\" + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" + (\"00\" + date.getDate()).slice(-2) + \" \" + (\"00\" + date.getHours()).slice(-2) + \":\" + (\"00\" + date.getMinutes()).slice(-2) + \":\" + (\"00\" + date.getSeconds()).slice(-2);\n  }\n\n  return formattedDate;\n}\nexport function create_UUID() {\n  var dt = new Date().getTime();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c === 'x' ? r : r && 0x3 | 0x8).toString(16);\n  });\n  return uuid;\n} //added by perumalraj on 03/11/2020\n//compare two arrays of object and filter the record which are not present in the second array and vice versa\n// export function filterRecordBasedOnTwoArrays(firstArray, secondArray, PrimaryKey,SecondaryKey) {\n//   let filterArray;\n//     if(SecondaryKey !==undefined){\n//       filterArray = firstArray.filter(function (x) {\n//         return !secondArray.some(function (y) {\n//           //console.log(y)\n//           return x[PrimaryKey] === y[PrimaryKey] || x[SecondaryKey] === y[SecondaryKey]\n//         })\n//       });\n//     }else{\n//       filterArray = firstArray.filter(function (x) {\n//         return !secondArray.some(function (y) {\n//           //console.log(y)\n//           return x[PrimaryKey] === y[PrimaryKey]\n//         })\n//       });\n//     } \n//   return filterArray;\n// }\n\nexport function filterRecordBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\n  const filterArray = firstArray.filter(function (x) {\n    return !secondArray.some(function (y) {\n      //console.log(y)\n      return x[PrimaryKey] === y[PrimaryKey];\n    });\n  });\n  return filterArray;\n}\nexport function listDataFromDynamicArray(arr, indexvalue) {\n  return arr && arr.filter(x => x[indexvalue]);\n} // export const fileViewURL = 'http://192.168.0.79:8097/';\n//Added by P.Sudharshanan\n\nexport function replaceUpdatedObject(newList, oldList, primaryKey) {\n  newList && newList.length > 0 && newList.map(newlistItem => {\n    let oldIndex = oldList ? oldList.findIndex(x => x[primaryKey] === newlistItem[primaryKey]) : -1;\n    oldList.splice(oldIndex, 1, newlistItem);\n    return null;\n  });\n  return oldList;\n} //added by perumalraj for insert newly added element into an array\n\nexport function updatedObjectWithNewElement(oldList, newList, name) {\n  let newlistItem = newList;\n\n  if (name === 'Sample') {\n    newlistItem.map((item, index) => {\n      if (oldList[0].npreregno === item.npreregno) {\n        newlistItem.splice(index, 1); // [newFirstElement].concat(array)\n      }\n    });\n    newlistItem.unshift(oldList[0]);\n    oldList = [...newlistItem];\n  } else {\n    oldList = [...newlistItem, ...oldList];\n  }\n\n  return oldList;\n} //added by perumalraj for replace the old values wih new one into an array\n\nexport function replaceObjectWithNewElement(oldList) {\n  oldList = [...oldList];\n  return oldList;\n} //Added by L.Subashini to find the index positions nf the occurence of the specified character\n// export const findIndices = (str, char) =>\n//   str.split('').reduce((indices, letter, index) => {\n//     letter === char && indices.push(index);\n//     return indices;\n//   }, [])\n//added by perumalraj on 23/12/2020\n//compare two arrays of object and filter the record which are not present in the second array and vice versa\n\nexport function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey, colorColName) {\n  // const Peru = Object.keys(Array2).map(function (k) { return Array2[k][PrimaryKey] }).join(\",\");\n  // alert(Peru);\n  //const TestSet = new Set(Peru);\n  // const FinalOutput = [\n  //   ...Array1.filter(({ PrimaryKey }) => !TestSet.has(PrimaryKey))\n  // ];\n  // Array1 = Array1.filter(val => !Array2.includes(val[PrimaryKey]));\n  // alert(Array1)\n  // return Array1;\n  const filterArray = firstArray.filter(function (x) {\n    return secondArray.some(function (y) {\n      if (x[PrimaryKey] === y[PrimaryKey]) {\n        x[colorColName] = y[colorColName];\n      }\n\n      return x[PrimaryKey] === y[PrimaryKey];\n    });\n  });\n  return filterArray;\n}\nexport function constructOptionList(options, optionId, optionValue, sortField, sortOrder, alphabeticalSort, defaultStatusFieldName) {\n  const optionMap = new Map();\n  const defaultValue = [];\n  const defaultStatus = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\";\n  const optionList = Object.values(sortField ? sortOrder === \"ascending\" ? options.sort((itemA, itemB) => itemA[sortField] < itemB[sortField] ? -1 : 1) : options.sort((itemA, itemB) => itemA[sortField] > itemB[sortField] ? -1 : 1) : alphabeticalSort ? options.sort((itemA, itemB) => typeof itemA[optionValue] === 'string' ? itemA[optionValue].toLowerCase() < itemB[optionValue].toLowerCase() ? -1 : 1 : itemA[optionValue] < itemB[optionValue] ? -1 : 1) : options).map(item => {\n    if (item && item[defaultStatus] === transactionStatus.YES) {\n      defaultValue.push({\n        label: item[optionValue],\n        value: item[optionId],\n        item: item\n      });\n    }\n\n    return {\n      label: item[optionValue],\n      value: item[optionId],\n      item: item\n    };\n  });\n  optionMap.set(\"OptionList\", optionList);\n\n  if (defaultValue.length > 0) {\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\n  }\n\n  return optionMap;\n}\nexport function constructjsonOptionList(options, optionId, optionValue, sortField, sortOrder, alphabeticalSort, defaultStatusFieldName, source, isMultiLingual, languageTypeCode, column) {\n  const optionMap = new Map();\n  const defaultValue = [];\n  defaultStatusFieldName = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\"; // const optionList = Object.values((sortField ? ((sortOrder === \"ascending\" ?\n  //   options.sort((itemA, itemB) =>\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemA[source][sortField] <\n  //       itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\n  //   )\n  //   :\n  //   options = options.sort((itemA, itemB) =>\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\n  //   )\n  // ))\n  //   : (alphabeticalSort ?\n  //     options.sort((itemA, itemB) =>\n  //     (typeof (JSON.parse(itemA[source].value)[optionValue]) === 'string' ?\n  //       JSON.parse(itemA[source].value)[optionValue].toLowerCase() < JSON.parse(itemB[source].value)[optionValue].toLowerCase() ?\n  //         -1 : 1 : JSON.parse(itemA[source].value)[optionValue] < JSON.parse(itemB[source].value)[optionValue] ? -1 : 1)) : options)\n  // )\n  // )\n\n  const optionList = options.map(item => {\n    const jsondata = item[source] ? item[source].value ? JSON.parse(item[source].value) : item.jsondata : item.jsondata;\n    let defaultStatus = jsondata[defaultStatusFieldName] || item[defaultStatusFieldName];\n\n    if (defaultStatus === transactionStatus.YES) {\n      defaultValue.push({\n        label: isMultiLingual ? jsondata[optionValue] ? jsondata[optionValue][languageTypeCode] || jsondata[optionValue]['en-US'] : jsondata['jsondata'][optionValue][languageTypeCode] || jsondata['jsondata'][optionValue]['en-US'] : jsondata[optionValue],\n        value: jsondata[optionId],\n        item: { ...item,\n          pkey: optionId,\n          nquerybuildertablecode: column ? column.nquerybuildertablecode : -100,\n          source: source\n        }\n      });\n    }\n\n    let label = isMultiLingual ? jsondata[optionValue] ? jsondata[optionValue][languageTypeCode] || jsondata[optionValue]['en-US'] : jsondata['jsondata'][optionValue][languageTypeCode] || jsondata['jsondata'][optionValue]['en-US'] : jsondata[optionValue];\n    let value = jsondata[optionId] || item[optionId];\n    return {\n      label,\n      value,\n      item: { ...item,\n        pkey: optionId,\n        nquerybuildertablecode: column ? column.nquerybuildertablecode : -100,\n        source: source\n      }\n    };\n  });\n  optionMap.set(\"OptionList\", optionList);\n\n  if (defaultValue.length > 0) {\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\n  }\n\n  return optionMap;\n}\nexport function constructjsonOptionDefault(options, optionId, optionValue, sortField, sortOrder, alphabeticalSort, defaultStatusFieldName, source, isMultiLingual, languageTypeCode, column) {\n  const optionMap = new Map();\n  const defaultValue = [];\n  defaultStatusFieldName = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\"; // const optionList = Object.values((sortField ? ((sortOrder === \"ascending\" ?\n  //   options.sort((itemA, itemB) =>\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemA[source][sortField] <\n  //       itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\n  //   )\n  //   :\n  //   options = options.sort((itemA, itemB) =>\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\n  //   )\n  // ))\n  //   : (alphabeticalSort ?\n  //     options.sort((itemA, itemB) =>\n  //     (typeof (JSON.parse(itemA[source].value)[optionValue]) === 'string' ?\n  //       JSON.parse(itemA[source].value)[optionValue].toLowerCase() < JSON.parse(itemB[source].value)[optionValue].toLowerCase() ?\n  //         -1 : 1 : JSON.parse(itemA[source].value)[optionValue] < JSON.parse(itemB[source].value)[optionValue] ? -1 : 1)) : options)\n  // )\n  // )\n\n  const optionList = options.map(item => {\n    const jsondata = item[source] ? item[source].value ? JSON.parse(item[source].value) : item.item.jsondata : item.item.jsondata;\n    let defaultStatus = jsondata[defaultStatusFieldName] || item[defaultStatusFieldName];\n\n    if (defaultStatus === transactionStatus.YES) {\n      defaultValue.push({\n        label: isMultiLingual ? jsondata[optionValue] ? jsondata[optionValue][languageTypeCode] : jsondata['jsondata'][optionValue][languageTypeCode] : jsondata[optionValue],\n        value: jsondata[optionId],\n        //ALPD-2106\n        item: { ...item.item,\n          pkey: optionId,\n          nquerybuildertablecode: column ? column.nquerybuildertablecode : -100,\n          source: source\n        }\n      });\n    }\n  }); //optionMap.set(\"OptionList\", optionList);\n\n  if (defaultValue.length > 0) {\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\n  }\n\n  return optionMap;\n}\nexport function validateLoginId(inputValue) {\n  let output = false; //let regAllow = /^\\w+(\\w+)*$/;\n\n  let regAllow = /^[a-zA-Z0-9-_]*$/; //let regAllow = /^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/g;\n\n  if (inputValue.match(regAllow)) {\n    output = true;\n  }\n\n  return output;\n} //added by perumalraj on 02-02-2021 for single click java function in list master view and \n\nexport function fillRecordBasedOnCheckBoxSelection(masterData, backEndResponse, mapKeys, CheckBoxOperation, primaryKeyName, removeElementFromArray) {\n  if (CheckBoxOperation === 1) {\n    //check box select\n    mapKeys.forEach(item => {\n      return masterData[item] = updatedObjectWithNewElement(masterData[item] ? masterData[item] : [], backEndResponse[item] ? backEndResponse[item] : []); //return masterData[item] = replaceOnlyNewList(backEndResponse[item] ? backEndResponse[item] : []);\n    });\n  } else if (CheckBoxOperation === 2) {\n    //check box de-select\n    mapKeys.forEach(item => {\n      return masterData[item] = filterRecordBasedOnPrimaryKeyName(masterData[item] ? masterData[item] : [], removeElementFromArray.length > 0 && removeElementFromArray[0][primaryKeyName] ? removeElementFromArray[0][primaryKeyName] : \"\", primaryKeyName);\n    });\n  } else if (CheckBoxOperation === 3) {\n    //single select\n    mapKeys.forEach(item => {\n      return masterData[item] = replaceObjectWithNewElement(backEndResponse[item] ? backEndResponse[item] : []);\n    });\n  } else if (CheckBoxOperation === 4) {\n    //single de-select\n    mapKeys.forEach(item => {\n      return masterData[item] = getRecordBasedOnPrimaryKeyName(masterData[item] ? masterData[item] : [], backEndResponse.length > 0 && backEndResponse[0][primaryKeyName] ? backEndResponse[0][primaryKeyName] : \"\", primaryKeyName);\n    }); // return masterData[item] = replaceObjectWithNewElement(masterData[item] ? masterData[item] : [], backEndResponse[item] ? backEndResponse[item] : []);\n  } else if (CheckBoxOperation === 5) {\n    //after multi select and then click single record\n    mapKeys.forEach(item => {\n      let filteredmasterData = filterRecordBasedOnTwoArrays(masterData[item] ? masterData[item] : [], removeElementFromArray, primaryKeyName);\n      return masterData[item] = updatedObjectWithNewElement(filteredmasterData, backEndResponse[item] ? backEndResponse[item] : []);\n    });\n  } else if (CheckBoxOperation === 6) {\n    //after multi select and then click single record\n    mapKeys.forEach(item => {\n      filterRecordBasedOnTwoArrays(masterData[item] ? masterData[item] : [], removeElementFromArray, primaryKeyName);\n      return masterData[item] = getSameRecordFromTwoArrays(masterData[item] ? masterData[item] : [], backEndResponse ? backEndResponse : [], primaryKeyName);\n    });\n  } else if (CheckBoxOperation === 7) {\n    //check box select\n    mapKeys.forEach(item => {\n      //return masterData[item] = updatedObjectWithNewElement(masterData[item] ? masterData[item] : [], backEndResponse[item] ? backEndResponse[item] : []);\n      return masterData[item] = replaceOnlyNewList(backEndResponse[item] ? backEndResponse[item] : []);\n    });\n  } else {\n    Object.keys(backEndResponse).forEach(item => {\n      return masterData[item] = backEndResponse[item];\n    });\n  }\n} //added by Sathish on 06-04-2022\n\nexport function reArrangeArrays(firstArray, secondArray, PrimaryKey) {\n  let filterArray = [];\n\n  for (var i = 0; i < firstArray.length; i++) {\n    for (var j = 0; j < secondArray.length; j++) {\n      if (firstArray[i][PrimaryKey] == secondArray[j][PrimaryKey]) {\n        filterArray.push(secondArray[j]);\n      }\n    }\n  }\n\n  return filterArray;\n} //added by Sathish on 31-03-2022\n\nexport function replaceOnlyNewList(newList) {\n  const array = [];\n  array.push(...newList);\n  return array;\n} //added by perumalraj on 02-02-2021\n\nexport function filterRecordBasedOnPrimaryKeyName(masterData, value, primaryKeyName) {\n  const finalValueAfterFilter = masterData.filter(function (master) {\n    return master[primaryKeyName] !== value;\n  });\n  return finalValueAfterFilter;\n} //added by perumalraj on 02-02-2021\n\nexport function getRecordBasedOnPrimaryKeyName(masterData, value, primaryKeyName) {\n  const finalValueAfterFilter = masterData.filter(function (master) {\n    return master[primaryKeyName] === value;\n  });\n  return finalValueAfterFilter;\n} //added by perumalraj on 06/02/2021\n//compare two arrays of object and filter the record which are not present in the second array and first array data will be \n//returned with the filtered data\n// export function getSameRecordFromTwoArrays(firstArray, secondArray, PrimaryKey) {\n//   const filterArray = firstArray.filter(function (x) {\n//     if (Array.isArray(secondArray)) {\n//       return secondArray.some(function (y) {\n//         return x[PrimaryKey] === y[PrimaryKey]\n//       })\n//     }\n//   });\n//   return filterArray;\n// }\n\nexport function getSameRecordFromTwoArrays(firstArray, secondArray, PrimaryKey, SecondaryKey) {\n  let filterArray;\n\n  if (SecondaryKey !== undefined) {\n    filterArray = firstArray.filter(function (x) {\n      if (Array.isArray(secondArray)) {\n        return secondArray.some(function (y) {\n          return x[PrimaryKey] === y[PrimaryKey] && x[SecondaryKey] === y[SecondaryKey];\n        });\n      }\n    });\n  } else {\n    filterArray = firstArray.filter(function (x) {\n      if (Array.isArray(secondArray)) {\n        return secondArray.some(function (y) {\n          return x[PrimaryKey] === y[PrimaryKey];\n        });\n      }\n    });\n  }\n\n  return filterArray;\n} //added by perumalraj on 16-02-2021\n//compare two arrays and remove the same element and add the newer one into it\n\nexport function getRemovedRecordAndAddNewRecord(firstArray, secondArray, ElementToSearch, PrimaryKey) {\n  ElementToSearch.forEach(item => {\n    let itemAfterfilter = filterRecordBasedOnPrimaryKeyName(firstArray, item, PrimaryKey);\n    firstArray = itemAfterfilter;\n  });\n  return updatedObjectWithNewElement(firstArray, secondArray);\n}\nexport function bytesToSize(bytes) {\n  if (!isNaN(parseInt(bytes))) {\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Byte';\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  } else {\n    return bytes;\n  }\n}\nexport function onDropAttachFileList(selectedRecord, attachedFiles, maxSize) {\n  if (selectedRecord) {\n    let listFile = selectedRecord ? selectedRecord : [];\n\n    if (listFile.length + attachedFiles.length <= maxSize || maxSize === 0) {\n      attachedFiles && attachedFiles.length > 0 && attachedFiles.map(newlistItem => {\n        let oldIndex = listFile ? listFile.findIndex(x => x['name'] === newlistItem['name']) : -1;\n\n        if (oldIndex === -1) {\n          listFile.splice(listFile.length, 0, newlistItem);\n        } else {\n          listFile.splice(oldIndex, 1, newlistItem);\n        }\n\n        return null;\n      });\n      return listFile;\n    }\n\n    return attachedFiles;\n  } else {\n    return attachedFiles;\n  }\n}\nexport function deleteAttachmentDropZone(selectedRecord, file) {\n  let remainingList;\n\n  if (typeof selectedRecord === \"string\") {\n    remainingList = \"\";\n  } else {\n    if (selectedRecord.length >= 1) {\n      const fileList = selectedRecord.filter(fileItem => {\n        return fileItem.name !== file.name;\n      });\n      remainingList = fileList;\n    } else {\n      remainingList = \"\";\n    }\n  }\n\n  return remainingList;\n}\nexport function checkCancelAndReject(sample) {\n  return sample.ntransactionstatus === transactionStatus.CANCELLED || sample.ntransactionstatus === transactionStatus.REJECT;\n}\nexport function covertDatetoString(newDate) {\n  const startDate = new Date(newDate);\n  const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n  const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n  const fromDate = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay;\n  return fromDate;\n}\nexport function convertDatetoStringByTimeZone(userInfo, value) {\n  const dateValue = new Date(value);\n  const prevMonth = validateTwoDigitDate(String(dateValue.getMonth() + 1));\n  const prevDay = validateTwoDigitDate(String(dateValue.getDate()));\n  const dateArray = [];\n  const splitChar = getSplitCharacter(userInfo);\n  const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\n  const secondField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[1];\n\n  if (firstField === \"dd\") {\n    dateArray.push(prevDay);\n    dateArray.push(splitChar);\n\n    if (secondField === \"MM\") {\n      dateArray.push(prevMonth);\n      dateArray.push(splitChar);\n      dateArray.push(dateValue.getFullYear());\n    } else {\n      dateArray.push(dateValue.getFullYear());\n      dateArray.push(splitChar);\n      dateArray.push(prevMonth);\n    }\n  } else if (firstField === \"MM\") {\n    dateArray.push(prevMonth);\n    dateArray.push(splitChar);\n\n    if (secondField === \"dd\") {\n      dateArray.push(prevDay);\n      dateArray.push(splitChar);\n      dateArray.push(dateValue.getFullYear());\n    } else {\n      dateArray.push(dateValue.getFullYear());\n      dateArray.push(splitChar);\n      dateArray.push(prevDay);\n    }\n  } else {\n    dateArray.push(dateValue.getFullYear());\n    dateArray.push(splitChar);\n\n    if (secondField === \"dd\") {\n      dateArray.push(prevDay);\n      dateArray.push(splitChar);\n      dateArray.push(prevMonth);\n    } else {\n      dateArray.push(prevMonth);\n      dateArray.push(splitChar);\n      dateArray.push(prevDay);\n    }\n  }\n\n  return dateArray;\n}\nexport function convertDateValuetoString(startDateValue, endDateValue, userInfo, noBreadCrumb) {\n  const startDate = startDateValue ? rearrangeDateFormat(userInfo, startDateValue) : new Date();\n  const endDate = endDateValue ? rearrangeDateFormat(userInfo, endDateValue) : new Date(); // const startDate = startDateValue ? new Date(startDateValue) : new Date();\n  // const endDate = endDateValue ? new Date(endDateValue) : new Date();\n\n  const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n  const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\n  const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n  const currentDay = validateTwoDigitDate(String(endDate.getDate())); //const splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\n\n  const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay;\n  const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay;\n  const fromDate = fromDateOnly + \"T00:00:00\";\n  const toDate = toDateOnly + \"T23:59:59\";\n\n  if (noBreadCrumb) {\n    return {\n      fromDate,\n      toDate\n    };\n  } else {\n    const breadCrumbFrom = convertDatetoStringByTimeZone(userInfo, startDate); //startDate.getFullYear() + splitChar + prevMonth + splitChar + prevDay;\n\n    const breadCrumbto = convertDatetoStringByTimeZone(userInfo, endDate); //endDate.getFullYear() + splitChar + currentMonth + splitChar + currentDay;\n\n    return {\n      fromDate,\n      toDate,\n      breadCrumbFrom,\n      breadCrumbto\n    };\n  }\n}\nexport function getSplitCharacter(userInfo) {\n  const specialChars = `\\`_-\\[\\]'\"\\\\|,.\\/`;\n  let splitChar = '';\n  userInfo.ssitedatetime && userInfo.ssitedatetime.split('').some(word => {\n    if (splitChar === undefined || splitChar === '') {\n      if (specialChars.includes(word)) {\n        splitChar = word;\n      }\n    }\n  });\n  specialChars.split('').some(specialChar => {\n    if (splitChar === undefined || splitChar === '') {\n      userInfo.ssitedatetime && userInfo.ssitedatetime.split('').some(word => {\n        if (splitChar === undefined || splitChar === '') {\n          if (word.includes(specialChar)) {\n            splitChar = word;\n          }\n        }\n      });\n    }\n  });\n  return splitChar;\n}\nexport function rearrangeDateFormat(userInfo, dateValue) {\n  // let splitChar = userInfo.ssitedatetime \n  // && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\n  let splitChar = getSplitCharacter(userInfo); //   console.log(\"splitChar:\", splitChar);\n\n  if (typeof dateValue === \"string\") {\n    //(splitChar === \"/\" || splitChar === \"-\") &&\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0]; // console.log(\"firstField:\", firstField);\n\n    const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \";\n    const datetime = dateValue.split(timeSplitChar);\n    const dateArray = datetime[0].split(splitChar);\n\n    if (firstField === \"dd\") {\n      const day = dateArray[0];\n      const month = dateArray[1];\n      const year = dateArray[2];\n      const time = datetime[1] || \"00:00:00\";\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\n      return new Date(formatted);\n    } else if (firstField === \"yyyy\") {\n      const year = dateArray[0];\n      const month = dateArray[1];\n      const day = dateArray[2];\n      const time = datetime[1] || \"00:00:00\";\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\n      return new Date(formatted);\n    } else {\n      return new Date(dateValue);\n    }\n  } else {\n    return dateValue;\n  }\n}\nexport function rearrangeDateFormatforUI(userInfo, dateValue) {\n  let splitChar = \"-\"; //   console.log(\"splitChar:\", splitChar);\n\n  if (typeof dateValue === \"string\") {\n    //(splitChar === \"/\" || splitChar === \"-\") &&\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0]; // console.log(\"firstField:\", firstField);\n\n    const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \";\n    const datetime = dateValue.split(timeSplitChar);\n    const dateArray = datetime[0].split(splitChar);\n\n    if (firstField === \"dd\") {\n      const day = dateArray[0];\n      const month = dateArray[1];\n      const year = dateArray[2];\n      const time = datetime[1] || \"00:00:00\";\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\n      return new Date(formatted);\n    } else if (firstField === \"yyyy\") {\n      const year = dateArray[0];\n      const month = dateArray[1];\n      const day = dateArray[2];\n      const time = datetime[1] || \"00:00:00\";\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\n      return new Date(formatted);\n    } else {\n      return new Date(dateValue);\n    }\n  } else {\n    return dateValue;\n  }\n}\nexport function convertUTCDateToLocalDate(date) {\n  var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n  var offset = date.getTimezoneOffset() / 60;\n  var hours = date.getHours();\n  newDate.setHours(hours - offset);\n  return newDate;\n}\nexport function convertDateTimetoString(inputDate, userInfo) {\n  // let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\n  const specialChars = `\\`_-\\[\\]'\"\\\\|,.\\/`;\n  let splitChar = '';\n  userInfo.ssitedatetime && userInfo.ssitedatetime.split('').some(word => {\n    if (splitChar === undefined || splitChar === '') {\n      if (specialChars.includes(word)) {\n        splitChar = word;\n      }\n    }\n  });\n  const month = validateTwoDigitDate(String(inputDate.getMonth() + 1));\n  const day = validateTwoDigitDate(String(inputDate.getDate()));\n  const year = inputDate.getFullYear();\n  const hours = validateTwoDigitDate(String(inputDate.getHours()));\n  const minutes = validateTwoDigitDate(String(inputDate.getMinutes()));\n  const seconds = validateTwoDigitDate(String(inputDate.getSeconds())); //if (splitChar === \"/\" || splitChar === \"-\") {\n\n  const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\n\n  if (firstField === \"dd\") {\n    return day + splitChar + month + splitChar + year + \" \" + hours + \":\" + minutes + \":\" + seconds;\n  } else if (firstField === \"yyyy\") {\n    return year + splitChar + month + splitChar + day + \"T\" + hours + \":\" + minutes + \":\" + seconds;\n  } else {\n    return new Date(inputDate);\n  } // } else {\n  //   return inputDate;\n  // }\n\n}\nexport function convertDateTimetoStringDBFormat(inputDate, userInfo) {\n  // let splitChar = userInfo.ssitedatetime &&\n  //   userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\n  const specialChars = `\\`_-\\[\\]'\"\\\\|,.\\/`;\n  let splitChar = '';\n  userInfo.ssitedatetime && userInfo.ssitedatetime.split('').some(word => {\n    if (splitChar === undefined || splitChar === '') {\n      if (specialChars.includes(word)) {\n        splitChar = word;\n      }\n    }\n  });\n  let dbformat = \"-\";\n  const month = validateTwoDigitDate(String(inputDate.getMonth() + 1));\n  const day = validateTwoDigitDate(String(inputDate.getDate()));\n  const year = inputDate.getFullYear();\n  const hours = validateTwoDigitDate(String(inputDate.getHours()));\n  const minutes = validateTwoDigitDate(String(inputDate.getMinutes()));\n  const seconds = validateTwoDigitDate(String(inputDate.getSeconds())); // if (splitChar === \"/\" || splitChar === \"-\") {\n\n  const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\n\n  if (firstField === \"dd\") {\n    return year + dbformat + month + dbformat + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n  } else if (firstField === \"yyyy\") {\n    return year + dbformat + month + dbformat + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n  } else {\n    return new Date(inputDate);\n  } // } else {\n  //   return inputDate;\n  // }\n\n}\nexport function parentChildComboLoad(columnList, comboData, selectedRecord, childColumnList, withoutCombocomponent, ParentComboValues, languagetypeCode, userinfo, comboComponents) {\n  //console.log(\"columnList:\", columnList);\n  let comboValues = {};\n\n  if (columnList.length > 0) {\n    columnList.map((x, index) => {\n      if (x.inputtype === 'combo' && (x.readonly === undefined || x.readonly === false)) {\n        if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \n          {\n            selectedRecord[x.label] = undefined;\n\n            if (comboData[x.label].length > 0) {\n              if (comboData[x.label][0].label === undefined) {\n                const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x);\n                comboData[x.label] = optionList.get(\"OptionList\");\n\n                if (optionList.get(\"DefaultValue\") !== undefined) {\n                  selectedRecord[x.label] = optionList.get(\"DefaultValue\");\n                }\n              } else {\n                comboData[x.label] = comboData[x.label];\n                const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember, x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x);\n\n                if (optionList.get(\"DefaultValue\") !== undefined) {\n                  selectedRecord[x.label] = optionList.get(\"DefaultValue\");\n                }\n              }\n            } else {\n              comboData[x.label] = [];\n            }\n\n            comboValues = childComboLoad(x, comboData, selectedRecord, childColumnList, withoutCombocomponent, languagetypeCode, userinfo, selectedRecord[x.label]);\n          } else {\n          selectedRecord[x.label] = undefined;\n          comboValues = childComboLoad(x, comboData, selectedRecord, childColumnList, withoutCombocomponent, languagetypeCode, userinfo, selectedRecord[x.label]); //   comboValues = {\n          //   \"comboData\": comboData,\n          //   \"selectedRecord\": selectedRecord\n          // }\n        }\n      } else if (x.inputtype === 'combo' && x.readonly === true) {\n        selectedRecord = { ...selectedRecord,\n          [x.label]: {\n            label: ParentComboValues.item.jsondata ? ParentComboValues.item.jsondata[x.displaymember] : ParentComboValues.item[x.displaymember] || \"\",\n            value: ParentComboValues.item.jsondata ? ParentComboValues.item.jsondata[x.valuemember] : ParentComboValues.item[x.valuemember] || -1\n          }\n        };\n        comboValues = {\n          comboData: comboData,\n          ...comboValues,\n          selectedRecord\n        };\n      } else {\n        if (x.isMultiLingual) {\n          selectedRecord = { ...selectedRecord,\n            [x.label]: ParentComboValues.item.jsondata ? ParentComboValues.item.jsondata[x.displaymember][languagetypeCode] : ParentComboValues.item[x.displaymember][languagetypeCode] || \"\"\n          };\n        } else {\n          if (x.inputtype === \"date\") {\n            selectedRecord = { ...selectedRecord,\n              [x.label]: ParentComboValues.item.jsondata ? rearrangeDateFormatforKendoDataTool(userinfo, ParentComboValues.item.jsondata[x.displaymember]) : rearrangeDateFormatforKendoDataTool(userinfo, ParentComboValues.item[x.displaymember])\n            };\n\n            if (x.child) {\n              const Age = withoutCombocomponent.filter(x => x.name === 'Age');\n              x.child.map(k => {\n                if (k.label === Age[0].label) {\n                  const age = ageCalculate(selectedRecord[x.label]);\n                  selectedRecord[Age[0].label] = age;\n                }\n              });\n            }\n          } else {\n            selectedRecord = { ...selectedRecord,\n              [x.label]: ParentComboValues.item.jsondata ? ParentComboValues.item.jsondata[x.displaymember] : ParentComboValues.item[x.displaymember] || \"\"\n            };\n          }\n        }\n\n        comboValues = {\n          comboData: comboData,\n          ...comboValues,\n          selectedRecord\n        }; // comboValues[\"selectedRecord\"][x.label] = ParentComboValues[x.displaymember] ||\"\"\n      }\n    });\n  } else {\n    comboValues = {\n      \"comboData\": comboData,\n      \"selectedRecord\": selectedRecord\n    };\n  }\n\n  return comboValues;\n}\nexport function childComboLoad(x, comboData, selectedRecord, childColumnList, withoutCombocomponent, languagetypeCode, userinfo, ParentComboValues) {\n  if (selectedRecord[x.label] !== undefined) {\n    if (x.hasOwnProperty(\"child\")) {\n      x.child.map(y => {\n        const index = childColumnList[x.label].findIndex(z => z.label === y.label);\n\n        if (index !== -1) {\n          if (childColumnList[x.label][index].inputtype === 'combo' && childColumnList[x.label][index].readonly === true) {\n            selectedRecord = { ...selectedRecord,\n              [childColumnList[x.label][index].label]: {\n                label: ParentComboValues.item.jsondata ? ParentComboValues.item.jsondata[childColumnList[x.label][index].displaymember] : ParentComboValues.item[childColumnList[x.label][index].displaymember] || \"\",\n                value: ParentComboValues.item.jsondata ? ParentComboValues.item.jsondata[childColumnList[x.label][index].valuemember] : ParentComboValues.item[childColumnList[x.label][index].valuemember] || -1\n              }\n            };\n          } else if (comboData[y.label] && comboData[y.label].length > 0) {\n            if (comboData[y.label][0].label === undefined) {\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember, childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode, y);\n              comboData[y.label] = optionChildList.get(\"OptionList\");\n\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\");\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label]);\n                selectedRecord = { ...selectedRecord,\n                  ...newRecord1.selectedRecord\n                };\n                comboData = { ...comboData,\n                  ...newRecord1.comboData\n                };\n              } else {\n                selectedRecord[y.label] = undefined;\n              }\n            } else {\n              //below code need to be veriifed for 'x' to be replced with 'y' or viceversa?\n              comboData[y.label] = comboData[y.label];\n              const optionChildList = constructjsonOptionDefault(comboData[y.label] || [], childColumnList[x.label][index].valuemember, childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, undefined, undefined, y);\n\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\");\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label]);\n                selectedRecord = { ...selectedRecord,\n                  ...newRecord1.selectedRecord\n                };\n                comboData = { ...comboData,\n                  ...newRecord1.comboData\n                };\n              } else {\n                selectedRecord[y.label] = undefined;\n              }\n            }\n          } else {\n            selectedRecord[y.label] = undefined;\n            comboData[y.label] = [];\n            const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label]);\n            selectedRecord = { ...selectedRecord,\n              ...newRecord1.selectedRecord\n            };\n            comboData = { ...comboData,\n              ...newRecord1.comboData\n            };\n          }\n        } else {\n          const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\n\n          if (readonlyfields !== -1) {\n            if (withoutCombocomponent[readonlyfields][\"isMultiLingual\"]) {\n              selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ? selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode];\n            } else {\n              if (withoutCombocomponent[readonlyfields][\"inputtype\"] === \"date\") {\n                selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ? rearrangeDateFormatforKendoDataTool(userinfo, selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]]) : rearrangeDateFormatforKendoDataTool(userinfo, selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]]);\n\n                if (withoutCombocomponent[readonlyfields].child) {\n                  const Age = withoutCombocomponent.filter(x => x.name === 'Age');\n                  withoutCombocomponent[readonlyfields].child.map(k => {\n                    if (k.label === Age[0].label) {\n                      const age = ageCalculate(selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]]);\n                      selectedRecord[Age[0].label] = age;\n                    }\n                  });\n                }\n              } else {\n                selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ? selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]];\n              }\n            }\n          }\n        }\n      });\n    }\n  } else if (x.name === 'manualsampleid' && selectedRecord['Order Type'].value === 1) {\n    if (x.hasOwnProperty(\"child\")) {\n      x.child.map(y => {\n        const index = childColumnList[x.label].findIndex(z => z.label === y.label);\n\n        if (index !== -1) {\n          if (childColumnList[x.label][index].inputtype === 'combo' && childColumnList[x.label][index].readonly === true) {\n            selectedRecord = { ...selectedRecord,\n              [childColumnList[x.label][index].label]: {\n                label: ParentComboValues.item.jsondata ? ParentComboValues.item.jsondata[childColumnList[x.label][index].displaymember] : ParentComboValues.item[childColumnList[x.label][index].displaymember] || \"\",\n                value: ParentComboValues.item.jsondata ? ParentComboValues.item.jsondata[childColumnList[x.label][index].valuemember] : ParentComboValues.item[childColumnList[x.label][index].valuemember] || -1\n              }\n            };\n          } else if (comboData[y.label] && comboData[y.label].length > 0) {\n            if (comboData[y.label][0].label === undefined) {\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember, childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode, y);\n              comboData[y.label] = optionChildList.get(\"OptionList\");\n\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\");\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label]);\n                selectedRecord = { ...selectedRecord,\n                  ...newRecord1.selectedRecord\n                };\n                comboData = { ...comboData,\n                  ...newRecord1.comboData\n                };\n              } else {\n                selectedRecord[y.label] = undefined;\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label]);\n                selectedRecord = { ...selectedRecord,\n                  ...newRecord1.selectedRecord\n                };\n                comboData = { ...comboData,\n                  ...newRecord1.comboData\n                };\n              }\n            } else {\n              //below code need to be veriifed for 'x' to be replced with 'y' or viceversa?\n              comboData[y.label] = comboData[y.label];\n              const optionChildList = constructjsonOptionDefault(comboData[y.label] || [], childColumnList[x.label][index].valuemember, childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, undefined, undefined, y);\n\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\");\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label]);\n                selectedRecord = { ...selectedRecord,\n                  ...newRecord1.selectedRecord\n                };\n                comboData = { ...comboData,\n                  ...newRecord1.comboData\n                };\n              } else {\n                selectedRecord[y.label] = undefined;\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label]);\n                selectedRecord = { ...selectedRecord,\n                  ...newRecord1.selectedRecord\n                };\n                comboData = { ...comboData,\n                  ...newRecord1.comboData\n                };\n              }\n            }\n          } else {\n            selectedRecord[y.label] = undefined;\n            comboData[y.label] = [];\n            const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label]);\n            selectedRecord = { ...selectedRecord,\n              ...newRecord1.selectedRecord\n            };\n            comboData = { ...comboData,\n              ...newRecord1.comboData\n            };\n          }\n        } else {\n          const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\n\n          if (readonlyfields !== -1) {\n            if (withoutCombocomponent[readonlyfields][\"isMultiLingual\"]) {\n              selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ? selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode];\n            } else {\n              if (withoutCombocomponent[readonlyfields][\"inputtype\"] === \"date\") {\n                selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ? rearrangeDateFormatforKendoDataTool(userinfo, selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]]) : rearrangeDateFormatforKendoDataTool(userinfo, selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]]);\n\n                if (withoutCombocomponent[readonlyfields].child) {\n                  const Age = withoutCombocomponent.filter(x => x.name === 'Age');\n                  withoutCombocomponent[readonlyfields].child.map(k => {\n                    if (k.label === Age[0].label) {\n                      const age = ageCalculate(selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]]);\n                      selectedRecord[Age[0].label] = age;\n                    }\n                  });\n                }\n              } else {\n                selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ? selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]];\n              }\n            }\n          }\n        }\n      });\n    }\n  } else {\n    if (x.hasOwnProperty(\"child\")) {\n      x.child.map(y => {\n        selectedRecord[y.label] = undefined;\n        const index = childColumnList[x.label] && childColumnList[x.label].findIndex(z => z.label === y.label);\n\n        if (index !== undefined && index !== -1) {\n          comboData[y.label] = undefined;\n          const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent);\n          selectedRecord = { ...selectedRecord,\n            ...newRecord1.selectedRecord\n          };\n          comboData = { ...comboData,\n            ...newRecord1.comboData\n          };\n        } else {\n          const index = withoutCombocomponent.findIndex(b => b.label === y.label);\n\n          if (index !== -1) {\n            if (withoutCombocomponent[index].hasOwnProperty(\"child\")) {\n              withoutCombocomponent[index].child.map(k => {\n                selectedRecord[k.label] = undefined;\n              });\n            }\n          }\n        }\n      });\n    }\n  }\n\n  const newRecord = {\n    \"comboData\": comboData,\n    \"selectedRecord\": selectedRecord\n  };\n  return newRecord;\n}\nexport function childComboLoadForEdit(x, comboData, selectedRecord, childColumnList, withoutCombocomponent, languagetypeCode) {\n  if (selectedRecord[x.label] !== undefined) {\n    if (x.hasOwnProperty(\"child\")) {\n      x.child.map(y => {\n        const index = childColumnList[x.label].findIndex(z => z.label === y.label);\n\n        if (index !== -1) {\n          // const childOptionData = comboData[y.label].filter(filterData =>\n          //     JSON.parse(filterData[y.source].value)[x.valuemember] === selectedRecord[x.label].item[x.valuemember])\n          if (comboData[y.label] && comboData[y.label].length > 0) {\n            if (comboData[y.label][0].label === undefined) {\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember, childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode, y);\n              comboData[y.label] = optionChildList.get(\"OptionList\"); // if (optionChildList.get(\"DefaultValue\") !== undefined) {\n              //   selectedRecord[y.label] = optionChildList.get(\"DefaultValue\")\n\n              childComboLoadForEdit(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent); // } else {\n              //   selectedRecord[y.label] = undefined\n              // }\n            } else {\n              comboData[y.label] = comboData[y.label];\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember, childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, undefined, undefined, y); // if (optionChildList.get(\"DefaultValue\") !== undefined) {\n              //   selectedRecord[y.label] = optionChildList.get(\"DefaultValue\")\n\n              childComboLoadForEdit(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent); // } else {\n              //   selectedRecord[y.label] = undefined\n              // }\n            }\n          } else {\n            comboData[y.label] = [];\n          }\n        } //else {\n        //   const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\n        //   if (readonlyfields !== -1) {\n        //     if(withoutCombocomponent[readonlyfields][\"isMultiLingual\"]){\n        //     selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ?\n        //       selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode] \n        //     }else{\n        //       selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ?\n        //       selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]]\n        //     }\n        //   }\n        // }\n\n      });\n    }\n  } else {\n    if (x.hasOwnProperty(\"child\")) {\n      x.child.map(y => {\n        selectedRecord[y.label] = undefined;\n        comboData[y.label] = undefined;\n      });\n    }\n  }\n\n  const newRecord = {\n    \"comboData\": comboData,\n    \"selectedRecord\": selectedRecord\n  };\n  return newRecord;\n}\nexport function comboChild(data, columnList, childColumnList, slice) {\n  let retunObj = {}; // if (data.findIndex(x => x.label === columnList.label) !== -1) {\n\n  if (!childColumnList.hasOwnProperty(columnList.label)) {\n    if (childColumnList[columnList.label] === undefined) {\n      if (columnList.hasOwnProperty(\"child\")) {\n        let childList = [];\n        columnList.child.map(childData => {\n          const index = data.findIndex(x => x.label === childData.label);\n\n          if (index !== -1) {\n            childList.push(data[index]);\n\n            if (slice) {\n              data = [...data.slice(0, index), ...data.slice(index + 1)];\n            }\n          }\n        });\n        childColumnList[columnList.label] = childList;\n\n        if (childList.length > 0) {\n          childList.map(y => {\n            if (y.hasOwnProperty(\"child\")) {\n              const val = comboChild(data, y, childColumnList, slice);\n              retunObj[\"data\"] = val.data;\n              retunObj[\"childColumnList\"] = val.childColumnList;\n            } else {\n              retunObj[\"data\"] = data;\n              retunObj[\"childColumnList\"] = childColumnList;\n            }\n          });\n        } else {\n          retunObj[\"data\"] = data;\n          retunObj[\"childColumnList\"] = childColumnList;\n        }\n      } else {\n        retunObj[\"data\"] = data;\n        retunObj[\"childColumnList\"] = childColumnList;\n      }\n    } else {\n      retunObj[\"data\"] = data;\n      retunObj[\"childColumnList\"] = childColumnList;\n    }\n  } else {\n    retunObj[\"data\"] = data;\n    retunObj[\"childColumnList\"] = childColumnList;\n  }\n\n  return retunObj;\n}\nexport function ageCalculate(date, checkValue) {\n  const now = new Date();\n  const today = new Date(now.getYear(), now.getMonth(), now.getDate());\n  let yearNow = now.getYear();\n  let monthNow = now.getMonth();\n  let dateNow = now.getDate();\n  let dob = new Date(date);\n  let yearDob = dob.getYear();\n  let monthDob = dob.getMonth();\n  let dateDob = dob.getDate();\n  let age = {};\n  let ageString = \"\";\n  let yearString = \"\";\n  let monthString = \"\";\n  let dayString = \"\";\n  let yearAge = yearNow - yearDob;\n  let monthAge = 0;\n  let dateAge = 0;\n  if (monthNow >= monthDob) monthAge = monthNow - monthDob;else {\n    yearAge--;\n    monthAge = 12 + monthNow - monthDob;\n  }\n  if (dateNow >= dateDob) dateAge = dateNow - dateDob;else {\n    monthAge--;\n    dateAge = 31 + dateNow - dateDob;\n\n    if (monthAge < 0) {\n      monthAge = 11;\n      yearAge--;\n    }\n  }\n  age = {\n    years: yearAge,\n    months: monthAge,\n    days: dateAge\n  };\n  if (age.years > 1) yearString = intl.formatMessage({\n    id: \"IDS_YEARS\"\n  });else yearString = intl.formatMessage({\n    id: \"IDS_YEAR\"\n  });\n  if (age.months > 1) monthString = intl.formatMessage({\n    id: \"IDS_MONTHS\"\n  });else monthString = intl.formatMessage({\n    id: \"IDS_MONTH\"\n  });\n  if (age.days > 1) dayString = intl.formatMessage({\n    id: \"IDS_DAYS\"\n  });else dayString = intl.formatMessage({\n    id: \"IDS_DAY\"\n  });\n\n  if (checkValue === true) {\n    if (age.years > 0 && age.months > 0 && age.days > 0) ageString = age.years;else if (age.years === 0 && age.months === 0 && age.days > 0) ageString = \"1\";else if (age.years > 0 && age.months === 0 && age.days === 0) ageString = age.years;else if (age.years > 0 && age.months > 0 && age.days === 0) ageString = age.years;else if (age.years === 0 && age.months > 0 && age.days > 0) ageString = \"1\";else if (age.years > 0 && age.months === 0 && age.days > 0) ageString = age.years;else if (age.years === 0 && age.months > 0 && age.days === 0) ageString = age.months;else ageString = \"1\"; // console.log(ageString);\n  } else {\n    if (age.years > 0 && age.months > 0 && age.days > 0) ageString = age.years + yearString + \", \" + age.months + monthString + \" and \" + age.days + dayString + \" \";else if (age.years === 0 && age.months === 0 && age.days > 0) ageString = \" \" + age.days + dayString + \" \";else if (age.years > 0 && age.months === 0 && age.days === 0) ageString = age.years + yearString + \"  \";else if (age.years > 0 && age.months > 0 && age.days === 0) ageString = age.years + yearString + \" and \" + age.months + monthString + \" \";else if (age.years === 0 && age.months > 0 && age.days > 0) ageString = age.months + monthString + \" and \" + age.days + dayString + \"\";else if (age.years > 0 && age.months === 0 && age.days > 0) ageString = age.years + yearString + \" and \" + age.days + dayString + \" \";else if (age.years === 0 && age.months > 0 && age.days === 0) ageString = age.months + monthString + \" \";else ageString = \"0 \" + intl.formatMessage({\n      id: \"IDS_DAYS\"\n    }); // console.log(ageString);\n  }\n\n  return ageString;\n} // export function ageCalculateOnlyForYear(date,checkValue) {\n//   const now = new Date();\n//   const today = new Date(now.getYear(), now.getMonth(), now.getDate());\n//   let yearNow = now.getYear();\n//   let monthNow = now.getMonth();\n//   let dateNow = now.getDate();\n//   let dob = new Date(date);\n//   let yearDob = dob.getYear();\n//   let monthDob = dob.getMonth();\n//   let dateDob = dob.getDate();\n//   let age = {};\n//   let ageString = \"\";\n//   let yearAge = yearNow - yearDob;\n//   let monthAge = 0;\n//   let dateAge = 0;\n//   if (monthNow >= monthDob)\n//     monthAge = monthNow - monthDob;\n//   else {\n//     yearAge--;\n//     monthAge = 12 + monthNow - monthDob;\n//   }\n//   if (dateNow >= dateDob)\n//     dateAge = dateNow - dateDob;\n//   else {\n//     monthAge--;\n//     dateAge = 31 + dateNow - dateDob;\n//     if (monthAge < 0) {\n//       monthAge = 11;\n//       yearAge--;\n//     }\n//   }\n//   age = {\n//     years: yearAge,\n//     months: monthAge,\n//     days: dateAge\n//   };\n//   if ((age.years > 0) && (age.months > 0) && (age.days > 0))\n//     ageString = age.years;\n//   else if ((age.years === 0) && (age.months === 0) && (age.days > 0))\n//     ageString = \"1\";\n//   else if ((age.years > 0) && (age.months === 0) && (age.days === 0))\n//     ageString = age.years ;\n//   else if ((age.years > 0) && (age.months > 0) && (age.days === 0))\n//     ageString = age.years;\n//   else if ((age.years === 0) && (age.months > 0) && (age.days > 0))\n//     ageString = \"1\";\n//   else if ((age.years > 0) && (age.months === 0) && (age.days > 0))\n//     ageString = age.years;\n//   else if ((age.years === 0) && (age.months > 0) && (age.days === 0))\n//     ageString = age.months;\n//   else ageString = \"1\";\n//   return ageString;\n// }\n\nexport function rearrangeDateFormatDateOnly(userInfo, dateValue) {\n  // let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\n  const specialChars = `\\`_-\\[\\]'\"\\\\|,.\\/`;\n  let splitChar = '';\n  userInfo.ssitedatetime && userInfo.ssitedatetime.split('').some(word => {\n    if (splitChar === undefined || splitChar === '') {\n      if (specialChars.includes(word)) {\n        splitChar = word;\n      }\n    }\n  });\n\n  if (typeof dateValue === \"string\") {\n    //(splitChar === \"/\" || splitChar === \"-\") &&\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\n    const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \";\n    const datetime = dateValue.split(timeSplitChar);\n    return datetime[0];\n  } else {\n    return dateValue;\n  }\n}\nexport function getSameRecordFromTwoDifferentArrays(firstArray, secondArray, PrimaryKey) {\n  let filterArray = [];\n\n  for (var i = 0; i < firstArray.length; i++) {\n    for (var j = 0; j < secondArray.length; j++) {\n      if (firstArray[i][PrimaryKey] == secondArray[j][PrimaryKey]) {\n        filterArray.push(secondArray[j]);\n      }\n    }\n  }\n\n  return filterArray;\n}\nexport function childComboClear(inputParam) {\n  if (inputParam.control.child && inputParam.control.child.length > 0) {\n    inputParam.control.child.map(item => {\n      inputParam.selectedRecord[item.label] = null;\n      delete inputParam.comboData[item.label];\n      const comboComponents = inputParam.comboComponents.filter(x => x.label === item.label);\n\n      if (comboComponents.length > 0) {\n        if (comboComponents[0].child && comboComponents[0].child.length > 0) {\n          const inputChilParam = {\n            control: comboComponents[0],\n            comboComponents: inputParam.comboComponents,\n            withoutCombocomponent: inputParam.withoutCombocomponent,\n            selectedRecord: inputParam.selectedRecord,\n            comboData: inputParam.comboData\n          };\n          const {\n            selectedRecord,\n            comboData\n          } = childComboClear(inputChilParam);\n          inputParam['selectedRecord'] = selectedRecord;\n          inputParam['comboData'] = comboData;\n        }\n      }\n    });\n  }\n\n  return {\n    selectedRecord: inputParam.selectedRecord,\n    comboData: inputParam.comboData\n  };\n}\nexport function childComboClearSubSample(inputParam) {\n  if (inputParam.control.child && inputParam.control.child.length > 0) {\n    inputParam.control.child.map(item => {\n      inputParam.selectedRecord[item.label] = null;\n      const optionList = constructjsonOptionDefault(inputParam.comboData[inputParam.control.label] || [], inputParam.control.valuemember, inputParam.control.displaymember, false, false, true, undefined, inputParam.control.source, inputParam.control.isMultiLingual);\n\n      if (optionList.get(\"DefaultValue\") === undefined) {\n        delete inputParam.comboData[item.label];\n      }\n\n      const comboComponents = inputParam.comboComponents.filter(x => x.label === item.label);\n\n      if (comboComponents.length > 0) {\n        if (comboComponents[0].child && comboComponents[0].child.length > 0) {\n          const inputChilParam = {\n            control: comboComponents[0],\n            comboComponents: inputParam.comboComponents,\n            withoutCombocomponent: inputParam.withoutCombocomponent,\n            selectedRecord: inputParam.selectedRecord,\n            comboData: inputParam.comboData,\n            clearComboData: true\n          };\n          const {\n            selectedRecord,\n            comboData\n          } = childComboClearSubSample(inputChilParam);\n          inputParam['selectedRecord'] = selectedRecord;\n          inputParam['comboData'] = comboData;\n        }\n      }\n    });\n  }\n\n  return {\n    selectedRecord: inputParam.selectedRecord,\n    comboData: inputParam.comboData\n  };\n}\nexport function CF_encryptionData(Data) {\n  const salt = CryptoJS.lib.WordArray.random(128 / 8);\n  const key = CryptoJS.PBKDF2(\"AGARAM_SDMS_SCRT\", salt, {\n    keySize: 128 / 32,\n    iterations: 100\n  });\n  const iv = CryptoJS.lib.WordArray.random(128 / 8);\n  const encrypted = CryptoJS.AES.encrypt(JSON.stringify(Data), key, {\n    iv: iv,\n    padding: CryptoJS.pad.Pkcs7,\n    mode: CryptoJS.mode.CBC\n  });\n  const transitmessage = salt.toString() + iv.toString() + encrypted.toString();\n  const ct = {\n    EncryptData: transitmessage\n  };\n  return ct;\n}\nexport function removeIndex(data, removeIndex) {\n  const data1 = [...data.splice(0, removeIndex), ...data.splice(removeIndex + 1)];\n  return data1;\n}\nexport function compareArrays(a, b) {\n  let boolean = false;\n\n  if (a.length === b.length) {\n    boolean = a.every(x => b.some(y => y.toString() === x.toString()));\n  }\n\n  return boolean;\n}\n;\nexport function Lims_JSON_stringify(s, emit_unicode) {\n  var json = s;\n  return emit_unicode ? json : json.replace(/[\\u007f-\\uffff]/g, function (c) {\n    return '\\\\u' + ('0000' + c.charCodeAt(0).toString(16)).slice(-4);\n  });\n}\nexport function copyText(text) {\n  if (navigator && navigator.clipboard) {\n    navigator.clipboard.writeText(text);\n  } else {\n    var textField = document.createElement('textarea');\n    textField.innerText = text;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n  }\n}\nexport function childSpecLoadCheck(templateManRecord, childcolumnlist, productCategory, map, parentLabel, selectedRecord) {\n  let val = {\n    productCategory,\n    map\n  };\n\n  if (templateManRecord.child && templateManRecord.child.length > 0) {\n    templateManRecord.child.map(ch => {\n      const indexTemplateMandatory1 = childcolumnlist[parentLabel].findIndex(z => z.label === ch.label && z.templatemandatory && z.name === 'Product Category');\n\n      if (indexTemplateMandatory1 !== -1) {\n        const data = childcolumnlist[parentLabel][indexTemplateMandatory1];\n\n        if (data.name === 'Product Category') {\n          val = {\n            productCategory: selectedRecord[data.label] === undefined ? false : true,\n            map: { ...map,\n              nproductcatcode: selectedRecord[data.label] ? selectedRecord[data.label].value : -1,\n              nproductcode: -1\n            }\n          };\n        }\n      } else {\n        if (childcolumnlist[ch.label]) {\n          const vals = childcolumnlist[templateManRecord.label].filter(x => x.label === ch.label);\n\n          if (vals.length > 0) {\n            val = childSpecLoadCheck(vals[0], childcolumnlist, val.productCategory, val.map, ch.label, selectedRecord);\n          }\n        }\n      }\n    });\n  }\n\n  return { ...val\n  };\n} //remove space for react awesome query builder\n\nexport function removeSpaceFromFirst(str, query1) {\n  let query = query1;\n  const index = str && str.indexOf(\"'\");\n\n  if (index !== undefined) {\n    if (index !== -1) {\n      const st = str.substring(0, index + 1);\n      const st1 = str.substring(index + 1);\n      const index1 = st1.indexOf(\"'\");\n\n      if (st1.substring(0, 1) === \" \") {\n        query = query + st + st1.substring(1, index1 + 1);\n        query = removeSpaceFromFirst(st1.substring(index1 + 1), query);\n      } else if (st1.substring(0, 1) === \"%\") {\n        if (st1.substring(1, 2) === \" \") {\n          query = query + st + st1.substring(0, 1) + st1.substring(2, index1 + 1);\n          query = removeSpaceFromFirst(st1.substring(index1 + 1), query);\n        } else {\n          query = query + st + st1.substring(0, index1 + 1);\n          query = removeSpaceFromFirst(st1.substring(index1 + 1), query);\n        }\n      } else {\n        query = query + st + st1.substring(0, index1 + 1);\n        query = removeSpaceFromFirst(st1.substring(index1 + 1), query);\n      }\n    } else {\n      query = query + str;\n    }\n  } else {\n    query = str;\n  }\n\n  return query;\n} //Added For Mandatory Validation Start\n\nexport function onSaveMandatoryValidation(selectedRecord, mandatoryFields, onSaveClick) {\n  const failedControls = [];\n  const startLabel = [];\n  let label = \"IDS_ENTER\";\n  mandatoryFields.forEach(item => {\n    if (selectedRecord[item.dataField] === undefined || selectedRecord[item.dataField] === null) {\n      const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({\n        id: item.idsName\n      }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n      failedControls.push(alertMessage);\n      startLabel.push(item.mandatoryLabel);\n    } else {\n      if (item.validateFunction) {\n        const validateData = item.validateFunction;\n\n        if (selectedRecord[item.dataField].trim().length === 0) {\n          const alertMessage = intl.formatMessage({\n            id: item.idsName\n          });\n          failedControls.push(alertMessage);\n          startLabel.push(item.mandatoryLabel);\n        } else if (validateData(selectedRecord[item.dataField]) === false) {\n          const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({\n            id: item.idsName\n          }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n          failedControls.push(alertMessage);\n          startLabel.push(item.mandatoryLabel);\n        }\n      } else {\n        if (typeof selectedRecord[item.dataField] === \"object\") {\n          if (item.ismultilingual == \"true\") {\n            let dataArray = 0;\n            Object.values(selectedRecord[item.dataField]).map(lang => {\n              if (lang.length === 0) {\n                dataArray++;\n              }\n            });\n\n            if (dataArray > 0) {\n              const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({\n                id: item.idsName\n              }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n              failedControls.push(alertMessage);\n              startLabel.push(item.mandatoryLabel); //\"I\n            }\n          } else {\n            if (selectedRecord[item.dataField] && selectedRecord[item.dataField].length === 0) {\n              const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({\n                id: item.idsName\n              }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n              failedControls.push(alertMessage);\n              startLabel.push(item.mandatoryLabel);\n            }\n          }\n        } else if (typeof selectedRecord[item.dataField] === \"string\") {\n          if (selectedRecord[item.dataField].trim().length === 0) {\n            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({\n              id: item.idsName\n            }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n            failedControls.push(alertMessage);\n            startLabel.push(item.mandatoryLabel);\n          }\n        } else {\n          if (selectedRecord[item.dataField].length === 0) {\n            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({\n              id: item.idsName\n            }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n            failedControls.push(alertMessage);\n            startLabel.push(item.mandatoryLabel);\n          }\n        }\n      }\n    }\n  });\n\n  if (failedControls.length === 0) {\n    onSaveClick();\n  } else {\n    label = startLabel[0] === undefined ? label : startLabel[0];\n    toast.info(`${intl.formatMessage({\n      id: label\n    })} ${failedControls[0]}`);\n  }\n} //Added for Mandatory Validation End\n\nexport function conditionBasedInput(control, value, name) {\n  let inputvalues;\n\n  if (control) {\n    switch (control && control.label === name) {\n      case control['isnumeric']:\n        {\n          if (control.ncustomization) {\n            if (parseInt(control.nmaxvalue) < parseInt(value)) {\n              inputvalues = control.nmaxvalue;\n            } else if (parseInt(control.nminvalue) > parseInt(value)) {\n              inputvalues = control.nminvalue;\n            } else {\n              inputvalues = value.replace(/[^0-9]/g, '');\n            }\n          } else {\n            inputvalues = value.replace(/[^0-9]/g, '');\n          }\n\n          break;\n        }\n\n      case control['isalphabetsmall']:\n        {\n          inputvalues = value.replace(/[^a-z]/g, '');\n          break;\n        }\n\n      case control['isalphabetcaptial']:\n        {\n          inputvalues = value.replace(/[^A-Z]/g, '');\n          break;\n        }\n\n      case control['isalphabetspl']:\n        {\n          if (control.ncustomization) {\n            let notAllowChar = false;\n\n            if (control.nsplcharnotallow) {\n              const splChar = control.nsplcharnotallow.split(/(?!$)/u);\n              splChar.map(item => {\n                if (item === value.charAt(value.length - 1)) {\n                  notAllowChar = true;\n                }\n              });\n            }\n\n            if (control.ncasesensitive) {\n              if (parseInt(control.nmaxsmallletters) < value.replace(/[^a-z]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else if (parseInt(control.nmaxcapticalletters) < value.replace(/[^A-Z]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else {\n                inputvalues = control.naviodsplchar ? notAllowChar ? value.slice(0, -1) + '' : value.replace(/[^A-Z.!#$@%&'*+\",./=?^_`{|}~-]/g, '') : value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/gi, '');\n              }\n            } else if (control.ncaptialletters) {\n              if (parseInt(control.nmaxletters) < value.replace(/[^A-Z]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else {\n                inputvalues = control.naviodsplchar ? notAllowChar ? value.slice(0, -1) + '' : value.replace(/[^A-Z.!#$@%&'*+\",./=?^_`{|}~-]/g, '') : value.replace(/[^A-Z.!#$@%&'*+\",./=?^_`{|}~-]/g, '');\n              }\n            } else if (control.nsmallletters) {\n              if (parseInt(control.nmaxletters) < value.replace(/[^a-z]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else {\n                inputvalues = control.naviodsplchar ? notAllowChar ? value.slice(0, -1) + '' : value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/g, '') : value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/g, '');\n              }\n            } else {\n              if (parseInt(control.nmaxletters) < value.replace(/[^a-zA-Z]/gi, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else {\n                inputvalues = control.naviodsplchar ? notAllowChar ? value.slice(0, -1) + '' : value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/gi, '') : value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/gi, '');\n              }\n            }\n          } else {\n            inputvalues = value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/gi, '');\n          }\n\n          break;\n        }\n\n      case control['isnumericspl']:\n        {\n          if (control.ncustomization) {\n            let notAllowChar = false;\n\n            if (control.nsplcharnotallow) {\n              const splChar = control.nsplcharnotallow.split(/(?!$)/u);\n              splChar.map(item => {\n                if (item === value.charAt(value.length - 1)) {\n                  notAllowChar = true;\n                }\n              });\n            }\n\n            if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/g, '').length) {\n              inputvalues = value.slice(0, -1) + '';\n            } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\n              inputvalues = value.slice(0, -1) + '';\n            } else {\n              inputvalues = control.naviodsplchar ? notAllowChar ? value.slice(0, -1) + '' : value.replace(/[^0-9.!#$@%&'*+\",./=?^_`{|}~-]/g, '') : value.replace(/[^0-9.!#$@%&'*+\",./=?^_`{|}~-]/g, '');\n            }\n          } else {\n            inputvalues = value.replace(/[^0-9.!#$@%&'*+\",./=?^_`{|}~-]/g, '');\n          }\n\n          break;\n        }\n\n      case control['isalphanumeric']:\n        {\n          if (control.ncustomization) {\n            if (control.ncasesensitive) {\n              if (parseInt(control.nmaxsmallletters) < value.replace(/[^a-z]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else if (parseInt(control.nmaxcapticalletters) < value.replace(/[^A-Z]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else {\n                inputvalues = value.replace(/[^a-z0-9]/gi, '');\n              }\n            } else if (control.ncaptialletters) {\n              if (parseInt(control.nmaxletters) < value.replace(/[^A-Z]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else {\n                inputvalues = value.replace(/[^A-Z0-9]/g, '');\n              }\n            } else if (control.nsmallletters) {\n              if (parseInt(control.nmaxletters) < value.replace(/[^a-z]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/g, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else {\n                inputvalues = value.replace(/[^a-z0-9]/g, '');\n              }\n            } else {\n              if (parseInt(control.nmaxletters) < value.replace(/[^a-zA-Z]/gi, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/gi, '').length) {\n                inputvalues = value.slice(0, -1) + '';\n              } else {\n                inputvalues = value.replace(/[^a-z0-9]/gi, '');\n              }\n            }\n          } else {\n            inputvalues = value.replace(/[^a-z0-9]/gi, '');\n          }\n\n          break;\n        }\n\n      default:\n        if (control.ncustomization) {\n          if (control.ncasesensitive) {\n            if (parseInt(control.nmaxsmallletters) < value.replace(/[^a-z]/g, '').length) {\n              inputvalues = value.slice(0, -1) + '';\n            } else if (parseInt(control.nmaxcapticalletters) < value.replace(/[^A-Z]/g, '').length) {\n              inputvalues = value.slice(0, -1) + '';\n            } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/g, '').length) {\n              inputvalues = value.slice(0, -1) + '';\n            } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\n              inputvalues = value.slice(0, -1) + '';\n            } else {\n              inputvalues = value.replace(/[^a-z0-9.!#$@%&'*+\",./=?^_`{|}~-]/gi, '');\n            }\n          } else {\n            if (parseInt(control.nmaxletters) < value.replace(/[^a-zA-Z]/gi, '').length) {\n              inputvalues = value.slice(0, -1) + '';\n            } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/gi, '').length) {\n              inputvalues = value.slice(0, -1) + '';\n            } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\n              inputvalues = value.slice(0, -1) + '';\n            } else {\n              inputvalues = value.replace(/[^a-z0-9.!#$@%&'*+\",./=?^_`{|}~-]/gi, '');\n            }\n          }\n        } else {\n          inputvalues = value;\n        }\n\n        break;\n    }\n  } else {\n    inputvalues = value;\n  }\n\n  return inputvalues;\n}\nexport function replaceBackSlash(dataList) {\n  return dataList.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim();\n}\n;\nexport function checkFilterIsEmptyQueryBuilder(treeData) {\n  let ParentItem = { ...treeData\n  };\n  let isFilterEmpty = true;\n  let childArray = ParentItem.children1;\n\n  if (childArray && childArray.length > 0 && childArray !== undefined) {\n    for (var i = 0; i < childArray.length; i++) {\n      let childData = childArray[i];\n\n      if (!childData.hasOwnProperty('children1')) {\n        if (childData.properties.field !== null && childData.properties.operator !== \"is_empty\" && childData.properties.operator !== \"is_not_empty\" && childData.properties.operator !== \"is_null\" && childData.properties.operator !== \"is_not_null\") {\n          if (childData.properties.field !== null && (childData.properties.operator === \"not_equal\" || childData.properties.operator === \"equal\") && childData.properties.valueSrc[0] === 'func') {\n            isFilterEmpty = childData.properties.value[0] && childData.properties.value[0].args.str && childData.properties.value[0].args.str.value !== \"\" && childData.properties.value[0] && childData.properties.value[0].args.str && childData.properties.value[0].args.str.value !== undefined ? true : false;\n          } else {\n            isFilterEmpty = childData.properties.value[0] !== \"\" && childData.properties.value[0] !== undefined ? true : false;\n          }\n\n          if (!isFilterEmpty) {\n            return isFilterEmpty;\n          }\n        }\n      } else {\n        if (childData) {\n          ParentItem = checkFilterIsEmptyQueryBuilder(childData);\n\n          if (!ParentItem) {\n            return ParentItem;\n          }\n        }\n      }\n    }\n  }\n\n  return isFilterEmpty;\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/CommonScript.js"],"names":["toast","rearrangeDateFormatforKendoDataTool","transactionStatus","CryptoJS","intl","extractFieldHeader","fieldList","columnList","undefined","length","filter","value","index","arr","ltrim","text","replace","whitespaceTrim","event","target","trim","rtrim","getCurrentDateTime","tempDate","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","sortData","masterData","sortType","columnName","Array","isArray","sortByField","Object","keys","map","data","sortDataForDate","item","valueFormed","dtransactiondate","push","sort","objA","objB","Number","obj1","obj2","toLowerCase","searchData","filterValue","originalData","searchedData","temp","itemArray","itemKey","toString","findIndex","element","includes","searchJsonData","jsonfeild","feild","getComboLabelValue","selectedItem","optionList","findKey","labelKey","slanguagetypecode","lblValueList","option","showEsign","itemMap","nformcode","ncontrolcode","controlList","values","x","nneedesign","getControlMap","controlMap","Map","set","scontrolname","formatDate","dateType","d","month","day","year","hour","min","sec","join","concat","getStartOfDay","setHours","getEndOfDay","getDateByMinutes","holdMinutes","someDate","adjustedDate","setMinutes","validateTwoDigitDate","showEsignForChildTabs","addDays","dateValue","daysToAdd","copy","setDate","validatePhoneNumber","inputValue","output","regAllow","match","validateDays","isTrue","s","substring","test","validateCreateView","regLagAllow","regStringAllow","validateEmail","formatInputDate","includeMilliseconds","formattedDate","slice","getMilliseconds","formatInputDateWithoutT","create_UUID","dt","getTime","uuid","c","r","Math","random","floor","filterRecordBasedOnTwoArrays","firstArray","secondArray","PrimaryKey","filterArray","some","y","listDataFromDynamicArray","indexvalue","replaceUpdatedObject","newList","oldList","primaryKey","newlistItem","oldIndex","splice","updatedObjectWithNewElement","name","npreregno","unshift","replaceObjectWithNewElement","filterStatusBasedOnTwoArrays","colorColName","constructOptionList","options","optionId","optionValue","sortField","sortOrder","alphabeticalSort","defaultStatusFieldName","optionMap","defaultValue","defaultStatus","itemA","itemB","YES","label","constructjsonOptionList","source","isMultiLingual","languageTypeCode","column","jsondata","JSON","parse","pkey","nquerybuildertablecode","constructjsonOptionDefault","validateLoginId","fillRecordBasedOnCheckBoxSelection","backEndResponse","mapKeys","CheckBoxOperation","primaryKeyName","removeElementFromArray","forEach","filterRecordBasedOnPrimaryKeyName","getRecordBasedOnPrimaryKeyName","filteredmasterData","getSameRecordFromTwoArrays","replaceOnlyNewList","reArrangeArrays","i","j","array","finalValueAfterFilter","master","SecondaryKey","getRemovedRecordAndAddNewRecord","ElementToSearch","itemAfterfilter","bytesToSize","bytes","isNaN","parseInt","sizes","log","round","pow","onDropAttachFileList","selectedRecord","attachedFiles","maxSize","listFile","deleteAttachmentDropZone","file","remainingList","fileList","fileItem","checkCancelAndReject","sample","ntransactionstatus","CANCELLED","REJECT","covertDatetoString","newDate","startDate","prevMonth","String","prevDay","fromDate","convertDatetoStringByTimeZone","userInfo","dateArray","splitChar","getSplitCharacter","firstField","ssitedatetime","split","secondField","convertDateValuetoString","startDateValue","endDateValue","noBreadCrumb","rearrangeDateFormat","endDate","currentMonth","currentDay","fromDateOnly","toDateOnly","toDate","breadCrumbFrom","breadCrumbto","specialChars","word","specialChar","timeSplitChar","indexOf","datetime","time","formatted","rearrangeDateFormatforUI","convertUTCDateToLocalDate","getTimezoneOffset","offset","hours","convertDateTimetoString","inputDate","minutes","seconds","convertDateTimetoStringDBFormat","dbformat","parentChildComboLoad","comboData","childColumnList","withoutCombocomponent","ParentComboValues","languagetypeCode","userinfo","comboComponents","comboValues","inputtype","readonly","valuemember","displaymember","get","childComboLoad","child","Age","k","age","ageCalculate","hasOwnProperty","z","optionChildList","newRecord1","readonlyfields","b","newRecord","childComboLoadForEdit","comboChild","retunObj","childList","childData","val","checkValue","now","today","getYear","yearNow","monthNow","dateNow","dob","yearDob","monthDob","dateDob","ageString","yearString","monthString","dayString","yearAge","monthAge","dateAge","years","months","days","formatMessage","id","rearrangeDateFormatDateOnly","getSameRecordFromTwoDifferentArrays","childComboClear","inputParam","control","inputChilParam","childComboClearSubSample","clearComboData","CF_encryptionData","Data","salt","lib","WordArray","key","PBKDF2","keySize","iterations","iv","encrypted","AES","encrypt","stringify","padding","pad","Pkcs7","mode","CBC","transitmessage","ct","EncryptData","removeIndex","data1","compareArrays","a","boolean","every","Lims_JSON_stringify","emit_unicode","json","charCodeAt","copyText","navigator","clipboard","writeText","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","childSpecLoadCheck","templateManRecord","childcolumnlist","productCategory","parentLabel","ch","indexTemplateMandatory1","templatemandatory","nproductcatcode","nproductcode","vals","removeSpaceFromFirst","str","query1","query","st","st1","index1","onSaveMandatoryValidation","mandatoryFields","onSaveClick","failedControls","startLabel","dataField","alertMessage","alertPreFix","idsName","alertSuffix","mandatoryLabel","validateFunction","validateData","ismultilingual","dataArray","lang","info","conditionBasedInput","inputvalues","ncustomization","nmaxvalue","nminvalue","notAllowChar","nsplcharnotallow","splChar","charAt","ncasesensitive","nmaxsmallletters","nmaxcapticalletters","nsplchar","naviodsplchar","ncaptialletters","nmaxletters","nsmallletters","nmaxnumeric","replaceBackSlash","dataList","replaceAll","checkFilterIsEmptyQueryBuilder","treeData","ParentItem","isFilterEmpty","childArray","children1","properties","field","operator","valueSrc","args"],"mappings":"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","sourcesContent":["//import { CommonDragLogic } from '@progress/kendo-react-grid/dist/npm/drag/CommonDragLogic';\r\nimport { toast } from 'react-toastify';\r\nimport { rearrangeDateFormatforKendoDataTool } from '../actions';\r\nimport { transactionStatus } from './Enumeration';\r\n//import CryptoJS from 'crypto-js';\r\n//import CryptoJS from 'crypto-js';\r\nimport CryptoJS from 'crypto-js';\r\nimport { intl } from '../components/App';\r\n\r\n//added by perumalraj on 07-08-2020\r\nexport function extractFieldHeader(fieldList) {\r\n  let columnList = [];\r\n  if (fieldList !== undefined && fieldList.length !== 0) {\r\n    columnList = fieldList.filter(function (value, index, arr) {\r\n      return (value[\"controlType\"] !== \"NA\");\r\n    });\r\n  }\r\n  return columnList;\r\n}\r\nexport function ltrim(text) {\r\n  if (text !== undefined) {\r\n    return text.replace(/^\\s+/, \"\").replace(/\\\\n/g, '')\r\n  }\r\n\r\n}\r\nexport function whitespaceTrim(event) {\r\n  if (event.target !== undefined)\r\n    event.target.value = event.target.value.trim()\r\n  return event\r\n}\r\nexport function rtrim(text) {\r\n  if (text !== undefined && text !== \"\")\r\n    return text.replace(/\\s+$/, \"\");\r\n}\r\nexport function getCurrentDateTime() {\r\n  const tempDate = new Date();\r\n  const date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate() + ' ' + tempDate.getHours() + ':' + tempDate.getMinutes() + ':' + tempDate.getSeconds();\r\n  return date;\r\n}\r\n\r\nexport function sortData(masterData, sortType, columnName) {\r\n  if (masterData) {\r\n    if (Array.isArray(masterData)) {\r\n      sortByField(masterData, sortType, columnName);\r\n    }\r\n    else {\r\n      Object.keys(masterData).map((data) => {\r\n        if (Array.isArray(masterData[data])) {\r\n          sortByField(masterData[data], sortType, columnName)\r\n        }\r\n        return null;\r\n      });\r\n    }\r\n  }\r\n  return masterData;\r\n}\r\n\r\nexport function sortDataForDate(masterData){\r\nlet value=[];\r\nmasterData.map((item,index)=> {\r\n  const valueFormed={\"dtransactiondate\":new Date(item.dtransactiondate),...masterData[index]}\r\n  value.push(valueFormed)})\r\n  masterData = value.sort(\r\n    (objA, objB) => Number(objA.dtransactiondate) - Number(objB.dtransactiondate),\r\n  );\r\n  return masterData;\r\n}\r\n\r\nexport function sortByField(masterData, sortType, columnName) {\r\n  if (masterData !== undefined && masterData.length > 0) {\r\n    if (columnName === undefined || columnName === null) {\r\n      if (masterData[0] !== undefined) {\r\n        columnName = Object.keys(masterData[0])[0];\r\n      }\r\n    }\r\n    if (sortType === \"ascending\") {\r\n      masterData.sort((obj1, obj2) => obj1[columnName] !== null && obj2[columnName] !== null ?\r\n        ((typeof (obj1[columnName]) === 'string' && typeof (obj2[columnName]) === 'string') ?\r\n          obj1[columnName].toLowerCase() > obj2[columnName].toLowerCase() ? 1 : -1\r\n          : obj1[columnName] > obj2[columnName] ? 1 : -1)\r\n        : \"\"\r\n      );\r\n\r\n    }\r\n    else {\r\n      // console.log(columnName)\r\n      masterData.sort((obj1, obj2) => obj1[columnName] !== null && obj2[columnName] !== null ?\r\n        ((typeof (obj1[columnName]) === 'string' && typeof (obj2[columnName]) === 'string') ?\r\n          obj1[columnName].toLowerCase() < obj2[columnName].toLowerCase() ? 1 : -1\r\n          : obj1[columnName] < obj2[columnName] ? 1 : -1)\r\n        : \"\"\r\n      );\r\n    }\r\n  }\r\n  return masterData;\r\n}\r\n\r\nexport function searchData(filterValue, originalData, fieldList) {\r\n  let searchedData = [];\r\n\r\n  if (originalData && originalData.length > 0) {\r\n    let temp = originalData.filter(item => {\r\n      const itemArray = [];\r\n      fieldList.map(itemKey =>\r\n        item[itemKey] && item[itemKey] !== null ?\r\n          itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase()\r\n            : item[itemKey].toString().toLowerCase())\r\n          : \"\")\r\n      //   console.log(itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1)\r\n      //  console.log(filterValue.toLowerCase())\r\n      return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1\r\n    }\r\n    )\r\n    searchedData = temp;\r\n  }\r\n  return searchedData;\r\n}\r\n//end- search logic\r\n\r\n//For Searching Json Data\r\nexport function searchJsonData(filterValue, originalData, fieldList) {\r\n  let searchedData = [];\r\n\r\n  if (originalData.length > 0) {\r\n    let temp = originalData.filter(item => {\r\n      const itemArray = [];\r\n      fieldList.map(itemKey =>\r\n        itemKey.jsonfeild ?\r\n          item[itemKey.jsonfeild][itemKey.feild] && item[itemKey.jsonfeild][itemKey.feild] !== null ?\r\n            itemArray.push(typeof item[itemKey.jsonfeild][itemKey.feild] === \"string\" ? item[itemKey.jsonfeild][itemKey.feild].toLowerCase()\r\n              : item[itemKey.jsonfeild][itemKey.feild].toString().toLowerCase())\r\n            : \"\"\r\n          :\r\n          item[itemKey.feild] && item[itemKey.feild] !== null ?\r\n            itemArray.push(typeof item[itemKey.feild] === \"string\" ?\r\n              item[itemKey.feild].toLowerCase()\r\n              : item[itemKey.feild].toString().toLowerCase())\r\n            : \"\")\r\n      //   console.log(itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1)\r\n      //  console.log(filterValue.toLowerCase())\r\n      return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1\r\n    }\r\n    )\r\n    searchedData = temp;\r\n  }\r\n  return searchedData;\r\n}\r\n\r\n\r\n\r\n//Given by Perumal\r\n//To get Label Value Pair for a search select combo box\r\nexport function getComboLabelValue(selectedItem, optionList, findKey, labelKey, jsonfeild, slanguagetypecode) {\r\n\r\n  let lblValueList = [];\r\n  optionList.map((option) => {\r\n    if (option[jsonfeild]) {\r\n      if (selectedItem && selectedItem[findKey] === option[findKey]) {\r\n        lblValueList.push({\r\n          \"value\": option[findKey], \"label\": option[jsonfeild][labelKey][slanguagetypecode] ?\r\n            option[jsonfeild][labelKey][slanguagetypecode] : option[jsonfeild][labelKey]\r\n        })\r\n      }\r\n      return null;\r\n    }\r\n    else {\r\n      if (selectedItem && selectedItem[findKey] === option[findKey]) {\r\n        lblValueList.push({ \"value\": option[findKey], \"label\": option[labelKey] })\r\n      }\r\n      return null;\r\n    }\r\n\r\n  })\r\n  return selectedItem[findKey] = lblValueList[0];\r\n}\r\n\r\n// To provide esign rights\r\nexport function showEsign(itemMap, nformcode, ncontrolcode) {\r\n  const controlList = itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [];\r\n  const index = controlList.findIndex(x => x.ncontrolcode === ncontrolcode);\r\n  return controlList[index] && controlList[index].nneedesign === 3 ? true : false;\r\n}\r\n\r\n// To provide control rights\r\nexport function getControlMap(itemMap, nformcode) {\r\n  const controlList = itemMap ? itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [] : [];\r\n  const controlMap = new Map();\r\n  controlList.map(item => {\r\n    return controlMap.set(item.scontrolname, { ...item })\r\n  })\r\n  return controlMap;\r\n}\r\n\r\nexport function formatDate(date, dateType) {\r\n  let d = new Date(date),\r\n    month = '' + (d.getMonth() + 1),\r\n    day = '' + d.getDate(),\r\n    year = '' + d.getFullYear(),\r\n    hour = '' + d.getHours(),\r\n    min = '' + d.getMinutes(),\r\n    sec = '' + d.getSeconds();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  if (hour.length < 2) hour = '0' + hour;\r\n  if (min.length < 2) min = '0' + min;\r\n  if (sec.length < 2) sec = '0' + sec;\r\n\r\n  return [year, month, day].join('-').concat(\" \" + hour + \":\" + min + \":\" + sec);\r\n\r\n  // if(dateType === \"dateonly\"){\r\n  //   return [year, month, day].join('-')\r\n  // }\r\n  // else if(dateType === \"timeonly\"){\r\n  //   return [hour + \":\" + min + \":\" + sec];\r\n  // }\r\n  // else{\r\n  //   return [year, month, day].join('-').concat(\" \" + hour + \":\" + min + \":\" + sec);\r\n  // }  \r\n}\r\n\r\nexport function getStartOfDay(date) {\r\n  date.setHours(0, 0, 0);\r\n  return formatDate(date);\r\n}\r\n\r\nexport function getEndOfDay(date) {\r\n  date.setHours(23, 59, 59);\r\n  return formatDate(date);\r\n}\r\n\r\nexport function getDateByMinutes(date, holdMinutes) {\r\n  const someDate = new Date(date);\r\n  const adjustedDate = new Date(someDate);\r\n  return adjustedDate.setMinutes(someDate.getMinutes() + holdMinutes);\r\n}\r\n\r\nexport function validateTwoDigitDate(value) {\r\n  if (value.length === 1) {\r\n    value = \"0\".concat(value);\r\n  }\r\n  return value;\r\n}\r\n\r\n// To provide esign rights for child Tabs\r\nexport function showEsignForChildTabs(itemMap, ncontrolcode) {\r\n  //  const controlList = itemMap[nformcode] ? Object.values(itemMap[nformcode]) : [];\r\n  const index = itemMap.findIndex(x => x.ncontrolcode === ncontrolcode);\r\n  return itemMap[index] && itemMap[index].nneedesign === 3 ? true : false;\r\n}\r\n\r\nexport function addDays(dateValue, daysToAdd) {\r\n  const copy = new Date(Number(dateValue))\r\n  copy.setDate(dateValue.getDate() + daysToAdd);\r\n  return copy;\r\n}\r\n\r\nexport function validatePhoneNumber(inputValue) {\r\n  let output = \"\";\r\n  // Get the regular expression to test against for this particular object\r\n  let regAllow = /^[0-9,',',\\n,\\s,[,\\], '+',-]+$/;\r\n  // Check for an allowed character, if not found, cancel the keypress's event bubbling\r\n  if (inputValue.match(regAllow)) {\r\n    // Do nothing, i.e. allow.\r\n    output = inputValue;\r\n  }\r\n  return output;\r\n}\r\n\r\nexport function validateDays(inputValue) {\r\n  let output = \"\";\r\n  let isTrue = false;\r\n  let regAllow = /^[+|-]?[0-9]+$/\r\n  if (inputValue.length > 1) {\r\n    const s = inputValue.substring(inputValue.length - 1)\r\n    if (s !== \"+\" && s !== \"-\") {\r\n      isTrue = regAllow.test(inputValue);\r\n    }\r\n  } else {\r\n    const s = inputValue.substring(inputValue.length - 1)\r\n    if (s !== \"+\" && s !== \"-\") {\r\n      isTrue = regAllow.test(inputValue);\r\n    } else {\r\n      isTrue = true\r\n    }\r\n  }\r\n  if (isTrue) {\r\n    output = inputValue;\r\n  }\r\n  return output;\r\n}\r\n\r\nexport function validateCreateView(inputValue) {\r\n  const regAllow = /^[a-z0-9_$]+$/\r\n  const regLagAllow =/[а-яЁё]/\r\n  const regStringAllow =/^[a-z]+$/\r\n  //  /[а-яЁё]/\r\n  //  /^[a-z]+$/\r\n //return  regStringAllow.test(inputValue[0]) ? regAllow.test(inputValue[inputValue.length-1]) ?\r\n // inputValue : \"\"  : regStringAllow.test(inputValue) ? inputValue : \"\";\r\n     return  regLagAllow.test(inputValue[inputValue.length-1]) ? \r\n     inputValue : regStringAllow.test(inputValue[inputValue.length-1]) ? inputValue : inputValue.length>1?regAllow.test(inputValue[inputValue.length-1])?inputValue: \"\":\"\";\r\n}\r\n\r\n\r\nexport function validateEmail(inputValue) {\r\n  let output = false;\r\n  //let regAllow = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  //checks for presence of '@', '.' and 2 characters after '.'\r\n  //let regAllow = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n  //let regAllow = /^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/g;\r\n\r\n  //A form with an email field that that must be in the following order: characters@characters.domain \r\n  //(characters followed by an @ sign, followed by more characters, and then a \".\". After the \".\" sign, you can only write 2 to 3 letters from a to z:\r\n  let regAllow = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  // Check for an allowed character, if not found, cancel the keypress's event bubbling\r\n  if (inputValue.match(regAllow)) {\r\n\r\n    // Do nothing, i.e. allow.\r\n    output = true;//inputValue;\r\n  }\r\n  return output;\r\n}\r\n\r\nexport function formatInputDate(date, includeMilliseconds) {\r\n  let formattedDate = \"\";\r\n  if (includeMilliseconds) {\r\n    formattedDate = date.getFullYear() + \"-\" +\r\n      (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" +\r\n      (\"00\" + date.getDate()).slice(-2) +\r\n      'T' +\r\n      (\"00\" + date.getHours()).slice(-2) + \":\" +\r\n      (\"00\" + date.getMinutes()).slice(-2) + \":\" +\r\n      (\"00\" + date.getSeconds()).slice(-2)\r\n      + \".\" +\r\n      (\"000\" + date.getMilliseconds()).slice(-3) + \"Z\";\r\n  }\r\n  else {\r\n    formattedDate = date.getFullYear() + \"-\" +\r\n      (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" +\r\n      (\"00\" + date.getDate()).slice(-2) +\r\n      'T' +\r\n      (\"00\" + date.getHours()).slice(-2) + \":\" +\r\n      (\"00\" + date.getMinutes()).slice(-2) + \":\" +\r\n      (\"00\" + date.getSeconds()).slice(-2) + \"Z\";\r\n  }\r\n  return formattedDate;\r\n}\r\n\r\nexport function formatInputDateWithoutT(date, includeMilliseconds) {\r\n  let formattedDate = \"\";\r\n  if (includeMilliseconds) {\r\n    formattedDate = date.getFullYear() + \"-\" +\r\n      (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" +\r\n      (\"00\" + date.getDate()).slice(-2) + \" \" +\r\n      (\"00\" + date.getHours()).slice(-2) + \":\" +\r\n      (\"00\" + date.getMinutes()).slice(-2) + \":\" +\r\n      (\"00\" + date.getSeconds()).slice(-2)\r\n      + \".\" +\r\n      (\"000\" + date.getMilliseconds()).slice(-3);\r\n  }\r\n  else {\r\n    formattedDate = date.getFullYear() + \"-\" +\r\n      (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\" +\r\n      (\"00\" + date.getDate()).slice(-2) + \" \" +\r\n      (\"00\" + date.getHours()).slice(-2) + \":\" +\r\n      (\"00\" + date.getMinutes()).slice(-2) + \":\" +\r\n      (\"00\" + date.getSeconds()).slice(-2);\r\n  }\r\n  return formattedDate;\r\n}\r\n\r\nexport function create_UUID() {\r\n  var dt = new Date().getTime();\r\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n    var r = (dt + Math.random() * 16) % 16 | 0;\r\n    dt = Math.floor(dt / 16);\r\n    return (c === 'x' ? r : (r && 0x3 | 0x8)).toString(16);\r\n  });\r\n  return uuid;\r\n}\r\n\r\n//added by perumalraj on 03/11/2020\r\n//compare two arrays of object and filter the record which are not present in the second array and vice versa\r\n// export function filterRecordBasedOnTwoArrays(firstArray, secondArray, PrimaryKey,SecondaryKey) {\r\n//   let filterArray;\r\n//     if(SecondaryKey !==undefined){\r\n//       filterArray = firstArray.filter(function (x) {\r\n//         return !secondArray.some(function (y) {\r\n//           //console.log(y)\r\n//           return x[PrimaryKey] === y[PrimaryKey] || x[SecondaryKey] === y[SecondaryKey]\r\n//         })\r\n//       });\r\n//     }else{\r\n//       filterArray = firstArray.filter(function (x) {\r\n//         return !secondArray.some(function (y) {\r\n//           //console.log(y)\r\n//           return x[PrimaryKey] === y[PrimaryKey]\r\n//         })\r\n//       });\r\n//     } \r\n//   return filterArray;\r\n// }\r\n\r\nexport function filterRecordBasedOnTwoArrays(firstArray, secondArray, PrimaryKey) {\r\n  const filterArray = firstArray.filter(function (x) {\r\n    return !secondArray.some(function (y) {\r\n      //console.log(y)\r\n      return x[PrimaryKey] === y[PrimaryKey]\r\n    })\r\n  });\r\n  return filterArray;\r\n}\r\n\r\nexport function listDataFromDynamicArray(arr, indexvalue) {\r\n  return arr && arr.filter(x => x[indexvalue]);\r\n}\r\n\r\n// export const fileViewURL = 'http://192.168.0.79:8097/';\r\n\r\n//Added by P.Sudharshanan\r\nexport function replaceUpdatedObject(newList, oldList, primaryKey) {\r\n  newList && newList.length > 0 && newList.map(newlistItem => {\r\n    let oldIndex = oldList ? oldList.findIndex(x => x[primaryKey] === newlistItem[primaryKey]) : -1\r\n    oldList.splice(oldIndex, 1, newlistItem)\r\n    return null;\r\n  })\r\n  return oldList;\r\n}\r\n//added by perumalraj for insert newly added element into an array\r\nexport function updatedObjectWithNewElement(oldList, newList,name) {\r\n let newlistItem=newList;\r\nif(name==='Sample'){\r\n newlistItem.map((item,index)=>{\r\n  if(oldList[0].npreregno===item.npreregno){\r\n    newlistItem.splice(index,1)\r\n   // [newFirstElement].concat(array)\r\n   }\r\n  })\r\n  newlistItem.unshift(oldList[0]);\r\n  oldList =[...newlistItem];\r\n}else {\r\n oldList =[...newlistItem, ...oldList];\r\n}\r\n  return oldList;\r\n}\r\n//added by perumalraj for replace the old values wih new one into an array\r\nexport function replaceObjectWithNewElement(oldList) {\r\n  oldList = [...oldList];\r\n  return oldList;\r\n}\r\n\r\n//Added by L.Subashini to find the index positions nf the occurence of the specified character\r\n// export const findIndices = (str, char) =>\r\n//   str.split('').reduce((indices, letter, index) => {\r\n//     letter === char && indices.push(index);\r\n//     return indices;\r\n//   }, [])\r\n\r\n//added by perumalraj on 23/12/2020\r\n//compare two arrays of object and filter the record which are not present in the second array and vice versa\r\nexport function filterStatusBasedOnTwoArrays(firstArray, secondArray, PrimaryKey, colorColName) {\r\n  // const Peru = Object.keys(Array2).map(function (k) { return Array2[k][PrimaryKey] }).join(\",\");\r\n  // alert(Peru);\r\n  //const TestSet = new Set(Peru);\r\n  // const FinalOutput = [\r\n  //   ...Array1.filter(({ PrimaryKey }) => !TestSet.has(PrimaryKey))\r\n  // ];\r\n  // Array1 = Array1.filter(val => !Array2.includes(val[PrimaryKey]));\r\n  // alert(Array1)\r\n  // return Array1;\r\n  const filterArray = firstArray.filter(function (x) {\r\n    return secondArray.some(function (y) {\r\n      if (x[PrimaryKey] === y[PrimaryKey]) {\r\n        x[colorColName] = y[colorColName];\r\n      }\r\n      return x[PrimaryKey] === y[PrimaryKey]\r\n    })\r\n  });\r\n  return filterArray;\r\n}\r\n\r\nexport function constructOptionList(options, optionId,\r\n  optionValue, sortField, sortOrder, alphabeticalSort,\r\n  defaultStatusFieldName) {\r\n  const optionMap = new Map();\r\n  const defaultValue = [];\r\n  const defaultStatus = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\";\r\n  const optionList = Object.values((sortField ? ((sortOrder === \"ascending\" ?\r\n    options.sort((itemA, itemB) => itemA[sortField] < itemB[sortField] ? -1 : 1)\r\n    : options.sort((itemA, itemB) => itemA[sortField] > itemB[sortField] ? -1 : 1))\r\n  )\r\n    : (alphabeticalSort ?\r\n      options.sort((itemA, itemB) =>\r\n      (typeof (itemA[optionValue]) === 'string' ?\r\n        itemA[optionValue].toLowerCase() < itemB[optionValue].toLowerCase() ?\r\n          -1 : 1 : itemA[optionValue] < itemB[optionValue] ? -1 : 1)) : options)\r\n  )\r\n  ).map(item => {\r\n    if (item && item[defaultStatus] === transactionStatus.YES) {\r\n      (defaultValue.push(\r\n        {\r\n          label: item[optionValue], value: item[optionId],\r\n          item: item\r\n        }\r\n      ))\r\n    }\r\n    return {\r\n      label: item[optionValue], value: item[optionId],\r\n      item: item\r\n    }\r\n  });\r\n  optionMap.set(\"OptionList\", optionList);\r\n  if (defaultValue.length > 0) {\r\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\r\n  }\r\n  return optionMap;\r\n}\r\n\r\nexport function constructjsonOptionList(options,\r\n  optionId, optionValue, sortField, sortOrder,\r\n  alphabeticalSort, defaultStatusFieldName,\r\n  source, isMultiLingual, languageTypeCode, column) {\r\n  const optionMap = new Map();\r\n  const defaultValue = [];\r\n  defaultStatusFieldName = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\";\r\n  // const optionList = Object.values((sortField ? ((sortOrder === \"ascending\" ?\r\n  //   options.sort((itemA, itemB) =>\r\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemA[source][sortField] <\r\n  //       itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\r\n  //   )\r\n\r\n  //   :\r\n  //   options = options.sort((itemA, itemB) =>\r\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\r\n  //   )\r\n  // ))\r\n  //   : (alphabeticalSort ?\r\n  //     options.sort((itemA, itemB) =>\r\n  //     (typeof (JSON.parse(itemA[source].value)[optionValue]) === 'string' ?\r\n  //       JSON.parse(itemA[source].value)[optionValue].toLowerCase() < JSON.parse(itemB[source].value)[optionValue].toLowerCase() ?\r\n  //         -1 : 1 : JSON.parse(itemA[source].value)[optionValue] < JSON.parse(itemB[source].value)[optionValue] ? -1 : 1)) : options)\r\n  // )\r\n  // )\r\n  const optionList = options.map(item => {\r\n    const jsondata = item[source] ? item[source].value ?\r\n      JSON.parse(item[source].value) : item.jsondata : item.jsondata\r\n    let defaultStatus = jsondata[defaultStatusFieldName]\r\n      || item[defaultStatusFieldName]\r\n    if (defaultStatus === transactionStatus.YES) {\r\n      defaultValue.push({\r\n        label: isMultiLingual ?\r\n          jsondata[optionValue] ? jsondata[optionValue][languageTypeCode] || jsondata[optionValue]['en-US'] :\r\n            jsondata['jsondata'][optionValue][languageTypeCode] || jsondata['jsondata'][optionValue]['en-US'] :\r\n          jsondata[optionValue],\r\n        value: jsondata[optionId],\r\n        item: {\r\n          ...item, pkey: optionId,\r\n          nquerybuildertablecode: column ? column.nquerybuildertablecode : -100,\r\n          source: source\r\n        }\r\n      })\r\n    }\r\n    let label = isMultiLingual ?\r\n      jsondata[optionValue] ? jsondata[optionValue][languageTypeCode] || jsondata[optionValue]['en-US'] :\r\n        jsondata['jsondata'][optionValue][languageTypeCode] || jsondata['jsondata'][optionValue]['en-US'] :\r\n      jsondata[optionValue];\r\n    let value = jsondata[optionId] || item[optionId]\r\n    return {\r\n      label, value, item: {\r\n        ...item, pkey: optionId, nquerybuildertablecode: column ? column.nquerybuildertablecode : -100,\r\n        source: source\r\n      }\r\n    }\r\n  });\r\n  optionMap.set(\"OptionList\", optionList);\r\n  if (defaultValue.length > 0) {\r\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\r\n  }\r\n  return optionMap;\r\n}\r\n\r\n\r\nexport function constructjsonOptionDefault(options,\r\n  optionId, optionValue, sortField, sortOrder,\r\n  alphabeticalSort, defaultStatusFieldName,\r\n  source, isMultiLingual, languageTypeCode, column) {\r\n  const optionMap = new Map();\r\n  const defaultValue = [];\r\n  defaultStatusFieldName = defaultStatusFieldName ? defaultStatusFieldName : \"ndefaultstatus\";\r\n  // const optionList = Object.values((sortField ? ((sortOrder === \"ascending\" ?\r\n  //   options.sort((itemA, itemB) =>\r\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemA[source][sortField] <\r\n  //       itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\r\n  //   )\r\n\r\n  //   :\r\n  //   options = options.sort((itemA, itemB) =>\r\n  //     itemA[source].value ? JSON.parse(itemA[source].value)[sortField] : itemB[source].value ? JSON.parse(itemB[source].value)[sortField] : itemB[source][sortField] ? -1 : 1\r\n  //   )\r\n  // ))\r\n  //   : (alphabeticalSort ?\r\n  //     options.sort((itemA, itemB) =>\r\n  //     (typeof (JSON.parse(itemA[source].value)[optionValue]) === 'string' ?\r\n  //       JSON.parse(itemA[source].value)[optionValue].toLowerCase() < JSON.parse(itemB[source].value)[optionValue].toLowerCase() ?\r\n  //         -1 : 1 : JSON.parse(itemA[source].value)[optionValue] < JSON.parse(itemB[source].value)[optionValue] ? -1 : 1)) : options)\r\n  // )\r\n  // )\r\n  const optionList = options.map(item => {\r\n    const jsondata = item[source] ? item[source].value ?\r\n      JSON.parse(item[source].value) : item.item.jsondata : item.item.jsondata\r\n    let defaultStatus = jsondata[defaultStatusFieldName]\r\n      || item[defaultStatusFieldName]\r\n    if (defaultStatus === transactionStatus.YES) {\r\n      defaultValue.push({\r\n        label: isMultiLingual ?\r\n          jsondata[optionValue] ? jsondata[optionValue][languageTypeCode] : jsondata['jsondata'][optionValue][languageTypeCode] :\r\n          jsondata[optionValue],\r\n        value: jsondata[optionId],\r\n        //ALPD-2106\r\n        item: { ...item.item, pkey: optionId, nquerybuildertablecode: column ? column.nquerybuildertablecode : -100, source: source }\r\n      })\r\n    }\r\n  });\r\n  //optionMap.set(\"OptionList\", optionList);\r\n  if (defaultValue.length > 0) {\r\n    optionMap.set(\"DefaultValue\", defaultValue[0]);\r\n  }\r\n  return optionMap;\r\n}\r\n\r\n\r\nexport function validateLoginId(inputValue) {\r\n  let output = false;\r\n  //let regAllow = /^\\w+(\\w+)*$/;\r\n  let regAllow = /^[a-zA-Z0-9-_]*$/;\r\n  //let regAllow = /^[a-zA-Z0-9!@#\\$%\\^\\&*\\)\\(+=._-]+$/g;\r\n  if (inputValue.match(regAllow)) {\r\n    output = true;\r\n  }\r\n  return output;\r\n}\r\n\r\n//added by perumalraj on 02-02-2021 for single click java function in list master view and \r\nexport function fillRecordBasedOnCheckBoxSelection(masterData, backEndResponse, mapKeys, CheckBoxOperation, primaryKeyName, removeElementFromArray) {\r\n  if (CheckBoxOperation === 1) {  //check box select\r\n    mapKeys.forEach((item) => {\r\n      return masterData[item] = updatedObjectWithNewElement(masterData[item] ? masterData[item] : [], backEndResponse[item] ? backEndResponse[item] : []);\r\n      //return masterData[item] = replaceOnlyNewList(backEndResponse[item] ? backEndResponse[item] : []);\r\n    });\r\n  } else if (CheckBoxOperation === 2) {  //check box de-select\r\n    mapKeys.forEach((item) => {\r\n      return masterData[item] = filterRecordBasedOnPrimaryKeyName(masterData[item] ? masterData[item] : [], removeElementFromArray.length > 0 && removeElementFromArray[0][primaryKeyName] ? removeElementFromArray[0][primaryKeyName] : \"\", primaryKeyName);\r\n    });\r\n  } else if (CheckBoxOperation === 3) {  //single select\r\n    mapKeys.forEach((item) => {\r\n      return masterData[item] = replaceObjectWithNewElement(backEndResponse[item] ? backEndResponse[item] : []);\r\n    })\r\n  } else if (CheckBoxOperation === 4) {  //single de-select\r\n    mapKeys.forEach((item) => {\r\n      return masterData[item] = getRecordBasedOnPrimaryKeyName(masterData[item] ? masterData[item] : [], backEndResponse.length > 0 && backEndResponse[0][primaryKeyName] ? backEndResponse[0][primaryKeyName] : \"\", primaryKeyName);\r\n    });\r\n\r\n    // return masterData[item] = replaceObjectWithNewElement(masterData[item] ? masterData[item] : [], backEndResponse[item] ? backEndResponse[item] : []);\r\n  } else if (CheckBoxOperation === 5) {  //after multi select and then click single record\r\n    mapKeys.forEach((item) => {\r\n      let filteredmasterData = filterRecordBasedOnTwoArrays(masterData[item] ? masterData[item] : [], removeElementFromArray, primaryKeyName);\r\n      return masterData[item] = updatedObjectWithNewElement(filteredmasterData, backEndResponse[item] ? backEndResponse[item] : []);\r\n    });\r\n  } else if (CheckBoxOperation === 6) {  //after multi select and then click single record\r\n    mapKeys.forEach((item) => {\r\n      filterRecordBasedOnTwoArrays(masterData[item] ? masterData[item] : [], removeElementFromArray, primaryKeyName);\r\n      return masterData[item] = getSameRecordFromTwoArrays(masterData[item] ? masterData[item] : [], backEndResponse ? backEndResponse : [], primaryKeyName);\r\n    });\r\n  }\r\n  else if (CheckBoxOperation === 7) {  //check box select\r\n    mapKeys.forEach((item) => {\r\n      //return masterData[item] = updatedObjectWithNewElement(masterData[item] ? masterData[item] : [], backEndResponse[item] ? backEndResponse[item] : []);\r\n      return masterData[item] = replaceOnlyNewList(backEndResponse[item] ? backEndResponse[item] : []);\r\n    });\r\n  } else {\r\n    Object.keys(backEndResponse).forEach((item) => {\r\n      return masterData[item] = backEndResponse[item]\r\n    })\r\n  }\r\n}\r\n//added by Sathish on 06-04-2022\r\nexport function reArrangeArrays(firstArray, secondArray, PrimaryKey) {\r\n  let filterArray = [];\r\n  for (var i = 0; i < firstArray.length; i++) {\r\n    for (var j = 0; j < secondArray.length; j++) {\r\n      if (firstArray[i][PrimaryKey] == secondArray[j][PrimaryKey]) {\r\n        filterArray.push(secondArray[j]);\r\n      }\r\n    }\r\n  }\r\n  return filterArray;\r\n}\r\n\r\n//added by Sathish on 31-03-2022\r\nexport function replaceOnlyNewList(newList) {\r\n  const array = [];\r\n  array.push(...newList);\r\n  return array;\r\n}\r\n\r\n//added by perumalraj on 02-02-2021\r\nexport function filterRecordBasedOnPrimaryKeyName(masterData, value, primaryKeyName) {\r\n  const finalValueAfterFilter = masterData.filter(function (master) {\r\n    return master[primaryKeyName] !== value;\r\n  });\r\n  return finalValueAfterFilter;\r\n}\r\n\r\n//added by perumalraj on 02-02-2021\r\nexport function getRecordBasedOnPrimaryKeyName(masterData, value, primaryKeyName) {\r\n  const finalValueAfterFilter = masterData.filter(function (master) {\r\n    return master[primaryKeyName] === value;\r\n  });\r\n  return finalValueAfterFilter;\r\n}\r\n\r\n//added by perumalraj on 06/02/2021\r\n//compare two arrays of object and filter the record which are not present in the second array and first array data will be \r\n//returned with the filtered data\r\n// export function getSameRecordFromTwoArrays(firstArray, secondArray, PrimaryKey) {\r\n//   const filterArray = firstArray.filter(function (x) {\r\n//     if (Array.isArray(secondArray)) {\r\n//       return secondArray.some(function (y) {\r\n//         return x[PrimaryKey] === y[PrimaryKey]\r\n//       })\r\n//     }\r\n//   });\r\n//   return filterArray;\r\n\r\n// }\r\n\r\nexport function getSameRecordFromTwoArrays(firstArray, secondArray, PrimaryKey, SecondaryKey) {\r\n  let filterArray;\r\n  if (SecondaryKey !== undefined) {\r\n    filterArray = firstArray.filter(function (x) {\r\n      if (Array.isArray(secondArray)) {\r\n        return secondArray.some(function (y) {\r\n          return x[PrimaryKey] === y[PrimaryKey] && x[SecondaryKey] === y[SecondaryKey]\r\n        })\r\n      }\r\n    });\r\n  } else {\r\n    filterArray = firstArray.filter(function (x) {\r\n      if (Array.isArray(secondArray)) {\r\n        return secondArray.some(function (y) {\r\n          return x[PrimaryKey] === y[PrimaryKey]\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  return filterArray;\r\n\r\n}\r\n\r\n//added by perumalraj on 16-02-2021\r\n//compare two arrays and remove the same element and add the newer one into it\r\nexport function getRemovedRecordAndAddNewRecord(firstArray, secondArray, ElementToSearch, PrimaryKey) {\r\n  ElementToSearch.forEach(item => {\r\n    let itemAfterfilter = filterRecordBasedOnPrimaryKeyName(firstArray, item, PrimaryKey);\r\n    firstArray = itemAfterfilter;\r\n  });\r\n  return updatedObjectWithNewElement(firstArray, secondArray);\r\n}\r\n\r\nexport function bytesToSize(bytes) {\r\n  if (!isNaN(parseInt(bytes))) {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n  } else {\r\n    return bytes;\r\n  }\r\n}\r\n\r\nexport function onDropAttachFileList(selectedRecord, attachedFiles, maxSize) {\r\n  if (selectedRecord) {\r\n    let listFile = selectedRecord ? selectedRecord : []\r\n    if (listFile.length + attachedFiles.length <= maxSize || maxSize === 0) {\r\n      attachedFiles && attachedFiles.length > 0 && attachedFiles.map(newlistItem => {\r\n        let oldIndex = listFile ? listFile.findIndex(x => x['name'] === newlistItem['name']) : -1\r\n        if (oldIndex === -1) {\r\n          listFile.splice(listFile.length, 0, newlistItem)\r\n        } else {\r\n          listFile.splice(oldIndex, 1, newlistItem)\r\n        }\r\n        return null;\r\n      })\r\n      return listFile;\r\n    }\r\n    return attachedFiles;\r\n  } else {\r\n    return attachedFiles;\r\n  }\r\n}\r\n\r\nexport function deleteAttachmentDropZone(selectedRecord, file) {\r\n  let remainingList;\r\n  if (typeof selectedRecord === \"string\") {\r\n    remainingList = \"\";\r\n  }\r\n  else {\r\n    if (selectedRecord.length >= 1) {\r\n      const fileList = selectedRecord.filter(fileItem => {\r\n        return fileItem.name !== file.name\r\n      })\r\n      remainingList = fileList;\r\n    }\r\n    else {\r\n      remainingList = \"\";\r\n    }\r\n  }\r\n  return remainingList;\r\n}\r\n\r\nexport function checkCancelAndReject(sample) {\r\n  return (sample.ntransactionstatus === transactionStatus.CANCELLED || sample.ntransactionstatus === transactionStatus.REJECT)\r\n}\r\n\r\nexport function covertDatetoString(newDate) {\r\n  const startDate = new Date(newDate);\r\n  const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n  const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n  const fromDate = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n  return fromDate;\r\n}\r\n\r\nexport function convertDatetoStringByTimeZone(userInfo, value) {\r\n\r\n  const dateValue = new Date(value);\r\n  const prevMonth = validateTwoDigitDate(String(dateValue.getMonth() + 1));\r\n  const prevDay = validateTwoDigitDate(String(dateValue.getDate()));\r\n  const dateArray = [];\r\n\r\n  const splitChar = getSplitCharacter(userInfo);\r\n  const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n  const secondField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[1];\r\n\r\n  if (firstField === \"dd\") {\r\n    dateArray.push(prevDay);\r\n    dateArray.push(splitChar);\r\n    if (secondField === \"MM\") {\r\n      dateArray.push(prevMonth);\r\n      dateArray.push(splitChar);\r\n      dateArray.push(dateValue.getFullYear());\r\n    }\r\n    else {\r\n      dateArray.push(dateValue.getFullYear());\r\n      dateArray.push(splitChar);\r\n      dateArray.push(prevMonth);\r\n    }\r\n  }\r\n  else if (firstField === \"MM\") {\r\n    dateArray.push(prevMonth);\r\n    dateArray.push(splitChar);\r\n    if (secondField === \"dd\") {\r\n      dateArray.push(prevDay);\r\n      dateArray.push(splitChar);\r\n      dateArray.push(dateValue.getFullYear());\r\n    }\r\n    else {\r\n      dateArray.push(dateValue.getFullYear());\r\n      dateArray.push(splitChar);\r\n      dateArray.push(prevDay);\r\n    }\r\n  }\r\n  else {\r\n    dateArray.push(dateValue.getFullYear());\r\n    dateArray.push(splitChar);\r\n    if (secondField === \"dd\") {\r\n      dateArray.push(prevDay);\r\n      dateArray.push(splitChar);\r\n      dateArray.push(prevMonth);\r\n    }\r\n    else {\r\n      dateArray.push(prevMonth);\r\n      dateArray.push(splitChar);\r\n      dateArray.push(prevDay);\r\n    }\r\n  }\r\n  return dateArray;\r\n}\r\n\r\nexport function convertDateValuetoString(startDateValue, endDateValue, userInfo, noBreadCrumb) {\r\n\r\n  const startDate = startDateValue ? rearrangeDateFormat(userInfo, startDateValue) : new Date();\r\n  const endDate = endDateValue ? rearrangeDateFormat(userInfo, endDateValue) : new Date();\r\n\r\n  // const startDate = startDateValue ? new Date(startDateValue) : new Date();\r\n  // const endDate = endDateValue ? new Date(endDateValue) : new Date();\r\n\r\n  const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n  const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n  const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n  const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n  //const splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n  const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay;\r\n  const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay;\r\n  const fromDate = fromDateOnly + \"T00:00:00\";\r\n  const toDate = toDateOnly + \"T23:59:59\";\r\n\r\n  if (noBreadCrumb) {\r\n    return ({ fromDate, toDate });\r\n  }\r\n  else {\r\n    const breadCrumbFrom = convertDatetoStringByTimeZone(userInfo, startDate);//startDate.getFullYear() + splitChar + prevMonth + splitChar + prevDay;\r\n    const breadCrumbto = convertDatetoStringByTimeZone(userInfo, endDate);//endDate.getFullYear() + splitChar + currentMonth + splitChar + currentDay;\r\n\r\n    return ({ fromDate, toDate, breadCrumbFrom, breadCrumbto });\r\n  }\r\n\r\n}\r\n\r\nexport function getSplitCharacter(userInfo) {\r\n  const specialChars = `\\`_-\\[\\]'\"\\\\|,.\\/`\r\n  let splitChar = '';\r\n  userInfo.ssitedatetime\r\n    && userInfo.ssitedatetime.split('').some(word => {\r\n      if (splitChar === undefined || splitChar === '') {\r\n        if (specialChars.includes(word)) {\r\n          splitChar = word;\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n  specialChars.split('').some(specialChar => {\r\n    if (splitChar === undefined || splitChar === '') {\r\n      userInfo.ssitedatetime && userInfo.ssitedatetime.split('').some(word => {\r\n        if (splitChar === undefined || splitChar === '') {\r\n          if (word.includes(specialChar)) {\r\n            splitChar = word;\r\n          }\r\n        }\r\n      })\r\n    }\r\n  });\r\n  return splitChar;\r\n}\r\n\r\nexport function rearrangeDateFormat(userInfo, dateValue) {\r\n\r\n  // let splitChar = userInfo.ssitedatetime \r\n  // && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n\r\n  let splitChar = getSplitCharacter(userInfo);\r\n\r\n  //   console.log(\"splitChar:\", splitChar);\r\n  if (typeof dateValue === \"string\") {//(splitChar === \"/\" || splitChar === \"-\") &&\r\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n    // console.log(\"firstField:\", firstField);\r\n    const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \"\r\n    const datetime = dateValue.split(timeSplitChar);\r\n    const dateArray = datetime[0].split(splitChar);\r\n    if (firstField === \"dd\") {\r\n      const day = dateArray[0];\r\n      const month = dateArray[1];\r\n      const year = dateArray[2];\r\n      const time = datetime[1] || \"00:00:00\";\r\n\r\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n      return new Date(formatted);\r\n    }\r\n    else if (firstField === \"yyyy\") {\r\n      const year = dateArray[0];\r\n      const month = dateArray[1];\r\n      const day = dateArray[2];\r\n      const time = datetime[1] || \"00:00:00\";\r\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n      return new Date(formatted);\r\n    }\r\n    else {\r\n      return new Date(dateValue);\r\n    }\r\n  }\r\n  else {\r\n    return dateValue;\r\n  }\r\n}\r\n\r\nexport function rearrangeDateFormatforUI(userInfo, dateValue) {\r\n\r\n  let splitChar = \"-\";\r\n  //   console.log(\"splitChar:\", splitChar);\r\n  if (typeof dateValue === \"string\") {//(splitChar === \"/\" || splitChar === \"-\") &&\r\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n    // console.log(\"firstField:\", firstField);\r\n    const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \"\r\n    const datetime = dateValue.split(timeSplitChar);\r\n    const dateArray = datetime[0].split(splitChar);\r\n    if (firstField === \"dd\") {\r\n      const day = dateArray[0];\r\n      const month = dateArray[1];\r\n      const year = dateArray[2];\r\n      const time = datetime[1] || \"00:00:00\";\r\n\r\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n      return new Date(formatted);\r\n    }\r\n    else if (firstField === \"yyyy\") {\r\n      const year = dateArray[0];\r\n      const month = dateArray[1];\r\n      const day = dateArray[2];\r\n      const time = datetime[1] || \"00:00:00\";\r\n      const formatted = year + \"-\" + month + \"-\" + day + \"T\" + time;\r\n      return new Date(formatted);\r\n    }\r\n    else {\r\n      return new Date(dateValue);\r\n    }\r\n  }\r\n  else {\r\n    return dateValue;\r\n  }\r\n}\r\n\r\nexport function convertUTCDateToLocalDate(date) {\r\n  var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\r\n\r\n  var offset = date.getTimezoneOffset() / 60;\r\n  var hours = date.getHours();\r\n\r\n  newDate.setHours(hours - offset);\r\n\r\n  return newDate;\r\n}\r\n\r\nexport function convertDateTimetoString(inputDate, userInfo) {\r\n\r\n  // let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n\r\n  const specialChars = `\\`_-\\[\\]'\"\\\\|,.\\/`\r\n  let splitChar = '';\r\n  userInfo.ssitedatetime\r\n    && userInfo.ssitedatetime.split('').some(word => {\r\n      if (splitChar === undefined || splitChar === '') {\r\n        if (specialChars.includes(word)) {\r\n          splitChar = word;\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n  const month = validateTwoDigitDate(String(inputDate.getMonth() + 1));\r\n  const day = validateTwoDigitDate(String(inputDate.getDate()));\r\n  const year = inputDate.getFullYear();\r\n  const hours = validateTwoDigitDate(String(inputDate.getHours()));\r\n  const minutes = validateTwoDigitDate(String(inputDate.getMinutes()));\r\n  const seconds = validateTwoDigitDate(String(inputDate.getSeconds()));\r\n\r\n  //if (splitChar === \"/\" || splitChar === \"-\") {\r\n  const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n  if (firstField === \"dd\") {\r\n    return day + splitChar + month + splitChar + year + \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n  } else if (firstField === \"yyyy\") {\r\n    return year + splitChar + month + splitChar + day + \"T\" + hours + \":\" + minutes + \":\" + seconds;\r\n  } else {\r\n    return new Date(inputDate);\r\n  }\r\n  // } else {\r\n  //   return inputDate;\r\n  // }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function convertDateTimetoStringDBFormat(inputDate, userInfo) {\r\n\r\n  // let splitChar = userInfo.ssitedatetime &&\r\n  //   userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n\r\n  const specialChars = `\\`_-\\[\\]'\"\\\\|,.\\/`\r\n  let splitChar = '';\r\n  userInfo.ssitedatetime\r\n    && userInfo.ssitedatetime.split('').some(word => {\r\n      if (splitChar === undefined || splitChar === '') {\r\n        if (specialChars.includes(word)) {\r\n          splitChar = word;\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n  let dbformat = \"-\"\r\n\r\n  const month = validateTwoDigitDate(String(inputDate.getMonth() + 1));\r\n  const day = validateTwoDigitDate(String(inputDate.getDate()));\r\n  const year = inputDate.getFullYear();\r\n  const hours = validateTwoDigitDate(String(inputDate.getHours()));\r\n  const minutes = validateTwoDigitDate(String(inputDate.getMinutes()));\r\n  const seconds = validateTwoDigitDate(String(inputDate.getSeconds()));\r\n\r\n  // if (splitChar === \"/\" || splitChar === \"-\") {\r\n  const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n  if (firstField === \"dd\") {\r\n    return year + dbformat + month + dbformat + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n  } else if (firstField === \"yyyy\") {\r\n    return year + dbformat + month + dbformat + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n  } else {\r\n    return new Date(inputDate);\r\n  }\r\n  // } else {\r\n  //   return inputDate;\r\n  // }\r\n}\r\n\r\n\r\n\r\nexport function parentChildComboLoad(columnList, comboData, selectedRecord,\r\n  childColumnList, withoutCombocomponent, ParentComboValues,\r\n  languagetypeCode, userinfo, comboComponents) {\r\n  //console.log(\"columnList:\", columnList);\r\n  let comboValues = {}\r\n  if (columnList.length > 0) {\r\n    columnList.map((x, index) => {\r\n      if (x.inputtype === 'combo' && (x.readonly === undefined || x.readonly === false)) {\r\n        if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n        {\r\n          selectedRecord[x.label] = undefined;\r\n          if (comboData[x.label].length > 0) {\r\n            if (comboData[x.label][0].label === undefined) {\r\n              const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n              comboData[x.label] = optionList.get(\"OptionList\");\r\n              if (optionList.get(\"DefaultValue\") !== undefined) {\r\n                selectedRecord[x.label] = optionList.get(\"DefaultValue\")\r\n              }\r\n            } else {\r\n              comboData[x.label] = comboData[x.label]\r\n              const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode, x)\r\n              if (optionList.get(\"DefaultValue\") !== undefined) {\r\n                selectedRecord[x.label] = optionList.get(\"DefaultValue\")\r\n              }\r\n            }\r\n          } else {\r\n            comboData[x.label] = []\r\n          }\r\n          comboValues = childComboLoad(x, comboData, selectedRecord, childColumnList,\r\n            withoutCombocomponent, languagetypeCode, userinfo, selectedRecord[x.label])\r\n        } else {\r\n          selectedRecord[x.label] = undefined\r\n\r\n          comboValues = childComboLoad(x, comboData, selectedRecord, childColumnList,\r\n            withoutCombocomponent, languagetypeCode, userinfo, selectedRecord[x.label])\r\n\r\n          //   comboValues = {\r\n          //   \"comboData\": comboData,\r\n          //   \"selectedRecord\": selectedRecord\r\n          // }\r\n        }\r\n      } else if (x.inputtype === 'combo' && x.readonly === true) {\r\n        selectedRecord = {\r\n          ...selectedRecord,\r\n          [x.label]: {\r\n            label: ParentComboValues.item.jsondata ?\r\n              ParentComboValues.item.jsondata[x.displaymember] :\r\n              ParentComboValues.item[x.displaymember] || \"\",\r\n            value: ParentComboValues.item.jsondata ?\r\n              ParentComboValues.item.jsondata[x.valuemember] :\r\n              ParentComboValues.item[x.valuemember] || -1\r\n          }\r\n        }\r\n\r\n        comboValues = {\r\n          comboData: comboData,\r\n          ...comboValues,\r\n          selectedRecord\r\n        }\r\n      }\r\n      else {\r\n        if (x.isMultiLingual) {\r\n          selectedRecord = {\r\n            ...selectedRecord,\r\n            [x.label]: ParentComboValues.item.jsondata ?\r\n              ParentComboValues.item.jsondata[x.displaymember][languagetypeCode] : ParentComboValues.item[x.displaymember][languagetypeCode] || \"\"\r\n          }\r\n        } else {\r\n          if (x.inputtype === \"date\") {\r\n            selectedRecord = {\r\n              ...selectedRecord,\r\n              [x.label]: ParentComboValues.item.jsondata ?\r\n                rearrangeDateFormatforKendoDataTool(userinfo, ParentComboValues.item.jsondata[x.displaymember]) :\r\n                rearrangeDateFormatforKendoDataTool(userinfo, ParentComboValues.item[x.displaymember])\r\n            }\r\n\r\n            if (x.child) {\r\n              const Age = withoutCombocomponent.filter(x => x.name === 'Age');\r\n              x.child.map(k => {\r\n                if (k.label === Age[0].label) {\r\n                  const age = ageCalculate(selectedRecord[x.label]);\r\n\r\n                  selectedRecord[Age[0].label] = age\r\n                }\r\n              })\r\n            }\r\n\r\n          } else {\r\n            selectedRecord = {\r\n              ...selectedRecord,\r\n              [x.label]: ParentComboValues.item.jsondata ?\r\n                ParentComboValues.item.jsondata[x.displaymember] :\r\n                ParentComboValues.item[x.displaymember] || \"\"\r\n            }\r\n          }\r\n\r\n        }\r\n        comboValues = {\r\n          comboData: comboData,\r\n          ...comboValues,\r\n          selectedRecord\r\n        }\r\n        // comboValues[\"selectedRecord\"][x.label] = ParentComboValues[x.displaymember] ||\"\"\r\n      }\r\n    })\r\n  }\r\n  else {\r\n    comboValues = {\r\n      \"comboData\": comboData,\r\n      \"selectedRecord\": selectedRecord\r\n    }\r\n  }\r\n\r\n  return comboValues;\r\n}\r\n\r\n\r\nexport function childComboLoad(x, comboData, selectedRecord, childColumnList,\r\n  withoutCombocomponent, languagetypeCode, userinfo, ParentComboValues) {\r\n  if (selectedRecord[x.label] !== undefined) {\r\n    if (x.hasOwnProperty(\"child\")) {\r\n      x.child.map(y => {\r\n        const index = childColumnList[x.label].findIndex(z => z.label === y.label)\r\n        if (index !== -1) {\r\n          if (childColumnList[x.label][index].inputtype === 'combo' && childColumnList[x.label][index].readonly === true) {\r\n            selectedRecord = {\r\n              ...selectedRecord,\r\n              [childColumnList[x.label][index].label]: {\r\n                label: ParentComboValues.item.jsondata ?\r\n                  ParentComboValues.item.jsondata[childColumnList[x.label][index].displaymember] :\r\n                  ParentComboValues.item[childColumnList[x.label][index].displaymember] || \"\",\r\n                value: ParentComboValues.item.jsondata ?\r\n                  ParentComboValues.item.jsondata[childColumnList[x.label][index].valuemember] :\r\n                  ParentComboValues.item[childColumnList[x.label][index].valuemember] || -1\r\n              }\r\n            }\r\n          }\r\n          else if (comboData[y.label] && comboData[y.label].length > 0) {\r\n            if (comboData[y.label][0].label === undefined) {\r\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember,\r\n                childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode, y)\r\n              comboData[y.label] = optionChildList.get(\"OptionList\");\r\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\r\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\")\r\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label])\r\n                selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n                comboData = { ...comboData, ...newRecord1.comboData }\r\n\r\n              } else {\r\n                selectedRecord[y.label] = undefined\r\n              }\r\n            } else {\r\n              //below code need to be veriifed for 'x' to be replced with 'y' or viceversa?\r\n              comboData[y.label] = comboData[y.label]\r\n              const optionChildList = constructjsonOptionDefault(comboData[y.label] || [], childColumnList[x.label][index].valuemember,\r\n                childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, undefined, undefined, y)\r\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\r\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\")\r\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label])\r\n                selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n                comboData = { ...comboData, ...newRecord1.comboData }\r\n\r\n              } else {\r\n                selectedRecord[y.label] = undefined\r\n              }\r\n            }\r\n          } else {\r\n            selectedRecord[y.label] = undefined\r\n            comboData[y.label] = []\r\n            const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label])\r\n            selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n            comboData = { ...comboData, ...newRecord1.comboData }\r\n          }\r\n        } else {\r\n          const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\r\n          if (readonlyfields !== -1) {\r\n\r\n            if (withoutCombocomponent[readonlyfields][\"isMultiLingual\"]) {\r\n              selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ?\r\n                selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode]\r\n            } else {\r\n              if (withoutCombocomponent[readonlyfields][\"inputtype\"] === \"date\") {\r\n                selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ?\r\n                  rearrangeDateFormatforKendoDataTool(userinfo, selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]]) :\r\n                  rearrangeDateFormatforKendoDataTool(userinfo, selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]])\r\n\r\n                if (withoutCombocomponent[readonlyfields].child) {\r\n                  const Age = withoutCombocomponent.filter(x => x.name === 'Age');\r\n                  withoutCombocomponent[readonlyfields].child.map(k => {\r\n                    if (k.label === Age[0].label) {\r\n                      const age = ageCalculate(selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]]);\r\n\r\n                      selectedRecord[Age[0].label] = age\r\n                    }\r\n                  })\r\n                }\r\n              } else {\r\n                selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ?\r\n                  selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]]\r\n              }\r\n\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  else if (x.name === 'manualsampleid' && selectedRecord['Order Type'].value === 1) {\r\n    if (x.hasOwnProperty(\"child\")) {\r\n      x.child.map(y => {\r\n        const index = childColumnList[x.label].findIndex(z => z.label === y.label)\r\n        if (index !== -1) {\r\n          if (childColumnList[x.label][index].inputtype === 'combo' && childColumnList[x.label][index].readonly === true) {\r\n            selectedRecord = {\r\n              ...selectedRecord,\r\n              [childColumnList[x.label][index].label]: {\r\n                label: ParentComboValues.item.jsondata ?\r\n                  ParentComboValues.item.jsondata[childColumnList[x.label][index].displaymember] :\r\n                  ParentComboValues.item[childColumnList[x.label][index].displaymember] || \"\",\r\n                value: ParentComboValues.item.jsondata ?\r\n                  ParentComboValues.item.jsondata[childColumnList[x.label][index].valuemember] :\r\n                  ParentComboValues.item[childColumnList[x.label][index].valuemember] || -1\r\n              }\r\n            }\r\n          }\r\n          else if (comboData[y.label] && comboData[y.label].length > 0) {\r\n            if (comboData[y.label][0].label === undefined) {\r\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember,\r\n                childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode, y)\r\n              comboData[y.label] = optionChildList.get(\"OptionList\");\r\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\r\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\")\r\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label])\r\n                selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n                comboData = { ...comboData, ...newRecord1.comboData }\r\n              } else {\r\n                selectedRecord[y.label] = undefined\r\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label])\r\n                selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n                comboData = { ...comboData, ...newRecord1.comboData }\r\n              }\r\n            } else {\r\n              //below code need to be veriifed for 'x' to be replced with 'y' or viceversa?\r\n              comboData[y.label] = comboData[y.label]\r\n              const optionChildList = constructjsonOptionDefault(comboData[y.label] || [], childColumnList[x.label][index].valuemember,\r\n                childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, undefined, undefined, y)\r\n              if (optionChildList.get(\"DefaultValue\") !== undefined) {\r\n                selectedRecord[y.label] = optionChildList.get(\"DefaultValue\")\r\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label])\r\n                selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n                comboData = { ...comboData, ...newRecord1.comboData }\r\n              } else {\r\n                selectedRecord[y.label] = undefined\r\n                const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label])\r\n                selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n                comboData = { ...comboData, ...newRecord1.comboData }\r\n              }\r\n            }\r\n          } else {\r\n            selectedRecord[y.label] = undefined\r\n            comboData[y.label] = []\r\n            const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent, userinfo.slanguagetypecode, userinfo, selectedRecord[y.label])\r\n            selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n            comboData = { ...comboData, ...newRecord1.comboData }\r\n          }\r\n        } else {\r\n          const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\r\n          if (readonlyfields !== -1) {\r\n\r\n            if (withoutCombocomponent[readonlyfields][\"isMultiLingual\"]) {\r\n              selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ?\r\n                selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode]\r\n            } else {\r\n              if (withoutCombocomponent[readonlyfields][\"inputtype\"] === \"date\") {\r\n                selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ?\r\n                  rearrangeDateFormatforKendoDataTool(userinfo, selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]]) :\r\n                  rearrangeDateFormatforKendoDataTool(userinfo, selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]])\r\n\r\n                if (withoutCombocomponent[readonlyfields].child) {\r\n                  const Age = withoutCombocomponent.filter(x => x.name === 'Age');\r\n                  withoutCombocomponent[readonlyfields].child.map(k => {\r\n                    if (k.label === Age[0].label) {\r\n                      const age = ageCalculate(selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]]);\r\n\r\n                      selectedRecord[Age[0].label] = age\r\n                    }\r\n                  })\r\n                }\r\n              } else {\r\n                selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ?\r\n                  selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]]\r\n              }\r\n\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  else {\r\n    if (x.hasOwnProperty(\"child\")) {\r\n      x.child.map(y => {\r\n        selectedRecord[y.label] = undefined\r\n        const index = childColumnList[x.label] && childColumnList[x.label].findIndex(z => z.label === y.label)\r\n        if (index !== undefined && index !== -1) {\r\n          comboData[y.label] = undefined\r\n          const newRecord1 = childComboLoad(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent)\r\n          selectedRecord = { ...selectedRecord, ...newRecord1.selectedRecord }\r\n          comboData = { ...comboData, ...newRecord1.comboData }\r\n        }\r\n\r\n        else {\r\n          const index = withoutCombocomponent.findIndex(b => b.label === y.label)\r\n          if (index !== -1) {\r\n            if (withoutCombocomponent[index].hasOwnProperty(\"child\")) {\r\n              withoutCombocomponent[index].child.map(k => {\r\n                selectedRecord[k.label] = undefined\r\n              })\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  const newRecord = {\r\n    \"comboData\": comboData,\r\n    \"selectedRecord\": selectedRecord\r\n  }\r\n  return newRecord;\r\n}\r\n\r\n\r\n\r\nexport function childComboLoadForEdit(x, comboData, selectedRecord, childColumnList, withoutCombocomponent, languagetypeCode) {\r\n  if (selectedRecord[x.label] !== undefined) {\r\n    if (x.hasOwnProperty(\"child\")) {\r\n      x.child.map(y => {\r\n        const index = childColumnList[x.label].findIndex(z => z.label === y.label)\r\n        if (index !== -1) {\r\n          // const childOptionData = comboData[y.label].filter(filterData =>\r\n          //     JSON.parse(filterData[y.source].value)[x.valuemember] === selectedRecord[x.label].item[x.valuemember])\r\n          if (comboData[y.label] && comboData[y.label].length > 0) {\r\n            if (comboData[y.label][0].label === undefined) {\r\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember,\r\n                childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, y.isMultiLingual, languagetypeCode, y)\r\n              comboData[y.label] = optionChildList.get(\"OptionList\");\r\n\r\n              // if (optionChildList.get(\"DefaultValue\") !== undefined) {\r\n              //   selectedRecord[y.label] = optionChildList.get(\"DefaultValue\")\r\n              childComboLoadForEdit(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent)\r\n              // } else {\r\n              //   selectedRecord[y.label] = undefined\r\n              // }\r\n            } else {\r\n              comboData[y.label] = comboData[y.label]\r\n              const optionChildList = constructjsonOptionList(comboData[y.label] || [], childColumnList[x.label][index].valuemember,\r\n                childColumnList[x.label][index].displaymember, false, false, true, undefined, childColumnList[x.label][index].source, undefined, undefined, y)\r\n              // if (optionChildList.get(\"DefaultValue\") !== undefined) {\r\n              //   selectedRecord[y.label] = optionChildList.get(\"DefaultValue\")\r\n              childComboLoadForEdit(childColumnList[x.label][index], comboData, selectedRecord, childColumnList, withoutCombocomponent)\r\n              // } else {\r\n              //   selectedRecord[y.label] = undefined\r\n              // }\r\n            }\r\n          } else {\r\n            comboData[y.label] = []\r\n          }\r\n        }\r\n        //else {\r\n        //   const readonlyfields = withoutCombocomponent.findIndex(k => k.label === y.label);\r\n        //   if (readonlyfields !== -1) {\r\n\r\n        //     if(withoutCombocomponent[readonlyfields][\"isMultiLingual\"]){\r\n        //     selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ?\r\n        //       selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]][languagetypeCode] \r\n        //     }else{\r\n        //       selectedRecord[withoutCombocomponent[readonlyfields][\"label\"]] = selectedRecord[x.label].item.jsondata ?\r\n        //       selectedRecord[x.label].item.jsondata[withoutCombocomponent[readonlyfields][\"displaymember\"]] : selectedRecord[x.label].item[withoutCombocomponent[readonlyfields][\"displaymember\"]]\r\n        //     }\r\n        //   }\r\n        // }\r\n      })\r\n    }\r\n  } else {\r\n    if (x.hasOwnProperty(\"child\")) {\r\n      x.child.map(y => {\r\n        selectedRecord[y.label] = undefined\r\n        comboData[y.label] = undefined\r\n      })\r\n    }\r\n  }\r\n  const newRecord = {\r\n    \"comboData\": comboData,\r\n    \"selectedRecord\": selectedRecord\r\n  }\r\n  return newRecord;\r\n}\r\n\r\n\r\nexport function comboChild(data, columnList, childColumnList, slice) {\r\n  let retunObj = {}\r\n  // if (data.findIndex(x => x.label === columnList.label) !== -1) {\r\n  if (!childColumnList.hasOwnProperty(columnList.label)) {\r\n    if (childColumnList[columnList.label] === undefined) {\r\n      if (columnList.hasOwnProperty(\"child\")) {\r\n        let childList = []\r\n        columnList.child.map(childData => {\r\n          const index = data.findIndex(x => x.label === childData.label)\r\n          if (index !== -1) {\r\n            childList.push(data[index])\r\n            if (slice) {\r\n              data = [...data.slice(0, index), ...data.slice(index + 1)]\r\n            }\r\n          }\r\n        })\r\n        childColumnList[columnList.label] = childList;\r\n        if (childList.length > 0) {\r\n          childList.map(y => {\r\n            if (y.hasOwnProperty(\"child\")) {\r\n              const val = comboChild(data, y, childColumnList, slice)\r\n              retunObj[\"data\"] = val.data;\r\n              retunObj[\"childColumnList\"] = val.childColumnList;\r\n            } else {\r\n              retunObj[\"data\"] = data;\r\n              retunObj[\"childColumnList\"] = childColumnList;\r\n            }\r\n          })\r\n        } else {\r\n          retunObj[\"data\"] = data;\r\n          retunObj[\"childColumnList\"] = childColumnList;\r\n        }\r\n      } else {\r\n        retunObj[\"data\"] = data;\r\n        retunObj[\"childColumnList\"] = childColumnList;\r\n      }\r\n    } else {\r\n      retunObj[\"data\"] = data;\r\n      retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n    }\r\n  } else {\r\n    retunObj[\"data\"] = data;\r\n    retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n  }\r\n  return retunObj;\r\n}\r\nexport function ageCalculate(date, checkValue) {\r\n  const now = new Date();\r\n  const today = new Date(now.getYear(), now.getMonth(), now.getDate());\r\n\r\n  let yearNow = now.getYear();\r\n  let monthNow = now.getMonth();\r\n  let dateNow = now.getDate();\r\n\r\n  let dob = new Date(date);\r\n\r\n  let yearDob = dob.getYear();\r\n  let monthDob = dob.getMonth();\r\n  let dateDob = dob.getDate();\r\n  let age = {};\r\n  let ageString = \"\";\r\n  let yearString = \"\";\r\n  let monthString = \"\";\r\n  let dayString = \"\";\r\n\r\n\r\n  let yearAge = yearNow - yearDob;\r\n  let monthAge = 0;\r\n  let dateAge = 0;\r\n\r\n  if (monthNow >= monthDob)\r\n    monthAge = monthNow - monthDob;\r\n  else {\r\n    yearAge--;\r\n    monthAge = 12 + monthNow - monthDob;\r\n  }\r\n\r\n  if (dateNow >= dateDob)\r\n    dateAge = dateNow - dateDob;\r\n  else {\r\n    monthAge--;\r\n    dateAge = 31 + dateNow - dateDob;\r\n\r\n    if (monthAge < 0) {\r\n      monthAge = 11;\r\n      yearAge--;\r\n    }\r\n  }\r\n\r\n  age = {\r\n    years: yearAge,\r\n    months: monthAge,\r\n    days: dateAge\r\n  };\r\n\r\n  if (age.years > 1) yearString = intl.formatMessage({ id: \"IDS_YEARS\" });\r\n  else yearString = intl.formatMessage({ id: \"IDS_YEAR\" });\r\n  if (age.months > 1) monthString = intl.formatMessage({ id: \"IDS_MONTHS\" });\r\n  else monthString = intl.formatMessage({ id: \"IDS_MONTH\" });\r\n  if (age.days > 1) dayString = intl.formatMessage({ id: \"IDS_DAYS\" });\r\n  else dayString = intl.formatMessage({ id: \"IDS_DAY\" });\r\n\r\n  if (checkValue === true) {\r\n    if ((age.years > 0) && (age.months > 0) && (age.days > 0))\r\n      ageString = age.years;\r\n    else if ((age.years === 0) && (age.months === 0) && (age.days > 0))\r\n      ageString = \"1\";\r\n    else if ((age.years > 0) && (age.months === 0) && (age.days === 0))\r\n      ageString = age.years;\r\n    else if ((age.years > 0) && (age.months > 0) && (age.days === 0))\r\n      ageString = age.years;\r\n    else if ((age.years === 0) && (age.months > 0) && (age.days > 0))\r\n      ageString = \"1\";\r\n    else if ((age.years > 0) && (age.months === 0) && (age.days > 0))\r\n      ageString = age.years;\r\n    else if ((age.years === 0) && (age.months > 0) && (age.days === 0))\r\n      ageString = age.months;\r\n    else ageString = \"1\";\r\n    // console.log(ageString);\r\n\r\n  }\r\n  else {\r\n    if ((age.years > 0) && (age.months > 0) && (age.days > 0))\r\n      ageString = age.years + yearString + \", \" + age.months + monthString + \" and \" + age.days + dayString + \" \";\r\n    else if ((age.years === 0) && (age.months === 0) && (age.days > 0))\r\n      ageString = \" \" + age.days + dayString + \" \";\r\n    else if ((age.years > 0) && (age.months === 0) && (age.days === 0))\r\n      ageString = age.years + yearString + \"  \";\r\n    else if ((age.years > 0) && (age.months > 0) && (age.days === 0))\r\n      ageString = age.years + yearString + \" and \" + age.months + monthString + \" \";\r\n    else if ((age.years === 0) && (age.months > 0) && (age.days > 0))\r\n      ageString = age.months + monthString + \" and \" + age.days + dayString + \"\";\r\n    else if ((age.years > 0) && (age.months === 0) && (age.days > 0))\r\n      ageString = age.years + yearString + \" and \" + age.days + dayString + \" \";\r\n    else if ((age.years === 0) && (age.months > 0) && (age.days === 0))\r\n      ageString = age.months + monthString + \" \";\r\n    else ageString = \"0 \" + intl.formatMessage({ id: \"IDS_DAYS\" });\r\n    // console.log(ageString);\r\n  }\r\n  return ageString;\r\n\r\n}\r\n// export function ageCalculateOnlyForYear(date,checkValue) {\r\n//   const now = new Date();\r\n//   const today = new Date(now.getYear(), now.getMonth(), now.getDate());\r\n\r\n//   let yearNow = now.getYear();\r\n//   let monthNow = now.getMonth();\r\n//   let dateNow = now.getDate();\r\n\r\n//   let dob = new Date(date);\r\n\r\n//   let yearDob = dob.getYear();\r\n//   let monthDob = dob.getMonth();\r\n//   let dateDob = dob.getDate();\r\n//   let age = {};\r\n//   let ageString = \"\";\r\n\r\n//   let yearAge = yearNow - yearDob;\r\n//   let monthAge = 0;\r\n//   let dateAge = 0;\r\n\r\n//   if (monthNow >= monthDob)\r\n//     monthAge = monthNow - monthDob;\r\n//   else {\r\n//     yearAge--;\r\n//     monthAge = 12 + monthNow - monthDob;\r\n//   }\r\n\r\n//   if (dateNow >= dateDob)\r\n//     dateAge = dateNow - dateDob;\r\n//   else {\r\n//     monthAge--;\r\n//     dateAge = 31 + dateNow - dateDob;\r\n\r\n//     if (monthAge < 0) {\r\n//       monthAge = 11;\r\n//       yearAge--;\r\n//     }\r\n//   }\r\n\r\n//   age = {\r\n//     years: yearAge,\r\n//     months: monthAge,\r\n//     days: dateAge\r\n//   };\r\n\r\n//   if ((age.years > 0) && (age.months > 0) && (age.days > 0))\r\n//     ageString = age.years;\r\n//   else if ((age.years === 0) && (age.months === 0) && (age.days > 0))\r\n//     ageString = \"1\";\r\n//   else if ((age.years > 0) && (age.months === 0) && (age.days === 0))\r\n//     ageString = age.years ;\r\n//   else if ((age.years > 0) && (age.months > 0) && (age.days === 0))\r\n//     ageString = age.years;\r\n//   else if ((age.years === 0) && (age.months > 0) && (age.days > 0))\r\n//     ageString = \"1\";\r\n//   else if ((age.years > 0) && (age.months === 0) && (age.days > 0))\r\n//     ageString = age.years;\r\n//   else if ((age.years === 0) && (age.months > 0) && (age.days === 0))\r\n//     ageString = age.months;\r\n//   else ageString = \"1\";\r\n//   return ageString;\r\n// }\r\n\r\n\r\nexport function rearrangeDateFormatDateOnly(userInfo, dateValue) {\r\n\r\n  // let splitChar = userInfo.ssitedatetime && userInfo.ssitedatetime.indexOf(\"/\") !== -1 ? \"/\" : \"-\";\r\n\r\n  const specialChars = `\\`_-\\[\\]'\"\\\\|,.\\/`\r\n  let splitChar = '';\r\n  userInfo.ssitedatetime\r\n    && userInfo.ssitedatetime.split('').some(word => {\r\n      if (splitChar === undefined || splitChar === '') {\r\n        if (specialChars.includes(word)) {\r\n          splitChar = word;\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n  if (typeof dateValue === \"string\") {//(splitChar === \"/\" || splitChar === \"-\") &&\r\n    const firstField = userInfo.ssitedatetime && userInfo.ssitedatetime.split(splitChar)[0];\r\n    const timeSplitChar = dateValue.indexOf(\"T\") !== -1 ? \"T\" : \" \"\r\n    const datetime = dateValue.split(timeSplitChar);\r\n    return datetime[0];\r\n  }\r\n  else {\r\n    return dateValue;\r\n  }\r\n}\r\n\r\n\r\nexport function getSameRecordFromTwoDifferentArrays(firstArray, secondArray, PrimaryKey) {\r\n  let filterArray = [];\r\n  for (var i = 0; i < firstArray.length; i++) {\r\n    for (var j = 0; j < secondArray.length; j++) {\r\n      if (firstArray[i][PrimaryKey] == secondArray[j][PrimaryKey]) {\r\n        filterArray.push(secondArray[j]);\r\n      }\r\n    }\r\n  }\r\n  return filterArray;\r\n}\r\n\r\nexport function childComboClear(inputParam) {\r\n  if (inputParam.control.child && inputParam.control.child.length > 0) {\r\n    inputParam.control.child.map(item => {\r\n      inputParam.selectedRecord[item.label] = null;\r\n      delete inputParam.comboData[item.label]\r\n      const comboComponents = inputParam.comboComponents.filter(x => x.label === item.label)\r\n      if (comboComponents.length > 0) {\r\n        if (comboComponents[0].child && comboComponents[0].child.length > 0) {\r\n\r\n          const inputChilParam = {\r\n            control: comboComponents[0], comboComponents: inputParam.comboComponents,\r\n            withoutCombocomponent: inputParam.withoutCombocomponent,\r\n            selectedRecord: inputParam.selectedRecord, comboData: inputParam.comboData\r\n          }\r\n          const { selectedRecord, comboData } = childComboClear(inputChilParam)\r\n          inputParam['selectedRecord'] = selectedRecord\r\n          inputParam['comboData'] = comboData\r\n        }\r\n\r\n      }\r\n    })\r\n  }\r\n  return { selectedRecord: inputParam.selectedRecord, comboData: inputParam.comboData }\r\n}\r\n\r\nexport function childComboClearSubSample(inputParam) {\r\n  if (inputParam.control.child && inputParam.control.child.length > 0) {\r\n    inputParam.control.child.map(item => {\r\n      inputParam.selectedRecord[item.label] = null;\r\n\r\n      const optionList = constructjsonOptionDefault(inputParam.comboData[inputParam.control.label] || [], inputParam.control.valuemember,\r\n        inputParam.control.displaymember, false, false, true, undefined, inputParam.control.source, inputParam.control.isMultiLingual)\r\n      if (optionList.get(\"DefaultValue\") === undefined) {\r\n        delete inputParam.comboData[item.label]\r\n      }\r\n      const comboComponents = inputParam.comboComponents.filter(x => x.label === item.label)\r\n      if (comboComponents.length > 0) {\r\n        if (comboComponents[0].child && comboComponents[0].child.length > 0) {\r\n\r\n          const inputChilParam = {\r\n            control: comboComponents[0], comboComponents: inputParam.comboComponents,\r\n            withoutCombocomponent: inputParam.withoutCombocomponent,\r\n            selectedRecord: inputParam.selectedRecord, comboData: inputParam.comboData, clearComboData: true\r\n          }\r\n          const { selectedRecord, comboData } = childComboClearSubSample(inputChilParam)\r\n          inputParam['selectedRecord'] = selectedRecord\r\n          inputParam['comboData'] = comboData\r\n        }\r\n\r\n      }\r\n    })\r\n  }\r\n  return { selectedRecord: inputParam.selectedRecord, comboData: inputParam.comboData }\r\n}\r\n\r\nexport function CF_encryptionData(Data) {\r\n  const salt = CryptoJS.lib.WordArray.random(128 / 8);\r\n  const key = CryptoJS.PBKDF2(\"AGARAM_SDMS_SCRT\", salt, {\r\n    keySize: 128 / 32,\r\n    iterations: 100,\r\n  });\r\n  const iv = CryptoJS.lib.WordArray.random(128 / 8);\r\n  const encrypted = CryptoJS.AES.encrypt(JSON.stringify(Data), key, {\r\n    iv: iv,\r\n    padding: CryptoJS.pad.Pkcs7,\r\n    mode: CryptoJS.mode.CBC,\r\n  });\r\n  const transitmessage = salt.toString() + iv.toString() + encrypted.toString();\r\n  const ct = {\r\n    EncryptData: transitmessage,\r\n  };\r\n  return ct;\r\n}\r\nexport function removeIndex(data, removeIndex) {\r\n  const data1 = [...data.splice(0, removeIndex), ...data.splice(removeIndex + 1)]\r\n  return data1\r\n}\r\n\r\nexport function compareArrays(a, b) {\r\n  let boolean = false;\r\n  if (a.length === b.length) {\r\n    boolean = a.every(x => b.some(y => y.toString() === x.toString()));\r\n  }\r\n  return boolean;\r\n};\r\n\r\nexport function Lims_JSON_stringify(s, emit_unicode) {\r\n  var json = s;\r\n  return emit_unicode ? json : json.replace(/[\\u007f-\\uffff]/g,\r\n    function (c) {\r\n      return '\\\\u' + ('0000' + c.charCodeAt(0).toString(16)).slice(-4);\r\n    }\r\n  );\r\n}\r\n\r\nexport function copyText(text) {\r\n  if (navigator && navigator.clipboard) {\r\n    navigator.clipboard.writeText(text)\r\n  } else {\r\n    var textField = document.createElement('textarea')\r\n    textField.innerText = text\r\n    document.body.appendChild(textField)\r\n    textField.select()\r\n    document.execCommand('copy')\r\n    textField.remove()\r\n  }\r\n\r\n}\r\n\r\nexport function childSpecLoadCheck(templateManRecord, childcolumnlist, productCategory, map, parentLabel, selectedRecord) {\r\n  let val = { productCategory, map }\r\n  if (templateManRecord.child && templateManRecord.child.length > 0) {\r\n    templateManRecord.child.map(ch => {\r\n      const indexTemplateMandatory1 = childcolumnlist[parentLabel].findIndex(z => z.label === ch.label && z.templatemandatory && z.name === 'Product Category')\r\n      if (indexTemplateMandatory1 !== -1) {\r\n        const data = childcolumnlist[parentLabel][indexTemplateMandatory1]\r\n        if (data.name === 'Product Category') {\r\n          val = {\r\n            productCategory: selectedRecord[data.label] === undefined ? false : true, map: {\r\n              ...map, nproductcatcode: selectedRecord[data.label] ?\r\n                selectedRecord[data.label].value : -1, nproductcode: -1\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (childcolumnlist[ch.label]) {\r\n          const vals = childcolumnlist[templateManRecord.label].filter(x => x.label === ch.label)\r\n          if (vals.length > 0) {\r\n            val = childSpecLoadCheck(vals[0], childcolumnlist, val.productCategory, val.map, ch.label, selectedRecord)\r\n          }\r\n\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return { ...val }\r\n}\r\n\r\n//remove space for react awesome query builder\r\nexport function removeSpaceFromFirst(str, query1) {\r\n  let query = query1;\r\n  const index = str && str.indexOf(\"'\");\r\n  if(index !== undefined){\r\n  if (index !== -1  ) {\r\n    const st = str.substring(0, index + 1);\r\n    const st1 = str.substring(index + 1);\r\n    const index1 = st1.indexOf(\"'\");\r\n    if (st1.substring(0, 1) === \" \") {\r\n      query = query + st + st1.substring(1, index1 + 1);\r\n      query = removeSpaceFromFirst(st1.substring(index1 + 1), query)\r\n    } else if (st1.substring(0, 1) === \"%\") {\r\n      if (st1.substring(1, 2) === \" \") {\r\n        query = query + st + st1.substring(0, 1) + st1.substring(2, index1 + 1);\r\n        query = removeSpaceFromFirst(st1.substring(index1 + 1), query);\r\n      } else {\r\n        query = query + st + st1.substring(0, index1 + 1);\r\n        query = removeSpaceFromFirst(st1.substring(index1 + 1), query);\r\n      }\r\n    } else {\r\n      query = query + st + st1.substring(0, index1 + 1);\r\n      query = removeSpaceFromFirst(st1.substring(index1 + 1), query);\r\n    }\r\n  } else {\r\n    query = query + str;\r\n  }\r\n}else{\r\n  query=str;\r\n}\r\n  return query\r\n}\r\n\r\n//Added For Mandatory Validation Start\r\nexport function onSaveMandatoryValidation(selectedRecord, mandatoryFields, onSaveClick) {\r\n  const failedControls = [];\r\n  const startLabel = [];\r\n  let label = \"IDS_ENTER\";\r\n  mandatoryFields.forEach(item => {\r\n    if (selectedRecord[item.dataField] === undefined || selectedRecord[item.dataField] === null) {\r\n      const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') +\r\n        intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n      failedControls.push(alertMessage);\r\n      startLabel.push(item.mandatoryLabel)\r\n    }\r\n    else {\r\n      if (item.validateFunction) {\r\n        const validateData = item.validateFunction;\r\n        if (selectedRecord[item.dataField].trim().length === 0) {\r\n          const alertMessage = intl.formatMessage({ id: item.idsName });\r\n          failedControls.push(alertMessage);\r\n          startLabel.push(item.mandatoryLabel)\r\n        }\r\n        else if (validateData(selectedRecord[item.dataField]) === false) {\r\n          const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n          failedControls.push(alertMessage);\r\n          startLabel.push(item.mandatoryLabel)\r\n        }\r\n      }\r\n      else {\r\n        if (typeof selectedRecord[item.dataField] === \"object\") {\r\n          if (item.ismultilingual == \"true\") {\r\n            let dataArray = 0;\r\n            Object.values(selectedRecord[item.dataField])\r\n              .map(lang => {\r\n                if (lang.length === 0) {\r\n                  dataArray++\r\n                }\r\n              }\r\n              )\r\n            if (dataArray > 0) {\r\n              const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n              failedControls.push(alertMessage);\r\n              startLabel.push(item.mandatoryLabel)//\"I\r\n            }\r\n          } else {\r\n            if (selectedRecord[item.dataField] && selectedRecord[item.dataField].length === 0) {\r\n              const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n              failedControls.push(alertMessage);\r\n              startLabel.push(item.mandatoryLabel)\r\n            }\r\n          }\r\n        }\r\n        else if (typeof selectedRecord[item.dataField] === \"string\") {\r\n          if (selectedRecord[item.dataField].trim().length === 0) {\r\n            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n            failedControls.push(alertMessage);\r\n            startLabel.push(item.mandatoryLabel)\r\n          }\r\n        }\r\n        else {\r\n          if (selectedRecord[item.dataField].length === 0\r\n          ) {\r\n            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n            failedControls.push(alertMessage);\r\n            startLabel.push(item.mandatoryLabel)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n  if (failedControls.length === 0) {\r\n    onSaveClick();\r\n  }\r\n  else {\r\n    label = startLabel[0] === undefined ? label : startLabel[0];\r\n    toast.info(`${intl.formatMessage({ id: label })} ${failedControls[0]}`);\r\n  }\r\n\r\n}\r\n//Added for Mandatory Validation End\r\nexport function conditionBasedInput(control, value, name) {\r\n  let inputvalues;\r\n  if (control) {\r\n    switch (control && control.label === name) {\r\n\r\n      case control['isnumeric']: {\r\n        if (control.ncustomization) {\r\n\r\n          if (parseInt(control.nmaxvalue) < parseInt(value)) {\r\n            inputvalues = control.nmaxvalue\r\n          } else if (parseInt(control.nminvalue) > parseInt(value)) {\r\n            inputvalues = control.nminvalue\r\n          } else {\r\n            inputvalues = value.replace(/[^0-9]/g, '');\r\n          }\r\n        } else {\r\n          inputvalues = value.replace(/[^0-9]/g, '');\r\n        }\r\n        break;\r\n      }\r\n      case control['isalphabetsmall']: {\r\n        inputvalues = value.replace(/[^a-z]/g, '');\r\n        break;\r\n      }\r\n      case control['isalphabetcaptial']: {\r\n        inputvalues = value.replace(/[^A-Z]/g, '');\r\n        break;\r\n      }\r\n      case control['isalphabetspl']: {\r\n        if (control.ncustomization) {\r\n          let notAllowChar = false;\r\n          if (control.nsplcharnotallow) {\r\n            const splChar = control.nsplcharnotallow.split(/(?!$)/u);\r\n            splChar.map(item => { if (item === value.charAt(value.length - 1)) { notAllowChar = true } })\r\n          }\r\n          if (control.ncasesensitive) {\r\n            if (parseInt(control.nmaxsmallletters) < value.replace(/[^a-z]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nmaxcapticalletters) < value.replace(/[^A-Z]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            }\r\n            else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else {\r\n              inputvalues = control.naviodsplchar ? notAllowChar ? value.slice(0, -1) + '' : value.replace(/[^A-Z.!#$@%&'*+\",./=?^_`{|}~-]/g, '') : value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/gi, '');\r\n            }\r\n          } else if (control.ncaptialletters) {\r\n            if (parseInt(control.nmaxletters) < value.replace(/[^A-Z]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            }\r\n            else {\r\n              inputvalues = control.naviodsplchar ? notAllowChar ? value.slice(0, -1) + '' : value.replace(/[^A-Z.!#$@%&'*+\",./=?^_`{|}~-]/g, '') : value.replace(/[^A-Z.!#$@%&'*+\",./=?^_`{|}~-]/g, '');\r\n            }\r\n          } else if (control.nsmallletters) {\r\n            if (parseInt(control.nmaxletters) < value.replace(/[^a-z]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else {\r\n              inputvalues = control.naviodsplchar ? notAllowChar ? value.slice(0, -1) + '' : value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/g, '') : value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/g, '');\r\n            }\r\n          } else {\r\n            if (parseInt(control.nmaxletters) < value.replace(/[^a-zA-Z]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else {\r\n\r\n              inputvalues = control.naviodsplchar ? notAllowChar ? value.slice(0, -1) + '' : value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/gi, '') : value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/gi, '');\r\n            }\r\n          }\r\n        } else {\r\n          inputvalues = value.replace(/[^a-z.!#$@%&'*+\",./=?^_`{|}~-]/gi, '');\r\n        }\r\n        break;\r\n      }\r\n      case control['isnumericspl']: {\r\n        if (control.ncustomization) {\r\n          let notAllowChar = false;\r\n          if (control.nsplcharnotallow) {\r\n            const splChar = control.nsplcharnotallow.split(/(?!$)/u);\r\n            splChar.map(item => { if (item === value.charAt(value.length - 1)) { notAllowChar = true } })\r\n          }\r\n          if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/g, '').length) {\r\n            inputvalues = value.slice(0, -1) + '';\r\n          } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\r\n            inputvalues = value.slice(0, -1) + '';\r\n          } else {\r\n            inputvalues = control.naviodsplchar ? notAllowChar ? value.slice(0, -1) + '' : value.replace(/[^0-9.!#$@%&'*+\",./=?^_`{|}~-]/g, '') : value.replace(/[^0-9.!#$@%&'*+\",./=?^_`{|}~-]/g, '');\r\n\r\n          }\r\n        } else {\r\n          inputvalues = value.replace(/[^0-9.!#$@%&'*+\",./=?^_`{|}~-]/g, '');\r\n        } break;\r\n      }\r\n      case control['isalphanumeric']: {\r\n        if (control.ncustomization) {\r\n          if (control.ncasesensitive) {\r\n            if (parseInt(control.nmaxsmallletters) < value.replace(/[^a-z]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nmaxcapticalletters) < value.replace(/[^A-Z]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else {\r\n              inputvalues = value.replace(/[^a-z0-9]/gi, '');\r\n            }\r\n          } else if (control.ncaptialletters) {\r\n            if (parseInt(control.nmaxletters) < value.replace(/[^A-Z]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            }\r\n            else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else {\r\n              inputvalues = value.replace(/[^A-Z0-9]/g, '');\r\n            }\r\n          } else if (control.nsmallletters) {\r\n            if (parseInt(control.nmaxletters) < value.replace(/[^a-z]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else {\r\n              inputvalues = value.replace(/[^a-z0-9]/g, '');\r\n            }\r\n          }\r\n          else {\r\n            if (parseInt(control.nmaxletters) < value.replace(/[^a-zA-Z]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else {\r\n              inputvalues = value.replace(/[^a-z0-9]/gi, '');\r\n            }\r\n          }\r\n        } else {\r\n          inputvalues = value.replace(/[^a-z0-9]/gi, '');\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        if (control.ncustomization) {\r\n          if (control.ncasesensitive) {\r\n            if (parseInt(control.nmaxsmallletters) < value.replace(/[^a-z]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nmaxcapticalletters) < value.replace(/[^A-Z]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/g, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else {\r\n              inputvalues = value.replace(/[^a-z0-9.!#$@%&'*+\",./=?^_`{|}~-]/gi, '');\r\n            }\r\n          } else {\r\n            if (parseInt(control.nmaxletters) < value.replace(/[^a-zA-Z]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else if (parseInt(control.nmaxnumeric) < value.replace(/[^0-9]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            }\r\n            else if (parseInt(control.nsplchar) < value.replace(/[^!#$@%&'*+\",./=?^_`{|}~-]/gi, '').length) {\r\n              inputvalues = value.slice(0, -1) + '';\r\n            } else {\r\n              inputvalues = value.replace(/[^a-z0-9.!#$@%&'*+\",./=?^_`{|}~-]/gi, '');\r\n            }\r\n          }\r\n        } else {\r\n          inputvalues = value;\r\n        }\r\n        break;\r\n    }\r\n  } else {\r\n    inputvalues = value;\r\n  }\r\n  return inputvalues;\r\n}\r\n\r\nexport function replaceBackSlash(dataList){ \r\n\r\n  return (dataList.replaceAll('\\\\','\\\\\\\\\\\\\\\\').replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim());\r\n  \r\n };\r\n\r\n \r\n export function checkFilterIsEmptyQueryBuilder(treeData) {\r\n  let ParentItem = { ...treeData };\r\n  let isFilterEmpty=true;\r\n      let childArray = ParentItem.children1;\r\n      if (childArray && childArray.length > 0 && childArray !== undefined) {\r\n          for (var i = 0; i < childArray.length; i++) {\r\n              let childData = childArray[i]\r\n              if (!childData.hasOwnProperty('children1')) {\r\n                  if( childData.properties.field !== null && childData.properties.operator!==\"is_empty\"\r\n                    && childData.properties.operator!==\"is_not_empty\"\r\n                    && childData.properties.operator!==\"is_null\"\r\n                    && childData.properties.operator!==\"is_not_null\" ){\r\n                      if( childData.properties.field !== null && (childData.properties.operator===\"not_equal\"||childData.properties.operator===\"equal\") &&\r\n                      childData.properties.valueSrc[0]==='func'){\r\n                     isFilterEmpty= childData.properties.value[0] && childData.properties.value[0].args.str && childData.properties.value[0].args.str.value!==\"\" && \r\n                     childData.properties.value[0] && childData.properties.value[0].args.str && childData.properties.value[0].args.str.value!==undefined ? true:false;\r\n                      }else{\r\n                      isFilterEmpty= (childData.properties.value[0]!==\"\" && childData.properties.value[0]!==undefined)? true:false;\r\n                      }\r\n                      if(!isFilterEmpty){\r\n                      return isFilterEmpty;\r\n                  }\r\n              }\r\n              } else {\r\n                  if (childData) {\r\n                      ParentItem = checkFilterIsEmptyQueryBuilder(childData)\r\n                      if(!ParentItem){\r\n                          return ParentItem;\r\n                      }\r\n                  } \r\n              }\r\n          }\r\n      }\r\n      return isFilterEmpty;\r\n}"]},"metadata":{},"sourceType":"module"}