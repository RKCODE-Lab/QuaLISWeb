{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes'; //import { sortData, getComboLabelValue, searchData } from '../components/CommonScript'\n\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nexport function getKpiBandComboService(kpibandparam) {\n  return function (dispatch) {\n    if (kpibandparam.operation === \"create\" || kpibandparam.operation === \"update\") {\n      const productService = rsapi.post(\"kpiband/getProduct\", {\n        userinfo: kpibandparam.userInfo\n      });\n      const periodService = rsapi.post(\"kpiband/getPeriod\", {\n        ncontrolcode: kpibandparam.ncontrolCode,\n        userinfo: kpibandparam.userInfo\n      }); // const periodService =  rsapi.post(\"period/getPeriodByControl\", {\n      //     \"ncontrolcode\": kpibandparam.ncontrolCode,\n      //     \"userinfo\": kpibandparam.userInfo\n      // })\n\n      let urlArray = [];\n      let selectedId = null;\n\n      if (kpibandparam.operation === \"create\") {\n        urlArray = [productService, periodService];\n      } else {\n        const kpiBandById = rsapi.post(\"kpiband/getActiveKpiBandById\", {\n          [kpibandparam.primaryKeyField]: kpibandparam.primaryKeyValue,\n          \"userinfo\": kpibandparam.userInfo\n        });\n        urlArray = [productService, periodService, kpiBandById];\n        selectedId = kpibandparam.primaryKeyValue;\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let product = [];\n        let periodBefore = [];\n        let periodAfter = [];\n        let selectedRecord = {};\n\n        if (kpibandparam.operation === \"update\") {\n          selectedRecord = response[2].data;\n          product.push({\n            \"value\": response[2].data[\"nproductcode\"],\n            \"label\": response[2].data[\"sproductname\"]\n          });\n          periodBefore.push({\n            \"value\": response[2].data[\"nbeforeperiodcode\"],\n            \"label\": response[2].data[\"sbeforeperiodname\"]\n          });\n          periodAfter.push({\n            \"value\": response[2].data[\"nafterperiodcode\"],\n            \"label\": response[2].data[\"safterperiodname\"]\n          });\n          selectedRecord[\"nproductcode\"] = product[0];\n          selectedRecord[\"nbeforeperiodcode\"] = periodBefore[0];\n          selectedRecord[\"nafterperiodcode\"] = periodAfter[0];\n        } // else {\n        //     selectedRecord[\"ntransactionstatus\"] = 1;\n        // }\n\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            productList: response[0].data || [],\n            periodList: response[1].data || [],\n            selectedRecord,\n            openModal: true,\n            operation: kpibandparam.operation,\n            screenName: kpibandparam.screenName,\n            ncontrolCode: kpibandparam.ncontrolCode,\n            loading: false,\n            selectedId\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } // else {\n    //     toast.warn(this.props.formatMessage({ id: masterData.SelectedMAHolder.stranstatus }));\n    // }\n\n  };\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/KpiBandAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","intl","getKpiBandComboService","kpibandparam","dispatch","operation","productService","post","userinfo","userInfo","periodService","ncontrolcode","ncontrolCode","urlArray","selectedId","kpiBandById","primaryKeyField","primaryKeyValue","all","then","response","product","periodBefore","periodAfter","selectedRecord","data","push","type","payload","productList","periodList","openModal","screenName","loading","catch","error","status","formatMessage","id","message","warn"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\n//import { sortData, getComboLabelValue, searchData } from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\n\r\n\r\nexport function getKpiBandComboService(kpibandparam) {\r\n    return function (dispatch) {\r\n\r\n        if (kpibandparam.operation === \"create\" || kpibandparam.operation === \"update\") {\r\n\r\n            const productService = rsapi.post(\"kpiband/getProduct\", { userinfo: kpibandparam.userInfo });\r\n            const periodService = rsapi.post(\"kpiband/getPeriod\", \r\n            { ncontrolcode:kpibandparam.ncontrolCode,userinfo: kpibandparam.userInfo });\r\n            // const periodService =  rsapi.post(\"period/getPeriodByControl\", {\r\n            //     \"ncontrolcode\": kpibandparam.ncontrolCode,\r\n            //     \"userinfo\": kpibandparam.userInfo\r\n            // })\r\n\r\n            let urlArray = [];\r\n            let selectedId = null;\r\n            if (kpibandparam.operation === \"create\") {\r\n\r\n                urlArray = [productService, periodService];\r\n            }\r\n            else {\r\n                const kpiBandById = rsapi.post(\"kpiband/getActiveKpiBandById\", { [kpibandparam.primaryKeyField]: kpibandparam.primaryKeyValue, \"userinfo\": kpibandparam.userInfo });\r\n\r\n                urlArray = [productService, periodService, kpiBandById];\r\n                selectedId = kpibandparam.primaryKeyValue;\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    let product = [];\r\n                    let periodBefore = [];\r\n                    let periodAfter = [];\r\n\r\n                    let selectedRecord = {};\r\n\r\n                    if (kpibandparam.operation === \"update\") {\r\n                        selectedRecord = response[2].data;\r\n\r\n                        product.push({ \"value\": response[2].data[\"nproductcode\"], \"label\": response[2].data[\"sproductname\"] });\r\n                        periodBefore.push({ \"value\": response[2].data[\"nbeforeperiodcode\"], \"label\": response[2].data[\"sbeforeperiodname\"] });\r\n                        periodAfter.push({ \"value\": response[2].data[\"nafterperiodcode\"], \"label\": response[2].data[\"safterperiodname\"] });\r\n\r\n\r\n                        selectedRecord[\"nproductcode\"] = product[0];\r\n                        selectedRecord[\"nbeforeperiodcode\"] = periodBefore[0];\r\n                        selectedRecord[\"nafterperiodcode\"] = periodAfter[0];\r\n\r\n\r\n                    }\r\n                    // else {\r\n                    //     selectedRecord[\"ntransactionstatus\"] = 1;\r\n\r\n\r\n                    // }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            productList: response[0].data || [],\r\n                            periodList: response[1].data || [],\r\n                            selectedRecord, openModal: true,\r\n                            operation: kpibandparam.operation, screenName: kpibandparam.screenName,\r\n                            ncontrolCode: kpibandparam.ncontrolCode, loading: false, selectedId\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        // else {\r\n        //     toast.warn(this.props.formatMessage({ id: masterData.SelectedMAHolder.stranstatus }));\r\n        // }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}