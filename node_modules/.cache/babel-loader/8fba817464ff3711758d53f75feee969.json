{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';//import CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DropZone from'../../components/dropzone/dropzone.component';import{injectIntl}from'react-intl';import{attachmentType}from'../../components/Enumeration';//import { Row, Col, Form } from 'react-bootstrap';\nvar AddBarcode=function AddBarcode(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_BARCODE\"}),name:\"sbarcodename\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_BARCODE\"}),value:props.selectedRecord[\"sbarcodename\"]?props.selectedRecord[\"sbarcodename\"]:\"\",isMandatory:true,required:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:props.barcodeData.nquerycode,formLabel:props.intl.formatMessage({id:\"IDS_QUERY\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.queryMapList||[],value:props.selectedRecord?props.selectedRecord[\"nsqlquerycode\"]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nsqlquerycode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:props.barcodeData.ncontrolcode,formLabel:props.intl.formatMessage({id:\"IDS_CONTROTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.controlMapList||[],value:props.selectedRecord?props.selectedRecord[\"ncontrolcode\"]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"ncontrolcode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"sdescription\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[\"sdescription\"]?props.selectedRecord[\"sdescription\"]:\"\",isMandatory:false,required:false,maxLength:255})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DropZone,{name:\"TestBarcode\",label:props.intl.formatMessage({id:\"IDS_BARCODE\"}),maxFiles:1,accept:\".prn\",minSize:0,maxSize:1,onDrop:function onDrop(event){return props.onDropTestFile(event,'sfilename',1);},multiple:false,editFiles:props.selectedRecord?props.selectedRecord:{},attachmentTypeCode:props.operation===\"update\"?attachmentType.PRN:\"\",fileSizeName:\"nfilesize\",fileName:\"sfilename\",deleteAttachment:props.deleteAttachment,actionType:props.actionType//disabled={disabled}\n})));};export default injectIntl(AddBarcode);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/basemaster/AddBarcode.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","FormSelectSearch","DropZone","injectIntl","attachmentType","AddBarcode","props","intl","formatMessage","id","event","onInputOnChange","selectedRecord","barcodeData","nquerycode","queryMapList","onComboChange","ncontrolcode","controlMapList","onDropTestFile","operation","PRN","deleteAttachment","actionType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n//import CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport {injectIntl } from 'react-intl';\r\nimport { attachmentType } from '../../components/Enumeration';\r\n//import { Row, Col, Form } from 'react-bootstrap';\r\n\r\nconst AddBarcode = (props) => {\r\n    return(\r\n          <Row>                       \r\n            <Col md={12}>\r\n                  <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_BARCODE\" })}\r\n                    name= \"sbarcodename\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_BARCODE\" })}\r\n                    value={ props.selectedRecord[\"sbarcodename\"] ? props.selectedRecord[\"sbarcodename\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={12}>\r\n                        <FormSelectSearch\r\n                                    name={props.barcodeData.nquerycode}\r\n                                    formLabel={ props.intl.formatMessage({ id:\"IDS_QUERY\"})}                              \r\n                                    placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                            \r\n                                    options={ props.queryMapList || []}\r\n                                    value = { props.selectedRecord ? props.selectedRecord[\"nsqlquerycode\"]:\"\"}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    isMulti={false}\r\n                                    isSearchable={true}                                \r\n                                    isDisabled={false}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange = {(event)=> props.onComboChange(event, \"nsqlquerycode\")}                               \r\n                            />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                            <FormSelectSearch\r\n                                    name={props.barcodeData.ncontrolcode}\r\n                                    formLabel={ props.intl.formatMessage({ id:\"IDS_CONTROTYPE\"})}                              \r\n                                    placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                               \r\n                                    options={ props.controlMapList || []}\r\n                                    value = { props.selectedRecord ? props.selectedRecord[\"ncontrolcode\"]:\"\"}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    isMulti={false}\r\n                                    isSearchable={true}                                \r\n                                    isDisabled={false}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange = {(event)=> props.onComboChange(event, \"ncontrolcode\")}                               \r\n                            />\r\n                    </Col>\r\n\r\n\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id:\"IDS_DESCRIPTION\" })}\r\n                    name=\"sdescription\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord[\"sdescription\"] ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={255}\r\n                />\r\n            </Col>\r\n\r\n            {/* <Col md=\"12\">\r\n                <Form.Group>\r\n                    <Form.Check \r\n                        name=\"nattachmenttypecode\" \r\n                        type=\"radio\"\r\n                        id=\"AddFiles\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_FTP\" })}\r\n                        inline={true}\r\n                        onChange={(event)=>props.onInputOnChange(event, 1)}\r\n                        //checked={nattachmenttypecode===attachmentType.FTP?true:false}\r\n                        //disabled={disabled}\r\n                    >\r\n                    </Form.Check>\r\n                    </Form.Group>\r\n                </Col> */}\r\n\r\n\r\n            <Col md={12}>\r\n                <DropZone\r\n                    name='TestBarcode' \r\n                    label={props.intl.formatMessage({ id: \"IDS_BARCODE\" })}\r\n                    maxFiles={1}\r\n                    accept=\".prn\"\r\n                    minSize={0}\r\n                    maxSize={1}\r\n                    onDrop={(event)=>props.onDropTestFile(event,'sfilename',1)}\r\n                    multiple={false}\r\n                    editFiles={props.selectedRecord?props.selectedRecord:{}}\r\n                    attachmentTypeCode={props.operation === \"update\" ? attachmentType.PRN : \"\"}            \r\n                    fileSizeName=\"nfilesize\"\r\n                    fileName=\"sfilename\"\r\n                    deleteAttachment={props.deleteAttachment}\r\n                    actionType={props.actionType}\r\n                    //disabled={disabled}\r\n                />\r\n            </Col>\r\n         </Row>\r\n    );\r\n};\r\nexport default injectIntl(AddBarcode);"]},"metadata":{},"sourceType":"module"}