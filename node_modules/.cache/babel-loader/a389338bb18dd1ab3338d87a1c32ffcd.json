{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';//createRef\nimport{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{Grid,GridColumn,GridColumnMenuFilter,GridNoRecords}from'@progress/kendo-react-grid';import{Draggable,Droppable}from'react-drag-and-drop';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faGripVertical}from'@fortawesome/free-solid-svg-icons';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{callService,crudMaster,validateEsignCredential,updateStore,getSQLQueryDetail,getSQLQueryComboService,filterColumnData,comboChangeQueryType,executeUserQuery,comboColumnValues,getColumnNamesByTableName}from'../../actions';import{AtTableWrap}from'../../components/data-grid/data-grid.styles';import{process}from'@progress/kendo-data-query';import ColumnMenu from'../../components/data-grid/ColumnMenu';import{tableType,queryTypeFilter}from'../../components/Enumeration';import SqlBuilderTableGrid from'./SqlBuilderTableGrid';var AddQuery=/*#__PURE__*/function(_Component){_inherits(AddQuery,_Component);var _super=_createSuper(AddQuery);function AddQuery(_props){var _this;_classCallCheck(this,AddQuery);_this=_super.call(this,_props);_this.tableDataStateChange=function(event){_this.setState({dataStateTable:event.dataState});};_this.expandChange=function(event){event.dataItem.expanded=!event.dataItem.expanded;_this.forceUpdate();};_this.detailBand=function(props){var columnName=_this.props.tableList.filter(function(p){return p.stable===props.dataItem.tableName;});return/*#__PURE__*/React.createElement(Grid,{data:columnName//resizable\n//scrollable={\"scrollable\"}\n},/*#__PURE__*/React.createElement(GridColumn,{width:\"48px\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Draggable,{type:'dragcolumn',data:_this.props.selectedRecord[\"ssqlquery\"]?_this.props.selectedRecord[\"ssqlquery\"].includes('where')?row.dataItem.isjsoncolumn?row.dataItem.ismultilingual?\"\\\"\"+row.dataItem.stabledisplayname+\"\\\".\"+row.dataItem.jsoncolumnname+\"->'\"+row.dataItem.scolumn+\"'->><@\"+row.dataItem.parametername+\"@> \":\"\\\"\"+row.dataItem.stabledisplayname+\"\\\".\"+row.dataItem.jsoncolumnname+\"->>'\"+row.dataItem.scolumn+\"' \":\"\\\"\"+row.dataItem.stabledisplayname+\"\\\".\\\"\"+row.dataItem.scolumn+\"\\\" \":row.dataItem.isjsoncolumn?row.dataItem.ismultilingual?\"\\\"\"+row.dataItem.stabledisplayname+\"\\\".\"+row.dataItem.jsoncolumnname+\"->'\"+row.dataItem.scolumn+\"'->><@\"+row.dataItem.parametername+\"@> \\\"\"+row.dataItem.scolumndisplayname+\"\\\"\":\"\\\"\"+row.dataItem.stabledisplayname+\"\\\".\"+row.dataItem.jsoncolumnname+\"->>'\"+row.dataItem.scolumn+\"' \\\"\"+row.dataItem.scolumndisplayname+\"\\\"\":\"\\\"\"+row.dataItem.stabledisplayname+\"\\\".\\\"\"+row.dataItem.scolumn+\"\\\" \\\"\"+row.dataItem.scolumndisplayname+\"\\\"\":row.dataItem.isjsoncolumn?row.dataItem.ismultilingual?\"\\\"\"+row.dataItem.stabledisplayname+\"\\\".\"+row.dataItem.jsoncolumnname+\"->'\"+row.dataItem.scolumn+\"'->><@\"+row.dataItem.parametername+\"@> \\\"\"+row.dataItem.scolumndisplayname+\"\\\"\":\"\\\"\"+row.dataItem.stabledisplayname+\"\\\".\"+row.dataItem.jsoncolumnname+\"->>'\"+row.dataItem.scolumn+\"' \\\"\"+row.dataItem.scolumndisplayname+\"\\\"\":\"\\\"\"+row.dataItem.stabledisplayname+\"\\\".\\\"\"+row.dataItem.scolumn+\"\\\" \\\"\"+row.dataItem.scolumndisplayname+\"\\\"\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faGripVertical,className:\"dragicon\"}),console.log(_this.props.selectedRecord[\"ssqlquery\"]&&_this.props.selectedRecord[\"ssqlquery\"].includes('where'))));}}),/*#__PURE__*/React.createElement(GridColumn,{width:\"336px\",field:\"scolumndisplayname\",title:_this.props.intl.formatMessage({id:\"IDS_COLUMN_NAME\"})}));};_this.state={dataStateTable:{skip:0}};return _this;}_createClass(AddQuery,[{key:\"render\",value:// columnProps(field) {\n//     if (!this.props.hideColumnFilter) {\n//         return {\n//             field: field,\n//             columnMenu: ColumnMenu,\n//             headerClassName: this.isColumnActive(field, this.state.dataStateTable) ? 'active' : ''\n//         };\n//     }\n// }\n// isColumnActive(field, dataState) {\n//     return GridColumnMenuFilter.active(field, dataState.filter)\n// }\nfunction render(){var _this2=this;var selectedRecordValue=_objectSpread({},this.props.selectedRecord);return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntabletypecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_TABLETYPE\"}),isSearchable:false,isDisabled:false,isMulti:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:this.props.tableType// optionId='ntabletypecode'\n// optionValue='stabletype'\n,defaultValue:this.props.selectedTableType[\"ntabletypecode\"],showOption:true,required:true,value:this.props.selectedTableType[\"ntabletypecode\"]?this.props.selectedTableType[\"ntabletypecode\"]:\"\",closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return _this2.props.onComboChange(event,'ntabletypecode');}//  sortField={\"ntabletypecode\"}\n//  sortOrder={\"ascending\"}\n}),this.props.tableTypeCode===tableType.ALL?\"\":/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nformcode\",formLabel:this.props.intl.formatMessage({id:this.props.tableTypeCode===tableType.MODULES?\"IDS_MODULENAME\":this.props.tableTypeCode===tableType.FORMS?\"IDS_FORMNAME\":\"IDS_FORMNAME\"}),isSearchable:true,isDisabled:this.props.tableTypeCode===tableType.ALL?true:false,isMulti:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:this.props.moduleFormName||[],optionId:\"nformcode\",optionValue:\"sformname\",defaultValue:this.props.selectedRecord[\"nformcode\"],showOption:true,required:true,value:this.props.selectedRecord[\"nformcode\"]?this.props.selectedRecord[\"nformcode\"]:\"\",closeMenuOnSelect:true//alphabeticalSort={true}\n,onChange:function onChange(event){return _this2.props.onComboChange(event,'nformcode');}//sortField={\"nformcode\"}\n//sortOrder={\"ascending\"}\n}),/*#__PURE__*/React.createElement(SqlBuilderTableGrid,{style:{height:'600px'},data:process(this.props.tableName,this.state.dataStateTable),onDataStateChange:this.tableDataStateChange,dataState:this.state.dataStateTable,detail:this.detailBand,expandField:\"expanded\",onExpandChange:this.expandChange,selectedRecord:selectedRecordValue,pageable:{buttonCount:4,pageSizes:this.props.Login.settings&&this.props.Login.settings[15].split(\",\").map(function(setting){return parseInt(setting);}),previousNext:false},hideColumnFilter:this.props.hideColumnFilter})))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"ssqlqueryname\",label:this.props.intl.formatMessage({id:\"IDS_SQLQUERYNAME\"}),type:\"text\",onChange:function onChange(event){return _this2.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_SQLQUERYNAME\"}),value:this.props.selectedRecord[\"ssqlqueryname\"],isMandatory:true,required:true,maxLength:100}),/*#__PURE__*/React.createElement(Droppable,{types:['dragcolumn','dragtable'],onDrop:function onDrop(event){return _this2.props.onDrop(event);}},/*#__PURE__*/React.createElement(FormTextarea,{name:\"ssqlquery\",label:this.props.intl.formatMessage({id:\"IDS_SQLQUERY\"}),onChange:function onChange(event){return _this2.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_SQLQUERY\"}),value:this.props.selectedRecord[\"ssqlquery\"],rows:15,isMandatory:true,required:true,maxLength:10000})),this.props.queryTypeCode===queryTypeFilter.LIMSALERTQUERY&&/*#__PURE__*/React.createElement(FormInput,{name:\"sscreenheader\",label:this.props.intl.formatMessage({id:\"IDS_SCREENHEADER\"}),type:\"text\",onChange:function onChange(event){return _this2.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_SCREENHEADER\"}),value:this.props.selectedRecord[\"sscreenheader\"],isMandatory:true,required:true,maxLength:100,isDisabled:this.props.queryTypeCode===2?false:true}),this.props.queryTypeCode===queryTypeFilter.LIMSFILTERQUERY&&/*#__PURE__*/React.createElement(FormInput,{name:\"svaluemember\",label:this.props.intl.formatMessage({id:\"IDS_SVALUEMEMBER\"}),type:\"text\",onChange:function onChange(event){return _this2.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_SVALUEMEMBER\"}),value:this.props.selectedRecord[\"svaluemember\"],isMandatory:true,required:true,maxLength:100}),this.props.queryTypeCode===queryTypeFilter.LIMSFILTERQUERY&&/*#__PURE__*/React.createElement(FormInput,{name:\"sdisplaymember\",label:this.props.intl.formatMessage({id:\"IDS_SDISPLAYMEMBER\"}),type:\"text\",onChange:function onChange(event){return _this2.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_SDISPLAYMEMBER\"}),value:this.props.selectedRecord[\"sdisplaymember\"],isMandatory:true,required:true,maxLength:100}),this.props.queryTypeCode===queryTypeFilter.LIMSDASHBOARDQUERY&&/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ncharttypecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_CHARTTYPE\"}),isSearchable:true,placeholder:\"Please Select...\",isMandatory:true,options:this.props.chartList,optionId:\"ncharttypecode\",optionValue:\"schartname\",value:this.props.selectedRecord[\"ncharttypecode\"],defaultValue:this.props.selectedRecord[\"ncharttypecode\"],onChange:function onChange(event){return _this2.props.onComboChange(event,'ncharttypecode');},closeMenuOnSelect:true,alphabeticalSort:true,isDisabled:this.props.queryTypeCode===1?false:true})))));}}]);return AddQuery;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,filterColumnData:filterColumnData,validateEsignCredential:validateEsignCredential,getSQLQueryDetail:getSQLQueryDetail,getSQLQueryComboService:getSQLQueryComboService,comboChangeQueryType:comboChangeQueryType,executeUserQuery:executeUserQuery,comboColumnValues:comboColumnValues,getColumnNamesByTableName:getColumnNamesByTableName})(injectIntl(AddQuery));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboard/AddQuery.jsx"],"names":["React","Component","connect","injectIntl","Row","Col","Grid","GridColumn","GridColumnMenuFilter","GridNoRecords","Draggable","Droppable","FontAwesomeIcon","faGripVertical","FormInput","FormTextarea","FormSelectSearch","callService","crudMaster","validateEsignCredential","updateStore","getSQLQueryDetail","getSQLQueryComboService","filterColumnData","comboChangeQueryType","executeUserQuery","comboColumnValues","getColumnNamesByTableName","AtTableWrap","process","ColumnMenu","tableType","queryTypeFilter","SqlBuilderTableGrid","AddQuery","props","tableDataStateChange","event","setState","dataStateTable","dataState","expandChange","dataItem","expanded","forceUpdate","detailBand","columnName","tableList","filter","p","stable","tableName","row","selectedRecord","includes","isjsoncolumn","ismultilingual","stabledisplayname","jsoncolumnname","scolumn","parametername","scolumndisplayname","console","log","intl","formatMessage","id","state","skip","selectedRecordValue","selectedTableType","onComboChange","tableTypeCode","ALL","MODULES","FORMS","moduleFormName","height","buttonCount","pageSizes","Login","settings","split","map","setting","parseInt","previousNext","hideColumnFilter","onInputOnChange","onDrop","queryTypeCode","LIMSALERTQUERY","LIMSFILTERQUERY","LIMSDASHBOARDQUERY","chartList","mapStateToProps"],"mappings":"yxBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAAyC;AACzC,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,oBAA3B,CAAgDC,aAAhD,KAAoE,4BAApE,CACA,OAASC,SAAT,CAAoBC,SAApB,KAAqC,qBAArC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,cAAT,KAA+B,mCAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,OACIC,WADJ,CACiBC,UADjB,CAC6BC,uBAD7B,CACsDC,WADtD,CACmEC,iBADnE,CAEIC,uBAFJ,CAE6BC,gBAF7B,CAE+CC,oBAF/C,CAEqEC,gBAFrE,CAEuFC,iBAFvF,CAE0GC,yBAF1G,KAGO,eAHP,CAIA,OAASC,WAAT,KAA4B,6CAA5B,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uCAAvB,CACA,OAASC,SAAT,CAAoBC,eAApB,KAA2C,8BAA3C,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uBAAhC,C,GAGMC,CAAAA,Q,oGACF,kBAAYC,MAAZ,CAAmB,0CACf,uBAAMA,MAAN,EADe,MAOnBC,oBAPmB,CAOI,SAACC,KAAD,CAAW,CAC9B,MAAKC,QAAL,CAAc,CACVC,cAAc,CAAEF,KAAK,CAACG,SADZ,CAAd,EAGH,CAXkB,OAYnBC,YAZmB,CAYJ,SAACJ,KAAD,CAAW,CACtBA,KAAK,CAACK,QAAN,CAAeC,QAAf,CAA0B,CAACN,KAAK,CAACK,QAAN,CAAeC,QAA1C,CACA,MAAKC,WAAL,GACH,CAfkB,OAiBnBC,UAjBmB,CAiBN,SAACV,KAAD,CAAW,CACpB,GAAMW,CAAAA,UAAU,CAAG,MAAKX,KAAL,CAAWY,SAAX,CAAqBC,MAArB,CAA4B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,MAAF,GAAaf,KAAK,CAACO,QAAN,CAAeS,SAAhC,EAA7B,CAAnB,CAEA,mBACI,oBAAC,IAAD,EACI,IAAI,CAAEL,UACV;AACA;AAHA,eAMI,oBAAC,UAAD,EACI,KAAK,CAAC,MADV,CAEI,IAAI,CAAE,cAACM,GAAD,qBACF,2CACI,oBAAC,SAAD,EAAW,IAAI,CAAE,YAAjB,CAA+B,IAAI,CAAE,MAAKjB,KAAL,CAAWkB,cAAX,CAA0B,WAA1B,EACjC,MAAKlB,KAAL,CAAWkB,cAAX,CAA0B,WAA1B,EAAuCC,QAAvC,CAAgD,OAAhD,EAEIF,GAAG,CAACV,QAAJ,CAAaa,YAAb,CAA4BH,GAAG,CAACV,QAAJ,CAAac,cAAb,CACxB,KAAOJ,GAAG,CAACV,QAAJ,CAAae,iBAApB,CAAwC,KAAxC,CAAgDL,GAAG,CAACV,QAAJ,CAAagB,cAA7D,CAA8E,KAA9E,CAAsFN,GAAG,CAACV,QAAJ,CAAaiB,OAAnG,CAA6G,QAA7G,CAAwHP,GAAG,CAACV,QAAJ,CAAakB,aAArI,CAAqJ,KAD7H,CAEtB,KAAOR,GAAG,CAACV,QAAJ,CAAae,iBAApB,CAAwC,KAAxC,CAAgDL,GAAG,CAACV,QAAJ,CAAagB,cAA7D,CAA8E,MAA9E,CAAuFN,GAAG,CAACV,QAAJ,CAAaiB,OAApG,CAA8G,IAFpH,CAGM,KAAOP,GAAG,CAACV,QAAJ,CAAae,iBAApB,CAAwC,OAAxC,CAAkDL,GAAG,CAACV,QAAJ,CAAaiB,OAA/D,CAAyE,KALnF,CAOMP,GAAG,CAACV,QAAJ,CAAaa,YAAb,CAA4BH,GAAG,CAACV,QAAJ,CAAac,cAAb,CAC1B,KAAOJ,GAAG,CAACV,QAAJ,CAAae,iBAApB,CAAwC,KAAxC,CAAgDL,GAAG,CAACV,QAAJ,CAAagB,cAA7D,CAA8E,KAA9E,CAAsFN,GAAG,CAACV,QAAJ,CAAaiB,OAAnG,CAA6G,QAA7G,CAAwHP,GAAG,CAACV,QAAJ,CAAakB,aAArI,CAAqJ,OAArJ,CAA+JR,GAAG,CAACV,QAAJ,CAAamB,kBAA5K,CAAiM,IADvK,CAExB,KAAOT,GAAG,CAACV,QAAJ,CAAae,iBAApB,CAAwC,KAAxC,CAAgDL,GAAG,CAACV,QAAJ,CAAagB,cAA7D,CAA8E,MAA9E,CAAuFN,GAAG,CAACV,QAAJ,CAAaiB,OAApG,CAA8G,MAA9G,CAAuHP,GAAG,CAACV,QAAJ,CAAamB,kBAApI,CAAyJ,IAF7J,CAGI,KAAOT,GAAG,CAACV,QAAJ,CAAae,iBAApB,CAAwC,OAAxC,CAAkDL,GAAG,CAACV,QAAJ,CAAaiB,OAA/D,CAAyE,OAAzE,CAAmFP,GAAG,CAACV,QAAJ,CAAamB,kBAAhG,CAAqH,IAX9F,CAa/BT,GAAG,CAACV,QAAJ,CAAaa,YAAb,CAA4BH,GAAG,CAACV,QAAJ,CAAac,cAAb,CAC1B,KAAOJ,GAAG,CAACV,QAAJ,CAAae,iBAApB,CAAwC,KAAxC,CAAgDL,GAAG,CAACV,QAAJ,CAAagB,cAA7D,CAA8E,KAA9E,CAAsFN,GAAG,CAACV,QAAJ,CAAaiB,OAAnG,CAA6G,QAA7G,CAAwHP,GAAG,CAACV,QAAJ,CAAakB,aAArI,CAAqJ,OAArJ,CAA+JR,GAAG,CAACV,QAAJ,CAAamB,kBAA5K,CAAiM,IADvK,CAExB,KAAOT,GAAG,CAACV,QAAJ,CAAae,iBAApB,CAAwC,KAAxC,CAAgDL,GAAG,CAACV,QAAJ,CAAagB,cAA7D,CAA8E,MAA9E,CAAuFN,GAAG,CAACV,QAAJ,CAAaiB,OAApG,CAA8G,MAA9G,CAAuHP,GAAG,CAACV,QAAJ,CAAamB,kBAApI,CAAyJ,IAF7J,CAGI,KAAOT,GAAG,CAACV,QAAJ,CAAae,iBAApB,CAAwC,OAAxC,CAAkDL,GAAG,CAACV,QAAJ,CAAaiB,OAA/D,CAAyE,OAAzE,CAAmFP,GAAG,CAACV,QAAJ,CAAamB,kBAAhG,CAAqH,IAhB/H,eAiBI,oBAAC,eAAD,EAAiB,IAAI,CAAEhD,cAAvB,CAAuC,SAAS,CAAC,UAAjD,EAjBJ,CAkBKiD,OAAO,CAACC,GAAR,CAAY,MAAK5B,KAAL,CAAWkB,cAAX,CAA0B,WAA1B,GAA0C,MAAKlB,KAAL,CAAWkB,cAAX,CAA0B,WAA1B,EAAuCC,QAAvC,CAAgD,OAAhD,CAAtD,CAlBL,CADJ,CADE,EAFV,EANJ,cAkCI,oBAAC,UAAD,EACI,KAAK,CAAE,OADX,CAEI,KAAK,CAAC,oBAFV,CAGI,KAAK,CAAE,MAAKnB,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,iBAAN,CAA9B,CAHX,EAlCJ,CADJ,CA2CH,CA/DkB,CAEf,MAAKC,KAAL,CAAc,CACV5B,cAAc,CAAE,CAAE6B,IAAI,CAAE,CAAR,CADN,CAAd,CAFe,aAMlB,C,2CA0DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,iBAAS,iBACL,GAAIC,CAAAA,mBAAmB,kBAAK,KAAKlC,KAAL,CAAWkB,cAAhB,CAAvB,CACA,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,IAAI,CAAE,gBADV,CAEI,SAAS,CAAE,KAAKlB,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,eAAN,CAA9B,CAFf,CAGI,YAAY,CAAE,KAHlB,CAII,UAAU,CAAE,KAJhB,CAKI,OAAO,CAAE,KALb,CAMI,WAAW,CAAE,KAAK/B,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CANjB,CAOI,WAAW,CAAE,IAPjB,CAQI,OAAO,CAAE,KAAK/B,KAAL,CAAWJ,SACpB;AACA;AAVJ,CAWI,YAAY,CAAE,KAAKI,KAAL,CAAWmC,iBAAX,CAA6B,gBAA7B,CAXlB,CAYI,UAAU,CAAE,IAZhB,CAaI,QAAQ,CAAE,IAbd,CAcI,KAAK,CAAE,KAAKnC,KAAL,CAAWmC,iBAAX,CAA6B,gBAA7B,EAAiD,KAAKnC,KAAL,CAAWmC,iBAAX,CAA6B,gBAA7B,CAAjD,CAAkG,EAd7G,CAeI,iBAAiB,CAAE,IAfvB,CAgBI,gBAAgB,CAAE,IAhBtB,CAiBI,QAAQ,CAAE,kBAACjC,KAAD,QAAW,CAAA,MAAI,CAACF,KAAL,CAAWoC,aAAX,CAAyBlC,KAAzB,CAAgC,gBAAhC,CAAX,EACd;AACA;AAnBA,EADJ,CAwBK,KAAKF,KAAL,CAAWqC,aAAX,GAA6BzC,SAAS,CAAC0C,GAAvC,CAA6C,EAA7C,cACG,oBAAC,gBAAD,EACI,IAAI,CAAE,WADV,CAEI,SAAS,CAAE,KAAKtC,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,KAAK/B,KAAL,CAAWqC,aAAX,GAA6BzC,SAAS,CAAC2C,OAAvC,CAAiD,gBAAjD,CAAoE,KAAKvC,KAAL,CAAWqC,aAAX,GAA6BzC,SAAS,CAAC4C,KAAvC,CAA+C,cAA/C,CAAgE,cAA1I,CAA9B,CAFf,CAGI,YAAY,CAAE,IAHlB,CAII,UAAU,CAAE,KAAKxC,KAAL,CAAWqC,aAAX,GAA6BzC,SAAS,CAAC0C,GAAvC,CAA6C,IAA7C,CAAoD,KAJpE,CAKI,OAAO,CAAE,KALb,CAMI,WAAW,CAAE,KAAKtC,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CANjB,CAOI,WAAW,CAAE,IAPjB,CAQI,OAAO,CAAE,KAAK/B,KAAL,CAAWyC,cAAX,EAA6B,EAR1C,CASI,QAAQ,CAAC,WATb,CAUI,WAAW,CAAC,WAVhB,CAWI,YAAY,CAAE,KAAKzC,KAAL,CAAWkB,cAAX,CAA0B,WAA1B,CAXlB,CAYI,UAAU,CAAE,IAZhB,CAaI,QAAQ,CAAE,IAbd,CAcI,KAAK,CAAE,KAAKlB,KAAL,CAAWkB,cAAX,CAA0B,WAA1B,EAAyC,KAAKlB,KAAL,CAAWkB,cAAX,CAA0B,WAA1B,CAAzC,CAAkF,EAd7F,CAeI,iBAAiB,CAAE,IACnB;AAhBJ,CAiBI,QAAQ,CAAE,kBAAChB,KAAD,QAAW,CAAA,MAAI,CAACF,KAAL,CAAWoC,aAAX,CAAyBlC,KAAzB,CAAgC,WAAhC,CAAX,EACd;AACA;AAnBA,EAzBR,cAiDI,oBAAC,mBAAD,EACA,KAAK,CAAE,CAAEwC,MAAM,CAAE,OAAV,CADP,CAEA,IAAI,CAAEhD,OAAO,CAAC,KAAKM,KAAL,CAAWgB,SAAZ,CAAuB,KAAKgB,KAAL,CAAW5B,cAAlC,CAFb,CAGA,iBAAiB,CAAE,KAAKH,oBAHxB,CAIA,SAAS,CAAE,KAAK+B,KAAL,CAAW5B,cAJtB,CAKA,MAAM,CAAE,KAAKM,UALb,CAMA,WAAW,CAAC,UANZ,CAOA,cAAc,CAAE,KAAKJ,YAPrB,CAQA,cAAc,CAAE4B,mBARhB,CASA,QAAQ,CAAE,CAAES,WAAW,CAAE,CAAf,CAAkBC,SAAS,CAAE,KAAK5C,KAAL,CAAW6C,KAAX,CAAiBC,QAAjB,EACnC,KAAK9C,KAAL,CAAW6C,KAAX,CAAiBC,QAAjB,CAA0B,EAA1B,EAA8BC,KAA9B,CAAoC,GAApC,EAAyCC,GAAzC,CAA6C,SAAAC,OAAO,QAAIC,CAAAA,QAAQ,CAACD,OAAD,CAAZ,EAApD,CADM,CAELE,YAAY,CAAE,KAFT,CATV,CAYA,gBAAgB,CAAE,KAAKnD,KAAL,CAAWoD,gBAZ7B,EAjDJ,CADJ,CADJ,CADJ,cA6GI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,SAAD,EACI,IAAI,CAAE,eADV,CAEI,KAAK,CAAE,KAAKpD,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFX,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAAC7B,KAAD,QAAW,CAAA,MAAI,CAACF,KAAL,CAAWqD,eAAX,CAA2BnD,KAA3B,CAAX,EAJd,CAKI,WAAW,CAAE,KAAKF,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CALjB,CAMI,KAAK,CAAE,KAAK/B,KAAL,CAAWkB,cAAX,CAA0B,eAA1B,CANX,CAOI,WAAW,CAAE,IAPjB,CAQI,QAAQ,CAAE,IARd,CASI,SAAS,CAAE,GATf,EADJ,cAcI,oBAAC,SAAD,EACI,KAAK,CAAE,CAAC,YAAD,CAAe,WAAf,CADX,CAEI,MAAM,CAAE,gBAAAhB,KAAK,QAAI,CAAA,MAAI,CAACF,KAAL,CAAWsD,MAAX,CAAkBpD,KAAlB,CAAJ,EAFjB,eAKI,oBAAC,YAAD,EACI,IAAI,CAAE,WADV,CAEI,KAAK,CAAE,KAAKF,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,cAAN,CAA9B,CAFX,CAGI,QAAQ,CAAE,kBAAC7B,KAAD,QAAW,CAAA,MAAI,CAACF,KAAL,CAAWqD,eAAX,CAA2BnD,KAA3B,CAAX,EAHd,CAII,WAAW,CAAE,KAAKF,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,cAAN,CAA9B,CAJjB,CAKI,KAAK,CAAE,KAAK/B,KAAL,CAAWkB,cAAX,CAA0B,WAA1B,CALX,CAMI,IAAI,CAAE,EANV,CAOI,WAAW,CAAE,IAPjB,CAQI,QAAQ,CAAE,IARd,CASI,SAAS,CAAE,KATf,EALJ,CAdJ,CAgDK,KAAKlB,KAAL,CAAWuD,aAAX,GAA6B1D,eAAe,CAAC2D,cAA7C,eACG,oBAAC,SAAD,EACI,IAAI,CAAE,eADV,CAEI,KAAK,CAAE,KAAKxD,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFX,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAAC7B,KAAD,QAAW,CAAA,MAAI,CAACF,KAAL,CAAWqD,eAAX,CAA2BnD,KAA3B,CAAX,EAJd,CAKI,WAAW,CAAE,KAAKF,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CALjB,CAMI,KAAK,CAAE,KAAK/B,KAAL,CAAWkB,cAAX,CAA0B,eAA1B,CANX,CAOI,WAAW,CAAE,IAPjB,CAQI,QAAQ,CAAE,IARd,CASI,SAAS,CAAE,GATf,CAUI,UAAU,CAAE,KAAKlB,KAAL,CAAWuD,aAAX,GAA6B,CAA7B,CAAiC,KAAjC,CAAyC,IAVzD,EAjDR,CA8DK,KAAKvD,KAAL,CAAWuD,aAAX,GAA6B1D,eAAe,CAAC4D,eAA7C,eACG,oBAAC,SAAD,EACI,IAAI,CAAE,cADV,CAEI,KAAK,CAAE,KAAKzD,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAFX,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAAC7B,KAAD,QAAW,CAAA,MAAI,CAACF,KAAL,CAAWqD,eAAX,CAA2BnD,KAA3B,CAAX,EAJd,CAKI,WAAW,CAAE,KAAKF,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CALjB,CAMI,KAAK,CAAE,KAAK/B,KAAL,CAAWkB,cAAX,CAA0B,cAA1B,CANX,CAOI,WAAW,CAAE,IAPjB,CAQI,QAAQ,CAAE,IARd,CASI,SAAS,CAAE,GATf,EA/DR,CA4EK,KAAKlB,KAAL,CAAWuD,aAAX,GAA6B1D,eAAe,CAAC4D,eAA7C,eACG,oBAAC,SAAD,EACI,IAAI,CAAE,gBADV,CAEI,KAAK,CAAE,KAAKzD,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oBAAN,CAA9B,CAFX,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAAC7B,KAAD,QAAW,CAAA,MAAI,CAACF,KAAL,CAAWqD,eAAX,CAA2BnD,KAA3B,CAAX,EAJd,CAKI,WAAW,CAAE,KAAKF,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,oBAAN,CAA9B,CALjB,CAMI,KAAK,CAAE,KAAK/B,KAAL,CAAWkB,cAAX,CAA0B,gBAA1B,CANX,CAOI,WAAW,CAAE,IAPjB,CAQI,QAAQ,CAAE,IARd,CASI,SAAS,CAAE,GATf,EA7ER,CA0FK,KAAKlB,KAAL,CAAWuD,aAAX,GAA6B1D,eAAe,CAAC6D,kBAA7C,eACG,oBAAC,gBAAD,EACI,IAAI,CAAE,gBADV,CAEI,SAAS,CAAE,KAAK1D,KAAL,CAAW6B,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,eAAN,CAA9B,CAFf,CAGI,YAAY,CAAE,IAHlB,CAMI,WAAW,CAAC,kBANhB,CAOI,WAAW,CAAE,IAPjB,CAQI,OAAO,CAAE,KAAK/B,KAAL,CAAW2D,SARxB,CASI,QAAQ,CAAC,gBATb,CAUI,WAAW,CAAC,YAVhB,CAWI,KAAK,CAAE,KAAK3D,KAAL,CAAWkB,cAAX,CAA0B,gBAA1B,CAXX,CAYI,YAAY,CAAE,KAAKlB,KAAL,CAAWkB,cAAX,CAA0B,gBAA1B,CAZlB,CAcI,QAAQ,CAAE,kBAAChB,KAAD,QAAW,CAAA,MAAI,CAACF,KAAL,CAAWoC,aAAX,CAAyBlC,KAAzB,CAAgC,gBAAhC,CAAX,EAdd,CAeI,iBAAiB,CAAE,IAfvB,CAgBI,gBAAgB,CAAE,IAhBtB,CAiBI,UAAU,CAAE,KAAKF,KAAL,CAAWuD,aAAX,GAA6B,CAA7B,CAAiC,KAAjC,CAAyC,IAjBzD,EA3FR,CADJ,CADJ,CA7GJ,CADJ,CAoOH,C,sBArTkBzF,S,EAwTvB,GAAM8F,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAC5B,KAAD,CAAW,CAC/B,MAAO,CACHa,KAAK,CAAEb,KAAK,CAACa,KADV,CAAP,CAGH,CAJD,CAMA,cAAe9E,CAAAA,OAAO,CAAC6F,eAAD,CAAkB,CACpC9E,WAAW,CAAXA,WADoC,CACvBC,UAAU,CAAVA,UADuB,CACXE,WAAW,CAAXA,WADW,CACEG,gBAAgB,CAAhBA,gBADF,CACoBJ,uBAAuB,CAAvBA,uBADpB,CAC6CE,iBAAiB,CAAjBA,iBAD7C,CACgEC,uBAAuB,CAAvBA,uBADhE,CACyFE,oBAAoB,CAApBA,oBADzF,CAC+GC,gBAAgB,CAAhBA,gBAD/G,CACiIC,iBAAiB,CAAjBA,iBADjI,CACoJC,yBAAyB,CAAzBA,yBADpJ,CAAlB,CAAP,CAEZxB,UAAU,CAAC+B,QAAD,CAFE,CAAf","sourcesContent":["import React, { Component } from 'react';//createRef\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Grid, GridColumn, GridColumnMenuFilter,GridNoRecords} from '@progress/kendo-react-grid';\r\nimport { Draggable, Droppable } from 'react-drag-and-drop';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component'\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSQLQueryDetail,\r\n    getSQLQueryComboService, filterColumnData, comboChangeQueryType, executeUserQuery, comboColumnValues, getColumnNamesByTableName\r\n} from '../../actions';\r\nimport { AtTableWrap } from '../../components/data-grid/data-grid.styles';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ColumnMenu from '../../components/data-grid/ColumnMenu';\r\nimport { tableType, queryTypeFilter } from '../../components/Enumeration';\r\nimport SqlBuilderTableGrid from './SqlBuilderTableGrid';\r\n\r\n\r\nclass AddQuery extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            dataStateTable: { skip: 0 },\r\n        });\r\n\r\n    }\r\n    tableDataStateChange = (event) => {\r\n        this.setState({\r\n            dataStateTable: event.dataState\r\n        });\r\n    }\r\n    expandChange = (event) => {\r\n        event.dataItem.expanded = !event.dataItem.expanded;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    detailBand = (props) => {\r\n        const columnName = this.props.tableList.filter(p => p.stable === props.dataItem.tableName)\r\n\r\n        return (\r\n            <Grid\r\n                data={columnName}\r\n            //resizable\r\n            //scrollable={\"scrollable\"}\r\n            >\r\n\r\n                <GridColumn\r\n                    width=\"48px\"\r\n                    cell={(row) => (\r\n                        <td>\r\n                            <Draggable type={'dragcolumn'} data={this.props.selectedRecord[\"ssqlquery\"] ?\r\n                                this.props.selectedRecord[\"ssqlquery\"].includes('where') ?\r\n\r\n                                    row.dataItem.isjsoncolumn ? row.dataItem.ismultilingual ?\r\n                                        \"\\\"\" + row.dataItem.stabledisplayname + \"\\\".\" + row.dataItem.jsoncolumnname + \"->'\" + row.dataItem.scolumn + \"'->><@\" + row.dataItem.parametername + \"@> \"\r\n                                        : \"\\\"\" + row.dataItem.stabledisplayname + \"\\\".\" + row.dataItem.jsoncolumnname + \"->>'\" + row.dataItem.scolumn + \"' \"\r\n                                        : \"\\\"\" + row.dataItem.stabledisplayname + \"\\\".\\\"\" + row.dataItem.scolumn + \"\\\" \"\r\n\r\n                                    : row.dataItem.isjsoncolumn ? row.dataItem.ismultilingual ?\r\n                                        \"\\\"\" + row.dataItem.stabledisplayname + \"\\\".\" + row.dataItem.jsoncolumnname + \"->'\" + row.dataItem.scolumn + \"'->><@\" + row.dataItem.parametername + \"@> \\\"\" + row.dataItem.scolumndisplayname + \"\\\"\"\r\n                                        : \"\\\"\" + row.dataItem.stabledisplayname + \"\\\".\" + row.dataItem.jsoncolumnname + \"->>'\" + row.dataItem.scolumn + \"' \\\"\" + row.dataItem.scolumndisplayname + \"\\\"\"\r\n                                        : \"\\\"\" + row.dataItem.stabledisplayname + \"\\\".\\\"\" + row.dataItem.scolumn + \"\\\" \\\"\" + row.dataItem.scolumndisplayname + \"\\\"\"\r\n\r\n                                : row.dataItem.isjsoncolumn ? row.dataItem.ismultilingual ?\r\n                                    \"\\\"\" + row.dataItem.stabledisplayname + \"\\\".\" + row.dataItem.jsoncolumnname + \"->'\" + row.dataItem.scolumn + \"'->><@\" + row.dataItem.parametername + \"@> \\\"\" + row.dataItem.scolumndisplayname + \"\\\"\"\r\n                                    : \"\\\"\" + row.dataItem.stabledisplayname + \"\\\".\" + row.dataItem.jsoncolumnname + \"->>'\" + row.dataItem.scolumn + \"' \\\"\" + row.dataItem.scolumndisplayname + \"\\\"\"\r\n                                    : \"\\\"\" + row.dataItem.stabledisplayname + \"\\\".\\\"\" + row.dataItem.scolumn + \"\\\" \\\"\" + row.dataItem.scolumndisplayname + \"\\\"\"}>\r\n                                <FontAwesomeIcon icon={faGripVertical} className=\"dragicon\" />\r\n                                {console.log(this.props.selectedRecord[\"ssqlquery\"] && this.props.selectedRecord[\"ssqlquery\"].includes('where'))}\r\n                            </Draggable>\r\n                        </td>\r\n                    )}\r\n                />\r\n\r\n                <GridColumn\r\n                    width={\"336px\"}\r\n                    field=\"scolumndisplayname\"\r\n                    title={this.props.intl.formatMessage({ id: \"IDS_COLUMN_NAME\" })}\r\n                />\r\n\r\n            </Grid>\r\n        );\r\n    }\r\n    // columnProps(field) {\r\n    //     if (!this.props.hideColumnFilter) {\r\n    //         return {\r\n    //             field: field,\r\n    //             columnMenu: ColumnMenu,\r\n    //             headerClassName: this.isColumnActive(field, this.state.dataStateTable) ? 'active' : ''\r\n    //         };\r\n    //     }\r\n    // }\r\n\r\n    // isColumnActive(field, dataState) {\r\n    //     return GridColumnMenuFilter.active(field, dataState.filter)\r\n    // }\r\n\r\n    render() {\r\n        let selectedRecordValue={...this.props.selectedRecord};\r\n        return (\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                name={\"ntabletypecode\"}\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TABLETYPE\" })}\r\n                                isSearchable={false}\r\n                                isDisabled={false}\r\n                                isMulti={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={true}\r\n                                options={this.props.tableType}\r\n                                // optionId='ntabletypecode'\r\n                                // optionValue='stabletype'\r\n                                defaultValue={this.props.selectedTableType[\"ntabletypecode\"]}\r\n                                showOption={true}\r\n                                required={true}\r\n                                value={this.props.selectedTableType[\"ntabletypecode\"] ? this.props.selectedTableType[\"ntabletypecode\"] : \"\"}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(event) => this.props.onComboChange(event, 'ntabletypecode')}\r\n                            //  sortField={\"ntabletypecode\"}\r\n                            //  sortOrder={\"ascending\"}\r\n\r\n                            >\r\n                            </FormSelectSearch>\r\n                            {this.props.tableTypeCode === tableType.ALL ? \"\" :\r\n                                <FormSelectSearch\r\n                                    name={\"nformcode\"}\r\n                                    formLabel={this.props.intl.formatMessage({ id: this.props.tableTypeCode === tableType.MODULES ? \"IDS_MODULENAME\" : this.props.tableTypeCode === tableType.FORMS ? \"IDS_FORMNAME\" : \"IDS_FORMNAME\" })}\r\n                                    isSearchable={true}\r\n                                    isDisabled={this.props.tableTypeCode === tableType.ALL ? true : false}\r\n                                    isMulti={false}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    options={this.props.moduleFormName || []}\r\n                                    optionId='nformcode'\r\n                                    optionValue='sformname'\r\n                                    defaultValue={this.props.selectedRecord[\"nformcode\"]}\r\n                                    showOption={true}\r\n                                    required={true}\r\n                                    value={this.props.selectedRecord[\"nformcode\"] ? this.props.selectedRecord[\"nformcode\"] : \"\"}\r\n                                    closeMenuOnSelect={true}\r\n                                    //alphabeticalSort={true}\r\n                                    onChange={(event) => this.props.onComboChange(event, 'nformcode')}\r\n                                //sortField={\"nformcode\"}\r\n                                //sortOrder={\"ascending\"}\r\n\r\n                                >\r\n                                </FormSelectSearch>\r\n                            }\r\n                            <SqlBuilderTableGrid\r\n                            style={{ height: '600px' }}\r\n                            data={process(this.props.tableName, this.state.dataStateTable)}\r\n                            onDataStateChange={this.tableDataStateChange}\r\n                            dataState={this.state.dataStateTable}\r\n                            detail={this.detailBand}\r\n                            expandField=\"expanded\"\r\n                            onExpandChange={this.expandChange}\r\n                            selectedRecord={selectedRecordValue}\r\n                            pageable={{ buttonCount: 4, pageSizes: this.props.Login.settings &&\r\n                                this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting)),\r\n                                 previousNext: false}}\r\n                            hideColumnFilter={this.props.hideColumnFilter}\r\n                            />\r\n                        \r\n                            {/* <AtTableWrap className=\"at-list-table\">\r\n                                <Grid\r\n                                    style={{ height: '600px' }}\r\n                                    data={process(this.props.tableName, this.state.dataStateTable)}\r\n                                    //{...this.dataStateTable}\r\n                                    onDataStateChange={this.tableDataStateChange}\r\n                                    dataState={this.state.dataStateTable}\r\n                                    detail={this.detailBand}\r\n                                    expandField=\"expanded\"\r\n                                    onExpandChange={this.expandChange}\r\n                                    pageable={{ buttonCount: 4, pageSizes: this.props.Login.settings &&\r\n                                        this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting)),\r\n                                         previousNext: false}}\r\n                                //data={process(this.props.tableList, this.props.dataStateTable)}\r\n\r\n                                >\r\n                                      <GridNoRecords>\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                                </GridNoRecords>\r\n                                    <GridColumn\r\n                                        width=\"48px\"\r\n                                        cell={(row) => (\r\n                                            <td >\r\n                                                <Draggable type=\"dragtable\" data={row.dataItem.tableName + \" \\\"\" + row.dataItem.stabledisplayname + \"\\\"\"}>\r\n                                                    <FontAwesomeIcon icon={faGripVertical} className=\"dragicon\"></FontAwesomeIcon>\r\n                                                </Draggable>\r\n                                            </td>\r\n                                        )}\r\n                                    />\r\n\r\n                                    <GridColumn\r\n                                        width={\"425px\"}\r\n                                        field=\"stabledisplayname\"\r\n                                        {...this.columnProps(\"stabledisplayname\")}\r\n                                        title={this.props.intl.formatMessage({ id: \"IDS_TABLE_NAME\" })}\r\n                                    />\r\n                                </Grid>\r\n                            </AtTableWrap> */}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                name={\"ssqlqueryname\"}\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_SQLQUERYNAME\" })}\r\n                                type=\"text\"\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SQLQUERYNAME\" })}\r\n                                value={this.props.selectedRecord[\"ssqlqueryname\"]}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={100}\r\n\r\n                            />\r\n\r\n                            <Droppable\r\n                                types={['dragcolumn', 'dragtable']}\r\n                                onDrop={event => this.props.onDrop(event)}\r\n                            >\r\n\r\n                                <FormTextarea\r\n                                    name={\"ssqlquery\"}\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_SQLQUERY\" })}\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SQLQUERY\" })}\r\n                                    value={this.props.selectedRecord[\"ssqlquery\"]}\r\n                                    rows={15}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={10000}\r\n                                />\r\n                            </Droppable>\r\n\r\n\r\n                            {/* {this.props.queryTypeCode === 12 &&\r\n                                <FormInput\r\n                                    name={\"sscreenrecordquery\"}\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_SCREENRECORDQUERY\" })}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SCREENRECORDQUERY\" })}\r\n                                    value={this.props.selectedRecord[\"sscreenrecordquery\"]}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={100}\r\n                                    isDisabled={this.props.queryTypeCode === 2 ? false : true}\r\n                                    isVisible={false}\r\n                                />\r\n                            } */}\r\n                            {this.props.queryTypeCode === queryTypeFilter.LIMSALERTQUERY &&\r\n                                <FormInput\r\n                                    name={\"sscreenheader\"}\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_SCREENHEADER\" })}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SCREENHEADER\" })}\r\n                                    value={this.props.selectedRecord[\"sscreenheader\"]}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={100}\r\n                                    isDisabled={this.props.queryTypeCode === 2 ? false : true}\r\n                                />\r\n                            }\r\n                            {this.props.queryTypeCode === queryTypeFilter.LIMSFILTERQUERY &&\r\n                                <FormInput\r\n                                    name={\"svaluemember\"}\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_SVALUEMEMBER\" })}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SVALUEMEMBER\" })}\r\n                                    value={this.props.selectedRecord[\"svaluemember\"]}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={100}\r\n\r\n                                />\r\n                            }\r\n                            {this.props.queryTypeCode === queryTypeFilter.LIMSFILTERQUERY &&\r\n                                <FormInput\r\n                                    name={\"sdisplaymember\"}\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_SDISPLAYMEMBER\" })}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SDISPLAYMEMBER\" })}\r\n                                    value={this.props.selectedRecord[\"sdisplaymember\"]}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={100}\r\n\r\n                                />\r\n                            }\r\n                            {this.props.queryTypeCode === queryTypeFilter.LIMSDASHBOARDQUERY &&\r\n                                <FormSelectSearch\r\n                                    name={\"ncharttypecode\"}\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_CHARTTYPE\" })}\r\n                                    isSearchable={true}\r\n\r\n\r\n                                    placeholder=\"Please Select...\"\r\n                                    isMandatory={true}\r\n                                    options={this.props.chartList}\r\n                                    optionId='ncharttypecode'\r\n                                    optionValue='schartname'\r\n                                    value={this.props.selectedRecord[\"ncharttypecode\"]}\r\n                                    defaultValue={this.props.selectedRecord[\"ncharttypecode\"]}\r\n\r\n                                    onChange={(event) => this.props.onComboChange(event, 'ncharttypecode')}\r\n                                    closeMenuOnSelect={true}\r\n                                    alphabeticalSort={true}\r\n                                    isDisabled={this.props.queryTypeCode === 1 ? false : true}\r\n                                />\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, filterColumnData, validateEsignCredential, getSQLQueryDetail, getSQLQueryComboService, comboChangeQueryType, executeUserQuery, comboColumnValues, getColumnNamesByTableName\r\n})(injectIntl(AddQuery));"]},"metadata":{},"sourceType":"module"}