{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{constructOptionList,rearrangeDateFormat}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{intl}from'../components/App';export function getComboSampleCollection(addParam){return function(dispatch){var urlArray=[];var service1=rsapi.post(\"unit/getUnit\",{userinfo:addParam.userInfo});var service2=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:addParam.userInfo});urlArray=[service1,service2];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedId=null;var unit;var unitMap=constructOptionList(response[0].data||[],\"nunitcode\",\"sunitname\",undefined,undefined,true);unit=unitMap.get(\"OptionList\");var date=rearrangeDateFormat(addParam.userInfo,response[1].data);var selectedRecord=_objectSpread(_objectSpread({},addParam.selectedRecord),{},{\"dcollectiondate\":date});var masterData=_objectSpread(_objectSpread({},addParam.masterData),{},{\"barcodedata\":undefined});selectedId=addParam.primaryKeyField;dispatch({type:DEFAULT_RETURN,payload:{unit:unit,operation:addParam.operation,screenName:addParam.screenName,selectedRecord:selectedRecord,masterData:masterData,openModal:true,//ALPD-4618--Vignesh R(01-08-2024)\nncontrolcode:addParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBarcodeDataCollection(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"storagesamplecollection/getBarcodeConfigDataCollection\",{userinfo:inputParam.userinfo,nprojecttypecode:inputParam.nprojecttypecode,spositionvalue:inputParam.spositionvalue,nbarcodeLength:inputParam.nbarcodeLength,jsondata:inputParam.jsondata}).then(function(response){var barcodedata=response.data.jsondataBarcodeData;var masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{\"barcodedata\":barcodedata,\"jsondataBarcodeFields\":response.data.jsondataBarcodeFields});dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData},inputParam.selectedRecord),{},{loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function saveCollection(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var service1=rsapi.post(\"storagesamplecollection/\"+inputParam.operation+\"SampleCollection\",inputParam.inputData);var service2=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:inputParam.inputData.userinfo});urlArray=[service1,service2];Axios.all(urlArray).then(function(response){var openModal=false;if(inputParam.saveType===2){openModal=true;}var date=rearrangeDateFormat(inputParam.inputData.userinfo,response[1].data);masterData=_objectSpread(_objectSpread({},masterData),{},{\"SampleCollection\":response[0].data.SampleCollection,\"barcodedata\":\"\"});var selectedRecord=_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{\"sbarcodeid\":\"\",\"nsampleqty\":\"\",\"nunitcode\":\"\",\"scomments\":\"\",\"dcollectiondate\":date});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,selectedRecord:selectedRecord,openModal:openModal,loading:false,loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getActiveSampleCollectionById(editParam){return function(dispatch){var _rsapi$post;var selectedId=null;dispatch(initRequest(true));rsapi.post(\"storagesamplecollection/getActiveSampleCollectionById\",(_rsapi$post={},_defineProperty(_rsapi$post,editParam.primaryKeyField,editParam.primaryKeyValue),_defineProperty(_rsapi$post,\"nprojecttypecode\",editParam.editRow.nprojecttypecode),_defineProperty(_rsapi$post,\"userinfo\",editParam.userInfo),_rsapi$post)).then(function(response){selectedId=editParam.primaryKeyValue;var instname=[];instname.push({\"value\":response.data.activeSampleColletionByID[\"nunitcode\"],\"label\":response.data.activeSampleColletionByID[\"sunitname\"]});var date=rearrangeDateFormat(editParam.userInfo,response.data.activeSampleColletionByID['scollectiondate']);//let selectedRecord = response.data && response.data.activeSampleColletionByID\nvar barcodedata=response.data&&response.data.activeSampleColletionByID.jsondata;var masterData=_objectSpread(_objectSpread({},editParam.masterData),{},{\"barcodedata\":barcodedata,\"jsondataBarcodeFields\":response.data.jsondataBarcodeFields});var selectedRecord=_objectSpread(_objectSpread({},editParam.selectedRecord),{},{\"sbarcodeid\":response.data.activeSampleColletionByID['sbarcodeid'],\"nsampleqty\":response.data.activeSampleColletionByID['nsampleqty'],\"dcollectiondate\":date,\"scomments\":response.data.activeSampleColletionByID['scomments']});selectedRecord[\"nunitcode\"]=instname[0];dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,selectedRecord:selectedRecord,operation:editParam.operation,ncontrolcode:editParam.ncontrolCode,openModal:true,loading:false,selectedId:selectedId,dataState:editParam.dataState,screenName:editParam.screenName}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSampleCollection(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"storagesamplecollection/getSampleCollection\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);var selectedId=null;dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function validateEsignCredentialSampleCollection(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;// if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\n//     inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\n//     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\n// }\ndispatch(saveCollection(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/SampleCollectionAction.js"],"names":["rsapi","Axios","toast","constructOptionList","rearrangeDateFormat","DEFAULT_RETURN","initRequest","intl","getComboSampleCollection","addParam","dispatch","urlArray","service1","post","userinfo","userInfo","service2","all","then","response","selectedId","unit","unitMap","data","undefined","get","date","selectedRecord","masterData","primaryKeyField","type","payload","operation","screenName","openModal","ncontrolcode","ncontrolCode","loading","catch","error","status","message","warn","getBarcodeDataCollection","inputParam","nprojecttypecode","spositionvalue","nbarcodeLength","jsondata","barcodedata","jsondataBarcodeData","jsondataBarcodeFields","saveCollection","inputData","saveType","SampleCollection","loadEsign","getActiveSampleCollectionById","editParam","primaryKeyValue","editRow","instname","push","activeSampleColletionByID","dataState","getSampleCollection","validateEsignCredentialSampleCollection"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {\r\n    constructOptionList, rearrangeDateFormat\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport {\r\n    intl\r\n} from '../components/App';\r\n\r\n\r\nexport function getComboSampleCollection(addParam) {\r\n    return function (dispatch) {\r\n\r\n        let urlArray = [];\r\n        const service1 = rsapi.post(\"unit/getUnit\", { userinfo: addParam.userInfo });\r\n    \r\n        const service2 = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n            userinfo: addParam.userInfo\r\n        });\r\n\r\n\r\n\r\n        urlArray = [service1, service2]\r\n\r\n        dispatch(initRequest(true));\r\n\r\n        Axios.all(urlArray).then(response => {\r\n\r\n\r\n            let selectedId = null;\r\n            let unit;\r\n\r\n            const unitMap = constructOptionList(response[0].data || [], \"nunitcode\",\r\n                \"sunitname\", undefined, undefined, true);\r\n            unit = unitMap.get(\"OptionList\");\r\n\r\n            let date = rearrangeDateFormat(addParam.userInfo, response[1].data);\r\n\r\n            let selectedRecord = { ...addParam.selectedRecord, \"dcollectiondate\": date }\r\n\r\n                let masterData={...addParam.masterData,\"barcodedata\":undefined}\r\n\r\n            selectedId = addParam.primaryKeyField;\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    unit,\r\n                    operation: addParam.operation, screenName: addParam.screenName,\r\n                    selectedRecord: selectedRecord,\r\n                    masterData,\r\n                    openModal: true,\r\n\t\t\t\t\t//ALPD-4618--Vignesh R(01-08-2024)\r\n                    ncontrolcode: addParam.ncontrolCode,\r\n                    loading: false, selectedId\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function getBarcodeDataCollection(inputParam) {\r\n    return function (dispatch) {\r\n      \r\n            dispatch(initRequest(true));\r\n\r\n        rsapi.post(\"storagesamplecollection/getBarcodeConfigDataCollection\", { userinfo: inputParam.userinfo, nprojecttypecode: inputParam.nprojecttypecode, spositionvalue: inputParam.spositionvalue, nbarcodeLength: inputParam.nbarcodeLength, jsondata: inputParam.jsondata }).then(response => {\r\n\r\n            let barcodedata = response.data.jsondataBarcodeData;\r\n\r\n            let masterData = { ...inputParam.masterData, \"barcodedata\": barcodedata,\"jsondataBarcodeFields\":response.data.jsondataBarcodeFields }\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData,\r\n                    ...inputParam.selectedRecord,\r\n                    loading: false\r\n                }\r\n            });\r\n        }\r\n        )\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    \r\n    }\r\n}\r\n\r\nexport function saveCollection(inputParam, masterData) {\r\n    return function (dispatch) {\r\n\r\n\r\n        dispatch(initRequest(true));\r\n        let urlArray = [];\r\n      \r\n\r\n        const service1 = rsapi.post(\"storagesamplecollection/\" + inputParam.operation + \"SampleCollection\", inputParam.inputData);\r\n        const service2 = rsapi.post(\"timezone/getLocalTimeByZone\", {\r\n            userinfo:inputParam.inputData.userinfo\r\n        });\r\n\r\n        urlArray = [service1, service2]\r\n\r\n        Axios.all(urlArray).then(response => {\r\n        let openModal=false;\r\n           if(inputParam.saveType===2){\r\n            openModal=true;\r\n           }\r\n           let date = rearrangeDateFormat(inputParam.inputData.userinfo, response[1].data);\r\n\r\n            masterData = { ...masterData, \"SampleCollection\": response[0].data.SampleCollection, \"barcodedata\":\"\" }\r\n            let selectedRecord = { ...inputParam.selectedRecord, \"sbarcodeid\": \"\", \"nsampleqty\": \"\", \"nunitcode\": \"\", \"scomments\": \"\", \"dcollectiondate\": date}\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData,\r\n                    selectedRecord,\r\n                    openModal: openModal,\r\n                    loading: false,\r\n                    loadEsign:false\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function getActiveSampleCollectionById(editParam) {\r\n    return function (dispatch) {\r\n\r\n        let selectedId = null;\r\n        dispatch(initRequest(true));\r\n\r\n        rsapi.post(\"storagesamplecollection/getActiveSampleCollectionById\", { [editParam.primaryKeyField]: editParam.primaryKeyValue,\"nprojecttypecode\":editParam.editRow.nprojecttypecode, \"userinfo\": editParam.userInfo }).then(response => {\r\n            selectedId = editParam.primaryKeyValue;\r\n            let instname = [];\r\n            instname.push({\r\n                \"value\": response.data.activeSampleColletionByID[\"nunitcode\"],\r\n                \"label\": response.data.activeSampleColletionByID[\"sunitname\"]\r\n            });\r\n            let date = rearrangeDateFormat(editParam.userInfo, response.data.activeSampleColletionByID['scollectiondate']);\r\n\r\n            //let selectedRecord = response.data && response.data.activeSampleColletionByID\r\n\r\n            let barcodedata = response.data && response.data.activeSampleColletionByID.jsondata;\r\n            let masterData = { ...editParam.masterData, \"barcodedata\": barcodedata, \"jsondataBarcodeFields\":response.data.jsondataBarcodeFields }\r\n            let selectedRecord = {\r\n                ...editParam.selectedRecord, \"sbarcodeid\": response.data.activeSampleColletionByID['sbarcodeid'], \"nsampleqty\": response.data.activeSampleColletionByID['nsampleqty'],\r\n                \"dcollectiondate\": date, \"scomments\": response.data.activeSampleColletionByID['scomments']\r\n            }\r\n            selectedRecord[\"nunitcode\"] = instname[0];\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData,\r\n                    selectedRecord,\r\n                    operation: editParam.operation,\r\n                    ncontrolcode: editParam.ncontrolCode,\r\n                    openModal: true,\r\n                    loading: false,\r\n                    selectedId,\r\n                    dataState:editParam.dataState,\r\n                    screenName: editParam.screenName\r\n                }\r\n            });\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function getSampleCollection(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"storagesamplecollection/getSampleCollection\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                let selectedId=null;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false,selectedId\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function validateEsignCredentialSampleCollection(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n\r\n\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    // if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                    //     inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\r\n                    //     delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                    // }\r\n                    \r\n\t\r\n                        dispatch(saveCollection(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]))\r\n \r\n                 \r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}