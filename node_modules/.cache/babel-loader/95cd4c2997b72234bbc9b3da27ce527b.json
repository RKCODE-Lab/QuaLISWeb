{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\pages\\\\product\\\\AddProduct.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { injectIntl } from 'react-intl';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\n\nconst AddProduct = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],\n    isSearchable: true,\n    name: \"nproductcatcode\",\n    isDisabled: false,\n    placeholder: props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],\n    isMandatory: true,\n    options: props.productCategoryList,\n    alphabeticalSort: \"true\",\n    optionId: \"nproductcatcode\",\n    optionValue: \"sproductcatname\",\n    value: props.selectedRecord ? props.selectedRecord[\"nproductcatcode\"] : \"\",\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"nproductcatcode\"] : \"\",\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nproductcatcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],\n    name: \"sproductname\",\n    type: \"text\",\n    isMandatory: \"*\",\n    required: true,\n    maxLength: \"100\",\n    value: props.selectedRecord[\"sproductname\"] || [],\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    name: \"sdescription\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"ndefaultstatus\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    type: \"switch\",\n    onChange: event => props.onInputOnChange(event, 1, [3, 4]) //onChange={(event)=>props.onActiveStatusChange(event, [1, 2])}\n    ,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    defaultValue: props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false,\n    checked: props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddProduct);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/product/AddProduct.jsx"],"names":["React","Row","Col","FormSelectSearch","FormInput","injectIntl","FormTextarea","CustomSwitch","AddProduct","props","genericLabel","userInfo","slanguagetypecode","productCategoryList","selectedRecord","event","onComboChange","onInputOnChange","intl","formatMessage","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\n\r\nconst AddProduct = (props) => {\r\n\r\n    return (\r\n\r\n        <Row>\r\n            <Col md={12}>\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                    isSearchable={true}\r\n                    name={\"nproductcatcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                    isMandatory={true}\r\n                    options={props.productCategoryList}\r\n                    alphabeticalSort=\"true\"\r\n                    optionId=\"nproductcatcode\"\r\n                    optionValue=\"sproductcatname\"\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nproductcatcode\"] : \"\"}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"nproductcatcode\"] : \"\"}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, 'nproductcatcode')}>\r\n                </FormSelectSearch>\r\n\r\n                <FormInput\r\n                    label={props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                    name=\"sproductname\"\r\n                    type=\"text\"\r\n                    isMandatory={\"*\"}\r\n                    required={true}\r\n                    maxLength=\"100\"\r\n                    value={props.selectedRecord[\"sproductname\"] || []}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                />\r\n\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    name={\"sdescription\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={255}\r\n                >\r\n                </FormTextarea>\r\n\r\n                <CustomSwitch\r\n                    name={\"ndefaultstatus\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    type=\"switch\"\r\n                    onChange={(event) => props.onInputOnChange(event, 1, [3, 4])}\r\n                    //onChange={(event)=>props.onActiveStatusChange(event, [1, 2])}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    defaultValue={props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false}\r\n                    checked={props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false}\r\n                >\r\n                </CustomSwitch>\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddProduct);\r\n"]},"metadata":{},"sourceType":"module"}