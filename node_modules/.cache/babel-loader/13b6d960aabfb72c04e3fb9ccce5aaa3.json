{"ast":null,"code":"'use strict';\n\nvar _ = require('underscore');\n\nexports.requiredProp = function (type, params, propName) {\n  if (_.isUndefined(params[propName])) {\n    throw new Error('`' + propName + '` property is not set in `' + type + '` clause');\n  }\n};\n\nexports.atLeastOneOfProps = function (type, params, expectedPropNames) {\n  var propNames = _(params).chain().keys().intersection(expectedPropNames).value();\n\n  if (!propNames.length) {\n    throw new Error('Neither `' + expectedPropNames.join('`, `') + '` properties are not set in `' + type + '` clause');\n  }\n};\n\nexports.onlyOneOfProps = function (type, params, expectedPropNames) {\n  var propNames = _(params).chain().keys().intersection(expectedPropNames).value();\n\n  if (propNames.length > 1) {\n    throw new Error('Wrong using `' + propNames.join('`, `') + '` properties together in `' + type + '` clause');\n  }\n};\n\nexports.propType = function (type, params, propName, expectedTypes) {\n  if (_.isUndefined(params[propName])) return;\n  var propValue = params[propName];\n  if (!_.isArray(expectedTypes)) expectedTypes = [expectedTypes];\n\n  var hasSomeType = _(expectedTypes).some(function (expectedType) {\n    return _['is' + expectedType.charAt(0).toUpperCase() + expectedType.slice(1)](propValue);\n  });\n\n  if (!hasSomeType) {\n    throw new Error('`' + propName + '` property should have ' + (expectedTypes.length > 1 ? 'one of expected types:' : 'type') + ' \"' + expectedTypes.join('\", \"') + '\" in `' + type + '` clause');\n  }\n};\n\nexports.minPropLength = function (type, params, propName, length) {\n  if (_.isUndefined(params[propName])) return;\n\n  if (params[propName].length < length) {\n    throw new Error('`' + propName + '` property should not have length less than ' + length + ' in `' + type + '` clause');\n  }\n};\n\nexports.propMatch = function (type, params, propName, regExp) {\n  if (_.isUndefined(params[propName])) return;\n\n  if (!params[propName].match(regExp)) {\n    throw new Error('Invalid `' + propName + '` property value \"' + params[propName] + '\" in `' + type + '` clause');\n  }\n};\n\nexports.customProp = function (type, params, propName, fn) {\n  if (_.isUndefined(params[propName])) return;\n\n  if (!fn(params[propName])) {\n    throw new Error('Invalid `' + propName + '` property value \"' + params[propName] + '\" in `' + type + '` clause');\n  }\n};","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/node_modules/json-sql/lib/utils/templateChecks.js"],"names":["_","require","exports","requiredProp","type","params","propName","isUndefined","Error","atLeastOneOfProps","expectedPropNames","propNames","chain","keys","intersection","value","length","join","onlyOneOfProps","propType","expectedTypes","propValue","isArray","hasSomeType","some","expectedType","charAt","toUpperCase","slice","minPropLength","propMatch","regExp","match","customProp","fn"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _ = require('underscore');\n\nexports.requiredProp = function(type, params, propName) {\n\tif (_.isUndefined(params[propName])) {\n\t\tthrow new Error('`' + propName + '` property is not set in `' + type + '` clause');\n\t}\n};\n\nexports.atLeastOneOfProps = function(type, params, expectedPropNames) {\n\tvar propNames = _(params).chain().keys().intersection(expectedPropNames).value();\n\n\tif (!propNames.length) {\n\t\tthrow new Error('Neither `' + expectedPropNames.join('`, `') +\n\t\t\t'` properties are not set in `' + type + '` clause');\n\t}\n};\n\nexports.onlyOneOfProps = function(type, params, expectedPropNames) {\n\tvar propNames = _(params).chain().keys().intersection(expectedPropNames).value();\n\n\tif (propNames.length > 1) {\n\t\tthrow new Error('Wrong using `' + propNames.join('`, `') + '` properties together in `' +\n\t\t\ttype + '` clause');\n\t}\n};\n\nexports.propType = function(type, params, propName, expectedTypes) {\n\tif (_.isUndefined(params[propName])) return;\n\n\tvar propValue = params[propName];\n\n\tif (!_.isArray(expectedTypes)) expectedTypes = [expectedTypes];\n\n\tvar hasSomeType = _(expectedTypes).some(function(expectedType) {\n\t\treturn _['is' + expectedType.charAt(0).toUpperCase() + expectedType.slice(1)](propValue);\n\t});\n\n\tif (!hasSomeType) {\n\t\tthrow new Error('`' + propName + '` property should have ' +\n\t\t\t(expectedTypes.length > 1 ? 'one of expected types:' : 'type') +\n\t\t\t' \"' + expectedTypes.join('\", \"') + '\" in `' + type + '` clause');\n\t}\n};\n\nexports.minPropLength = function(type, params, propName, length) {\n\tif (_.isUndefined(params[propName])) return;\n\n\tif (params[propName].length < length) {\n\t\tthrow new Error('`' + propName + '` property should not have length less than ' + length +\n\t\t\t' in `' + type + '` clause');\n\t}\n};\n\nexports.propMatch = function(type, params, propName, regExp) {\n\tif (_.isUndefined(params[propName])) return;\n\n\tif (!params[propName].match(regExp)) {\n\t\tthrow new Error('Invalid `' + propName + '` property value \"' + params[propName] + '\" in `' +\n\t\t\ttype + '` clause');\n\t}\n};\n\nexports.customProp = function(type, params, propName, fn) {\n\tif (_.isUndefined(params[propName])) return;\n\n\tif (!fn(params[propName])) {\n\t\tthrow new Error('Invalid `' + propName + '` property value \"' + params[propName] + '\" in `' +\n\t\t\ttype + '` clause');\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}