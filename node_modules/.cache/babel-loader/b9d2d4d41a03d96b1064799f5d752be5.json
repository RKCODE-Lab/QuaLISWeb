{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var QueryTypeFilter=function QueryTypeFilter(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nproductcatcode\",formLabel:props.intl.formatMessage({id:\"IDS_PRODUCTCATEGORY\"}),isSearchable:true// menuPosition=\"fixed\"\n,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,isDisabled:false,showOption:true,options:props.queryType||[],value:props.selectedRecord.nproductcatcode?props.selectedRecord.nproductcatcode//   :props.filterQueryType ? { \"label\": props.filterQueryType.squerytypename, \"value\": props.filterQueryType.nquerytypecode }\n:\"\"//value={props.selectedRecord[\"nquerytypecode\"] ? props.selectedRecord[\"nquerytypecode\"] : \"\"}\n,onChange:function onChange(value){return props.onComboChange(value,\"nproductcatcode\");}})));};export default injectIntl(QueryTypeFilter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/configurationmaster/RuleEngineQueryTypeFilter.jsx"],"names":["React","injectIntl","Row","Col","FormSelectSearch","QueryTypeFilter","props","intl","formatMessage","id","queryType","selectedRecord","nproductcatcode","value","onComboChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,IAAI,CAAE,iBADV,CAEI,SAAS,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,qBAAN,CAAzB,CAFf,CAGI,YAAY,CAAE,IACf;AAJH,CAKI,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,kBAAL,CAAzB,CALjB,CAMI,WAAW,CAAE,KANjB,CAOI,UAAU,CAAE,KAPhB,CAQI,UAAU,CAAE,IARhB,CASI,OAAO,CAAEH,KAAK,CAACI,SAAN,EAAmB,EAThC,CAUI,KAAK,CAAEJ,KAAK,CAACK,cAAN,CAAqBC,eAArB,CAAuCN,KAAK,CAACK,cAAN,CAAqBC,eAClE;AADM,CAEA,EAEP;AAdJ,CAeI,QAAQ,CAAE,kBAAAC,KAAK,QAAIP,CAAAA,KAAK,CAACQ,aAAN,CAAoBD,KAApB,CAA2B,iBAA3B,CAAJ,EAfnB,EADJ,CADJ,CADJ,CAyBH,CA1BD,CA4BA,cAAgBZ,CAAAA,UAAU,CAACI,eAAD,CAA1B","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst QueryTypeFilter = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"nproductcatcode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_PRODUCTCATEGORY\" })}\r\n                    isSearchable={true}\r\n                   // menuPosition=\"fixed\"\r\n                    placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}  \r\n                    isMandatory={false}\r\n                    isDisabled={false}\r\n                    showOption={true}                  \r\n                    options={props.queryType || []}\r\n                    value={props.selectedRecord.nproductcatcode ? props.selectedRecord.nproductcatcode\r\n                     //   :props.filterQueryType ? { \"label\": props.filterQueryType.squerytypename, \"value\": props.filterQueryType.nquerytypecode }\r\n                         : \"\"}\r\n      \r\n                    //value={props.selectedRecord[\"nquerytypecode\"] ? props.selectedRecord[\"nquerytypecode\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"nproductcatcode\")}\r\n                   \r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default (injectIntl(QueryTypeFilter));"]},"metadata":{},"sourceType":"module"}