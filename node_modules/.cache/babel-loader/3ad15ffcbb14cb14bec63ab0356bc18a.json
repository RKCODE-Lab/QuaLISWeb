{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\AddMethod.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\n\nconst AddMethod = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nmethodcatcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_METHODCATCODE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.methodCategoryList || [] // optionId='nmethodcatcode'\n    // optionValue='smethodcatname'\n    ,\n    value: props.selectedRecord ? props.selectedRecord[\"nmethodcatcode\"] : \"\",\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true // alphabeticalSort={true}\n    ,\n    onChange: event => props.onComboChange(event, 'nmethodcatcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_METHODNAME\"\n    }),\n    name: \"smethodname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_METHODNAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"smethodname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    name: \"sdescription\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    type: \"switch\",\n    name: \"ndefaultstatus\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false,\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true : false : false //disabled={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true :false:false}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  })));\n};\n\nexport default injectIntl(AddMethod);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testmanagement/AddMethod.js"],"names":["React","Row","Col","injectIntl","FormInput","CustomSwitch","FormSelectSearch","FormTextarea","AddMethod","props","intl","formatMessage","id","methodCategoryList","selectedRecord","event","onComboChange","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport {injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\nconst AddMethod = (props) => {\r\n        \r\n        return(\r\n                <Row>\r\n                    <Col md={12}>\r\n                            <FormSelectSearch\r\n                                    name={\"nmethodcatcode\"}\r\n                                    formLabel={props.intl.formatMessage({ id:\"IDS_METHODCATCODE\"})}                              \r\n                                    placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                              \r\n                                    options={ props.methodCategoryList || []}\r\n                                   // optionId='nmethodcatcode'\r\n                                   // optionValue='smethodcatname'\r\n                                    value = { props.selectedRecord ? props.selectedRecord[\"nmethodcatcode\"]:\"\"}\r\n                                    isMandatory={true}\r\n                                    isMulti={false}\r\n                                    isSearchable={true}                                \r\n                                    isDisabled={false}\r\n                                    closeMenuOnSelect={true}\r\n                                   // alphabeticalSort={true}\r\n                                    onChange = {(event)=> props.onComboChange(event, 'nmethodcatcode')}                               \r\n                            />\r\n                    {/* </Col>\r\n                    <Col md={12}> */}\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id:\"IDS_METHODNAME\"})}\r\n                            name={\"smethodname\"}\r\n                            type=\"text\"\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_METHODNAME\"})}\r\n                            value ={props.selectedRecord?props.selectedRecord[\"smethodname\"]:\"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={100}\r\n                        />\r\n                    {/* </Col>\r\n\r\n                    <Col md={12}> */}\r\n                        <FormTextarea\r\n                            label={props.intl.formatMessage({ id:\"IDS_DESCRIPTION\"})}\r\n                            name={\"sdescription\"}\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_DESCRIPTION\"})}\r\n                            value ={props.selectedRecord ? props.selectedRecord[\"sdescription\"] :\"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={255}\r\n                            >\r\n                        </FormTextarea>\r\n                    {/* </Col>\r\n                    <Col md={12}> */}\r\n                        <CustomSwitch\r\n                            label={props.intl.formatMessage({ id:\"IDS_DEFAULTSTATUS\"})}\r\n                            type=\"switch\"\r\n                            name={\"ndefaultstatus\"}\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_DEFAULTSTATUS\"})}\r\n                            defaultValue ={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true :false:false}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            checked={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true :false:false}\r\n                            //disabled={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === 3 ? true :false:false}\r\n                            >                                               \r\n\r\n                        </CustomSwitch>\r\n                    </Col>\r\n                        \r\n                </Row>\r\n            )   \r\n}\r\n\r\nexport default injectIntl(AddMethod);"]},"metadata":{},"sourceType":"module"}