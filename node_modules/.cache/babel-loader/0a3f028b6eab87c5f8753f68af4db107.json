{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\AddComponentPopUp.jsx\";\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport React, { Component } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport { RegistrationSubType, RegistrationType } from '../../components/Enumeration';\nimport { rearrangeDateFormat } from '../../components/CommonScript';\n\nclass AddComponentPopUp extends Component {\n  render() {\n    const {\n      Component,\n      StorageCondition,\n      StorageLocation,\n      RealRegTypeValue,\n      RealRegSubTypeValue,\n      plasmaMasterFile,\n      userInfo\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.formatMessage({\n        id: \"IDS_COMPONENT\"\n      }),\n      isSearchable: true,\n      name: \"ncomponentcode\",\n      isDisabled: false,\n      placeholder: this.props.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      options: Component,\n      alphabeticalSort: \"true\",\n      optionId: \"ncomponentcode\",\n      optionValue: \"scomponentname\",\n      value: this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\",\n      defaultValue: this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\" //  showOption={true}\n      ,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComponentChange(event, 'ncomponentcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      label: this.props.formatMessage({\n        id: \"IDS_MANUFLOTNO\"\n      }),\n      name: \"smanuflotno\",\n      type: \"text\",\n      maxLength: \"100\",\n      isMandatory: true,\n      value: this.props.selectComponent[\"smanuflotno\"] || [],\n      onChange: event => this.props.onInputComponentOnChange(event),\n      placeholder: this.props.formatMessage({\n        id: \"IDS_MANUFLOTNO\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    })), RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL && RealRegSubTypeValue.nregsubtypecode !== RegistrationSubType.EXTERNAL_POOL && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"dmanufdate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_DATEOFMANUFWOTIME\"\n      }),\n      className: \"form-control\",\n      placeholderText: \"Select date..\",\n      selected: this.props.selectComponent[\"dmanufdate\"] ? rearrangeDateFormat(userInfo, this.props.selectComponent[\"dmanufdate\"]) : \"\" //selected={this.props.selectComponent[\"dmanufdate\"] || \"\"}\n      ,\n      dateFormat: this.props.userInfo[\"ssitedate\"],\n      timeInputLabel: this.props.intl.formatMessage({\n        id: \"IDS_DATEOFMANUF\"\n      }),\n      showTimeInput: false,\n      isClearable: false,\n      isMandatory: false,\n      required: true,\n      maxDate: this.props.CurrentTime,\n      maxTime: this.props.CurrentTime,\n      onChange: date => this.props.handleDateChange(\"dmanufdate\", date),\n      value: this.props.selectComponent[\"dmanufdate\"] ? rearrangeDateFormat(userInfo, this.props.selectComponent[\"dmanufdate\"]) : \"\" //{this.props.selectComponent[\"dmanufdate\"]}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"ntzdmanufdate\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TIMEZONE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.timeZoneList,\n      optionId: \"ntimezonecode\",\n      optionValue: \"stimezoneid\",\n      value: this.props.selectComponent[\"ntzdmanufdate\"],\n      defaultValue: this.props.selectComponent[\"ntzdmanufdate\"],\n      isMandatory: false,\n      isSearchable: true,\n      isClearable: false,\n      closeMenuOnSelect: true,\n      alphabeticalSort: true,\n      onChange: value => this.props.onComboChange(value, 'ntzdmanufdate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormNumericInput, {\n      label: this.props.formatMessage({\n        id: \"IDS_NOOFDONATIONS\"\n      }),\n      name: \"nnoofdonations\",\n      placeholder: this.props.formatMessage({\n        id: \"IDS_NOOFDONATIONS\"\n      }),\n      type: \"number\",\n      value: this.props.selectComponent[\"nnoofdonations\"],\n      min: 0,\n      strict: true,\n      maxLength: 8,\n      onChange: event => this.props.onNumericInputChange(event, \"nnoofdonations\"),\n      noStyle: true,\n      precision: 0,\n      className: \"form-control\",\n      isMandatory: false,\n      errors: \"Please provide a valid number.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormNumericInput, {\n      label: this.props.formatMessage({\n        id: \"IDS_POOLBULKVOLUME\"\n      }),\n      name: \"sbulkvolume\",\n      placeholder: this.props.formatMessage({\n        id: \"IDS_POOLBULKVOLUME\"\n      }),\n      type: \"number\",\n      value: this.props.selectComponent[\"sbulkvolume\"],\n      min: 0,\n      strict: true,\n      maxLength: 8,\n      onChange: event => this.props.onNumericInputChange(event, \"sbulkvolume\"),\n      noStyle: true,\n      precision: 0,\n      className: \"form-control\",\n      isMandatory: true,\n      errors: \"Please provide a valid number.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.formatMessage({\n        id: \"IDS_PLASMAMASTERFILE\"\n      }),\n      isSearchable: true,\n      isClearable: true,\n      name: \"nplasmafilecode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      options: plasmaMasterFile // alphabeticalSort=\"true\"\n      // optionId=\"nplasmafilecode\"\n      // optionValue=\"splasmafilenumber\"\n      ,\n      value: this.props.selectComponent ? this.props.selectComponent[\"nplasmafilecode\"] : \"\",\n      defaultValue: this.props.selectComponent ? this.props.selectComponent[\"nplasmafilecode\"] : \"\" //  showOption={true}\n      ,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboComponentChange(event, 'nplasmafilecode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }))), RealRegSubTypeValue.nregsubtypecode !== 8 && RealRegSubTypeValue.nregsubtypecode !== 10 && RealRegSubTypeValue.nregsubtypecode !== 13 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.formatMessage({\n        id: \"IDS_STORAGECONDITION\"\n      }),\n      isSearchable: true,\n      isClearable: true,\n      name: \"nstorageconditioncode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: RealRegSubTypeValue.nregsubtypecode === RegistrationSubType.EU ? true : RealRegSubTypeValue.nregsubtypecode === RegistrationSubType.NON_EU ? true : false,\n      options: StorageCondition // alphabeticalSort=\"true\"\n      // optionId=\"nstorageconditioncode\"\n      // optionValue=\"sstorageconditionname\"\n      ,\n      value: this.props.selectComponent ? this.props.selectComponent[\"nstorageconditioncode\"] : \"\",\n      defaultValue: this.props.selectComponent ? this.props.selectComponent[\"nstorageconditioncode\"] : \"\" //  showOption={true}\n      ,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboComponentChange(event, 'nstorageconditioncode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    })), RealRegSubTypeValue.nregsubtypecode !== 10 && /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.formatMessage({\n        id: \"IDS_STORAGELOCATION\"\n      }),\n      isSearchable: true,\n      isClearable: true,\n      name: \"nstoragelocationcode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      options: StorageLocation // alphabeticalSort=\"true\"\n      // optionId=\"nstoragelocationcode\"\n      // optionValue=\"sstoragelocationname\"\n      ,\n      value: this.props.selectComponent ? this.props.selectComponent[\"nstoragelocationcode\"] : \"\",\n      defaultValue: this.props.selectComponent ? this.props.selectComponent[\"nstoragelocationcode\"] : \"\" //  showOption={true}\n      ,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboComponentChange(event, 'nstoragelocationcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    })), RealRegSubTypeValue.nregsubtypecode !== 10 && /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormNumericInput, {\n      name: \"nnoofcontainer\",\n      label: this.props.formatMessage({\n        id: \"IDS_NOOFCONTAINER\"\n      }),\n      placeholder: this.props.formatMessage({\n        id: \"IDS_NOOFCONTAINER\"\n      }),\n      type: \"number\",\n      value: this.props.selectComponent[\"nnoofcontainer\"],\n      min: 0,\n      strict: true,\n      maxLength: 8,\n      onChange: event => this.props.onNumericInputChange(event, \"nnoofcontainer\"),\n      noStyle: true,\n      precision: 0,\n      className: \"form-control\",\n      isMandatory: true,\n      errors: \"Please provide a valid number.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"dreceiveddate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_RECEIVEDDATEWOTIME\"\n      }),\n      className: \"form-control\",\n      placeholderText: \"Select date..\",\n      selected: this.props.selectComponent[\"dreceiveddate\"],\n      dateFormat: this.props.userInfo[\"ssitedate\"] //timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_RECEIVEDDATE\" })}\n      ,\n      showTimeInput: false,\n      isClearable: false,\n      isMandatory: true,\n      required: true,\n      maxDate: this.props.CurrentTime,\n      maxTime: this.props.CurrentTime,\n      onChange: date => this.props.handleDateChange(\"dreceiveddate\", date),\n      value: this.props.selectComponent[\"dreceiveddate\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"ntzdreceivedate\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TIMEZONE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.timeZoneList,\n      optionId: \"ntimezonecode\",\n      optionValue: \"stimezoneid\",\n      value: this.props.selectComponent[\"ntzdreceivedate\"],\n      defaultValue: this.props.selectComponent[\"ntzdreceivedate\"],\n      isMandatory: true,\n      isSearchable: true,\n      isClearable: false,\n      closeMenuOnSelect: true,\n      alphabeticalSort: true,\n      onChange: value => this.props.onComboChange(value, 'ntzdreceivedate'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      label: this.props.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      name: \"scomments\",\n      type: \"text\",\n      onChange: event => this.props.onInputComponentOnChange(event),\n      placeholder: this.props.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      value: this.props.selectComponent[\"scomments\"] ? this.props.selectComponent[\"scomments\"] : \"\",\n      isMandatory: false,\n      required: false,\n      maxLength: 255,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default injectIntl(AddComponentPopUp);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/AddComponentPopUp.jsx"],"names":["DateTimePicker","React","Component","Col","Row","injectIntl","FormInput","FormSelectSearch","FormTextarea","FormNumericInput","RegistrationSubType","RegistrationType","rearrangeDateFormat","AddComponentPopUp","render","StorageCondition","StorageLocation","RealRegTypeValue","RealRegSubTypeValue","plasmaMasterFile","userInfo","props","formatMessage","id","selectComponent","event","onComponentChange","onInputComponentOnChange","nregtypecode","PLASMA_POOL","nregsubtypecode","EXTERNAL_POOL","intl","CurrentTime","date","handleDateChange","timeZoneList","value","onComboChange","onNumericInputChange","onComboComponentChange","EU","NON_EU"],"mappings":"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","sourcesContent":["import DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport React, { Component } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport { RegistrationSubType, RegistrationType } from '../../components/Enumeration';\r\nimport { rearrangeDateFormat } from '../../components/CommonScript';\r\n\r\nclass AddComponentPopUp extends Component {\r\n\r\n    render() {\r\n        const { Component, StorageCondition, StorageLocation, RealRegTypeValue, RealRegSubTypeValue, plasmaMasterFile, userInfo } = this.props;\r\n        return (\r\n            <Row>\r\n                <Col md={12}>\r\n\r\n                    <FormSelectSearch\r\n                        formLabel={this.props.formatMessage({ id: \"IDS_COMPONENT\" })}\r\n                        isSearchable={true}\r\n                        name={\"ncomponentcode\"}\r\n                        isDisabled={false}\r\n                        placeholder={this.props.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isMandatory={true}\r\n                        options={Component}\r\n                        alphabeticalSort=\"true\"\r\n                        optionId=\"ncomponentcode\"\r\n                        optionValue=\"scomponentname\"\r\n                        value={this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\"}\r\n                        defaultValue={this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\"}\r\n                        //  showOption={true}\r\n                        closeMenuOnSelect={true}\r\n                        onChange={(event) => this.props.onComponentChange(event, 'ncomponentcode')}>\r\n                    </FormSelectSearch>\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        label={this.props.formatMessage({ id: \"IDS_MANUFLOTNO\" })}\r\n                        name=\"smanuflotno\"\r\n                        type=\"text\"\r\n                        maxLength=\"100\"\r\n                        isMandatory={true}\r\n                        value={this.props.selectComponent[\"smanuflotno\"] || []}\r\n                        onChange={(event) => this.props.onInputComponentOnChange(event)}\r\n                        placeholder={this.props.formatMessage({ id: \"IDS_MANUFLOTNO\" })}\r\n                    />\r\n                </Col>\r\n                {(RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL && RealRegSubTypeValue.nregsubtypecode !== RegistrationSubType.EXTERNAL_POOL) &&\r\n                    <>\r\n                        <Col md={6} className=\"mb-4\">\r\n                            <DateTimePicker\r\n                                name={\"dmanufdate\"}\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_DATEOFMANUFWOTIME\" })}\r\n                                className='form-control'\r\n                                placeholderText=\"Select date..\"\r\n                                selected={this.props.selectComponent[\"dmanufdate\"]? rearrangeDateFormat(userInfo, this.props.selectComponent[\"dmanufdate\"]): \"\"}\r\n                                //selected={this.props.selectComponent[\"dmanufdate\"] || \"\"}\r\n                                dateFormat={this.props.userInfo[\"ssitedate\"]}\r\n                                timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_DATEOFMANUF\" })}\r\n                                showTimeInput={false}\r\n                                isClearable={false}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                maxDate={this.props.CurrentTime}\r\n                                maxTime={this.props.CurrentTime}\r\n                                onChange={date => this.props.handleDateChange(\"dmanufdate\", date)}\r\n                                value={this.props.selectComponent[\"dmanufdate\"]? rearrangeDateFormat(userInfo, this.props.selectComponent[\"dmanufdate\"]): \"\"}//{this.props.selectComponent[\"dmanufdate\"]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6} >\r\n                            <FormSelectSearch\r\n                                name={\"ntzdmanufdate\"}\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={this.props.timeZoneList}\r\n                                optionId=\"ntimezonecode\"\r\n                                optionValue=\"stimezoneid\"\r\n                                value={this.props.selectComponent[\"ntzdmanufdate\"]}\r\n                                defaultValue={this.props.selectComponent[\"ntzdmanufdate\"]}\r\n                                isMandatory={false}\r\n                                isSearchable={true}\r\n                                isClearable={false}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(value) => this.props.onComboChange(value, 'ntzdmanufdate')}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormNumericInput\r\n                                label={this.props.formatMessage({ id: \"IDS_NOOFDONATIONS\" })}\r\n                                name=\"nnoofdonations\"\r\n                                placeholder={this.props.formatMessage({ id: \"IDS_NOOFDONATIONS\" })}\r\n                                type=\"number\"\r\n                                value={this.props.selectComponent[\"nnoofdonations\"]}\r\n                                min={0}\r\n                                strict={true}\r\n                                maxLength={8}\r\n                                onChange={(event) => this.props.onNumericInputChange(event, \"nnoofdonations\")}\r\n                                noStyle={true}\r\n                                precision={0}\r\n                                className=\"form-control\"\r\n                                isMandatory={false}\r\n                                errors=\"Please provide a valid number.\"\r\n                            />\r\n\r\n                            {/* <FormInput\r\n                                label={this.props.formatMessage({ id: \"IDS_NOOFDONATIONS\" })}\r\n                                name=\"nnoofdonations\"\r\n                                type=\"text\"\r\n                                maxLength=\"100\"\r\n                                isMandatory={false}\r\n                                value={this.props.selectComponent[\"nnoofdonations\"] || []}\r\n                                onChange={(event) => this.props.onInputComponentOnChange(event)}\r\n                                placeholder={this.props.formatMessage({ id: \"IDS_NOOFDONATIONS\" })}\r\n                            /> */}\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormNumericInput\r\n                                label={this.props.formatMessage({ id: \"IDS_POOLBULKVOLUME\" })}\r\n                                name=\"sbulkvolume\"\r\n                                placeholder={this.props.formatMessage({ id: \"IDS_POOLBULKVOLUME\" })}\r\n                                type=\"number\"\r\n                                value={this.props.selectComponent[\"sbulkvolume\"]}\r\n                                min={0}\r\n                                strict={true}\r\n                                maxLength={8}\r\n                                onChange={(event) => this.props.onNumericInputChange(event, \"sbulkvolume\")}\r\n                                noStyle={true}\r\n                                precision={0}\r\n                                className=\"form-control\"\r\n                                isMandatory={true}\r\n                                errors=\"Please provide a valid number.\"\r\n                            />\r\n\r\n                            {/* <FormInput\r\n                                label={this.props.formatMessage({ id: \"IDS_POOLBULKVOLUME\" })}\r\n                                name=\"sbulkvolume\"\r\n                                type=\"text\"\r\n                                maxLength=\"100\"\r\n                                isMandatory={false}\r\n                                value={this.props.selectComponent[\"sbulkvolume\"] || []}\r\n                                onChange={(event) => this.props.onInputComponentOnChange(event)}\r\n                                placeholder={this.props.formatMessage({ id: \"IDS_POOLBULKVOLUME\" })}\r\n                            /> */}\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.formatMessage({ id: \"IDS_PLASMAMASTERFILE\" })}\r\n                                isSearchable={true}\r\n                                isClearable={true}\r\n                                name={\"nplasmafilecode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={false}\r\n                                options={plasmaMasterFile}\r\n                                // alphabeticalSort=\"true\"\r\n                                // optionId=\"nplasmafilecode\"\r\n                                // optionValue=\"splasmafilenumber\"\r\n                                value={this.props.selectComponent ? this.props.selectComponent[\"nplasmafilecode\"] : \"\"}\r\n                                defaultValue={this.props.selectComponent ? this.props.selectComponent[\"nplasmafilecode\"] : \"\"}\r\n                                //  showOption={true}\r\n                                closeMenuOnSelect={true}\r\n                                onChange={(event) => this.props.onComboComponentChange(event, 'nplasmafilecode')}>\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                    </>\r\n                }\r\n                {(RealRegSubTypeValue.nregsubtypecode !== 8 && RealRegSubTypeValue.nregsubtypecode !== 10 && RealRegSubTypeValue.nregsubtypecode !== 13) &&\r\n                    <>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.formatMessage({ id: \"IDS_STORAGECONDITION\" })}\r\n                                isSearchable={true}\r\n                                isClearable={true}\r\n                                name={\"nstorageconditioncode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={RealRegSubTypeValue.nregsubtypecode === RegistrationSubType.EU ? true : RealRegSubTypeValue.nregsubtypecode === RegistrationSubType.NON_EU ? true : false}\r\n                                options={StorageCondition}\r\n                                // alphabeticalSort=\"true\"\r\n                                // optionId=\"nstorageconditioncode\"\r\n                                // optionValue=\"sstorageconditionname\"\r\n                                value={this.props.selectComponent ? this.props.selectComponent[\"nstorageconditioncode\"] : \"\"}\r\n                                defaultValue={this.props.selectComponent ? this.props.selectComponent[\"nstorageconditioncode\"] : \"\"}\r\n                                //  showOption={true}\r\n                                closeMenuOnSelect={true}\r\n                                onChange={(event) => this.props.onComboComponentChange(event, 'nstorageconditioncode')}>\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                        {(RealRegSubTypeValue.nregsubtypecode !== 10) &&\r\n                            <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.formatMessage({ id: \"IDS_STORAGELOCATION\" })}\r\n                                    isSearchable={true}\r\n                                    isClearable={true}\r\n                                    name={\"nstoragelocationcode\"}\r\n                                    isDisabled={false}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={false}\r\n                                    options={StorageLocation}\r\n                                    // alphabeticalSort=\"true\"\r\n                                    // optionId=\"nstoragelocationcode\"\r\n                                    // optionValue=\"sstoragelocationname\"\r\n                                    value={this.props.selectComponent ? this.props.selectComponent[\"nstoragelocationcode\"] : \"\"}\r\n                                    defaultValue={this.props.selectComponent ? this.props.selectComponent[\"nstoragelocationcode\"] : \"\"}\r\n                                    //  showOption={true}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onComboComponentChange(event, 'nstoragelocationcode')}>\r\n                                </FormSelectSearch>\r\n                            </Col>}\r\n\r\n                        {(RealRegSubTypeValue.nregsubtypecode !== 10) &&\r\n                            <Col md={12}>\r\n                                <FormNumericInput\r\n                                    name=\"nnoofcontainer\"\r\n                                    label={this.props.formatMessage({ id: \"IDS_NOOFCONTAINER\" })}\r\n                                    placeholder={this.props.formatMessage({ id: \"IDS_NOOFCONTAINER\" })}\r\n                                    type=\"number\"\r\n                                    value={this.props.selectComponent[\"nnoofcontainer\"]}\r\n                                    min={0}\r\n                                    strict={true}\r\n                                    maxLength={8}\r\n                                    onChange={(event) => this.props.onNumericInputChange(event, \"nnoofcontainer\")}\r\n                                    noStyle={true}\r\n                                    precision={0}\r\n                                    className=\"form-control\"\r\n\r\n                                    isMandatory={true}\r\n                                    errors=\"Please provide a valid number.\"\r\n                                />\r\n                            </Col>\r\n                        }\r\n                    </>\r\n                }\r\n                <Col md={6} className=\"mb-4\">\r\n                    {/* <DateTimePicker\r\n                        name={\"sreceiveddate\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_RECEIVEDDATE\" })}\r\n                        className='form-control'\r\n                        placeholderText=\"Select date..\"\r\n                        selected={this.props.selectComponent[\"sreceiveddate\"]}\r\n                        dateFormat={this.props.userInfo[\"ssitedatetime\"]}\r\n                        timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_RECEIVEDDATE\" })}\r\n                        showTimeInput={true}\r\n                        isClearable={false}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        onChange={date => this.props.handleDateChange(\"sreceiveddate\", date)}\r\n                        value={this.props.selectComponent[\"sreceiveddate\"]} \r\n\r\n                    /> */}\r\n                    <DateTimePicker\r\n                        name={\"dreceiveddate\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_RECEIVEDDATEWOTIME\" })}\r\n                        className='form-control'\r\n                        placeholderText=\"Select date..\"\r\n                        selected={this.props.selectComponent[\"dreceiveddate\"]}\r\n                        dateFormat={this.props.userInfo[\"ssitedate\"]}\r\n                        //timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_RECEIVEDDATE\" })}\r\n                        showTimeInput={false}\r\n                        isClearable={false}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxDate={this.props.CurrentTime}\r\n                        maxTime={this.props.CurrentTime}\r\n                        onChange={date => this.props.handleDateChange(\"dreceiveddate\", date)}\r\n                        value={this.props.selectComponent[\"dreceiveddate\"]}\r\n\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"mb-4\">\r\n                    <FormSelectSearch\r\n                        name={\"ntzdreceivedate\"}\r\n                        formLabel={this.props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={this.props.timeZoneList}\r\n                        optionId=\"ntimezonecode\"\r\n                        optionValue=\"stimezoneid\"\r\n                        value={this.props.selectComponent[\"ntzdreceivedate\"]}\r\n                        defaultValue={this.props.selectComponent[\"ntzdreceivedate\"]}\r\n                        isMandatory={true}\r\n                        isSearchable={true}\r\n                        isClearable={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(value) => this.props.onComboChange(value, 'ntzdreceivedate')}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        label={this.props.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        name=\"scomments\"\r\n                        type=\"text\"\r\n                        onChange={(event) => this.props.onInputComponentOnChange(event)}\r\n                        placeholder={this.props.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        value={this.props.selectComponent[\"scomments\"] ? this.props.selectComponent[\"scomments\"] : \"\"}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={255}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(AddComponentPopUp);"]},"metadata":{},"sourceType":"module"}