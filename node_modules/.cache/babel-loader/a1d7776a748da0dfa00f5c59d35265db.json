{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\COARelease.jsx\";\nimport React from 'react';\nimport { ListWrapper } from '../components/client-group.styles';\nimport { Row, Col } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { intl } from '../components/App';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, getSubSampleBySample, getReleaseSelectedSamples, filterColumnData, getReleaseSelectedSampleSubSampleTest, getReleaseSelectedSubSamples, getTestBySample, getReleaseSelectedTest, xmlExportAction, getReleaseRegistrationType, getReleaseRegistrationSubType, getReleaseFilterStatus, getReleaseApprovalVersion, getReleaseFilterBasedTest, getReleaseSample, getCOAReportType, generateReport } from '../actions';\nimport Esign from '../pages/audittrail/Esign';\nimport { DEFAULT_RETURN } from '../actions/LoginTypes';\nimport { showEsign, getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchData, searchJsonData } from '../components/CommonScript';\nimport { designProperties, transactionStatus } from '../components/Enumeration';\nimport DataGridWithMultipleGrid from '../components/data-grid/DataGridWithMultipleGrid';\nimport BreadcrumbComponentToolbar from '../components/ToolbarBreadcrumb.Component';\nimport { getSelectedState } from \"@progress/kendo-react-grid\";\nimport COAReleaseFilter from './coarelease/COAReleaseFilter';\nimport TrainingUpdateChildTab from './competencemanagement/trainingupdate/TrainingUpdateChildTab';\nimport { Affix } from 'rsuite';\nimport ModalShow from '../components/ModalShow';\nimport AddRelease from './coarelease/AddRelease';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass COARelease extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleExpandChange = (row, dataState) => {\n      const viewParam = {\n        nsitecode: -1,\n        userInfo: this.props.Login.userInfo,\n        primaryKeyField: \"npreregno\",\n        masterData: this.props.Login.masterData\n      };\n      this.props.getSubSampleBySample({ ...viewParam,\n        dataState,\n        primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\n        viewRow: row[\"dataItem\"]\n      });\n    };\n\n    this.handleExpandChange = (row, dataState) => {\n      const viewParam = {\n        nsitecode: -1,\n        userInfo: this.props.Login.userInfo,\n        primaryKeyField: \"npreregno\",\n        masterData: this.props.Login.masterData\n      };\n      this.props.getSubSampleBySample({ ...viewParam,\n        dataState,\n        primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\n        viewRow: row[\"dataItem\"]\n      });\n    };\n\n    this.childHandleExpandChange = (row, dataState) => {\n      const viewParam = {\n        nsitecode: -1,\n        userInfo: this.props.Login.userInfo,\n        primaryKeyField: \"npreregno\",\n        masterData: this.props.Login.masterData\n      };\n      this.props.getTestBySample({ ...viewParam,\n        dataState,\n        primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\n        viewRow: row[\"dataItem\"]\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n      this.expandNextData(event.dataState);\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getReleaseApprovalVersion(inputParam);\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item\n            };\n            this.props.getReleaseRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item\n            };\n            this.props.getReleaseRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getReleaseApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          const inputParamData = {\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            userinfo: this.props.Login.userInfo,\n            masterData: { ...this.props.Login.masterData\n            },\n            RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n            ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n            ndesigntemplatemappingcode: comboData.value,\n            DesignTemplateMappingValue: comboData.item\n          };\n          this.props.getReleaseFilterBasedTest(inputParamData);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getReleaseFilterStatus(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n            // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                UserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              nsectioncode: comboData.value === -1 ? null // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              : comboData.value,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n            };\n            this.props.getReleaseFilterBasedTest(inputParamData);\n          }\n        } else if (fieldName === 'njobstatuscode') {\n          if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n            let masterData = { ...this.props.Login.masterData,\n              JobStatusValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n            //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n            //  const updateInfo = {\n            //     typeName: DEFAULT_RETURN,\n            //    data: { masterData }\n            // }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: null //this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n              //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              //: this.props.Login.masterData.UserSectionValue.nsectioncode,\n              ,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n            };\n            this.props.getReleaseFilterBasedTest(inputParamData);\n          }\n        }\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData1\"];\n      delete this.props.Login.masterData[\"searchedData2\"];\n      delete this.props.Login.masterData[\"searchedData3\"];\n      this.props.Login.change = false;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n      let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        ntype: 2,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake\n        };\n        this.props.getReleaseSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.searchedGridData = (filterValue, filterParam) => {\n      let masterData1 = filterParam.masterData;\n      let primaryKeyValue = 0;\n      let searchedData = undefined;\n\n      if (filterValue === \"\") {\n        if (masterData1[filterParam.inputListName] && masterData1[filterParam.inputListName].length > 0) {\n          primaryKeyValue = masterData1[filterParam.inputListName][0][filterParam.primaryKeyField]; // }\n        }\n      } else {\n        if (filterParam.isjsondata) {\n          searchedData = searchJsonData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || []);\n        } else {\n          searchedData = this.searchNestedGridData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || [], masterData1);\n        }\n\n        masterData1[\"searchedData3\"] = searchedData.test;\n        masterData1[\"searchedData1\"] = searchedData.sample;\n        masterData1[\"searchedData2\"] = searchedData.subsample; //    masterData1[\"searchedData\"][\"selected\"]=false\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...masterData1\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.searchNestedGridData = (filterValue, originalData, fieldList, masterData) => {\n      let searchedData = [];\n      let ntransactionsamplecode = [];\n      let subdata = [];\n      let detail = [];\n      let npreregno = [];\n      Object.entries(originalData).map(item1 => {\n        item1[1].map(item => {\n          detail.push(item);\n        });\n      });\n      let temp = detail.filter(item => {\n        const itemArray = [];\n        fieldList.map(itemKey => item[itemKey] && item[itemKey] !== null ? itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase() : item[itemKey].toString().toLowerCase()) : \"\");\n        return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1;\n      });\n      temp.map(item1 => {\n        if (!npreregno.includes(item1.npreregno)) npreregno.push(item1.npreregno);\n        if (!ntransactionsamplecode.includes(item1.ntransactionsamplecode)) ntransactionsamplecode.push(item1.ntransactionsamplecode);\n      });\n      let test = groupBy(temp, 'ntransactionsamplecode');\n      let sample = masterData.ReleaseSample.filter(item => {\n        for (var i = 0; i < npreregno.length; i++) {\n          if (npreregno[i] === item.npreregno && npreregno[i] !== undefined) {\n            return item;\n          }\n        }\n      });\n      Object.entries(masterData.ReleaseSubSample).map(item1 => {\n        item1[1].map(item => {\n          subdata.push(item);\n        });\n      });\n      let subsample1 = subdata.filter(item => {\n        for (var i = 0; i < ntransactionsamplecode.length; i++) {\n          if (ntransactionsamplecode[i] === item.ntransactionsamplecode && ntransactionsamplecode[i] !== undefined) {\n            return item;\n          }\n        }\n      });\n      let subsample = groupBy(subsample1, \"npreregno\");\n\n      function groupBy(objectArray, property) {\n        return objectArray.reduce((acc, obj) => {\n          const key = obj[property];\n\n          if (!acc[key]) {\n            acc[key] = [];\n          }\n\n          acc[key].push(obj);\n          return acc;\n        }, {});\n      }\n\n      searchedData = {\n        test,\n        sample,\n        subsample\n      };\n      return searchedData;\n    };\n\n    this.checkFunction = data => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          arrayfalse: data.arrayfalse,\n          childfalsearray: data.childfalsearray\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkFunction1 = () => {\n      this.setState({\n        count: 1\n      });\n    };\n\n    this.expandFunc = change => {\n      let count = change.count;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...this.props.Login.masterData\n          },\n          change: change.change,\n          checkFlag: \"1\",\n          count: count\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewDownloadFile = (inputData, row) => {\n      // this.props.generateReport()\n      this.onSaveModalClick(true, row, 'IDS_DOWNLOADFILE');\n    };\n\n    this.regnerateFile = (inputData, row) => {\n      // this.props.generateReport()\n      this.onSaveModalClick(true, row, 'IDS_REGENERATEFILE');\n    };\n\n    this.onSaveModalClick = (nflag, row, action) => {\n      let ntransactionsamplecode = \"\";\n      let ntransactiontestcode = \"\";\n      let npreregno = \"\";\n\n      if (nflag === true ? true : this.state.npreregno && this.state.npreregno.length > 0) {\n        let sample = this.state.npreregno.filter((c, index) => {\n          return this.state.npreregno.indexOf(c) === index;\n        });\n        let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n          return this.state.ntransactionsamplecode.indexOf(c) === index;\n        });\n        let test = this.state.ntransactiontestcode.filter((c, index) => {\n          return this.state.ntransactiontestcode.indexOf(c) === index;\n        });\n\n        if (nflag === true) {\n          npreregno = row.dataItem['npreregno'];\n        } else {\n          npreregno = sample.map(x => x).join(\",\");\n        }\n\n        ntransactionsamplecode = subsample.map(x => x).join(\",\");\n        ntransactiontestcode = test.map(x => x).join(\",\");\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n\n        if (ntransCode === transactionStatus.ALL) {\n          ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n        } else {\n          ntransCode = ntransCode;\n        }\n\n        const inputParam = {\n          inputData: {\n            change: this.props.Login.change,\n            npreregno: npreregno,\n            ntransactionsamplecode: ntransactionsamplecode,\n            ntransactiontestcode: ntransactiontestcode,\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n            // nTransStatus: ntransCode,\n            // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n            //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n            //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n            ntransactionstatus: String(\"-1\"),\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nflag: 2,\n            ntype: 1,\n            userinfo: this.props.Login.userInfo,\n            APSelectedSample: this.props.Login.masterData.APSelectedSample,\n            APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n            APSelectedTest: this.props.Login.masterData.APSelectedTest,\n            // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n            // ncontrolCode,\n            checkBoxOperation: 3,\n            action,\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n          },\n          userinfo: this.props.Login.userInfo\n        };\n\n        if (nflag === true) {\n          this.props.generateReport(inputParam.inputData, this.props.Login.masterData);\n        } else {\n          this.props.getReleaseSelectedSampleSubSampleTest(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData);\n        }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTANYONESAMPLE/SUBSAMPLE/TEST\"\n        }));\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData1\"];\n      delete this.props.Login.masterData[\"searchedData2\"];\n      delete this.props.Login.masterData[\"searchedData3\"]; // this.props.Login.masterData.ReleaseSample.map(item=>item[\"expanded\"]=false)\n\n      this.props.Login.change = false;\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ntransactionstatus: realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined || realFilterStatusValue.ntransactionstatus !== '0' ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n        ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\n        checkBoxOperation: 3,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getReleaseSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.selectionChange = (event, nflag, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (nflag === undefined) {\n        this.state.dataResult.data.map(item => {\n          if (item.npreregno === event.dataItem.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let preregno = event.dataItem.npreregno;\n        let ncoahistorycode = event.dataItem.ncoahistorycode;\n        let ssystemfilename = event.dataItem.ssystemfilename;\n        const coaFileInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncoahistorycode,\n            ssystemfilename\n          }\n        };\n        this.props.updateStore(coaFileInfo);\n        this.childHeaderSelectionChange(event, preregno, checkedflag);\n      } else {\n        let data = [];\n        event.dataItems.map(item => {\n          data.push({\n            \"npreregno\": item.npreregno\n          });\n        });\n        this.childHeaderSelectionChange(event, data, checkedflag);\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n    };\n\n    this.childHeaderSelectionChange = (event, preregno, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let subsamplecode = [];\n      let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno;\n\n      if (npreregno.length === 0 || npreregno.length === undefined) {\n        this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\n          item.selected = checked;\n\n          if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n            subsamplecode.push({\n              \"ntransactionsamplecode\": item.ntransactionsamplecode\n            });\n          }\n        });\n        this.props.Login.masterData.ReleaseSample.map(data => {\n          if (data.npreregno === npreregno) {\n            data.selected = checked;\n          }\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } else {\n        npreregno.map(value => {\n          this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\n            item.selected = checked;\n\n            if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n              subsamplecode.push({\n                \"ntransactionsamplecode\": item.ntransactionsamplecode\n              });\n            }\n          }); //    this.props.Login.masterData.ReleaseSample.map(data => {\n          //        if (data.npreregno === value.npreregno) {\n          //         data.selected = checked\n          //        }\n          //    })\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n    };\n\n    this.subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let transactionsamplecode = [];\n\n      if (subsamplecode !== undefined) {\n        transactionsamplecode = subsamplecode;\n        transactionsamplecode.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n      } else {\n        let rFlag = true;\n        event.dataItems.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n        this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\n          if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        } // let x;\n        // let i;\n        // for (i = 0; i < this.props.Login.masterData.ReleaseSample.length; i++){\n        //     x=i\n        //         if (event.dataItems[0].npreregno !== this.props.Login.masterData.ReleaseSample[i].npreregno) {\n        //             // item.selected = checked;\n        //             rFlag = false;\n        //             break;\n        //         }\n        // }\n        // if (rFlag === true) {\n        //     this.props.Login.masterData.ReleaseSample[x].selected = checked;\n        // }\n\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n    };\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked; // if(checked===true)\n      // {\n\n      this.state.dataResult.data.map(item => {\n        item.selected = checked;\n        return item;\n      }); //this.setState({headerSelect:checked})  \n\n      this.selectionChange(event, 1, checked); // }else\n      // {\n      //     this.setState({npreregno:[]})\n      // }\n    };\n\n    this.childSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          item.selected = checked;\n        }\n      });\n      let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n        return item.slected === true;\n      });\n\n      if (data === true) {\n        this.props.Login.masterData.ReleaseSample.map(item => {\n          if (event.dataItem.npreregno === item.npreregno) {\n            item.selected = checked;\n          }\n        });\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      } // const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //     }\n      // }\n      // this.props.updateStore(updateInfo); \n\n    };\n\n    this.subChildSelectionChange = event => {\n      let x = [];\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n          item.selected = checked;\n          this.collectData(item);\n        }\n      });\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\n            x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode];\n          }\n        }\n      });\n      let y = x.filter(t => t.selected === true);\n\n      if (x.length === y.length) {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true;\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false;\n          }\n        });\n      }\n\n      this.state.dataResult.data.map(item => {\n        if (item.npreregno === event.dataItem.npreregno) {\n          if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\n            x = this.props.Login.masterData.ReleaseSubSample[item.npreregno];\n          }\n        }\n      });\n      let y1 = x.filter(t => t.selected === true);\n\n      if (x.length === y1.length) {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === y1[0].npreregno) {\n            this.state.dataResult.data[i].selected = true;\n          }\n        });\n      } else {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === event.dataItem.npreregno) {\n            this.state.dataResult.data[i].selected = false;\n          }\n        });\n      }\n    };\n\n    this.collectData = (item, checkedflag) => {\n      let npreregno = this.state.npreregno || [];\n      let ntransactionsamplecode = this.state.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.state.ntransactiontestcode || [];\n\n      if (item.selected === true) {\n        if (!npreregno.includes(item.npreregno)) {\n          npreregno.push(item.npreregno);\n        }\n\n        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n          ntransactionsamplecode.push(item.ntransactionsamplecode);\n        }\n\n        if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n          ntransactiontestcode.push(item.ntransactiontestcode);\n        }\n      } else {\n        const npreregno1 = npreregno.filter(data => data !== item.npreregno);\n        npreregno = npreregno1;\n        const ntransactionsamplecode1 = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\n        ntransactionsamplecode = ntransactionsamplecode1;\n        const ntransactiontestcode1 = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode);\n        ntransactiontestcode = ntransactiontestcode1;\n      } //      const updateInfo = {\n      //     typeName: DEFAULT_RETURN,\n      //     data: {\n      //         data: undefined, dataState: undefined,\n      //         npreregno: npreregno,\n      //         ntransactionsamplecode:ntransactionsamplecode,\n      //         ntransactiontestcode:ntransactiontestcode\n      //     }\n      // }\n      // this.props.updateStore(updateInfo);\n\n\n      this.setState({\n        npreregno: checkedflag === false ? [] : npreregno,\n        ntransactionsamplecode: ntransactionsamplecode,\n        ntransactiontestcode: ntransactiontestcode\n      });\n    };\n\n    this.formRef = React.createRef();\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      childDataResult: [],\n      dataState: _dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      SampletypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      searchedData: [],\n      count: 0,\n      SampleGridItem: [],\n      combinedSearchField: [],\n      npreregno: [],\n      ntransactiontestcode: [],\n      ntransactionsamplecode: []\n    };\n    this.searchRef = React.createRef();\n    this.extractedColumnList = [{\n      \"idsName\": \"IDS_ARNO\",\n      \"dataField\": \"sarno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PRODUCT\",\n      \"dataField\": \"Specimen Type\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PRODUCTCATEGORY\",\n      \"dataField\": \"Specimen Category\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"200px\"\n    }];\n    this.sampleColumnList = [{\n      \"idsName\": \"IDS_SAMPLEARNO\",\n      \"dataField\": \"ssamplearno\",\n      \"width\": \"150px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_SAMPLENAME\",\n      \"dataField\": \"Sample Name\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    this.testColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestname\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"100px\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n  }\n\n  expandNextData(y) {\n    let change = [];\n    let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\n    let data = x.data.every(item => {\n      return item.expanded === true;\n    });\n\n    if (data === true) {\n      change = true;\n    } else {\n      change = false;\n    }\n\n    this.expandFunc({\n      change: change\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  gridfillingColumn(data) {\n    //  const tempArray = [];\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    const filterTestParam = {\n      inputListName: \"ReleaseTest\",\n      //  selectedObject: \"APSelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      //    fetchUrl: this.getActiveTestURL(),\n      // fecthInputObject: {\n      //     ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n      //     userinfo: this.props.Login.userInfo,\n      //     checkBoxOperation: 3,\n      //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      // },\n      isSingleSelect: false,\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.combinedSearchField || []\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, // {\n    //     \"label\": \"IDS_SAMPLETYPE\",\n    //     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\n    // },\n    {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, // {\n    //     \"label\": \"IDS_DESIGNTEMPLATE\",\n    //     \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ?\n    //         this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\n    //         this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : \"NA\"\n    // },\n    // {\n    //     \"label\": \"IDS_CONFIGVERSION\",\n    //     \"value\": this.props.Login.masterData.realApprovalVersionValue ?\n    //         this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\n    //         this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\n    // },\n    // {\n    //     \"label\": \"IDS_SECTION\",\n    //     \"value\": this.props.Login.masterData.realUserSectionValue ?\n    //         this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\n    //         this.props.Login.masterData.UserSectionValue ?\n    //             this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n    // },\n    // {\n    //     \"label\": \"IDS_Test\",\n    //     \"value\": this.props.Login.masterData.realTestValue ?\n    //         this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\n    //         this.props.Login.masterData.TestValue ?\n    //             this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n    // },\n    {\n      \"label\": \"IDS_TESTSTATUS\",\n      \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\n    }];\n    const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"COARelease\") && this.state.controlMap.get('COARelease').ncontrolcode;\n    const expandId = this.props.Login.inputParam && this.state.controlMap.has(\"ReleaseExpand\") && this.state.controlMap.get('ReleaseExpand').ncontrolcode;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Affix, {\n      top: 60,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponentToolbar //   showFilter={true}\n    , {\n      showSearch: true,\n      breadCrumbItem: breadCrumbData,\n      filterColumnData: this.searchedGridData,\n      filterParam: filterTestParam,\n      selectedMaster: this.props.Login.masterData.RSSelectedSample,\n      searchRef: this.searchRef,\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(COAReleaseFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.UserSectionValue || [] // JobStatus={this.props.Login.masterData.JobStatus || []}\n          ,\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.TestValue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange // onDesignTemplateChange={this.onDesignTemplateChange}\n          // DynamicDesignMapping={this.state.stateDynamicDesign || []}\n          // DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\n          // DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\n          ,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 58\n          }\n        })\n      }],\n      onFilterSubmit: this.onFilterSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 26\n      }\n    }))), /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-list-content\",\n      style: {\n        paddingTop: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 25\n      }\n    }, this.state.data ? /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n      needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n      data: this.state.data,\n      dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      expandNextData: this.expandNextData,\n      checkFunction: this.checkFunction,\n      checkFunction1: this.checkFunction1,\n      expandFunc: this.expandFunc //expandData={this.expandData}\n      ,\n      childDataResult: this.state.childDataResult,\n      subChildDataResult: this.state.subChildDataResult,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n      expandField: \"expanded\",\n      handleExpandChange: this.handleExpandChange,\n      childHandleExpandChange: this.childHandleExpandChange,\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '600px',\n      gridTop: '10px',\n      isActionRequired: true,\n      isToolBarRequired: true,\n      isExpandRequired: true //  isDownloadRequired={true}\n      ,\n      isCollapseRequired: true,\n      selectedId: this.props.Login.selectedId,\n      hasChild: true,\n      hasSubChild: true,\n      childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleaseSubSample,\n      childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n      childMappingField: \"npreregno\",\n      subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n      ,\n      subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleaseTest,\n      selectedsubcild: this.props.Login.selectedsubcild,\n      methodUrl: \"Release\",\n      headerSelectionChange: this.headerSelectionChange,\n      childHeaderSelectionChange: this.childHeaderSelectionChange,\n      childSelectAll: this.props.Login.childSelectAll,\n      childSelectionChange: this.childSelectionChange,\n      subChildSelectionChange: this.subChildSelectionChange,\n      subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n      subChildSelectAll: this.props.Login.subChildSelectAll,\n      selectionChange: this.selectionChange,\n      selectAll: this.props.Login.selectAll,\n      releaseRecord: //this.props.getCOAReportType\n      this.onSaveModalClick,\n      viewDownloadFile: this.viewDownloadFile,\n      regnerateFile: this.regnerateFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 33\n      }\n    }) : \"\"), this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus //  mandatoryFields={mandatoryFields}\n      ,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: /*#__PURE__*/React.createElement(AddRelease, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        ReportTypeList: this.props.Login.ReportTypeList,\n        onInputOnChange: this.onInputOnChange // handleDateChange={this.handleDateChange}\n        ,\n        onComboChange: this.onComboChange,\n        userInfo: this.props.Login.userInfo,\n        esign: this.props.Login.loadEsign //currentTime={this.props.Login.currentTime}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      sampleListColumns,\n      subSampleListColumns,\n      testListColumns,\n      SingleItem,\n      sampleListMainField,\n      subSampleListMainField,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      resultDataState,\n      instrumentDataState,\n      materialDataState,\n      taskDataState,\n      documentDataState,\n      resultChangeDataState,\n      historyDataState,\n      testCommentDataState,\n      samplePrintHistoryDataState,\n      sampleHistoryDataState,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      skip,\n      take,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicSampleColumns,\n      DynamicSubSampleColumns,\n      DynamicTestColumns,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicSubSampleGridItem,\n      DynamicGridMoreField,\n      stateDynamicDesign,\n      sampleSearchField,\n      subsampleSearchField,\n      testSearchField,\n      combinedSearchField,\n      checkedflag,\n      npreregno\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \n\n        };\n        resultDataState = dataState;\n        instrumentDataState = dataState;\n        materialDataState = dataState;\n        taskDataState = dataState;\n        documentDataState = dataState;\n        resultChangeDataState = dataState;\n        historyDataState = dataState;\n        testCommentDataState = dataState;\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\n      checkedflag = this.props.Login.checkedflag;\n      bool = true;\n    }\n\n    if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\n      npreregno = this.props.Login.npreregno;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      bool = true;\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        sfilterstatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      };\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\n        resultDataState = this.props.Login.resultDataState;\n      }\n\n      if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\n        instrumentDataState = this.props.Login.instrumentDataState;\n      }\n\n      if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\n        taskDataState = this.props.Login.taskDataState;\n      }\n\n      if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\n        resultChangeDataState = this.props.Login.resultChangeDataState;\n      }\n\n      if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\n        historyDataState = this.props.Login.historyDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\n        samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\n      }\n\n      if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\n        sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\n      }\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n      DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []; // DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n\n      DynamicGridItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\n      DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n      subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n      testSearchField = dynamicColumn.testsearchfields ? dynamicColumn.testsearchfields : [];\n      sampleSearchField.map(item => {\n        combinedSearchField.push(item);\n      });\n      subsampleSearchField.map(item => {\n        combinedSearchField.push(item);\n      });\n      testSearchField.map(item => {\n        combinedSearchField.push(item);\n      });\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        sampleListColumns,\n        subSampleListColumns,\n        testListColumns,\n        SingleItem,\n        sampleListMainField,\n        subSampleListMainField,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        resultDataState,\n        instrumentDataState,\n        materialDataState,\n        taskDataState,\n        documentDataState,\n        resultChangeDataState,\n        historyDataState,\n        testCommentDataState,\n        samplePrintHistoryDataState,\n        sampleHistoryDataState,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        skip,\n        take,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicSubSampleGridItem,\n        DynamicGridMoreField,\n        stateDynamicDesign,\n        sampleSearchField,\n        subsampleSearchField,\n        testSearchField,\n        combinedSearchField,\n        checkedflag,\n        npreregno\n      }); //     if (this.state.count === 0){\n      //         const updateInfo = {\n      //             typeName: DEFAULT_RETURN,\n      //             data: {\n      //                 change: false,\n      //             }\n      //         }\n      //     this.props.updateStore(updateInfo);\n      // }\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData,\n          data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n          dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState) //        childDataResult: process(this.props.Login.data || Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item=>item) || [], this.state.dataState),\n          //  subChildDataResult: process(this.props.Login.data || Object.entries(this.props.Login.masterData.ReleaseTest)[1] || [], this.state.dataState),\n\n        }); //     const updateInfo = {\n        //         typeName: DEFAULT_RETURN,\n        //         data: {\n        //             masterData: process( this.props.Login.masterData.ReleaseSample || [], this.props.Login.dataState || this.state.dataState),\n        //         }\n        //     }\n        // this.props.updateStore(updateInfo);\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.state.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        const releaseData = this.props.Login.data || this.props.Login.masterData.ReleaseSample || [];\n        this.setState({\n          data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n          dataResult: process(this.props.Login.masterData.ReleaseSample || [], this.props.Login.dataState || dataState),\n          //   childDataResult: process(Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item=>item) || [], this.props.Login.dataState || dataState),\n          //    subChildDataResult: process(Object.entries(this.props.Login.masterData.ReleaseTest) || [], this.props.Login.dataState || dataState),\n          dataState\n        });\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData,\n  getSubSampleBySample,\n  getReleaseSelectedSamples,\n  getReleaseSelectedSubSamples,\n  getTestBySample,\n  getReleaseSelectedTest,\n  getReleaseSelectedSampleSubSampleTest,\n  getReleaseRegistrationType,\n  getReleaseRegistrationSubType,\n  getReleaseFilterStatus,\n  getReleaseApprovalVersion,\n  getReleaseFilterBasedTest,\n  getReleaseSample,\n  getCOAReportType,\n  generateReport\n})(injectIntl(COARelease));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/COARelease.jsx"],"names":["React","ListWrapper","Row","Col","toast","process","intl","connect","injectIntl","callService","crudMaster","updateStore","validateEsignCredential","getSubSampleBySample","getReleaseSelectedSamples","filterColumnData","getReleaseSelectedSampleSubSampleTest","getReleaseSelectedSubSamples","getTestBySample","getReleaseSelectedTest","xmlExportAction","getReleaseRegistrationType","getReleaseRegistrationSubType","getReleaseFilterStatus","getReleaseApprovalVersion","getReleaseFilterBasedTest","getReleaseSample","getCOAReportType","generateReport","Esign","DEFAULT_RETURN","showEsign","getControlMap","convertDateValuetoString","rearrangeDateFormat","constructOptionList","searchData","searchJsonData","designProperties","transactionStatus","DataGridWithMultipleGrid","BreadcrumbComponentToolbar","getSelectedState","COAReleaseFilter","TrainingUpdateChildTab","Affix","ModalShow","AddRelease","mapStateToProps","state","Login","COARelease","Component","constructor","props","handleExpandChange","row","dataState","viewParam","nsitecode","userInfo","primaryKeyField","masterData","primaryKeyValue","viewRow","childHandleExpandChange","dataStateChange","event","setState","dataResult","data","expandNextData","handleDateChange","dateName","dateValue","Date","dfrom","fromDate","dto","toDate","obj","inputParam","inputData","nflag","nregtypecode","RegTypeValue","nregsubtypecode","RegSubTypeValue","String","userinfo","onFilterComboChange","comboData","fieldName","inputParamData","value","SampleTypeValue","nsampletypecode","item","nsectioncode","UserSectionValue","UserSection","map","join","napprovalversioncode","ApprovalVersionValue","napprovalconfigversioncode","ntransactionstatus","FilterStatusValue","stransactionstatus","FilterStatus","ndesigntemplatemappingcode","DesignTemplateMappingValue","napproveconfversioncode","JobStatusValue","njobstatuscode","updateInfo","typeName","TestValue","ntestcode","onFilterSubmit","searchRef","current","change","realFromDate","realToDate","realSampleTypeValue","realRegTypeValue","realRegSubTypeValue","realFilterStatusValue","realApprovalVersionValue","realUserSectionValue","realTestValue","realDesignTemplateMappingValue","npreregno","parseInt","undefined","napprovalconfigcode","section","nneedsubsample","nneedtemplatebasedflow","ntype","sfilterstatus","searchSampleRef","searchSubSampleRef","searchTestRef","skip","take","testskip","testtake","warn","formatMessage","id","searchedGridData","filterValue","filterParam","masterData1","searchedData","inputListName","length","isjsondata","searchFieldList","searchNestedGridData","test","sample","subsample","originalData","fieldList","ntransactionsamplecode","subdata","detail","Object","entries","item1","push","temp","filter","itemArray","itemKey","toLowerCase","toString","findIndex","element","includes","groupBy","ReleaseSample","i","ReleaseSubSample","subsample1","objectArray","property","reduce","acc","key","checkFunction","arrayfalse","childfalsearray","checkFunction1","count","expandFunc","checkFlag","onComboChange","selectedRecord","closeModalShow","loadEsign","modalShow","selectedId","viewDownloadFile","onSaveModalClick","regnerateFile","action","ntransactiontestcode","c","index","indexOf","dataItem","x","ntransCode","ALL","status","APSelectedSample","APSelectedSubSample","APSelectedTest","checkBoxOperation","info","reloadData","activeTestTab","activeSampleTab","activeSubSampleTab","resultDataState","instrumentDataState","materialDataState","taskDataState","documentDataState","resultChangeDataState","testCommentDataState","historyDataState","samplePrintHistoryDataState","sampleHistoryDataState","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","screenData","selectionChange","checkedflag","checked","syntheticEvent","target","selected","preregno","ncoahistorycode","ssystemfilename","coaFileInfo","childHeaderSelectionChange","dataItems","subsamplecode","subChildHeaderSelectionChange","transactionsamplecode","ReleaseTest","collectData","rFlag","every","headerSelectionChange","childSelectionChange","slected","subChildSelectionChange","y","t","y1","npreregno1","ntransactionsamplecode1","ntransactiontestcode1","formRef","createRef","settings","masterStatus","error","childDataResult","userRoleControlRights","controlMap","Map","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","sampleSearchField","subsampleSearchField","testSearchField","SampleGridItem","combinedSearchField","extractedColumnList","sampleColumnList","testColumnList","searchedData1","expanded","getDerivedStateFromProps","gridfillingColumn","temparray","option","LABEL","slanguagetypecode","VALUE","render","filterTestParam","isSingleSelect","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","releaseId","has","get","ncontrolcode","expandId","RSSelectedSample","ConfigVersionList","UserSectionList","TestList","paddingTop","subChildDataResult","DynamicGridItem","DynamicTestGridItem","searchedData2","DynamicSubSampleGridItem","searchedData3","selectedsubcild","childSelectAll","subChildSelectAll","selectAll","modalTitle","ReportTypeList","onInputOnChange","componentDidUpdate","previousProps","sampleListColumns","subSampleListColumns","testListColumns","SingleItem","sampleListMainField","subSampleListMainField","testListMainField","SampleGridExpandableItem","testMoreField","selectedFilter","DynamicSampleColumns","DynamicSubSampleColumns","DynamicTestColumns","DynamicGridMoreField","stateDynamicDesign","bool","nformcode","values","nsubsampleneed","NO","SampletypeListMap","SampleType","RegistrationTypeListMap","RegType","RegistrationSubTypeListMap","RegSubType","FilterStatusListMap","ConfigVersionListMap","ApprovalVersion","UserSectionListMap","TestListMap","Test","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","JSON","parse","stringify","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","sampledisplayfields","testListFields","releasetestfields","samplegridmoreitem","testlistmoreitems","samplesearchfields","subsamplesearchfields","testsearchfields","DesignTemplateMapping","DesignTemplateMappingMap","releaseData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListWrapper } from '../components/client-group.styles';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { intl } from '../components/App';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential, getSubSampleBySample, getReleaseSelectedSamples, filterColumnData,\r\n    getReleaseSelectedSampleSubSampleTest, getReleaseSelectedSubSamples, getTestBySample, getReleaseSelectedTest, xmlExportAction,\r\n    getReleaseRegistrationType, getReleaseRegistrationSubType,\r\n    getReleaseFilterStatus, getReleaseApprovalVersion, getReleaseFilterBasedTest, getReleaseSample,getCOAReportType,generateReport\r\n} from '../actions';\r\n\r\n\r\nimport Esign from '../pages/audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../actions/LoginTypes';\r\n\r\nimport { showEsign, getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchData, searchJsonData } from '../components/CommonScript';\r\nimport { designProperties, transactionStatus } from '../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../components/data-grid/DataGridWithMultipleGrid';\r\nimport BreadcrumbComponentToolbar from '../components/ToolbarBreadcrumb.Component';\r\n\r\nimport {\r\n\r\n    getSelectedState\r\n} from \"@progress/kendo-react-grid\";\r\nimport COAReleaseFilter from './coarelease/COAReleaseFilter';\r\nimport TrainingUpdateChildTab from './competencemanagement/trainingupdate/TrainingUpdateChildTab';\r\nimport { Affix } from 'rsuite';\r\nimport ModalShow from '../components/ModalShow';\r\nimport AddRelease from './coarelease/AddRelease';\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass COARelease extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            childDataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            searchedData: [],\r\n            count: 0,\r\n            SampleGridItem: [],\r\n            combinedSearchField:[],\r\n            npreregno:[],\r\n            ntransactiontestcode:[],\r\n            ntransactionsamplecode:[]\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n            {\r\n                \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"Specimen Type\", \"width\": \"200px\"\r\n            },\r\n            { \"idsName\": \"IDS_PRODUCTCATEGORY\", \"dataField\": \"Specimen Category\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\r\n        ];\r\n\r\n        this.sampleColumnList = [{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_SAMPLENAME\", \"dataField\": \"Sample Name\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n\r\n        this.testColumnList = [\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"100px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n    }\r\n\r\n \r\n    handleExpandChange = (row, dataState) => {\r\n        const viewParam = {\r\n            nsitecode: -1,\r\n            userInfo: this.props.Login.userInfo, primaryKeyField: \"npreregno\",\r\n            masterData: this.props.Login.masterData\r\n        };\r\n\r\n        this.props.getSubSampleBySample({\r\n            ...viewParam, dataState,\r\n            primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField], viewRow: row[\"dataItem\"]\r\n        });\r\n\r\n    }\r\n    handleExpandChange = (row, dataState) => {\r\n        const viewParam = {\r\n            nsitecode: -1,\r\n            userInfo: this.props.Login.userInfo, primaryKeyField: \"npreregno\",\r\n            masterData: this.props.Login.masterData\r\n        };\r\n\r\n        this.props.getSubSampleBySample({\r\n            ...viewParam, dataState,\r\n            primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField], viewRow: row[\"dataItem\"]\r\n        });\r\n\r\n    }\r\n    childHandleExpandChange = (row, dataState) => {\r\n        const viewParam = {\r\n            nsitecode: -1,\r\n            userInfo: this.props.Login.userInfo, primaryKeyField: \"npreregno\",\r\n            masterData: this.props.Login.masterData\r\n        };\r\n\r\n        this.props.getTestBySample({\r\n            ...viewParam, dataState,\r\n            primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField], viewRow: row[\"dataItem\"]\r\n        });\r\n\r\n    }\r\n    expandNextData(y) {\r\n        let change = []\r\n        let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\r\n\r\n        let data = x.data.every(item => {\r\n            return item.expanded === true\r\n        })\r\n        if (data === true) {\r\n            change = true\r\n        } else {\r\n            change = false\r\n        }\r\n        this.expandFunc({ change: change })\r\n\r\n    }\r\n    dataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        this.expandNextData(event.dataState);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getReleaseApprovalVersion(inputParam)\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item\r\n                    };\r\n                    this.props.getReleaseRegistrationType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item\r\n                    }\r\n                    this.props.getReleaseRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getReleaseApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                const inputParamData = {\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: { ...this.props.Login.masterData },\r\n                    RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                    ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: comboData.value,\r\n                    DesignTemplateMappingValue: comboData.item\r\n                }\r\n                this.props.getReleaseFilterBasedTest(inputParamData)\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getReleaseFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n                    // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        nsectioncode: comboData.value === -1 ? null\r\n                            // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                            : comboData.value,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n                        DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n                    }\r\n\r\n                    this.props.getReleaseFilterBasedTest(inputParamData);\r\n                }\r\n            } else if (fieldName === 'njobstatuscode') {\r\n                if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n                    let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else {\r\n                if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n                    //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n                    //  const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //    data: { masterData }\r\n                    // }\r\n\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n                        //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                        //: this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                        ,ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                        ,DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue  \r\n\r\n                    }\r\n\r\n                    this.props.getReleaseFilterBasedTest(inputParamData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData1\"]\r\n        delete this.props.Login.masterData[\"searchedData2\"]\r\n\r\n        delete this.props.Login.masterData[\"searchedData3\"]\r\n        this.props.Login.change = false\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                ?this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode:this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n\r\n            }\r\n            this.props.getReleaseSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    searchedGridData = (filterValue, filterParam) => {\r\n\r\n        let masterData1 = filterParam.masterData;\r\n\r\n        let primaryKeyValue = 0;\r\n        let searchedData = undefined;\r\n        if (filterValue === \"\") {\r\n            if (masterData1[filterParam.inputListName] && masterData1[filterParam.inputListName].length > 0) {\r\n\r\n                primaryKeyValue = masterData1[filterParam.inputListName][0][filterParam.primaryKeyField];\r\n                // }\r\n            }\r\n        }\r\n        else {\r\n            if (filterParam.isjsondata) {\r\n                searchedData = searchJsonData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || []);\r\n            }\r\n            else {\r\n                searchedData = this.searchNestedGridData(filterValue, masterData1[filterParam.inputListName], filterParam.searchFieldList || [], masterData1);\r\n\r\n            }\r\n            masterData1[\"searchedData3\"] = searchedData.test;\r\n            masterData1[\"searchedData1\"] = searchedData.sample;\r\n            masterData1[\"searchedData2\"] = searchedData.subsample;\r\n\r\n            //    masterData1[\"searchedData\"][\"selected\"]=false\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...masterData1 }\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    searchNestedGridData=(filterValue, originalData, fieldList, masterData) =>{\r\n        let searchedData = [];\r\n        let ntransactionsamplecode = [];\r\n        let subdata = [];\r\n        let detail = []\r\n        let npreregno = []\r\n      \r\n        Object.entries(originalData).map(item1 => {\r\n          item1[1].map(item => {\r\n            detail.push(item)\r\n          })\r\n        })\r\n      \r\n        let temp =\r\n          detail.filter(item => {\r\n            const itemArray = [];\r\n      \r\n            fieldList.map(itemKey =>\r\n              item[itemKey] && item[itemKey] !== null ?\r\n                itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase()\r\n                  : item[itemKey].toString().toLowerCase())\r\n                : \"\")\r\n            return itemArray\r\n              .findIndex(element => element\r\n                .includes(filterValue.toLowerCase())) > -1\r\n      \r\n          })\r\n      \r\n        temp.map(item1 => {\r\n          if (!npreregno.includes(item1.npreregno))\r\n            npreregno.push(item1.npreregno)\r\n          if (!ntransactionsamplecode.includes(item1.ntransactionsamplecode))\r\n            ntransactionsamplecode.push(item1.ntransactionsamplecode)\r\n        })\r\n        let test = groupBy(temp, 'ntransactionsamplecode');\r\n        let sample = masterData.ReleaseSample.filter(item => {\r\n      \r\n          for (var i = 0; i < npreregno.length; i++) {\r\n            if (npreregno[i] === item.npreregno && npreregno[i] !== undefined) {\r\n              return item\r\n            }\r\n          }\r\n      \r\n        })\r\n      \r\n        Object.entries(masterData.ReleaseSubSample).map(item1 => {\r\n          item1[1].map(item => {\r\n            subdata.push(item)\r\n          })\r\n        })\r\n        let subsample1 = subdata.filter(item => {\r\n      \r\n          for (var i = 0; i < ntransactionsamplecode.length; i++) {\r\n            if (ntransactionsamplecode[i] === item.ntransactionsamplecode && ntransactionsamplecode[i] !== undefined) {\r\n              return item\r\n            }\r\n          }\r\n      \r\n        })\r\n        let subsample = groupBy(subsample1, \"npreregno\");\r\n        function groupBy(objectArray, property) {\r\n          return objectArray.reduce((acc, obj) => {\r\n            const key = obj[property];\r\n            if (!acc[key]) {\r\n              acc[key] = [];\r\n            }\r\n            acc[key].push(obj);\r\n            return acc;\r\n          }, {});\r\n        }\r\n        searchedData = { test, sample, subsample }\r\n        return searchedData;\r\n      }\r\n      //end- search logic\r\n    checkFunction = (data) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                arrayfalse: data.arrayfalse,\r\n                childfalsearray: data.childfalsearray\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    checkFunction1 = () => {\r\n        this.setState({\r\n            count: 1\r\n        })\r\n    }\r\n    expandFunc = (change) => {\r\n        let count = change.count;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...this.props.Login.masterData },\r\n                change: change.change,\r\n                checkFlag: \"1\",\r\n                count: count\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n\r\n\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"ReleaseTest\",\r\n            //  selectedObject: \"APSelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            //    fetchUrl: this.getActiveTestURL(),\r\n            // fecthInputObject: {\r\n            //     ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n            //     userinfo: this.props.Login.userInfo,\r\n            //     checkBoxOperation: 3,\r\n            //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n            // },\r\n            isSingleSelect: false,\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.combinedSearchField || [],\r\n\r\n        };\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_SAMPLETYPE\",\r\n            //     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\r\n            // },\r\n             {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_DESIGNTEMPLATE\",\r\n            //     \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ?\r\n            //         this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\r\n            //         this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : \"NA\"\r\n            // },\r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": this.props.Login.masterData.realApprovalVersionValue ?\r\n            //         this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\r\n            //         this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\r\n            // },\r\n            // {\r\n            //     \"label\": \"IDS_SECTION\",\r\n            //     \"value\": this.props.Login.masterData.realUserSectionValue ?\r\n            //         this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n            //         this.props.Login.masterData.UserSectionValue ?\r\n            //             this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n            // },\r\n            // {\r\n            //     \"label\": \"IDS_Test\",\r\n            //     \"value\": this.props.Login.masterData.realTestValue ?\r\n            //         this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n            //         this.props.Login.masterData.TestValue ?\r\n            //             this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n            // },\r\n            {\r\n                \"label\": \"IDS_TESTSTATUS\",\r\n                \"value\": this.props.Login.masterData.realFilterStatusValue ?\r\n                    this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" :\r\n                    this.props.Login.masterData.FilterStatusValue ?\r\n                        this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\r\n            }\r\n        ];\r\n        const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"COARelease\")\r\n            && this.state.controlMap.get('COARelease').ncontrolcode;\r\n        const expandId = this.props.Login.inputParam && this.state.controlMap.has(\"ReleaseExpand\")\r\n            && this.state.controlMap.get('ReleaseExpand').ncontrolcode;\r\n        return (\r\n            <>\r\n                {/* <Row> */}\r\n                    {/* <Col> */}\r\n                    <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                        <Affix top={60}>\r\n                         <BreadcrumbComponentToolbar\r\n                                //   showFilter={true}\r\n                                showSearch={true}\r\n                                breadCrumbItem={breadCrumbData}\r\n                                filterColumnData={this.searchedGridData}\r\n                                filterParam={filterTestParam}\r\n                                selectedMaster={this.props.Login.masterData.RSSelectedSample}\r\n                                searchRef={this.searchRef}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <COAReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            UserSection={this.state.UserSectionList || []}\r\n                                            UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            // JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                            Test={this.state.TestList || []}\r\n                                            TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n\r\n                                            // onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            // DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                            // DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            // DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n\r\n                                />\r\n                            </Affix>\r\n                </div>\r\n                {/* <Row>\r\n                <Col> */}\r\n                        <ListWrapper className=\"client-list-content\" style={{paddingTop:\"5px\"}}>\r\n                     \r\n\r\n                            {this.state.data ?\r\n                                <DataGridWithMultipleGrid\r\n                                    needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                    data={this.state.data}\r\n                                    dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    expandNextData={this.expandNextData}\r\n                                    checkFunction={this.checkFunction}\r\n                                    checkFunction1={this.checkFunction1}\r\n                                    expandFunc={this.expandFunc}\r\n                                    //expandData={this.expandData}\r\n                                    childDataResult={this.state.childDataResult}\r\n                                    subChildDataResult={this.state.subChildDataResult}\r\n                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                    subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                    expandField=\"expanded\"\r\n                                    handleExpandChange={this.handleExpandChange}\r\n                                    childHandleExpandChange={this.childHandleExpandChange}\r\n\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    pageable={true}\r\n                                    scrollable={'scrollable'}\r\n                            gridHeight={'600px'}\r\n                            gridTop={'10px'}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    isExpandRequired={true}\r\n                                  //  isDownloadRequired={true}\r\n                                    isCollapseRequired={true}\r\n\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    hasChild={true}\r\n                                    hasSubChild={true}\r\n                                    childList={\r\n                                        this.props.Login.masterData.searchedData2 ||\r\n                                        this.props.Login.masterData.ReleaseSubSample\r\n                                    }\r\n                                    childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                    childMappingField={\"npreregno\"}\r\n                                    subChildMappingField={\"ntransactionsamplecode\"}\r\n\r\n                                   // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                    subChildList={\r\n                                        this.props.Login.masterData.searchedData3 ||\r\n                                        this.props.Login.masterData.ReleaseTest\r\n                                    }\r\n                                    selectedsubcild={this.props.Login.selectedsubcild}\r\n                                    methodUrl={\"Release\"}\r\n                                    headerSelectionChange={this.headerSelectionChange}\r\n                                    childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                    childSelectAll={this.props.Login.childSelectAll}\r\n                                    childSelectionChange={this.childSelectionChange}\r\n                                    subChildSelectionChange={this.subChildSelectionChange}\r\n                                    subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                    subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                    selectionChange={this.selectionChange}\r\n                                    selectAll={this.props.Login.selectAll}\r\n                                    releaseRecord={//this.props.getCOAReportType\r\n                                        this.onSaveModalClick} \r\n                                        viewDownloadFile={this.viewDownloadFile}\r\n                                        regnerateFile={this.regnerateFile}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    {/* </Col>\r\n                </Row> */}\r\n{this.props.Login.modalShow ? (\r\n          <ModalShow\r\n            modalShow={this.props.Login.modalShow}\r\n            closeModal={this.closeModalShow}\r\n            onSaveClick={this.onSaveModalClick}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n          //  mandatoryFields={mandatoryFields}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            modalTitle={this.props.Login.modalTitle}\r\n            modalBody={\r\n               \r\n                <AddRelease\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  ReportTypeList={this.props.Login.ReportTypeList}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                 // handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  esign={this.props.Login.loadEsign}\r\n                  //currentTime={this.props.Login.currentTime}\r\n                />\r\n            }\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n            </>\r\n        );\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    } \r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n    \r\n        let modalShow = this.props.Login.modalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n          loadEsign = false;\r\n        } else {\r\n          modalShow = false;\r\n          selectedRecord = {};\r\n        }\r\n    \r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: { modalShow, selectedRecord, selectedId: null, loadEsign },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      };\r\n      viewDownloadFile= (inputData,row) => { \r\n        // this.props.generateReport()\r\n        this.onSaveModalClick(true,row,'IDS_DOWNLOADFILE')\r\n     }\r\n     regnerateFile= (inputData,row) => { \r\n        // this.props.generateReport()\r\n        this.onSaveModalClick(true,row,'IDS_REGENERATEFILE')\r\n     }\r\n      onSaveModalClick = (nflag,row,action) => {\r\n        let ntransactionsamplecode = \"\"\r\n        let ntransactiontestcode = \"\"\r\n        let npreregno = \"\"\r\n        if(nflag===true?true:this.state.npreregno&&this.state.npreregno.length>0 ){\r\n        let sample = this.state.npreregno.filter((c, index) => {\r\n            return this.state.npreregno.indexOf(c) === index;\r\n        });\r\n        let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n            return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n        });\r\n        let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n            return this.state.ntransactiontestcode.indexOf(c) === index;\r\n        });\r\n        if (nflag===true)\r\n        {\r\n            npreregno = row.dataItem['npreregno']\r\n\r\n        }\r\n        else\r\n        {\r\n            npreregno = sample.map(x => x).join(\",\") \r\n        }\r\n        ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n        ntransactiontestcode = test.map(x => x).join(\",\")\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n        if (ntransCode === transactionStatus.ALL) {\r\n            ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n        } else {\r\n            ntransCode = ntransCode\r\n        }\r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                npreregno: npreregno,\r\n                ntransactionsamplecode: ntransactionsamplecode,\r\n                ntransactiontestcode: ntransactiontestcode,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                    this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                        this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                        String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                    null,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n                 ntransactionstatus: String(\"-1\"),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                nflag: 2,\r\n                ntype: 1,\r\n                userinfo: this.props.Login.userInfo,\r\n                APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                checkBoxOperation: 3,\r\n                action,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n       if (nflag===true)\r\n        {\r\n            this.props.generateReport( inputParam.inputData, this.props.Login.masterData)\r\n        }\r\n        else\r\n        {\r\n            this.props.getReleaseSelectedSampleSubSampleTest(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData) \r\n        }\r\n    }\r\n    else\r\n    {\r\n        toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE/SUBSAMPLE/TEST\" })); \r\n    }\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            sampleListMainField, subSampleListMainField, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            resultDataState, instrumentDataState,\r\n            materialDataState, taskDataState,\r\n            documentDataState, resultChangeDataState,\r\n            historyDataState, testCommentDataState,\r\n            samplePrintHistoryDataState, sampleHistoryDataState,\r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList, skip, take, testskip, testtake, selectedFilter,\r\n            DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns, DynamicGridItem, DynamicTestGridItem,DynamicSubSampleGridItem,\r\n            DynamicGridMoreField, stateDynamicDesign, sampleSearchField, subsampleSearchField, testSearchField ,combinedSearchField,checkedflag,npreregno} = this.state;\r\n\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = {\r\n                    skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \r\n                }\r\n                resultDataState = dataState\r\n                instrumentDataState = dataState\r\n                materialDataState = dataState\r\n                taskDataState = dataState\r\n                documentDataState = dataState\r\n                resultChangeDataState = dataState\r\n                historyDataState = dataState\r\n                testCommentDataState = dataState\r\n\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\r\n\r\n            checkedflag = this.props.Login.checkedflag\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\r\n\r\n            npreregno = this.props.Login.npreregno\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\r\n                instrumentDataState = this.props.Login.instrumentDataState;\r\n            }\r\n            if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\r\n                taskDataState = this.props.Login.taskDataState;\r\n            }\r\n            if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\r\n                resultChangeDataState = this.props.Login.resultChangeDataState;\r\n            }\r\n            if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n                historyDataState = this.props.Login.historyDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\r\n                samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n           // DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\r\n            DynamicSubSampleGridItem=dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\r\n            testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n\r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n            testSearchField = dynamicColumn.testsearchfields ? dynamicColumn.testsearchfields : [];\r\n            sampleSearchField.map(item => { combinedSearchField.push(item) });\r\n            subsampleSearchField.map(item => { combinedSearchField.push(item) });\r\n            testSearchField.map(item => { combinedSearchField.push(item) });\r\n\r\n\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n                sampleListMainField, subSampleListMainField, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                resultDataState, instrumentDataState,\r\n                materialDataState, taskDataState,\r\n                documentDataState, resultChangeDataState,\r\n                historyDataState, testCommentDataState,\r\n                samplePrintHistoryDataState, sampleHistoryDataState,\r\n                selectedRecord, SampletypeList, RegistrationTypeList,\r\n                RegistrationSubTypeList, FilterStatusList,\r\n                ConfigVersionList, UserSectionList, TestList,\r\n                skip, take, testskip, testtake, selectedFilter,\r\n                DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem, DynamicTestGridItem,DynamicSubSampleGridItem,\r\n                DynamicGridMoreField, stateDynamicDesign,\r\n                sampleSearchField, subsampleSearchField, testSearchField,combinedSearchField,checkedflag,npreregno\r\n            });\r\n            //     if (this.state.count === 0){\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: {\r\n            //                 change: false,\r\n            //             }\r\n            //         }\r\n            //     this.props.updateStore(updateInfo);\r\n            // }\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                    dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n\r\n                    //        childDataResult: process(this.props.Login.data || Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item=>item) || [], this.state.dataState),\r\n                    //  subChildDataResult: process(this.props.Login.data || Object.entries(this.props.Login.masterData.ReleaseTest)[1] || [], this.state.dataState),\r\n\r\n\r\n                });\r\n                //     const updateInfo = {\r\n                //         typeName: DEFAULT_RETURN,\r\n                //         data: {\r\n                //             masterData: process( this.props.Login.masterData.ReleaseSample || [], this.props.Login.dataState || this.state.dataState),\r\n                //         }\r\n                //     }\r\n                // this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.state.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                const releaseData = this.props.Login.data || this.props.Login.masterData.ReleaseSample || [];\r\n\r\n                this.setState({\r\n                    data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                    dataResult: process(this.props.Login.masterData.ReleaseSample || [], this.props.Login.dataState || dataState),\r\n                    //   childDataResult: process(Object.values(this.props.Login.masterData.ReleaseSubSample).forEach(item=>item) || [], this.props.Login.dataState || dataState),\r\n                    //    subChildDataResult: process(Object.entries(this.props.Login.masterData.ReleaseTest) || [], this.props.Login.dataState || dataState),\r\n\r\n                    dataState\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData1\"]\r\n        delete this.props.Login.masterData[\"searchedData2\"]\r\n\r\n        delete this.props.Login.masterData[\"searchedData3\"]\r\n\r\n        // this.props.Login.masterData.ReleaseSample.map(item=>item[\"expanded\"]=false)\r\n\r\n        this.props.Login.change = false\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue } = this.props.Login.masterData\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\r\n            checkBoxOperation: 3,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getReleaseSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    selectionChange = (event,nflag,checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (nflag === undefined) {\r\n            this.state.dataResult.data.map(item => {\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n                   \r\n            })\r\n            let preregno = event.dataItem.npreregno\r\n            let ncoahistorycode = event.dataItem.ncoahistorycode\r\n            let ssystemfilename = event.dataItem.ssystemfilename\r\n            const coaFileInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { ncoahistorycode, ssystemfilename},\r\n            };\r\n            this.props.updateStore(coaFileInfo);\r\n\r\n            this.childHeaderSelectionChange(event, preregno,checkedflag)\r\n        }\r\n        else {\r\n            let data=[]\r\n            event.dataItems.map(item => {\r\n                data.push({\"npreregno\":item.npreregno})\r\n            })\r\n            this.childHeaderSelectionChange(event, data,checkedflag)\r\n\r\n        }\r\n       \r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n    childHeaderSelectionChange=(event, preregno,checkedflag) =>{\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let subsamplecode = [];\r\n        let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno\r\n       if (npreregno.length===0||npreregno.length===undefined) {\r\n           this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\r\n                \r\n                item.selected = checked\r\n                if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                    subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                }\r\n                \r\n            })\r\n            this.props.Login.masterData.ReleaseSample.map(data => {\r\n                if (data.npreregno === npreregno) {\r\n                 data.selected = checked\r\n\r\n                }\r\n            })\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode,checkedflag)\r\n        }\r\n       else {\r\n           npreregno.map(value => {\r\n               this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\r\n                   item.selected = checked\r\n                   if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                       subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                   }\r\n               })\r\n            //    this.props.Login.masterData.ReleaseSample.map(data => {\r\n            //        if (data.npreregno === value.npreregno) {\r\n            //         data.selected = checked\r\n \r\n            //        }\r\n            //    })\r\n           })\r\n           \r\n\r\n        this.subChildHeaderSelectionChange(event, subsamplecode,checkedflag)\r\n        }\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    subChildHeaderSelectionChange = (event, subsamplecode,checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let transactionsamplecode=[]\r\n        if (subsamplecode !== undefined) {\r\n            transactionsamplecode = subsamplecode\r\n            transactionsamplecode.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item,checkedflag)\r\n\r\n                    return item;\r\n                })\r\n            )\r\n        }\r\n        else {\r\n            let rFlag = true;\r\n            event.dataItems.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item,checkedflag)\r\n\r\n                    return item;\r\n                })\r\n                \r\n            )\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\r\n                if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\r\n                return item.selected === true;\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n\r\n                    }\r\n    \r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n    \r\n                })\r\n            }\r\n            \r\n            // let x;\r\n            // let i;\r\n            // for (i = 0; i < this.props.Login.masterData.ReleaseSample.length; i++){\r\n            //     x=i\r\n            //         if (event.dataItems[0].npreregno !== this.props.Login.masterData.ReleaseSample[i].npreregno) {\r\n            //             // item.selected = checked;\r\n            //             rFlag = false;\r\n            //             break;\r\n            //         }\r\n            // }\r\n            \r\n            // if (rFlag === true) {\r\n            //     this.props.Login.masterData.ReleaseSample[x].selected = checked;\r\n            // }\r\n        }\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        // if(checked===true)\r\n        // {\r\n            this.state.dataResult.data.map(item => {\r\n                item.selected = checked;\r\n                return item;\r\n            }); \r\n                //this.setState({headerSelect:checked})  \r\n            this.selectionChange(event,1,checked);\r\n        // }else\r\n        // {\r\n        //     this.setState({npreregno:[]})\r\n        // }\r\n    \r\n\r\n    }\r\n    childSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n                if (item.npreregno === event.dataItem.npreregno&&item.ntransactionsamplecode===event.dataItem.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                }\r\n                   \r\n            })\r\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n            return item.slected===true\r\n        })\r\n        if (data === true) {\r\n            this.props.Login.masterData.ReleaseSample.map(item => {\r\n                if (event.dataItem.npreregno === item.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n                return item.selected===true\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        \r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo); \r\n    }\r\n    subChildSelectionChange = (event) => {\r\n        let x=[]\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = checked;\r\n                this.collectData(item)\r\n            }\r\n               \r\n        })\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n\r\n\r\n                if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\r\n                        x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]\r\n                    }\r\n                }\r\n\r\n            })\r\n            let y = x.filter(t => t.selected === true);\r\n            if (x.length === y.length) {\r\n                this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                    if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\r\n                        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true\r\n                    }\r\n                })\r\n\r\n        }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                    if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false\r\n                    }\r\n                })\r\n        }\r\n                this.state.dataResult.data.map(item => {\r\n\r\n\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\r\n                        x = this.props.Login.masterData.ReleaseSubSample[item.npreregno]\r\n                    }\r\n                }\r\n\r\n            })\r\n            let y1 = x.filter(t => t.selected === true);\r\n            if (x.length === y1.length) {\r\n                this.state.dataResult.data.map((t, i) => {\r\n                    if (t.npreregno === y1[0].npreregno) {\r\n                        this.state.dataResult.data[i].selected = true\r\n                    }\r\n                })\r\n\r\n        }\r\n            else {\r\n                this.state.dataResult.data.map((t, i) => {\r\n                    if(t.npreregno===event.dataItem.npreregno){\r\n                    this.state.dataResult.data[i].selected = false\r\n                    } \r\n                })\r\n        }\r\n   \r\n    }\r\n    collectData = (item,checkedflag) => {\r\n            let npreregno = this.state.npreregno || []\r\n        let ntransactionsamplecode=this.state.ntransactionsamplecode||[]\r\n        let ntransactiontestcode = this.state.ntransactiontestcode || []\r\n                        if (item.selected === true) {\r\n                        if (!npreregno.includes(item.npreregno)) {\r\n                            npreregno.push(item.npreregno)\r\n                        }\r\n                        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                            ntransactionsamplecode.push(item.ntransactionsamplecode)\r\n                        }\r\n                        if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                            ntransactiontestcode.push(item.ntransactiontestcode)\r\n                        }\r\n                    }\r\n                    else {\r\n                        const npreregno1 = npreregno.filter(data => data !== item.npreregno )\r\n                        npreregno = npreregno1\r\n    \r\n                        const ntransactionsamplecode1 = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode)\r\n                        ntransactionsamplecode = ntransactionsamplecode1\r\n    \r\n                        const ntransactiontestcode1 = ntransactiontestcode.filter(data => data!== item.ntransactiontestcode)\r\n                        ntransactiontestcode = ntransactiontestcode1\r\n                    }   \r\n        //      const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         data: undefined, dataState: undefined,\r\n        //         npreregno: npreregno,\r\n        //         ntransactionsamplecode:ntransactionsamplecode,\r\n        //         ntransactiontestcode:ntransactiontestcode\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        this.setState({npreregno:checkedflag===false?[]:npreregno,ntransactionsamplecode:ntransactionsamplecode,ntransactiontestcode:ntransactiontestcode})\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    getSubSampleBySample, getReleaseSelectedSamples, getReleaseSelectedSubSamples, getTestBySample,\r\n    getReleaseSelectedTest, getReleaseSelectedSampleSubSampleTest, getReleaseRegistrationType, getReleaseRegistrationSubType,\r\n    getReleaseFilterStatus, getReleaseApprovalVersion, getReleaseFilterBasedTest, getReleaseSample,getCOAReportType\r\n,generateReport\r\n})(injectIntl(COARelease));"]},"metadata":{},"sourceType":"module"}