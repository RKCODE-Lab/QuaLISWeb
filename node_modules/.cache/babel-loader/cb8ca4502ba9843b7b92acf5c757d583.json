{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\joballocation\\\\AddJobAllocation.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { transactionStatus } from '../../components/Enumeration';\nimport { injectIntl } from 'react-intl';\n\nconst AddJobAllocation = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TECHNIQUE\"\n    }),\n    isSearchable: true,\n    name: \"ntechniquecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isClearable: true,\n    options: props.Technique,\n    value: props.selectedRecord[\"ntechniquecode\"] || \"\",\n    defaultValue: props.selectedRecord[\"ntechniquecode\"],\n    onChange: event => props.onComboChange(event, \"ntechniquecode\"),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_USERS\"\n    }),\n    isSearchable: true,\n    name: \"nusercode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Users,\n    value: props.selectedRecord[\"nusercode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nusercode\"],\n    onChange: event => props.onComboChange(event, \"nusercode\"),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"duserblockfromdatetime\",\n    label: props.intl.formatMessage({\n      id: \"IDS_STARTDATETIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    dateFormat: props.userInfo ? props.userInfo.ssitedatetime || [] : [],\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_STARTTIME\"\n    }),\n    showTimeInput: true,\n    isClearable: false,\n    isMandatory: true,\n    required: true,\n    minDate: props.currentTime,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"duserblockfromdatetime\", date),\n    selected: props.selectedRecord && props.selectedRecord[\"duserblockfromdatetime\"] ? props.selectedRecord[\"duserblockfromdatetime\"] : new Date(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_HOLDDURATION\"\n    }),\n    name: \"suserholdduration\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_HOLDDURATION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"suserholdduration\"] : \"\",\n    isMandatory: true,\n    required: false,\n    maxLength: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PERIOD\"\n    }),\n    isSearchable: true,\n    name: \"nuserperiodcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.UsersPeriod,\n    value: props.selectedRecord[\"nuserperiodcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"nuserperiodcode\"],\n    onChange: event => props.onComboChange(event, \"nuserperiodcode\"),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTCATEGORY\"\n    }),\n    isSearchable: true,\n    name: \"ninstrumentcatcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true // isMandatory={props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA ? false :true}\n    ,\n    isClearable: false,\n    options: props.InstrumentCategory,\n    value: props.selectedRecord[\"ninstrumentcatcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"ninstrumentcatcode\"],\n    onChange: event => props.onComboChange(event, \"ninstrumentcatcode\"),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTID\"\n    }),\n    isSearchable: true,\n    name: \"ninstrumentcode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA ? false : true,\n    isClearable: false,\n    options: props.Instrument,\n    isDisabled: props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA,\n    value: props.selectedRecord[\"ninstrumentcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"ninstrumentcode\"],\n    onChange: event => props.onComboChange(event, \"ninstrumentcode\"),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dinstblockfromdatetime\",\n    label: props.intl.formatMessage({\n      id: \"IDS_STARTDATETIME\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord ? props.selectedRecord[\"dinstblockfromdatetime\"] : new Date(),\n    dateFormat: props.userInfo[\"ssitedatetime\"],\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_STARTTIME\"\n    }),\n    showTimeInput: true,\n    isClearable: false,\n    isMandatory: props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA ? false : true,\n    required: true,\n    isDisabled: props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA,\n    minDate: props.currentTime,\n    minTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dinstblockfromdatetime\", date),\n    value: props.selectedRecord ? props.selectedRecord[\"dinstblockfromdatetime\"] : new Date(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_HOLDDURATION\"\n    }),\n    name: \"sinstrumentholdduration\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_HOLDDURATION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sinstrumentholdduration\"] : \"\",\n    isMandatory: props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA ? false : true,\n    isDisabled: props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA,\n    required: false,\n    maxLength: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PERIOD\"\n    }),\n    isSearchable: true,\n    name: \"ninstrumentperiodcode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PERIOD\"\n    }),\n    isMandatory: props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA ? false : true,\n    isClearable: false,\n    isDisabled: props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA,\n    options: props.InstrumentPeriod,\n    value: props.selectedRecord[\"ninstrumentperiodcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"ninstrumentperiodcode\"],\n    onChange: event => props.onComboChange(event, \"ninstrumentperiodcode\"),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    name: \"scomments\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"scomments\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: \"255\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default injectIntl(AddJobAllocation);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/joballocation/AddJobAllocation.jsx"],"names":["React","Row","Col","FormSelectSearch","FormInput","FormTextarea","DateTimePicker","transactionStatus","injectIntl","AddJobAllocation","props","intl","formatMessage","id","Technique","selectedRecord","event","onComboChange","Users","userInfo","istimezoneshow","YES","ssitedatetime","currentTime","date","handleDateChange","Date","onInputOnChange","UsersPeriod","InstrumentCategory","ninstrumentcatcode","value","NA","Instrument","InstrumentPeriod"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nimport {injectIntl } from 'react-intl';\r\n\r\nconst AddJobAllocation = (props) => {\r\n    return (\r\n        <>        \r\n        <Row>\r\n            <Col md={6}>\r\n                <Row>\r\n                 <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_TECHNIQUE\" })}\r\n                            isSearchable={true}\r\n                            name={\"ntechniquecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={false}\r\n                            isClearable={true}\r\n                            options={props.Technique}\r\n                            value = { props.selectedRecord[\"ntechniquecode\"] || \"\" }\r\n                            defaultValue={props.selectedRecord[\"ntechniquecode\"]}\r\n                            onChange={(event)=>props.onComboChange(event, \"ntechniquecode\")}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                            isSearchable={true}\r\n                            name={\"nusercode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.Users}\r\n                            value = { props.selectedRecord[\"nusercode\"] || \"\" }\r\n                            defaultValue={props.selectedRecord[\"nusercode\"]}\r\n                            onChange={(event)=>props.onComboChange(event, \"nusercode\")}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col> \r\n                    \r\n                    <Col md={props.userInfo.istimezoneshow === transactionStatus.YES  ? 6 : 12}>\r\n                        <DateTimePicker\r\n                            name={\"duserblockfromdatetime\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_STARTDATETIME\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            dateFormat={props.userInfo ? props.userInfo.ssitedatetime || [] : []}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_STARTTIME\" })}\r\n                            showTimeInput={true}\r\n                            isClearable={false}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            minDate={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"duserblockfromdatetime\", date)}         \r\n                            selected={props.selectedRecord && props.selectedRecord[\"duserblockfromdatetime\"] ? props.selectedRecord[\"duserblockfromdatetime\"] : new Date()}\r\n\r\n\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                    <Col md={6}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_HOLDDURATION\" })}\r\n                            name={\"suserholdduration\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_HOLDDURATION\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"suserholdduration\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={false}\r\n                            maxLength={\"4\"}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PERIOD\" })}\r\n                            isSearchable={true}\r\n                            name={\"nuserperiodcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            options={props.UsersPeriod}\r\n                            value = { props.selectedRecord[\"nuserperiodcode\"] || \"\" }\r\n                            defaultValue={props.selectedRecord[\"nuserperiodcode\"]}\r\n                            onChange={(event)=>props.onComboChange(event, \"nuserperiodcode\")}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>                  \r\n                </Row>\r\n            </Col>\r\n            <Col md={6}>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORY\" })}\r\n                            isSearchable={true}\r\n                            name={\"ninstrumentcatcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                           // isMandatory={props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA ? false :true}\r\n                            isClearable={false}\r\n                            options={props.InstrumentCategory}\r\n                            value = { props.selectedRecord[\"ninstrumentcatcode\"] || \"\" }\r\n                            defaultValue={props.selectedRecord[\"ninstrumentcatcode\"]}\r\n                            onChange={(event)=>props.onComboChange(event, \"ninstrumentcatcode\")}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                            isSearchable={true}\r\n                            name={\"ninstrumentcode\"}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA ? false :true}\r\n                            isClearable={false}\r\n                            options={props.Instrument}\r\n                            isDisabled ={props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA}\r\n                            value = { props.selectedRecord[\"ninstrumentcode\"] || \"\" }\r\n                            defaultValue={props.selectedRecord[\"ninstrumentcode\"]}\r\n                            onChange={(event)=>props.onComboChange(event, \"ninstrumentcode\")}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n\r\n                    <Col md={props.userInfo.istimezoneshow === transactionStatus.YES  ? 6 : 12}>\r\n                        <DateTimePicker\r\n                            name={\"dinstblockfromdatetime\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_STARTDATETIME\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord ? props.selectedRecord[\"dinstblockfromdatetime\"] : new Date()}\r\n                            dateFormat={props.userInfo[\"ssitedatetime\"]}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_STARTTIME\" })}\r\n                            showTimeInput={true}\r\n                            isClearable={false}\r\n                            isMandatory={props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA? false :true}\r\n                            required={true}\r\n                            isDisabled ={props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA}\r\n                            minDate={props.currentTime}\r\n                            minTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dinstblockfromdatetime\", date)}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"dinstblockfromdatetime\"] : new Date()}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_HOLDDURATION\" })}\r\n                            name={\"sinstrumentholdduration\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_HOLDDURATION\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sinstrumentholdduration\"] : \"\"}\r\n                            isMandatory={props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA ? false :true}\r\n                            isDisabled ={props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA}\r\n                            required={false}\r\n                            maxLength={\"4\"}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PERIOD\" })}\r\n                            isSearchable={true}\r\n                            name={\"ninstrumentperiodcode\"}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_PERIOD\" })}\r\n                            isMandatory={props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA ? false :true}\r\n                            isClearable={false}\r\n                            isDisabled ={props.selectedRecord.ninstrumentcatcode && props.selectedRecord.ninstrumentcatcode.value===transactionStatus.NA}\r\n                            options={props.InstrumentPeriod}\r\n                            value = { props.selectedRecord[\"ninstrumentperiodcode\"] || \"\" }\r\n                            defaultValue={props.selectedRecord[\"ninstrumentperiodcode\"]}\r\n                            onChange={(event)=>props.onComboChange(event, \"ninstrumentperiodcode\")}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                    </Col>\r\n                </Row>\r\n            </Col>             \r\n        </Row>\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                    name={\"scomments\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"scomments\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                />\r\n            </Col>\r\n        </Row>\r\n\r\n            </>\r\n\r\n            \r\n    \r\n\r\n    );\r\n}\r\nexport default injectIntl(AddJobAllocation);"]},"metadata":{},"sourceType":"module"}