{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\quotation\\\\Quotation.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faPencilAlt, faThumbsUp, faPlus, faUserTimes } from '@fortawesome/free-solid-svg-icons';\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getQuotation, filterColumnData, getProjectTypeComboService, viewAttachment, addQuotation, getreloadQuotation, getQuotationAddTestService, getQuotationPricingEditService, GrossQuotation, getClientCategoryComboService, getQuotaionClientComboService, getProjectCodeComboService } from \"../../actions\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { transactionStatus } from \"../../components/Enumeration\";\nimport AddQuotation from \"../../pages/quotation/AddQuotation\";\nimport AddGrossQuotation from \"../../pages/quotation/AddGrossQuotation\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport Esign from \"../audittrail/Esign\";\nimport { showEsign, getControlMap, formatInputDate, onDropAttachFileList, rearrangeDateFormatDateOnly } from \"../../components/CommonScript\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport { process } from \"@progress/kendo-data-query\";\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\"; // import ProjectMasterFilter from './ProjectMasterFilter';\n\nimport { intl } from \"../../components/App\";\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport AddQuotationTest from \"./AddQuotationTest\";\nimport EditQuotationTestPricing from \"./EditQuotationTestPricing\";\nimport QuotationTab from './QuotationTab';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Quotation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let quotationData = [];\n      let inputParam = {};\n      quotationData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = {\n        inputListName: \"Quotation\",\n        selectedObject: \"SelectedQuotation\",\n        primaryKeyField: \"nquotationcode\"\n      };\n\n      if (this.props.Login.operation === \"update\" && this.props.Login.screenName === \"IDS_QUOTATION\") {\n        postParam[\"primaryKeyValue\"] = this.props.Login.masterData.SelectedQuotation.nquotationcode;\n        quotationData[\"quotation\"] = {\n          nquotationcode: this.props.Login.masterData.SelectedQuotation.nquotationcode,\n          nsitecode: this.props.Login.userInfo.nmastersitecode,\n          sprojecttitle: this.state.selectedRecord.sprojecttitle === undefined ? \"\" : this.state.selectedRecord.sprojecttitle,\n          sclientsiteaddress: this.state.selectedRecord.sclientsiteaddress === undefined ? \"\" : this.state.selectedRecord.sclientsiteaddress,\n          sinvoiceaddress: this.state.selectedRecord.sinvoiceaddress === undefined ? \"\" : this.state.selectedRecord.sinvoiceaddress,\n          sdescription: this.state.selectedRecord.sdescription === undefined ? \"\" : this.state.selectedRecord.sdescription,\n          ntransactionstatus: transactionStatus.DRAFT,\n          sdeviationremarks: this.state.selectedRecord.sdeviationremarks === undefined ? \"\" : this.state.selectedRecord.sdeviationremarks\n        };\n      } else if (this.props.Login.operation === \"create\" && this.props.Login.screenName === \"IDS_QUOTATION\") {\n        quotationData[\"quotation\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode,\n          sprojecttitle: this.state.selectedRecord.sprojecttitle === undefined ? \"\" : this.state.selectedRecord.sprojecttitle,\n          sclientsiteaddress: this.state.selectedRecord.sclientsiteaddress === undefined ? \"\" : this.state.selectedRecord.sclientsiteaddress,\n          sinvoiceaddress: this.state.selectedRecord.sinvoiceaddress === undefined ? \"\" : this.state.selectedRecord.sinvoiceaddress,\n          sdescription: this.state.selectedRecord.sdescription === undefined ? \"\" : this.state.selectedRecord.sdescription,\n          ntransactionstatus: transactionStatus.DRAFT,\n          sdeviationremarks: this.state.selectedRecord.sdeviationremarks === undefined ? \"\" : this.state.selectedRecord.sdeviationremarks\n        };\n      }\n\n      if ((this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") && this.props.Login.screenName === \"IDS_QUOTATION\") {\n        quotationData[\"quotation\"][\"nclientcatcode\"] = this.state.selectedRecord[\"nclientcatcode\"] ? this.state.selectedRecord[\"nclientcatcode\"].value : transactionStatus.NA;\n        quotationData[\"quotation\"][\"nclientcode\"] = this.state.selectedRecord[\"nclientcode\"] !== \"\" ? this.state.selectedRecord[\"nclientcode\"].value : transactionStatus.NA; // quotationData[\"quotation\"][\"nquotationtypecode\"] = this.state.selectedRecord[\"nquotationtypecode\"]!==\"\" ? this.state.selectedRecord[\"nquotationtypecode\"].value\n        //   : transactionStatus.NA;\n\n        quotationData[\"quotation\"][\"nquotationtypecode\"] = transactionStatus.ACTIVE;\n        quotationData[\"quotation\"][\"nprojecttypecode\"] = this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value : transactionStatus.NA;\n        quotationData[\"quotation\"][\"nprojectmastercode\"] = this.state.selectedRecord[\"nprojectmastercode\"] !== \"\" ? this.state.selectedRecord[\"nprojectmastercode\"].value : transactionStatus.NA;\n        /*  quotationData[\"quotation\"][\"nuserrolecode\"] = this.state.selectedRecord[\"nuserrolecode\"]!==\"\"  ? this.state.selectedRecord[\"nuserrolecode\"].value\r\n            : transactionStatus.NA;\r\n            quotationData[\"quotation\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"]!==\"\"  ? this.state.selectedRecord[\"nusercode\"].value\r\n            : transactionStatus.NA;  */\n\n        quotationData[\"quotation\"][\"nuserrolecode\"] = this.state.selectedRecord[\"nuserrolecode\"] !== \"\" ? this.state.selectedRecord[\"nuserrolecode\"] : transactionStatus.NA;\n        quotationData[\"quotation\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] !== \"\" ? this.state.selectedRecord[\"nusercode\"] : transactionStatus.NA;\n        quotationData[\"quotation\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"srfwdate\"], false);\n        quotationData[\"quotation\"][\"dquotationdate\"] = formatInputDate(this.state.selectedRecord[\"dquotationdate\"], false);\n        quotationData[\"quotation\"][\"ntzrfwdate\"] = quotationData.userinfo.ntimezonecode ? quotationData.userinfo.ntimezonecode : \"-1\";\n        quotationData[\"quotation\"][\"ntzquotationdate\"] = quotationData.userinfo.ntimezonecode ? quotationData.userinfo.ntimezonecode : \"-1\";\n      }\n\n      if (this.props.Login.operation === \"create\" && this.props.Login.screenName === \"IDS_TEST\") {\n        inputParam = this.onSaveQuotationTest(saveType, formRef);\n      }\n\n      if (this.props.Login.operation === \"update\" && (this.props.Login.screenName === \"IDS_PRICE\" || this.props.Login.screenName === \"IDS_CALCULATEPRICING\")) {\n        inputParam = this.onSaveQuotationTestPrice(saveType, formRef);\n      }\n\n      if (this.props.Login.operation === \"create\" && this.props.Login.screenName === \"IDS_CALCULATEPRICING\") {\n        inputParam = this.onSaveGrossQuotation(saveType, formRef);\n      }\n\n      if ((this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") && this.props.Login.screenName === \"IDS_QUOTATION\") {\n        inputParam = {\n          classUrl: \"quotation\",\n          methodUrl: \"Quotation\",\n          inputData: quotationData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n      }\n\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.onSaveQuotationTestPrice = (saveType, formRef) => {\n      const quotationtestPriceData = {\n        \"userinfo\": this.props.Login.userInfo,\n        \"QuotationTest\": this.props.Login.masterData.SelectedQuotation,\n        \"nquotationcode\": this.props.Login.masterData.SelectedQuotation.nquotationcode\n      };\n      let postParam = undefined;\n      let quotationDataState = undefined;\n      let selectedId = null;\n\n      if (this.props.Login.operation === \"update\") {\n        // edit\n        quotationDataState = this.state.quotationDataState;\n        selectedId = this.props.Login.selectedId;\n        postParam = {\n          inputListName: \"Quotation\",\n          selectedObject: \"SelectedQuotation\",\n          primaryKeyField: \"nquotationcode\"\n        };\n        quotationtestPriceData[\"QuotationTest\"] = JSON.parse(JSON.stringify(this.props.Login.selectedRecord));\n      } else {\n        //add               \n        let priceList = [];\n        this.state.selectedRecord[\"ntestcode\"] && this.state.selectedRecord[\"ntestcode\"].map(item => {\n          return priceList.push({\n            ntestcode: item.value\n          });\n        });\n        quotationtestPriceData[\"QuotationTest\"] = priceList;\n      }\n\n      if (quotationtestPriceData[\"QuotationTest\"].hasOwnProperty('esignpassword')) {\n        if (quotationtestPriceData[\"QuotationTest\"]['esignpassword'] === '') {\n          delete quotationtestPriceData[\"QuotationTest\"]['esigncomments'];\n          delete quotationtestPriceData[\"QuotationTest\"]['esignpassword'];\n          delete quotationtestPriceData[\"QuotationTest\"][\"agree\"];\n        }\n      } //console.log(\"update data:\", quotationtestPriceData);\n\n\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"QuotationTest\",\n        inputData: quotationtestPriceData,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        postParam,\n        searchRef: this.searchRef,\n        isClearSearch: this.props.Login.isClearSearch,\n        selectedId,\n        quotationDataState\n      };\n      return inputParam;\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.DeleteQuotation = (methodUrl, selectedQuotation, operation, ncontrolCode) => {\n      const postParam = {\n        inputListName: \"QuotationList\",\n        selectedObject: \"SelectedQuotation\",\n        primaryKeyField: \"nquotationcode\",\n        primaryKeyValue: selectedQuotation.nquotationcode,\n        fetchUrl: \"quotation/getQuotation\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl,\n        postParam,\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          quotation: selectedQuotation\n        },\n        operation,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_QUOTATION\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName, caseNo) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      switch (caseNo) {\n        case 1:\n          if (fieldName === \"nclientcatcode\") {\n            // const selectedRecord = this.state.selectedRecord || {};\n            if (selectedRecord.nclientcatcode) {\n              if (parseInt(comboData.value) !== parseInt(selectedRecord.nclientcatcode.value)) {\n                // selectedRecord.nusercode={};\n                delete selectedRecord.nclientcode;\n                delete selectedRecord.sclientsiteaddress;\n              }\n            }\n\n            selectedRecord[fieldName] = comboData;\n            selectedRecord[\"sclientcatname\"] = comboData.item[\"sclientcatname\"];\n            this.props.getClientCategoryComboService({\n              inputData: {\n                userinfo: this.props.Login.userInfo,\n                sdisplayname: selectedRecord.nclientcatcode.label,\n                primarykey: selectedRecord.nclientcatcode.value\n              }\n            }, selectedRecord);\n          }\n\n          if (fieldName === \"nclientcode\") {\n            // const selectedRecord = this.state.selectedRecord || {};\n            if (selectedRecord.nclientcode) {\n              if (parseInt(comboData.value) !== parseInt(selectedRecord.nclientcode.value)) {\n                // selectedRecord.nusercode={};\n                delete selectedRecord.sclientsiteaddress;\n              }\n            }\n\n            selectedRecord[fieldName] = comboData;\n            selectedRecord[\"sclientname\"] = comboData.item[\"sclientname\"];\n            this.props.getQuotaionClientComboService({\n              inputData: {\n                userinfo: this.props.Login.userInfo,\n                sdisplayname: selectedRecord.nclientcode.label,\n                primarykey: selectedRecord.nclientcode.value\n              }\n            }, selectedRecord);\n          }\n\n          break;\n\n        case 2:\n          const selectedRecordfilter = this.state.selectedRecordfilter || {};\n          selectedRecordfilter[fieldName] = comboData;\n          this.setState({\n            selectedRecordfilter\n          });\n          break;\n\n        case 3:\n          selectedRecord[fieldName] = comboData;\n\n          if (fieldName === \"ndiscountbandcode\") {\n            const VatAmount = this.state.selectedRecord.VatAmount === undefined ? 0.00 : this.state.selectedRecord.VatAmount;\n            selectedRecord[\"DiscountAmount\"] = this.props.Login.QuotationGrossAmount[0].ntotalgrossamount * (selectedRecord.ndiscountbandcode.item.namount / 100); //        selectedRecord[\"TotalNetAmount\"]=this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+(this.state.selectedRecord.DiscountAmount-VatAmount);\n\n            selectedRecord[\"TotalNetAmount\"] = this.props.Login.QuotationGrossAmount[0].ntotalgrossamount + VatAmount - this.state.selectedRecord.DiscountAmount;\n            selectedRecord[\"ndiscountpercentage\"] = selectedRecord.ndiscountbandcode.item.namount;\n          } else if (fieldName === \"nvatbandcode\") {\n            selectedRecord[\"VatAmount\"] = this.props.Login.QuotationGrossAmount[0].ntotalgrossamount * (selectedRecord.nvatbandcode.item.namount / 100); //        selectedRecord[\"TotalNetAmount\"]=this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+(selectedRecord.DiscountAmount-this.state.selectedRecord.VatAmount);\n\n            selectedRecord[\"TotalNetAmount\"] = this.props.Login.QuotationGrossAmount[0].ntotalgrossamount + this.state.selectedRecord.VatAmount - selectedRecord.DiscountAmount;\n            selectedRecord[\"nvatpercentage\"] = selectedRecord.nvatbandcode.item.namount;\n          }\n\n          this.setState({\n            selectedRecord\n          });\n          break;\n\n        case 4:\n          if (fieldName === \"nprojecttypecode\") {\n            if (selectedRecord.nprojecttypecode) {\n              if (parseInt(comboData.value) !== parseInt(selectedRecord.nprojecttypecode.value)) {\n                delete selectedRecord.nprojectmastercode;\n                delete selectedRecord.sprojecttitle;\n                delete selectedRecord.srfwdate;\n                delete selectedRecord.suserrolename;\n                delete selectedRecord.susername;\n              }\n            }\n\n            selectedRecord[fieldName] = comboData;\n            selectedRecord[\"sprojecttypename\"] = comboData.item[\"sprojecttypename\"];\n            this.props.getProjectTypeComboService({\n              inputData: {\n                userinfo: this.props.Login.userInfo,\n                sdisplayname: selectedRecord.nprojecttypecode.label,\n                primarykey: selectedRecord.nprojecttypecode.value\n              }\n            }, selectedRecord);\n          }\n\n          if (fieldName === \"nprojectmastercode\") {\n            if (selectedRecord.nprojectmastercode) {\n              if (parseInt(comboData.value) !== parseInt(selectedRecord.nprojectmastercode.value)) {\n                delete selectedRecord.sprojecttitle;\n                delete selectedRecord.srfwdate;\n                delete selectedRecord.suserrolename;\n                delete selectedRecord.susername;\n              }\n            }\n\n            selectedRecord[fieldName] = comboData;\n            selectedRecord[\"sprojectcode\"] = comboData.item[\"sprojectcode\"];\n            this.props.getProjectCodeComboService({\n              inputData: {\n                userinfo: this.props.Login.userInfo,\n                sdisplayname: selectedRecord.nprojectmastercode.label,\n                primarykey: selectedRecord.nprojectmastercode.value\n              }\n            }, selectedRecord);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.onInputOnChange = (event, primaryFieldKey) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        if (primaryFieldKey && (event.target.name === \"ncost\" || event.target.name === \"nnoofsamples\" || event.target.name === \"ntotalamount\")) {\n          const index = selectedRecord.findIndex(item => item.nquotationtestcode === primaryFieldKey);\n\n          if (/^-?\\d*?\\.?\\d*?$/.test(event.target.value)) {\n            selectedRecord[index][event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onnetAmountEvent = nquotationtestcode => {\n      let selectedRecord = this.state.selectedRecord;\n      let selectedRecordindex = selectedRecord.findIndex(item => item.nquotationtestcode === nquotationtestcode ? item : \"\");\n      let str = selectedRecord[selectedRecordindex];\n      let count = str.ncost * str.nnoofsamples;\n      selectedRecord[selectedRecordindex] = { ...str,\n        ntotalamount: count\n      };\n      this.setState(selectedRecord);\n    };\n\n    this.approveQuotation = (methodUrl, selectedQuotation, operation, ncontrolCode) => {\n      if (selectedQuotation.ntransactionstatus === transactionStatus.DRAFT) {\n        const postParam = {\n          inputListName: \"Quotation\",\n          selectedObject: \"SelectedQuotation\",\n          primaryKeyField: \"nquotationcode\",\n          primaryKeyValue: selectedQuotation.nquotationcode,\n          fetchUrl: \"quotation/getQuotation\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl,\n          postParam,\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo,\n            \"quotation\": selectedQuotation\n          },\n          operation,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"IDS_QUOTATION\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (selectedQuotation.ntransactionstatus === transactionStatus.APPROVED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_ALREADYAPPROVED\"\n        }));\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTVERSION\"\n        }));\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropTestFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.state.data, event.dataState),\n        quotationDataState: event.dataState\n      });\n    };\n\n    this.ConfirmDelete = (selectedQuotation, operation, deleteId, screenName) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteQuotation(screenName, selectedQuotation, operation, deleteId));\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\"; //    if (Object.values(this.props.Login.masterData.SelectedQuotation).length && this.props.Login.masterData.SelectedQuotation !== undefined) {\n\n      if (this.props.Login.masterData.SelectedQuotation !== undefined) {\n        let inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          classUrl: \"quotation\",\n          methodUrl: \"Quotation\"\n        };\n        this.props.getreloadQuotation(inputParam);\n      } // else {\n      //   toast.warn(\n      //     this.props.intl.formatMessage({\n      //       id: \"IDS_PROJECTTYPENOTAVAILABLE\",\n      //     })\n      //   );\n      // }\n\n    };\n\n    this.DeleteQuotationTest = deleteParam => {\n      const postParam = {\n        inputListName: \"QuotationList\",\n        selectedObject: \"SelectedQuotation\",\n        primaryKeyField: \"nquotationcode\",\n        primaryKeyValue: deleteParam.selectedRecord.nquotationtestcode,\n        fetchUrl: \"quotation/getQuotationTest\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        classUrl: \"quotation\",\n        methodUrl: \"QuotationPrice\",\n        postParam,\n        inputData: {\n          \"QuotationTestPrice\": deleteParam.selectedRecord,\n          //.dataItem,\n          //      \"npriceversioncode\":this.props.Login.masterData.SelectedTestPriceVersion.npriceversioncode,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        operation: \"delete\" //  priceDataState:this.state.priceDataState\n\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_TESTPRICE\"\n            }),\n            operation: deleteParam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.state.selectedRecord; //    let selectedRecord = this.state.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = '';\n          selectedRecord['esigncomments'] = '';\n          selectedRecord['esignreason'] = '';\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    const _quotationDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      selectedRecord: {},\n      error: \"\",\n      userRoleControlRights: [],\n      selectedQuotation: undefined,\n      controlMap: new Map(),\n      Instrument: [],\n      quotationDataState: _quotationDataState\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"squotationno\", \"sclientcatname\", \"sclientname\", \"sclientsiteaddress\", \"sinvoiceaddress\", \"sprojecttypename\", \"sprojectcode\", \"sprojecttitle\", \"srfwdate\", \"suserrolename\", \"susername\", \"squotationdate\", \"sdescription\", \"sdeviationremarks\"];\n    this.confirmMessage = new ConfirmMessage();\n    this.extractedColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestname\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_TESTDESCRIPTION\",\n      \"dataField\": \"stestdescription\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_TESTCOST\",\n      \"dataField\": \"ncost\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_NUMBEROFSAMPLES\",\n      \"dataField\": \"nnoofsamples\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_TOTALAMOUNT\",\n      \"dataField\": \"ntotalamount\",\n      \"width\": \"200px\"\n    }];\n  }\n\n  onSaveQuotationTest(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.Login.userInfo; // inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\n    //  inputData[\"Quotation\"] = {};\n\n    let testArray = [];\n    testArray = this.state.selectedRecord.ntestcode.map(item => {\n      let QuotationData = {};\n      QuotationData[\"ntestcode\"] = item.value;\n      QuotationData[\"nquotationcode\"] = this.props.Login.masterData.SelectedQuotation.nquotationcode;\n      return QuotationData;\n    });\n    inputData['QuotationTest'] = testArray;\n    const inputParam = {\n      classUrl: \"quotation\",\n      methodUrl: \"QuotationTest\",\n      inputData: inputData,\n      operation: this.props.Login.operation,\n      saveType,\n      formRef,\n      searchRef: this.searchRef,\n      isClearSearch: this.props.Login.isClearSearch\n    };\n    return inputParam;\n  }\n\n  onSaveGrossQuotation(saveType, formRef) {\n    let quotationData = {};\n    quotationData[\"userinfo\"] = this.props.Login.userInfo;\n    quotationData[\"GrossQuotation\"] = {\n      nquotationcode: this.props.Login.masterData.SelectedQuotation.nquotationcode,\n      nsitecode: this.props.Login.userInfo.nmastersitecode,\n      ndiscountamount: this.state.selectedRecord.DiscountAmount,\n      nvatamount: this.state.selectedRecord.VatAmount,\n      ntotalnetamount: this.state.selectedRecord.TotalNetAmount,\n      ntotalgrossamount: this.props.Login.QuotationGrossAmount[0].ntotalgrossamount\n    };\n    quotationData[\"GrossQuotation\"][\"ndiscountbandcode\"] = this.state.selectedRecord[\"ndiscountbandcode\"] ? this.state.selectedRecord[\"ndiscountbandcode\"].value : transactionStatus.NA;\n    quotationData[\"GrossQuotation\"][\"nvatbandcode\"] = this.state.selectedRecord[\"nvatbandcode\"] ? this.state.selectedRecord[\"nvatbandcode\"].value : transactionStatus.NA;\n    const inputParam = {\n      classUrl: \"quotation\",\n      methodUrl: \"GrossQuotation\",\n      inputData: quotationData,\n      operation: this.props.Login.operation,\n      saveType,\n      formRef\n    };\n    return inputParam;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n        toast.warn(props.Login.masterStatus);\n        props.Login.masterStatus = \"\";\n      }\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let versionStatusCSS = \"outline-secondary\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.SelectedQuotation && this.props.Login.masterData.SelectedQuotation.ntransactionstatus === transactionStatus.APPROVED) {\n      versionStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.SelectedQuotation && this.props.Login.masterData.SelectedQuotation.ntransactionstatus === transactionStatus.DRAFT) {\n      activeIconCSS = \"\";\n    }\n\n    if (this.props.Login.openModal) {\n      this.mandatoryFields = this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord, this.props.Login.operation);\n    }\n\n    const {\n      userInfo\n    } = this.props.Login;\n    const addId = this.state.controlMap.has(\"AddQuotation\") && this.state.controlMap.get(\"AddQuotation\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditQuotation\") && this.state.controlMap.get(\"EditQuotation\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteQuotation\") && this.state.controlMap.get(\"DeleteQuotation\").ncontrolcode;\n    const approveId = this.state.controlMap.has(\"ApproveQuotation\") && this.state.controlMap.get(\"ApproveQuotation\").ncontrolcode;\n    const addQuotationTestId = this.state.controlMap.has(\"AddQuotationTest\") && this.state.controlMap.get(\"AddQuotationTest\").ncontrolcode;\n    const updateQuotationTestId = this.state.controlMap.has(\"EditQuotationTest\") && this.state.controlMap.get(\"EditQuotationTest\").ncontrolcode;\n    const grossQuotationeId = this.state.controlMap.has(\"CalculatePricing\") && this.state.controlMap.get(\"CalculatePricing\").ncontrolcode;\n    const editTestPriceParam = {\n      screenName: \"IDS_PRICE\",\n      \"operation\": \"update\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: updateQuotationTestId\n    };\n    const selectedQuotation = this.props.Login.masterData.SelectedQuotation;\n    const filterParam = {\n      inputListName: \"Quotation\",\n      selectedObject: \"SelectedQuotation\",\n      primaryKeyField: \"nquotationcode\",\n      fetchUrl: \"quotation/getQuotation\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_QUOTATION\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Quotation,\n      getMasterDetail: quotationData => this.props.getQuotation(quotationData, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: selectedQuotation,\n      primaryKeyField: \"nquotationcode\",\n      mainField: \"squotationno\",\n      firstField: \"sclientname\",\n      secondField: \"sversionstatus\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData //     openModal={() => this.props.addQuotation(\"create\", selectedQuotation, userInfo, addId, this.state.ProjectMasterList)}\n      ,\n      openModal: () => this.props.addQuotation(\"create\", userInfo, addId, selectedQuotation),\n      isMultiSelecct: false,\n      hidePaging: false,\n      isClearSearch: this.props.Login.isClearSearch,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: false,\n      showFilter: this.props.Login.showFilter\n      /*         filterComponent={[\r\n                 {\r\n                   \"IDS_PROJECTMASTERFILTER\":\r\n                     <ProjectMasterFilter\r\n                       filterProjectType={this.state.ProjectMasterList || []}\r\n                       nfilterProjectType={this.props.Login.masterData.SelectedProjectType || {}}\r\n                       onComboChange={this.onComboChange}\r\n                       selectedRecord={this.state.selectedRecordfilter || {}}\r\n                     />\r\n                 }\r\n               ]} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 13\n      }\n    }, selectedQuotation ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 23\n      }\n    }, selectedQuotation.sclientcatname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${versionStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: activeIconCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 31\n      }\n    }), selectedQuotation.sversionstatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      name: \"edittestname\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.addQuotation(\"update\", userInfo, editId, selectedQuotation),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      name: \"deletetestname\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(selectedQuotation, \"delete\", deleteId, \"Quotation\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"CalculatePricing\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(grossQuotationeId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_CALCULATEPRICING\"\n      }),\n      onClick: () => this.props.GrossQuotation(\"create\", userInfo, grossQuotationeId, selectedQuotation),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUserTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"approveQuotation\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.approveQuotation(\"Quotation\", selectedQuotation, \"approve\", approveId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 31\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_CLIENTCATEGORY\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 29\n      }\n    }, selectedQuotation.sclientcatname))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_CLIENT\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 29\n      }\n    }, selectedQuotation.sclientname))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_CLIENTADDRESS\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 29\n      }\n    }, selectedQuotation.sclientsiteaddress))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_INVOICEADDRESS\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 29\n      }\n    }, selectedQuotation.sinvoiceaddress))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_PROJECTTYPE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 29\n      }\n    }, selectedQuotation.sprojecttypename))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_PROJECTCODE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 29\n      }\n    }, selectedQuotation.sprojectcode, \" \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_PROJECTTITLE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 29\n      }\n    }, selectedQuotation.sprojecttitle, \" \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_RFWDATE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 29\n      }\n    }, rearrangeDateFormatDateOnly(this.props.Login.userInfo, selectedQuotation.srfwdate), \" \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ROLE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 29\n      }\n    }, selectedQuotation.suserrolename))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_USER\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 29\n      }\n    }, selectedQuotation.susername))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_QUOTATIONDATE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 29\n      }\n    }, rearrangeDateFormatDateOnly(this.props.Login.userInfo, selectedQuotation.squotationdate), \" \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 29\n      }\n    }, selectedQuotation.sdescription))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_DEVIATIONREMARKS\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 29\n      }\n    }, selectedQuotation.sdeviationremarks)))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"horizontal-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-end \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TOTALGROSSAMOUNT\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 29\n      }\n    }, selectedQuotation.ntotalgrossamount)))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 31\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_DISCOUNTNAME\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 31\n      }\n    }, selectedQuotation.sdiscountbandname))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 31\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_DISCOUNTPERCENTAGE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 31\n      }\n    }, selectedQuotation.ndiscountpercentage))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 31\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_DISCOUNTAMOUNT\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 31\n      }\n    }, selectedQuotation.ndiscountamount, \" \")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 31\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_VATNAME\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 31\n      }\n    }, selectedQuotation.svatbandname))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 31\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_VATPERCENTAGE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 31\n      }\n    }, selectedQuotation.nvatpercentage))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 31\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_VATAMOUNT\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 31\n      }\n    }, selectedQuotation.nvatamount, \" \")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 31\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 31\n      }\n    }, selectedQuotation.ntotalnetamount)))), /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addPrice\",\n      className: \"add-txt-btn\",\n      hidden: this.state.userRoleControlRights.indexOf(addQuotationTestId) === -1,\n      onClick: () => this.props.getQuotationAddTestService(\"IDS_TEST\", \"create\", this.props.Login.masterData, this.props.Login.userInfo, addQuotationTestId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 45\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TEST\",\n      defaultMessage: \"Test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 43\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"updatePrice\",\n      className: \"add-txt-btn\",\n      hidden: this.state.userRoleControlRights.indexOf(updateQuotationTestId) === -1,\n      onClick: () => this.props.getQuotationPricingEditService({ ...editTestPriceParam,\n        \"updateType\": \"All\",\n        quotationDataState: undefined\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 43\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PRICE\",\n      defaultMessage: \"Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 43\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nquotationtestcode\",\n      data: this.props.Login.masterData.QuotationTest,\n      dataResult: this.props.Login.masterData.QuotationTest,\n      dataState: this.state.quotationDataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: this.extractedColumnList,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      fetchRecord: this.props.getQuotationPricingEditService,\n      editParam: { ...editTestPriceParam,\n        \"updateType\": \"Single\",\n        quotationDataState: this.state.quotationDataState\n      },\n      deleteRecord: this.DeleteQuotationTest,\n      deleteParam: {\n        operation: \"delete\"\n      },\n      methodUrl: \"QuotationTest\",\n      addRecord: () => this.openModal(addId),\n      pageable: true,\n      scrollable: 'scrollable',\n      isActionRequired: true,\n      isToolBarRequired: false,\n      selectedId: this.props.Login.selectedId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 39\n      }\n    }))))))) : \"\"))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      size: this.props.Login.modalScreenSize === true ? \"xl\" : \"lg\",\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.mandatoryFields || [],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 13\n        }\n      }) : this.props.Login.screenName === \"IDS_QUOTATION\" ? /*#__PURE__*/React.createElement(AddQuotation, {\n        userInfo: this.props.Login.userInfo,\n        selectedRecord: this.state.selectedRecord || {} // selectedclientcode={this.state.selectedRecord.nclientcode || {}}\n        ,\n        sclientsiteaddress: this.props.Login.sclientsiteaddress,\n        SelectedClient: this.props.Login.SelectedClient,\n        ClientCategory: this.props.Login.ClientCategory,\n        Client: this.props.Login.Client,\n        ProjectCode: this.props.Login.ProjectCode,\n        ProjectType: this.props.Login.ProjectType,\n        ProjectMaster: this.props.Login.ProjectMaster,\n        QuotationType: this.props.Login.QuotationType,\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange //     onNumericInputChange={this.onNumericInputChange}\n        ,\n        handleDateChange: this.handleDateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 16\n        }\n      }) : this.props.Login.screenName === \"IDS_TEST\" ? /*#__PURE__*/React.createElement(AddQuotationTest, {\n        QuotationTestList: this.props.Login.QuotationTestList,\n        selectedRecord: this.state.selectedRecord || {},\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 18\n        }\n      }) : this.props.Login.screenName === \"IDS_PRICE\" ? /*#__PURE__*/React.createElement(EditQuotationTestPricing, {\n        onnetAmountEvent: this.onnetAmountEvent,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 18\n        }\n      }) : /*#__PURE__*/React.createElement(AddGrossQuotation, {\n        DiscountBand: this.props.Login.DiscountBand,\n        VATBand: this.props.Login.VATBand,\n        selectedRecord: this.props.Login.selectedRecord || {} // QuotationTest={this.props.Login.QuotationTest}\n        ,\n        onComboChange: this.onComboChange,\n        onInputOnChange: this.onInputOnChange //      DiscountAmount={this.state.selectedRecord.DiscountAmount === undefined ? 0.00 :this.state.selectedRecord.DiscountAmount }\n        ,\n        DiscountAmount: this.state.selectedRecord.DiscountAmount !== undefined ? this.state.selectedRecord.DiscountAmount : this.props.Login.QuotationGrossAmount[0].ndiscountamount //        VatAmount={this.state.selectedRecord.VatAmount === undefined ? 0.00 : this.state.selectedRecord.VatAmount}\n        ,\n        VatAmount: this.state.selectedRecord.VatAmount !== undefined ? this.state.selectedRecord.VatAmount : this.props.Login.QuotationGrossAmount[0].nvatamount,\n        QuotationGrossAmount: this.props.Login.QuotationGrossAmount === undefined ? 0.00 : this.props.Login.QuotationGrossAmount,\n        TotalNetAmount: this.state.selectedRecord.TotalNetAmount !== undefined ? this.state.selectedRecord.TotalNetAmount : this.props.Login.QuotationGrossAmount[0].ntotalgrossamount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  findMandatoryFields(screenName, selectedRecord, operation) {\n    let mandatoryFields = [];\n\n    if (screenName === \"IDS_QUOTATION\") {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_CLIENTCATEGORY\",\n        \"dataField\": \"nclientcatcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_CLIENT\",\n        \"dataField\": \"nclientcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_CLIENTADDRESS\",\n        \"dataField\": \"sclientsiteaddress\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_INVOICEADDRESS\",\n        \"dataField\": \"sinvoiceaddress\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"selectbox\"\n      }, //      { \"idsName\": \"IDS_QUOTATIONTYPE\", \"dataField\": \"nquotationtypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\n      {\n        \"idsName\": \"IDS_PROJECTTYPE\",\n        \"dataField\": \"nprojecttypecode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_PROJECTCODE\",\n        \"dataField\": \"nprojectmastercode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_PROJECTTITLE\",\n        \"dataField\": \"sprojecttitle\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_RFWDATE\",\n        \"dataField\": \"srfwdate\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_ROLE\",\n        \"dataField\": \"suserrolename\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_USER\",\n        \"dataField\": \"susername\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_QUOTATIONDATE\",\n        \"dataField\": \"dquotationdate\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }]; // mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\n\n      return mandatoryFields;\n    } else {\n      return [];\n    }\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      selectedRecord,\n      userRoleControlRights,\n      controlMap,\n      filterData\n    } = this.state;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      this.setState({\n        selectedRecord\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        controlMap,\n        userRoleControlRights\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      this.setState({\n        selectedRecord\n      });\n      this.setState({\n        filterData\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  filterColumnData,\n  updateStore,\n  validateEsignCredential,\n  getQuotation,\n  getProjectTypeComboService,\n  viewAttachment,\n  addQuotation,\n  getreloadQuotation,\n  getQuotationAddTestService,\n  getQuotationPricingEditService,\n  GrossQuotation,\n  getClientCategoryComboService,\n  getQuotaionClientComboService,\n  getProjectCodeComboService\n})(injectIntl(Quotation));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/Quotation.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","connect","toast","FontAwesomeIcon","faTrashAlt","faPencilAlt","faThumbsUp","faPlus","faUserTimes","injectIntl","FormattedMessage","callService","crudMaster","validateEsignCredential","updateStore","getQuotation","filterColumnData","getProjectTypeComboService","viewAttachment","addQuotation","getreloadQuotation","getQuotationAddTestService","getQuotationPricingEditService","GrossQuotation","getClientCategoryComboService","getQuotaionClientComboService","getProjectCodeComboService","ListMaster","transactionStatus","AddQuotation","AddGrossQuotation","DEFAULT_RETURN","SlideOutModal","Esign","showEsign","getControlMap","formatInputDate","onDropAttachFileList","rearrangeDateFormatDateOnly","ReadOnlyText","ContentPanel","process","ConfirmMessage","intl","DataGrid","AddQuotationTest","EditQuotationTestPricing","QuotationTab","mapStateToProps","state","Login","Quotation","constructor","props","handleDateChange","dateName","dateValue","selectedRecord","setState","onInputOnChange","event","optional","target","type","name","checked","value","onSaveClick","saveType","formRef","quotationData","inputParam","userInfo","postParam","inputListName","selectedObject","primaryKeyField","operation","screenName","masterData","SelectedQuotation","nquotationcode","nsitecode","nmastersitecode","sprojecttitle","undefined","sclientsiteaddress","sinvoiceaddress","sdescription","ntransactionstatus","DRAFT","sdeviationremarks","NA","ACTIVE","userinfo","ntimezonecode","onSaveQuotationTest","onSaveQuotationTestPrice","onSaveGrossQuotation","classUrl","methodUrl","inputData","searchRef","isClearSearch","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","quotationtestPriceData","quotationDataState","selectedId","JSON","parse","stringify","priceList","map","item","push","ntestcode","hasOwnProperty","onNumericInputOnChange","validateEsign","sreason","password","DeleteQuotation","selectedQuotation","primaryKeyValue","fetchUrl","fecthInputObject","quotation","openModal","onComboChange","comboData","fieldName","caseNo","nclientcatcode","parseInt","nclientcode","sdisplayname","label","primarykey","selectedRecordfilter","VatAmount","QuotationGrossAmount","ntotalgrossamount","ndiscountbandcode","namount","DiscountAmount","nvatbandcode","nprojecttypecode","nprojectmastercode","srfwdate","suserrolename","susername","primaryFieldKey","DEACTIVE","YES","NO","index","findIndex","nquotationtestcode","test","onnetAmountEvent","selectedRecordindex","str","count","ncost","nnoofsamples","ntotalamount","approveQuotation","APPROVED","warn","formatMessage","id","onTabChange","tabProps","onDropTestFile","attachedFiles","maxSize","actionType","dataStateChange","dataResult","dataState","ConfirmDelete","deleteId","confirmMessage","confirm","reloadData","current","DeleteQuotationTest","deleteParam","closeModal","openFilter","showFilter","closeFilter","skip","take","settings","error","controlMap","Map","Instrument","createRef","searchFieldList","extractedColumnList","testArray","QuotationData","ndiscountamount","nvatamount","ntotalnetamount","TotalNetAmount","getDerivedStateFromProps","masterStatus","errorCode","render","versionStatusCSS","activeIconCSS","mandatoryFields","findMandatoryFields","addId","has","get","ncontrolcode","editId","approveId","addQuotationTestId","updateQuotationTestId","grossQuotationeId","editTestPriceParam","filterParam","searchedData","onFilterSubmit","sclientcatname","sversionstatus","indexOf","sclientname","sprojecttypename","sprojectcode","squotationdate","sdiscountbandname","ndiscountpercentage","svatbandname","nvatpercentage","QuotationTest","modalScreenSize","SelectedClient","ClientCategory","Client","ProjectCode","ProjectType","ProjectMaster","QuotationType","QuotationTestList","DiscountBand","VATBand","componentDidUpdate","previousProps","filterData","Object","values"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPencilAlt, faThumbsUp,faPlus,faUserTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { injectIntl,FormattedMessage } from \"react-intl\";\r\nimport {\r\n  callService, crudMaster, validateEsignCredential, updateStore, getQuotation, filterColumnData,getProjectTypeComboService,\r\n  viewAttachment, addQuotation, getreloadQuotation, getQuotationAddTestService, getQuotationPricingEditService, GrossQuotation,\r\n  getClientCategoryComboService,getQuotaionClientComboService,getProjectCodeComboService \r\n} from \"../../actions\";\r\n\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { transactionStatus } from \"../../components/Enumeration\";\r\nimport AddQuotation from \"../../pages/quotation/AddQuotation\";\r\nimport AddGrossQuotation from \"../../pages/quotation/AddGrossQuotation\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\n\r\nimport Esign from \"../audittrail/Esign\";\r\nimport { showEsign, getControlMap, formatInputDate, onDropAttachFileList, rearrangeDateFormatDateOnly }\r\n  from \"../../components/CommonScript\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\n// import ProjectMasterFilter from './ProjectMasterFilter';\r\nimport { intl } from \"../../components/App\";\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport AddQuotationTest from \"./AddQuotationTest\";\r\nimport EditQuotationTestPricing from \"./EditQuotationTestPricing\";\r\nimport QuotationTab from './QuotationTab';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass Quotation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const quotationDataState = {\r\n      skip: 0,\r\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n  };    this.state = {\r\n      selectedRecord: {},\r\n      error: \"\",\r\n      userRoleControlRights: [],\r\n      selectedQuotation: undefined,\r\n      controlMap: new Map(),\r\n      Instrument: [],\r\n      quotationDataState: quotationDataState,\r\n\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.searchFieldList = [\"squotationno\",\"sclientcatname\", \"sclientname\", \"sclientsiteaddress\", \"sinvoiceaddress\", \"sprojecttypename\",\"sprojectcode\", \"sprojecttitle\", \"srfwdate\",\"suserrolename\", \"susername\", \"squotationdate\", \"sdescription\",\"sdeviationremarks\"]\r\n    this.confirmMessage = new ConfirmMessage();\r\n\r\n    this.extractedColumnList = [\r\n\r\n      { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_TESTDESCRIPTION\", \"dataField\": \"stestdescription\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_TESTCOST\", \"dataField\": \"ncost\", \"width\": \"100px\" },\r\n      { \"idsName\": \"IDS_NUMBEROFSAMPLES\", \"dataField\": \"nnoofsamples\", \"width\": \"100px\" },\r\n      { \"idsName\": \"IDS_TOTALAMOUNT\", \"dataField\": \"ntotalamount\", \"width\": \"200px\" }\r\n\r\n\r\n  ]\r\n  }\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n\r\n\r\n  onInputOnChange = (event, optional) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n    } else if (event.target.type === 'radio') {\r\n      selectedRecord[event.target.name] = optional;\r\n    } else {\r\n      selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n\r\n    let quotationData = [];\r\n    let inputParam = {};\r\n    quotationData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n    let postParam = {\r\n      inputListName: \"Quotation\",\r\n      selectedObject: \"SelectedQuotation\",\r\n      primaryKeyField: \"nquotationcode\",\r\n    };\r\n\r\n    if ((this.props.Login.operation === \"update\") && (this.props.Login.screenName === \"IDS_QUOTATION\")) {\r\n\r\n      postParam[\"primaryKeyValue\"] =\r\n        this.props.Login.masterData.SelectedQuotation.nquotationcode;\r\n\r\n      quotationData[\"quotation\"] = {\r\n        nquotationcode: this.props.Login.masterData.SelectedQuotation.nquotationcode,\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n        sprojecttitle: this.state.selectedRecord.sprojecttitle === undefined ? \"\" : this.state.selectedRecord.sprojecttitle, \r\n        sclientsiteaddress: this.state.selectedRecord.sclientsiteaddress === undefined ? \"\" : this.state.selectedRecord.sclientsiteaddress, \r\n        sinvoiceaddress: this.state.selectedRecord.sinvoiceaddress === undefined ? \"\" : this.state.selectedRecord.sinvoiceaddress, \r\n        sdescription: this.state.selectedRecord.sdescription === undefined ? \"\" : this.state.selectedRecord.sdescription, \r\n        ntransactionstatus: transactionStatus.DRAFT,\r\n        sdeviationremarks: this.state.selectedRecord.sdeviationremarks === undefined ? \"\" : this.state.selectedRecord.sdeviationremarks,\r\n\r\n      };\r\n\r\n    } else if ((this.props.Login.operation === \"create\") && (this.props.Login.screenName === \"IDS_QUOTATION\")) {\r\n\r\n      quotationData[\"quotation\"] = {  \r\n\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n        sprojecttitle: this.state.selectedRecord.sprojecttitle === undefined ? \"\" : this.state.selectedRecord.sprojecttitle, \r\n        sclientsiteaddress: this.state.selectedRecord.sclientsiteaddress === undefined ? \"\" : this.state.selectedRecord.sclientsiteaddress, \r\n        sinvoiceaddress: this.state.selectedRecord.sinvoiceaddress === undefined ? \"\" : this.state.selectedRecord.sinvoiceaddress, \r\n        sdescription: this.state.selectedRecord.sdescription === undefined ? \"\" : this.state.selectedRecord.sdescription, \r\n        ntransactionstatus: transactionStatus.DRAFT,\r\n        sdeviationremarks: this.state.selectedRecord.sdeviationremarks === undefined ? \"\" : this.state.selectedRecord.sdeviationremarks,\r\n      };\r\n\r\n     \r\n    }\r\n\r\n    if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_QUOTATION\")) {\r\n\r\n      quotationData[\"quotation\"][\"nclientcatcode\"] = this.state.selectedRecord[\"nclientcatcode\"] ? this.state.selectedRecord[\"nclientcatcode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      quotationData[\"quotation\"][\"nclientcode\"] = this.state.selectedRecord[\"nclientcode\"]!==\"\" ? this.state.selectedRecord[\"nclientcode\"].value\r\n        : transactionStatus.NA;\r\n\r\n    // quotationData[\"quotation\"][\"nquotationtypecode\"] = this.state.selectedRecord[\"nquotationtypecode\"]!==\"\" ? this.state.selectedRecord[\"nquotationtypecode\"].value\r\n    //   : transactionStatus.NA;\r\n\r\n      quotationData[\"quotation\"][\"nquotationtypecode\"] = transactionStatus.ACTIVE;\r\n      quotationData[\"quotation\"][\"nprojecttypecode\"] = this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      quotationData[\"quotation\"][\"nprojectmastercode\"] = this.state.selectedRecord[\"nprojectmastercode\"]!==\"\"  ? this.state.selectedRecord[\"nprojectmastercode\"].value\r\n        : transactionStatus.NA;\r\n\r\n    /*  quotationData[\"quotation\"][\"nuserrolecode\"] = this.state.selectedRecord[\"nuserrolecode\"]!==\"\"  ? this.state.selectedRecord[\"nuserrolecode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      quotationData[\"quotation\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"]!==\"\"  ? this.state.selectedRecord[\"nusercode\"].value\r\n        : transactionStatus.NA;  */\r\n\r\n      quotationData[\"quotation\"][\"nuserrolecode\"] = this.state.selectedRecord[\"nuserrolecode\"]!==\"\" ? this.state.selectedRecord[\"nuserrolecode\"]\r\n         : transactionStatus.NA;\r\n        \r\n      quotationData[\"quotation\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"]!==\"\" ? this.state.selectedRecord[\"nusercode\"]\r\n        : transactionStatus.NA;\r\n\r\n\r\n      quotationData[\"quotation\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"srfwdate\"], false);\r\n      quotationData[\"quotation\"][\"dquotationdate\"] = formatInputDate(this.state.selectedRecord[\"dquotationdate\"], false);\r\n      quotationData[\"quotation\"][\"ntzrfwdate\"] =  quotationData.userinfo.ntimezonecode ? quotationData.userinfo.ntimezonecode : \"-1\";\r\n      quotationData[\"quotation\"][\"ntzquotationdate\"] =  quotationData.userinfo.ntimezonecode ? quotationData.userinfo.ntimezonecode : \"-1\";\r\n\r\n      \r\n    }\r\n\r\nif ((this.props.Login.operation  === \"create\") && (this.props.Login.screenName === \"IDS_TEST\")) {\r\n          \r\n      inputParam = this.onSaveQuotationTest(saveType, formRef);\r\n  }\r\n\r\nif ((this.props.Login.operation  === \"update\") && ((this.props.Login.screenName === \"IDS_PRICE\") || (this.props.Login.screenName === \"IDS_CALCULATEPRICING\")) ) {\r\n          \r\n    inputParam = this.onSaveQuotationTestPrice(saveType, formRef);\r\n}\r\n\r\nif ((this.props.Login.operation  === \"create\") && (this.props.Login.screenName === \"IDS_CALCULATEPRICING\")) {\r\n          \r\n  inputParam = this.onSaveGrossQuotation(saveType, formRef);\r\n}\r\n    \r\n    if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_QUOTATION\")) {\r\n\r\n      inputParam = {\r\n        classUrl: \"quotation\",\r\n        methodUrl: \"Quotation\",\r\n        inputData: quotationData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n        isClearSearch: this.props.Login.isClearSearch,\r\n      };\r\n    } \r\n    \r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          saveType,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n\r\n  };\r\n\r\n  onSaveQuotationTest(saveType, formRef) {\r\n    let inputData = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    // inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\r\n  //  inputData[\"Quotation\"] = {};\r\n\r\n\r\n    let testArray = []\r\n    testArray = this.state.selectedRecord.ntestcode.map(item => {\r\n        let QuotationData = {}\r\n\r\n        QuotationData[\"ntestcode\"] = item.value\r\n        QuotationData[\"nquotationcode\"] = this.props.Login.masterData.SelectedQuotation.nquotationcode;\r\n\r\n\r\n        return QuotationData;\r\n    });\r\n    inputData['QuotationTest'] = testArray;\r\n\r\n    const inputParam = {\r\n        classUrl: \"quotation\",\r\n        methodUrl: \"QuotationTest\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation, saveType, formRef,\r\n        searchRef: this.searchRef,\r\n        isClearSearch: this.props.Login.isClearSearch\r\n    }\r\n    return inputParam;\r\n}\r\n\r\nonSaveQuotationTestPrice = (saveType, formRef) => {\r\n\r\n  const quotationtestPriceData = {\"userinfo\": this.props.Login.userInfo,\r\n                           \"QuotationTest\":this.props.Login.masterData.SelectedQuotation,\r\n                           \"nquotationcode\":this.props.Login.masterData.SelectedQuotation.nquotationcode};\r\n\r\n   let postParam = undefined;\r\n   let quotationDataState = undefined;\r\n   let selectedId = null;\r\n   \r\n   if (this.props.Login.operation === \"update\") {\r\n       // edit\r\n       quotationDataState = this.state.quotationDataState;\r\n       selectedId = this.props.Login.selectedId; \r\n       postParam = { inputListName: \"Quotation\", selectedObject: \"SelectedQuotation\", primaryKeyField: \"nquotationcode\" };\r\n       quotationtestPriceData[\"QuotationTest\"] = JSON.parse(JSON.stringify(this.props.Login.selectedRecord));           \r\n   }\r\n   else {\r\n       //add               \r\n                                          \r\n       let priceList = [];\r\n       this.state.selectedRecord[\"ntestcode\"] &&\r\n           this.state.selectedRecord[\"ntestcode\"].map(item => {\r\n               return priceList.push({\r\n                  ntestcode: item.value                      \r\n               })\r\n           })\r\n      \r\n       quotationtestPriceData[\"QuotationTest\"] = priceList;                             \r\n\r\n   }\r\n   if (quotationtestPriceData[\"QuotationTest\"].hasOwnProperty('esignpassword')) {\r\n       if (quotationtestPriceData[\"QuotationTest\"]['esignpassword'] === '') {\r\n           delete quotationtestPriceData[\"QuotationTest\"]['esigncomments']\r\n           delete quotationtestPriceData[\"QuotationTest\"]['esignpassword']\r\n           delete quotationtestPriceData[\"QuotationTest\"][\"agree\"]\r\n       }\r\n   }\r\n  //console.log(\"update data:\", quotationtestPriceData);\r\n   const inputParam = {\r\n       classUrl: this.props.Login.inputParam.classUrl,\r\n       methodUrl: \"QuotationTest\",\r\n       inputData: quotationtestPriceData,\r\n       operation: this.props.Login.operation,\r\n       saveType, formRef, postParam, searchRef: this.searchRef,\r\n       isClearSearch: this.props.Login.isClearSearch,\r\n       selectedId, quotationDataState\r\n   }\r\n   \r\n   return inputParam;\r\n}\r\n\r\n\r\nonSaveGrossQuotation(saveType, formRef) {\r\n\r\n  let quotationData = {};\r\n  quotationData[\"userinfo\"] = this.props.Login.userInfo;\r\n \r\n\r\n\r\n  quotationData[\"GrossQuotation\"] = {  \r\n\r\n    nquotationcode: this.props.Login.masterData.SelectedQuotation.nquotationcode,\r\n    nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n    ndiscountamount:this.state.selectedRecord.DiscountAmount,\r\n    nvatamount:this.state.selectedRecord.VatAmount,\r\n    ntotalnetamount:this.state.selectedRecord.TotalNetAmount,\r\n    ntotalgrossamount : this.props.Login.QuotationGrossAmount[0].ntotalgrossamount\r\n   \r\n    \r\n  };\r\n\r\n  quotationData[\"GrossQuotation\"][\"ndiscountbandcode\"] = this.state.selectedRecord[\"ndiscountbandcode\"] ? this.state.selectedRecord[\"ndiscountbandcode\"].value\r\n  : transactionStatus.NA;\r\n\r\n  quotationData[\"GrossQuotation\"][\"nvatbandcode\"] = this.state.selectedRecord[\"nvatbandcode\"] ? this.state.selectedRecord[\"nvatbandcode\"].value\r\n  : transactionStatus.NA;\r\n\r\n  const inputParam = {\r\n      classUrl: \"quotation\",\r\n      methodUrl: \"GrossQuotation\",\r\n      inputData: quotationData,\r\n      operation: this.props.Login.operation, saveType, formRef\r\n  }\r\n  return inputParam;\r\n}\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.Login.masterStatus !== \"\") {\r\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n        toast.warn(props.Login.masterStatus);\r\n        props.Login.masterStatus = \"\";\r\n      }\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n    this.props.validateEsignCredential(inputParam, \"openModal\");\r\n\r\n  };\r\n\r\n\r\n\r\n  DeleteQuotation = (methodUrl, selectedQuotation, operation, ncontrolCode) => {\r\n    const postParam = {\r\n      inputListName: \"QuotationList\",\r\n      selectedObject: \"SelectedQuotation\",\r\n      primaryKeyField: \"nquotationcode\",\r\n      primaryKeyValue: selectedQuotation.nquotationcode,\r\n      fetchUrl: \"quotation/getQuotation\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n    };\r\n\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl,\r\n      postParam,\r\n      inputData: {\r\n        userinfo: this.props.Login.userInfo,\r\n        quotation: selectedQuotation,\r\n      },\r\n      operation,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openModal: true,\r\n          screenName: \"IDS_QUOTATION\",\r\n          operation,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n\r\n\r\n    let versionStatusCSS = \"outline-secondary\";\r\n    let activeIconCSS = \"fa fa-check\"\r\n\r\n\r\n    if (this.props.Login.masterData.SelectedQuotation && this.props.Login.masterData.SelectedQuotation.ntransactionstatus === transactionStatus.APPROVED) {\r\n      versionStatusCSS = \"outline-success\";\r\n    }\r\n    else if (this.props.Login.masterData.SelectedQuotation && this.props.Login.masterData.SelectedQuotation.ntransactionstatus === transactionStatus.DRAFT) {\r\n      activeIconCSS = \"\";\r\n\r\n    }\r\n\r\n    if (this.props.Login.openModal) {\r\n      this.mandatoryFields = this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord, this.props.Login.operation)\r\n    }\r\n\r\n\r\n    const { userInfo } = this.props.Login;\r\n    const addId = this.state.controlMap.has(\"AddQuotation\") && this.state.controlMap.get(\"AddQuotation\").ncontrolcode;\r\n    const editId = this.state.controlMap.has(\"EditQuotation\") && this.state.controlMap.get(\"EditQuotation\").ncontrolcode;\r\n    const deleteId = this.state.controlMap.has(\"DeleteQuotation\") && this.state.controlMap.get(\"DeleteQuotation\").ncontrolcode;\r\n    const approveId = this.state.controlMap.has(\"ApproveQuotation\") && this.state.controlMap.get(\"ApproveQuotation\").ncontrolcode;\r\n    \r\n    const addQuotationTestId = this.state.controlMap.has(\"AddQuotationTest\") && this.state.controlMap.get(\"AddQuotationTest\").ncontrolcode;\r\n    const updateQuotationTestId = this.state.controlMap.has(\"EditQuotationTest\") && this.state.controlMap.get(\"EditQuotationTest\").ncontrolcode;\r\n    const grossQuotationeId = this.state.controlMap.has(\"CalculatePricing\") && this.state.controlMap.get(\"CalculatePricing\").ncontrolcode;\r\n\r\n\r\n\r\n    const editTestPriceParam = {screenName:\"IDS_PRICE\", \"operation\":\"update\", \r\n    masterData:this.props.Login.masterData, userInfo: this.props.Login.userInfo, \r\n    ncontrolCode:updateQuotationTestId};\r\n\r\n  const selectedQuotation = this.props.Login.masterData.SelectedQuotation;\r\n\r\n    const filterParam = {\r\n      inputListName: \"Quotation\",\r\n      selectedObject: \"SelectedQuotation\",\r\n      primaryKeyField: \"nquotationcode\",\r\n      fetchUrl: \"quotation/getQuotation\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n          \r\n          <Row noGutters={true}>\r\n            <Col md={4}>\r\n              <ListMaster\r\n                screenName={this.props.intl.formatMessage({ id: \"IDS_QUOTATION\" })}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Quotation}\r\n                getMasterDetail={(quotationData) => this.props.getQuotation(quotationData, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                selectedMaster={selectedQuotation}\r\n                primaryKeyField=\"nquotationcode\"\r\n                mainField=\"squotationno\"\r\n                firstField=\"sclientname\"\r\n                secondField=\"sversionstatus\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                addId={addId}\r\n                searchRef={this.searchRef}\r\n                reloadData={this.reloadData}\r\n                //     openModal={() => this.props.addQuotation(\"create\", selectedQuotation, userInfo, addId, this.state.ProjectMasterList)}\r\n                openModal={() => this.props.addQuotation(\"create\", userInfo, addId, selectedQuotation)}\r\n                isMultiSelecct={false}\r\n                hidePaging={false}\r\n                isClearSearch={this.props.Login.isClearSearch}\r\n\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}    \r\n                showFilterIcon={false}\r\n                showFilter={this.props.Login.showFilter}\r\n       /*         filterComponent={[\r\n                  {\r\n                    \"IDS_PROJECTMASTERFILTER\":\r\n                      <ProjectMasterFilter\r\n                        filterProjectType={this.state.ProjectMasterList || []}\r\n                        nfilterProjectType={this.props.Login.masterData.SelectedProjectType || {}}\r\n                        onComboChange={this.onComboChange}\r\n                        selectedRecord={this.state.selectedRecordfilter || {}}\r\n                      />\r\n                  }\r\n                ]} */\r\n\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              {selectedQuotation ?\r\n                <ContentPanel className=\"panel-main-content\">\r\n                  <Card className=\"border-0\">\r\n                    <Card.Header>\r\n                      {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                      <Card.Title className=\"product-title-main\">\r\n                        {selectedQuotation.sclientcatname}\r\n                      </Card.Title>\r\n                      <Card.Subtitle>\r\n                        <div className=\"d-flex product-category\">\r\n                          <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                            <span className={`btn btn-outlined ${versionStatusCSS} btn-sm ml-3`}>\r\n                              <i class={activeIconCSS}></i>\r\n                              {selectedQuotation.sversionstatus}\r\n\r\n                            </span>\r\n                          </h2>\r\n                          {/* </Col>\r\n                             <Col md=\"4\"> */}\r\n                          {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                          <div className=\"d-inline\">\r\n                            {/* Don't delete these commented lines because additional info feature is needed for Agaram LIMS */}\r\n                            {/* Start Here */}\r\n                            {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\" >  \r\n                                                            <FontAwesomeIcon icon={faEye} className=\"ActionIconColor\" onClick={(e)=>this.viewAdditionalInfo(e)} />\r\n                                                        </Nav.Link> */}\r\n                            {/* End Here */}\r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" name=\"edittestname\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.props.addQuotation(\"update\",userInfo, editId, selectedQuotation )}>\r\n                              <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </Nav.Link>\r\n                            \r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"deletetestname\"\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                              //   data-for=\"tooltip_list_wrap\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                              onClick={() => this.ConfirmDelete(selectedQuotation, \"delete\", deleteId, \"Quotation\")}\r\n                            >\r\n                              <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                            </Nav.Link>\r\n                           \r\n                            <Nav.Link name=\"CalculatePricing\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(grossQuotationeId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_CALCULATEPRICING\" })}\r\n                              onClick={() => this.props.GrossQuotation(\"create\", userInfo, grossQuotationeId, selectedQuotation)}>\r\n                              <FontAwesomeIcon icon={faUserTimes} />\r\n                            </Nav.Link>\r\n\r\n                            <Nav.Link name=\"approveQuotation\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.approveQuotation(\"Quotation\", selectedQuotation, \"approve\", approveId)}>\r\n                              <FontAwesomeIcon icon={faThumbsUp} />\r\n                            </Nav.Link>\r\n\r\n                          </div>\r\n                          {/* </Tooltip> */}\r\n                        </div>\r\n                        {/* </Col>\r\n                                            </Row> */}\r\n                      </Card.Subtitle>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"form-static-wrap\">\r\n                      <Row>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_CLIENTCATEGORY\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.sclientcatname}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_CLIENT\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.sclientname}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_CLIENTADDRESS\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.sclientsiteaddress}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_INVOICEADDRESS\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.sinvoiceaddress}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.sprojecttypename}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.sprojectcode} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTTITLE\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.sprojecttitle} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_RFWDATE\" })}</FormLabel>\r\n                            {/* <ReadOnlyText>{selectedQuotation.srfwdate}</ReadOnlyText> */}\r\n                            <ReadOnlyText>{rearrangeDateFormatDateOnly(this.props.Login.userInfo,selectedQuotation.srfwdate)} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_ROLE\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.suserrolename}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col> \r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_USER\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.susername}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col> \r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_QUOTATIONDATE\" })}</FormLabel>\r\n                            {/* <ReadOnlyText>{selectedQuotation.squotationdate}</ReadOnlyText> */}\r\n                            <ReadOnlyText>{rearrangeDateFormatDateOnly(this.props.Login.userInfo,selectedQuotation.squotationdate)} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.sdescription}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DEVIATIONREMARKS\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.sdeviationremarks}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                      </Row>\r\n                      \r\n                      <Col md={12}>\r\n                        <div className=\"horizontal-line\"></div>\r\n                      </Col>\r\n                      <Row className='justify-content-end '>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_TOTALGROSSAMOUNT\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedQuotation.ntotalgrossamount}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                         <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DISCOUNTNAME\" })}</FormLabel>\r\n                              <ReadOnlyText>{selectedQuotation.sdiscountbandname}</ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DISCOUNTPERCENTAGE\" })}</FormLabel>\r\n                              <ReadOnlyText>{selectedQuotation.ndiscountpercentage}</ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DISCOUNTAMOUNT\" })}</FormLabel>\r\n                              <ReadOnlyText>{selectedQuotation.ndiscountamount} </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                      </Row>\r\n                      <Row>\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_VATNAME\" })}</FormLabel>\r\n                              <ReadOnlyText>{selectedQuotation.svatbandname}</ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_VATPERCENTAGE\" })}</FormLabel>\r\n                              <ReadOnlyText>{selectedQuotation.nvatpercentage}</ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_VATAMOUNT\" })}</FormLabel>\r\n                              <ReadOnlyText>{selectedQuotation.nvatamount} </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                      </Row>\r\n                      <Row className='justify-content-end'>\r\n                          <Col md=\"4\">\r\n                            <FormGroup>\r\n                              <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}</FormLabel>\r\n                              <ReadOnlyText>{selectedQuotation.ntotalnetamount}</ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                      </Row>\r\n                      <Card className=\"at-tabs border-0\">\r\n                              <Row noGutters>\r\n                                  <Col md={12}>\r\n                                      <div className=\"d-flex justify-content-end\">\r\n                                      <Nav.Link name=\"addPrice\" className=\"add-txt-btn\" \r\n                                              hidden={this.state.userRoleControlRights.indexOf(addQuotationTestId) === -1}\r\n                                              onClick={()=>this.props.getQuotationAddTestService(\"IDS_TEST\", \"create\", this.props.Login.masterData, this.props.Login.userInfo, addQuotationTestId)}\r\n                                              >\r\n                                            <FontAwesomeIcon icon={faPlus} /> { } \r\n                                          <FormattedMessage id='IDS_TEST' defaultMessage='Test' />\r\n                                      </Nav.Link>\r\n                                      <Nav.Link name=\"updatePrice\" className=\"add-txt-btn\" \r\n                                              hidden={this.state.userRoleControlRights.indexOf(updateQuotationTestId) === -1}\r\n                                              onClick={()=>this.props.getQuotationPricingEditService({...editTestPriceParam, \"updateType\":\"All\", quotationDataState:undefined})}\r\n                                              >\r\n                                          <FontAwesomeIcon icon={faPencilAlt} /> { }\r\n                                          <FormattedMessage id='IDS_PRICE' defaultMessage='Price' />\r\n                                      </Nav.Link>\r\n                                      </div>\r\n                                  </Col>\r\n                              </Row>\r\n                              <Row noGutters>\r\n                                  <Col md={12}>\r\n                                      <DataGrid\r\n                                          primaryKeyField={\"nquotationtestcode\"}\r\n                                          data={this.props.Login.masterData.QuotationTest}\r\n                                          dataResult={this.props.Login.masterData.QuotationTest}\r\n                                         \r\n                                          dataState={this.state.quotationDataState}\r\n                                          dataStateChange={this.dataStateChange}\r\n                                          extractedColumnList={this.extractedColumnList}\r\n                                          controlMap={this.state.controlMap}\r\n                                          userRoleControlRights={this.state.userRoleControlRights}\r\n                                          inputParam={this.props.Login.inputParam}\r\n                                          userInfo={this.props.Login.userInfo}\r\n                                          fetchRecord={this.props.getQuotationPricingEditService}\r\n                                          editParam={{...editTestPriceParam, \"updateType\":\"Single\", quotationDataState:this.state.quotationDataState}}\r\n                                          \r\n                                          deleteRecord={this.DeleteQuotationTest}\r\n                                          deleteParam={{operation:\"delete\"}}\r\n                                          methodUrl={\"QuotationTest\"}\r\n                                          addRecord = {() => this.openModal(addId)}\r\n                                          pageable={true}\r\n                                          scrollable={'scrollable'}\r\n                                          isActionRequired={true}\r\n                                          isToolBarRequired={false}\r\n                                          selectedId={this.props.Login.selectedId}\r\n                                      />\r\n                                  </Col>\r\n                              </Row>\r\n                      </Card>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </ContentPanel>\r\n                : \"\"\r\n              }\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n        </div>\r\n        {/* End of get display */}\r\n\r\n        {/* Start of Modal Sideout for Test Creation */}\r\n        {this.props.Login.openModal &&\r\n           <SlideOutModal\r\n           show={this.props.Login.openModal}\r\n           size={this.props.Login.modalScreenSize===true ? \"xl\" : \"lg\" }\r\n           closeModal={this.closeModal}\r\n           operation={this.props.Login.operation}\r\n           inputParam={this.props.Login.inputParam}\r\n           screenName={this.props.Login.screenName}\r\n           onSaveClick={this.onSaveClick}\r\n           esign={this.props.Login.loadEsign}\r\n           validateEsign={this.validateEsign}\r\n           selectedRecord={this.state.selectedRecord || {}}\r\n           mandatoryFields={this.mandatoryFields || []}\r\n           addComponent={this.props.Login.loadEsign ?\r\n            <Esign\r\n               operation={this.props.Login.operation}\r\n               onInputOnChange={this.onInputOnChange}\r\n               inputParam={this.props.Login.inputParam}\r\n               selectedRecord={this.state.selectedRecord || {}}\r\n             />\r\n             : (this.props.Login.screenName === \"IDS_QUOTATION\") ?\r\n\r\n               <AddQuotation\r\n\r\n                userInfo={this.props.Login.userInfo}\r\n                selectedRecord={this.state.selectedRecord || {}}\r\n                // selectedclientcode={this.state.selectedRecord.nclientcode || {}}\r\n                sclientsiteaddress={this.props.Login.sclientsiteaddress}\r\n                SelectedClient={this.props.Login.SelectedClient}\r\n                ClientCategory={this.props.Login.ClientCategory}\r\n                Client={this.props.Login.Client}\r\n                ProjectCode={this.props.Login.ProjectCode}\r\n                ProjectType={this.props.Login.ProjectType}\r\n                ProjectMaster={this.props.Login.ProjectMaster}\r\n                QuotationType={this.props.Login.QuotationType}\r\n                onInputOnChange={this.onInputOnChange}\r\n                onComboChange={this.onComboChange}\r\n         //     onNumericInputChange={this.onNumericInputChange}\r\n                 handleDateChange={this.handleDateChange}\r\n               /> :\r\n\r\n               this.props.Login.screenName === \"IDS_TEST\" ?\r\n\r\n                 <AddQuotationTest\r\n\r\n                 QuotationTestList={this.props.Login.QuotationTestList}\r\n                 selectedRecord={this.state.selectedRecord || {}}\r\n                 onComboChange={this.onComboChange}\r\n\r\n                 /> : \r\n                 \r\n                 this.props.Login.screenName === \"IDS_PRICE\" ?\r\n\r\n                 <EditQuotationTestPricing\r\n                 onnetAmountEvent={this.onnetAmountEvent}\r\n                 selectedRecord={this.state.selectedRecord || {}}\r\n                 onInputOnChange={this.onInputOnChange}\r\n                 />\r\n                :  \r\n\r\n                <AddGrossQuotation\r\n\r\n                  DiscountBand={this.props.Login.DiscountBand}\r\n                  VATBand={this.props.Login.VATBand} \r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  // QuotationTest={this.props.Login.QuotationTest}\r\n                  onComboChange={this.onComboChange}\r\n                  onInputOnChange={this.onInputOnChange}\r\n          //      DiscountAmount={this.state.selectedRecord.DiscountAmount === undefined ? 0.00 :this.state.selectedRecord.DiscountAmount }\r\n                  DiscountAmount={this.state.selectedRecord.DiscountAmount !== undefined ? this.state.selectedRecord.DiscountAmount:this.props.Login.QuotationGrossAmount[0].ndiscountamount}\r\n\r\n        //        VatAmount={this.state.selectedRecord.VatAmount === undefined ? 0.00 : this.state.selectedRecord.VatAmount}\r\n                  VatAmount={this.state.selectedRecord.VatAmount !== undefined ? this.state.selectedRecord.VatAmount:this.props.Login.QuotationGrossAmount[0].nvatamount}\r\n\r\n                  QuotationGrossAmount={this.props.Login.QuotationGrossAmount === undefined ? 0.00 : this.props.Login.QuotationGrossAmount} \r\n                  TotalNetAmount={this.state.selectedRecord.TotalNetAmount !== undefined ? this.state.selectedRecord.TotalNetAmount:this.props.Login.QuotationGrossAmount[0].ntotalgrossamount}\r\n                /> \r\n\r\n           }\r\n         />\r\n        }\r\n        {/* End of Modal Sideout for Test Creation */}\r\n      </>\r\n    );\r\n  }\r\n\r\n  findMandatoryFields(screenName, selectedRecord, operation) {\r\n    let mandatoryFields = [];\r\n    if (screenName === \"IDS_QUOTATION\") {\r\n\r\n      mandatoryFields = [\r\n        { \"idsName\": \"IDS_CLIENTCATEGORY\", \"dataField\": \"nclientcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_CLIENT\", \"dataField\": \"nclientcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_CLIENTADDRESS\", \"dataField\": \"sclientsiteaddress\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_INVOICEADDRESS\", \"dataField\": \"sinvoiceaddress\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n//      { \"idsName\": \"IDS_QUOTATIONTYPE\", \"dataField\": \"nquotationtypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"nprojecttypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_PROJECTCODE\", \"dataField\": \"nprojectmastercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_PROJECTTITLE\", \"dataField\": \"sprojecttitle\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_RFWDATE\", \"dataField\": \"srfwdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_ROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_USER\", \"dataField\": \"susername\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_QUOTATIONDATE\", \"dataField\": \"dquotationdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n        \r\n      ]\r\n\r\n      // mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\r\n      return mandatoryFields;\r\n\r\n    } \r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  onComboChange = (comboData, fieldName, caseNo) => {\r\n\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    switch (caseNo) {\r\n      case 1:\r\n\r\n      if(fieldName===\"nclientcatcode\"){\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        if (selectedRecord.nclientcatcode) {\r\n          if (parseInt(comboData.value) !== parseInt(selectedRecord.nclientcatcode.value)) {\r\n            // selectedRecord.nusercode={};\r\n            delete (selectedRecord.nclientcode);\r\n            delete (selectedRecord.sclientsiteaddress);\r\n          }\r\n        }\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord[\"sclientcatname\"] = comboData.item[\"sclientcatname\"];\r\n        this.props.getClientCategoryComboService({\r\n\r\n          inputData: {\r\n            userinfo: this.props.Login.userInfo,\r\n            sdisplayname: selectedRecord.nclientcatcode.label,\r\n            primarykey: selectedRecord.nclientcatcode.value,\r\n          }\r\n\r\n        }, selectedRecord);\r\n      }\r\n\r\n      if(fieldName===\"nclientcode\"){\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        if (selectedRecord.nclientcode) {\r\n          if (parseInt(comboData.value) !== parseInt(selectedRecord.nclientcode.value)) {\r\n            // selectedRecord.nusercode={};\r\n            delete (selectedRecord.sclientsiteaddress);\r\n            \r\n          }\r\n        }\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord[\"sclientname\"] = comboData.item[\"sclientname\"];\r\n        this.props.getQuotaionClientComboService({\r\n\r\n          inputData: {\r\n            userinfo: this.props.Login.userInfo,\r\n            sdisplayname: selectedRecord.nclientcode.label,\r\n            primarykey: selectedRecord.nclientcode.value,\r\n          }\r\n\r\n        }, selectedRecord);\r\n      }\r\n\r\n        break;\r\n\r\n      case 2:\r\n        const selectedRecordfilter = this.state.selectedRecordfilter || {};\r\n        selectedRecordfilter[fieldName] = comboData;\r\n        this.setState({ selectedRecordfilter });\r\n        break;\r\n\r\n      case 3:\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        if(fieldName===\"ndiscountbandcode\"){\r\n\r\n          const VatAmount=(this.state.selectedRecord.VatAmount === undefined ? 0.00 : this.state.selectedRecord.VatAmount)\r\n          selectedRecord[\"DiscountAmount\"]=this.props.Login.QuotationGrossAmount[0].ntotalgrossamount * (selectedRecord.ndiscountbandcode.item.namount/100);\r\n//        selectedRecord[\"TotalNetAmount\"]=this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+(this.state.selectedRecord.DiscountAmount-VatAmount);\r\n          selectedRecord[\"TotalNetAmount\"]=(this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+VatAmount)-this.state.selectedRecord.DiscountAmount;\r\n          selectedRecord[\"ndiscountpercentage\"]= selectedRecord.ndiscountbandcode.item.namount;\r\n\r\n\r\n          }else if(fieldName===\"nvatbandcode\"){\r\n\r\n            selectedRecord[\"VatAmount\"]=this.props.Login.QuotationGrossAmount[0].ntotalgrossamount * (selectedRecord.nvatbandcode.item.namount/100);\r\n  //        selectedRecord[\"TotalNetAmount\"]=this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+(selectedRecord.DiscountAmount-this.state.selectedRecord.VatAmount);\r\n            selectedRecord[\"TotalNetAmount\"]=(this.props.Login.QuotationGrossAmount[0].ntotalgrossamount+this.state.selectedRecord.VatAmount)-selectedRecord.DiscountAmount;\r\n            selectedRecord[\"nvatpercentage\"] = selectedRecord.nvatbandcode.item.namount; \r\n\r\n          }\r\n\r\n        \r\n        this.setState({ selectedRecord });\r\n        break;\r\n\r\n        case 4:\r\n         \r\n          if(fieldName===\"nprojecttypecode\"){\r\n            if (selectedRecord.nprojecttypecode) {\r\n              if (parseInt(comboData.value) !== parseInt(selectedRecord.nprojecttypecode.value)) {\r\n                delete (selectedRecord.nprojectmastercode);\r\n                delete (selectedRecord.sprojecttitle);\r\n                delete (selectedRecord.srfwdate);\r\n                delete (selectedRecord.suserrolename);\r\n                delete (selectedRecord.susername);\r\n              }\r\n            }\r\n    \r\n            selectedRecord[fieldName] = comboData;\r\n            selectedRecord[\"sprojecttypename\"] = comboData.item[\"sprojecttypename\"];\r\n            this.props.getProjectTypeComboService({\r\n    \r\n              inputData: {\r\n                userinfo: this.props.Login.userInfo,\r\n                sdisplayname: selectedRecord.nprojecttypecode.label,\r\n                primarykey: selectedRecord.nprojecttypecode.value,\r\n              }\r\n    \r\n            }, selectedRecord);\r\n          }\r\n\r\n          if(fieldName===\"nprojectmastercode\"){\r\n            if (selectedRecord.nprojectmastercode) {\r\n              if (parseInt(comboData.value) !== parseInt(selectedRecord.nprojectmastercode.value)) {\r\n                delete (selectedRecord.sprojecttitle);\r\n                delete (selectedRecord.srfwdate);\r\n                delete (selectedRecord.suserrolename);\r\n                delete (selectedRecord.susername);\r\n              }\r\n            }\r\n    \r\n            selectedRecord[fieldName] = comboData;\r\n            selectedRecord[\"sprojectcode\"] = comboData.item[\"sprojectcode\"];\r\n            this.props.getProjectCodeComboService({\r\n    \r\n              inputData: {\r\n                userinfo: this.props.Login.userInfo,\r\n                sdisplayname: selectedRecord.nprojectmastercode.label,\r\n                primarykey: selectedRecord.nprojectmastercode.value,\r\n              }\r\n    \r\n            }, selectedRecord);\r\n          }\r\n\r\n          break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  onInputOnChange = (event, primaryFieldKey) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    if (event.target.type === 'checkbox') {\r\n        if (event.target.name === \"ntransactionstatus\")\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n        else\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n\r\n    }\r\n    else {   \r\n        if(primaryFieldKey && (event.target.name === \"ncost\" || event.target.name === \"nnoofsamples\" || event.target.name === \"ntotalamount\")){\r\n            const index = selectedRecord.findIndex(item=>item.nquotationtestcode === primaryFieldKey);\r\n            if (/^-?\\d*?\\.?\\d*?$/.test(event.target.value)){\r\n                selectedRecord[index][event.target.name] = event.target.value;\r\n            }\r\n        }\r\n        else{      \r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }           \r\n    }\r\n    this.setState({ selectedRecord });\r\n}\r\n\r\nonnetAmountEvent = (nquotationtestcode) => {\r\n\r\n  let selectedRecord=this.state.selectedRecord;\r\n  let selectedRecordindex=selectedRecord.findIndex((item) => (item.nquotationtestcode === nquotationtestcode ? item : \"\"));\r\n  let str=selectedRecord[selectedRecordindex];\r\n  let count= str.ncost * str.nnoofsamples;\r\n  selectedRecord[selectedRecordindex]={...str,ntotalamount:count}\r\n  this.setState(selectedRecord);\r\n\r\n  \r\n} \r\n\r\n\r\n  approveQuotation = (methodUrl, selectedQuotation, operation, ncontrolCode) => {\r\n    if (selectedQuotation.ntransactionstatus === transactionStatus.DRAFT) {\r\n\r\n      const postParam = {\r\n        inputListName: \"Quotation\",\r\n        selectedObject: \"SelectedQuotation\",\r\n        primaryKeyField: \"nquotationcode\",\r\n        primaryKeyValue: selectedQuotation.nquotationcode,\r\n        fetchUrl: \"quotation/getQuotation\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      };\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl, postParam,\r\n        inputData: {\r\n          \"userinfo\": this.props.Login.userInfo, \r\n          \"quotation\": selectedQuotation\r\n        },\r\n        operation,\r\n        isClearSearch: this.props.Login.isClearSearch\r\n      }\r\n\r\n      const masterData = this.props.Login.masterData;\r\n\r\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true, screenData: { inputParam, masterData },\r\n            openModal: true, screenName: \"IDS_QUOTATION\", operation\r\n          }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n      }\r\n      else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }else if(selectedQuotation.ntransactionstatus === transactionStatus.APPROVED){\r\n\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYAPPROVED\" }));\r\n\r\n    }else {\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }));\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  onTabChange = (tabProps) => {\r\n    const screenName = tabProps.screenName;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { screenName },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onDropTestFile = (attachedFiles, fieldName, maxSize) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(\r\n      selectedRecord[fieldName],\r\n      attachedFiles,\r\n      maxSize\r\n    );\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  };\r\n  /*\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(\r\n        this.props.Login.masterData[\"selectedSection\"],\r\n        event.dataState\r\n      ),\r\n      sectionDataState: event.dataState,\r\n    });\r\n  };\r\n*/\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(this.state.data, event.dataState),\r\n      quotationDataState: event.dataState\r\n    });\r\n  }\r\n\r\n\r\n  ConfirmDelete = (selectedQuotation, operation, deleteId, screenName) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.DeleteQuotation(\r\n          screenName,\r\n          selectedQuotation,\r\n          operation,\r\n          deleteId\r\n\r\n        )\r\n    );\r\n  };\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n//    if (Object.values(this.props.Login.masterData.SelectedQuotation).length && this.props.Login.masterData.SelectedQuotation !== undefined) {\r\n      if (this.props.Login.masterData.SelectedQuotation !== undefined) {\r\n      let inputParam = {\r\n        inputData: {\r\n     \r\n          userinfo: this.props.Login.userInfo,\r\n          \r\n        },\r\n        classUrl: \"quotation\",\r\n        methodUrl: \"Quotation\",\r\n      };\r\n\r\n      this.props.getreloadQuotation(inputParam);\r\n\r\n    } \r\n    // else {\r\n    //   toast.warn(\r\n    //     this.props.intl.formatMessage({\r\n    //       id: \"IDS_PROJECTTYPENOTAVAILABLE\",\r\n    //     })\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  DeleteQuotationTest = (deleteParam) =>{\r\n\r\n\r\n    const postParam = { \r\n      \r\n      inputListName: \"QuotationList\", selectedObject: \"SelectedQuotation\",\r\n      primaryKeyField: \"nquotationcode\", primaryKeyValue: deleteParam.selectedRecord.nquotationtestcode,\r\n      fetchUrl: \"quotation/getQuotationTest\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo }\r\n  };\r\n\r\n    const inputParam = {\r\n        classUrl: \"quotation\",\r\n        methodUrl: \"QuotationPrice\",\r\n        postParam,\r\n\r\n        inputData: {\r\n            \"QuotationTestPrice\": deleteParam.selectedRecord,//.dataItem,\r\n      //      \"npriceversioncode\":this.props.Login.masterData.SelectedTestPriceVersion.npriceversioncode,\r\n            \"userinfo\": this.props.Login.userInfo,\r\n\r\n        },\r\n        operation:\"delete\",\r\n     //  priceDataState:this.state.priceDataState\r\n    }\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_TESTPRICE\" }),\r\n                operation:deleteParam.operation\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    else {\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n}\r\n\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.state.selectedRecord;\r\n//    let selectedRecord = this.state.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n            loadEsign = false;\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        else {\r\n            loadEsign = false;\r\n            selectedRecord['esignpassword'] = '';\r\n            selectedRecord['esigncomments'] = '';\r\n            selectedRecord['esignreason'] = '';\r\n        } \r\n    }\r\n    else {\r\n        openModal = false;\r\n        selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { openModal, loadEsign, selectedRecord }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n\r\n}\r\n\r\n  componentDidUpdate(previousProps) {\r\n    let {\r\n      selectedRecord,\r\n      userRoleControlRights,\r\n      controlMap,\r\n      filterData,\r\n      \r\n    } = this.state;\r\n\r\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n      selectedRecord = this.props.Login.selectedRecord;\r\n      this.setState({ selectedRecord });\r\n    }\r\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n      userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      this.setState({ controlMap, userRoleControlRights });\r\n    }\r\n\r\n\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n      this.setState({\r\n        selectedRecord\r\n      });\r\n\r\n      this.setState({ filterData });\r\n    }\r\n  }\r\n  \r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  closeFilter = () => {\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter: false },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  filterColumnData,\r\n  updateStore,\r\n  validateEsignCredential,\r\n  getQuotation,getProjectTypeComboService,\r\n  viewAttachment, addQuotation, getreloadQuotation, getQuotationAddTestService, getQuotationPricingEditService,\r\n   GrossQuotation,getClientCategoryComboService,getQuotaionClientComboService,getProjectCodeComboService \r\n})(injectIntl(Quotation));\r\n"]},"metadata":{},"sourceType":"module"}