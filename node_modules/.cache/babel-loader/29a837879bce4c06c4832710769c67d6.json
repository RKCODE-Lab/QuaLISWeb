{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\dashboardtypes\\\\DashBoardDynamicControls.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst DashBoardDynamicControls = props => {\n  //console.log(\"props. dynamic:\", props);\n  return props.viewDashBoardDesignConfigList.map(item => {\n    switch (item.ndesigncomponentcode) {\n      case 1:\n        {\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormInput, {\n            name: item.sfieldname,\n            type: \"text\",\n            label: item.sdisplayname,\n            placeholder: item.sdisplayname,\n            value: props.selectedRecord[item.sfieldname] || \"\",\n            isMandatory: item.nmandatory === transactionStatus.YES ? true : false,\n            required: item.nmandatory === transactionStatus.YES ? true : false,\n            maxLength: 100,\n            onChange: event => props.onInputOnChange(event, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      case 2:\n        {\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormTextarea, {\n            name: item.sfieldname,\n            label: item.sdisplayname,\n            placeholder: item.sdisplayname,\n            value: props.selectedRecord[item.sfieldname] || \"\",\n            rows: \"2\",\n            isMandatory: item.nmandatory === transactionStatus.YES ? true : false,\n            required: item.nmandatory === transactionStatus.YES ? true : false,\n            maxLength: 255,\n            onChange: event => props.onInputOnChange(event, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      case 3:\n        {\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n            name: item.sfieldname,\n            formLabel: item.sdisplayname,\n            placeholder: props.intl.formatMessage({\n              id: \"IDS_SELECTRECORD\"\n            }),\n            options: item.dataList || [],\n            value: props.selectedRecord[item.sfieldname] || \"\",\n            isMandatory: item.nmandatory === transactionStatus.YES ? true : false,\n            isMulti: false,\n            isClearable: item.nmandatory === transactionStatus.YES ? false : true,\n            isSearchable: true,\n            isDisabled: false,\n            closeMenuOnSelect: true // alphabeticalSort={true}\n            ,\n            onChange: event => props.onComboChange(event, item.sfieldname, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      case 4:\n        {\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(DateTimePicker, {\n            name: item.sfieldname,\n            label: item.sdisplayname,\n            className: \"form-control\",\n            placeholderText: \"Select date..\",\n            selected: props.selectedRecord[item.sfieldname] || \"\",\n            dateFormat: props.userInfo.ssitedate,\n            readOnly: props.operation === \"update\" //timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\n            ,\n            showTimeInput: false,\n            isClearable: false,\n            isMandatory: item.nmandatory === transactionStatus.YES ? true : false,\n            required: item.nmandatory === transactionStatus.YES ? true : false,\n            onChange: date => props.handleDateChange(item.sfieldname, date, item),\n            value: props.selectedRecord[item.sfieldname],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      case 5:\n        {\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(FormNumericInput, {\n            name: item.sfieldname,\n            label: item.sdisplayname,\n            placeholder: item.sdisplayname,\n            value: props.selectedRecord[item.sfieldname] || \"\",\n            type: \"number\",\n            strict: true,\n            maxLength: 10,\n            noStyle: true,\n            onChange: event => props.onNumericInputOnChange(event, item.sfieldname, item),\n            precision: 0,\n            min: 0,\n            className: \"form-control\",\n            isMandatory: item.nmandatory === transactionStatus.YES ? true : false,\n            required: item.nmandatory === transactionStatus.YES ? true : false,\n            errors: \"Please provide a valid number.\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      case 6:\n        {\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 12,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(CustomSwitch, {\n            name: item.sfieldname,\n            type: \"switch\",\n            label: item.sdisplayname,\n            placeholder: item.sdisplayname,\n            defaultValue: props.selectedRecord[item.sfieldname] === transactionStatus.YES ? true : false,\n            isMandatory: item.nmandatory === transactionStatus.YES ? true : false,\n            required: item.nmandatory === transactionStatus.YES ? true : false,\n            checked: props.selectedRecord[item.sfieldname] === transactionStatus.YES ? true : false,\n            onChange: event => props.onInputOnChange(event, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }\n          })));\n        }\n\n      default:\n        return \"\";\n    }\n  });\n};\n\nexport default injectIntl(DashBoardDynamicControls);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboardtypes/DashBoardDynamicControls.js"],"names":["React","Row","Col","injectIntl","FormTextarea","FormInput","FormSelectSearch","DateTimePicker","FormNumericInput","CustomSwitch","transactionStatus","DashBoardDynamicControls","props","viewDashBoardDesignConfigList","map","item","ndesigncomponentcode","sfieldname","sdisplayname","selectedRecord","nmandatory","YES","event","onInputOnChange","intl","formatMessage","id","dataList","onComboChange","userInfo","ssitedate","operation","date","handleDateChange","onNumericInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col} from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { transactionStatus } from '../../components/Enumeration'\r\n\r\nconst DashBoardDynamicControls = (props) => {\r\n    //console.log(\"props. dynamic:\", props);\r\n    return(      \r\n       props.viewDashBoardDesignConfigList.map(item=>{\r\n        switch (item.ndesigncomponentcode) {\r\n\r\n            case 1: {                \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                name={item.sfieldname}\r\n                                type=\"text\"\r\n                                label={ item.sdisplayname}                   \r\n                                placeholder={ item.sdisplayname}\r\n                                value ={ props.selectedRecord[item.sfieldname] || \"\" }\r\n                                isMandatory={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                required={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                maxLength={100}\r\n                                onChange={(event)=> props.onInputOnChange(event, item)}\r\n                            />                      \r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 2: {                \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormTextarea\r\n                                   name={item.sfieldname}\r\n                                   label={item.sdisplayname}                    \r\n                                   placeholder={item.sdisplayname}\r\n                                   value ={ props.selectedRecord[item.sfieldname] || \"\"}\r\n                                   rows=\"2\"\r\n                                   isMandatory={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                   required={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                   maxLength={255}\r\n                                   onChange={(event)=> props.onInputOnChange(event, item)}\r\n                                   />\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 3: {\r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                                        name={item.sfieldname}\r\n                                        formLabel={ item.sdisplayname}                              \r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })  }                        \r\n                                        options={item.dataList || []}\r\n                                        value = { props.selectedRecord[item.sfieldname] || \"\"}\r\n                                        isMandatory={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                        isMulti={false}\r\n                                        isClearable={item.nmandatory === transactionStatus.YES ? false :true}\r\n                                        isSearchable={true}                                \r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        // alphabeticalSort={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, item.sfieldname, item)}                               \r\n                                />  \r\n                           \r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            case 4: {\r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <DateTimePicker\r\n                                    name={item.sfieldname} \r\n                                    label={ item.sdisplayname}                     \r\n                                    className='form-control'\r\n                                    placeholderText=\"Select date..\"\r\n                                    selected={props.selectedRecord[item.sfieldname] || \"\"}\r\n                                    dateFormat={props.userInfo.ssitedate}\r\n                                    readOnly={props.operation === \"update\"}\r\n                                    //timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                                    showTimeInput={false}\r\n                                    isClearable={false}\r\n                                    isMandatory={item.nmandatory === transactionStatus.YES ? true :false}                       \r\n                                    required={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                    onChange={date => props.handleDateChange(item.sfieldname, date, item)}\r\n                                    value={props.selectedRecord[item.sfieldname]}\r\n                              />\r\n                           \r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            case 5: {                \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormNumericInput\r\n                                   name={item.sfieldname}\r\n                                   label={ item.sdisplayname}                          \r\n                                   placeholder={ item.sdisplayname}\r\n                                   value ={ props.selectedRecord[item.sfieldname] || \"\"}\r\n                                   type=\"number\"                               \r\n                                   strict={true}\r\n                                   maxLength={10}\r\n                                   noStyle={true}\r\n                                   onChange={(event) => props.onNumericInputOnChange(event, item.sfieldname, item)}\r\n                                   precision={0}\r\n                                   min={0}\r\n                                   className=\"form-control\"\r\n                                   isMandatory={item.nmandatory === transactionStatus.YES ? true :false}                       \r\n                                   required={item.nmandatory === transactionStatus.YES ? true :false}\r\n                                   errors=\"Please provide a valid number.\"\r\n                              />\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            case 6: {                \r\n                return (\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <CustomSwitch\r\n                                   name={item.sfieldname}\r\n                                   type=\"switch\"\r\n                                   label={item.sdisplayname}\r\n                                   placeholder={item.sdisplayname}                            \r\n                                   defaultValue ={ props.selectedRecord[item.sfieldname] === transactionStatus.YES ? true :false }  \r\n                                   isMandatory={item.nmandatory === transactionStatus.YES ? true :false}                       \r\n                                   required={item.nmandatory === transactionStatus.YES ? true :false}                                   \r\n                                   checked={ props.selectedRecord[item.sfieldname] === transactionStatus.YES ? true :false}\r\n                                   onChange={(event)=> props.onInputOnChange(event, item)}\r\n                                   />\r\n                        </Col>\r\n                    </Row>\r\n                    )\r\n            }\r\n            default :\r\n                return \"\";\r\n        }\r\n        \r\n        } )\r\n\r\n    )\r\n}\r\n\r\nexport default injectIntl(DashBoardDynamicControls);"]},"metadata":{},"sourceType":"module"}