{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\dashboard\\\\ListComponent.jsx\";\nimport { ListView, ListViewHeader } from '@progress/kendo-react-listview';\nimport React from 'react';\nimport { Button, InputGroup, FormControl, Media, ListGroup, Form } from 'react-bootstrap';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Affix, Alert } from 'rsuite';\nimport { ListMasterWrapper } from '../../components/list-master/list-master.styles';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, SearchIcon } from '../../components/App.styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faSync, faTable } from '@fortawesome/free-solid-svg-icons';\nimport './SqlBuilderDesign.css';\nimport CustomPager from '../../components/CustomPager';\nimport { connect } from 'react-redux';\nimport { ListWrapper } from '../../components/client-group.styles';\n\nclass ListComponent extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.MyHeader = () => {\n      return /*#__PURE__*/React.createElement(ListViewHeader, {\n        style: {\n          color: \"rgb(160, 160, 160)\",\n          fontSize: 20,\n          fontweight: 'bold'\n        },\n        className: \"pl-3 pb-2 pt-2 headercolor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, this.props.headerName);\n    };\n\n    this.ListDesign = props => {\n      let item = props.dataItem;\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        key: `listKey_${props.index}`,\n        as: \"li\",\n        onClick: () => this.props.onClick(item),\n        className: `list-bgcolor`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Media, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Media.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTable,\n        size: \"lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: 'px-3',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, item.stabledisplayname))));\n    };\n\n    this.search = (filterValue, data) => {\n      let searchedData = [];\n\n      if (data.length > 0) {\n        let temp = data.filter(item => {\n          const itemArray = [];\n          ['stabledisplayname'].map(itemKey => item[itemKey] && item[itemKey] !== null ? itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase() : item[itemKey].toString().toLowerCase()) : \"\");\n          return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1;\n        });\n        searchedData = temp;\n      }\n\n      return searchedData;\n    };\n\n    this.filterColumn = event => {\n      event.preventDefault();\n      event.stopPropagation();\n      let filterValue = event.target.value;\n      let searchData = this.state.searchData; //if (event.keyCode === 13) {\n      //  this.props.filterColumnData(filterValue, this.props.filterParam);\n\n      if (filterValue === '') {\n        searchData = undefined;\n      } else {\n        searchData = this.search(filterValue, this.props.data);\n      }\n\n      this.setState({\n        searchData\n      }); //}\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        filterValue: e.target.value\n      });\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.state = {\n      showModalBg: false,\n      buttonCount: 4,\n      info: true,\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5\n    };\n    this.searchRef = React.createRef();\n  }\n\n  render() {\n    const data1 = this.state.searchData ? this.state.searchData : this.props.data;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListMasterWrapper, {\n      className: `${this.state.showModalBg ? 'show_modal_bg' : ''} `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchAdd, {\n      className: `d-flex ${this.props.hideSearch ? \"justify-content-end\" : \"justify-content-between\"}  pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, this.props.hideSearch ? \"\" : /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"list-group-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      className: \"search-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      style: {\n        color: \"#c1c7d0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      ref: this.props.searchRef // onEnterKeyPress={this.filterColumn}\n      // onChange={this.onInputChange}\n      // value={this.state.filterValue && this.state.filterValue}\n      ,\n      autoComplete: \"off\",\n      className: 'nomaxwidth',\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_FILTER\"\n      }) //.concat(this.props.screenName)\n      ,\n      name: \"search\",\n      onKeyUp: e => this.filterColumn(e) // onEnterKeyPress={this.filterColumn}\n      //  onEnterKeyPress={this.filterColumn}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"d-flex ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, this.props.titleHead ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 53\n      }\n    }, this.props.titleHead) : '')), /*#__PURE__*/React.createElement(ClientList, {\n      className: \"product-list list_rightborder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'height-normal height-xl height-xxd',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      as: \"ul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListView, {\n      data: this.props.hidePaging ? data1 : data1.slice(this.props.skip ? this.props.skip : this.state.skip, (this.props.skip ? this.props.skip : this.state.skip) + (this.props.take ? this.props.take : this.state.take)) //  data={this.props.data}\n      ,\n      item: props => this.ListDesign(props) // header={this.MyHeader}\n      // style={{\n      //     width: \"100%\",\n      //     height:\"100%\"\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }))))), this.props.hidePaging ? \"\" : /*#__PURE__*/React.createElement(CustomPager, {\n      skip: this.props.skip ? this.props.skip : this.state.skip,\n      take: this.props.take ? this.props.take : this.state.take,\n      width: 20,\n      pagershowwidth: 18,\n      handlePageChange: this.handlePageChange,\n      total: data1 ? data1.length : 0,\n      buttonCount: this.state.buttonCount,\n      info: this.state.info,\n      userInfo: this.props.Login.userInfo,\n      pageSize: this.props.pageSize ? this.props.pageSize : this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nexport default connect(mapStateToProps, {})(injectIntl(ListComponent));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/dashboard/ListComponent.jsx"],"names":["ListView","ListViewHeader","React","Button","InputGroup","FormControl","Media","ListGroup","Form","injectIntl","FormattedMessage","Affix","Alert","ListMasterWrapper","PerfectScrollbar","ClientList","SearchAdd","MediaHeader","MediaSubHeader","MediaLabel","SearchIcon","FontAwesomeIcon","faSearch","faSync","faTable","CustomPager","connect","ListWrapper","ListComponent","Component","constructor","props","MyHeader","color","fontSize","fontweight","headerName","ListDesign","item","dataItem","index","onClick","stabledisplayname","search","filterValue","data","searchedData","length","temp","filter","itemArray","map","itemKey","push","toLowerCase","toString","findIndex","element","includes","filterColumn","event","preventDefault","stopPropagation","target","value","searchData","state","undefined","setState","onInputChange","e","handlePageChange","skip","take","showModalBg","buttonCount","info","Login","settings","parseInt","searchRef","createRef","render","data1","hideSearch","titleClasses","intl","formatMessage","id","titleHead","hidePaging","slice","userInfo","pageSize","split","setting","mapStateToProps"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,gCAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,WAA7B,EAA0CC,KAA1C,EAAiDC,SAAjD,EAA4DC,IAA5D,QAAwE,iBAAxE;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,QAA7B;AACA,SAASC,iBAAT,QAAkC,iDAAlC;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SACIC,UADJ,EACgBC,SADhB,EAC2BC,WAD3B,EAEIC,cAFJ,EAEoBC,UAFpB,EAEgCC,UAFhC,QAGO,6BAHP;AAIA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,QAA0C,mCAA1C;AACA,OAAO,wBAAP;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,sCAA5B;;AAGA,MAAMC,aAAN,SAA4B1B,KAAK,CAAC2B,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,UAAMA,MAAN;;AADe,SAcnBC,QAdmB,GAcR,MAAM;AACb,0BACI,oBAAC,cAAD;AACI,QAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE,oBADJ;AAEHC,UAAAA,QAAQ,EAAE,EAFP;AAGHC,UAAAA,UAAU,EAAE;AAHT,SADX;AAMI,QAAA,SAAS,EAAC,4BANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQK,KAAKJ,KAAL,CAAWK,UARhB,CADJ;AAYH,KA3BkB;;AAAA,SA6BnBC,UA7BmB,GA6BNN,KAAK,IAAI;AAClB,UAAIO,IAAI,GAAGP,KAAK,CAACQ,QAAjB;AACA,0BAEI,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,GAAG,EAAG,WAAUR,KAAK,CAACS,KAAM,EAA5C;AAA+C,QAAA,EAAE,EAAC,IAAlD;AAAuD,QAAA,OAAO,EAAE,MAAM,KAAKT,KAAL,CAAWU,OAAX,CAAmBH,IAAnB,CAAtE;AACI,QAAA,SAAS,EAAG,cADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEd,OAAvB;AAAgC,QAAA,IAAI,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAII;AAAM,QAAA,SAAS,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKc,IAAI,CAACI,iBADV,CAJJ,CADJ,CAFJ,CAFJ;AAkBH,KAjDkB;;AAAA,SAmDnBC,MAnDmB,GAmDV,CAACC,WAAD,EAAcC,IAAd,KAAuB;AAC5B,UAAIC,YAAY,GAAG,EAAnB;;AAEA,UAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACjB,YAAIC,IAAI,GAAGH,IAAI,CAACI,MAAL,CAAYX,IAAI,IAAI;AAC3B,gBAAMY,SAAS,GAAG,EAAlB;AACA,WAAC,mBAAD,EAAsBC,GAAtB,CAA0BC,OAAO,IAC7Bd,IAAI,CAACc,OAAD,CAAJ,IAAiBd,IAAI,CAACc,OAAD,CAAJ,KAAkB,IAAnC,GACIF,SAAS,CAACG,IAAV,CAAe,OAAOf,IAAI,CAACc,OAAD,CAAX,KAAyB,QAAzB,GAAoCd,IAAI,CAACc,OAAD,CAAJ,CAAcE,WAAd,EAApC,GACThB,IAAI,CAACc,OAAD,CAAJ,CAAcG,QAAd,GAAyBD,WAAzB,EADN,CADJ,GAGM,EAJV;AAKA,iBAAOJ,SAAS,CAACM,SAAV,CAAoBC,OAAO,IAAIA,OAAO,CAACC,QAAR,CAAiBd,WAAW,CAACU,WAAZ,EAAjB,CAA/B,IAA8E,CAAC,CAAtF;AACH,SARU,CAAX;AAUAR,QAAAA,YAAY,GAAGE,IAAf;AACH;;AACD,aAAOF,YAAP;AACH,KApEkB;;AAAA,SAsEnBa,YAtEmB,GAsEHC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACAD,MAAAA,KAAK,CAACE,eAAN;AACA,UAAIlB,WAAW,GAAGgB,KAAK,CAACG,MAAN,CAAaC,KAA/B;AACA,UAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWD,UAA5B,CAJsB,CAKtB;AACI;;AACA,UAAIrB,WAAW,KAAK,EAApB,EAAwB;AACpBqB,QAAAA,UAAU,GAAGE,SAAb;AACH,OAFD,MAEO;AACHF,QAAAA,UAAU,GAAG,KAAKtB,MAAL,CAAYC,WAAZ,EAAyB,KAAKb,KAAL,CAAWc,IAApC,CAAb;AACH;;AACD,WAAKuB,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd,EAZkB,CAatB;AACH,KApFkB;;AAAA,SAsFnBI,aAtFmB,GAsFFC,CAAD,IAAO;AACnB,WAAKF,QAAL,CAAc;AAAExB,QAAAA,WAAW,EAAE0B,CAAC,CAACP,MAAF,CAASC;AAAxB,OAAd;AACH,KAxFkB;;AAAA,SAuLnBO,gBAvLmB,GAuLAD,CAAC,IAAI;AACpB,WAAKF,QAAL,CAAc;AACVI,QAAAA,IAAI,EAAEF,CAAC,CAACE,IADE;AAEVC,QAAAA,IAAI,EAAEH,CAAC,CAACG;AAFE,OAAd;AAIH,KA5LkB;;AAGf,SAAKP,KAAL,GAAa;AACTQ,MAAAA,WAAW,EAAE,KADJ;AAETC,MAAAA,WAAW,EAAE,CAFJ;AAGTC,MAAAA,IAAI,EAAE,IAHG;AAITJ,MAAAA,IAAI,EAAE,CAJG;AAKTC,MAAAA,IAAI,EAAE,KAAK1C,KAAL,CAAW8C,KAAX,CAAiBC,QAAjB,GAA4BC,QAAQ,CAAC,KAAKhD,KAAL,CAAW8C,KAAX,CAAiBC,QAAjB,CAA0B,CAA1B,CAAD,CAApC,GAAqE;AALlE,KAAb;AAQA,SAAKE,SAAL,GAAiB9E,KAAK,CAAC+E,SAAN,EAAjB;AACH;;AA8EDC,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKjB,KAAL,CAAWD,UAAX,GACV,KAAKC,KAAL,CAAWD,UADD,GACc,KAAKlC,KAAL,CAAWc,IADvC;AAEA,wBAAQ,uDACJ,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAG,GAAE,KAAKqB,KAAL,CAAWQ,WAAX,GAAyB,eAAzB,GAA2C,EAAG,GAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAG,UAAS,KAAK3C,KAAL,CAAWqD,UAAX,GAAwB,qBAAxB,GAAgD,yBAA0B,YAAW,KAAKrD,KAAL,CAAWsD,YAAX,GAA0B,KAAKtD,KAAL,CAAWsD,YAArC,GAAoD,EAAG,EAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtD,KAAL,CAAWqD,UAAX,GAAwB,EAAxB,gBACG,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE9D,QAAvB;AAAiC,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE;AAAT,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAaI,oBAAC,WAAD;AACI,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWiD,SADpB,CAC8B;AAC3B;AACA;AAHH;AAII,MAAA,YAAY,EAAC,KAJjB;AAKI,MAAA,SAAS,EAAE,YALf;AAMI,MAAA,WAAW,EAAE,KAAKjD,KAAL,CAAWuD,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CANjB,CAMsE;AANtE;AAOI,MAAA,IAAI,EAAE,QAPV;AAQI,MAAA,OAAO,EAAGlB,CAAD,IAAO,KAAKX,YAAL,CAAkBW,CAAlB,CARpB,CASG;AACH;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CAFR,eA+BI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKvC,KAAL,CAAW0D,SAAX,gBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK1D,KAAL,CAAW0D,SAAhB,CAAvB,GAAyD,EAD9D,CA/BJ,CARJ,eA4CI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,+BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE,oCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAE,KAAK1D,KAAL,CAAW2D,UAAX,GACFP,KADE,GAEFA,KAAK,CAACQ,KAAN,CAAY,KAAK5D,KAAL,CAAWyC,IAAX,GACR,KAAKzC,KAAL,CAAWyC,IADH,GACU,KAAKN,KAAL,CAAWM,IADjC,EAEK,CAAC,KAAKzC,KAAL,CAAWyC,IAAX,GAAkB,KAAKzC,KAAL,CAAWyC,IAA7B,GAAoC,KAAKN,KAAL,CAAWM,IAAhD,KAAyD,KAAKzC,KAAL,CAAW0C,IAAX,GAAkB,KAAK1C,KAAL,CAAW0C,IAA7B,GAAoC,KAAKP,KAAL,CAAWO,IAAxG,CAFL,CAHR,CAMI;AANJ;AAOI,MAAA,IAAI,EAAG1C,KAAD,IAAW,KAAKM,UAAL,CAAgBN,KAAhB,CAPrB,CAQA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CADJ,CA5CJ,EAkEK,KAAKA,KAAL,CAAW2D,UAAX,GAAwB,EAAxB,gBACG,oBAAC,WAAD;AACI,MAAA,IAAI,EAAE,KAAK3D,KAAL,CAAWyC,IAAX,GAAkB,KAAKzC,KAAL,CAAWyC,IAA7B,GAAoC,KAAKN,KAAL,CAAWM,IADzD;AAEI,MAAA,IAAI,EAAE,KAAKzC,KAAL,CAAW0C,IAAX,GAAkB,KAAK1C,KAAL,CAAW0C,IAA7B,GAAoC,KAAKP,KAAL,CAAWO,IAFzD;AAGI,MAAA,KAAK,EAAE,EAHX;AAII,MAAA,cAAc,EAAE,EAJpB;AAKI,MAAA,gBAAgB,EAAE,KAAKF,gBAL3B;AAMI,MAAA,KAAK,EAAEY,KAAK,GAAGA,KAAK,CAACpC,MAAT,GAAkB,CANlC;AAOI,MAAA,WAAW,EAAE,KAAKmB,KAAL,CAAWS,WAP5B;AAQI,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWU,IARrB;AASI,MAAA,QAAQ,EAAE,KAAK7C,KAAL,CAAW8C,KAAX,CAAiBe,QAT/B;AAUI,MAAA,QAAQ,EAAE,KAAK7D,KAAL,CAAW8D,QAAX,GAAsB,KAAK9D,KAAL,CAAW8D,QAAjC,GAA4C,KAAK9D,KAAL,CAAW8C,KAAX,CAAiBC,QAAjB,IAA6B,KAAK/C,KAAL,CAAW8C,KAAX,CAAiBC,QAAjB,CAA0B,CAA1B,EAA6BgB,KAA7B,CAAmC,GAAnC,EAAwC3C,GAAxC,CAA4C4C,OAAO,IAAIhB,QAAQ,CAACgB,OAAD,CAA/D,CAVvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnER,CADJ,CADI,CAAR;AAwFH;;AAtLuC;;AAiM5C,MAAMC,eAAe,GAAI9B,KAAD,IAAW;AAC/B,SAAO;AACHW,IAAAA,KAAK,EAAEX,KAAK,CAACW;AADV,GAAP;AAGH,CAJD;;AAMA,eAAenD,OAAO,CAACsE,eAAD,EAAkB,EAAlB,CAAP,CAA6BvF,UAAU,CAACmB,aAAD,CAAvC,CAAf","sourcesContent":["import { ListView, ListViewHeader } from '@progress/kendo-react-listview';\r\nimport React from 'react';\r\nimport { Button, InputGroup, FormControl, Media, ListGroup, Form } from 'react-bootstrap';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Affix, Alert } from 'rsuite';\r\nimport { ListMasterWrapper } from '../../components/list-master/list-master.styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n    ClientList, SearchAdd, MediaHeader,\r\n    MediaSubHeader, MediaLabel, SearchIcon\r\n} from '../../components/App.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faSync, faTable } from '@fortawesome/free-solid-svg-icons';\r\nimport './SqlBuilderDesign.css'\r\nimport CustomPager from '../../components/CustomPager';\r\nimport { connect } from 'react-redux';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\n\r\n\r\nclass ListComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showModalBg: false,\r\n            buttonCount: 4,\r\n            info: true,\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5\r\n        }\r\n\r\n        this.searchRef = React.createRef();\r\n    }\r\n\r\n    MyHeader = () => {\r\n        return (\r\n            <ListViewHeader\r\n                style={{\r\n                    color: \"rgb(160, 160, 160)\",\r\n                    fontSize: 20,\r\n                    fontweight: 'bold'\r\n                }}\r\n                className=\"pl-3 pb-2 pt-2 headercolor\"\r\n            >\r\n                {this.props.headerName}\r\n            </ListViewHeader>\r\n        );\r\n    };\r\n\r\n    ListDesign = props => {\r\n        let item = props.dataItem;\r\n        return (\r\n\r\n            <ListGroup.Item key={`listKey_${props.index}`} as=\"li\" onClick={() => this.props.onClick(item)}\r\n                className={`list-bgcolor`}>\r\n                <Media>\r\n                    <Media.Body>\r\n                        <span>\r\n                            <FontAwesomeIcon icon={faTable} size='lg' />\r\n                        </span>\r\n                        <span className={'px-3'}>\r\n                            {item.stabledisplayname}\r\n                        </span>\r\n\r\n                    </Media.Body>\r\n                </Media>\r\n            </ListGroup.Item>\r\n        )\r\n\r\n    }\r\n\r\n    search = (filterValue, data) => {\r\n        let searchedData = [];\r\n\r\n        if (data.length > 0) {\r\n            let temp = data.filter(item => {\r\n                const itemArray = [];\r\n                ['stabledisplayname'].map(itemKey =>\r\n                    item[itemKey] && item[itemKey] !== null ?\r\n                        itemArray.push(typeof item[itemKey] === \"string\" ? item[itemKey].toLowerCase()\r\n                            : item[itemKey].toString().toLowerCase())\r\n                        : \"\")\r\n                return itemArray.findIndex(element => element.includes(filterValue.toLowerCase())) > -1\r\n            }\r\n            )\r\n            searchedData = temp;\r\n        }\r\n        return searchedData;\r\n    }\r\n\r\n    filterColumn = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        let filterValue = event.target.value;\r\n        let searchData = this.state.searchData\r\n        //if (event.keyCode === 13) {\r\n            //  this.props.filterColumnData(filterValue, this.props.filterParam);\r\n            if (filterValue === '') {\r\n                searchData = undefined\r\n            } else {\r\n                searchData = this.search(filterValue, this.props.data)\r\n            }\r\n            this.setState({ searchData })\r\n        //}\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({ filterValue: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        const data1 = this.state.searchData ?\r\n            this.state.searchData : this.props.data\r\n        return (<>\r\n            <Affix top={53}>\r\n                <ListMasterWrapper className={`${this.state.showModalBg ? 'show_modal_bg' : ''} `}>\r\n                    {/* \r\n                    <SearchAdd className={`d-flex filter-wrap-group justify-content-between pad-15 tableHeader ${this.props.titleClasses ? this.props.titleClasses : ''}`} >\r\n\r\n                        {this.props.headerName}\r\n                    </SearchAdd> */}\r\n\r\n\r\n                    <SearchAdd className={`d-flex ${this.props.hideSearch ? \"justify-content-end\" : \"justify-content-between\"}  pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`} >\r\n                        {this.props.hideSearch ? \"\" :\r\n                            <InputGroup className=\"list-group-search\">\r\n                                <SearchIcon className=\"search-icon\">\r\n                                    {/* <FontAwesomeIcon icon={faFilter} style={{ color: \"#c1c7d0\" }} /> */}\r\n                                    <FontAwesomeIcon icon={faSearch} style={{ color: \"#c1c7d0\" }} />\r\n                                    {/* <SolidFilterIcon className=\"custom_icons\" width=\"18\" height=\"18\" fill='#FFF' stroke='#000000' stroke-width=\"15\"/> */}\r\n                                </SearchIcon>\r\n\r\n                                {/* <input type=\"text\"\r\n                                    onChange={(e)=>this.onInputChange(e)}\r\n                                    value={this.state.filterValue && this.state.filterValue}\r\n                                    onKeyUp={(e)=>this.filterColumn(e)}\r\n                                ></input> */}\r\n\r\n                                <FormControl\r\n                                    ref={this.props.searchRef}// onEnterKeyPress={this.filterColumn}\r\n                                   // onChange={this.onInputChange}\r\n                                   // value={this.state.filterValue && this.state.filterValue}\r\n                                    autoComplete=\"off\"\r\n                                    className={'nomaxwidth'}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_FILTER\" })} //.concat(this.props.screenName)\r\n                                    name={\"search\"}\r\n                                    onKeyUp={(e) => this.filterColumn(e)}\r\n                                   // onEnterKeyPress={this.filterColumn}\r\n                                //  onEnterKeyPress={this.filterColumn}\r\n                                />\r\n                            </InputGroup>\r\n                        }\r\n\r\n\r\n                        <ListWrapper className=\"d-flex ml-2\">\r\n                            {this.props.titleHead ? <h3>{this.props.titleHead}</h3> : ''}\r\n                        </ListWrapper>\r\n                    </SearchAdd>\r\n\r\n                    <ClientList className=\"product-list list_rightborder\">\r\n                        <div className={'height-normal height-xl height-xxd'}>\r\n                            <PerfectScrollbar>\r\n                                <ListGroup as=\"ul\">\r\n                                    <ListView\r\n                                        data={this.props.hidePaging ?\r\n                                            data1 :\r\n                                            data1.slice(this.props.skip ?\r\n                                                this.props.skip : this.state.skip,\r\n                                                ((this.props.skip ? this.props.skip : this.state.skip) + (this.props.take ? this.props.take : this.state.take)))}\r\n                                        //  data={this.props.data}\r\n                                        item={(props) => this.ListDesign(props)}\r\n                                    // header={this.MyHeader}\r\n                                    // style={{\r\n                                    //     width: \"100%\",\r\n                                    //     height:\"100%\"\r\n                                    // }}\r\n                                    />\r\n                                </ListGroup>\r\n                            </PerfectScrollbar>\r\n                        </div>\r\n                    </ClientList>\r\n                    {this.props.hidePaging ? \"\" :\r\n                        <CustomPager\r\n                            skip={this.props.skip ? this.props.skip : this.state.skip}\r\n                            take={this.props.take ? this.props.take : this.state.take}\r\n                            width={20}\r\n                            pagershowwidth={18}\r\n                            handlePageChange={this.handlePageChange}\r\n                            total={data1 ? data1.length : 0}\r\n                            buttonCount={this.state.buttonCount}\r\n                            info={this.state.info}\r\n                            userInfo={this.props.Login.userInfo}\r\n                            pageSize={this.props.pageSize ? this.props.pageSize : this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n                        >\r\n                        </CustomPager>\r\n                    }\r\n                </ListMasterWrapper>\r\n            </Affix>\r\n        </>\r\n\r\n        )\r\n    };\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(injectIntl(ListComponent));"]},"metadata":{},"sourceType":"module"}