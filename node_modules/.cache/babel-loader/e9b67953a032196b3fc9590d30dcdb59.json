{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var _this=this;import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{filterRecordBasedOnTwoArrays,sortData,rearrangeDateFormat,convertDateTimetoString,fillRecordBasedOnCheckBoxSelection,getRecordBasedOnPrimaryKeyName,updatedObjectWithNewElement,replaceUpdatedObject,parentChildComboLoad,getSameRecordFromTwoArrays,constructjsonOptionList,constructjsonOptionDefault,childComboLoad}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{intl}from'../components/App';import{initRequest}from'./LoginAction';import{RegistrationSubType,RegistrationType,transactionStatus}from'../components/Enumeration';import{crudMaster,postCRUDOrganiseTransSearch}from'./ServiceAction';//import { getTestChildTabDetail } from './index.js'\nimport{constructOptionList}from'../components/CommonScript';export function getSampleTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getRegTypeBySampleType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getRegTypeChange(Map,masterData,event,labelname){return function(dispatch){rsapi.post(\"/registration/getRegSubTypeByRegType\",Map).then(function(response){// const RegistrationSubType = response.data[\"RegistrationSubType\"];\n//  console.log(response.data);\n// RegistrationSubType.length > 0 ?\n//     selectedRecord[\"nregsubtypecode\"] = {\n//         \"value\": RegistrationSubType[0].nregsubtypecode,\n//         \"label\": RegistrationSubType[0].sregsubtypename\n//     } : selectedRecord[\"nregsubtypecode\"] = \"\";\n// const [labelname] = event.item;\nmasterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getRegSubTypeChange(Map,masterData,event,labelname){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getRegSubTypeByRegType\",Map).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},_defineProperty({},labelname,_objectSpread({},event.item)));dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getComponentTestBySpec(Map,selectedRecord,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getComponentTestBySpec\",Map).then(function(response){var _response$data=response.data,Component=_response$data.Component,Test=_response$data.Test;var slno=Component.length>0?Component[0].slno:-1;var selectedComponent=Component.length>0?Component[0]:undefined;var SelectedTest=[];var SelectedSource=[];if(Object.keys(Test).length>0){SelectedTest=Test[slno];}dispatch({type:DEFAULT_RETURN,payload:{Component:Component,Test:Test,SelectedTest:SelectedTest,selectedComponent:selectedComponent,loading:false,SelectedSource:SelectedSource,selectedRecord:selectedRecord,popUptestDataState:{skip:0,take:10},Source:[]}});}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getTestfromDB(objComponent,LoginProps,nflag){return function(dispatch){dispatch(initRequest(true));var component=_objectSpread({},objComponent);component[\"ncomponentcode\"]=objComponent[\"ncomponentcode\"]?objComponent[\"ncomponentcode\"].value:-1;component[\"nstoragelocationcode\"]=objComponent[\"nstoragelocationcode\"]?objComponent[\"nstoragelocationcode\"].value:-1;component[\"nstorageconditioncode\"]=objComponent[\"nstorageconditioncode\"]?objComponent[\"nstorageconditioncode\"].value:-1;component[\"slno\"]=LoginProps.Component?Object.keys(LoginProps.Component).length+1:0;component[\"scomponentname\"]=objComponent[\"ncomponentcode\"].label;component[\"sstoragelocationname\"]=objComponent[\"nstoragelocationcode\"]&&objComponent[\"nstoragelocationcode\"].label?objComponent[\"nstoragelocationcode\"].label:\"\";component[\"sstorageconditionname\"]=objComponent[\"nstorageconditioncode\"]&&objComponent[\"nstorageconditioncode\"].label?objComponent[\"nstorageconditioncode\"].label:\"\";component[\"ntzdmanufdate\"]=objComponent[\"ntzdmanufdate\"]?objComponent[\"ntzdmanufdate\"].value:-1;component[\"ntzdreceivedate\"]=objComponent[\"ntzdreceivedate\"]?objComponent[\"ntzdreceivedate\"].value:-1;component[\"stzdreceivedate\"]=objComponent[\"ntzdreceivedate\"]?objComponent[\"ntzdreceivedate\"].label:\"\";component[\"nplasmafilecode\"]=objComponent[\"nplasmafilecode\"]?objComponent[\"nplasmafilecode\"].value:-1;component[\"splasmafilenumber\"]=objComponent[\"nplasmafilecode\"]?objComponent[\"nplasmafilecode\"].label:\"\";var dreceiveddate=objComponent[\"dreceiveddate\"];component[\"dreceiveddate\"]=dreceiveddate;//formatInputDate(objComponent[\"dreceiveddate\"], false);\ncomponent[\"sreceiveddate\"]=convertDateTimetoString(dreceiveddate,LoginProps.userInfo);//formatInputDateWithoutT(objComponent[\"dreceiveddate\"], false);//formatDate(objComponent[\"sreceiveddate\"]);\n// rsapi.post(\"/registration/getTestfromDB\", { \"Component\": component })\nrsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:component.nspecsampletypecode,slno:component.slno}).then(function(response){var TestData=response.data;var slno=component.slno;var SelectedTest=[];var loadComponent=true;var selectComponent={};var showSaveContinue=true;var SelectedSource=[];// let openChildModal = true;\nvar selectedComponent=undefined;var parentPopUpSize=\"lg\";// selectComponent = objComponent\nif(nflag===1){loadComponent=true;objComponent[\"smanuflotno\"]=\"\";objComponent[\"dreceiveddate\"]=rearrangeDateFormat(LoginProps.userInfo,LoginProps.CurrentTime);//new Date(LoginProps.CurrentTime);\nobjComponent[\"sreceiveddate\"]=rearrangeDateFormat(LoginProps.userInfo,LoginProps.CurrentTime);//new Date(LoginProps.CurrentTime);\nselectComponent=objComponent;}else{loadComponent=false;parentPopUpSize=\"xl\";// openChildModal = false;\nshowSaveContinue=false;selectComponent=undefined;}var Test=LoginProps.Test||[];var Component=LoginProps.Component||[];Component.unshift(component);selectedComponent=component;Test[slno]=response.data;SelectedTest=TestData;dispatch({type:DEFAULT_RETURN,payload:{Component:Component,Test:Test,SelectedTest:SelectedTest,selectComponent:selectComponent,selectedComponent:selectedComponent,loadComponent:loadComponent,showSaveContinue:showSaveContinue,parentPopUpSize:parentPopUpSize,loading:false,SelectedSource:SelectedSource}});// console.log(response.data);\n}).catch(function(error){//   console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function EditComponent(Map,component,userInfo){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",Map);var timezone=rsapi.post(\"timezone/getTimeZone\");urlArray=[ComponentTestBySpec,timezone];Axios.all(urlArray).then(function(response){var lstComponentMap=constructOptionList(response[0].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var timeZoneListMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var TimeZoneField=response[1].data;var lstComponent=lstComponentMap.get(\"OptionList\");var timeZoneList=timeZoneListMap.get(\"OptionList\");component[\"ncomponentcode\"]={label:component.scomponentname,value:component.ncomponentcode};component[\"dreceiveddate\"]=rearrangeDateFormat(userInfo,component[\"sreceiveddate\"]);component[\"scomments\"]=component[\"scomments\"];var ntzdreceivedate=component.ntzdreceivedate;if(component.ntzdreceivedate!==null&&typeof component.ntzdreceivedate===\"object\"){ntzdreceivedate=component.ntzdreceivedate.value;}component[\"ntzdreceivedate\"]=component.ntzdreceivedate?{\"label\":TimeZoneField[TimeZoneField.findIndex(function(x){return x.ntimezonecode===ntzdreceivedate;})].stimezoneid,\"value\":TimeZoneField[TimeZoneField.findIndex(function(x){return x.ntimezonecode===ntzdreceivedate;})].ntimezonecode}:\"\";dispatch({type:DEFAULT_RETURN,payload:{loadComponent:true,childoperation:\"update\",lstComponent:lstComponent,ChildscreenName:\"Component\",openChildModal:false,selectComponent:component,parentPopUpSize:\"lg\",timeZoneList:timeZoneList,loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function ReloadData(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"registration/getRegistrationByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";//masterData['searchedTests'] = undefined\nmasterData['searchedTest']=undefined;}// let selectedFilter = inputData.selectedFilter;\n// selectedFilter[\"fromdate\"] = \"\";\n// selectedFilter[\"todate\"] = \"\";\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampletake:undefined,subsampleskip:0,showSample:undefined//selectedFilter\n}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getTreeByProduct(Map,selectedRecord,comboData,inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/getTreeByProduct\",Map).then(function(response){var _ref=[],Specification=_ref.Specification,AgaramTree=_ref.AgaramTree,ActiveKey=_ref.ActiveKey,FocusKey=_ref.FocusKey,OpenNodes=_ref.OpenNodes;var selectedSpec={};if(response.data[\"rtn\"]===true){Specification=constructOptionList(response.data[\"Specification\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true).get(\"OptionList\");AgaramTree=response.data[\"AgaramTree\"];ActiveKey=response.data[\"ActiveKey\"];FocusKey=response.data[\"FocusKey\"];OpenNodes=response.data[\"OpenNodes\"];//Manufacturer = response.data[\"Manufacturer\"];\nselectedSpec[\"nallottedspeccode\"]=Specification.length>0?{\"value\":Specification[0].value,\"label\":Specification[0].label,\"item\":Specification[0].item}:\"\";selectedSpec[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";selectedSpec[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;}selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedSpec);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({Specification:Specification,selectedRecord:selectedRecord,AgaramTree:AgaramTree,ActiveKey:ActiveKey,FocusKey:FocusKey,OpenNodes:OpenNodes,Test:[],SelectedTest:[],loading:false,comboData:comboData},inputParam),{},{selectedSpec:selectedSpec,Component:[],selectComponent:{},selectedComponent:{}})});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export var getNewRegSpecification=function getNewRegSpecification(inputParam,masterData){return function(dispatch){if(inputParam.selectedNode!==null){dispatch(initRequest(true));rsapi.post(\"/registration/\"+inputParam.operation+inputParam.methodUrl,_objectSpread(_objectSpread({},inputParam),{},{ntreetemplatemanipulationcode:inputParam.selectedNode.ntemplatemanipulationcode})).then(function(response){sortData(response.data);var Specification=constructOptionList(response.data||[],\"nallottedspeccode\",\"sspecname\",false,false,true).get(\"OptionList\");var selectedComponent=undefined;inputParam.selectedRecord[\"nallottedspeccode\"]=Specification.length>0?{value:Specification[0].value,label:Specification[0].label,item:Specification[0].item}:\"\";inputParam.selectedRecord[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";inputParam.selectedRecord[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;dispatch({type:DEFAULT_RETURN,payload:{ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,primaryKey:inputParam.primaryKey,Specification:Specification,selectedNode:inputParam.selectedNode,selectedRecord:inputParam.selectedRecord,Test:[],selectedComponent:selectedComponent,SelectedTest:[],loading:false,showSample:undefined}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}};};export function AddComponents(Map){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var ComponentTestBySpec=rsapi.post(\"/registration/getComponentBySpec\",Map);var timezone=rsapi.post(\"timezone/getTimeZone\");urlArray=[ComponentTestBySpec,timezone];Axios.all(urlArray).then(function(response){var lstComponentMap=constructOptionList(response[0].data.lstComponent||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var timeZoneListMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var lstComponent=lstComponentMap.get(\"OptionList\");var timeZoneList=timeZoneListMap.get(\"OptionList\");var dreceiveddate=null;if(lstComponent[0].item.sreceiveddate)dreceiveddate=rearrangeDateFormat(Map[\"userinfo\"],lstComponent[0].item.sreceiveddate);//new Date(lstComponent[0].item.sreceiveddate);//|| [];\nvar selectComponent={sreceiveddate:dreceiveddate,dreceiveddate:dreceiveddate,ntzdreceivedate:{\"label\":Map[\"userinfo\"].stimezoneid,\"value\":Map[\"userinfo\"].ntimezonecode},stzdreceivedate:Map[\"userinfo\"].stimezoneid,scomments:\"\",nallottedspeccode:lstComponent[0].item.nallottedspeccode};var CurrentTime=dreceiveddate;dispatch({type:DEFAULT_RETURN,payload:{loadComponent:true,lstComponent:lstComponent,dreceiveddate:dreceiveddate,ChildscreenName:\"Component\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",selectComponent:selectComponent,parentPopUpSize:\"lg\",CurrentTime:CurrentTime,timeZoneList:timeZoneList,loading:false,openPortal:true,openModal:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getTest(objComponent,LoginProps,nneedsubsample,specBasedComponent){return function(dispatch){if(Object.keys(objComponent).length>0){dispatch(initRequest(true));rsapi.post(\"/registration/getTestfromDB\",{nspecsampletypecode:objComponent.nspecsampletypecode,slno:objComponent.slno,nneedsubsample:nneedsubsample,nallottedspeccode:objComponent.nallottedspeccode,specBasedComponent:specBasedComponent}).then(function(response){var TestData=response.data;var Test=LoginProps.Test||[];var componentTest=Test[objComponent.slno]?Test[objComponent.slno]:[];var TestCombined=filterRecordBasedOnTwoArrays(TestData,componentTest,\"ntestgrouptestcode\");// const lstComponentMap = constructOptionList(TestCombined|| [], \"ntestgrouptestcode\",\n//\"stestsynonym\", undefined, undefined, true);\ndispatch({type:DEFAULT_RETURN,payload:{TestCombined:TestCombined,loadTest:true,openChildModal:false,ChildscreenName:\"Test\",childoperation:\"create\",parentPopUpSize:\"lg\",loading:false}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTCOMPONENTTOADDTEST\"}));}};}export function addsubSample(masterData,userinfo,columnList,selectComponent,childColumnList,SubSamplecomboComponents,SubSamplewithoutCombocomponent,specBasedComponent,Map,Component,isServiceRequired,SubSamplecomboData){if(isServiceRequired){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userinfo});urlArray[1]=actualService;if(specBasedComponent===4){Component=Component?Component:[];var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1,//nneedsubsample: nneedsubsample,\n// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent});urlArray[2]=TestGet;}Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(columnList,response[1].data,selectComponent,childColumnList,SubSamplewithoutCombocomponent);var TestCombined=[];if(specBasedComponent===4){TestCombined=response[2].data;}var comboData1=newcomboData.comboData;var selectedRecord1=newcomboData.selectedRecord;SubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.mandatory){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?new Date():\"\";}// if (componentrow.timezone) {\n//     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\n//         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\n//         defaulttimezone ? defaulttimezone : -1\n// }\n}});dispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:[],openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:selectedRecord1,SubSamplecomboData:comboData1,SubSamplecomboComponents:SubSamplecomboComponents,SubSamplewithoutCombocomponent:SubSamplewithoutCombocomponent,TestCombined:TestCombined,parentSubSampleColumnList:columnList,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}else{var newcomboData=parentChildComboLoad(columnList,SubSamplecomboData,selectComponent,childColumnList,SubSamplewithoutCombocomponent);return function(dispatch){if(specBasedComponent===4){rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:Component?Object.keys(Component).length+1:1,//nneedsubsample: nneedsubsample,\n// nallottedspeccode: objComponent.nallottedspeccode,\nspecBasedComponent:specBasedComponent}).then(function(response){var TestCombined=response.data;dispatch({type:DEFAULT_RETURN,payload:{ChildscreenName:\"SubSample\",showSaveContinue:true,openChildModal:false,childoperation:\"create\",parentPopUpSize:\"lg\",loading:false,lstComponent:[],openPortal:true,openModal:false,operation:\"create\",loadSubSample:true,selectComponent:newcomboData.selectedRecord,TestCombined:TestCombined}});});}};}}export function addSubSampleSaveContinue(Map1,Map,specBasedComponent,Component){//  const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\n//     selectComponent, childColumnList, SubSamplewithoutCombocomponent)\nreturn function(dispatch){if(specBasedComponent===4){rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:Map1.Component?Object.keys(Map1.Component).length+1:1,specBasedComponent:specBasedComponent}).then(function(response){var TestCombined=response.data;dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},Map1),{},{loading:false,TestCombined:TestCombined})});});}};}export function editSubSample(Map,component,userInfo,specBasedComponent){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var Unit=rsapi.post(\"/unit/getUnit\",{userinfo:userInfo});var Componnet={};if(specBasedComponent===4){Componnet=rsapi.post(\"/component/getComponent\",{userinfo:userInfo});}else{Componnet=rsapi.post(\"/registration/getComponentBySpec\",Map);}urlArray=[Unit,Componnet];Axios.all(urlArray).then(function(response){var lstUnitMap=constructOptionList(response[0].data||[],\"nunitcode\",\"sunitname\",undefined,undefined,true);var comp=[];if(specBasedComponent===4){comp=response[1].data;}else{comp=response[1].data.lstComponent;}var lstComponentMap=constructOptionList(comp||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var lstUnit=lstUnitMap.get(\"OptionList\");var lstComponent=lstComponentMap.get(\"OptionList\");component[\"nunitcode\"]={label:component.sunitname,value:component.nunitcode};component[\"ssubsamplename\"]=component[\"ssubsamplename\"];component[\"ssampleqty\"]=component[\"ssampleqty\"];component[\"scomments\"]=component[\"scomments\"];component[\"ncomponentcode\"]={label:component.scomponentname,value:component.ncomponentcode};dispatch({type:DEFAULT_RETURN,payload:{loadSubSample:true,childoperation:\"update\",ChildscreenName:\"SubSample\",Unit:lstUnit,openChildModal:false,selectComponent:component,parentPopUpSize:\"lg\",loading:false,lstComponent:lstComponent}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function insertRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/createRegistration\",inputParam.inputData).then(function(response){var _objectSpread5;var RegistrationGetSample=updatedObjectWithNewElement(response.data[\"selectedSample\"],masterData.RegistrationGetSample);var selectedSample=response.data[\"selectedSample\"];var RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];var RegistrationGetTest=response.data[\"selectedTest\"];var selectedSubSample=RegistrationGetSubSample;RegistrationGetTest=sortData(RegistrationGetTest,\"npreregno\",\"desc\");var selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];if(inputParam.inputData.nneedsubsample){RegistrationGetSubSample=sortData(response.data[\"RegistrationGetSubSample\"],'npreregno','desc');selectedSubSample=RegistrationGetSubSample.length>0?[RegistrationGetSubSample[0]]:[];RegistrationGetTest=RegistrationGetTest.filter(function(x){return x.ntransactionsamplecode===selectedSubSample[0].ntransactionsamplecode;});selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];}// RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\nif(inputParam.multipleselectionFlag){selectedSample=updatedObjectWithNewElement(response.data[\"selectedSample\"],masterData.selectedSample);updatedObjectWithNewElement(response.data[\"selectedSubSample\"],masterData.RegistrationGetSubSample);updatedObjectWithNewElement(response.data[\"selectedTest\"],masterData.RegistrationGetTest);RegistrationGetSubSample=masterData.RegistrationGetSubSample;RegistrationGetTest=masterData.RegistrationGetTest;}masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedSample:selectedSample,selectedSubSample:selectedSubSample,selectedTest:selectedTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationGetTest:RegistrationGetTest,RegistrationGetSample:RegistrationGetSample});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},(_objectSpread5={openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:undefined,loading:false,loadPreregister:false,showSample:undefined,openPortal:false,selectedSpec:{},selectComponent:{},SelectedTest:{},selectedComponent:{},Component:[]},_defineProperty(_objectSpread5,\"selectedRecord\",{}),_defineProperty(_objectSpread5,\"SelectedTest\",[]),_defineProperty(_objectSpread5,\"Test\",[]),_defineProperty(_objectSpread5,\"selectedComponent\",{}),_objectSpread5));inputParam.postParamList[0]['clearFilter']='yes';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});});};}export function getRegistrationSample(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"registration/getRegistrationByFilterSubmit\",_objectSpread({},inputData.inputData)).then(function(response){var masterData=_objectSpread(_objectSpread({},inputData.masterData),response.data);if(inputData.searchSampleRef!==undefined&&inputData.searchSampleRef.current!==null){inputData.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}var respObject={};if(inputData.selectedFilter){respObject={selectedFilter:_objectSpread({},inputData.selectedFilter)};}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,skip:0,testskip:0,take:undefined,testtake:undefined,subsampleskip:0,subsampletake:undefined,showSample:undefined},respObject),{},{activeSampleTab:inputData.inputData.activeSampleTab})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationsubSampleDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,nneedsubsample:inputData.nneedsubsample,checkBoxOperation:inputData.checkBoxOperation};var activeName=\"\";var dataStateName=\"\";var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"registration/getRegistrationSubSample\",inputParamData).then(function(response){sortData(response.data);var masterData={};var skipInfo={};var oldSelectedTest=inputData.masterData.selectedTest;if(subSample){var oldSelectedSubSample=inputData.masterData.selectedSubSample;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedSubSample:inputData.masterData.RegistrationGetSubSample.length>0?[inputData.masterData.RegistrationGetSubSample[0]]:[]});if(inputData.checkBoxOperation===1||inputData.checkBoxOperation===7){var wholeSubSampleList=masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(subsample,index){if(!wholeSubSampleList.includes(subsample.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}});if(oldSelectedSubSample.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSubSample:oldSelectedSubSample});}var selectedTest=getSameRecordFromTwoArrays(oldSelectedTest,masterData.selectedSubSample,'npreregno');masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:selectedTest});}if(inputData.checkBoxOperation===3){masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:masterData.RegistrationGetTest.length>0?[masterData.RegistrationGetTest[0]]:[]});}var _inputData=inputData,testskip=_inputData.testskip,testtake=_inputData.testtake,subsampleskip=_inputData.subsampleskip,subsampletake=_inputData.subsampletake;var bool=false;if(inputData.masterData.RegistrationGetSubSample.length<inputData.subsampleskip){testskip=0;subsampleskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake,subsampleskip:subsampleskip,subsampletake:subsampletake};}}else{//let oldSelectedTest = inputData.masterData.selectedTest\n//  let oldSelectedSubSample = inputData.masterData.selectedSubSample\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[],selectedSubSample:inputData.masterData.RegistrationGetSubSample});var RegistrationTestComment=[];var RegistrationParameter=[];if(inputData.checkBoxOperation===7||inputData.checkBoxOperation===1){var wholeTestList=masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var keepOld=false;var ntransactiontestcode;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"\";}switch(inputData.activeTestTab){case\"IDS_PARAMETERRESULTS\":RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;default:RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var ResponseData=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment1=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData));}var _ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment1,_ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_PARAMETERRESULTS\":var resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var RegistrationParameter1=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(resultResponseData));var ntransactiontestcode1=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(RegistrationParameter1,ntransactiontestcode1,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var ResponseData1=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData1));}var ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment2,ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else{switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":RegistrationTestComment=response.data.RegistrationTestComment?_toConsumableArray(response.data.RegistrationTestComment):[];activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_PARAMETERRESULTS\":RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}masterData['RegistrationTestComment']=RegistrationTestComment;masterData[\"RegistrationParameter\"]=RegistrationParameter;var _inputData2=inputData,_testskip=_inputData2.testskip,_testtake=_inputData2.testtake;var _bool=false;if(inputData.masterData.RegistrationGetTest.length<inputData.testskip){_testskip=0;_bool=true;}if(_bool){skipInfo={testskip:_testskip,testtake:_testtake};}}if(inputData.masterData.selectedSample&&inputData.sampleGridDataState&&inputData.masterData.selectedSample.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}var inputParam={attachmentskip:undefined};if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo),{},{inputParam:inputParam})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var bool=false;var skipInfo={};var _inputData3=inputData,testskip=_inputData3.testskip,testtake=_inputData3.testtake,subsampletake=_inputData3.subsampletake,subsampleskip=_inputData3.subsampleskip;var oldSelectedTest=inputData.masterData.selectedTest;var oldSelectedSubSample=inputData.masterData.selectedSubSample;var TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=true;}else{isGrandChildGetRequired=false;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var selectedSample=inputData.selectedSample;var filterTestSameOldSelectedTest=getSameRecordFromTwoArrays(oldSelectedTest,inputData.masterData.RegistrationGetTest,\"ntransactiontestcode\");var selectedTest=filterTestSameOldSelectedTest.length>0?filterTestSameOldSelectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[];var ntransactiontestcode=selectedTest.length>0?selectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\";var selectedSubSample=inputData.masterData.RegistrationGetSubSample;if(subSample){var filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");selectedSubSample=filterSelectedSubSample.length>0?filterSelectedSubSample:[inputData.masterData.RegistrationGetSubSample[0]];if(inputData.masterData.RegistrationGetSubSample.length<=inputData.subsampleskip){subsampleskip=0;skipInfo={subsampletake:subsampletake,subsampleskip:subsampleskip};}}var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:selectedSample,selectedSubSample:selectedSubSample,selectedTest:selectedTest});if(inputData.masterData.RegistrationGetTest.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{testskip:testskip,testtake:testtake});}inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:ntransactiontestcode,masterData:masterData,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3,skipInfo:skipInfo});if(subSample){if(selectedTest.length===0){inputData[\"npreregno\"]=selectedSubSample.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=selectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"RegistrationGetTest\"];dispatch(getRegistrationTestDetail(inputData,true));}else{dispatch(getTestChildTabDetailRegistration(inputData,true));}}else{dispatch(getTestChildTabDetailRegistration(inputData,true));}}else{var _masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample,selectedPreregno:inputData.npreregno,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[],// RegistrationTestComment,\nselectedSubSample:inputData.masterData.RegistrationGetSubSample});var subsamplecheck=true;if(subSample){var SubSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");if(SubSampleSelected.length>0){var _filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");if(_filterSelectedSubSample.length===0){var wholeSubSample=_masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(test,index){if(!wholeSubSample.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});if(oldSelectedSubSample.length===0&&wholeSubSample.length>0&&_masterData.selectedTest.length===0){var selectedSubSample1=[inputData.masterData.RegistrationGetSubSample[0]];_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedSubSample:selectedSubSample1,selectedTest:[]});inputData=_objectSpread(_objectSpread({},inputData),_masterData);inputData[\"npreregno\"]=selectedSubSample1.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=selectedSubSample1.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"RegistrationGetTest\"];subsamplecheck=false;dispatch(getRegistrationTestDetail(inputData,true));}}else{oldSelectedSubSample=_filterSelectedSubSample;}}else{var _wholeSubSample=_masterData.RegistrationGetSubSample.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(test,index){if(!_wholeSubSample.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});}if(subsamplecheck){_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedSubSample:oldSelectedSubSample});}if(inputData.masterData.RegistrationGetSubSample.length<=inputData.subsampleskip){subsampleskip=0;_skipInfo={subsampleskip:subsampleskip,subsampletake:subsampletake};}}var wholeTestList=_masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode2;if(oldSelectedTest.length>0){keepOld=true;_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode2=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"-1\";}_masterData[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode2,\"ntransactiontestcode\");_masterData[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode2,\"ntransactiontestcode\");var _skipInfo={};if(inputData.masterData.RegistrationGetTest.length<=inputData.testskip){testskip=0;bool=true;}if(bool){_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},{testskip:testskip,testtake:testtake});}var dataStateArray=[{activeName:'selectedSample',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData[arr.activeName]&&_masterData[arr.activeName].length<=inputData[arr.dataStateName].skip){_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{_skipInfo=_objectSpread(_objectSpread({},_skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab},_skipInfo)});}}};}export function getRegistrationTestDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionsamplecode:inputData.ntransactionsamplecode,ntransactionstatus:inputData.ntransactionstatus,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,userinfo:inputData.userinfo,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode};var activeName=\"\";var dataStateName=\"\";dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"registration/getRegistrationTest\",inputParamData).then(function(response){sortData(response.data);var oldSelectedTest=inputData.masterData.selectedTest;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:inputData.selectedSubSample,selectedTransactionsamplecode:inputData.ntransactionsamplecode,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[]// RegistrationTestComment,\n});//let wholeRegistrationTestComments = [];\nvar RegistrationTestComment=[];var RegistrationParameter=[];if(inputData.checkBoxOperation===1){var wholeTestList=masterData.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var keepOld=false;var ntransactiontestcode;if(oldSelectedTest.length>0){keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:oldSelectedTest});}else{ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"\";}switch(inputData.activeTestTab){case\"IDS_PARAMETERRESULTS\":RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;default:RegistrationParameter=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":var ResponseData=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment1=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment1=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData));}var _ntransactiontestcode3=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment1,_ntransactiontestcode3,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_PARAMETERRESULTS\":var resultResponseData=response.data.RegistrationParameter?response.data.RegistrationParameter:[];var RegistrationParameter1=[].concat(_toConsumableArray(inputData.masterData.RegistrationParameter),_toConsumableArray(resultResponseData));var ntransactiontestcode1=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationParameter=getRecordBasedOnPrimaryKeyName(RegistrationParameter1,ntransactiontestcode1,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:var ResponseData1=response.data.RegistrationTestComment?response.data.RegistrationTestComment:[];var RegistrationTestComment2=[];if(inputData.masterData.RegistrationTestComment!==undefined){RegistrationTestComment2=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(ResponseData1));}var ntransactionTestCode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:-1;RegistrationTestComment=getRecordBasedOnPrimaryKeyName(RegistrationTestComment2,ntransactionTestCode,\"ntransactiontestcode\");activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}// RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\n}else{switch(inputData.activeTestTab){case\"IDS_TESTCOMMENTS\":RegistrationTestComment=response.data.RegistrationTestComment?_toConsumableArray(response.data.RegistrationTestComment):[];activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_PARAMETERRESULTS\":RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;default:RegistrationParameter=response.data.RegistrationParameter?_toConsumableArray(response.data.RegistrationParameter):[];activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;}}masterData['RegistrationTestComment']=RegistrationTestComment;masterData[\"RegistrationParameter\"]=RegistrationParameter;var _inputData4=inputData,testskip=_inputData4.testskip,testtake=_inputData4.testtake;var bool=false;var skipInfo={};if(inputData.masterData.RegistrationGetTest.length<inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake};}if(inputData.masterData.selectedSample&&inputData.sampleGridDataState&&inputData.masterData.selectedSample.length<=inputData.sampleGridDataState.skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{skip:0,sort:undefined,filter:undefined})});}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{sampleGridDataState:_objectSpread(_objectSpread({},inputData.sampleGridDataState),{},{sort:undefined,filter:undefined})});}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTest']=undefined;}var inputParam={attachmentskip:undefined};if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,skip:undefined,take:undefined},skipInfo),{},{inputParam:inputParam})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var oldSelectedTest=inputData.masterData.selectedTest;var TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=true;}else{isGrandChildGetRequired=false;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var ntransactiontestcode=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode.toString():\"-1\";var selectedSubSample=inputData.selectedSubSample;// let selectedPreregno = inputData.npreregno;\nvar selectedTest=inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[];// let selectedSubSample = inputData.masterData.RegistrationGetSubSample\nvar masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:selectedSubSample,selectedTest:selectedTest});inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:ntransactiontestcode,masterData:masterData,selectedTest:selectedTest,selectedSubSample:selectedSubSample,checkBoxOperation:3});dispatch(getTestChildTabDetailRegistration(inputData,true));}else{var _masterData2=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSubSample:inputData.selectedSubSample,selectedTransactioncode:inputData.ntransactionsamplecode,selectedTest:inputData.masterData.RegistrationGetTest.length>0?[inputData.masterData.RegistrationGetTest[0]]:[]});var wholeTestList=_masterData2.RegistrationGetTest.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode4;if(oldSelectedTest.length>0){keepOld=true;_masterData2=_objectSpread(_objectSpread({},_masterData2),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode4=inputData.masterData.RegistrationGetTest.length>0?inputData.masterData.RegistrationGetTest[0].ntransactiontestcode:\"-1\";}_masterData2[\"RegistrationTestComment\"]=keepOld?inputData.masterData.RegistrationTestComment?inputData.masterData.RegistrationTestComment:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode4,\"ntransactiontestcode\");_masterData2[\"RegistrationParameter\"]=keepOld?inputData.masterData.RegistrationParameter?inputData.masterData.RegistrationParameter:[]:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter,_ntransactiontestcode4,\"ntransactiontestcode\");var skipInfo={};var dataStateArray=[{activeName:'selectedSample',dataStateName:'sampleGridDataState'},{activeName:'RegistrationSourceCountry',dataStateName:'sourceDataState'},{activeName:'RegistrationTestComment',dataStateName:'testCommentDataState'},{activeName:'RegistrationParameter',dataStateName:'resultDataState'}];dataStateArray.map(function(arr){if(inputData[arr.dataStateName]&&_masterData2[arr.activeName]&&_masterData2[arr.activeName].length<=inputData[arr.dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},arr.dataStateName,_objectSpread(_objectSpread({},inputData[arr.dataStateName]),{},{sort:undefined,filter:undefined})));}return null;});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:_masterData2,loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab},skipInfo)});}}};}export function acceptRegistration(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/acceptRegistration\",inputParam.inputData).then(function(response){if(response.data.rtn===undefined||response.data.rtn===\"Success\"||response.data.rtn===\"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"||response.data.rtn===\"IDS_ALLSAMPLESAREREGISTERED\"||response.data.rtn===\"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\"){replaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");delete response.data[\"RegistrationGetSample\"];delete response.data[\"RegistrationGetSubSample\"];delete response.data[\"RegistrationGetTest\"];var masterData=_objectSpread(_objectSpread(_objectSpread({},LoginProps),response.data),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));if(response.data.rtn===\"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"||response.data.rtn===\"IDS_ALLSAMPLESAREREGISTERED\"||response.data.rtn===\"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\"){toast.warn(intl.formatMessage({id:response.data.rtn}));}}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});toast.warn(response.data.rtn);}}).catch(function(error){toast.error(error.message);});};}export var addMoreTest=function addMoreTest(inputParam,ncontrolCode){return function(dispatch){var sampleList=inputParam.sampleList;var value=false;if(inputParam.selectedsubsample&&inputParam.selectedsubsample.length>0){value=inputParam.selectedsubsample.some(function(obj){return obj.nspecsampletypecode!==inputParam.selectedsubsample[0].nspecsampletypecode;});if(value){return toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}sampleList=sampleList?_toConsumableArray(sampleList.slice(inputParam.skip,inputParam.take)):[];var selectedsample=getSameRecordFromTwoArrays(sampleList,inputParam.selectedsample,\"npreregno\");var selectsubsample=getSameRecordFromTwoArrays(sampleList,inputParam.selectedsubsample,\"npreregno\");if(selectedsample&&selectedsample.length>0){var findTransactionStatus=_toConsumableArray(new Set(selectedsample.map(function(item){return item.ntransactionstatus;})));if(findTransactionStatus.length===1){if(findTransactionStatus[0]!==transactionStatus.REJECT&&findTransactionStatus[0]!==transactionStatus.CANCELLED){if(findTransactionStatus[0]!==transactionStatus.CERTIFIED&&findTransactionStatus[0]!==transactionStatus.SENT){var findApprovalVersion=_toConsumableArray(new Set(selectedsample.map(function(item){return item.napprovalversioncode;})));if(findApprovalVersion.length===1){var findSampleSpec=_toConsumableArray(new Set(selectedsample.map(function(item){return item.nallottedspeccode;})));//const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\nif(findSampleSpec.length===1)//&& findComponent.length === 1 \n{dispatch(initRequest(true));rsapi.post(\"/registration/getMoreTest\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{availableTest:response.data,loadChildTest:true,loading:false,ncontrolCode:ncontrolCode,screenName:\"IDS_TEST\",operation:\"create\",openModal:true,parentPopUpSize:\"lg\",selectedRecord:{},showSample:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(_this.props.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_TESTCANNOTBEFORCERTIFIEDSAMPLES\"}));}}else{////     toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCANCELLEDREJECTSAMPLES\" }));\ntoast.warn(intl.formatMessage({id:\"IDS_SAMPLEISREJECTEDORCANCELLED\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSAMPLE\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSUBSAMPLE\"}));}};};export var createRegistrationTest=function createRegistrationTest(inputParam,masterData,modalName){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.classUrl+\"/\"+inputParam.operation+inputParam.methodUrl,_objectSpread({},inputParam.inputData)).then(function(response){var _payload;var RegistrationGetTest=updatedObjectWithNewElement(masterData[\"RegistrationGetTest\"],response.data[\"RegistrationGetTest\"]);masterData=_objectSpread(_objectSpread({},masterData),{},{RegistrationGetTest:RegistrationGetTest,selectedTest:response.data[\"RegistrationGetTest\"],RegistrationParameter:response.data.RegistrationParameter// RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, masterData.RegistrationGetSample, 'npreregno')\n});dispatch({type:DEFAULT_RETURN,payload:(_payload={masterData:masterData},_defineProperty(_payload,modalName,false),_defineProperty(_payload,\"loading\",false),_defineProperty(_payload,\"loadChildTest\",false),_defineProperty(_payload,\"showSample\",undefined),_defineProperty(_payload,\"openModal\",false),_defineProperty(_payload,\"selectedRecord\",{}),_payload)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export function getEditRegistrationComboService(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent){return function(dispatch){dispatch(initRequest(true));var _inputParam=_objectSpread({},inputParam),userInfo=_inputParam.userInfo,operation=_inputParam.operation;var npreregno=inputParam.mastertoedit[inputParam.primaryKeyName];var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo});var selectedRegistration=rsapi.post(\"/registration/getEditRegistrationDetails\",_objectSpread(_objectSpread({},inputParam.editRegParam),{},{npreregno:npreregno}));urlArray=[timeZoneService,actualService,selectedRegistration];Axios.all(urlArray).then(function(response){var selectedRecord=_objectSpread({},response[2].data[\"SelectedRegistration\"][0]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);// const recordToEdit = { ...response[2].data[\"SelectedRegistration\"][0] };\n//  const currentTime = rearrangeDateFormat(userInfo, response[6].data);\nvar timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};//  const newcomboData = parentChildComboLoad(columnList, response[1].data,\n// selectedRecord, childColumnList, withoutCombocomponent)\nif(selectedRecord.ntransactionstatus===transactionStatus.CANCELLED||selectedRecord.ntransactionstatus===transactionStatus.REJECT){toast.warn(intl.formatMessage({id:\"IDS_CANNOTEDITCANCELLEDSAMPLE\"}));dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{var languagetypeCode=undefined;var comboData=response[1].data;var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoad(x,comboData,selectedRecord1,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}var _ref2=[],Specification=_ref2.Specification,AgaramTree=_ref2.AgaramTree,ActiveKey=_ref2.ActiveKey,FocusKey=_ref2.FocusKey,OpenNodes=_ref2.OpenNodes;var selectedSpec={};Specification=constructOptionList(response[2].data[\"Specification\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true).get(\"OptionList\");AgaramTree=response[2].data[\"AgaramTree\"];ActiveKey=response[2].data[\"FocusKey\"];FocusKey=response[2].data[\"ActiveKey\"];OpenNodes=response[2].data[\"OpenNodes\"];//Manufacturer = response.data[\"Manufacturer\"];\nselectedSpec[\"nallottedspeccode\"]=Specification.length>0?{\"value\":Specification[0].value,\"label\":Specification[0].label,\"item\":Specification[0].item}:\"\";selectedSpec[\"sversion\"]=Specification.length>0?Specification[0].item.sversion:\"\";selectedSpec[\"ntemplatemanipulationcode\"]=Specification.length>0?Specification[0].item.ntemplatemanipulationcode:-1;selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedSpec);dispatch({type:DEFAULT_RETURN,payload:{AgaramTree:AgaramTree,FocusKey:FocusKey,ActiveKey:ActiveKey,OpenNodes:OpenNodes,selectedSpec:selectedSpec,Specification:Specification,// statustoEditDetail: response[2].data[\"ApprovalConfigRole\"] || {},\n// currentTime,\noperation:operation,//  screenName: popUpLabel,\n// PopUpLabel: popUpLabel,\ntimeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openPortal:true,ncontrolCode:inputParam.editRegParam.ncontrolCode,loadPreregister:true,parentPopUpSize:\"xl\",loading:false,showSample:undefined,comboData:comboValues.comboData//  regRecordToEdit:recordToEdit\n}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function updateRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/updateRegistration\",inputParam.inputData).then(function(response){sortData(response.data);replaceUpdatedObject(response.data[\"RegistrationGetSample\"],masterData.RegistrationGetSample,\"npreregno\");//replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\nvar RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];var RegistrationGetTest=response.data[\"RegistrationGetTest\"];masterData=_objectSpread(_objectSpread({},masterData),{},{selectedSample:response.data[\"selectedSample\"],selectedSubSample:response.data[\"selectedSubSample\"],selectedTest:response.data[\"selectedTest\"],RegistrationGetTest:RegistrationGetTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationParameter:response.data[\"RegistrationParameter\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openPortal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,loadPreregister:false,selectedRecord:{},showSample:undefined}});// let inputData = {\n//     masterData,\n//     selectedTest: masterData.selectedTest,\n//     ntransactiontestcode: masterData.selectedTest ?\n//         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n//     npreregno: masterData.selectedSample ?\n//         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n//     userinfo: inputParam.inputData.userinfo,\n//     activeTestTab : masterData.activeTestTab,\n//     screenName: masterData.activeTestTab,\n//     resultDataState: inputParam.resultDataState,\n//     testCommentDataState: inputParam.testCommentDataState,\n// }\n// dispatch(getTestChildTabDetail(inputData, true))\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.warn(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelTestAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelTest\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\nvar masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedTest:response.data[\"selectedTest\"],// RegistrationGetTest:response.data[\"RegistrationGetTest\"],\nRegistrationGetTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\")//  RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, LoginProps.RegistrationGetSample, 'npreregno')\n});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:{},loading:false,loadPreregister:false,showSample:undefined});inputParam.postParamList[0]['clearFilter']='no';dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function cancelSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelSample\",inputParam.inputData).then(function(response){replaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");var masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function addsubSampleRegistration(masterData,userinfo,regcolumnList,selectRecord,regchildColumnList,regSubSamplecomboComponents,regSubSamplewithoutCombocomponent,Map,ncontrolcode){return function(dispatch){dispatch(initRequest(true));var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");urlArray[0]=timeZoneService;var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:regcolumnList,childcolumnlist:regchildColumnList,userinfo:userinfo});urlArray[1]=actualService;var specBasedComponent=4;if(specBasedComponent===4){var TestGet=rsapi.post(\"/registration/getTestfromDB\",{nallottedspeccode:Map[\"nallottedspeccode\"],slno:1,specBasedComponent:4});urlArray[2]=TestGet;}Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userinfo.stimezoneid,value:userinfo.ntimezonecode};var newcomboData=parentChildComboLoad(regcolumnList,response[1].data,selectRecord,regchildColumnList,regSubSamplewithoutCombocomponent);var TestCombined=[];if(specBasedComponent===4){TestCombined=response[2].data;}var comboData1=newcomboData.comboData;var selectedRecord1=newcomboData.selectedRecord;regSubSamplewithoutCombocomponent.map(function(componentrow){if(componentrow.inputtype===\"date\"){if(componentrow.mandatory){selectedRecord1[componentrow.label]=componentrow.loadcurrentdate?new Date():\"\";}// if (componentrow.timezone) {\n//     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\n//         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\n//         defaulttimezone ? defaulttimezone : -1\n// }\n}});dispatch({type:DEFAULT_RETURN,payload:{screenName:\"SubSample\",showSaveContinue:false,parentPopUpSize:\"lg\",loading:false,lstComponent:[],openModal:true,operation:\"create\",loadRegSubSample:true,selectedRecord:selectedRecord1,regSubSamplecomboData:comboData1,regSubSamplecomboComponents:regSubSamplecomboComponents,regSubSamplewithoutCombocomponent:regSubSamplewithoutCombocomponent,TestCombined:TestCombined,regparentSubSampleColumnList:regcolumnList,ncontrolCode:ncontrolcode,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,masterData:masterData}});}).catch(function(error){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function saveSubSample(Map){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/createSubSample\",Map).then(function(response){var _respObject;// let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\n// let selectedSample = response.data[\"selectedSample\"];\nvar RegistrationGetSubSample=updatedObjectWithNewElement(Map.masterData.RegistrationGetSubSample,response.data[\"selectedSubSample\"]);var RegistrationGetTest=response.data[\"selectedTest\"];var selectedSubSample=RegistrationGetSubSample.length>0?[RegistrationGetSubSample[0]]:[];RegistrationGetTest=sortData(RegistrationGetTest,\"npreregno\",\"desc\");var selectedTest=RegistrationGetTest.length>0?[RegistrationGetTest[0]]:[];var RegistrationParameter=response.data[\"RegistrationParameter\"];RegistrationParameter=getSameRecordFromTwoArrays(RegistrationParameter,selectedTest,'ntransactiontestcode');var masterData=_objectSpread({},Map.masterData);masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedSubSample:selectedSubSample,selectedTest:selectedTest,RegistrationGetSubSample:RegistrationGetSubSample,RegistrationGetTest:RegistrationGetTest,RegistrationParameter:RegistrationParameter});var respObject=(_respObject={masterData:masterData,openModal:false,loadEsign:false,showConfirmAlert:false,selectedRecord:undefined,loading:false,loadPreregister:false,showSample:undefined,openPortal:false,selectedSpec:{},selectComponent:{},SelectedTest:{},selectedComponent:{},Component:[]},_defineProperty(_respObject,\"selectedRecord\",{}),_defineProperty(_respObject,\"SelectedTest\",[]),_defineProperty(_respObject,\"Test\",[]),_defineProperty(_respObject,\"selectedComponent\",{}),_respObject);// inputParam.postParamList[0]['clearFilter'] = 'yes'\n// dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openModal:false,loadEsign:false,loading:false,showSample:undefined,selectedRecord:{},loadRegSubSample:false}});}).catch(function(error){// console.log(error);\ntoast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showConfirmAlert:false}});});};}export function getEditSubSampleComboService(inputParam,columnList,selectedRecord1,childColumnList,comboComponents,withoutCombocomponent){return function(dispatch){dispatch(initRequest(true));var _inputParam2=_objectSpread({},inputParam),userInfo=_inputParam2.userInfo,operation=_inputParam2.operation;var ntransactionsamplecode=inputParam.mastertoedit[inputParam.primaryKeyName];var urlArray=[];var timeZoneService=rsapi.post(\"timezone/getTimeZone\");var actualService=rsapi.post(\"dynamicpreregdesign/getComboValues\",{parentcolumnlist:columnList,childcolumnlist:childColumnList,userinfo:userInfo});var selectedRegistration=rsapi.post(\"/registration/getEditRegistrationSubSampleDetails\",_objectSpread(_objectSpread({},inputParam.editRegParam),{},{ntransactionsamplecode:ntransactionsamplecode}));urlArray=[timeZoneService,actualService,selectedRegistration];Axios.all(urlArray).then(function(response){var selectedRecord=_objectSpread({},response[2].data[\"SelectedRegistrationSubSample\"][0]);selectedRecord=_objectSpread(_objectSpread({},selectedRecord),selectedRecord['jsondata']);var timeZoneMap=constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var defaultTimeZone={label:userInfo.stimezoneid,value:userInfo.ntimezonecode};if(selectedRecord.ntransactionstatus!==transactionStatus.PREREGISTER){toast.warn(intl.formatMessage({id:\"IDS_SELECTPREREGISTERSUBSAMPLETOEDIT\"}));dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else{var languagetypeCode=undefined;var comboData=response[1].data;var comboValues={};if(columnList.length>0){columnList.map(function(x){if(x.inputtype==='combo'){if(comboData[x.label]&&comboData[x.label].length>0)//&& comboData[x.label][0].hasOwnProperty(x.source) \n{if(comboData[x.label].length>0){if(comboData[x.label][0].label===undefined){var optionList=constructjsonOptionList(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);comboData[x.label]=optionList.get(\"OptionList\");}else{comboData[x.label]=comboData[x.label];var _optionList2=constructjsonOptionDefault(comboData[x.label]||[],x.valuemember,x.displaymember,false,false,true,undefined,x.source,x.isMultiLingual,languagetypeCode);}}else{comboData[x.label]=[];}//comboValues = childComboLoad(x, comboData, selectedRecord, \n//   childColumnList, withoutCombocomponent)\\\ncomboValues=childComboLoad(x,comboData,selectedRecord1,childColumnList,withoutCombocomponent);}else{comboValues={\"comboData\":comboData};}}else{comboValues=_objectSpread({comboData:comboData},comboValues);}});}else{comboValues={\"comboData\":comboData};}selectedRecord=_objectSpread({},selectedRecord);dispatch({type:DEFAULT_RETURN,payload:{operation:operation,timeZoneList:timeZoneList,defaultTimeZone:defaultTimeZone,selectedRecord:selectedRecord,openModal:true,ncontrolCode:inputParam.editSubSampleRegParam.ncontrolCode,parentPopUpSize:\"lg\",loading:false,showSample:undefined,regSubSamplecomboData:comboValues.comboData,loadRegSubSample:true//  regRecordToEdit:recordToEdit\n}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function onUpdateSubSampleRegistration(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/updateRegistrationSubSample\",inputParam.inputData).then(function(response){sortData(response.data);replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],masterData.RegistrationGetSubSample,\"ntransactionsamplecode\");//replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\n//  let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\nvar RegistrationGetTest=response.data[\"RegistrationGetTest\"];masterData=_objectSpread(_objectSpread({},masterData),{},{// selectedSample: response.data[\"selectedSample\"],\nselectedSubSample:response.data[\"selectedSubSample\"],selectedTest:response.data[\"selectedTest\"],RegistrationGetTest:RegistrationGetTest,// RegistrationGetSubSample,\nRegistrationParameter:response.data[\"RegistrationParameter\"]});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,openModal:false,loading:false,showConfirmAlert:false,regDateEditConfirmMessage:undefined,loadEsign:false,loadRegSubSample:false,selectedRecord:{},showSample:undefined,screenName:\"SubSample\"}});// let inputData = {\n//     masterData,\n//     selectedTest: masterData.selectedTest,\n//     ntransactiontestcode: masterData.selectedTest ?\n//         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n//     npreregno: masterData.selectedSample ?\n//         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n//     userinfo: inputParam.inputData.userinfo,\n//     activeTestTab : masterData.activeTestTab,\n//     screenName: masterData.activeTestTab,\n//     resultDataState: inputParam.resultDataState,\n//     testCommentDataState: inputParam.testCommentDataState,\n// }\n// dispatch(getTestChildTabDetail(inputData, true))\n}).catch(function(error){if(error.response.status===500){toast.error(error.message);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}else if(error.response.status===302){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,regEditParam:inputParam,showConfirmAlert:true,parentPopUpSize:\"xl\",regDateEditConfirmMessage:error.response.data,showSample:undefined}});}else{toast.warn(error.response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,showSample:undefined}});}});};}export function cancelSubSampleAction(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/cancelSubSample\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\nreplaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");var masterData=_objectSpread(_objectSpread({},LoginProps),{},{// selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\nselectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject=_objectSpread(_objectSpread({masterData:masterData},inputParam.inputData),{},{loading:false,loadEsign:false,openModal:false,showSample:undefined});dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function preregRecordToQuarantine(inputParam,LoginProps){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/registration/quarantineRegistration\",inputParam.inputData).then(function(response){// replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\n// replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\n// replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\nreplaceUpdatedObject(response.data[\"RegistrationGetSample\"],LoginProps.RegistrationGetSample,\"npreregno\");replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"],LoginProps.RegistrationGetSubSample,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"RegistrationGetTest\"],LoginProps.RegistrationGetTest,\"ntransactiontestcode\");delete response.data[\"RegistrationGetSample\"];delete response.data[\"RegistrationGetSubSample\"];delete response.data[\"RegistrationGetTest\"];var masterData=_objectSpread(_objectSpread({},LoginProps),{},{selectedSample:replaceUpdatedObject(response.data[\"selectedSample\"],LoginProps.selectedSample,\"npreregno\"),selectedSubSample:replaceUpdatedObject(response.data[\"selectedSubSample\"],LoginProps.selectedSubSample,\"ntransactionsamplecode\"),selectedTest:replaceUpdatedObject(response.data[\"selectedTest\"],LoginProps.selectedTest,\"ntransactiontestcode\")});var respObject={masterData:masterData,loading:false,loadEsign:false,openModal:false,showSample:undefined};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data.rtn);}});};}export function getTestChildTabDetailRegistration(inputData,isServiceRequired){return function(dispatch){if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){var inputParamData={ntransactiontestcode:inputData.ntransactiontestcode,npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;var testtake=inputData.testtake;var activeName=\"\";var dataStateName=\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_PARAMETERRESULTS\":url=\"registration/getregistrationparameter\";activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";activeName=\"RegistrationTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_DOCUMENTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getApprovalHistory\";activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;default:url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(url!==null){dispatch(initRequest(true));if(isServiceRequired){rsapi.post(url,inputParamData).then(function(response){var skipInfo={};var responseData=_objectSpread(_objectSpread({},response.data),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest});//responseData = sortData(responseData)\n// fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample||inputData.masterData.selectedSample,selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedTest,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactiontestcode\",inputData.removeElementFromArray);var skipInfo={};var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:inputData.selectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{var _inputData$masterData=inputData.masterData,ApprovalParameter=_inputData$masterData.ApprovalParameter,ResultUsedInstrument=_inputData$masterData.ResultUsedInstrument,ResultUsedTasks=_inputData$masterData.ResultUsedTasks,RegistrationTestAttachment=_inputData$masterData.RegistrationTestAttachment,ApprovalResultChangeHistory=_inputData$masterData.ApprovalResultChangeHistory,RegistrationTestComment=_inputData$masterData.RegistrationTestComment,ApprovalHistory=_inputData$masterData.ApprovalHistory;switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=[];break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=[];break;case\"IDS_TASK\":ResultUsedTasks=[];break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=[];break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=[];break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=[];break;case\"IDS_APPROVALHISTORY\":ApprovalHistory=[];break;default:ApprovalParameter=[];break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:[],ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false}});}};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/RegistrationAction.js"],"names":["rsapi","Axios","toast","filterRecordBasedOnTwoArrays","sortData","rearrangeDateFormat","convertDateTimetoString","fillRecordBasedOnCheckBoxSelection","getRecordBasedOnPrimaryKeyName","updatedObjectWithNewElement","replaceUpdatedObject","parentChildComboLoad","getSameRecordFromTwoArrays","constructjsonOptionList","constructjsonOptionDefault","childComboLoad","DEFAULT_RETURN","intl","initRequest","RegistrationSubType","RegistrationType","transactionStatus","crudMaster","postCRUDOrganiseTransSearch","constructOptionList","getSampleTypeChange","Map","masterData","event","labelname","dispatch","post","then","response","data","item","type","payload","loading","catch","error","message","getRegTypeChange","getRegSubTypeChange","getComponentTestBySpec","selectedRecord","Component","Test","slno","length","selectedComponent","undefined","SelectedTest","SelectedSource","Object","keys","popUptestDataState","skip","take","Source","getTestfromDB","objComponent","LoginProps","nflag","component","value","label","dreceiveddate","userInfo","nspecsampletypecode","TestData","loadComponent","selectComponent","showSaveContinue","parentPopUpSize","CurrentTime","unshift","EditComponent","urlArray","ComponentTestBySpec","timezone","all","lstComponentMap","lstComponent","timeZoneListMap","TimeZoneField","get","timeZoneList","scomponentname","ncomponentcode","ntzdreceivedate","findIndex","x","ntimezonecode","stimezoneid","childoperation","ChildscreenName","openChildModal","ReloadData","inputData","searchSampleRef","current","searchSubSampleRef","searchTestRef","showFilter","testskip","testtake","subsampletake","subsampleskip","showSample","status","warn","getTreeByProduct","comboData","inputParam","Specification","AgaramTree","ActiveKey","FocusKey","OpenNodes","selectedSpec","sversion","ntemplatemanipulationcode","getNewRegSpecification","selectedNode","operation","methodUrl","ntreetemplatemanipulationcode","activeKey","focusKey","primaryKey","AddComponents","sreceiveddate","stzdreceivedate","scomments","nallottedspeccode","openPortal","openModal","getTest","nneedsubsample","specBasedComponent","componentTest","TestCombined","loadTest","formatMessage","id","addsubSample","userinfo","columnList","childColumnList","SubSamplecomboComponents","SubSamplewithoutCombocomponent","isServiceRequired","SubSamplecomboData","timeZoneService","actualService","parentcolumnlist","childcolumnlist","TestGet","timeZoneMap","defaultTimeZone","newcomboData","comboData1","selectedRecord1","map","componentrow","inputtype","mandatory","loadcurrentdate","Date","loadSubSample","parentSubSampleColumnList","addSubSampleSaveContinue","Map1","editSubSample","Unit","Componnet","lstUnitMap","comp","lstUnit","sunitname","nunitcode","insertRegistration","RegistrationGetSample","selectedSample","RegistrationGetSubSample","RegistrationGetTest","selectedSubSample","selectedTest","filter","ntransactionsamplecode","multipleselectionFlag","respObject","loadEsign","showConfirmAlert","loadPreregister","postParamList","getRegistrationSample","selectedFilter","activeSampleTab","getRegistrationsubSampleDetail","inputParamData","nsampletypecode","nregtypecode","nregsubtypecode","npreregno","ntransactionstatus","napprovalconfigcode","activeTestTab","ndesigntemplatemappingcode","checkBoxOperation","activeName","dataStateName","subSample","skipInfo","oldSelectedTest","oldSelectedSubSample","childTabsKey","removeElementFromArray","selectedPreregno","wholeSubSampleList","b","forEach","subsample","index","includes","splice","bool","RegistrationTestComment","RegistrationParameter","wholeTestList","ntransactiontestcode","test","keepOld","ResponseData","RegistrationTestComment1","resultResponseData","RegistrationParameter1","ntransactiontestcode1","ResponseData1","RegistrationTestComment2","ntransactionTestCode","sampleGridDataState","sort","attachmentskip","TestSelected","isGrandChildGetRequired","filterTestSameOldSelectedTest","join","filterSelectedSubSample","getRegistrationTestDetail","getTestChildTabDetailRegistration","subsamplecheck","SubSampleSelected","wholeSubSample","selectedSubSample1","dataStateArray","arr","selectedTransactionsamplecode","toString","selectedTransactioncode","acceptRegistration","rtn","addMoreTest","ncontrolCode","sampleList","selectedsubsample","some","obj","slice","selectedsample","selectsubsample","findTransactionStatus","Set","REJECT","CANCELLED","CERTIFIED","SENT","findApprovalVersion","napprovalversioncode","findSampleSpec","availableTest","loadChildTest","screenName","props","createRegistrationTest","modalName","classUrl","getEditRegistrationComboService","comboComponents","withoutCombocomponent","mastertoedit","primaryKeyName","selectedRegistration","editRegParam","languagetypeCode","comboValues","optionList","valuemember","displaymember","source","isMultiLingual","updateRegistration","regDateEditConfirmMessage","regEditParam","cancelTestAction","cancelSampleAction","addsubSampleRegistration","regcolumnList","selectRecord","regchildColumnList","regSubSamplecomboComponents","regSubSamplewithoutCombocomponent","ncontrolcode","loadRegSubSample","regSubSamplecomboData","regparentSubSampleColumnList","saveSubSample","getEditSubSampleComboService","PREREGISTER","editSubSampleRegParam","onUpdateSubSampleRegistration","cancelSubSampleAction","preregRecordToQuarantine","url","responseData","selectedSampleCode","selectedTestCode","ApprovalParameter","ResultUsedInstrument","ResultUsedTasks","RegistrationTestAttachment","ApprovalResultChangeHistory","ApprovalHistory"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    filterRecordBasedOnTwoArrays, sortData,\r\n    rearrangeDateFormat, convertDateTimetoString, fillRecordBasedOnCheckBoxSelection, getRecordBasedOnPrimaryKeyName, updatedObjectWithNewElement, replaceUpdatedObject, parentChildComboLoad, getSameRecordFromTwoArrays, constructjsonOptionList, constructjsonOptionDefault, childComboLoad\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { intl } from '../components/App';\r\nimport { initRequest } from './LoginAction';\r\nimport { RegistrationSubType, RegistrationType, transactionStatus } from '../components/Enumeration';\r\nimport { crudMaster, postCRUDOrganiseTransSearch } from './ServiceAction'\r\n//import { getTestChildTabDetail } from './index.js'\r\nimport { constructOptionList } from '../components/CommonScript';\r\n\r\nexport function getSampleTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getRegTypeBySampleType\", Map)\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        rsapi.post(\"/registration/getRegSubTypeByRegType\", Map)\r\n            .then(response => {\r\n                // const RegistrationSubType = response.data[\"RegistrationSubType\"];\r\n\r\n                //  console.log(response.data);\r\n                // RegistrationSubType.length > 0 ?\r\n                //     selectedRecord[\"nregsubtypecode\"] = {\r\n                //         \"value\": RegistrationSubType[0].nregsubtypecode,\r\n                //         \"label\": RegistrationSubType[0].sregsubtypename\r\n                //     } : selectedRecord[\"nregsubtypecode\"] = \"\";\r\n                // const [labelname] = event.item;\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegSubTypeChange(Map, masterData, event, labelname) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getRegSubTypeByRegType\", Map)\r\n\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    [labelname]: { ...event.item }\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getComponentTestBySpec(Map, selectedRecord, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getComponentTestBySpec\", Map)\r\n            .then(response => {\r\n                const { Component, Test } = response.data;\r\n                let slno = Component.length > 0 ? Component[0].slno : -1;\r\n                let selectedComponent = Component.length > 0 ? Component[0] : undefined\r\n                let SelectedTest = [];\r\n                let SelectedSource = [];\r\n\r\n                if (Object.keys(Test).length > 0) {\r\n                    SelectedTest = Test[slno];\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Component, Test, SelectedTest, selectedComponent, loading: false,\r\n                        SelectedSource, selectedRecord, popUptestDataState: { skip: 0, take: 10 }, Source: []\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getTestfromDB(objComponent, LoginProps, nflag) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let component = { ...objComponent };\r\n        component[\"ncomponentcode\"] = objComponent[\"ncomponentcode\"] ? objComponent[\"ncomponentcode\"].value : -1;\r\n        component[\"nstoragelocationcode\"] = objComponent[\"nstoragelocationcode\"] ? objComponent[\"nstoragelocationcode\"].value : -1;\r\n        component[\"nstorageconditioncode\"] = objComponent[\"nstorageconditioncode\"] ? objComponent[\"nstorageconditioncode\"].value : -1;\r\n        component[\"slno\"] = LoginProps.Component ? Object.keys(LoginProps.Component).length + 1 : 0;\r\n        component[\"scomponentname\"] = objComponent[\"ncomponentcode\"].label;\r\n        component[\"sstoragelocationname\"] = objComponent[\"nstoragelocationcode\"] && objComponent[\"nstoragelocationcode\"].label ? objComponent[\"nstoragelocationcode\"].label : \"\";\r\n        component[\"sstorageconditionname\"] = objComponent[\"nstorageconditioncode\"] && objComponent[\"nstorageconditioncode\"].label ? objComponent[\"nstorageconditioncode\"].label : \"\";\r\n        component[\"ntzdmanufdate\"] = objComponent[\"ntzdmanufdate\"] ? objComponent[\"ntzdmanufdate\"].value : -1;\r\n        component[\"ntzdreceivedate\"] = objComponent[\"ntzdreceivedate\"] ? objComponent[\"ntzdreceivedate\"].value : -1;\r\n        component[\"stzdreceivedate\"] = objComponent[\"ntzdreceivedate\"] ? objComponent[\"ntzdreceivedate\"].label : \"\";\r\n        component[\"nplasmafilecode\"] = objComponent[\"nplasmafilecode\"] ? objComponent[\"nplasmafilecode\"].value : -1;\r\n        component[\"splasmafilenumber\"] = objComponent[\"nplasmafilecode\"] ? objComponent[\"nplasmafilecode\"].label : \"\";\r\n        const dreceiveddate = objComponent[\"dreceiveddate\"];\r\n        component[\"dreceiveddate\"] = dreceiveddate;//formatInputDate(objComponent[\"dreceiveddate\"], false);\r\n        component[\"sreceiveddate\"] = convertDateTimetoString(dreceiveddate, LoginProps.userInfo);//formatInputDateWithoutT(objComponent[\"dreceiveddate\"], false);//formatDate(objComponent[\"sreceiveddate\"]);\r\n        // rsapi.post(\"/registration/getTestfromDB\", { \"Component\": component })\r\n        rsapi.post(\"/registration/getTestfromDB\", {\r\n            nspecsampletypecode: component.nspecsampletypecode,\r\n            slno: component.slno\r\n        })\r\n            .then(response => {\r\n                let TestData = response.data;\r\n                let slno = component.slno;\r\n                let SelectedTest = [];\r\n                let loadComponent = true;\r\n                let selectComponent = {};\r\n                let showSaveContinue = true;\r\n                let SelectedSource = [];\r\n                // let openChildModal = true;\r\n                let selectedComponent = undefined;\r\n                let parentPopUpSize = \"lg\"\r\n                // selectComponent = objComponent\r\n                if (nflag === 1) {\r\n                    loadComponent = true;\r\n                    objComponent[\"smanuflotno\"] = \"\";\r\n                    objComponent[\"dreceiveddate\"] = rearrangeDateFormat(LoginProps.userInfo, LoginProps.CurrentTime)//new Date(LoginProps.CurrentTime);\r\n                    objComponent[\"sreceiveddate\"] = rearrangeDateFormat(LoginProps.userInfo, LoginProps.CurrentTime)//new Date(LoginProps.CurrentTime);\r\n                    selectComponent = objComponent;\r\n                } else {\r\n                    loadComponent = false;\r\n                    parentPopUpSize = \"xl\"\r\n                    // openChildModal = false;\r\n                    showSaveContinue = false;\r\n                    selectComponent = undefined\r\n                }\r\n                let Test = LoginProps.Test || [];\r\n                let Component = LoginProps.Component || [];\r\n                Component.unshift(component);\r\n                selectedComponent = component;\r\n                Test[slno] = response.data;\r\n                SelectedTest = TestData;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Component, Test, SelectedTest, selectComponent, selectedComponent,\r\n                        loadComponent, showSaveContinue, parentPopUpSize, loading: false, SelectedSource\r\n                    }\r\n                });\r\n                // console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                //   console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function EditComponent(Map, component, userInfo) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [];\r\n        const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\",\r\n            Map);\r\n\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        urlArray = [ComponentTestBySpec, timezone]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const lstComponentMap = constructOptionList(response[0].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n                const TimeZoneField = response[1].data;\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n\r\n                component[\"ncomponentcode\"] = { label: component.scomponentname, value: component.ncomponentcode }\r\n                component[\"dreceiveddate\"] = rearrangeDateFormat(userInfo, component[\"sreceiveddate\"]);\r\n                component[\"scomments\"] = component[\"scomments\"]\r\n\r\n                let ntzdreceivedate = component.ntzdreceivedate;\r\n                if (component.ntzdreceivedate !== null && typeof component.ntzdreceivedate === \"object\") {\r\n                    ntzdreceivedate = component.ntzdreceivedate.value;\r\n                }\r\n                component[\"ntzdreceivedate\"] = component.ntzdreceivedate ?\r\n                    {\r\n                        \"label\": TimeZoneField[TimeZoneField.findIndex(x => x.ntimezonecode === ntzdreceivedate)].stimezoneid, \"value\":\r\n                            TimeZoneField[TimeZoneField.findIndex(x => x.ntimezonecode === ntzdreceivedate)].ntimezonecode\r\n                    } : \"\"\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadComponent: true, childoperation: \"update\",\r\n                        lstComponent, ChildscreenName: \"Component\",\r\n                        openChildModal: false, selectComponent: component, parentPopUpSize: \"lg\",\r\n                        timeZoneList, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function ReloadData(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"registration/getRegistrationByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    //masterData['searchedTests'] = undefined\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                // let selectedFilter = inputData.selectedFilter;\r\n                // selectedFilter[\"fromdate\"] = \"\";\r\n                // selectedFilter[\"todate\"] = \"\";\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampletake:undefined,\r\n                        subsampleskip:0,\r\n                        showSample: undefined,\r\n                        //selectedFilter\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTreeByProduct(Map, selectedRecord, comboData, inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/getTreeByProduct\", Map)\r\n            .then(response => {\r\n                let { Specification, AgaramTree, ActiveKey, FocusKey, OpenNodes } = [];\r\n                const selectedSpec = {}\r\n                if (response.data[\"rtn\"] === true) {\r\n                    Specification = constructOptionList(response.data[\"Specification\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true).get(\"OptionList\");\r\n                    AgaramTree = response.data[\"AgaramTree\"];\r\n                    ActiveKey = response.data[\"ActiveKey\"];\r\n                    FocusKey = response.data[\"FocusKey\"];\r\n                    OpenNodes = response.data[\"OpenNodes\"];\r\n                    //Manufacturer = response.data[\"Manufacturer\"];\r\n                    selectedSpec[\"nallottedspeccode\"] = Specification.length > 0 ? {\r\n                        \"value\": Specification[0].value,\r\n                        \"label\": Specification[0].label,\r\n                        \"item\": Specification[0].item\r\n                    } : \"\";\r\n\r\n                    selectedSpec[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\"\r\n                    selectedSpec[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? Specification[0].item.ntemplatemanipulationcode : -1\r\n                }\r\n                selectedRecord = { ...selectedRecord, ...selectedSpec }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Specification,\r\n                        selectedRecord,\r\n                        AgaramTree, ActiveKey, FocusKey, OpenNodes,\r\n                        Test: [],\r\n                        SelectedTest: [],\r\n                        loading: false,\r\n                        comboData,\r\n                        ...inputParam,\r\n                        selectedSpec,\r\n                        Component: [],\r\n                        selectComponent: {},\r\n                        selectedComponent: {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getNewRegSpecification = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        if (inputParam.selectedNode !== null) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/registration/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam, ntreetemplatemanipulationcode: inputParam.selectedNode.ntemplatemanipulationcode })\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let Specification = constructOptionList(response.data || [], \"nallottedspeccode\", \"sspecname\", false, false, true).get(\"OptionList\");\r\n                    let selectedComponent = undefined;\r\n                    inputParam.selectedRecord[\"nallottedspeccode\"] = Specification.length > 0 ? { value: Specification[0].value, label: Specification[0].label, item: Specification[0].item } : \"\";\r\n                    inputParam.selectedRecord[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\";\r\n                    inputParam.selectedRecord[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? Specification[0].item.ntemplatemanipulationcode : -1;\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ActiveKey: inputParam.activeKey,\r\n                            FocusKey: inputParam.focusKey,\r\n                            primaryKey: inputParam.primaryKey,\r\n                            Specification: Specification,\r\n                            selectedNode: inputParam.selectedNode,\r\n                            selectedRecord: inputParam.selectedRecord,\r\n                            Test: [],\r\n                            selectedComponent,\r\n                            SelectedTest: [],\r\n                            loading: false,\r\n                            showSample: undefined\r\n                        }\r\n                    }\r\n                    );\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function AddComponents(Map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = []\r\n        const ComponentTestBySpec = rsapi.post(\"/registration/getComponentBySpec\",\r\n            Map);\r\n        const timezone = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        urlArray = [ComponentTestBySpec, timezone\r\n        ]\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const lstComponentMap = constructOptionList(response[0].data.lstComponent || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const timeZoneListMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n                const timeZoneList = timeZoneListMap.get(\"OptionList\");\r\n                let dreceiveddate = null;\r\n                if (lstComponent[0].item.sreceiveddate)\r\n                    dreceiveddate = rearrangeDateFormat(Map[\"userinfo\"], lstComponent[0].item.sreceiveddate);//new Date(lstComponent[0].item.sreceiveddate);//|| [];\r\n\r\n                let selectComponent = {\r\n                    sreceiveddate: dreceiveddate,\r\n                    dreceiveddate,\r\n                    ntzdreceivedate: { \"label\": Map[\"userinfo\"].stimezoneid, \"value\": Map[\"userinfo\"].ntimezonecode },\r\n                    stzdreceivedate: Map[\"userinfo\"].stimezoneid,\r\n                    scomments: \"\",\r\n                    nallottedspeccode: lstComponent[0].item.nallottedspeccode\r\n                };\r\n                let CurrentTime = dreceiveddate;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadComponent: true,\r\n                        lstComponent, dreceiveddate, ChildscreenName: \"Component\",\r\n                        showSaveContinue: true, openChildModal: false, childoperation: \"create\", selectComponent\r\n                        , parentPopUpSize: \"lg\", CurrentTime, timeZoneList, loading: false,\r\n                        openPortal: true, openModal: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\nexport function getTest(objComponent, LoginProps, nneedsubsample, specBasedComponent) {\r\n    return function (dispatch) {\r\n        if (Object.keys(objComponent).length > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/registration/getTestfromDB\", {\r\n                nspecsampletypecode: objComponent.nspecsampletypecode,\r\n                slno: objComponent.slno,\r\n                nneedsubsample: nneedsubsample,\r\n                nallottedspeccode: objComponent.nallottedspeccode,\r\n                specBasedComponent: specBasedComponent\r\n\r\n            })\r\n                .then(response => {\r\n                    let TestData = response.data;\r\n                    let Test = LoginProps.Test || [];\r\n                    let componentTest = Test[objComponent.slno] ? Test[objComponent.slno] : [];\r\n                    const TestCombined = filterRecordBasedOnTwoArrays(TestData, componentTest, \"ntestgrouptestcode\");\r\n                    // const lstComponentMap = constructOptionList(TestCombined|| [], \"ntestgrouptestcode\",\r\n                    //\"stestsynonym\", undefined, undefined, true);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            TestCombined, loadTest: true, openChildModal: false, ChildscreenName: \"Test\",\r\n                            childoperation: \"create\", parentPopUpSize: \"lg\", loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTCOMPONENTTOADDTEST\" }));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function addsubSample(masterData, userinfo, columnList,\r\n    selectComponent, childColumnList,\r\n    SubSamplecomboComponents, SubSamplewithoutCombocomponent,\r\n    specBasedComponent, Map, Component, isServiceRequired, SubSamplecomboData) {\r\n    if (isServiceRequired) {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = []\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n            urlArray[0] = timeZoneService;\r\n            const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n                parentcolumnlist: columnList,\r\n                childcolumnlist: childColumnList,\r\n                userinfo\r\n            })\r\n            urlArray[1] = actualService;\r\n            if (specBasedComponent === 4) {\r\n                Component = Component ? Component : []\r\n                const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: Component ? Object.keys(Component).length + 1 : 1,\r\n                    //nneedsubsample: nneedsubsample,\r\n                    // nallottedspeccode: objComponent.nallottedspeccode,\r\n                    specBasedComponent: specBasedComponent\r\n\r\n                })\r\n                urlArray[2] = TestGet;\r\n            }\r\n            Axios.all(urlArray).then(response => {\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n                const newcomboData = parentChildComboLoad(columnList, response[1].data,\r\n                    selectComponent, childColumnList, SubSamplewithoutCombocomponent)\r\n                let TestCombined = [];\r\n                if (specBasedComponent === 4) {\r\n                    TestCombined = response[2].data\r\n                }\r\n                const comboData1 = newcomboData.comboData\r\n                const selectedRecord1 = newcomboData.selectedRecord\r\n                SubSamplewithoutCombocomponent.map(componentrow => {\r\n                    if (componentrow.inputtype === \"date\") {\r\n                        if (componentrow.mandatory) {\r\n                            selectedRecord1[componentrow.label] =  componentrow.loadcurrentdate ?  new Date(): \"\";\r\n                        } \r\n                        // if (componentrow.timezone) {\r\n                        //     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                        //         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                        //         defaulttimezone ? defaulttimezone : -1\r\n                        // }\r\n                    }\r\n\r\n                })\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ChildscreenName: \"SubSample\",\r\n                        showSaveContinue: true,\r\n                        openChildModal: false,\r\n                        childoperation: \"create\",\r\n                        parentPopUpSize: \"lg\",\r\n                        loading: false,\r\n                        lstComponent: [],\r\n                        openPortal: true,\r\n                        openModal: false,\r\n                        operation: \"create\",\r\n                        loadSubSample: true,\r\n                        selectComponent: selectedRecord1,\r\n                        SubSamplecomboData: comboData1,\r\n                        SubSamplecomboComponents,\r\n                        SubSamplewithoutCombocomponent,\r\n                        TestCombined,\r\n                        parentSubSampleColumnList: columnList,\r\n                        timeZoneList,\r\n                        defaultTimeZone,\r\n                        masterData,\r\n                    }\r\n                });\r\n            })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        }\r\n    } else {\r\n        const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n            selectComponent, childColumnList, SubSamplewithoutCombocomponent)\r\n        return (dispatch) => {\r\n          if (specBasedComponent === 4) {\r\n         rsapi.post(\"/registration/getTestfromDB\",{\r\n            nallottedspeccode: Map[\"nallottedspeccode\"],\r\n            slno: Component ? Object.keys(Component).length + 1 : 1,\r\n            //nneedsubsample: nneedsubsample,\r\n            // nallottedspeccode: objComponent.nallottedspeccode,\r\n            specBasedComponent: specBasedComponent\r\n         }) .then(response => {\r\n            const TestCombined =  response.data\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    ChildscreenName: \"SubSample\",\r\n                    showSaveContinue: true,\r\n                    openChildModal: false,\r\n                    childoperation: \"create\",\r\n                    parentPopUpSize: \"lg\",\r\n                    loading: false,\r\n                    lstComponent: [],\r\n                    openPortal: true,\r\n                    openModal: false,\r\n                    operation: \"create\",\r\n                    loadSubSample: true,\r\n                    selectComponent: newcomboData.selectedRecord,\r\n                    TestCombined:TestCombined\r\n                }\r\n            });\r\n        })\r\n        }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function addSubSampleSaveContinue(Map1, Map, \r\n    specBasedComponent, Component,) {\r\n  \r\n      //  const newcomboData = parentChildComboLoad(columnList, SubSamplecomboData,\r\n       //     selectComponent, childColumnList, SubSamplewithoutCombocomponent)\r\n        return (dispatch) => {\r\n          if (specBasedComponent === 4) {\r\n         rsapi.post(\"/registration/getTestfromDB\",{\r\n            nallottedspeccode: Map[\"nallottedspeccode\"],\r\n            slno: Map1.Component ? Object.keys(Map1.Component).length + 1 : 1,\r\n            specBasedComponent: specBasedComponent\r\n         }) .then(response => {\r\n            const TestCombined =  response.data\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    ...Map1,\r\n                    loading: false,\r\n                    TestCombined:TestCombined\r\n                }\r\n            });\r\n        })\r\n        }\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\nexport function editSubSample(Map,\r\n    component, userInfo, specBasedComponent) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let urlArray = []\r\n        const Unit = rsapi.post(\"/unit/getUnit\",\r\n            { userinfo: userInfo })\r\n        let Componnet = {}\r\n        if (specBasedComponent === 4) {\r\n            Componnet = rsapi.post(\"/component/getComponent\",\r\n                { userinfo: userInfo })\r\n        } else {\r\n            Componnet = rsapi.post(\"/registration/getComponentBySpec\",\r\n                Map);\r\n        }\r\n\r\n        urlArray = [Unit, Componnet\r\n        ]\r\n        Axios.all(urlArray)\r\n\r\n            .then(response => {\r\n                const lstUnitMap = constructOptionList(response[0].data || [], \"nunitcode\",\r\n                    \"sunitname\", undefined, undefined, true);\r\n                let comp = []\r\n                if (specBasedComponent === 4) {\r\n                    comp = response[1].data\r\n                } else {\r\n                    comp = response[1].data.lstComponent\r\n                }\r\n                const lstComponentMap = constructOptionList(comp || [], \"ncomponentcode\",\r\n                    \"scomponentname\", undefined, undefined, true);\r\n                const lstUnit = lstUnitMap.get(\"OptionList\");\r\n                const lstComponent = lstComponentMap.get(\"OptionList\");\r\n\r\n                component[\"nunitcode\"] = { label: component.sunitname, value: component.nunitcode }\r\n                component[\"ssubsamplename\"] = component[\"ssubsamplename\"];\r\n                component[\"ssampleqty\"] = component[\"ssampleqty\"];\r\n                component[\"scomments\"] = component[\"scomments\"]\r\n                component[\"ncomponentcode\"] = { label: component.scomponentname, value: component.ncomponentcode }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loadSubSample: true, childoperation: \"update\",\r\n                        ChildscreenName: \"SubSample\", Unit: lstUnit,\r\n                        openChildModal: false, selectComponent: component,\r\n                        parentPopUpSize: \"lg\", loading: false, lstComponent\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function insertRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/createRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n                let selectedSample = response.data[\"selectedSample\"];\r\n                let RegistrationGetSubSample = response.data[\"RegistrationGetSubSample\"];\r\n                let RegistrationGetTest = response.data[\"selectedTest\"];\r\n                let selectedSubSample = RegistrationGetSubSample;\r\n                RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n                if (inputParam.inputData.nneedsubsample) {\r\n                    RegistrationGetSubSample = sortData(response.data[\"RegistrationGetSubSample\"],'npreregno','desc')\r\n                    selectedSubSample = RegistrationGetSubSample.length>0?[RegistrationGetSubSample[0]] : [];\r\n                    RegistrationGetTest=RegistrationGetTest.filter(x=>x.ntransactionsamplecode===selectedSubSample[0].ntransactionsamplecode)\r\n                    selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n                }\r\n              // RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\")\r\n                if (inputParam.multipleselectionFlag) {\r\n                    selectedSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.selectedSample);\r\n                    updatedObjectWithNewElement(response.data[\"selectedSubSample\"], masterData.RegistrationGetSubSample);\r\n                    updatedObjectWithNewElement(response.data[\"selectedTest\"], masterData.RegistrationGetTest);\r\n                    RegistrationGetSubSample = masterData.RegistrationGetSubSample;\r\n                    RegistrationGetTest = masterData.RegistrationGetTest;\r\n                }\r\n\r\n\r\n                masterData = {\r\n                    ...masterData, ...response.data,\r\n                    selectedSample, selectedSubSample, selectedTest,\r\n                    RegistrationGetSubSample, RegistrationGetTest, RegistrationGetSample\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    showConfirmAlert: false,\r\n                    selectedRecord: undefined,\r\n                    loading: false,\r\n                    loadPreregister: false,\r\n                    showSample: undefined,\r\n                    openPortal: false,\r\n                    selectedSpec: {},\r\n                    selectComponent: {},\r\n                    SelectedTest: {},\r\n                    selectedComponent: {},\r\n                    Component: [],\r\n                    selectedRecord: {},\r\n                    SelectedTest: [],\r\n                    Test: [],\r\n                    selectedComponent: {}\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getRegistrationSample(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"registration/getRegistrationByFilterSubmit\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                if (inputData.searchSampleRef !== undefined && inputData.searchSampleRef.current !== null) {\r\n                    inputData.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                    inputData.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                    inputData.searchTestRef.current.value = \"\"\r\n                    masterData['searchedTest'] = undefined\r\n                }\r\n                let respObject = {};\r\n                if (inputData.selectedFilter) {\r\n                    respObject = { selectedFilter: { ...inputData.selectedFilter } };\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        testskip: 0,\r\n                        take: undefined,\r\n                        testtake: undefined,\r\n                        subsampleskip:0,\r\n                        subsampletake:undefined,\r\n                        showSample: undefined,\r\n                        ...respObject,\r\n                        activeSampleTab: inputData.inputData.activeSampleTab\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRegistrationsubSampleDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n            nneedsubsample: inputData.nneedsubsample,\r\n            checkBoxOperation: inputData.checkBoxOperation\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        const subSample = inputData.nneedsubsample\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"registration/getRegistrationSubSample\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let masterData = {}\r\n                    let skipInfo = {}\r\n                    let oldSelectedTest = inputData.masterData.selectedTest\r\n                    if (subSample) {\r\n                        let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedSubSample: inputData.masterData.RegistrationGetSubSample.length > 0 ?\r\n                                [inputData.masterData.RegistrationGetSubSample[0]] : [],\r\n                        }\r\n\r\n                        if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 7) {\r\n\r\n                            const wholeSubSampleList = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((subsample, index) => {\r\n                                if (!wholeSubSampleList.includes(subsample.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n                            if (oldSelectedSubSample.length > 0) {\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedSubSample: oldSelectedSubSample\r\n                                }\r\n                            }\r\n                            const selectedTest = getSameRecordFromTwoArrays(oldSelectedTest,\r\n                                masterData.selectedSubSample, 'npreregno')\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest\r\n                            }\r\n                        }\r\n                        if (inputData.checkBoxOperation === 3) {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: masterData.RegistrationGetTest.length > 0 ? [masterData.RegistrationGetTest[0]] : []\r\n                            }\r\n                        }\r\n\r\n\r\n                        let { testskip, testtake, subsampleskip, subsampletake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.RegistrationGetSubSample.length < inputData.subsampleskip) {\r\n                            testskip = 0;\r\n                            subsampleskip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake, subsampleskip, subsampletake }\r\n                        }\r\n                    } else {\r\n\r\n                        //let oldSelectedTest = inputData.masterData.selectedTest\r\n                        //  let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                            inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\",\r\n                            inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                            selectedSubSample: inputData.masterData.RegistrationGetSubSample,\r\n                        }\r\n                        let RegistrationTestComment = [];\r\n                        let RegistrationParameter = [];\r\n                        if (inputData.checkBoxOperation === 7 || inputData.checkBoxOperation === 1) {\r\n                            const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                            oldSelectedTest.forEach((test, index) => {\r\n                                if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                    oldSelectedTest.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n\r\n                            let keepOld = false;\r\n                            let ntransactiontestcode;\r\n                            if (oldSelectedTest.length > 0) {\r\n                                keepOld = true\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedTest: oldSelectedTest,\r\n                                }\r\n                            } else {\r\n                                ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                    inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"\"\r\n                            }\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                        inputData.masterData.RegistrationParameter : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                                        inputData.masterData.RegistrationTestComment : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                        inputData.masterData.RegistrationParameter : [] :\r\n                                        getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n                        else if (inputData.checkBoxOperation === 5) {\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment1 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                    }\r\n                                    let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                    let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                    let ntransactiontestcode1 = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                    let RegistrationTestComment2 = [];\r\n                                    if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                        RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                    }\r\n                                    let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                            // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                        }\r\n                        else {\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = response.data.RegistrationTestComment ?\r\n                                        [...response.data.RegistrationTestComment] : [];\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_PARAMETERRESULTS\":\r\n                                    RegistrationParameter = response.data.RegistrationParameter ?\r\n                                        [...response.data.RegistrationParameter] : [];\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationParameter = response.data.RegistrationParameter ?\r\n                                        [...response.data.RegistrationParameter] : [];\r\n                                    activeName = \"RegistrationParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n                        masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                        masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                        let { testskip, testtake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.RegistrationGetTest.length < inputData.testskip) {\r\n                            testskip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake }\r\n                        }\r\n\r\n                    }\r\n                    if (inputData.masterData.selectedSample && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedSample.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            inputParam\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            let bool = false;\r\n            let skipInfo = {};\r\n            let { testskip, testtake, subsampletake, subsampleskip } = inputData;\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let oldSelectedSubSample = inputData.masterData.selectedSubSample\r\n            let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = true;\r\n            } else {\r\n                isGrandChildGetRequired = false;\r\n            }\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let selectedSample = inputData.selectedSample;\r\n                let filterTestSameOldSelectedTest = getSameRecordFromTwoArrays(oldSelectedTest, inputData.masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                let selectedTest = filterTestSameOldSelectedTest.length > 0 ? filterTestSameOldSelectedTest :\r\n                    inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [];\r\n                let ntransactiontestcode = selectedTest.length > 0 ? selectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\";\r\n                let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n\r\n                if (subSample) {\r\n                    let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    selectedSubSample = filterSelectedSubSample.length > 0 ? filterSelectedSubSample : [inputData.masterData.RegistrationGetSubSample[0]];\r\n                    if (inputData.masterData.RegistrationGetSubSample.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampletake, subsampleskip }\r\n                    }\r\n\r\n                }\r\n                let masterData = { ...inputData.masterData, selectedSample, selectedSubSample, selectedTest }\r\n                if (inputData.masterData.RegistrationGetTest.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3, skipInfo\r\n                }\r\n                if (subSample) {\r\n                    if (selectedTest.length === 0) {\r\n                        inputData[\"npreregno\"] = selectedSubSample.map(x => x.npreregno).join(\",\")\r\n                        inputData[\"ntransactionsamplecode\"] = selectedSubSample.map(x => x.ntransactionsamplecode).join(\",\")\r\n                        inputData[\"checkBoxOperation\"] = 3\r\n                        inputData[\"childTabsKey\"] = [\"RegistrationGetTest\"]\r\n                        dispatch(getRegistrationTestDetail(inputData, true));\r\n                    } else {\r\n                        dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n                    }\r\n                } else {\r\n                    dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n                }\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedSample: inputData.selectedSample,\r\n                    selectedPreregno: inputData.npreregno,\r\n                    selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                    // RegistrationTestComment,\r\n                    selectedSubSample: inputData.masterData.RegistrationGetSubSample\r\n                }\r\n                let subsamplecheck = true;\r\n                if (subSample) {\r\n                    let SubSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                    if (SubSampleSelected.length > 0) {\r\n                        let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                        if (filterSelectedSubSample.length === 0) {\r\n                            let wholeSubSample = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((test, index) => {\r\n                                if (!wholeSubSample.includes(test.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                            if (oldSelectedSubSample.length === 0 && wholeSubSample.length > 0\r\n                                && masterData.selectedTest.length === 0) {\r\n                                const selectedSubSample1 = [inputData.masterData.RegistrationGetSubSample[0]];\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedSubSample: selectedSubSample1,\r\n                                    selectedTest: []\r\n                                }\r\n                                inputData = { ...inputData, ...masterData }\r\n                                inputData[\"npreregno\"] = selectedSubSample1.map(x => x.npreregno).join(\",\")\r\n                                inputData[\"ntransactionsamplecode\"] = selectedSubSample1.map(x => x.ntransactionsamplecode).join(\",\")\r\n                                inputData[\"checkBoxOperation\"] = 3\r\n                                inputData[\"childTabsKey\"] = [\"RegistrationGetTest\"]\r\n                                subsamplecheck = false;\r\n                                dispatch(getRegistrationTestDetail(inputData, true));\r\n\r\n                            }\r\n                        } else {\r\n                            oldSelectedSubSample = filterSelectedSubSample\r\n                        }\r\n\r\n                    } else {\r\n                        let wholeSubSample = masterData.RegistrationGetSubSample.map(b => b.ntransactionsamplecode)\r\n                        oldSelectedSubSample.forEach((test, index) => {\r\n                            if (!wholeSubSample.includes(test.ntransactionsamplecode)) {\r\n                                oldSelectedSubSample.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    if (subsamplecheck) {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            selectedSubSample: oldSelectedSubSample\r\n                        }\r\n                    }\r\n                    if (inputData.masterData.RegistrationGetSubSample.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampleskip, subsampletake }\r\n                    }\r\n                }\r\n                let wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.forEach((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                let skipInfo = {};\r\n                if (inputData.masterData.RegistrationGetTest.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedSample', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function getRegistrationTestDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"registration/getRegistrationTest\", inputParamData)\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    let oldSelectedTest = inputData.masterData.selectedTest\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data,\r\n                        inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\",\r\n                        inputData.removeElementFromArray);\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedSubSample: inputData.selectedSubSample,\r\n                        selectedTransactionsamplecode: inputData.ntransactionsamplecode,\r\n                        selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                            [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                        // RegistrationTestComment,\r\n                    }\r\n                    //let wholeRegistrationTestComments = [];\r\n                    let RegistrationTestComment = [];\r\n                    let RegistrationParameter = [];\r\n                    if (inputData.checkBoxOperation === 1) {\r\n                        const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                        oldSelectedTest.forEach((test, index) => {\r\n                            if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                oldSelectedTest.splice(index, 1)\r\n                            }\r\n\r\n                        })\r\n\r\n                        let keepOld = false;\r\n                        let ntransactiontestcode;\r\n                        if (oldSelectedTest.length > 0) {\r\n                            keepOld = true\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: oldSelectedTest,\r\n                            }\r\n                        } else {\r\n                            ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                                inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"\"\r\n                        }\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                    inputData.masterData.RegistrationParameter : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                                    inputData.masterData.RegistrationTestComment : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationParameter = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                                    inputData.masterData.RegistrationParameter : [] :\r\n                                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n                    else if (inputData.checkBoxOperation === 5) {\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                let ResponseData = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment1 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment1 = [...inputData.masterData.RegistrationTestComment, ...ResponseData];\r\n                                }\r\n                                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment1, ntransactiontestcode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                let resultResponseData = response.data.RegistrationParameter ? response.data.RegistrationParameter : [];\r\n                                let RegistrationParameter1 = [...inputData.masterData.RegistrationParameter, ...resultResponseData];\r\n                                let ntransactiontestcode1 = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationParameter = getRecordBasedOnPrimaryKeyName(RegistrationParameter1, ntransactiontestcode1, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                let ResponseData1 = response.data.RegistrationTestComment ? response.data.RegistrationTestComment : [];\r\n                                let RegistrationTestComment2 = [];\r\n                                if (inputData.masterData.RegistrationTestComment !== undefined) {\r\n                                    RegistrationTestComment2 = [...inputData.masterData.RegistrationTestComment, ...ResponseData1];\r\n                                }\r\n                                let ntransactionTestCode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : -1\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(RegistrationTestComment2, ntransactionTestCode, \"ntransactiontestcode\");\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        // RegistrationTestComment = response.data.RegistrationTestComment ? [...response.data.RegistrationTestComment] : [];\r\n                    }\r\n                    else {\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = response.data.RegistrationTestComment ?\r\n                                    [...response.data.RegistrationTestComment] : [];\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_PARAMETERRESULTS\":\r\n                                RegistrationParameter = response.data.RegistrationParameter ?\r\n                                    [...response.data.RegistrationParameter] : [];\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            default:\r\n                                RegistrationParameter = response.data.RegistrationParameter ?\r\n                                    [...response.data.RegistrationParameter] : [];\r\n                                activeName = \"RegistrationParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n                    masterData['RegistrationTestComment'] = RegistrationTestComment;\r\n                    masterData[\"RegistrationParameter\"] = RegistrationParameter;\r\n                    let { testskip, testtake } = inputData\r\n                    let bool = false;\r\n                    let skipInfo = {}\r\n                    if (inputData.masterData.RegistrationGetTest.length < inputData.testskip) {\r\n                        testskip = 0;\r\n                        bool = true\r\n                    }\r\n\r\n                    if (bool) {\r\n                        skipInfo = { testskip, testtake }\r\n                    }\r\n                    if (inputData.masterData.selectedSample && inputData.sampleGridDataState\r\n                        && inputData.masterData.selectedSample.length <= inputData.sampleGridDataState.skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            sampleGridDataState: {\r\n                                ...inputData.sampleGridDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTest'] = undefined\r\n                    }\r\n                    let inputParam = { attachmentskip: undefined }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            inputParam\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            let oldSelectedTest = inputData.masterData.selectedTest\r\n            let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.selectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = true;\r\n            } else {\r\n                isGrandChildGetRequired = false;\r\n            }\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ? inputData.masterData.RegistrationGetTest[0].ntransactiontestcode.toString() : \"-1\";\r\n                let selectedSubSample = inputData.selectedSubSample;\r\n                // let selectedPreregno = inputData.npreregno;\r\n                let selectedTest = inputData.masterData.RegistrationGetTest.length > 0 ? [inputData.masterData.RegistrationGetTest[0]] : [];\r\n                // let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n                let masterData = { ...inputData.masterData, selectedSubSample, selectedTest }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, selectedTest,\r\n                    selectedSubSample, checkBoxOperation: 3\r\n                }\r\n                dispatch(getTestChildTabDetailRegistration(inputData, true));\r\n            } else {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedSubSample: inputData.selectedSubSample,\r\n                    selectedTransactioncode: inputData.ntransactionsamplecode,\r\n                    selectedTest: inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                        [inputData.masterData.RegistrationGetTest[0]] : [],\r\n                }\r\n\r\n                const wholeTestList = masterData.RegistrationGetTest.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.forEach((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest,\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.RegistrationGetTest.length > 0 ?\r\n                        inputData.masterData.RegistrationGetTest[0].ntransactiontestcode : \"-1\"\r\n                }\r\n                masterData[\"RegistrationTestComment\"] = keepOld ? inputData.masterData.RegistrationTestComment ?\r\n                    inputData.masterData.RegistrationTestComment : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                masterData[\"RegistrationParameter\"] = keepOld ? inputData.masterData.RegistrationParameter ?\r\n                    inputData.masterData.RegistrationParameter : [] :\r\n                    getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                let skipInfo = {};\r\n                let dataStateArray = [\r\n                    { activeName: 'selectedSample', dataStateName: 'sampleGridDataState' },\r\n                    { activeName: 'RegistrationSourceCountry', dataStateName: 'sourceDataState' },\r\n                    { activeName: 'RegistrationTestComment', dataStateName: 'testCommentDataState' },\r\n                    { activeName: 'RegistrationParameter', dataStateName: 'resultDataState' },\r\n                ]\r\n                dataStateArray.map(arr => {\r\n                    if (inputData[arr.dataStateName] && masterData[arr.activeName] &&\r\n                        masterData[arr.activeName].length <= inputData[arr.dataStateName].skip) {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [arr.dataStateName]: {\r\n                                ...inputData[arr.dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        ...skipInfo\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport function acceptRegistration(inputParam, LoginProps) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/acceptRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data.rtn === undefined || response.data.rtn === \"Success\"\r\n                    || response.data.rtn === \"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"\r\n                    || response.data.rtn === \"IDS_ALLSAMPLESAREREGISTERED\" || response.data.rtn === \"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\") {\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                    replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                    delete response.data[\"RegistrationGetSample\"];\r\n                    delete response.data[\"RegistrationGetSubSample\"];\r\n                    delete response.data[\"RegistrationGetTest\"];\r\n                    let masterData = {\r\n                        ...LoginProps, ...response.data,\r\n                        selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                        selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                        selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                    }\r\n                    let respObject = {\r\n                        masterData,\r\n                        ...inputParam.inputData,\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showSample: undefined\r\n                    }\r\n                    dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n                    if (response.data.rtn === \"IDS_ATLEASTONETESTMUSTBEPREREGISTER\"\r\n                        || response.data.rtn === \"IDS_ALLSAMPLESAREREGISTERED\" || response.data.rtn === \"IDS_SELECTPREREGISTERORQUARANTINESAMPLES\") {\r\n                        toast.warn(intl.formatMessage({ id: response.data.rtn }));\r\n                    }\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            openModal: false\r\n                        }\r\n                    });\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                toast.error(error.message);\r\n            })\r\n    }\r\n}\r\n\r\nexport const addMoreTest = (inputParam, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        let { sampleList } = inputParam;\r\n        let value = false;\r\n        if(inputParam.selectedsubsample&&inputParam.selectedsubsample.length>0){\r\n        value = inputParam.selectedsubsample.some(obj => obj.nspecsampletypecode !== inputParam.selectedsubsample[0].nspecsampletypecode)\r\n        if (value) {\r\n            return toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n        }\r\n        sampleList = sampleList ? [...sampleList.slice(inputParam.skip, inputParam.take)] : [];\r\n        const selectedsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedsample, \"npreregno\");\r\n        const selectsubsample = getSameRecordFromTwoArrays(sampleList, inputParam.selectedsubsample, \"npreregno\");\r\n        if (selectedsample && selectedsample.length > 0) {\r\n            const findTransactionStatus = [...new Set(selectedsample.map(item => item.ntransactionstatus))];\r\n\r\n            if (findTransactionStatus.length === 1) {\r\n                if (findTransactionStatus[0] !== transactionStatus.REJECT && findTransactionStatus[0] !== transactionStatus.CANCELLED) {\r\n                    if (findTransactionStatus[0] !== transactionStatus.CERTIFIED && findTransactionStatus[0] !== transactionStatus.SENT) {\r\n                        const findApprovalVersion = [...new Set(selectedsample.map(item => item.napprovalversioncode))];\r\n                        if (findApprovalVersion.length === 1) {\r\n                            const findSampleSpec = [...new Set(selectedsample.map(item => item.nallottedspeccode))];\r\n                            //const findComponent = [...new Set(selectsubsample.map(item => item.ncomponentcode))];\r\n                            if (findSampleSpec.length === 1)//&& findComponent.length === 1 \r\n                            {\r\n                                dispatch(initRequest(true));\r\n                                rsapi.post(\"/registration/getMoreTest\", { ...inputParam })\r\n                                    .then(response => {\r\n                                        dispatch({\r\n                                            type: DEFAULT_RETURN,\r\n                                            payload: {\r\n                                                availableTest: response.data,\r\n                                                loadChildTest: true,\r\n                                                loading: false, ncontrolCode,\r\n                                                screenName: \"IDS_TEST\",\r\n                                                operation: \"create\",\r\n                                                openModal: true,\r\n                                                parentPopUpSize: \"lg\",\r\n                                                selectedRecord: {},\r\n                                                showSample: undefined\r\n                                            }\r\n                                        });\r\n                                    })\r\n                                    .catch(error => {\r\n                                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                                        if (error.response.status === 500) {\r\n                                            toast.error(error.message);\r\n                                        } else {\r\n                                            toast.warn(this.props.formatMessage({ id: error.response.data }));\r\n                                        }\r\n                                    });\r\n                            } else {\r\n                                toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESPECANDCOMPONENT\" }));\r\n                            }\r\n                        } else {\r\n                            toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMEAPPROVALCONFIG\" }));\r\n                        }\r\n                    }\r\n                    else {\r\n                        toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCERTIFIEDSAMPLES\" }));\r\n                    }\r\n                }\r\n                else {\r\n                    ////     toast.warn(intl.formatMessage({ id: \"IDS_TESTCANNOTBEFORCANCELLEDREJECTSAMPLES\" }));\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SAMPLEISREJECTEDORCANCELLED\" }));\r\n                }\r\n            } else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_PLEASESELECTSAMPLEWITHSAMESTATUS\" }));\r\n            }\r\n        } else {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }));\r\n        }\r\n    }else{\r\n        toast.warn(intl.formatMessage({ id: \"IDS_SELECTSUBSAMPLE\" }));\r\n    }\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nexport const createRegistrationTest = (inputParam, masterData, modalName) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, { ...inputParam.inputData })\r\n            .then(response => {\r\n                let RegistrationGetTest = updatedObjectWithNewElement(masterData[\"RegistrationGetTest\"], response.data[\"RegistrationGetTest\"]);\r\n                masterData = {\r\n                    ...masterData,\r\n                    RegistrationGetTest,\r\n                    selectedTest: response.data[\"RegistrationGetTest\"],\r\n                    RegistrationParameter: response.data.RegistrationParameter,\r\n                    // RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, masterData.RegistrationGetSample, 'npreregno')\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        [modalName]: false,\r\n                        loading: false,\r\n                        loadChildTest: false,\r\n                        showSample: undefined,\r\n                        openModal: false,\r\n                        selectedRecord: {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getEditRegistrationComboService(inputParam, columnList, selectedRecord1, childColumnList, comboComponents,\r\n    withoutCombocomponent) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const { userInfo, operation } = { ...inputParam };\r\n\r\n        const npreregno = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        let urlArray = [];\r\n\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            parentcolumnlist: columnList,\r\n            childcolumnlist: childColumnList,\r\n            userinfo:userInfo\r\n        })\r\n        const selectedRegistration = rsapi.post(\"/registration/getEditRegistrationDetails\", { ...inputParam.editRegParam, npreregno })\r\n\r\n        urlArray = [timeZoneService, actualService, selectedRegistration]\r\n\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = { ...response[2].data[\"SelectedRegistration\"][0] };\r\n                selectedRecord={...selectedRecord,...selectedRecord['jsondata']}\r\n                // const recordToEdit = { ...response[2].data[\"SelectedRegistration\"][0] };\r\n                //  const currentTime = rearrangeDateFormat(userInfo, response[6].data);\r\n\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n                //  const newcomboData = parentChildComboLoad(columnList, response[1].data,\r\n                // selectedRecord, childColumnList, withoutCombocomponent)\r\n\r\n                if (selectedRecord.ntransactionstatus === transactionStatus.CANCELLED\r\n                    || selectedRecord.ntransactionstatus === transactionStatus.REJECT) {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_CANNOTEDITCANCELLEDSAMPLE\" }));\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                }\r\n\r\n                else {\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoad(x, comboData, selectedRecord1, \r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n\r\n                    let { Specification, AgaramTree, ActiveKey, FocusKey, OpenNodes } = [];\r\n                    const selectedSpec = {}\r\n                        Specification = constructOptionList(response[2].data[\"Specification\"] || [], \"nallottedspeccode\",\r\n                            \"sspecname\", undefined, undefined, true).get(\"OptionList\");\r\n                        AgaramTree = response[2].data[\"AgaramTree\"];\r\n                        ActiveKey = response[2].data[\"FocusKey\"];\r\n                        FocusKey = response[2].data[\"ActiveKey\"];\r\n                        OpenNodes = response[2].data[\"OpenNodes\"];\r\n                        //Manufacturer = response.data[\"Manufacturer\"];\r\n                        selectedSpec[\"nallottedspeccode\"] = Specification.length > 0 ? {\r\n                            \"value\": Specification[0].value,\r\n                            \"label\": Specification[0].label,\r\n                            \"item\": Specification[0].item\r\n                        } : \"\";\r\n    \r\n                        selectedSpec[\"sversion\"] = Specification.length > 0 ? Specification[0].item.sversion : \"\"\r\n                        selectedSpec[\"ntemplatemanipulationcode\"] = Specification.length > 0 ? \r\n                        Specification[0].item.ntemplatemanipulationcode : -1\r\n                        selectedRecord = { ...selectedRecord, ...selectedSpec }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            AgaramTree,\r\n                            FocusKey ,\r\n                            ActiveKey ,\r\n                            OpenNodes ,\r\n                            selectedSpec,\r\n                            Specification,\r\n                            // statustoEditDetail: response[2].data[\"ApprovalConfigRole\"] || {},\r\n                            // currentTime,\r\n                            operation,\r\n                            //  screenName: popUpLabel,\r\n                            // PopUpLabel: popUpLabel,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openPortal: true,\r\n                            ncontrolCode: inputParam.editRegParam.ncontrolCode,\r\n                            loadPreregister: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            comboData: comboValues.comboData\r\n                            //  regRecordToEdit:recordToEdit\r\n\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\nexport function updateRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/updateRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], masterData.RegistrationGetSample, \"npreregno\");\r\n                //replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n                let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\r\n                let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                masterData = {\r\n                    ...masterData,\r\n                    selectedSample: response.data[\"selectedSample\"],\r\n                    selectedSubSample: response.data[\"selectedSubSample\"],\r\n                    selectedTest:response.data[\"selectedTest\"],\r\n                    RegistrationGetTest,\r\n                    RegistrationGetSubSample,\r\n                    RegistrationParameter:response.data[\"RegistrationParameter\"]\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, openPortal: false, loading: false, showConfirmAlert: false,\r\n                        regDateEditConfirmMessage: undefined, loadEsign: false,\r\n                        loadPreregister: false, selectedRecord: {}, showSample: undefined\r\n                    }\r\n                });\r\n                // let inputData = {\r\n                //     masterData,\r\n                //     selectedTest: masterData.selectedTest,\r\n                //     ntransactiontestcode: masterData.selectedTest ?\r\n                //         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                //     npreregno: masterData.selectedSample ?\r\n                //         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                //     userinfo: inputParam.inputData.userinfo,\r\n                //     activeTestTab : masterData.activeTestTab,\r\n                //     screenName: masterData.activeTestTab,\r\n                //     resultDataState: inputParam.resultDataState,\r\n                //     testCommentDataState: inputParam.testCommentDataState,\r\n                // }\r\n                // dispatch(getTestChildTabDetail(inputData, true))\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign:false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function cancelTestAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelTest\", inputParam.inputData)\r\n            .then(response => {\r\n\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedTest: response.data[\"selectedTest\"],\r\n                    // RegistrationGetTest:response.data[\"RegistrationGetTest\"],\r\n                    RegistrationGetTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\"),\r\n                  //  RegistrationGetSample: replaceUpdatedObject(response.data.selectedSample, LoginProps.RegistrationGetSample, 'npreregno')\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    showConfirmAlert: false,\r\n                    selectedRecord: {},\r\n                    loading: false,\r\n                    loadPreregister: false,\r\n                    showSample: undefined\r\n                }\r\n                inputParam.postParamList[0]['clearFilter'] = 'no'\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function cancelSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelSample\", inputParam.inputData)\r\n            .then(response => {\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n               \r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function addsubSampleRegistration(masterData, userinfo, regcolumnList,\r\n    selectRecord, regchildColumnList,\r\n    regSubSamplecomboComponents, regSubSamplewithoutCombocomponent, Map, ncontrolcode) {\r\n        return function (dispatch) {\r\n            dispatch(initRequest(true));\r\n            const urlArray = []\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n            urlArray[0] = timeZoneService;\r\n            const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n                parentcolumnlist: regcolumnList,\r\n                childcolumnlist: regchildColumnList,\r\n                userinfo\r\n            })\r\n            urlArray[1] = actualService;\r\n            const specBasedComponent=4\r\n            if (specBasedComponent === 4) {\r\n                const TestGet = rsapi.post(\"/registration/getTestfromDB\", {\r\n                    nallottedspeccode: Map[\"nallottedspeccode\"],\r\n                    slno: 1,\r\n                    specBasedComponent: 4\r\n\r\n                })\r\n                urlArray[2] = TestGet;\r\n            }\r\n            Axios.all(urlArray).then(response => {\r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userinfo.stimezoneid, value: userinfo.ntimezonecode }\r\n                const newcomboData = parentChildComboLoad(regcolumnList, response[1].data,\r\n                    selectRecord, regchildColumnList, regSubSamplewithoutCombocomponent)\r\n                let TestCombined = [];\r\n                if (specBasedComponent === 4) {\r\n                    TestCombined = response[2].data\r\n                }\r\n                const comboData1 = newcomboData.comboData\r\n                const selectedRecord1 = newcomboData.selectedRecord\r\n                regSubSamplewithoutCombocomponent.map(componentrow => {\r\n                    if (componentrow.inputtype === \"date\") {\r\n                        if (componentrow.mandatory) {\r\n                            selectedRecord1[componentrow.label] =  componentrow.loadcurrentdate ?  new Date(): \"\";\r\n                        } \r\n                        // if (componentrow.timezone) {\r\n                        //     sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                        //         { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                        //         defaulttimezone ? defaulttimezone : -1\r\n                        // }\r\n                    }\r\n\r\n                })\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        screenName: \"SubSample\",\r\n                        showSaveContinue: false,\r\n                        parentPopUpSize: \"lg\",\r\n                        loading: false,\r\n                        lstComponent: [],\r\n                        openModal: true,\r\n                        operation: \"create\",\r\n                        loadRegSubSample: true,\r\n                        selectedRecord: selectedRecord1,\r\n                        regSubSamplecomboData: comboData1,\r\n                        regSubSamplecomboComponents,\r\n                        regSubSamplewithoutCombocomponent,\r\n                        TestCombined,\r\n                        regparentSubSampleColumnList: regcolumnList,\r\n                        ncontrolCode:ncontrolcode,\r\n                        timeZoneList,\r\n                        defaultTimeZone,\r\n                        masterData,\r\n                    }\r\n                });\r\n            })\r\n                .catch(error => {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                })\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\nexport function saveSubSample(Map) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/createSubSample\", Map)\r\n            .then(response => {\r\n               // let RegistrationGetSample = updatedObjectWithNewElement(response.data[\"selectedSample\"], masterData.RegistrationGetSample);\r\n               // let selectedSample = response.data[\"selectedSample\"];\r\n                let RegistrationGetSubSample = updatedObjectWithNewElement(Map.masterData.RegistrationGetSubSample,response.data[\"selectedSubSample\"]);\r\n                let RegistrationGetTest = response.data[\"selectedTest\"];\r\n                let selectedSubSample =RegistrationGetSubSample.length>0?[RegistrationGetSubSample[0]] : [];\r\n                RegistrationGetTest = sortData(RegistrationGetTest, \"npreregno\", \"desc\");\r\n                let selectedTest = RegistrationGetTest.length > 0 ? [RegistrationGetTest[0]] : [];\r\n               \r\n                let RegistrationParameter=response.data[\"RegistrationParameter\"]\r\n                \r\n                RegistrationParameter=getSameRecordFromTwoArrays(RegistrationParameter,selectedTest,'ntransactiontestcode')\r\n\r\n              let masterData={...Map.masterData} \r\n                masterData = {\r\n                    ...masterData, ...response.data,\r\n                     selectedSubSample, selectedTest,\r\n                    RegistrationGetSubSample, RegistrationGetTest,RegistrationParameter\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    showConfirmAlert: false,\r\n                    selectedRecord: undefined,\r\n                    loading: false,\r\n                    loadPreregister: false,\r\n                    showSample: undefined,\r\n                    openPortal: false,\r\n                    selectedSpec: {},\r\n                    selectComponent: {},\r\n                    SelectedTest: {},\r\n                    selectedComponent: {},\r\n                    Component: [],\r\n                    selectedRecord: {},\r\n                    SelectedTest: [],\r\n                    Test: [],\r\n                    selectedComponent: {}\r\n                }\r\n               // inputParam.postParamList[0]['clearFilter'] = 'yes'\r\n               // dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n               dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    masterData,\r\n                    openModal: false,\r\n                    loadEsign: false,\r\n                    loading: false,\r\n                    showSample: undefined,\r\n                    selectedRecord: {},\r\n                    loadRegSubSample:false\r\n                }\r\n            });\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                toast.error(error.message);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showConfirmAlert: false } })\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function getEditSubSampleComboService(inputParam, columnList, selectedRecord1,\r\n     childColumnList, comboComponents,\r\n    withoutCombocomponent) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const { userInfo, operation } = { ...inputParam };\r\n\r\n        const ntransactionsamplecode = inputParam.mastertoedit[inputParam.primaryKeyName];\r\n        let urlArray = [];\r\n\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n        const actualService = rsapi.post(\"dynamicpreregdesign/getComboValues\", {\r\n            parentcolumnlist: columnList,\r\n            childcolumnlist: childColumnList,\r\n            userinfo:userInfo\r\n        })\r\n        const selectedRegistration = rsapi.post(\"/registration/getEditRegistrationSubSampleDetails\", { ...inputParam.editRegParam, ntransactionsamplecode })\r\n\r\n        urlArray = [timeZoneService, actualService, selectedRegistration]\r\n\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let selectedRecord = { ...response[2].data[\"SelectedRegistrationSubSample\"][0] };\r\n                selectedRecord={...selectedRecord,...selectedRecord['jsondata']}\r\n              \r\n                const timeZoneMap = constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", undefined, undefined, true);\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n                const defaultTimeZone = { label: userInfo.stimezoneid, value: userInfo.ntimezonecode }\r\n             \r\n                if (selectedRecord.ntransactionstatus !== transactionStatus.PREREGISTER) {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTPREREGISTERSUBSAMPLETOEDIT\" }));\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                }\r\n\r\n                else {\r\n                    const languagetypeCode = undefined\r\n                    const comboData = response[1].data;\r\n                    let comboValues = {}\r\n                    if (columnList.length > 0) {\r\n                        columnList.map(x => {\r\n                            if (x.inputtype === 'combo') {\r\n                                if (comboData[x.label] && comboData[x.label].length > 0) //&& comboData[x.label][0].hasOwnProperty(x.source) \r\n                                {\r\n                                    if (comboData[x.label].length > 0) {\r\n                                        if (comboData[x.label][0].label === undefined) {\r\n                                            const optionList = constructjsonOptionList(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                            comboData[x.label] = optionList.get(\"OptionList\");\r\n                                        } else {\r\n                                            comboData[x.label] = comboData[x.label]\r\n                                            const optionList = constructjsonOptionDefault(comboData[x.label] || [], x.valuemember,\r\n                                                x.displaymember, false, false, true, undefined, x.source, x.isMultiLingual, languagetypeCode)\r\n                                        }\r\n                                    } else {\r\n                                        comboData[x.label] = []\r\n                                    }\r\n                                    //comboValues = childComboLoad(x, comboData, selectedRecord, \r\n                                    //   childColumnList, withoutCombocomponent)\\\r\n                                    comboValues = childComboLoad(x, comboData, selectedRecord1, \r\n                                        childColumnList, withoutCombocomponent)\r\n                                } else {\r\n                                    comboValues = {\r\n                                        \"comboData\": comboData,\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                comboValues = {\r\n                                    comboData: comboData,\r\n                                    ...comboValues\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                    else {\r\n                        comboValues = {\r\n                            \"comboData\": comboData,\r\n                        }\r\n                    }\r\n\r\n                   \r\n                        selectedRecord = { ...selectedRecord }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            operation,\r\n                            timeZoneList,\r\n                            defaultTimeZone,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            ncontrolCode: inputParam.editSubSampleRegParam.ncontrolCode,\r\n                            parentPopUpSize: \"lg\",\r\n                            loading: false,\r\n                            showSample: undefined,\r\n                            regSubSamplecomboData: comboValues.comboData,\r\n                            loadRegSubSample: true,\r\n                            //  regRecordToEdit:recordToEdit\r\n\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n\r\n    }\r\n}\r\nexport function onUpdateSubSampleRegistration(inputParam, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/updateRegistrationSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                //replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], masterData.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], masterData.RegistrationGetTest, \"ntransactiontestcode\");\r\n              //  let RegistrationGetSubSample=response.data[\"RegistrationGetSubSample\"];\r\n                let RegistrationGetTest = response.data[\"RegistrationGetTest\"];\r\n                masterData = {\r\n                    ...masterData,\r\n                   // selectedSample: response.data[\"selectedSample\"],\r\n                    selectedSubSample: response.data[\"selectedSubSample\"],\r\n                    selectedTest:response.data[\"selectedTest\"],\r\n                    RegistrationGetTest,\r\n                   // RegistrationGetSubSample,\r\n                    RegistrationParameter:response.data[\"RegistrationParameter\"]\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, openModal: false, loading: false, showConfirmAlert: false,\r\n                        regDateEditConfirmMessage: undefined, loadEsign: false,\r\n                        loadRegSubSample: false, selectedRecord: {}, showSample: undefined, screenName: \"SubSample\",\r\n                    }\r\n                });\r\n                // let inputData = {\r\n                //     masterData,\r\n                //     selectedTest: masterData.selectedTest,\r\n                //     ntransactiontestcode: masterData.selectedTest ?\r\n                //         String(masterData.selectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                //     npreregno: masterData.selectedSample ?\r\n                //         masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                //     userinfo: inputParam.inputData.userinfo,\r\n                //     activeTestTab : masterData.activeTestTab,\r\n                //     screenName: masterData.activeTestTab,\r\n                //     resultDataState: inputParam.resultDataState,\r\n                //     testCommentDataState: inputParam.testCommentDataState,\r\n                // }\r\n                // dispatch(getTestChildTabDetail(inputData, true))\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                }\r\n                else if (error.response.status === 302) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, loadEsign:false,\r\n                            regEditParam: inputParam,\r\n                            showConfirmAlert: true,\r\n                            parentPopUpSize: \"xl\",\r\n                            regDateEditConfirmMessage: error.response.data, showSample: undefined\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, showSample: undefined } })\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function cancelSubSampleAction(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/cancelSubSample\", inputParam.inputData)\r\n            .then(response => {\r\n               // replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                   // selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n               \r\n                let respObject = {\r\n                    masterData,\r\n                    ...inputParam.inputData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function preregRecordToQuarantine(inputParam, LoginProps) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/registration/quarantineRegistration\", inputParam.inputData)\r\n            .then(response => {\r\n                // replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                // replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                // replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSample\"], LoginProps.RegistrationGetSample, \"npreregno\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetSubSample\"], LoginProps.RegistrationGetSubSample, \"ntransactionsamplecode\");\r\n                replaceUpdatedObject(response.data[\"RegistrationGetTest\"], LoginProps.RegistrationGetTest, \"ntransactiontestcode\");\r\n\r\n                delete response.data[\"RegistrationGetSample\"];\r\n                delete response.data[\"RegistrationGetSubSample\"];\r\n                delete response.data[\"RegistrationGetTest\"];\r\n                let masterData = {\r\n                    ...LoginProps,\r\n                    selectedSample: replaceUpdatedObject(response.data[\"selectedSample\"], LoginProps.selectedSample, \"npreregno\"),\r\n                    selectedSubSample: replaceUpdatedObject(response.data[\"selectedSubSample\"], LoginProps.selectedSubSample, \"ntransactionsamplecode\"),\r\n                    selectedTest: replaceUpdatedObject(response.data[\"selectedTest\"], LoginProps.selectedTest, \"ntransactiontestcode\"),\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    loading: false,\r\n                    loadEsign: false,\r\n                    openModal: false,\r\n                    showSample: undefined\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data.rtn);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTestChildTabDetailRegistration(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactiontestcode: inputData.ntransactiontestcode,\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            let { testtake } = inputData;\r\n            let activeName = \"\";\r\n            let dataStateName = \"\";\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_PARAMETERRESULTS\":\r\n                    url = \"registration/getregistrationparameter\"\r\n                    activeName = \"RegistrationParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    activeName = \"ResultUsedInstrument\"\r\n                    dataStateName = \"instrumentDataState\"\r\n                    break;\r\n                case \"IDS_MATERIAL\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    activeName = \"ResultUsedTasks\"\r\n                    dataStateName = \"taskDataState\"\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    url = \"attachment/getTestAttachment\"\r\n                    activeName = \"RegistrationTestAttachment\"\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    url = \"comments/getTestComment\"\r\n                    activeName = \"RegistrationTestComment\"\r\n                    dataStateName = \"testCommentDataState\"\r\n                    break;\r\n                case \"IDS_DOCUMENTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    url = \"approval/getApprovalResultChangeHistory\"\r\n                    activeName = \"ApprovalResultChangeHistory\"\r\n                    dataStateName = \"resultChangeDataState\"\r\n                    break;\r\n                case \"IDS_TESTAPPROVALHISTORY\":\r\n                    url = \"approval/getApprovalHistory\"\r\n                    activeName = \"ApprovalHistory\"\r\n                    dataStateName = \"historyDataState\"\r\n                    break;\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                default:\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                if (isServiceRequired) {\r\n                    rsapi.post(url, inputParamData)\r\n                        .then(response => {\r\n                            let skipInfo = {};\r\n                            let responseData = { ...response.data, selectedSample: inputData.selectedSample || inputData.masterData.selectedSample, selectedTest: inputData.selectedTest }\r\n                            //responseData = sortData(responseData)\r\n                            // fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\r\n                            fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                            let masterData = {\r\n                                ...inputData.masterData,\r\n                                selectedSample: inputData.selectedSample || inputData.masterData.selectedSample,\r\n                                selectedTest: inputData.selectedTest,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode,\r\n                                selectedTestCode: inputData.ntransactiontestcode,\r\n                            }\r\n                            if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                                skipInfo = {\r\n\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        skip: 0,\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                skipInfo = {\r\n                                    ...skipInfo,\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    masterData,\r\n                                    loading: false,\r\n                                    showFilter: false,\r\n                                    activeTestTab: inputData.activeTestTab,\r\n                                    screenName: inputData.screenName,\r\n                                    testtake, testskip: undefined,\r\n                                    ...skipInfo\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(error.response.data);\r\n                            }\r\n                        })\r\n                } else {\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\", inputData.removeElementFromArray);\r\n                    let skipInfo = {};\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        selectedTest: inputData.selectedTest,\r\n                        selectedPreregno: inputData.npreregno,\r\n                        selectedSampleCode: inputData.ntransactionsamplecode,\r\n                        selectedTestCode: inputData.ntransactiontestcode,\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            screenName: inputData.screenName,\r\n                            testtake, testskip: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let { ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment, ApprovalResultChangeHistory,\r\n                RegistrationTestComment, ApprovalHistory } = inputData.masterData\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    ApprovalParameter = [];\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    ResultUsedInstrument = []\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    ResultUsedTasks = []\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    RegistrationTestAttachment = []\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    ApprovalResultChangeHistory = []\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    RegistrationTestComment = []\r\n                    break;\r\n                case \"IDS_APPROVALHISTORY\":\r\n                    ApprovalHistory = []\r\n                    break;\r\n                default:\r\n                    ApprovalParameter = []\r\n                    break;\r\n            }\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData,\r\n                        selectedTest: [],\r\n                        ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory, RegistrationTestComment, ApprovalHistory\r\n                    }, loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}