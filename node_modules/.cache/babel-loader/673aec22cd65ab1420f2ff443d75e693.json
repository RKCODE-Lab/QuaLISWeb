{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{toast}from'react-toastify';import{sortData}from'../components/CommonScript';export function getTestResultDataHistory(methodParam){return function(dispatch){return rsapi.post(\"/samplecertificationhistory/getParameterSampleResults\",{transactiontestcode:methodParam.primaryKeyValue,userinfo:methodParam.userInfo}).then(function(response){var sampleTestResults=methodParam.masterData.sampleTestResults||new Map();sampleTestResults.set(methodParam.primaryKeyValue,Object.values(response.data[\"ParameterSampleResults\"]));var masterData=_objectSpread(_objectSpread({},methodParam.masterData),{},{sampleTestResults:sampleTestResults});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{//...masterData,\nmasterData:masterData,dataState:methodParam.dataState,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getActiveSampleHistory(Sample,userInfo,masterData,dataStateParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"samplecertificationhistory/getSampleCertificationById\",{nregcertificatecode:parseInt(Sample.nregcertificatecode),userinfo:userInfo,npreregno:masterData.SelectedRegistration.npreregno}).then(function(response){var printHistory=response.data.printHistory;masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{printHistory:printHistory});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false,printHistoryDataState:_objectSpread(_objectSpread({},dataStateParam.printHistoryDataState),{},{sort:undefined,filter:undefined}),appHistoryDataState:_objectSpread(_objectSpread({},dataStateParam.appHistoryDataState),{},{sort:undefined,filter:undefined}),resultsDataState:_objectSpread(_objectSpread({},dataStateParam.resultsDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getWholeFilterStatusHistory(masterData,inputData,operation,dataStateParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"samplecertificationhistory/getFilterWholeStatus\",{FromDate:inputData.FromDate,ToDate:inputData.ToDate,userinfo:inputData.userinfo,nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode//nfilterstatus:inputData.nfilterstatus\n}).then(function(response){var SelectedRegistration=response.data.SelectedRegistration?response.data.SelectedRegistration:\"\";var Registration=response.data.Registration?response.data.Registration:\"\";var FilterStatusValue=response.data.FilterStatusValue?response.data.FilterStatusValue:\"\";var RegistrationSubTypeValue=response.data.RegistrationSubTypeValue?response.data.RegistrationSubTypeValue:masterData.RegistrationSubTypeValue;masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{Registration:Registration,SelectedRegistration:SelectedRegistration,FilterStatusValue:FilterStatusValue,RegistrationSubTypeValue:RegistrationSubTypeValue,operation:operation});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,printHistoryDataState:_objectSpread(_objectSpread({},dataStateParam.printHistoryDataState),{},{sort:undefined,filter:undefined}),appHistoryDataState:_objectSpread(_objectSpread({},dataStateParam.appHistoryDataState),{},{sort:undefined,filter:undefined}),resultsDataState:_objectSpread(_objectSpread({},dataStateParam.resultsDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/SampleCertificationHistoryAction.js"],"names":["rsapi","DEFAULT_RETURN","initRequest","toast","sortData","getTestResultDataHistory","methodParam","dispatch","post","transactiontestcode","primaryKeyValue","userinfo","userInfo","then","response","sampleTestResults","masterData","Map","set","Object","values","data","type","payload","dataState","loading","catch","error","status","message","warn","getActiveSampleHistory","Sample","dataStateParam","nregcertificatecode","parseInt","npreregno","SelectedRegistration","printHistory","operation","modalName","undefined","printHistoryDataState","sort","filter","appHistoryDataState","resultsDataState","getWholeFilterStatusHistory","inputData","FromDate","ToDate","nsampletypecode","nregtypecode","nregsubtypecode","Registration","FilterStatusValue","RegistrationSubTypeValue","showFilter"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { toast } from 'react-toastify';\r\nimport { sortData } from '../components/CommonScript';\r\n\r\n\r\nexport function getTestResultDataHistory(methodParam) {\r\n    return function (dispatch) {\r\n        return rsapi.post(\"/samplecertificationhistory/getParameterSampleResults\",\r\n            { transactiontestcode: methodParam.primaryKeyValue,\r\n              userinfo: methodParam.userInfo })\r\n            .then(response => {\r\n                let sampleTestResults = methodParam.masterData.sampleTestResults||new Map();\r\n                sampleTestResults.set(methodParam.primaryKeyValue,  Object.values(response.data[\"ParameterSampleResults\"]));\r\n                const masterData = {\r\n                    ...methodParam.masterData,\r\n                    sampleTestResults,\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        //...masterData,\r\n                        masterData: masterData,\r\n                        dataState: methodParam.dataState,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getActiveSampleHistory(Sample, userInfo, masterData, dataStateParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"samplecertificationhistory/getSampleCertificationById\",\r\n            { nregcertificatecode: parseInt(Sample.nregcertificatecode), userinfo: userInfo,\r\n                npreregno: masterData.SelectedRegistration.npreregno })\r\n            .then(response => {\r\n                const printHistory = response.data.printHistory;\r\n                masterData = { ...masterData, ...response.data, printHistory };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, operation: null, modalName: undefined,\r\n                        loading: false,\r\n                        printHistoryDataState:{...dataStateParam.printHistoryDataState,sort:undefined, filter:undefined},\r\n                        appHistoryDataState:{...dataStateParam.appHistoryDataState,sort:undefined, filter:undefined},\r\n                        resultsDataState:{...dataStateParam.resultsDataState,sort:undefined, filter:undefined},\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getWholeFilterStatusHistory(masterData, inputData, operation, dataStateParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"samplecertificationhistory/getFilterWholeStatus\",\r\n            {\r\n                FromDate: inputData.FromDate, ToDate: inputData.ToDate, userinfo: inputData.userinfo, nsampletypecode: inputData.nsampletypecode,\r\n                nregtypecode: inputData.nregtypecode, nregsubtypecode: inputData.nregsubtypecode\r\n                //nfilterstatus:inputData.nfilterstatus\r\n            })\r\n\r\n            .then(response => {\r\n                const SelectedRegistration = response.data.SelectedRegistration ? response.data.SelectedRegistration : \"\";\r\n                const Registration = response.data.Registration ? response.data.Registration : \"\";\r\n                const FilterStatusValue = response.data.FilterStatusValue ? response.data.FilterStatusValue : \"\";\r\n                const RegistrationSubTypeValue = response.data.RegistrationSubTypeValue ? response.data.RegistrationSubTypeValue : masterData.RegistrationSubTypeValue;\r\n                masterData = {\r\n                    ...masterData, ...response.data, Registration, SelectedRegistration, FilterStatusValue,\r\n                    RegistrationSubTypeValue, operation,\r\n                };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        printHistoryDataState:{...dataStateParam.printHistoryDataState,sort:undefined, filter:undefined},\r\n                        appHistoryDataState:{...dataStateParam.appHistoryDataState,sort:undefined, filter:undefined},\r\n                        resultsDataState:{...dataStateParam.resultsDataState,sort:undefined, filter:undefined},\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}