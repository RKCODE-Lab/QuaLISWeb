{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import CustomTab from'../../components/custom-tabs/custom-tabs.component';import{Row,Col,Card,FormGroup,FormLabel,Button}from'react-bootstrap';import{callService,crudMaster,updateStore,getSampleCertTypeChange,getSampleCertRegSubTypeChange,filterColumnData,getTestResultDataHistory,getActiveSampleHistory,generateCertificateAction,sentCertificateAction,correctionCertificateAction,xmlExportAction,getWholeFilterStatusHistory}from'../../actions';import{getControlMap,convertDateValuetoString,rearrangeDateFormat}from'../../components/CommonScript';import{constructOptionList,validateTwoDigitDate,sortData}from'../../components/CommonScript';import ApprovalHistory from'./ApprovalHistory';import PrintHistory from'./PrintHistory';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import Results from'./Results';import{connect}from'react-redux';import{toast}from'react-toastify';import{FormattedMessage,injectIntl}from'react-intl';import SampleCertificationHistoryFilter from'./SampleCertificationHistoryFilter';import{ReadOnlyText,ContentPanel,OutlineTransactionStatus,DecisionStatus}from'../../components/App.styles';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import TransactionListMaster from'../../components/TransactionListMaster';import{designProperties}from'../../components/Enumeration';import SplitterLayout from\"react-splitter-layout\";import PerfectScrollbar from'react-perfect-scrollbar';import{ListWrapper}from'../../components/client-group.styles';import{ProductList}from'../product/product.styled';import{faSync}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{process}from'@progress/kendo-data-query';import{ReactComponent as RefreshIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var SampleCertificationHistory=/*#__PURE__*/function(_Component){_inherits(SampleCertificationHistory,_Component);var _super=_createSuper(SampleCertificationHistory);function SampleCertificationHistory(props){var _this;_classCallCheck(this,SampleCertificationHistory);_this=_super.call(this,props);_this.onSampleTypeChange=function(event,fieldName,labelname){if(event!==null){var _Map={};_Map[\"nsampletypecode\"]=parseInt(event.value);_Map['userinfo']=_this.props.Login.userInfo;_this.props.getSampleCertTypeChange(_Map,_this.props.Login.masterData,event,labelname);}};_this.onRegSubTypeChange=function(comboData,fieldName){var regSubTypeValue=_this.state.regSubTypeValue||{};regSubTypeValue[fieldName]=comboData;_this.setState({regSubTypeValue:regSubTypeValue});//this.props.getSampleCertRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\n};_this.onFilterChange=function(comboData,fieldName){var FilterStatusValue=_this.state.FilterStatusValue||{};FilterStatusValue[fieldName]=comboData;_this.setState({FilterStatusValue:FilterStatusValue});//this.props.getSampleCertRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\n};_this.onRegTypeChange=function(event,fieldName,labelname){if(event!==null){var _Map2={};_Map2[\"nregtypecode\"]=parseInt(event.value);_Map2['userinfo']=_this.props.Login.userInfo;_this.props.getSampleCertRegSubTypeChange(_Map2,_this.props.Login.masterData,event,labelname);}};_this.handleExpandChange=function(row,dataState){var viewParam={TransactionSampleResults:_this.props.Login.masterData.TransactionSampleResults,userInfo:_this.props.Login.userInfo,primaryKeyField:\"ntransactiontestcode\",npreregno:\"npreregno\",masterData:_this.props.Login.masterData};_this.props.getTestResultDataHistory(_objectSpread(_objectSpread({},viewParam),{},{dataState:dataState,primaryKeyValue:row[\"dataItem\"][viewParam.primaryKeyField],viewRow:row[\"dataItem\"]}));};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};_this.handleFilterDateChange=function(dateName,dateValue){var selectedFilter=_this.state.selectedFilter;if(dateValue===null){dateValue=new Date();}selectedFilter[dateName]=dateValue;_this.setState({selectedFilter:selectedFilter});};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});// setTimeout(() => { this._scrollBarRef.updateScroll() })\n};_this.onFilterSubmit=function(){var SampleTypeValue=_this.state.SampleTypeValue?_this.state.SampleTypeValue.nsampletypecode:\"\";if(SampleTypeValue){var RealSampleTypeValue=_this.state.SampleTypeValue?_this.state.SampleTypeValue.nsampletypecode.label:\"\";var RealRegTypeValue=_this.state.RegTypeValue?_this.state.RegTypeValue.nregtypecode.label:\"\";var RealRegSubTypeValue=_this.state.regSubTypeValue?_this.state.regSubTypeValue.nregsubtypecode.label:\"\";var RealFromDate=new Date(_this.state.selectedFilter.fromdate||_this.props.Login.masterData.FromDate);var RealToDate=new Date(_this.state.selectedFilter.todate||_this.props.Login.masterData.ToDate);var inputData={nsampletypecode:_this.state.SampleTypeValue.nsampletypecode.value,nregtypecode:_this.state.RegTypeValue.nregtypecode.value,nregsubtypecode:_this.state.regSubTypeValue.nregsubtypecode.value,// nfilterstatus: this.state.FilterStatusValue.ntransactionstatus.value,\nuserinfo:_this.props.Login.userInfo};var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{RealSampleTypeValue:RealSampleTypeValue,RealRegTypeValue:RealRegTypeValue,RealRegSubTypeValue:RealRegSubTypeValue,RealFromDate:RealFromDate,RealToDate:RealToDate});var obj=convertDateValuetoString(_this.state.selectedFilter.fromdate||_this.props.Login.masterData.RealFromDate,_this.state.selectedFilter.todate||_this.props.Login.masterData.RealToDate,_this.props.Login.userInfo);inputData['FromDate']=obj.fromDate;inputData['ToDate']=obj.toDate;_this.props.getWholeFilterStatusHistory(masterData,inputData,\"FilterSubmit\",{printHistoryDataState:_this.state.printHistoryDataState,appHistoryDataState:_this.state.appHistoryDataState,resultsDataState:_this.state.resultsDataState});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.reloadData=function(){var SampleTypeValue=_this.state.SampleTypeValue?_this.state.SampleTypeValue.nsampletypecode:\"\";if(SampleTypeValue){var inputData={nsampletypecode:_this.state.SampleTypeValue.nsampletypecode.value,nregtypecode:_this.state.RegTypeValue.nregtypecode.value,nregsubtypecode:_this.props.Login.masterData.RegistrationSubTypeValue?_this.props.Login.masterData.RegistrationSubTypeValue.nregsubtypecode:_this.state.regSubTypeValue?_this.state.regSubTypeValue.nregsubtypecode.value:\"\",userinfo:_this.props.Login.userInfo};var obj=convertDateValuetoString(_this.state.selectedFilter.fromdate||_this.props.Login.masterData.RealFromDate,_this.state.selectedFilter.todate||_this.props.Login.masterData.RealToDate,_this.props.Login.userInfo);inputData['FromDate']=obj.fromDate;inputData['ToDate']=obj.toDate;//let inputParam = { masterData, inputData }\n// const FilterStatusValue ={ntransactionstatus: this.state.FilterStatusValue.ntransactionstatus?\n//     this.state.FilterStatusValue.ntransactionstatus.label: \"\"};\n// this.setState({FilterStatusValue});\n_this.props.getWholeFilterStatusHistory(_this.props.Login.masterData,inputData,\"FilterSubmit\",{printHistoryDataState:_this.state.printHistoryDataState,appHistoryDataState:_this.state.appHistoryDataState,resultsDataState:_this.state.resultsDataState});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLSSELECTALLTHEVALUEINFILTER\"}));}};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_APPROVALHISTORY\",/*#__PURE__*/React.createElement(ApprovalHistory,{approvalHistory:_this.props.Login.masterData.approvalHistory,dataResult:process(_this.props.Login.masterData.approvalHistory||[],_this.state.appHistoryDataState),dataState:_this.props.Login.screenName===\"\"||_this.props.Login.screenName===\"IDS_APPROVALHISTORY\"?_this.state.appHistoryDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},controlMap:_this.state.controlMap,userInfo:_this.props.Login.userInfo,dataStateChange:function dataStateChange(event){return _this.setState({appHistoryDataState:event.dataState});},userRoleControlRights:_this.state.userRoleControlRights,screenName:\"IDS_APPROVALHISTORY\"}));tabMap.set(\"IDS_PRINTHISTORY\",/*#__PURE__*/React.createElement(PrintHistory,{printHistory:_this.props.Login.masterData.printHistory,dataResult:process(_this.props.Login.masterData.printHistory||[],_this.state.printHistoryDataState),dataState:_this.props.Login.screenName===\"\"||_this.props.Login.screenName===\"IDS_PRINTHISTORY\"?_this.state.printHistoryDataState:{skip:0,take:10},controlMap:_this.state.controlMap,dataStateChange:function dataStateChange(event){return _this.setState({printHistoryDataState:event.dataState});},userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,screenName:\"IDS_PRINTHISTORY\"}));tabMap.set(\"IDS_RESULTS\",/*#__PURE__*/React.createElement(Results,{TransactionSampleTests:_this.props.Login.masterData.TransactionSampleTests,dataResult:process(_this.props.Login.masterData.TransactionSampleTests||[],_this.state.resultsDataState),dataState:_this.props.Login.screenName===\"\"||_this.props.Login.screenName===\"IDS_RESULTS\"?_this.state.resultsDataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5},controlMap:_this.state.controlMap,dataStateChange:function dataStateChange(event){return _this.setState({resultsDataState:event.dataState});},userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,handleExpandChange:_this.handleExpandChange,screenName:\"IDS_RESULTS\",childList:_this.props.Login.masterData.sampleTestResults,childMappingField:\"ntransactiontestcode\",hasChild:true// childList ={props.childList || new Map()}\n}));//         tabMap.set(\"IDS_SAMPLEREPORTHISTORY\", <SampleReportHistory \n//         userRoleControlRights={this.props.userRoleControlRights}\n//         controlMap={this.props.controlMap}\n//         inputParam={this.props.inputParam}\n//         userInfo={this.props.userInfo}\n//         masterData={this.props.masterData}\n//         primaryList={\"ReportHistory\"}\n//         dataResult={process(this.props.masterData[\"ReportHistory\"]||[], this.state.dataStateReportHistory)}\n//         dataState={(this.props.screenName === undefined || this.props.screenName === \"IDS_BATCHREPORTHISTORY\") ? this.state.dataStateReportHistory : { skip: 0, take: 10 }}\n//         dataStateChange={(event) => this.setState({ dataStateReportHistory: event.data })}\n//         columnList={this.extractedReportHistoryColumnList}\n//         methodUrl={\"Cetrificate\"}\n//         isActionRequired={true}\n//         selectedId={0}\n//         expandField=\"\"\n//         handleExpandChange={this.props.handleExpandChange}\n//         hasChild={false}\n//         childColumnList={this.TestColumnList}\n//         childList ={this.props.childList || new Map()}\n//         viewDownloadFile= {this.props.viewDownloadFile}\n//         downloadParam = {{classUrl:\"certificategeneration\",operation:\"download\",methodUrl:\"Report\"}}\n//         hasControlWithOutRights={true}\n//         showDocViewer={true}\n//         handleClickRegenrate={this.props.handleClickRegenrate}\n//    />)\nreturn tabMap;};var appHistoryDataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var resultsDataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var printHistoryDataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var dataStateReportHistory={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.searchSampleRef=React.createRef();_this.state={openModal:false,masterStatus:\"\",controlMap:new Map(),error:\"\",selectedRecord:{},selectedFilter:{},userRoleControlRights:[],appHistoryDataState:appHistoryDataState,resultsDataState:resultsDataState,printHistoryDataState:printHistoryDataState,dataStateReportHistory:dataStateReportHistory,skip:0,take:_this.props.Login.settings?_this.props.Login.settings[3]:25};_this.searchRef=React.createRef();_this.searchFieldList=[\"scomponentname\",\"sarno\",\"sproductname\",\"ssamplecertificateversioncode\",\"sversion\",\"smanufname\",\"sspecname\",\"nrmsno\",\"dtransactiondate\",\"smanuflotno\"];return _this;}_createClass(SampleCertificationHistory,[{key:\"covertDatetoString\",value:function covertDatetoString(startDateValue,endDateValue){var startDate=new Date(startDateValue);var endDate=new Date(endDateValue);var prevMonth=validateTwoDigitDate(String(startDate.getMonth()+1));var currentMonth=validateTwoDigitDate(String(endDate.getMonth()+1));var prevDay=validateTwoDigitDate(String(startDate.getDate()));var currentDay=validateTwoDigitDate(String(endDate.getDate()));var fromDateOnly=startDate.getFullYear()+'-'+prevMonth+'-'+prevDay;var toDateOnly=endDate.getFullYear()+'-'+currentMonth+'-'+currentDay;var fromDate=fromDateOnly+\"T00:00:00\";var toDate=toDateOnly+\"T23:59:59\";return{fromDate:fromDate,toDate:toDate,breadCrumbFrom:fromDateOnly,breadCrumbto:toDateOnly};}},{key:\"render\",value:function render(){var _this2=this;var _this$props$Login$mas=this.props.Login.masterData,SelectedRegistration=_this$props$Login$mas.SelectedRegistration,searchedData=_this$props$Login$mas.searchedData,Registration=_this$props$Login$mas.Registration;// if (Registration) {\n//     sortData(Registration, \"descending\", \"nregcertificatecode\");\n// }\nvar getSample={screenName:\"IDS_SAMPLECERTIFICATIONGENERATION\",operation:\"get\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,methodUrl:\"SampleCertification\",keyName:\"samplecertification\"};this.fromDate=this.state.selectedFilter[\"fromdate\"]&&this.state.selectedFilter[\"fromdate\"]||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.RealFromDate);this.toDate=this.state.selectedFilter[\"todate\"]&&this.state.selectedFilter[\"todate\"]||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.RealToDate);var obj=convertDateValuetoString(this.state.selectedFilter.fromdate||this.props.Login.masterData.RealFromDate,this.state.selectedFilter.todate||this.props.Login.masterData.RealToDate,this.props.Login.userInfo);this.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom||this.state.RealFromDate},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto||this.state.RealToDate},{\"label\":\"IDS_SAMPLETYPE\",//\"value\": this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.ssampletypename\n\"value\":this.state.RealSampleTypeValue},{\"label\":\"IDS_REGTYPE\",\"value\":this.state.RealRegTypeValue},{\"label\":\"IDS_REGSUBTYPE\",\"value\":this.state.RealRegSubTypeValue}// {\n//     \"label\": \"IDS_FILTERSTATUS\",\n//     \"value\": this.state.RealFilterValue\n// }\n];var filterParam={inputListName:\"Registration\",selectedObject:\"SelectedRegistration\",primaryKeyField:\"nregcertificatecode\",fetchUrl:\"samplecertificationhistory/getSampleCertificationById\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-4 screen-height-window\"},this.breadCrumbData.length>0?/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData}):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height sticky_head_parent\",ref:function ref(parentHeight){_this2.parentHeight=parentHeight;}},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",percentage:true,primaryIndex:1,secondaryInitialSize:30},/*#__PURE__*/React.createElement(TransactionListMaster,{masterList:searchedData||Registration||[],selectedMaster:[SelectedRegistration],primaryKeyField:\"nregcertificatecode\",getMasterDetail:function getMasterDetail(SampleCertification){return _this2.props.getActiveSampleHistory(SampleCertification,_this2.props.Login.userInfo,_this2.props.Login.masterData,{printHistoryDataState:_this2.state.printHistoryDataState,appHistoryDataState:_this2.state.appHistoryDataState,resultsDataState:_this2.state.resultsDataState});},inputParam:getSample,additionalParam:[],mainField:\"scomponentname\"// selectedListName=\"smanuflotno\"\n// objectName=\"sarno\"\n,listName:\"IDS_SAMPLE\",showStatusLink:true,subFields:[_defineProperty({},designProperties.VALUE,\"smanuflotno\"),_defineProperty({},designProperties.VALUE,\"sarno\")]// moreField=\"sarno\"\n//needValidation={false}\n,needFilter:true,filterColumnData:this.props.filterColumnData,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam,handlePageChange:this.handlePageChange,onFilterSubmit:this.onFilterSubmit,skip:this.state.skip,take:this.state.take,commonActions:/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right icon-group-wrap\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2 p-0\",variant:\"link\",onClick:function onClick(){return _this2.reloadData();},\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})},/*#__PURE__*/React.createElement(RefreshIcon,{className:\"custom_icons\"}))),filterComponent:[{\"IDS_SAMPLECERTIFICATEGENERATION\":/*#__PURE__*/React.createElement(SampleCertificationHistoryFilter,{formatMessage:this.props.intl.formatMessage,Product:this.props.Login.masterData.MAHProduct||[],SampleType:this.state.SampleType||[],RegistrationType:this.state.RegistrationType||[],RegistrationSubType:this.state.RegistrationSubType||[],FilterStatus:this.state.FilterList||[],userInfo:this.props.Login.userInfo||{},SampleTypeValue:this.state.SampleTypeValue||{},RegTypeValue:this.state.RegTypeValue||{},regSubTypeValue:this.state.regSubTypeValue||{},FilterStatusValue:this.state.FilterStatusValue||{},FromDate:this.fromDate,ToDate:this.toDate,onSampleTypeChange:this.onSampleTypeChange,onRegTypeChange:this.onRegTypeChange,onRegSubTypeChange:this.onRegSubTypeChange,handleFilterDateChange:this.handleFilterDateChange,onFilterChange:this.onFilterChange})}]}),/*#__PURE__*/React.createElement(SplitterLayout,{vertical:true,borderColor:\"#999\",percentage:true,primaryIndex:1,secondaryInitialSize:400,customClassName:\"fixed_list_height\"},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card_group\"},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.SelectedRegistration?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedRegistration.scomponentname),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(OutlineTransactionStatus,{transcolor:this.props.Login.masterData.SelectedRegistration.scolorhexcode},this.props.Login.masterData.SelectedRegistration.stransdisplaystatus))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ARNO\",message:\"Arno\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.sarno))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COMPONENTNAME\",message:\"Componentname\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.scomponentname))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_GENERICPRODUCT\",message:\"Genericproduct\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.sproductname))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_VERSION\",message:\"Version\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.sversion))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MANUFACTURENAME\",message:\"Manufacturename\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.smanufname))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CERTIFICATENUMBER\",message:\"Certificatenumber\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.ssamplecertificateversioncode))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SPECIFICATIONSTUDYPLAN\",message:\"Specificationname\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.sspecname))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RMSNO\",message:\"Rmsno\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.nrmsno))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_REGISTRATIONDATE\",message:\"RegistrationDate\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.dtransactiondate))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_BATCHLOTNO\",message:\"Batchlotno\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedRegistration.smanuflotno))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_DECISIONSTATUS\",message:\"Decisionstatus\"})),/*#__PURE__*/React.createElement(DecisionStatus,{decisioncolor:this.props.Login.masterData.SelectedRegistration.sdecisioncolor},this.props.Login.masterData.SelectedRegistration.sdecisionstatus)))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",{className:\"horizontal-line\"}))),/*#__PURE__*/React.createElement(CustomTab,{tabDetail:this.tabDetail(),onTabChange:this.onTabChange})):\"\"))))))))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData!==previousProps.Login.masterData){var SampleMap=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",undefined,undefined,true);var SampleType=SampleMap.get(\"OptionList\");var SampleTypeValue={nsampletypecode:SampleType.length>0?SampleType[0]:\"\"};var RegMap=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",undefined,undefined,true);var RegistrationType=RegMap.get(\"OptionList\");var RegTypeValue={nregtypecode:RegistrationType.length>0?RegistrationType[0]:\"\"};var RegSubMap=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'nsorter',\"ascending\",false);var RegistrationSubType=RegSubMap.get(\"OptionList\");//const regSubTypeValue = {nregsubtypecode: RegistrationSubType.length> 0? RegistrationSubType[2]: \"\"};\nvar FilterStatus=constructOptionList(this.props.Login.masterData.FilterStatus||[],\"napprovalstatuscode\",\"stransdisplaystatus\",undefined,undefined,true);var FilterList=FilterStatus.get(\"OptionList\");var FilterStatusValue={};var regSubTypeValue={};if(this.props.Login.masterData.operation===\"FilterSubmit\"){FilterStatusValue=this.state.FilterStatusValue;regSubTypeValue=this.state.regSubTypeValue;}else{FilterStatusValue={ntransactionstatus:FilterList.length>0?FilterList[1]:\"\"};regSubTypeValue={nregsubtypecode:RegistrationSubType.length>0?{label:this.props.Login.masterData.RegistrationSubTypeValue.sregsubtypename,value:this.props.Login.masterData.RegistrationSubTypeValue.nregsubtypecode,item:this.props.Login.masterData.ApprovalVersionValue}:\"\"};}var RealFilterValue={};var RealRegSubTypeValue={};var RealFromDate={};var RealToDate={};if(this.props.Login.masterData.RealFilterValue!==previousProps.Login.masterData){RealFilterValue=this.props.Login.masterData.RealFilterValue?this.props.Login.masterData.RealFilterValue:this.props.Login.masterData.FilterStatusValue?this.props.Login.masterData.FilterStatusValue.stransdisplaystatus:\"\";}if(this.props.Login.masterData.RealRegSubTypeValue!==previousProps.Login.masterData){RealRegSubTypeValue=this.props.Login.masterData.RealRegSubTypeValue?this.props.Login.masterData.RealRegSubTypeValue:this.props.Login.masterData.RegistrationSubTypeValue?this.props.Login.masterData.RegistrationSubTypeValue.sregsubtypename:\"\";// RealRegSubTypeValue = this.props.Login.masterData.RealRegSubTypeValue ? this.props.Login.masterData.RealRegSubTypeValue :\n//     this.props.Login.masterData.RegistrationSubTypeValue ? this.props.Login.masterData.RegistrationSubTypeValue.sregsubtypename : \"\"\n}if(this.props.Login.masterData.RealFromDate!==previousProps.Login.masterData){RealFromDate=this.props.Login.masterData.RealFromDate?this.props.Login.masterData.RealFromDate:this.props.Login.masterData.RealFromDate?this.props.Login.masterData.RealFromDate:\"\";}if(this.props.Login.masterData.RealToDate!==previousProps.Login.masterData){RealToDate=this.props.Login.masterData.RealToDate?this.props.Login.masterData.RealToDate:this.props.Login.masterData.RealToDate?this.props.Login.masterData.RealToDate:\"\";}// if (this.props.Login.masterData.Registration !== previousProps.Login.masterData) {\n//     const  Registration  = this.props.Login.masterData;\n//     sortData(Registration, \"descending\", \"nregcertificatecode\");\n// }\nvar _this$state=this.state,printHistoryDataState=_this$state.printHistoryDataState,appHistoryDataState=_this$state.appHistoryDataState,resultsDataState=_this$state.resultsDataState;var isStateChanged=false;if(this.props.Login.printHistoryDataState&&this.props.Login.printHistoryDataState!==previousProps.Login.printHistoryDataState){printHistoryDataState=this.props.Login.printHistoryDataState;isStateChanged=true;}if(this.props.Login.appHistoryDataState&&this.props.Login.appHistoryDataState!==previousProps.Login.appHistoryDataState){appHistoryDataState=this.props.Login.appHistoryDataState;isStateChanged=true;}if(this.props.Login.resultsDataState&&this.props.Login.resultsDataState!==previousProps.Login.resultsDataState){resultsDataState=this.props.Login.resultsDataState;isStateChanged=true;}var RealSampleTypeValue=this.props.Login.masterData.SampleTypeValue?this.props.Login.masterData.SampleTypeValue.ssampletypename:\"\";var RealRegTypeValue=this.props.Login.masterData.RegistrationTypeValue?this.props.Login.masterData.RegistrationTypeValue.sregtypename:\"\";if(isStateChanged){this.setState({printHistoryDataState:printHistoryDataState,appHistoryDataState:appHistoryDataState,resultsDataState:resultsDataState,SampleType:SampleType,RegistrationType:RegistrationType,RegistrationSubType:RegistrationSubType,FilterList:FilterList,SampleTypeValue:SampleTypeValue,RegTypeValue:RegTypeValue,RealSampleTypeValue:RealSampleTypeValue,regSubTypeValue:regSubTypeValue,FilterStatusValue:FilterStatusValue,RealRegTypeValue:RealRegTypeValue,RealRegSubTypeValue:RealRegSubTypeValue,RealFilterValue:RealFilterValue,RealFromDate:RealFromDate,RealToDate:RealToDate});}else{this.setState({SampleType:SampleType,RegistrationType:RegistrationType,RegistrationSubType:RegistrationSubType,FilterList:FilterList,SampleTypeValue:SampleTypeValue,RegTypeValue:RegTypeValue,RealSampleTypeValue:RealSampleTypeValue,regSubTypeValue:regSubTypeValue,FilterStatusValue:FilterStatusValue,RealRegTypeValue:RealRegTypeValue,RealRegSubTypeValue:RealRegSubTypeValue,RealFilterValue:RealFilterValue,RealFromDate:RealFromDate,RealToDate:RealToDate});}}// if (this.props.Login.masterData.RealFilterValue !== previousProps.Login.masterData)  {\n//     const RealFilterValue = this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue:\"\"\n//     this.setState({RealFilterValue});\n//  }\n//else{\n//     const RealFilterValue = this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue:\"\"\n//     //this.setState({RealFilterValue});\n// }this.state.regSubTypeValue\nif(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.showConfirmAlert!==state.showConfirmAlert){return{showConfirmAlert:props.Login.showConfirmAlert};}// if (props.Login.selectComponent !== state.selectComponent) {\n//     return {\n//         selectComponent: props.Login.selectComponent\n//     }\n// }\nreturn null;}}]);return SampleCertificationHistory;}(Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,getSampleCertTypeChange:getSampleCertTypeChange,filterColumnData:filterColumnData,getSampleCertRegSubTypeChange:getSampleCertRegSubTypeChange,getTestResultDataHistory:getTestResultDataHistory,getActiveSampleHistory:getActiveSampleHistory,generateCertificateAction:generateCertificateAction,sentCertificateAction:sentCertificateAction,correctionCertificateAction:correctionCertificateAction,xmlExportAction:xmlExportAction,getWholeFilterStatusHistory:getWholeFilterStatusHistory})(injectIntl(SampleCertificationHistory));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testapproval/SampleCertificationHistory.jsx"],"names":["React","Component","CustomTab","Row","Col","Card","FormGroup","FormLabel","Button","callService","crudMaster","updateStore","getSampleCertTypeChange","getSampleCertRegSubTypeChange","filterColumnData","getTestResultDataHistory","getActiveSampleHistory","generateCertificateAction","sentCertificateAction","correctionCertificateAction","xmlExportAction","getWholeFilterStatusHistory","getControlMap","convertDateValuetoString","rearrangeDateFormat","constructOptionList","validateTwoDigitDate","sortData","ApprovalHistory","PrintHistory","DEFAULT_RETURN","Results","connect","toast","FormattedMessage","injectIntl","SampleCertificationHistoryFilter","ReadOnlyText","ContentPanel","OutlineTransactionStatus","DecisionStatus","BreadcrumbComponent","TransactionListMaster","designProperties","SplitterLayout","PerfectScrollbar","ListWrapper","ProductList","faSync","FontAwesomeIcon","process","mapStateToProps","state","Login","SampleCertificationHistory","props","onSampleTypeChange","event","fieldName","labelname","Map","parseInt","value","userInfo","masterData","onRegSubTypeChange","comboData","regSubTypeValue","setState","onFilterChange","FilterStatusValue","onRegTypeChange","handleExpandChange","row","dataState","viewParam","TransactionSampleResults","primaryKeyField","npreregno","primaryKeyValue","viewRow","onTabChange","tabProps","screenName","updateInfo","typeName","data","handleFilterDateChange","dateName","dateValue","selectedFilter","Date","handlePageChange","e","skip","take","onFilterSubmit","SampleTypeValue","nsampletypecode","RealSampleTypeValue","label","RealRegTypeValue","RegTypeValue","nregtypecode","RealRegSubTypeValue","nregsubtypecode","RealFromDate","fromdate","FromDate","RealToDate","todate","ToDate","inputData","userinfo","obj","fromDate","toDate","printHistoryDataState","appHistoryDataState","resultsDataState","warn","intl","formatMessage","id","reloadData","RegistrationSubTypeValue","tabDetail","tabMap","set","approvalHistory","settings","controlMap","userRoleControlRights","printHistory","inputParam","TransactionSampleTests","sampleTestResults","dataStateReportHistory","searchSampleRef","createRef","openModal","masterStatus","error","selectedRecord","searchRef","searchFieldList","startDateValue","endDateValue","startDate","endDate","prevMonth","String","getMonth","currentMonth","prevDay","getDate","currentDay","fromDateOnly","getFullYear","toDateOnly","breadCrumbFrom","breadCrumbto","SelectedRegistration","searchedData","Registration","getSample","operation","methodUrl","keyName","breadCrumbData","filterParam","inputListName","selectedObject","fetchUrl","fecthInputObject","length","parentHeight","SampleCertification","VALUE","MAHProduct","SampleType","RegistrationType","RegistrationSubType","FilterList","scomponentname","scolorhexcode","stransdisplaystatus","sarno","sproductname","sversion","smanufname","ssamplecertificateversioncode","sspecname","nrmsno","dtransactiondate","smanuflotno","sdecisioncolor","sdecisionstatus","previousProps","SampleMap","undefined","get","RegMap","RegSubMap","FilterStatus","ntransactionstatus","sregsubtypename","item","ApprovalVersionValue","RealFilterValue","isStateChanged","ssampletypename","RegistrationTypeValue","sregtypename","nformcode","Object","values","map","push","ncontrolcode","showConfirmAlert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport { Row, Col, Card, FormGroup, FormLabel, Button } from 'react-bootstrap';\r\nimport {\r\n    callService, crudMaster, updateStore, getSampleCertTypeChange, getSampleCertRegSubTypeChange, filterColumnData,\r\n    getTestResultDataHistory, getActiveSampleHistory, generateCertificateAction, sentCertificateAction, correctionCertificateAction, xmlExportAction, getWholeFilterStatusHistory\r\n} from '../../actions'\r\nimport { getControlMap,convertDateValuetoString,rearrangeDateFormat} from '../../components/CommonScript';\r\nimport { constructOptionList, validateTwoDigitDate,sortData } from '../../components/CommonScript';\r\nimport ApprovalHistory from './ApprovalHistory';\r\nimport PrintHistory from './PrintHistory';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport Results from './Results';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport SampleCertificationHistoryFilter from './SampleCertificationHistoryFilter';\r\nimport { ReadOnlyText, ContentPanel, OutlineTransactionStatus, DecisionStatus  } from '../../components/App.styles';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport TransactionListMaster from '../../components/TransactionListMaster';\r\nimport { designProperties } from '../../components/Enumeration';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../product/product.styled';\r\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass SampleCertificationHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const appHistoryDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        const resultsDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        const printHistoryDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        const dataStateReportHistory = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        \r\n        this.searchSampleRef = React.createRef();\r\n        this.state = {\r\n            openModal: false,\r\n            masterStatus: \"\",\r\n            controlMap: new Map(),\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            selectedFilter: {},\r\n            userRoleControlRights: [],\r\n            appHistoryDataState,\r\n            resultsDataState,\r\n            printHistoryDataState,\r\n            dataStateReportHistory,\r\n            skip: 0,\r\n            take: this.props.Login.settings ? this.props.Login.settings[3] : 25\r\n        }\r\n\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList =  [\"scomponentname\",\"sarno\",\"sproductname\",\"ssamplecertificateversioncode\",\"sversion\",\r\n\t\t\"smanufname\",\"sspecname\",\"nrmsno\",\"dtransactiondate\",\"smanuflotno\"]\r\n    }\r\n\r\n\r\n    onSampleTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nsampletypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getSampleCertTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n    onRegSubTypeChange = (comboData, fieldName) => {\r\n        const regSubTypeValue = this.state.regSubTypeValue || {};\r\n        regSubTypeValue[fieldName] = comboData;\r\n        this.setState({ regSubTypeValue });\r\n        //this.props.getSampleCertRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n\r\n    }\r\n\r\n\r\n    onFilterChange = (comboData, fieldName) => {\r\n        const FilterStatusValue = this.state.FilterStatusValue || {};\r\n        FilterStatusValue[fieldName] = comboData;\r\n        this.setState({ FilterStatusValue });\r\n        //this.props.getSampleCertRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n\r\n    }\r\n\r\n\r\n\r\n    onRegTypeChange = (event, fieldName, labelname) => {\r\n        if (event !== null) {\r\n            let Map = {};\r\n            Map[\"nregtypecode\"] = parseInt(event.value);\r\n            Map['userinfo'] = this.props.Login.userInfo;\r\n            this.props.getSampleCertRegSubTypeChange(Map, this.props.Login.masterData, event, labelname);\r\n        }\r\n    }\r\n\r\n\r\n    handleExpandChange = (row, dataState) => {\r\n\r\n        const viewParam = {\r\n            TransactionSampleResults: this.props.Login.masterData.TransactionSampleResults,\r\n            userInfo: this.props.Login.userInfo,\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            npreregno: \"npreregno\",\r\n            masterData: this.props.Login.masterData\r\n        };\r\n        this.props.getTestResultDataHistory({\r\n            ...viewParam, dataState,\r\n            primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField], viewRow: row[\"dataItem\"]\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n        const { selectedFilter } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedFilter[dateName] = dateValue;\r\n        this.setState({ selectedFilter });\r\n    }\r\n\r\n\r\n\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.showConfirmAlert !== state.showConfirmAlert) {\r\n            return {\r\n                showConfirmAlert: props.Login.showConfirmAlert\r\n            }\r\n        }\r\n        // if (props.Login.selectComponent !== state.selectComponent) {\r\n        //     return {\r\n        //         selectComponent: props.Login.selectComponent\r\n        //     }\r\n        // }\r\n        return null;\r\n    }\r\n\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        // setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n\r\n\r\n    onFilterSubmit = () => {\r\n        let SampleTypeValue = this.state.SampleTypeValue?this.state.SampleTypeValue.nsampletypecode:\"\"\r\n    \r\n   if(SampleTypeValue){\r\n        let RealSampleTypeValue = this.state.SampleTypeValue ? this.state.SampleTypeValue.nsampletypecode.label : \"\"\r\n        let RealRegTypeValue = this.state.RegTypeValue ? this.state.RegTypeValue.nregtypecode.label : \"\"\r\n        let RealRegSubTypeValue = this.state.regSubTypeValue ? this.state.regSubTypeValue.nregsubtypecode.label : \"\"\r\n        let RealFromDate = new Date(this.state.selectedFilter.fromdate || this.props.Login.masterData.FromDate)\r\n        let RealToDate = new Date(this.state.selectedFilter.todate || this.props.Login.masterData.ToDate)       \r\n        let inputData = {\r\n            nsampletypecode: this.state.SampleTypeValue.nsampletypecode.value,\r\n            nregtypecode: this.state.RegTypeValue.nregtypecode.value,\r\n            nregsubtypecode: this.state.regSubTypeValue.nregsubtypecode.value,\r\n            // nfilterstatus: this.state.FilterStatusValue.ntransactionstatus.value,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        let masterData = {\r\n            ...this.props.Login.masterData, RealSampleTypeValue, RealRegTypeValue, RealRegSubTypeValue,\r\n            RealFromDate, RealToDate\r\n        }\r\n\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.RealFromDate,\r\n            this.state.selectedFilter.todate || this.props.Login.masterData.RealToDate,this.props.Login.userInfo)\r\n        inputData['FromDate'] = obj.fromDate;\r\n        inputData['ToDate'] = obj.toDate;\r\n        this.props.getWholeFilterStatusHistory(masterData, inputData, \"FilterSubmit\",  {printHistoryDataState:this.state.printHistoryDataState,\r\n            appHistoryDataState:this.state.appHistoryDataState,\r\n            resultsDataState:this.state.resultsDataState});\r\n        }else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n\r\n    }\r\n\r\n    reloadData = () => {\r\n        let SampleTypeValue = this.state.SampleTypeValue?this.state.SampleTypeValue.nsampletypecode:\"\"\r\n        if(SampleTypeValue){\r\n        let inputData = {\r\n            nsampletypecode: this.state.SampleTypeValue.nsampletypecode.value,\r\n            nregtypecode: this.state.RegTypeValue.nregtypecode.value,\r\n            nregsubtypecode: this.props.Login.masterData.RegistrationSubTypeValue ? this.props.Login.masterData.RegistrationSubTypeValue.nregsubtypecode :\r\n                this.state.regSubTypeValue ? this.state.regSubTypeValue.nregsubtypecode.value : \"\",\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.RealFromDate,\r\n            this.state.selectedFilter.todate || this.props.Login.masterData.RealToDate,this.props.Login.userInfo)\r\n        inputData['FromDate'] = obj.fromDate;\r\n        inputData['ToDate'] = obj.toDate;\r\n        //let inputParam = { masterData, inputData }\r\n        // const FilterStatusValue ={ntransactionstatus: this.state.FilterStatusValue.ntransactionstatus?\r\n        //     this.state.FilterStatusValue.ntransactionstatus.label: \"\"};\r\n        // this.setState({FilterStatusValue});\r\n        this.props.getWholeFilterStatusHistory(this.props.Login.masterData, inputData, \"FilterSubmit\",  {printHistoryDataState:this.state.printHistoryDataState,\r\n            appHistoryDataState:this.state.appHistoryDataState,\r\n            resultsDataState:this.state.resultsDataState});\r\n        }else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLSSELECTALLTHEVALUEINFILTER\" }));\r\n        }\r\n\r\n    }\r\n\r\n    covertDatetoString(startDateValue, endDateValue) {\r\n        const startDate = new Date(startDateValue);\r\n        const endDate = new Date(endDateValue);\r\n\r\n        const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n        const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n        const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n        const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n        const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n        const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n\r\n        const fromDate = fromDateOnly + \"T00:00:00\";\r\n        const toDate = toDateOnly + \"T23:59:59\";\r\n        return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_APPROVALHISTORY\",\r\n            <ApprovalHistory\r\n                approvalHistory={this.props.Login.masterData.approvalHistory}\r\n                dataResult={process(this.props.Login.masterData.approvalHistory || [], this.state.appHistoryDataState)}\r\n                dataState={(this.props.Login.screenName === \"\" || this.props.Login.screenName === \"IDS_APPROVALHISTORY\") ? this.state.appHistoryDataState : { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }}\r\n                controlMap={this.state.controlMap}\r\n                userInfo={this.props.Login.userInfo}\r\n                dataStateChange={(event) => this.setState({ appHistoryDataState: event.dataState })}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                screenName=\"IDS_APPROVALHISTORY\"\r\n            />\r\n        );\r\n\r\n        tabMap.set(\"IDS_PRINTHISTORY\",\r\n            <PrintHistory\r\n                printHistory={this.props.Login.masterData.printHistory}\r\n                dataResult={process(this.props.Login.masterData.printHistory || [], this.state.printHistoryDataState)}\r\n                dataState={(this.props.Login.screenName === \"\" || this.props.Login.screenName === \"IDS_PRINTHISTORY\") ? this.state.printHistoryDataState : { skip: 0, take: 10 }}\r\n                controlMap={this.state.controlMap}\r\n                dataStateChange={(event) => this.setState({ printHistoryDataState: event.dataState })}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                screenName=\"IDS_PRINTHISTORY\"\r\n            />);\r\n\r\n\r\n        tabMap.set(\"IDS_RESULTS\",\r\n            <Results\r\n                TransactionSampleTests={this.props.Login.masterData.TransactionSampleTests}\r\n                dataResult={process(this.props.Login.masterData.TransactionSampleTests || [], this.state.resultsDataState)}\r\n                dataState={(this.props.Login.screenName === \"\" || this.props.Login.screenName === \"IDS_RESULTS\") ? this.state.resultsDataState : { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }}\r\n                controlMap={this.state.controlMap}\r\n                dataStateChange={(event) => this.setState({ resultsDataState: event.dataState })}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                handleExpandChange={this.handleExpandChange}\r\n                screenName=\"IDS_RESULTS\"\r\n                childList={this.props.Login.masterData.sampleTestResults}\r\n                childMappingField={\"ntransactiontestcode\"}\r\n                hasChild={true}\r\n            // childList ={props.childList || new Map()}\r\n            />);\r\n\r\n\r\n    //         tabMap.set(\"IDS_SAMPLEREPORTHISTORY\", <SampleReportHistory \r\n    //         userRoleControlRights={this.props.userRoleControlRights}\r\n    //         controlMap={this.props.controlMap}\r\n    //         inputParam={this.props.inputParam}\r\n    //         userInfo={this.props.userInfo}\r\n    //         masterData={this.props.masterData}\r\n    //         primaryList={\"ReportHistory\"}\r\n    //         dataResult={process(this.props.masterData[\"ReportHistory\"]||[], this.state.dataStateReportHistory)}\r\n    //         dataState={(this.props.screenName === undefined || this.props.screenName === \"IDS_BATCHREPORTHISTORY\") ? this.state.dataStateReportHistory : { skip: 0, take: 10 }}\r\n    //         dataStateChange={(event) => this.setState({ dataStateReportHistory: event.data })}\r\n    //         columnList={this.extractedReportHistoryColumnList}\r\n    //         methodUrl={\"Cetrificate\"}\r\n    //         isActionRequired={true}\r\n    //         selectedId={0}\r\n    //         expandField=\"\"\r\n    //         handleExpandChange={this.props.handleExpandChange}\r\n    //         hasChild={false}\r\n    //         childColumnList={this.TestColumnList}\r\n    //         childList ={this.props.childList || new Map()}\r\n    //         viewDownloadFile= {this.props.viewDownloadFile}\r\n    //         downloadParam = {{classUrl:\"certificategeneration\",operation:\"download\",methodUrl:\"Report\"}}\r\n    //         hasControlWithOutRights={true}\r\n    //         showDocViewer={true}\r\n    //         handleClickRegenrate={this.props.handleClickRegenrate}\r\n    //    />)\r\n\r\n        return tabMap;\r\n\r\n    }\r\n\r\n    render() {\r\n        const { SelectedRegistration, searchedData, Registration } = this.props.Login.masterData;\r\n    \r\n\r\n        // if (Registration) {\r\n        //     sortData(Registration, \"descending\", \"nregcertificatecode\");\r\n        // }\r\n        const getSample = {\r\n            screenName: \"IDS_SAMPLECERTIFICATIONGENERATION\", operation: \"get\", masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"SampleCertification\", keyName: \"samplecertification\"\r\n        };\r\n        this.fromDate = (this.state.selectedFilter[\"fromdate\"] && this.state.selectedFilter[\"fromdate\"]) || rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.RealFromDate);\r\n        this.toDate = (this.state.selectedFilter[\"todate\"] && this.state.selectedFilter[\"todate\"]) || rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.RealToDate);\r\n       \r\n\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromdate || this.props.Login.masterData.RealFromDate,\r\n            this.state.selectedFilter.todate || this.props.Login.masterData.RealToDate,this.props.Login.userInfo)\r\n\r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom || this.state.RealFromDate\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto || this.state.RealToDate\r\n            },\r\n            {\r\n                \"label\": \"IDS_SAMPLETYPE\",\r\n                //\"value\": this.props.Login.masterData.RealSampleTypeValue && this.props.Login.masterData.RealSampleTypeValue.ssampletypename\r\n                \"value\": this.state.RealSampleTypeValue\r\n            }, {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.state.RealRegTypeValue\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.state.RealRegSubTypeValue\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_FILTERSTATUS\",\r\n            //     \"value\": this.state.RealFilterValue\r\n            // }\r\n        ]\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"Registration\", selectedObject: \"SelectedRegistration\", primaryKeyField: \"nregcertificatecode\",\r\n            fetchUrl: \"samplecertificationhistory/getSampleCertificationById\", fecthInputObject: { userinfo: this.props.Login.userInfo }, masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList\r\n        };\r\n\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    {this.breadCrumbData.length > 0 ?\r\n                        <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} /> : \"\"\r\n                    }\r\n\r\n                    <Row noGutters={true}>\r\n                        <Col md={12} className=\"parent-port-height sticky_head_parent\" ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={30}\r\n                            >\r\n                                <TransactionListMaster\r\n                                    masterList={searchedData || Registration || []}\r\n                                    selectedMaster={[SelectedRegistration]}\r\n                                    primaryKeyField=\"nregcertificatecode\"\r\n                                    getMasterDetail={(SampleCertification) => this.props.getActiveSampleHistory(SampleCertification, this.props.Login.userInfo, this.props.Login.masterData,\r\n                                                                        {printHistoryDataState:this.state.printHistoryDataState,\r\n                                                                         appHistoryDataState:this.state.appHistoryDataState,\r\n                                                                         resultsDataState:this.state.resultsDataState}\r\n                                                                        )}\r\n                                    inputParam={getSample}\r\n                                    additionalParam={[]}\r\n                                    mainField=\"scomponentname\"\r\n                                    // selectedListName=\"smanuflotno\"\r\n                                    // objectName=\"sarno\"\r\n                                    listName=\"IDS_SAMPLE\"\r\n                                    showStatusLink={true}\r\n                                    subFields={\r\n                                        [\r\n                                            { [designProperties.VALUE]: \"smanuflotno\" },\r\n                                            { [designProperties.VALUE]: \"sarno\" },\r\n                                        ]\r\n                                    }\r\n                                    // moreField=\"sarno\"\r\n                                    //needValidation={false}\r\n                                    needFilter={true}\r\n                                    filterColumnData={this.props.filterColumnData}\r\n                                    searchListName=\"searchedData\"\r\n                                    searchRef={this.searchRef}\r\n                                    filterParam={filterParam}\r\n                                    handlePageChange={this.handlePageChange}\r\n                                    onFilterSubmit={this.onFilterSubmit}\r\n                                    skip={this.state.skip}\r\n                                    take={this.state.take}\r\n                                    commonActions={\r\n                                        <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                            <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                                onClick={() => this.reloadData()} \r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })} >\r\n                                                    <RefreshIcon className='custom_icons'/>\r\n                                            </Button>\r\n                                        </ProductList>\r\n                                    }\r\n                                    filterComponent={[\r\n                                        {\r\n                                            \"IDS_SAMPLECERTIFICATEGENERATION\": <SampleCertificationHistoryFilter\r\n                                                formatMessage={this.props.intl.formatMessage}\r\n                                                Product={this.props.Login.masterData.MAHProduct || []}\r\n                                                SampleType={this.state.SampleType || []}\r\n                                                RegistrationType={this.state.RegistrationType || []}\r\n                                                RegistrationSubType={this.state.RegistrationSubType || []}\r\n                                                FilterStatus={this.state.FilterList || []}\r\n                                                userInfo={this.props.Login.userInfo || {}}\r\n                                                SampleTypeValue={this.state.SampleTypeValue || {}}\r\n                                                RegTypeValue={this.state.RegTypeValue || {}}\r\n                                                regSubTypeValue={this.state.regSubTypeValue || {}}\r\n                                                FilterStatusValue={this.state.FilterStatusValue || {}}\r\n                                                FromDate={this.fromDate}\r\n                                                ToDate={this.toDate}\r\n                                                onSampleTypeChange={this.onSampleTypeChange}\r\n                                                onRegTypeChange={this.onRegTypeChange}\r\n                                                onRegSubTypeChange={this.onRegSubTypeChange}\r\n                                                handleFilterDateChange={this.handleFilterDateChange}\r\n                                                onFilterChange={this.onFilterChange}\r\n                                            />\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                                <SplitterLayout vertical borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={400}\r\n                                    customClassName=\"fixed_list_height\">\r\n                                    <PerfectScrollbar>\r\n                                        <div className=\"card_group\">\r\n                                            <ContentPanel className=\"panel-main-content\">\r\n                                                <Card className=\"border-0\">\r\n                                                    {this.props.Login.masterData.SelectedRegistration ?\r\n                                                        <>\r\n                                                            <Card.Header>\r\n                                                                <Card.Title className=\"product-title-main\">\r\n                                                                    {this.props.Login.masterData.SelectedRegistration.scomponentname}\r\n                                                                </Card.Title>\r\n\r\n                                                                <Card.Subtitle>\r\n                                                                    <div className=\"d-flex product-category\">\r\n                                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                                        <OutlineTransactionStatus\r\n                                                                                transcolor={this.props.Login.masterData.SelectedRegistration.scolorhexcode}>\r\n                                                                                {this.props.Login.masterData.SelectedRegistration.stransdisplaystatus}\r\n                                                                        </OutlineTransactionStatus>\r\n                                                                            {/* <DecisionStatus\r\n                                                                                decisioncolor={this.props.Login.masterData.SelectedRegistration.sdecisioncolor}>\r\n                                                                                {this.props.Login.masterData.SelectedRegistration.sdecisionstatus}\r\n                                                                            </DecisionStatus> */}\r\n                                                                            {/* <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                                {activeIconCSS !== \"\" ? <i class={activeIconCSS}></i> : \"\"}\r\n                                                                                <FormattedMessage id={this.props.Login.masterData.SelectedRegistration.sdecisionstatus} />\r\n                                                                            </span>\r\n                                                                            {\" \"}\r\n                                                                            <MediaLabel style={{ color: this.props.Login.masterData.SelectedRegistration ? this.props.Login.masterData.SelectedRegistration.scolorhexcode : \"\" }}>\r\n                                                                                <FormattedMessage id={this.props.Login.masterData.SelectedRegistration.stransdisplaystatus} />\r\n                                                                            </MediaLabel> */}\r\n                                                                        </h2>\r\n\r\n                                                                    </div>\r\n                                                                </Card.Subtitle>\r\n                                                            </Card.Header>\r\n                                                            <Row>\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_ARNO\" message=\"Arno\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.sarno}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_COMPONENTNAME\" message=\"Componentname\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.scomponentname}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_GENERICPRODUCT\" message=\"Genericproduct\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.sproductname}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_VERSION\" message=\"Version\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.sversion}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_MANUFACTURENAME\" message=\"Manufacturename\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.smanufname}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_CERTIFICATENUMBER\" message=\"Certificatenumber\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.ssamplecertificateversioncode}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n\r\n\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_SPECIFICATIONSTUDYPLAN\" message=\"Specificationname\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.sspecname}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_RMSNO\" message=\"Rmsno\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.nrmsno}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_REGISTRATIONDATE\" message=\"RegistrationDate\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.dtransactiondate}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_BATCHLOTNO\" message=\"Batchlotno\" /></FormLabel>\r\n                                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.smanuflotno}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n\r\n                                                                <Col md={4}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id=\"IDS_DECISIONSTATUS\" message=\"Decisionstatus\" /></FormLabel>\r\n                                                                        <DecisionStatus\r\n                                                                          decisioncolor={this.props.Login.masterData.SelectedRegistration.sdecisioncolor}>\r\n                                                                          {this.props.Login.masterData.SelectedRegistration.sdecisionstatus}\r\n                                                                        </DecisionStatus> \r\n                                                                        {/* <ReadOnlyText>{this.props.Login.masterData.SelectedRegistration.sdecisionstatus}</ReadOnlyText> */}\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                            </Row>\r\n\r\n                                                            <Row>\r\n                                                                <Col>\r\n                                                                    <div className=\"horizontal-line\"></div>\r\n                                                                </Col>\r\n                                                            </Row>\r\n\r\n                                                            <CustomTab tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                                                        </>\r\n                                                        : \"\"}\r\n                                                </Card>\r\n                                            </ContentPanel>\r\n                                        </div>\r\n                                    </PerfectScrollbar>\r\n                                </SplitterLayout>\r\n                            </SplitterLayout >\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampleMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\",\r\n                \"ssampletypename\", undefined, undefined, true);\r\n            const SampleType = SampleMap.get(\"OptionList\");\r\n            const SampleTypeValue = { nsampletypecode: SampleType.length > 0 ? SampleType[0] : \"\" };\r\n\r\n            const RegMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\",\r\n                \"sregtypename\", undefined, undefined, true);\r\n            const RegistrationType = RegMap.get(\"OptionList\");\r\n            const RegTypeValue = { nregtypecode: RegistrationType.length > 0 ? RegistrationType[0] : \"\" };\r\n\r\n            const RegSubMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\",\r\n                \"sregsubtypename\", 'nsorter', \"ascending\", false);\r\n            const RegistrationSubType = RegSubMap.get(\"OptionList\");\r\n            //const regSubTypeValue = {nregsubtypecode: RegistrationSubType.length> 0? RegistrationSubType[2]: \"\"};\r\n\r\n            const FilterStatus = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"napprovalstatuscode\",\r\n                \"stransdisplaystatus\", undefined, undefined, true);\r\n            const FilterList = FilterStatus.get(\"OptionList\")\r\n            let FilterStatusValue = {};\r\n            let regSubTypeValue = {};\r\n            if (this.props.Login.masterData.operation === \"FilterSubmit\") {\r\n                FilterStatusValue = this.state.FilterStatusValue\r\n                regSubTypeValue = this.state.regSubTypeValue\r\n            } else {\r\n                FilterStatusValue = { ntransactionstatus: FilterList.length > 0 ? FilterList[1] : \"\" };\r\n                regSubTypeValue = { nregsubtypecode: RegistrationSubType.length > 0 ?\r\n                    {label:this.props.Login.masterData.RegistrationSubTypeValue.sregsubtypename,\r\n                    value:this.props.Login.masterData.RegistrationSubTypeValue.nregsubtypecode,\r\n                    item:this.props.Login.masterData.ApprovalVersionValue}\r\n                    : \"\" };\r\n            }\r\n\r\n\r\n            let RealFilterValue = {};\r\n            let RealRegSubTypeValue = {};\r\n            let RealFromDate = {};\r\n            let RealToDate = {};\r\n            if (this.props.Login.masterData.RealFilterValue !== previousProps.Login.masterData) {\r\n\r\n                RealFilterValue = this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue :\r\n                    this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.stransdisplaystatus : \"\"\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.RealRegSubTypeValue !== previousProps.Login.masterData) {\r\n\r\n             RealRegSubTypeValue = this.props.Login.masterData.RealRegSubTypeValue ? this.props.Login.masterData.RealRegSubTypeValue:\r\n                   this.props.Login.masterData.RegistrationSubTypeValue?this.props.Login.masterData.RegistrationSubTypeValue.sregsubtypename:\"\"\r\n                   \r\n                // RealRegSubTypeValue = this.props.Login.masterData.RealRegSubTypeValue ? this.props.Login.masterData.RealRegSubTypeValue :\r\n                //     this.props.Login.masterData.RegistrationSubTypeValue ? this.props.Login.masterData.RegistrationSubTypeValue.sregsubtypename : \"\"\r\n\r\n            }\r\n\r\n            if (this.props.Login.masterData.RealFromDate !== previousProps.Login.masterData) {\r\n\r\n                RealFromDate = this.props.Login.masterData.RealFromDate ? this.props.Login.masterData.RealFromDate :\r\n                    this.props.Login.masterData.RealFromDate ? this.props.Login.masterData.RealFromDate : \"\"\r\n\r\n            }\r\n\r\n\r\n            if (this.props.Login.masterData.RealToDate !== previousProps.Login.masterData) {\r\n\r\n                RealToDate = this.props.Login.masterData.RealToDate ? this.props.Login.masterData.RealToDate :\r\n                    this.props.Login.masterData.RealToDate ? this.props.Login.masterData.RealToDate : \"\"\r\n\r\n            }\r\n\r\n            // if (this.props.Login.masterData.Registration !== previousProps.Login.masterData) {\r\n\r\n            //     const  Registration  = this.props.Login.masterData;\r\n            //     sortData(Registration, \"descending\", \"nregcertificatecode\");\r\n\r\n            // }\r\n\r\n            let { printHistoryDataState, appHistoryDataState, resultsDataState} = this.state;\r\n          \r\n            let  isStateChanged = false;\r\n            if (this.props.Login.printHistoryDataState && this.props.Login.printHistoryDataState !== previousProps.Login.printHistoryDataState) {\r\n                printHistoryDataState = this.props.Login.printHistoryDataState;\r\n                isStateChanged = true;\r\n            }\r\n            if (this.props.Login.appHistoryDataState && this.props.Login.appHistoryDataState !== previousProps.Login.appHistoryDataState) {\r\n                appHistoryDataState = this.props.Login.appHistoryDataState;\r\n                isStateChanged = true;\r\n            }\r\n            if (this.props.Login.resultsDataState && this.props.Login.resultsDataState !== previousProps.Login.resultsDataState) {\r\n                resultsDataState = this.props.Login.resultsDataState;\r\n                isStateChanged = true;\r\n            }\r\n\r\n            const RealSampleTypeValue = this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename : \"\"\r\n            const RealRegTypeValue = this.props.Login.masterData.RegistrationTypeValue ? this.props.Login.masterData.RegistrationTypeValue.sregtypename : \"\"\r\n            if (isStateChanged)\r\n            {\r\n                this.setState({printHistoryDataState, appHistoryDataState, resultsDataState,\r\n                    SampleType, RegistrationType, RegistrationSubType, FilterList, SampleTypeValue, RegTypeValue, RealSampleTypeValue,\r\n                    regSubTypeValue, FilterStatusValue, RealRegTypeValue, RealRegSubTypeValue, RealFilterValue, RealFromDate, RealToDate\r\n                });\r\n            }  \r\n            else{\r\n                this.setState({\r\n                    SampleType, RegistrationType, RegistrationSubType, FilterList, SampleTypeValue, RegTypeValue, RealSampleTypeValue,\r\n                    regSubTypeValue, FilterStatusValue, RealRegTypeValue, RealRegSubTypeValue, RealFilterValue, RealFromDate, RealToDate\r\n                });  \r\n            }      \r\n\r\n        }\r\n        // if (this.props.Login.masterData.RealFilterValue !== previousProps.Login.masterData)  {\r\n\r\n        //     const RealFilterValue = this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue:\"\"\r\n\r\n        //     this.setState({RealFilterValue});\r\n        //  }\r\n        //else{\r\n        //     const RealFilterValue = this.props.Login.masterData.RealFilterValue ? this.props.Login.masterData.RealFilterValue:\"\"\r\n\r\n        //     //this.setState({RealFilterValue});\r\n        // }this.state.regSubTypeValue\r\n\r\n\r\n\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, getSampleCertTypeChange, filterColumnData,\r\n    getSampleCertRegSubTypeChange, getTestResultDataHistory, getActiveSampleHistory, generateCertificateAction, sentCertificateAction,\r\n    correctionCertificateAction, xmlExportAction, getWholeFilterStatusHistory\r\n}\r\n)(injectIntl(SampleCertificationHistory));"]},"metadata":{},"sourceType":"module"}