{"ast":null,"code":"import React from'react';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,ListGroup,FormLabel,Media}from'react-bootstrap';import{HeaderText,ContactHeader}from'./testmaster-styled';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import ConfirmDialog from'../../components/confirm-alert/confirm-alert.component';import{ClientList}from'../../components/App.styles';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{ProductList}from'../product/product.styled';import{faPlus,faTrashAlt}from'@fortawesome/free-solid-svg-icons';// import ReactTooltip from 'react-tooltip';\nvar TestFormulaTab=function TestFormulaTab(props){var formulaList=props.formulaList,selectedParameter=props.selectedParameter,userInfo=props.userInfo,addId=props.addId,deleteId=props.deleteId,defaultFormulaId=props.defaultFormulaId,userRoleControlRights=props.userRoleControlRights,optionalData=props.optionalData;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"d-flex justify-content-between\"},/*#__PURE__*/React.createElement(HeaderText,null,props.intl.formatMessage({id:\"IDS_FORMULA\"})),/*#__PURE__*/React.createElement(Nav.Item,{className:\"add-txt-btn\",name:\"addformulaname\",hidden:props.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return props.openModal(selectedParameter,userInfo,addId,optionalData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDFORMULA\",defaultMessage:\"Formula\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"p-0\"},/*#__PURE__*/React.createElement(ListGroup,{as:\"ul\"},formulaList&&formulaList.map(function(formulaitem,formulaindex){return/*#__PURE__*/React.createElement(ListGroup.Item,{key:formulaindex,as:\"li\"},/*#__PURE__*/React.createElement(Media,null,/*#__PURE__*/React.createElement(Media.Body,null,/*#__PURE__*/React.createElement(ContactHeader,{className:\"mt-0\"},formulaitem.sformulaname),/*#__PURE__*/React.createElement(ProductList,null,formulaitem.sformulacalculationdetail)),/*#__PURE__*/React.createElement(ClientList,{className:\"mr-1\"},/*#__PURE__*/React.createElement(FormLabel,null,props.intl.formatMessage({id:\"IDS_SETASDEFAULT\"})),/*#__PURE__*/React.createElement(CustomSwitch,{checked:formulaitem[\"ndefaultstatus\"]===4||formulaitem[\"ntransactionstatus\"]===4?false:true,name:\"formulaswitch_\".concat(formulaitem[props.primaykeyName])//onChange={(event) => props.onSwitchChange(formulaitem, props.methodUrl.toLowerCase(), props.methodUrl,event)}\n,onChange:function onChange(event){return props.onSwitchChange(formulaitem,props.methodUrl.toLowerCase(),props.methodUrl,event,defaultFormulaId);}})),/*#__PURE__*/React.createElement(ClientList,{className:\"ml-3\"},/*#__PURE__*/React.createElement(Nav.Item,{as:\"a\",className:\"action-icons-wrap\",name:\"deleteformulaname\"},/*#__PURE__*/React.createElement(ConfirmDialog,{name:\"deleteMessage\",message:props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),doLabel:props.intl.formatMessage({id:\"IDS_OK\"}),doNotLabel:props.intl.formatMessage({id:\"IDS_CANCEL\"}),icon:faTrashAlt,title:props.intl.formatMessage({id:\"IDS_DELETE\"})//  data-for=\"tooltip_list_wrap\"\n,hidden:userRoleControlRights&&userRoleControlRights.indexOf(deleteId)===-1,handleClickDelete:function handleClickDelete(){return props.deleteAction(formulaitem,\"delete\",deleteId,props.methodUrl,\"openChildModal\");}})))));}))))));};export default injectIntl(TestFormulaTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/TestFormulaTab.jsx"],"names":["React","injectIntl","FormattedMessage","Row","Col","Card","Nav","ListGroup","FormLabel","Media","HeaderText","ContactHeader","FontAwesomeIcon","ConfirmDialog","ClientList","CustomSwitch","ProductList","faPlus","faTrashAlt","TestFormulaTab","props","formulaList","selectedParameter","userInfo","addId","deleteId","defaultFormulaId","userRoleControlRights","optionalData","intl","formatMessage","id","indexOf","openModal","map","formulaitem","formulaindex","sformulaname","sformulacalculationdetail","primaykeyName","event","onSwitchChange","methodUrl","toLowerCase","deleteAction"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, ListGroup, FormLabel, Media } from 'react-bootstrap';\r\nimport { HeaderText, ContactHeader } from './testmaster-styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { ClientList } from '../../components/App.styles';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { ProductList } from '../product/product.styled';\r\nimport { faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst TestFormulaTab = (props) => {\r\n    const { formulaList, selectedParameter, userInfo, addId, deleteId,defaultFormulaId, userRoleControlRights, optionalData } = props;\r\n    return (\r\n        <Row>\r\n            <Col md=\"12\">\r\n                <Card>\r\n                    <Card.Header className=\"d-flex justify-content-between\">\r\n                        <HeaderText>{props.intl.formatMessage({ id: \"IDS_FORMULA\" })}</HeaderText>\r\n                        <Nav.Item className=\"add-txt-btn\" name=\"addformulaname\"\r\n                            hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                            onClick={() => props.openModal(selectedParameter, userInfo, addId, optionalData)}>\r\n                            <FontAwesomeIcon icon={faPlus} /> {\" \"}\r\n                            <FormattedMessage id=\"IDS_ADDFORMULA\" defaultMessage=\"Formula\" />\r\n                        </Nav.Item>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"p-0\">\r\n                        <ListGroup as=\"ul\">\r\n                            {formulaList &&\r\n                                formulaList.map((formulaitem, formulaindex) => {\r\n                                    return (\r\n                                        <ListGroup.Item key={formulaindex} as=\"li\">\r\n                                            <Media>\r\n                                                <Media.Body>\r\n                                                    <ContactHeader className=\"mt-0\">{formulaitem.sformulaname}</ContactHeader>\r\n                                                    <ProductList>{formulaitem.sformulacalculationdetail}</ProductList>\r\n                                                </Media.Body>\r\n                                                <ClientList className=\"mr-1\">\r\n                                                    <FormLabel>{props.intl.formatMessage({ id: \"IDS_SETASDEFAULT\" })}</FormLabel>\r\n                                                    <CustomSwitch\r\n                                                        checked={formulaitem[\"ndefaultstatus\"] === 4 || formulaitem[\"ntransactionstatus\"] === 4 ? false : true}\r\n                                                        name={`formulaswitch_${formulaitem[props.primaykeyName]}`}\r\n                                                        //onChange={(event) => props.onSwitchChange(formulaitem, props.methodUrl.toLowerCase(), props.methodUrl,event)}\r\n                                                        onChange={(event) => props.onSwitchChange(formulaitem, props.methodUrl.toLowerCase(), props.methodUrl,event,defaultFormulaId)}\r\n\r\n                                                    />\r\n                                                </ClientList>\r\n                                                <ClientList className=\"ml-3\">\r\n                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                    <Nav.Item as=\"a\" className=\"action-icons-wrap\" name=\"deleteformulaname\">\r\n                                                        <ConfirmDialog\r\n                                                            name=\"deleteMessage\"\r\n                                                            message={props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                            doLabel={props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                            doNotLabel={props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            icon={faTrashAlt}\r\n                                                            title={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                          //  data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={userRoleControlRights && userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            handleClickDelete={() => props.deleteAction(formulaitem, \"delete\", deleteId, props.methodUrl, \"openChildModal\")}\r\n                                                        />\r\n                                                    </Nav.Item>\r\n                                                </ClientList>\r\n                                            </Media>\r\n                                        </ListGroup.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestFormulaTab);"]},"metadata":{},"sourceType":"module"}