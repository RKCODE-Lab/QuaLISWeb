{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\basemaster\\\\StorageMappingFilter.jsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport '@progress/kendo-react-animation';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst StorageMappingFilter = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nstoragecategorycode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_STORAGECATEGORY\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.storageCategoryOptions,\n    value: props.selectedRecordFilter && props.selectedRecordFilter[\"nstoragecategorycode\"] ? props.selectedRecordFilter[\"nstoragecategorycode\"] : {},\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nstoragecategorycode', 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(StorageMappingFilter);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/StorageMappingFilter.jsx"],"names":["React","injectIntl","Row","Col","Form","FormSelectSearch","StorageMappingFilter","props","intl","formatMessage","id","storageCategoryOptions","selectedRecordFilter","event","onComboChange"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,OAAO,iCAAP;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACpC,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,IAAI,EAAE,sBADV;AAEI,IAAA,SAAS,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFf;AAGI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAHjB;AAII,IAAA,OAAO,EAAEH,KAAK,CAACI,sBAJnB;AAKI,IAAA,KAAK,EAAEJ,KAAK,CAACK,oBAAN,IACHL,KAAK,CAACK,oBAAN,CAA2B,sBAA3B,CADG,GAEHL,KAAK,CAACK,oBAAN,CAA2B,sBAA3B,CAFG,GAEkD,EAP7D;AAQI,IAAA,WAAW,EAAE,KARjB;AASI,IAAA,OAAO,EAAE,KATb;AAUI,IAAA,YAAY,EAAE,IAVlB;AAWI,IAAA,UAAU,EAAE,KAXhB;AAYI,IAAA,iBAAiB,EAAE,IAZvB;AAaI,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,sBAA3B,EAAmD,CAAnD,CAbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ;AAyDH,CA1DD;;AA2DA,eAAeZ,UAAU,CAACK,oBAAD,CAAzB","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst StorageMappingFilter = (props) => {\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"nstoragecategorycode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_STORAGECATEGORY\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.storageCategoryOptions}\r\n                    value={props.selectedRecordFilter &&\r\n                        props.selectedRecordFilter[\"nstoragecategorycode\"] ?\r\n                        props.selectedRecordFilter[\"nstoragecategorycode\"] : {}}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, 'nstoragecategorycode', 0)}\r\n                />\r\n            </Col>\r\n\r\n            {/* <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"nsamplestoragelocationcode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATION\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.storageLocationOptions}\r\n                    value={props.selectedRecordFilter &&\r\n                        props.selectedRecordFilter[\"nsamplestoragelocationcode\"] ?\r\n                        props.selectedRecordFilter[\"nsamplestoragelocationcode\"] : {}}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, 'nsamplestoragelocationcode')}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"nsamplestorageversioncode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGEVERSION\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.sampleStorageVersionOptions}\r\n                    value={props.selectedRecordFilter && props.selectedRecordFilter[\"nsamplestorageversioncode\"] ?\r\n                        props.selectedRecordFilter[\"nsamplestorageversioncode\"] : {}}\r\n                    isClearable={false}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    onChange={(event) => props.onComboChange(event, 'nsamplestorageversioncode')}\r\n                />\r\n            </Col> */}\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(StorageMappingFilter);"]},"metadata":{},"sourceType":"module"}