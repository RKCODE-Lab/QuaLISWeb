{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{injectIntl}from'react-intl';import{transactionStatus}from'../../components/Enumeration';var AllotAnotherUser=function AllotAnotherUser(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_TECHNIQUE\"}),name:\"ntechniquecode\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},value:props.Technique,isDisabled:true,required:true,maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_USERS\"}),isSearchable:true,name:\"nusercode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.Users,value:props.selectedRecord[\"nusercode\"]||\"\",defaultValue:props.selectedRecord[\"nusercode\"],onChange:function onChange(event){return props.onComboChange(event,\"nusercode\");},closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:props.userInfo.istimezoneshow===transactionStatus.YES?6:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"duserblockfromdatetime\",label:props.intl.formatMessage({id:\"IDS_STARTDATETIME\"}),className:\"form-control\",placeholderText:props.intl.formatMessage({id:\"IDS_SELECTDATE\"}),dateFormat:props.userInfo?props.userInfo.ssitedatetime||[]:[],timeInputLabel:props.intl.formatMessage({id:\"IDS_STARTTIME\"}),showTimeInput:true,isClearable:false,isMandatory:true,required:true,minDate:props.currentTime,maxTime:props.currentTime,onChange:function onChange(date){return props.handleDateChange(\"duserblockfromdatetime\",date);},selected:props.selectedRecord&&props.selectedRecord[\"duserblockfromdatetime\"]?props.selectedRecord[\"duserblockfromdatetime\"]:new Date()})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_HOLDDURATION\"}),name:\"suserholdduration\",type:\"numeric\",onChange:function onChange(event){return props.onNumericInputOnChange(event,'suserholdduration');},placeholder:props.intl.formatMessage({id:\"IDS_HOLDDURATION\"}),value:props.selectedRecord?props.selectedRecord[\"suserholdduration\"]:\"\",isMandatory:true,required:false,maxLength:\"4\"})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PERIOD\"}),isSearchable:true,name:\"nuserperiodcode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.UsersPeriod,value:props.selectedRecord[\"nuserperiodcode\"]||\"\",defaultValue:props.selectedRecord[\"nuserperiodcode\"],onChange:function onChange(event){return props.onComboChange(event,\"nuserperiodcode\");},closeMenuOnSelect:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_COMMENTS\"}),name:\"scomments\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_COMMENTS\"}),value:props.selectedRecord?props.selectedRecord[\"scomments\"]:\"\",isMandatory:false,required:false,maxLength:\"255\"})));};export default injectIntl(AllotAnotherUser);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/joballocation/AllotAnotherUser.jsx"],"names":["React","Row","Col","FormSelectSearch","FormInput","FormTextarea","DateTimePicker","injectIntl","transactionStatus","AllotAnotherUser","props","intl","formatMessage","id","event","onInputOnChange","Technique","Users","selectedRecord","onComboChange","userInfo","istimezoneshow","YES","ssitedatetime","currentTime","date","handleDateChange","Date","onNumericInputOnChange","UsersPeriod"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport {injectIntl } from 'react-intl';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst AllotAnotherUser = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_TECHNIQUE\" })}\r\n                    name={\"ntechniquecode\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    value={props.Technique}\r\n                    isDisabled={true}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                    isSearchable={true}\r\n                    name={\"nusercode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Users}\r\n                    value = { props.selectedRecord[\"nusercode\"] || \"\" }\r\n                    defaultValue={props.selectedRecord[\"nusercode\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nusercode\")}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col> \r\n\r\n            <Col md={props.userInfo.istimezoneshow === transactionStatus.YES  ? 6 : 12}>\r\n                <DateTimePicker\r\n                    name={\"duserblockfromdatetime\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_STARTDATETIME\" })}\r\n                    className='form-control'\r\n                    placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                    dateFormat={props.userInfo ? props.userInfo.ssitedatetime || [] : []}\r\n                    timeInputLabel={props.intl.formatMessage({ id: \"IDS_STARTTIME\" })}\r\n                    showTimeInput={true}\r\n                    isClearable={false}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    minDate={props.currentTime}\r\n                    maxTime={props.currentTime}\r\n                    onChange={date => props.handleDateChange(\"duserblockfromdatetime\", date)}         \r\n                    selected={props.selectedRecord && props.selectedRecord[\"duserblockfromdatetime\"] ? props.selectedRecord[\"duserblockfromdatetime\"] : new Date()}\r\n\r\n                />\r\n             </Col>\r\n\r\n                    \r\n            <Col md={6}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_HOLDDURATION\" })}\r\n                    name={\"suserholdduration\"}\r\n                    type=\"numeric\"\r\n                    onChange={(event) => props.onNumericInputOnChange(event,'suserholdduration')}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_HOLDDURATION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"suserholdduration\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={false}\r\n                    maxLength={\"4\"}\r\n                />\r\n            </Col>\r\n            <Col md={6}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_PERIOD\" })}\r\n                    isSearchable={true}\r\n                    name={\"nuserperiodcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.UsersPeriod}\r\n                    value = { props.selectedRecord[\"nuserperiodcode\"] || \"\" }\r\n                    defaultValue={props.selectedRecord[\"nuserperiodcode\"]}\r\n                    onChange={(event)=>props.onComboChange(event, \"nuserperiodcode\")}\r\n                    closeMenuOnSelect={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                    name={\"scomments\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"scomments\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\nexport default injectIntl(AllotAnotherUser);"]},"metadata":{},"sourceType":"module"}