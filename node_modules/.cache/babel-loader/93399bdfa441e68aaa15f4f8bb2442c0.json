{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\reports\\\\reportsconfig\\\\AddReportParameters.js\";\nimport React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DataGrid from '../../../components/data-grid/data-grid.component';\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\nimport { process } from '@progress/kendo-data-query'; //import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\n//import FormInput from '../../components/form-input/form-input.component';\n//import FormTextarea from '../../components/form-textarea/form-textarea.component';\n//import DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nconst AddReportParameters = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REPORTPARAMETER\"\n    }),\n    isSearchable: true,\n    name: \"scontrolBasedparameter\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.reportTypeListparameter || [],\n    value: props.selectedRecord[\"ncontrolBasedparameter\"] || \"\",\n    defaultValue: props.selectedRecord[\"ncontrolBasedparameter\"] //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\n    ,\n    onChange: event => props.onComboChange(event, \"ncontrolBasedparameter\", 1),\n    closeMenuOnSelect: true,\n    isMulti: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_REPORTTABLECOLUMNNAME\"\n    }),\n    isSearchable: true,\n    name: \"stablename\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.reportTypeListName || [],\n    value: props.selectedRecord[\"nquerybuildertablecodecolumn\"] || \"\",\n    defaultValue: props.selectedRecord[\"nquerybuildertablecodecolumn\"] //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\n    ,\n    onChange: event => props.onComboChange(event, \"nquerybuildertablecodecolumn\", 2),\n    closeMenuOnSelect: true,\n    isMulti: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"d-flex justify-content-end p-2\",\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-user btn-primary-blue\",\n    onClick: () => props.addreportParametersInDataGrid(props.selectedRecord),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_ADD\",\n    defaultMessage: \"Add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    primaryKeyField: \"nreportparameterconfiguration\",\n    data: props.gridDataparmeter || [],\n    dataResult: process(props.gridDataparmeter || [], {\n      skip: 0,\n      take: 10\n    }),\n    dataState: props.dataState || {\n      skip: 0,\n      take: 10\n    } //dataStateChange={(event) => this.setState({ dataState: event.dataState })|| []}\n    ,\n    extractedColumnList: props.gridColumnList,\n    controlMap: props.controlMap,\n    userRoleControlRights: props.userRoleControlRights,\n    inputParam: props.inputParam,\n    userInfo: props.userinfo,\n    deleteRecordWORights: props.deleteRecordWORights,\n    pageable: false,\n    scrollable: \"scrollable\",\n    isActionRequired: true //isToolBarRequired={false}\n    //selectedId={null}\n    ,\n    hideColumnFilter: true,\n    hasControlWithOutRights: true,\n    showdeleteRecordWORights: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 41\n    }\n  }))));\n};\n\nexport default injectIntl(AddReportParameters);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/reports/reportsconfig/AddReportParameters.js"],"names":["React","Button","Row","Col","FormattedMessage","injectIntl","faSave","FontAwesomeIcon","DataGrid","FormSelectSearch","process","AddReportParameters","props","intl","formatMessage","id","reportTypeListparameter","selectedRecord","event","onComboChange","reportTypeListName","addreportParametersInDataGrid","gridDataparmeter","skip","take","dataState","gridColumnList","controlMap","userRoleControlRights","inputParam","userinfo","deleteRecordWORights"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport { process } from '@progress/kendo-data-query';\r\n//import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\n//import FormInput from '../../components/form-input/form-input.component';\r\n//import FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n//import DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nconst AddReportParameters = (props) => {\r\n        return (\r\n                <Row>\r\n                        <Col md={6}>\r\n                                <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_REPORTPARAMETER\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"scontrolBasedparameter\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={props.reportTypeListparameter || []}\r\n                                        value={props.selectedRecord[\"ncontrolBasedparameter\"] || \"\"}\r\n                                        defaultValue={props.selectedRecord[\"ncontrolBasedparameter\"]}\r\n                                        //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\r\n                                        onChange={(event) => props.onComboChange(event, \"ncontrolBasedparameter\", 1)}\r\n                                        closeMenuOnSelect={true}\r\n                                        isMulti={false}\r\n                                />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                                <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_REPORTTABLECOLUMNNAME\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"stablename\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={props.reportTypeListName || []}\r\n                                        value={props.selectedRecord[\"nquerybuildertablecodecolumn\"] || \"\"}\r\n                                        defaultValue={props.selectedRecord[\"nquerybuildertablecodecolumn\"]}\r\n                                        //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\r\n                                        onChange={(event) => props.onComboChange(event, \"nquerybuildertablecodecolumn\", 2)}\r\n                                        closeMenuOnSelect={true}\r\n                                        isMulti={false}\r\n                                />\r\n                        </Col>\r\n                        {/* <Col md={6}>\r\n                                <FormSelectSearch\r\n                                        formLabel={props.intl.formatMessage({ id: \"IDS_REPORTTABLECOLUMNNAME\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"stablecolumn\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        options={props.reportTypeListColumn || []}\r\n                                        value={props.selectedRecord[\"nquerybuildertablecodecolumn\"] || \"\"}\r\n                                        defaultValue={props.selectedRecord[\"nquerybuildertablecodecolumn\"]}\r\n                                        //onChange={(event) => props.onComboChange(event, \"ntranscode\", 1)}\r\n                                        onChange={(event) => props.onComboChange(event, \"nquerybuildertablecodecolumn\", 3)}\r\n                                        closeMenuOnSelect={true}\r\n                                        isMulti={false}\r\n                                />\r\n                        </Col> */}\r\n                        <Col className=\"d-flex justify-content-end p-2\" md={12}>\r\n                                <Button className=\"btn-user btn-primary-blue\"\r\n                                onClick={() => props.addreportParametersInDataGrid(props.selectedRecord)}\r\n                                >\r\n                                        <FontAwesomeIcon icon={faSave} /> { }\r\n                                        <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                                </Button>\r\n                        </Col>\r\n                        <Row>\r\n                                 <Col md={12}>\r\n                                        <DataGrid primaryKeyField={\"nreportparameterconfiguration\"}\r\n                                                data={props.gridDataparmeter || []}\r\n                                                dataResult={process(props.gridDataparmeter || [] ,{ skip: 0, take: 10 })}\r\n                                                dataState={props.dataState || { skip: 0, take: 10 }}\r\n                                                //dataStateChange={(event) => this.setState({ dataState: event.dataState })|| []}\r\n                                                extractedColumnList={props.gridColumnList}\r\n                                                controlMap={props.controlMap}\r\n                                                userRoleControlRights={props.userRoleControlRights}\r\n                                                inputParam={props.inputParam}\r\n                                                userInfo={props.userinfo}\r\n                                                deleteRecordWORights={props.deleteRecordWORights}\r\n                                                pageable={false}\r\n                                                scrollable={\"scrollable\"}\r\n                                                isActionRequired={true}\r\n                                                //isToolBarRequired={false}\r\n                                                //selectedId={null}\r\n                                                hideColumnFilter={true}\r\n                                                hasControlWithOutRights={true}\r\n                                                showdeleteRecordWORights={true}\r\n                                        />\r\n                                </Col> \r\n                        </Row>\r\n                </Row>\r\n\r\n\r\n\r\n        )\r\n}\r\n\r\nexport default injectIntl(AddReportParameters);"]},"metadata":{},"sourceType":"module"}