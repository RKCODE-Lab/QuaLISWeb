{"ast":null,"code":"import rsapi from '../rsapi';\nimport Axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { sortData, getComboLabelValue, constructOptionList } from '../components/CommonScript';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { intl } from '../components/App';\nimport { initRequest } from './LoginAction';\nexport function selectProductMaholderDetail(productmaholder, masterData, userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/productmaholder/getProductMaHolderByProductMahcode\", {\n      \"nproductmanufcode\": parseInt(productmaholder.nproductmanufcode),\n      \"nproductmahcode\": parseInt(productmaholder.nproductmahcode),\n      'userinfo': userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch(initRequest(false));\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getProductMAHolderComboService(screenName, operation, primaryKeyName, primaryKeyValue, selectedFilter, masterData, userInfo, ncontrolCode) {\n  return function (dispatch) {\n    if (operation === \"create\" && selectedFilter.nproductcode && selectedFilter.nproductmanufcode > 0 || operation === \"update\") {\n      const MarketAuthorisationService = rsapi.post(\"/product/getMarketAuthorisationHolder\", {\n        \"userinfo\": userInfo\n      });\n      const CertificateLicenseContainertypeService = rsapi.post(\"/product/getCertificateLicenseContainertype\", {\n        \"userinfo\": userInfo\n      });\n      let urlArray = [];\n\n      if (operation === \"create\") {\n        urlArray = [MarketAuthorisationService, CertificateLicenseContainertypeService];\n      } else {\n        const ProductMAHolderByIDService = rsapi.post(\"/product/getProductMaHolderByProductMahcode\", {\n          \"userinfo\": userInfo,\n          [primaryKeyName]: primaryKeyValue\n        });\n        urlArray = [MarketAuthorisationService, CertificateLicenseContainertypeService, ProductMAHolderByIDService];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        const MAHolder = response[0].data;\n        const {\n          CertificateType,\n          ContainerType,\n          LicenseAuthority\n        } = response[1].data;\n        const ContainerTypeList = constructOptionList(response[1].data[\"ContainerType\"] || [], \"ncontainertypecode\", \"scontainertype\", undefined, undefined, undefined);\n        const ContainerType1 = ContainerTypeList.get(\"OptionList\");\n        const MAHolderList = constructOptionList(response[0].data || [], \"nmahcode\", \"smahname\", undefined, undefined, undefined);\n        const MAHolder1 = MAHolderList.get(\"OptionList\");\n        const CertificateTypeList = constructOptionList(response[1].data[\"CertificateType\"] || [], \"ncertificatetypecode\", \"scertificatetype\", undefined, undefined, undefined);\n        const CertificateType1 = CertificateTypeList.get(\"OptionList\");\n        let selectedRecord = {};\n\n        if (operation === \"update\") {\n          selectedRecord = response[2].data[\"ProductMaHolder\"];\n          getComboLabelValue(selectedRecord, MAHolder, \"nmahcode\", \"smahname\");\n          let index = MAHolder.findIndex(x => x.nmahcode === selectedRecord.nmahcode.value);\n          selectedRecord[\"saddress1\"] = MAHolder && MAHolder.length > 0 && MAHolder[index].saddress1;\n          selectedRecord[\"saddress2\"] = MAHolder && MAHolder.length > 0 && MAHolder[index].saddress2;\n          selectedRecord[\"saddress3\"] = MAHolder && MAHolder.length > 0 && MAHolder[index].saddress3;\n          selectedRecord[\"scountryname\"] = MAHolder && MAHolder.length > 0 && MAHolder[index].scountryname;\n          getComboLabelValue(selectedRecord, CertificateType, \"ncertificatetypecode\", \"scertificatetype\");\n          getComboLabelValue(selectedRecord, ContainerType, \"ncontainertypecode\", \"scontainertype\"); // getComboLabelValue(selectedRecord, LicenseAuthority, \"nauthoritycode\", \"sauthorityname\");\n        } else {\n          selectedRecord[\"nstatus\"] = 1;\n          selectedRecord[\"sproducttradename\"] = \"\";\n          selectedRecord[\"nproductcode\"] = selectedFilter.nproductcode.value;\n          selectedRecord[\"nproductmanufcode\"] = selectedFilter.nproductmanufcode.value;\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            MAHolder: MAHolder1 || [],\n            CertificateType: CertificateType1 || [],\n            ContainerType: ContainerType1 || [],\n            LicenseAuthority: LicenseAuthority || [],\n            operation,\n            screenName,\n            selectedRecord,\n            openModal: true,\n            masterData,\n            ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch(initRequest(false));\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else if (selectedFilter.nproductcode === undefined) {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_SELECTPRODUCT\"\n      }));\n    } else if (selectedFilter.nproductmanufcode === undefined) {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_SELECTPRODUCTMANUFACTURER\"\n      }));\n    }\n  };\n}\nexport function getProductChange(Map, selectedFilter, masterData, searchRef) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/productmaholder/getProductMaHolderByProductcode\", Map).then(response => {\n      const MAHProductManufacturer = response.data[\"MAHProductManufacturer\"];\n      sortData(response.data); // MAHProductManufacturer.length > 0 ?\n      //     selectedFilter[\"nproductmanufcode\"] = {\n      //         \"value\": MAHProductManufacturer[0].nproductmanufcode,\n      //         \"label\": MAHProductManufacturer[0].smanufname\n      //     } : selectedFilter[\"nproductmanufcode\"] = \"\";\n\n      selectedFilter[\"smanufname\"] = MAHProductManufacturer && MAHProductManufacturer.length > 0 ? MAHProductManufacturer[0].smanufname : \"\";\n      selectedFilter[\"nproductmanufcode\"] = MAHProductManufacturer && MAHProductManufacturer.length > 0 ? MAHProductManufacturer[0].nproductmanufcode : -1;\n      let selectedRecord = {};\n      selectedRecord = selectedFilter;\n      masterData = { ...masterData,\n        ...response.data\n      };\n\n      if (searchRef !== undefined && searchRef.current !== null) {\n        searchRef.current.value = '';\n        masterData['searchedData'] = undefined;\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          selectedFilter,\n          selectedRecord,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch(initRequest(false));\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getProductManufactureChange(userInfo, selectedFilter, masterData, searchRef) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/productmaholder/getProductMaHolderByProductManufcode\", {\n      \"userinfo\": userInfo,\n      \"nproductmanufcode\": parseInt(selectedFilter[\"nproductmanufcode\"])\n    }).then(response => {\n      // const MAHProductManufacturer = response.data[\"MAHProductManufacturer\"];\n      sortData(response.data);\n      let SelectedMahProduct = {};\n      SelectedMahProduct['sproductname'] = selectedFilter[\"nproductcode\"].label;\n      masterData = { ...masterData,\n        ...response.data,\n        SelectedMahProduct\n      };\n\n      if (searchRef !== undefined && searchRef.current !== null) {\n        searchRef.current.value = '';\n        masterData['searchedData'] = undefined;\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          selectedFilter,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch(initRequest(false));\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/ProductMAHolderAction.js"],"names":["rsapi","Axios","toast","sortData","getComboLabelValue","constructOptionList","DEFAULT_RETURN","intl","initRequest","selectProductMaholderDetail","productmaholder","masterData","userInfo","dispatch","post","parseInt","nproductmanufcode","nproductmahcode","then","response","data","type","payload","loading","catch","error","status","message","warn","getProductMAHolderComboService","screenName","operation","primaryKeyName","primaryKeyValue","selectedFilter","ncontrolCode","nproductcode","MarketAuthorisationService","CertificateLicenseContainertypeService","urlArray","ProductMAHolderByIDService","all","MAHolder","CertificateType","ContainerType","LicenseAuthority","ContainerTypeList","undefined","ContainerType1","get","MAHolderList","MAHolder1","CertificateTypeList","CertificateType1","selectedRecord","index","findIndex","x","nmahcode","value","length","saddress1","saddress2","saddress3","scountryname","openModal","formatMessage","id","getProductChange","Map","searchRef","MAHProductManufacturer","smanufname","current","getProductManufactureChange","SelectedMahProduct","label"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    sortData,\r\n    getComboLabelValue,\r\n    constructOptionList\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { intl } from '../components/App'\r\nimport { initRequest } from './LoginAction';\r\nexport function selectProductMaholderDetail(productmaholder, masterData, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/productmaholder/getProductMaHolderByProductMahcode\", {\r\n            \"nproductmanufcode\": parseInt(productmaholder.nproductmanufcode),\r\n            \"nproductmahcode\": parseInt(productmaholder.nproductmahcode),\r\n            'userinfo': userInfo\r\n        })\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data\r\n                };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch(initRequest(false));\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\nexport function getProductMAHolderComboService(screenName, operation, primaryKeyName, primaryKeyValue, selectedFilter, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n\r\n        if ((operation === \"create\" && selectedFilter.nproductcode && selectedFilter.nproductmanufcode > 0) || (operation === \"update\")) {\r\n\r\n            const MarketAuthorisationService = rsapi.post(\"/product/getMarketAuthorisationHolder\", {\r\n                \"userinfo\": userInfo\r\n            });\r\n            const CertificateLicenseContainertypeService = rsapi.post(\"/product/getCertificateLicenseContainertype\", {\r\n                \"userinfo\": userInfo\r\n            });\r\n\r\n            let urlArray = [];\r\n            if (operation === \"create\") {\r\n                urlArray = [MarketAuthorisationService, CertificateLicenseContainertypeService];\r\n            } else {\r\n                const ProductMAHolderByIDService = rsapi.post(\"/product/getProductMaHolderByProductMahcode\", {\r\n                    \"userinfo\": userInfo,\r\n                    [primaryKeyName]: primaryKeyValue\r\n                })\r\n                urlArray = [MarketAuthorisationService, CertificateLicenseContainertypeService, ProductMAHolderByIDService];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n                    const MAHolder = response[0].data;\r\n                    const { CertificateType,\r\n                        ContainerType,\r\n                        LicenseAuthority\r\n                    } = response[1].data;\r\n\r\n                    const ContainerTypeList = constructOptionList(response[1].data[\"ContainerType\"] || [], \"ncontainertypecode\",\r\n                        \"scontainertype\", undefined, undefined, undefined);\r\n                    const ContainerType1 = ContainerTypeList.get(\"OptionList\");\r\n\r\n                    const MAHolderList = constructOptionList(response[0].data || [], \"nmahcode\",\r\n                        \"smahname\", undefined, undefined, undefined);\r\n                    const MAHolder1 = MAHolderList.get(\"OptionList\");\r\n\r\n                    const CertificateTypeList = constructOptionList(response[1].data[\"CertificateType\"] || [], \"ncertificatetypecode\",\r\n                        \"scertificatetype\", undefined, undefined, undefined);\r\n                    const CertificateType1 = CertificateTypeList.get(\"OptionList\");\r\n\r\n\r\n                    let selectedRecord = {};\r\n                    if (operation === \"update\") {\r\n                        selectedRecord = response[2].data[\"ProductMaHolder\"];\r\n                        getComboLabelValue(selectedRecord, MAHolder, \"nmahcode\", \"smahname\");\r\n                        let index = MAHolder.findIndex(x => x.nmahcode === selectedRecord.nmahcode.value);\r\n                        selectedRecord[\"saddress1\"] = MAHolder && MAHolder.length > 0 && MAHolder[index].saddress1;\r\n                        selectedRecord[\"saddress2\"] = MAHolder && MAHolder.length > 0 && MAHolder[index].saddress2;\r\n                        selectedRecord[\"saddress3\"] = MAHolder && MAHolder.length > 0 && MAHolder[index].saddress3;\r\n                        selectedRecord[\"scountryname\"] = MAHolder && MAHolder.length > 0 && MAHolder[index].scountryname;\r\n                        getComboLabelValue(selectedRecord, CertificateType, \"ncertificatetypecode\", \"scertificatetype\");\r\n                        getComboLabelValue(selectedRecord, ContainerType, \"ncontainertypecode\", \"scontainertype\");\r\n                        // getComboLabelValue(selectedRecord, LicenseAuthority, \"nauthoritycode\", \"sauthorityname\");\r\n                    } else {\r\n                        selectedRecord[\"nstatus\"] = 1;\r\n                        selectedRecord[\"sproducttradename\"] = \"\";\r\n                        selectedRecord[\"nproductcode\"] = selectedFilter.nproductcode.value;\r\n                        selectedRecord[\"nproductmanufcode\"] = selectedFilter.nproductmanufcode.value;\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            MAHolder: MAHolder1 || [],\r\n                            CertificateType: CertificateType1 || [],\r\n                            ContainerType: ContainerType1 || [],\r\n                            LicenseAuthority: LicenseAuthority || [],\r\n                            operation,\r\n                            screenName,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            masterData,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch(initRequest(false));\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n        } else if (selectedFilter.nproductcode === undefined) {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTPRODUCT\"\r\n            }));\r\n        } else if (selectedFilter.nproductmanufcode === undefined) {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTPRODUCTMANUFACTURER\"\r\n            }));\r\n        }\r\n    }\r\n}\r\nexport function getProductChange(Map, selectedFilter, masterData, searchRef) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/productmaholder/getProductMaHolderByProductcode\", Map)\r\n            .then(response => {\r\n                const MAHProductManufacturer = response.data[\"MAHProductManufacturer\"];\r\n                sortData(response.data)\r\n                // MAHProductManufacturer.length > 0 ?\r\n                //     selectedFilter[\"nproductmanufcode\"] = {\r\n                //         \"value\": MAHProductManufacturer[0].nproductmanufcode,\r\n                //         \"label\": MAHProductManufacturer[0].smanufname\r\n                //     } : selectedFilter[\"nproductmanufcode\"] = \"\";\r\n                selectedFilter[\"smanufname\"] = MAHProductManufacturer && MAHProductManufacturer.length > 0 ?\r\n                    MAHProductManufacturer[0].smanufname : \"\"\r\n\r\n                selectedFilter[\"nproductmanufcode\"] = MAHProductManufacturer && MAHProductManufacturer.length > 0 ?\r\n                    MAHProductManufacturer[0].nproductmanufcode : -1\r\n\r\n                    let selectedRecord={};\r\n                    selectedRecord=selectedFilter;\r\n\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data\r\n                };\r\n                if(searchRef!== undefined &&searchRef.current !== null){\r\n                    searchRef.current.value='';\r\n                    masterData['searchedData']=undefined;\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        selectedFilter,\r\n                        selectedRecord,\r\n                        loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch(initRequest(false));\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getProductManufactureChange(userInfo, selectedFilter, masterData, searchRef) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/productmaholder/getProductMaHolderByProductManufcode\", {\"userinfo\":userInfo,\"nproductmanufcode\":parseInt(selectedFilter[\"nproductmanufcode\"])})\r\n            .then(response => {\r\n                // const MAHProductManufacturer = response.data[\"MAHProductManufacturer\"];\r\n                sortData(response.data)\r\n                let SelectedMahProduct={}\r\n                SelectedMahProduct['sproductname']=selectedFilter[\"nproductcode\"].label\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    SelectedMahProduct\r\n                };\r\n                if(searchRef!== undefined &&searchRef.current !== null){\r\n                    searchRef.current.value='';\r\n                    masterData['searchedData']=undefined;\r\n                }\r\n                \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        selectedFilter,\r\n                        loading: false\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch(initRequest(false));\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}