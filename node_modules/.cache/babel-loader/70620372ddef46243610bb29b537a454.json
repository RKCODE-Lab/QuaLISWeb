{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{injectIntl,FormattedMessage}from'react-intl';import{Nav,Row,Col}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import DataGrid from'../../components/data-grid/data-grid.component';import{faPlus}from'@fortawesome/free-solid-svg-icons';import{process}from'@progress/kendo-data-query';var WorklistSampleTab=/*#__PURE__*/function(_React$Component){_inherits(WorklistSampleTab,_React$Component);var _super=_createSuper(WorklistSampleTab);function WorklistSampleTab(props){var _this;_classCallCheck(this,WorklistSampleTab);_this=_super.call(this,props);_this.state={sampleDataState:{skip:0,take:_this.props.settings?parseInt(_this.props.settings[14]):5}};return _this;}_createClass(WorklistSampleTab,[{key:\"render\",value:function render(){var _this2=this;var methodUrl=\"WorklistSample\";return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"editSample\",className:\"add-txt-btn\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADDSAMPLE\"}),hidden:this.props.userRoleControlRights.indexOf(this.props.addSampleId)===-1,onClick:function onClick(){return _this2.props.getWorklistSample(\"IDS_WORKLISTSAMPLE\",\"create\",\"nworklistcode\",// this.props.Login.masterData,\n_this2.props.masterData,// this.props.Login.userInfo,\n_this2.props.userInfo,_this2.props.addSampleId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SAMPLE\",defaultMessage:\"Sample\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid,{key:\"worklistsamplekey\",primaryKeyField:\"nworklistsamplecode\",data:this.props.WorklistSamples,dataResult:process(this.props.selectedWorklist||[],this.state.sampleDataState)//dataResult={this.props.selectedWorklist || []}\n,expandField:\"expanded\",dataState:this.state.sampleDataState,dataStateChange:function dataStateChange(event){return _this2.setState({sampleDataState:event.dataState});},controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,extractedColumnList:this.props.extractedColumnList,detailedFieldList:this.props.detailedFieldList,deleteRecord:this.props.deleteRecord,deleteParam:{operation:\"delete\",methodUrl:methodUrl,screenName:this.props.screenName},pageable:true,scrollable:'scrollable',gridHeight:'335px',isActionRequired:true,methodUrl:methodUrl,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_PREVIOUSRESULTVIEW\"}),controlname:\"faEye\",objectName:\"ExceptionLogs\",hidden:this.props.userRoleControlRights.indexOf(this.props.viewSampleId)===-1,onClick:function onClick(viewSample){return _this2.props.viewSample(viewSample);}}]}))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.WorklistSamples!==previousProps.WorklistSamples){var sampleDataState=this.state.sampleDataState;if(this.props.dataState===undefined){sampleDataState={skip:0,take:this.props.settings?parseInt(this.props.settings[14]):5};}this.setState({sampleDataState:sampleDataState});}}}]);return WorklistSampleTab;}(React.Component);;export default injectIntl(WorklistSampleTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/worklist/WorklistSampleTab.jsx"],"names":["React","injectIntl","FormattedMessage","Nav","Row","Col","FontAwesomeIcon","DataGrid","faPlus","process","WorklistSampleTab","props","state","sampleDataState","skip","take","settings","parseInt","methodUrl","intl","formatMessage","id","userRoleControlRights","indexOf","addSampleId","getWorklistSample","masterData","userInfo","WorklistSamples","selectedWorklist","event","setState","dataState","controlMap","extractedColumnList","detailedFieldList","deleteRecord","operation","screenName","title","controlname","objectName","hidden","viewSampleId","onClick","viewSample","previousProps","undefined","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { process } from '@progress/kendo-data-query';\r\nclass WorklistSampleTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            sampleDataState: { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 },\r\n        });\r\n    }\r\n    render() {\r\n\r\n        const methodUrl = \"WorklistSample\";\r\n        return (\r\n            <>\r\n                <div className=\"actions-stripe\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n\r\n                        <Nav.Link\r\n                            name=\"editSample\" className=\"add-txt-btn\"\r\n                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\", })}\r\n                             hidden={this.props.userRoleControlRights.indexOf(this.props.addSampleId) === -1 }\r\n                            onClick={() =>\r\n                                this.props.getWorklistSample(\r\n                                    \"IDS_WORKLISTSAMPLE\",\r\n                                    \"create\",\r\n                                    \"nworklistcode\",\r\n                                    // this.props.Login.masterData,\r\n                                    this.props.masterData,\r\n                                    // this.props.Login.userInfo,\r\n                                    this.props.userInfo,\r\n                                    this.props.addSampleId\r\n                                )\r\n                            }\r\n                        >\r\n                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                            <FormattedMessage id=\"IDS_SAMPLE\" defaultMessage=\"Sample\"></FormattedMessage>\r\n                        </Nav.Link>\r\n                    </div>\r\n                </div>\r\n                <Row noGutters={true}>\r\n                    <Col md=\"12\">\r\n                        <DataGrid\r\n                            key=\"worklistsamplekey\"\r\n                            primaryKeyField=\"nworklistsamplecode\"\r\n                            data={this.props.WorklistSamples}\r\n                            dataResult={process(this.props.selectedWorklist || [], this.state.sampleDataState)}\r\n                            //dataResult={this.props.selectedWorklist || []}\r\n                            expandField=\"expanded\"\r\n                            dataState={this.state.sampleDataState}\r\n                            dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            extractedColumnList={this.props.extractedColumnList}\r\n                            detailedFieldList={this.props.detailedFieldList}\r\n                            deleteRecord={this.props.deleteRecord}\r\n                            deleteParam={{ operation: \"delete\", methodUrl, screenName: this.props.screenName }}\r\n                            pageable={true}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'335px'}\r\n                            isActionRequired={true}\r\n                            methodUrl={methodUrl}\r\n                            actionIcons={[{\r\n                                title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),\r\n                                controlname: \"faEye\",\r\n                                objectName: \"ExceptionLogs\",\r\n                                hidden: this.props.userRoleControlRights.indexOf(this.props.viewSampleId) === -1,\r\n                               onClick: (viewSample) => this.props.viewSample(viewSample)\r\n                            }]}\r\n                        >\r\n                        </DataGrid>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.WorklistSamples !== previousProps.WorklistSamples) {\r\n            let { sampleDataState } = this.state;\r\n            if (this.props.dataState === undefined) {\r\n                sampleDataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n            }\r\n            this.setState({ sampleDataState });\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default injectIntl(WorklistSampleTab);"]},"metadata":{},"sourceType":"module"}