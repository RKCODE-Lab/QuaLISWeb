{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\ResultEntryTaskTab.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Nav } from 'react-bootstrap';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nclass ResultEntryTaskTab extends React.Component {\n  render() {\n    const addResultUsedTaskId = this.props.controlMap.has(\"AddResultUsedTask\") && this.props.controlMap.get(\"AddResultUsedTask\").ncontrolcode;\n    const extractedColumnList = [//{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"1%\" },\n    //{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"8%\" },\n    {\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_PREANALYSISTIME\",\n      \"dataField\": \"spreanalysistime\",\n      \"width\": \"170px\"\n    }, {\n      \"idsName\": \"IDS_PREPARATIONTIME\",\n      \"dataField\": \"spreparationtime\",\n      \"width\": \"170px\"\n    }, {\n      \"idsName\": \"IDS_ANALYSISTIME\",\n      \"dataField\": \"sanalysistime\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_MISCTIME\",\n      \"dataField\": \"smisctime\",\n      \"width\": \"180px\"\n    }, {\n      \"idsName\": \"IDS_USERNAME\",\n      \"dataField\": \"sanalyst\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_COMMENTS\",\n      \"dataField\": \"scomments\",\n      \"width\": \"200px\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe border-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"resultusedtask\",\n      className: \"add-txt-btn\",\n      hidden: this.props.userRoleControlRights.indexOf(addResultUsedTaskId) === -1,\n      onClick: () => this.props.addResultEntryTask({\n        userInfo: this.props.userInfo,\n        ntransactiontestcode: this.props.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\"),\n        stestsynonym: this.props.masterData.RESelectedTest.map(test => test.stestsynonym).join(\",\"),\n        addResultUsedTaskId: addResultUsedTaskId,\n        screenName: this.props.screenName\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDTASK\",\n      defaultMessage: \"Task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nresultusedtaskcode\",\n      data: this.props.masterData.ResultUsedTasks,\n      dataResult: process(this.props.masterData.ResultUsedTasks || [], this.props.dataState),\n      dataState: this.props.dataState,\n      dataStateChange: this.props.dataStateChange,\n      extractedColumnList: extractedColumnList,\n      userInfo: this.props.userInfo,\n      controlMap: this.props.controlMap,\n      methodUrl: this.props.methodUrl,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      pageable: true,\n      hideDetailBand: true,\n      expandField: \"expanded\",\n      isActionRequired: this.props.isActionRequired,\n      deleteParam: this.props.deleteParam || \"\",\n      fetchRecord: this.props.fetchRecord || \"\",\n      editParam: this.props.editParam || \"\",\n      deleteRecord: this.props.deleteRecord || \"\",\n      selectedId: this.props.selectedId,\n      isToolBarRequired: false,\n      scrollable: \"scrollable\",\n      gridHeight: \"550px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(ResultEntryTaskTab);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryTaskTab.jsx"],"names":["React","Row","Col","FormattedMessage","injectIntl","DataGrid","process","FontAwesomeIcon","Nav","faPlus","ResultEntryTaskTab","Component","render","addResultUsedTaskId","props","controlMap","has","get","ncontrolcode","extractedColumnList","userRoleControlRights","indexOf","addResultEntryTask","userInfo","ntransactiontestcode","masterData","RESelectedTest","map","test","join","stestsynonym","screenName","ResultUsedTasks","dataState","dataStateChange","methodUrl","inputParam","isActionRequired","deleteParam","fetchRecord","editParam","deleteRecord","selectedId"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass ResultEntryTaskTab extends React.Component {\r\n\r\n    render() {\r\n        const addResultUsedTaskId = this.props.controlMap.has(\"AddResultUsedTask\") && this.props.controlMap.get(\"AddResultUsedTask\").ncontrolcode\r\n        const extractedColumnList = [\r\n            //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"1%\" },\r\n            //{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"8%\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_PREANALYSISTIME\", \"dataField\": \"spreanalysistime\", \"width\": \"170px\" },\r\n            { \"idsName\": \"IDS_PREPARATIONTIME\", \"dataField\": \"spreparationtime\", \"width\": \"170px\" },\r\n            { \"idsName\": \"IDS_ANALYSISTIME\", \"dataField\": \"sanalysistime\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_MISCTIME\", \"dataField\": \"smisctime\", \"width\": \"180px\" },\r\n            { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"sanalyst\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" }\r\n        ]\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div className=\"actions-stripe border-bottom\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <Nav.Link name=\"resultusedtask\" className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addResultUsedTaskId) === -1}\r\n                                    onClick={() => this.props.addResultEntryTask({\r\n                                        userInfo: this.props.userInfo,\r\n                                        ntransactiontestcode: this.props.masterData.RESelectedTest.map(test => test.ntransactiontestcode).join(\",\"),\r\n                                        stestsynonym: this.props.masterData.RESelectedTest.map(test => test.stestsynonym).join(\",\"),\r\n                                        addResultUsedTaskId: addResultUsedTaskId, screenName: this.props.screenName\r\n                                    })}>\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id=\"IDS_ADDTASK\" defaultMessage=\"Task\" />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        <DataGrid\r\n                            primaryKeyField={\"nresultusedtaskcode\"}\r\n                            data={this.props.masterData.ResultUsedTasks}\r\n                            dataResult={process(this.props.masterData.ResultUsedTasks || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                            extractedColumnList={extractedColumnList}\r\n                            userInfo={this.props.userInfo}\r\n                            controlMap={this.props.controlMap}\r\n                            methodUrl={this.props.methodUrl}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            pageable={true}\r\n                            hideDetailBand={true}\r\n                            expandField=\"expanded\"\r\n                            isActionRequired={this.props.isActionRequired}\r\n                            deleteParam={this.props.deleteParam || \"\"}\r\n                            fetchRecord={this.props.fetchRecord || \"\"}\r\n                            editParam={this.props.editParam || \"\"}\r\n                            deleteRecord={this.props.deleteRecord || \"\"}\r\n                            selectedId={this.props.selectedId}\r\n                            isToolBarRequired={false}\r\n                            scrollable={\"scrollable\"}\r\n                            gridHeight={\"550px\"}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(ResultEntryTaskTab);"]},"metadata":{},"sourceType":"module"}