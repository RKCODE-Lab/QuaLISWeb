{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import{SampleType,TemplateType}from'../../components/Enumeration';var ApprovalStatusConfigFilter=function ApprovalStatusConfigFilter(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_SAMPLETYPE\"}),isSearchable:true,name:\"nsampletypecode\",isDisabled:false,value:props.defaultSample,isMandatory:false,showOption:true,options:props.SampleTypes,optionId:\"nsampletypecode\",optionValue:\"ssampletypename\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),onChange:function onChange(event){return props.onComboChange(event,'nsampletypecode');}}),props.defaultSample.value===SampleType.Masters?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_FORMNAME\"}),isSearchable:true,name:\"nformcode\",isDisabled:false,value:props.defaultForms,isMandatory:false,showOption:true,options:props.qualisForms,optionId:\"nformcode\",optionValue:\"sdisplayname\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),onChange:function onChange(event){return props.onComboChange(event,'nformcode');}}),props.defaultForms.value===55&&props.defaultSample.value===SampleType.Masters?/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_APPROVALSUBTYPE\"}),isSearchable:true,name:\"napprovalsubtypecode\",isDisabled:false,value:props.defaultApprovalSubType,isMandatory:false// showOption={true}\n,options:props.approvalSubType,optionId:\"napprovalsubtypecode\",optionValue:\"ssubtypename\"// menuPosition=\"fixed\"\n,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),onChange:function onChange(event){return props.onComboChange(event,'napprovalsubtypecode');}}):\"\"):/*#__PURE__*/React.createElement(React.Fragment,null,props.defaultRegType?/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_REGTYPE\"}),isSearchable:true,name:\"nregtypecode\",isDisabled:false,value:props.defaultRegType,isMandatory:false,options:props.registrationTypes,optionId:\"nregtypecode\",optionValue:\"sregtypename\"// menuPosition=\"fixed\"\n,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),onChange:function onChange(event){return props.onComboChange(event,'nregtypecode');}}):\"\",props.defaultRegSubType?/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_REGSUBTYPE\"}),isSearchable:true,name:\"nregsubtypecode\",isDisabled:false,value:props.defaultRegSubType,isMandatory:false// showOption={true}\n,options:props.regSubTypeList,optionId:\"nregsubtypecode\",optionValue:\"sregsubtypename\"// menuPosition=\"fixed\"\n,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),onChange:function onChange(event){return props.onComboChange(event,'nregsubtypecode');}}):\"\",/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_FORMNAME\"}),isSearchable:true,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),name:\"nformcode\",isDisabled:false,value:props.defaultForms,isMandatory:false,showOption:true,options:props.qualisForms,optionId:\"nformcode\",optionValue:\"sdisplayname\",onChange:function onChange(event){return props.onComboChange(event,'nformcode');}}))));};export default injectIntl(ApprovalStatusConfigFilter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/approvalstatusconfig/ApprovalStatusConfigFilter.jsx"],"names":["React","Row","Col","FormSelectSearch","injectIntl","SampleType","TemplateType","ApprovalStatusConfigFilter","props","formatMessage","id","defaultSample","SampleTypes","intl","event","onComboChange","value","Masters","defaultForms","qualisForms","defaultApprovalSubType","approvalSubType","defaultRegType","registrationTypes","defaultRegSubType","regSubTypeList"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { SampleType, TemplateType } from '../../components/Enumeration';\r\nconst ApprovalStatusConfigFilter = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n              \r\n            <FormSelectSearch\r\n                          formLabel={props.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                        isSearchable={true}\r\n                        name={\"nsampletypecode\"}\r\n                        isDisabled={false}\r\n                        value={props.defaultSample}\r\n                        isMandatory={false}\r\n                        showOption={true}\r\n                        options={props.SampleTypes}\r\n                      optionId='nsampletypecode'\r\n                        optionValue='ssampletypename'\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        onChange={(event) => props.onComboChange(event, 'nsampletypecode')}\r\n                        >\r\n                    </FormSelectSearch>\r\n                    \r\n                     {props.defaultSample.value===SampleType.Masters?       \r\n                     <>         \r\n                    <FormSelectSearch\r\n                        formLabel={props.formatMessage({ id: \"IDS_FORMNAME\" })}\r\n                        isSearchable={true}\r\n                        name={\"nformcode\"}\r\n                        isDisabled={false}\r\n                        value={props.defaultForms}\r\n                        isMandatory={false}\r\n                        showOption={true}                       \r\n                        options={props.qualisForms}\r\n                        optionId='nformcode'\r\n                        optionValue='sdisplayname'                       \r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        onChange={(event) => props.onComboChange(event, 'nformcode')}\r\n                     >             \r\n                    </FormSelectSearch> \r\n\r\n      {props.defaultForms.value===55 && props.defaultSample.value===SampleType.Masters ?\r\n        <FormSelectSearch    \r\n              formLabel={props.formatMessage({ id: \"IDS_APPROVALSUBTYPE\" })}\r\n              isSearchable={true}\r\n              name={\"napprovalsubtypecode\"}\r\n              isDisabled={false}\r\n              value={props.defaultApprovalSubType}\r\n              isMandatory={false}\r\n              // showOption={true}\r\n              options={props.approvalSubType}\r\n              optionId='napprovalsubtypecode'\r\n              optionValue='ssubtypename'\r\n              // menuPosition=\"fixed\"\r\n              placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n              onChange={(event) => props.onComboChange(event, 'napprovalsubtypecode')}\r\n  >\r\n</FormSelectSearch>\r\n\r\n:\"\"}\r\n</> \r\n                    \r\n                    :\r\n                    <>\r\n                    {props.defaultRegType ?\r\n              \r\n                  <FormSelectSearch    \r\n                          formLabel={props.formatMessage({ id: \"IDS_REGTYPE\" })}\r\n                        isSearchable={true}\r\n                        name={\"nregtypecode\"}\r\n                        isDisabled={false}\r\n                        value={props.defaultRegType}\r\n                        isMandatory={false}\r\n                        options={props.registrationTypes}\r\n                        optionId='nregtypecode'\r\n                        optionValue='sregtypename'\r\n                        // menuPosition=\"fixed\"\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        onChange={(event) => props.onComboChange(event, 'nregtypecode')}>\r\n                      \r\n                    </FormSelectSearch>\r\n                    :\"\"}\r\n                   {props.defaultRegSubType ?\r\n                    <FormSelectSearch    \r\n                          formLabel={props.formatMessage({ id: \"IDS_REGSUBTYPE\" })}\r\n                        isSearchable={true}\r\n                        name={\"nregsubtypecode\"}\r\n                        isDisabled={false}\r\n                        value={props.defaultRegSubType}\r\n                        isMandatory={false}\r\n                        // showOption={true}\r\n                        options={props.regSubTypeList}\r\n                        optionId='nregsubtypecode'\r\n                        optionValue='sregsubtypename'\r\n                        // menuPosition=\"fixed\"\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        onChange={(event) => props.onComboChange(event, 'nregsubtypecode')}>\r\n                      \r\n                    </FormSelectSearch>\r\n\r\n                   :\"\"}\r\n                    <FormSelectSearch\r\n                        formLabel={props.formatMessage({ id: \"IDS_FORMNAME\" })}\r\n                        isSearchable={true}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        name={\"nformcode\"}\r\n                        isDisabled={false}\r\n                        value={props.defaultForms}\r\n                        isMandatory={false}\r\n                        showOption={true}\r\n                        options={props.qualisForms}\r\n                        optionId='nformcode'\r\n                        optionValue='sdisplayname'                       \r\n                      \r\n                        onChange={(event) => props.onComboChange(event, 'nformcode')}      \r\n                     >             \r\n                    </FormSelectSearch> \r\n                  \r\n                  </>\r\n                    }\r\n                 \r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(ApprovalStatusConfigFilter);"]},"metadata":{},"sourceType":"module"}