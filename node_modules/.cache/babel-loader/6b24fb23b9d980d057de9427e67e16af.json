{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from\"react-toastify\";import rsapi from\"../rsapi\";import{initRequest}from\"./LoginAction\";import{DEFAULT_RETURN}from\"./LoginTypes\";import{constructOptionList,rearrangeDateFormat,sortData}from\"../components/CommonScript\";import{intl}from\"../components/App\";import Axios from\"axios\";import{transactionStatus}from\"../components/Enumeration\";export function getRetrievalCertificateForFilter(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"retrievalcertificate/getRetrievalCertificate\",_objectSpread({},inputParam.inputData)).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);var masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);if(inputParam.searchRef!==undefined&&inputParam.searchRef.current!==null){inputParam.searchRef.current.value=\"\";masterData['searchedData']=undefined;}dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRetrievalCertificateComboService(screenName,operation,primaryKeyName,primaryKeyValue,masterData,userInfo,ncontrolCode){return function(dispatch){if(operation===\"create\"||operation===\"update\"&&masterData.SelectedRetrievalCertificate.ntransactionstatus===transactionStatus.DRAFT){var urlArray=[];var projectService=rsapi.post(\"retrievalcertificate/getProject\",{userinfo:userInfo});var storageConditionService=rsapi.post(\"storagecondition/getStorageCondition\",{userinfo:userInfo});var UTCtimeZoneService=rsapi.post(\"timezone/getLocalTimeByZone\",{userinfo:userInfo});var siteaddressService=rsapi.post(\"retrievalcertificate/getSiteAddress\",{userinfo:userInfo});if(operation===\"create\"){urlArray=[projectService,storageConditionService,UTCtimeZoneService,siteaddressService];}else{var _rsapi$post;var retrievalcertificateServiceById=rsapi.post(\"retrievalcertificate/getActiveRetrievalCertificateById\",(_rsapi$post={},_defineProperty(_rsapi$post,primaryKeyName,primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",userInfo),_rsapi$post));//this.props.Login.userInfo\nurlArray=[projectService,storageConditionService,UTCtimeZoneService,retrievalcertificateServiceById];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};var projectMap=constructOptionList(response[0].data||[],\"nprojectmastercode\",\"sprojectname\",undefined,undefined,true);var storageconditionMap=constructOptionList(response[1].data||[],\"nstorageconditioncode\",\"sstorageconditionname\",undefined,undefined,true);var projectList=projectMap.get(\"OptionList\");var storageconditionList=storageconditionMap.get(\"OptionList\");var currentTime=rearrangeDateFormat(userInfo,response[2].data);if(operation===\"update\"){selectedRecord=response[3].data;selectedRecord[\"dretrievalcertificatedate\"]=rearrangeDateFormat(userInfo,response[3].data.sretrievalcertificatedate);selectedRecord[\"nprojectmastercode\"]={\"value\":response[3].data.nprojectmastercode,\"label\":response[3].data.sprojectname};selectedRecord[\"nstorageconditioncode\"]={\"value\":response[3].data.nstorageconditioncode,\"label\":response[3].data.sstorageconditionname};//  selectedRecord[\"ntztrainingdate\"] = { \"value\": response[4].data.ntztrainingdate, \"label\": response[4].data.stimezoneid };\n}else{selectedRecord[\"sorganizationaddress\"]=response[3].data[0].ssiteaddress;selectedRecord[\"dretrievalcertificatedate\"]=rearrangeDateFormat(userInfo,response[2].data);}dispatch({type:DEFAULT_RETURN,payload:{currentTime:currentTime,projectList:projectList,storageconditionList:storageconditionList,operation:operation,screenName:screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTRECORD\"}));}};}export function getProjectBasedUsers(nprojectmastercode,userInfo,selectedRecord,screenName){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"retrievalcertificate/getProjectUsers\",{\"nprojectmastercode\":nprojectmastercode,userinfo:userInfo}).then(function(response){//console.log(\" response:\", response); \nvar Users=[];var userName=constructOptionList(response.data||[],\"nusercode\",\"susername\",undefined,undefined,false);Users=userName.get(\"OptionList\");//selectedRecord[\"nusercode\"] = undefined; \nselectedRecord[\"sinvestigatorname\"]=response.data[0].susername;selectedRecord[\"sphoneno\"]=response.data[0].sphoneno;selectedRecord[\"semail\"]=response.data[0].semail;dispatch({type:DEFAULT_RETURN,payload:{Users:Users,selectedRecord:selectedRecord,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRetrievalCertificateDetail(retrievalcertificate,fromDate,toDate,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"retrievalcertificate/getRetrievalCertificate\",{nretrievalcertificatecode:retrievalcertificate.nretrievalcertificatecode,fromDate:fromDate,toDate:toDate,\"userinfo\":userInfo}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function reloadRetrievalCertificate(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"retrievalcertificate/getRetrievalCertificate\",_objectSpread({},inputParam.inputData)).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);var masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);if(inputParam.searchRef!==undefined&&inputParam.searchRef.current!==null){inputParam.searchRef.current.value=\"\";masterData['searchedData']=undefined;}dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export var reportRetrievalCetificate=function reportRetrievalCetificate(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"retrievalcertificate/RetrievalReportCertificate\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false,showConfirmAlert:false}});document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/RetrievalCertificateAction.js"],"names":["toast","rsapi","initRequest","DEFAULT_RETURN","constructOptionList","rearrangeDateFormat","sortData","intl","Axios","transactionStatus","getRetrievalCertificateForFilter","inputParam","dispatch","post","inputData","then","response","responseData","data","masterData","searchRef","undefined","current","value","type","payload","loading","showFilter","catch","error","status","message","warn","getRetrievalCertificateComboService","screenName","operation","primaryKeyName","primaryKeyValue","userInfo","ncontrolCode","SelectedRetrievalCertificate","ntransactionstatus","DRAFT","urlArray","projectService","userinfo","storageConditionService","UTCtimeZoneService","siteaddressService","retrievalcertificateServiceById","all","selectedRecord","projectMap","storageconditionMap","projectList","get","storageconditionList","currentTime","sretrievalcertificatedate","nprojectmastercode","sprojectname","nstorageconditioncode","sstorageconditionname","ssiteaddress","openModal","formatMessage","id","getProjectBasedUsers","Users","userName","susername","sphoneno","semail","getRetrievalCertificateDetail","retrievalcertificate","fromDate","toDate","nretrievalcertificatecode","reloadRetrievalCertificate","reportRetrievalCetificate","loadEsign","showConfirmAlert","document","getElementById","setAttribute","filepath","click"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\r\nimport rsapi from \"../rsapi\";\r\nimport { initRequest } from \"./LoginAction\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport { constructOptionList, rearrangeDateFormat, sortData } from \"../components/CommonScript\";\r\nimport { intl } from \"../components/App\";\r\nimport Axios from \"axios\";\r\nimport { transactionStatus } from \"../components/Enumeration\";\r\n\r\nexport function getRetrievalCertificateForFilter(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"retrievalcertificate/getRetrievalCertificate\", { ...inputParam.inputData })\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                    inputParam.searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRetrievalCertificateComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if (operation===\"create\" || operation===\"update\" && masterData.SelectedRetrievalCertificate.ntransactionstatus===transactionStatus.DRAFT) {\r\n\r\n        let urlArray = [];\r\n        const projectService = rsapi.post(\"retrievalcertificate/getProject\", { userinfo: userInfo });\r\n        const storageConditionService = rsapi.post(\"storagecondition/getStorageCondition\", { userinfo: userInfo });\r\n        const UTCtimeZoneService = rsapi.post(\"timezone/getLocalTimeByZone\", { userinfo: userInfo });\r\n        const siteaddressService = rsapi.post(\"retrievalcertificate/getSiteAddress\", { userinfo: userInfo });\r\n\r\n        if (operation === \"create\") {\r\n             urlArray = [projectService, storageConditionService, UTCtimeZoneService,siteaddressService];\r\n        }\r\n        else{\r\n            const retrievalcertificateServiceById = rsapi.post(\"retrievalcertificate/getActiveRetrievalCertificateById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": userInfo });//this.props.Login.userInfo\r\n            urlArray = [projectService, storageConditionService, UTCtimeZoneService,retrievalcertificateServiceById];\r\n               \r\n            }\r\n\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                \r\n                    let selectedRecord = {};\r\n\r\n                    const projectMap = constructOptionList(response[0].data || [], \"nprojectmastercode\",\r\n                        \"sprojectname\", undefined, undefined, true);\r\n                    const storageconditionMap = constructOptionList(response[1].data || [], \"nstorageconditioncode\",\r\n                        \"sstorageconditionname\", undefined, undefined, true);\r\n                    const projectList = projectMap.get(\"OptionList\");\r\n                    const storageconditionList = storageconditionMap.get(\"OptionList\");\r\n                    const currentTime = rearrangeDateFormat(userInfo, response[2].data);\r\n                    if (operation === \"update\") {\r\n                        selectedRecord = response[3].data;\r\n\r\n                        selectedRecord[\"dretrievalcertificatedate\"] = rearrangeDateFormat(userInfo, response[3].data.sretrievalcertificatedate)\r\n                        selectedRecord[\"nprojectmastercode\"] = { \"value\": response[3].data.nprojectmastercode, \"label\": response[3].data.sprojectname };\r\n                        selectedRecord[\"nstorageconditioncode\"] = { \"value\": response[3].data.nstorageconditioncode, \"label\": response[3].data.sstorageconditionname };\r\n                      //  selectedRecord[\"ntztrainingdate\"] = { \"value\": response[4].data.ntztrainingdate, \"label\": response[4].data.stimezoneid };\r\n                    }\r\n                    else {\r\n                        selectedRecord[\"sorganizationaddress\"] = response[3].data[0].ssiteaddress;\r\n                        selectedRecord[\"dretrievalcertificatedate\"] = rearrangeDateFormat(userInfo, response[2].data);\r\n\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            currentTime,\r\n                            projectList, storageconditionList,\r\n                            operation, screenName, selectedRecord, openModal: true,\r\n                            ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n            \r\n            }\r\n            )\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        \r\n            } else {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORD\" }));\r\n            }\r\n    }\r\n}\r\nexport function getProjectBasedUsers(nprojectmastercode, userInfo, selectedRecord, screenName) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"retrievalcertificate/getProjectUsers\", {\"nprojectmastercode\": nprojectmastercode,userinfo: userInfo})\r\n            .then(response => {\r\n                //console.log(\" response:\", response); \r\n                let Users = [];\r\n                    const userName = constructOptionList(response.data || [], \"nusercode\",\r\n                        \"susername\", undefined, undefined, false);\r\n                    Users = userName.get(\"OptionList\");\r\n                    //selectedRecord[\"nusercode\"] = undefined; \r\n                selectedRecord[\"sinvestigatorname\"] = response.data[0].susername; \r\n                selectedRecord[\"sphoneno\"] = response.data[0].sphoneno; \r\n                selectedRecord[\"semail\"] = response.data[0].semail; \r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        Users,\r\n                        selectedRecord,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getRetrievalCertificateDetail(retrievalcertificate, fromDate, toDate, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n\r\n        return rsapi.post(\"retrievalcertificate/getRetrievalCertificate\", {\r\n            nretrievalcertificatecode: retrievalcertificate.nretrievalcertificatecode, fromDate, toDate,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\nexport function reloadRetrievalCertificate(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"retrievalcertificate/getRetrievalCertificate\", { ...inputParam.inputData })\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                    inputParam.searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const reportRetrievalCetificate = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"retrievalcertificate/RetrievalReportCertificate\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showConfirmAlert: false\r\n                    }\r\n                })\r\n                document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                document.getElementById(\"download_data\").click();\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}