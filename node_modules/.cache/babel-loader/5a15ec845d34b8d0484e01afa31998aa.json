{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\quotation\\\\EditQuotationTestPricing.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst EditQuotationTestPricing = props => {\n  console.log(\"props.selected:\", props.selectedRecord);\n  return Object.keys(props.selectedRecord).length > 0 ? props.selectedRecord.map(item => /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 33\n    }\n  }, item.stestsynonym)), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DISCOUNTBAND\"\n    }),\n    isSearchable: true,\n    name: \"ndiscountbandcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isClearable: false,\n    options: props.DiscountBand //      value={{label:item['sdiscountbandname'],value:item['ndiscountbandcode']} || -1}\n    ,\n    value: item.ndiscountbandcode.label !== \"\" ? item.ndiscountbandcode : \"\" //      value={item.ndiscountbandcode || \"\"}\n    //      defaultValue={props.selectedRecord[\"ndiscountbandcode\"]}\n    ,\n    defaultValue: item,\n    onChange: event => props.onComboChange(event, \"ndiscountbandcode\", 5, item.nquotationtestcode),\n    closeMenuOnSelect: true // onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_AMOUNT\"\n    }),\n    name: \"namount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }) // value={props.selectedRecord.namount ? props.selectedRecord.namount : 0}\n    ,\n    value: item.namount ? item.namount : 0,\n    isMandatory: false,\n    isDisabled: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_COST\"\n    }),\n    type: \"number\",\n    value: item.ncost || 0,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COST\"\n    }),\n    strict: true,\n    min: 0,\n    maxLength: 10 // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\n    ,\n    onChange: event => props.onNumericInputChange(event, \"ncost\", item.nquotationtestcode),\n    onBlur: () => props.onnetAmountEvent(item.nquotationtestcode),\n    noStyle: true,\n    precision: 2,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"nnoofsamples\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_NUMBEROFSAMPLES\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NUMBEROFSAMPLES\"\n    }),\n    isMandatory: true,\n    required: true,\n    className: \"form-control\",\n    value: item.nnoofsamples || 0 // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\n    ,\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    onBlur: () => props.onnetAmountEvent(item.nquotationtestcode),\n    maxLength: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    }),\n    name: \"ntotalamount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, item.nquotationtestcode),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    }),\n    value: item.ntotalamount > 0 ? item.ntotalamount : 0 //     value={(item.ncost * item.nnoofsamples) || 0}\n    ,\n    isMandatory: true,\n    required: true,\n    maxLength: 10,\n    isDisabled: true,\n    precision: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  })))) : \"\";\n};\n\nexport default injectIntl(EditQuotationTestPricing);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/EditQuotationTestPricing.jsx"],"names":["React","Row","Col","injectIntl","FormInput","ReadOnlyText","FormNumericInput","FormSelectSearch","EditQuotationTestPricing","props","console","log","selectedRecord","Object","keys","length","map","item","stestsynonym","intl","formatMessage","id","DiscountBand","ndiscountbandcode","label","event","onComboChange","nquotationtestcode","onInputOnChange","namount","ncost","onNumericInputChange","onnetAmountEvent","nnoofsamples","ntotalamount"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst EditQuotationTestPricing = (props) => {\r\n        console.log(\"props.selected:\", props.selectedRecord)\r\n        return (\r\n            Object.keys(props.selectedRecord).length > 0 ? \r\n                props.selectedRecord.map(item=>\r\n                <Row>\r\n                    <Col md={2}>\r\n                                <ReadOnlyText>{item.stestsynonym}</ReadOnlyText>\r\n                    </Col>\r\n                    {/* <Col md={4}>\r\n                            <ReadOnlyText>{item.stestdescription}</ReadOnlyText>\r\n                    </Col> */}\r\n\r\n                   <Col md={2}>\r\n                               \r\n                        <FormSelectSearch\r\n\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_DISCOUNTBAND\" })}\r\n                                isSearchable={true}\r\n                                name={\"ndiscountbandcode\"}\r\n                                isDisabled={false}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={false}\r\n                                isClearable={false}\r\n                                options={props.DiscountBand}\r\n                        //      value={{label:item['sdiscountbandname'],value:item['ndiscountbandcode']} || -1}\r\n                                value={item.ndiscountbandcode.label !==\"\" ? item.ndiscountbandcode : \"\"} \r\n                        //      value={item.ndiscountbandcode || \"\"}\r\n                        //      defaultValue={props.selectedRecord[\"ndiscountbandcode\"]}\r\n                                defaultValue={item }\r\n                                onChange={(event) => props.onComboChange(event, \"ndiscountbandcode\", 5,item.nquotationtestcode)}\r\n                                closeMenuOnSelect={true}\r\n                                // onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                        >\r\n                        </FormSelectSearch>\r\n                            \r\n                    </Col>\r\n\r\n\r\n                    <Col md={2}>\r\n                        <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_AMOUNT\" })}\r\n                                name={\"namount\"}\r\n                                type=\"text\" \r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                             // value={props.selectedRecord.namount ? props.selectedRecord.namount : 0}\r\n                                value={item.namount ? item.namount : 0}\r\n                                isMandatory={false}\r\n                                isDisabled={true}\r\n                                required={true}\r\n                                maxLength={\"100\"}\r\n                        />\r\n                </Col>  \r\n\r\n                    <Col md={2}>\r\n                                {/* <FormInput\r\n                                    label={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                    name={\"ncost\"}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                    onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                    value={item.ncost || 0}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={9}\r\n                                    isDisabled={false}\r\n                            /> */}\r\n\r\n\r\n                                <FormNumericInput\r\n                                        \r\n                                        label={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                        type=\"number\"\r\n                                        value={item.ncost || 0}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                        strict={true}\r\n                                        min={0}\r\n                                        maxLength={10}\r\n                                        // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\r\n                                        onChange={(event) => props.onNumericInputChange(event, \"ncost\",item.nquotationtestcode)}\r\n                                        onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                        noStyle={true}\r\n                                        precision={2}\r\n                                        className=\"form-control\"\r\n                                        errors=\"Please provide a valid number.\"\r\n                             />\r\n                            \r\n                    </Col>\r\n                    \r\n                    {/* <Col md={3}>\r\n\r\n                            <FormInput\r\n                                    label={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                    name={\"nnoofsamples\"}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                    onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                    value={item.nnoofsamples || 0}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={9}\r\n                                    precision={0}\r\n                            />\r\n                    </Col> */}\r\n\r\n                    <Col md={2}>\r\n\r\n                    <FormInput\r\n                                name={\"nnoofsamples\"}\r\n                                type=\"text\"\r\n                                label={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                className=\"form-control\"\r\n                                value={item.nnoofsamples || 0}\r\n                                // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                maxLength={9}\r\n                            />\r\n                    </Col>\r\n\r\n                    <Col md={2}>\r\n\r\n                            <FormInput\r\n                                    label={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                    name={\"ntotalamount\"}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                    value={ item.ntotalamount>0 ? item.ntotalamount : 0 }\r\n                                //     value={(item.ncost * item.nnoofsamples) || 0}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={10}\r\n                                    isDisabled={true}\r\n                                    precision={2}\r\n                            />\r\n                    </Col>\r\n                </Row>\r\n            ) :\"\"\r\n        )\r\n}\r\n\r\nexport default injectIntl(EditQuotationTestPricing);"]},"metadata":{},"sourceType":"module"}