{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{constructOptionList,sortData}from'../components/CommonScript';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{transactionStatus}from'../components/Enumeration';import{intl}from\"../components/App\";export function openModal(operation,napprovalconfigcode,napprovalsubtypecode,userInfo,ncontrolcode,ntreeversiontempcode){return function(dispatch){if(userInfo){var inputData={napprovalconfigcode:napprovalconfigcode,napprovalsubtypecode:napprovalsubtypecode,ntreeversiontempcode:ntreeversiontempcode,userinfo:userInfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getUserRoleApprovalConfig\",inputData).then(function(response){var filterStatusOptionsMap=constructOptionList(response.data.availableFilterStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var validationStatusOptionsMap=constructOptionList(response.data.availableValidStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var approvalStatusOptionsMap=constructOptionList(response.data.approvalStatus||[],\"ntranscode\",\"stransdisplaystatus\",undefined,undefined,true);var decisionStatusOptionsMap=constructOptionList(response.data.availableDecisionStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var checklistOptionsMap=constructOptionList(response.data.checklist||[],\"nchecklistcode\",\"schecklistname\",undefined,undefined,true);var filterStatusOptions=filterStatusOptionsMap.get(\"OptionList\");var validationStatusOptions=validationStatusOptionsMap.get(\"OptionList\");var approvalStatusOptions=approvalStatusOptionsMap.get(\"OptionList\");var decisionStatusOptions=decisionStatusOptionsMap.get(\"OptionList\");var checklistOptions=checklistOptionsMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,userRoleTree:response.data.userroletree,filterStatusOptions:filterStatusOptions,validationStatusOptions:validationStatusOptions,approvalStatusOptions:approvalStatusOptions,decisionStatusOptions:decisionStatusOptions,checklistOptions:checklistOptions,approvalStatusValue:response.data.AvailableDecisionStatus?response.data.AvailableDecisionStatus:[],checklistValues:[],checklistVersionValues:[],actionStatus:response.data.actionStatus?response.data.actionStatus:[],roleConfig:response.data.roleConfig?sortData(response.data.roleConfig,'ascending','nsorter'):[],versionConfig:response.data.versionConfig?response.data.versionConfig:[],ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function getApprovalConfigVersion(version,napprovalsubtypecode,userInfo,masterData){return function(dispatch){var inputData={\"napprovalconfigversioncode\":version.napproveconfversioncode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedVersion:response.data.selectedVersion,showAccordion:true,approvalconfigRoleNames:response.data.approvalconfigRoleNames,selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRoleDetails(inputData){return function(dispatch){var role=inputData.role,masterData=inputData.masterData,napprovalsubtypecode=inputData.napprovalsubtypecode,userinfo=inputData.userinfo;var inputParamData={napprovalconfigrolecode:role.napprovalconfigrolecode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userinfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigRoleDetails\",inputParamData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedRole:role,showAccordion:true,roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovalConfigEditData(napprovalconfigversioncode,napprovalsubtypecode,userInfo,masterData,ncontrolcode){return function(dispatch){if(masterData.selectedVersion[\"ntransactionstatus\"]===transactionStatus.APPROVED||masterData.selectedVersion[\"ntransactionstatus\"]===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTOEDIT\"}));}else{if(userInfo){var inputData={napprovalconfigversioncode:napprovalconfigversioncode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigEditData\",inputData).then(function(response){console.log('fdsgfdg',response);var filterStatusOptionsMap=constructOptionList(response.data.availableFilterStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var validationStatusOptionsMap=constructOptionList(response.data.availableValidStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var approvalStatusOptionsMap=constructOptionList(response.data.approvalStatus||[],\"ntranscode\",\"stransdisplaystatus\",undefined,undefined,true);var decisionStatusOptionsMap=constructOptionList(response.data.availableDecisionStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var checklistOptionsMap=constructOptionList(response.data.checklist||[],\"nchecklistcode\",\"schecklistname\",undefined,undefined,true);var filterStatusOptions=filterStatusOptionsMap.get(\"OptionList\");var validationStatusOptions=validationStatusOptionsMap.get(\"OptionList\");var approvalStatusOptions=approvalStatusOptionsMap.get(\"OptionList\");var decisionStatusOptions=decisionStatusOptionsMap.get(\"OptionList\");var checklistOptions=checklistOptionsMap.get(\"OptionList\");var selectedRecord={};response.data.userroletree.map(function(role){var filterStatus=[];var validationStatus=[];var decisionStatus=[];var actionArray=[];var filterStatusValues=[];response.data[\"filterstatus_\".concat(role.nuserrolecode)].map(function(data){filterStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});filterStatus.push(data.ntranscode);return null;});var validationStatusValues=[];response.data[\"validationstatus_\".concat(role.nuserrolecode)].map(function(data){validationStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});validationStatus.push(data.ntranscode);return null;});var decisionStatusValues=[];response.data[\"decisionstatus_\".concat(role.nuserrolecode)].map(function(data){decisionStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});decisionStatus.push(data.ntranscode);return null;});var checklistValues=[];response.data[\"checklist_\".concat(role.nuserrolecode)].map(function(data){return checklistValues.push({value:data.nchecklistcode,label:data.schecklistname,item:data});});var checklistVersionValues=[];response.data[\"checklist_\".concat(role.nuserrolecode)].map(function(data){return checklistVersionValues.push({value:data.nchecklistversioncode,label:data.schecklistversionname,item:data});});var nrecomretestneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomretestneed;var nrecomrecalcneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomrecalcneed;var nretestneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nretestneed;var nrecalcneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecalcneed;var ncorrectionneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].ncorrectionneed;nrecomretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRETEST):actionArray.push();nrecomrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRECALC):actionArray.push();nretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RETEST):actionArray.push();nrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECALC):actionArray.push();ncorrectionneed===transactionStatus.YES?actionArray.push(transactionStatus.CORRECTION):actionArray.push();selectedRecord[role.nuserrolecode]={'IDS_PARTIALAPPROVAL':response.data[\"roledetails_\".concat(role.nuserrolecode)][0].npartialapprovalneed,'IDS_SECTIONWISEAPPROVE':response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nsectionwiseapprovalneed,'IDS_RECOMMENDRETEST':response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomretestneed,'IDS_RECOMMENDRECALC':response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomrecalcneed,'IDS_RETEST':response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nretestneed,'IDS_RECALC':response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecalcneed,'IDS_AUTOAPPROVAL':response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nautoapproval,'IDS_CORRECTION':response.data[\"roledetails_\".concat(role.nuserrolecode)][0].ncorrectionneed,'IDS_ESIGN':response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nesignneed,'filterstatus':filterStatus,'decisionstatus':decisionStatus,'validationstatus':validationStatus,'approvalstatus':response.data[\"roledetails_\".concat(role.nuserrolecode)][0].napprovalstatuscode,'checklist':response.data[\"checklist_\".concat(role.nuserrolecode)][0].nchecklistversioncode};selectedRecord['sversionname']=response.data.versiondetails.sversionname;response.data.versionConfig.map(function(action){if(action.ntranscode===81){selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautoapproval;}else if(action.ntranscode===85){selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautocomplete;}});selectedRecord['IDS_JOBALLOCATION']=response.data.versiondetails.nneedjoballocation;selectedRecord['IDS_AUTOALLOT']=response.data.versiondetails.nautoallot;selectedRecord[\"approvalstatus_\".concat(role.nuserrolecode)]=[{value:response.data[\"roledetails_\".concat(role.nuserrolecode)][0].napprovalstatuscode,label:response.data[\"roledetails_\".concat(role.nuserrolecode)][0].sapprovalstatus}];selectedRecord[\"filterstatus_\".concat(role.nuserrolecode)]=filterStatusValues;selectedRecord[\"validationstatus_\".concat(role.nuserrolecode)]=validationStatusValues;selectedRecord[\"decisionstatus_\".concat(role.nuserrolecode)]=decisionStatusValues;selectedRecord[\"checklist_\".concat(role.nuserrolecode)]=checklistValues;selectedRecord[\"checklistVersion_\".concat(role.nuserrolecode)]=checklistVersionValues;selectedRecord[\"actionStatus_\".concat(role.nuserrolecode)]=actionArray;//selectedRecord[role.nuserrolecode]=response.data[`roledetails_${role.nuserrolecode}`][0]\nreturn null;});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"update\",userRoleTree:sortData(response.data.userroletree,'ascending','nlevelno'),filterStatusOptions:filterStatusOptions,validationStatusOptions:validationStatusOptions,approvalStatusOptions:approvalStatusOptions,decisionStatusOptions:decisionStatusOptions,checklistOptions:checklistOptions,actionStatus:response.data.actionStatus?response.data.actionStatus:[],roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig,selectedRecord:selectedRecord,masterData:masterData,ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}}};}export function getFilterChange(inputParamData,oldState){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigFilter\",inputParamData.inputData).then(function(response){var RegistrationTypeListMap=constructOptionList(response.data.registrationtype||[],\"nregtypecode\",\"sregtypename\",'ascending','nsorter',false);var RegistrationSubTypeListMap=constructOptionList(response.data.registrationsubtype||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nsorter',false);var RegistrationTypeList=RegistrationTypeListMap.get(\"OptionList\");var RegistrationSubTypeList=RegistrationSubTypeListMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParamData.masterData),{},{approvalsubtype:oldState.approvalsubtype,approvalSubTypeValue:oldState.approvalSubTypeValue,RegistrationTypeList:response.data.registrationtype?RegistrationTypeList:oldState.RegistrationTypeList,RegistrationSubTypeList:response.data.registrationsubtype?RegistrationSubTypeList:oldState.RegistrationSubTypeList,registrationType:response.data.registrationtype&&response.data.registrationtype.length>0?sortData(response.data.registrationtype,\"ascending\",\"nregtypecode\"):oldState.registrationtype,registrationTypeValue:response.data.registrationtype?response.data.registrationtype.length>0?{value:response.data.registrationtype[0].nregtypecode,label:response.data.registrationtype[0].sregtypename}:oldState.registrationTypeValue:oldState.registrationTypeValue,registrationSubType:response.data.registrationsubtype&&response.data.registrationsubtype.length>0?sortData(response.data.registrationsubtype,\"descending\",\"nregsubtypecode\"):oldState.registrationsubtype,registrationSubTypeValue:response.data.registrationsubtype?response.data.registrationsubtype.length>0?{value:response.data.registrationsubtype[0].nregsubtypecode,label:response.data.registrationsubtype[0].sregsubtypename}:oldState.registrationSubTypeValue:oldState.registrationSubTypeValue,approvalConfigCode:response.data.approvalConfigCode,treeVersionTemplate:response.data.treeVersionTemplate,userroleTemplateValue:response.data.userroleTemplateValue// versionData:sortData(response.data.versionData),\n// selectedVersion:response.data.selectedVersion,\n// approvalconfigRoleNames:response.data.approvalconfigRoleNames,\n// showAccordion:true,\n// roleFilters:response.data.roleFilters,\n// roleValidations:response.data.roleValidations,\n// roleDecisions:response.data.roleDecisions,\n// roleActions:response.data.roleActions,\n// roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),\n// versionConfig:response.data.versionConfig,\n// searchedData:undefined\n}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovalConfigurationVersion(inputParamData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputParamData.inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParamData.masterData),{},{versionData:sortData(response.data.versionData),selectedVersion:response.data.selectedVersion,approvalconfigRoleNames:response.data.approvalconfigRoleNames,selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},showAccordion:true,roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig,searchedData:undefined}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function copyVersion(napprovalsubtypecode,userInfo,masterData,ncontrolcode){return function(dispatch){dispatch(initRequest(true));rsapi.post('approvalconfig/getCopyRegType',{napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo}).then(function(response){var selectedRecord={};var RegistrationTypeListMap=constructOptionList(response.data.CopyRegType||[],\"nregtypecode\",\"sregtypename\",'ascending','nsorter',false);var RegistrationSubTypeListMap=constructOptionList(response.data.CopyRegSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nsorter',false);var optCopyRegType=RegistrationTypeListMap.get(\"OptionList\");var optCopyRegSubType=RegistrationSubTypeListMap.get(\"OptionList\");selectedRecord['regtype']=response.data.CopyRegType.length>0?{value:response.data.CopyRegType[0].nregtypecode,label:response.data.CopyRegType[0].sregtypename}:[];selectedRecord['regsubtype']=response.data.CopyRegSubType?response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[]:[];dispatch({type:DEFAULT_RETURN,payload:{operation:\"copy\",openModal:true,optCopyRegSubType:optCopyRegSubType,optCopyRegType:optCopyRegType,selectedRecord:selectedRecord,masterData:masterData,ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getCopySubType(comboData,selectedRecord,userInfo,masterData,optCopyRegType){return function(dispatch){dispatch(initRequest(true));rsapi.post('approvalconfig/getCopyRegSubType',{nregtypecode:comboData.value,userinfo:userInfo}).then(function(response){var RegistrationSubTypeListMap=constructOptionList(response.data.CopyRegSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nsorter',false);var optCopyRegSubType=RegistrationSubTypeListMap.get(\"OptionList\");selectedRecord['regsubtype']=response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[];dispatch({type:DEFAULT_RETURN,payload:{operation:\"copy\",openModal:true,loading:false,optCopyRegType:optCopyRegType,optCopyRegSubType:optCopyRegSubType,selectedRecord:selectedRecord,masterData:masterData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function setDefault(inputObj,event){var flag=inputObj.flag,napprovalconfigrolecode=inputObj.napprovalconfigrolecode,napprovalsubtypecode=inputObj.napprovalsubtypecode,userInfo=inputObj.userInfo,masterData=inputObj.masterData;var rowData=inputObj.selectedRecord;return function(dispatch){if(event.target.checked){var inputData={};var url='';if(flag===1){inputData={napprovalconfigrolecode:napprovalconfigrolecode,napprovalfiltercode:rowData.napprovalfiltercode,napprovalsubtypecode:napprovalsubtypecode,ntransactionstatus:rowData.ntransactionstatus,napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,userinfo:userInfo};url='approvalconfig/setDefaultFilterStatus';}else{inputData={napprovalconfigrolecode:napprovalconfigrolecode,napprovaldecisioncode:rowData.napprovaldecisioncode,napprovalsubtypecode:napprovalsubtypecode,ntransactionstatus:rowData.ntransactionstatus,napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,userinfo:userInfo};url='approvalconfig/setDefaultDecisionStatus';}dispatch(initRequest(true));rsapi.post(url,inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{showAccordion:true,roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/ApprovalConfigAction.js"],"names":["rsapi","DEFAULT_RETURN","constructOptionList","sortData","toast","initRequest","transactionStatus","intl","openModal","operation","napprovalconfigcode","napprovalsubtypecode","userInfo","ncontrolcode","ntreeversiontempcode","dispatch","inputData","userinfo","post","then","response","filterStatusOptionsMap","data","availableFilterStatus","undefined","validationStatusOptionsMap","availableValidStatus","approvalStatusOptionsMap","approvalStatus","decisionStatusOptionsMap","availableDecisionStatus","checklistOptionsMap","checklist","filterStatusOptions","get","validationStatusOptions","approvalStatusOptions","decisionStatusOptions","checklistOptions","type","payload","userRoleTree","userroletree","approvalStatusValue","AvailableDecisionStatus","checklistValues","checklistVersionValues","actionStatus","roleConfig","versionConfig","loading","catch","error","status","message","warn","getApprovalConfigVersion","version","masterData","napproveconfversioncode","selectedVersion","showAccordion","approvalconfigRoleNames","selectedRole","length","roleFilters","roleValidations","roleDecisions","roleActions","getRoleDetails","role","inputParamData","napprovalconfigrolecode","getApprovalConfigEditData","napprovalconfigversioncode","APPROVED","RETIRED","formatMessage","id","console","log","selectedRecord","map","filterStatus","validationStatus","decisionStatus","actionArray","filterStatusValues","nuserrolecode","push","value","ntranscode","label","stransstatus","item","validationStatusValues","decisionStatusValues","nchecklistcode","schecklistname","nchecklistversioncode","schecklistversionname","nrecomretestneed","nrecomrecalcneed","nretestneed","nrecalcneed","ncorrectionneed","YES","RECOMMENDRETEST","RECOMMENDRECALC","RETEST","RECALC","CORRECTION","npartialapprovalneed","nsectionwiseapprovalneed","nautoapproval","nesignneed","napprovalstatuscode","versiondetails","sversionname","action","stransdisplaystatus","nneedautoapproval","nneedautocomplete","nneedjoballocation","nautoallot","sapprovalstatus","getFilterChange","oldState","RegistrationTypeListMap","registrationtype","RegistrationSubTypeListMap","registrationsubtype","RegistrationTypeList","RegistrationSubTypeList","approvalsubtype","approvalSubTypeValue","registrationType","registrationTypeValue","nregtypecode","sregtypename","registrationSubType","registrationSubTypeValue","nregsubtypecode","sregsubtypename","approvalConfigCode","treeVersionTemplate","userroleTemplateValue","getApprovalConfigurationVersion","versionData","searchedData","copyVersion","CopyRegType","CopyRegSubType","optCopyRegType","optCopyRegSubType","getCopySubType","comboData","setDefault","inputObj","event","flag","rowData","target","checked","url","napprovalfiltercode","ntransactionstatus","napprovaldecisioncode"],"mappings":"gKACA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAAQC,cAAR,KAA6B,cAA7B,CACA,OAAQC,mBAAR,CAA6BC,QAA7B,KAA4C,4BAA5C,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,iBAAT,KAAkC,2BAAlC,CACA,OAASC,IAAT,KAAqB,mBAArB,CAGA,MAAO,SAASC,CAAAA,SAAT,CAAmBC,SAAnB,CAA6BC,mBAA7B,CAAiDC,oBAAjD,CAAuEC,QAAvE,CAAiFC,YAAjF,CAA8FC,oBAA9F,CAAmH,CACtH,MAAO,UAAUC,QAAV,CAAoB,CACvB,GAAGH,QAAH,CAAY,CACR,GAAMI,CAAAA,SAAS,CAAC,CACZN,mBAAmB,CAACA,mBADR,CAEZC,oBAAoB,CAACA,oBAFT,CAGZG,oBAAoB,CAApBA,oBAHY,CAIZG,QAAQ,CAACL,QAJG,CAAhB,CAMAG,QAAQ,CAACV,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAL,KAAK,CAACkB,IAAN,CAAW,0CAAX,CAAsDF,SAAtD,EACCG,IADD,CACM,SAAAC,QAAQ,CAAG,CACb,GAAMC,CAAAA,sBAAsB,CAAGnB,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAcC,qBAAd,EAAuC,EAAxC,CAA4C,YAA5C,CAA0D,cAA1D,CAA0EC,SAA1E,CAAqFA,SAArF,CAAgG,IAAhG,CAAlD,CACA,GAAMC,CAAAA,0BAA0B,CAAGvB,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAcI,oBAAd,EAAsC,EAAvC,CAA2C,YAA3C,CAAyD,cAAzD,CAAyEF,SAAzE,CAAoFA,SAApF,CAA+F,IAA/F,CAAtD,CACA,GAAMG,CAAAA,wBAAwB,CAAGzB,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAcM,cAAd,EAAgC,EAAjC,CAAqC,YAArC,CAAmD,qBAAnD,CAA0EJ,SAA1E,CAAqFA,SAArF,CAAgG,IAAhG,CAApD,CACA,GAAMK,CAAAA,wBAAwB,CAAG3B,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAcQ,uBAAd,EAAyC,EAA1C,CAA8C,YAA9C,CAA4D,cAA5D,CAA4EN,SAA5E,CAAuFA,SAAvF,CAAkG,IAAlG,CAApD,CACA,GAAMO,CAAAA,mBAAmB,CAAG7B,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAcU,SAAd,EAA2B,EAA5B,CAAgC,gBAAhC,CAAkD,gBAAlD,CAAoER,SAApE,CAA+EA,SAA/E,CAA0F,IAA1F,CAA/C,CACA,GAAMS,CAAAA,mBAAmB,CAAGZ,sBAAsB,CAACa,GAAvB,CAA2B,YAA3B,CAA5B,CACA,GAAMC,CAAAA,uBAAuB,CAAGV,0BAA0B,CAACS,GAA3B,CAA+B,YAA/B,CAAhC,CACA,GAAME,CAAAA,qBAAqB,CAAGT,wBAAwB,CAACO,GAAzB,CAA6B,YAA7B,CAA9B,CACA,GAAMG,CAAAA,qBAAqB,CAAGR,wBAAwB,CAACK,GAAzB,CAA6B,YAA7B,CAA9B,CACA,GAAMI,CAAAA,gBAAgB,CAAGP,mBAAmB,CAACG,GAApB,CAAwB,YAAxB,CAAzB,CACAnB,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAC,CACpChC,SAAS,CAAC,IAD0B,CACrBC,SAAS,CAATA,SADqB,CACXgC,YAAY,CAACrB,QAAQ,CAACE,IAAT,CAAcoB,YADhB,CAExBT,mBAAmB,CAAnBA,mBAFwB,CAGxBE,uBAAuB,CAAvBA,uBAHwB,CAIxBC,qBAAqB,CAArBA,qBAJwB,CAKxBC,qBAAqB,CAArBA,qBALwB,CAMxBC,gBAAgB,CAAhBA,gBANwB,CAOxBK,mBAAmB,CAACvB,QAAQ,CAACE,IAAT,CAAcsB,uBAAd,CAAsCxB,QAAQ,CAACE,IAAT,CAAcsB,uBAApD,CAA4E,EAPxE,CAQxBC,eAAe,CAAC,EARQ,CASxBC,sBAAsB,CAAC,EATC,CAUxBC,YAAY,CAAC3B,QAAQ,CAACE,IAAT,CAAcyB,YAAd,CAA2B3B,QAAQ,CAACE,IAAT,CAAcyB,YAAzC,CAAsD,EAV3C,CAWxBC,UAAU,CAAC5B,QAAQ,CAACE,IAAT,CAAc0B,UAAd,CAAyB7C,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAc0B,UAAf,CAA0B,WAA1B,CAAsC,SAAtC,CAAjC,CAAkF,EAXrE,CAYxBC,aAAa,CAAC7B,QAAQ,CAACE,IAAT,CAAc2B,aAAd,CAA4B7B,QAAQ,CAACE,IAAT,CAAc2B,aAA1C,CAAwD,EAZ9C,CAaxBpC,YAAY,CAAZA,YAbwB,CAaXqC,OAAO,CAAC,KAbG,CAA/B,CAAD,CAAR,CAgBH,CA5BD,EA6BCC,KA7BD,CA6BO,SAAAC,KAAK,CAAI,CACZrC,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAE,CAACU,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAAChC,QAAN,CAAeiC,MAAf,GAA0B,GAA9B,CAAkC,CAC9BjD,KAAK,CAACgD,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGI,CACAlD,KAAK,CAACmD,IAAN,CAAWH,KAAK,CAAChC,QAAN,CAAeE,IAA1B,EACH,CACJ,CArCD,EAuCH,CACJ,CAjDD,CAmDH,CACD,MAAO,SAASkC,CAAAA,wBAAT,CAAkCC,OAAlC,CAA0C9C,oBAA1C,CAA+DC,QAA/D,CAAwE8C,UAAxE,CAAmF,CACtF,MAAO,UAAU3C,QAAV,CAAoB,CACvB,GAAOC,CAAAA,SAAS,CAAG,CAAC,6BAA6ByC,OAAO,CAACE,uBAAtC,CACChD,oBAAoB,CAACA,oBADtB,CAECM,QAAQ,CAACL,QAFV,CAAnB,CAIAG,QAAQ,CAACV,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAL,KAAK,CAACkB,IAAN,CAAW,yCAAX,CAAqDF,SAArD,EACCG,IADD,CACM,SAAAC,QAAQ,CAAG,CACbL,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAC,CACpCkB,UAAU,gCACPA,UADO,MAEVE,eAAe,CAACxC,QAAQ,CAACE,IAAT,CAAcsC,eAFpB,CAGVC,aAAa,CAAC,IAHJ,CAIVC,uBAAuB,CAAC1C,QAAQ,CAACE,IAAT,CAAcwC,uBAJ5B,CAKVC,YAAY,CAAC3C,QAAQ,CAACE,IAAT,CAAcwC,uBAAd,CAAsC1C,QAAQ,CAACE,IAAT,CAAcwC,uBAAd,CAAsCE,MAAtC,CAA6C,CAA7C,CAA+C7D,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAcwC,uBAAf,CAAuC,WAAvC,CAAmD,UAAnD,CAAR,CAAuE,CAAvE,CAA/C,CAAyH,EAA/J,CAAkK,EALrK,CAMVG,WAAW,CAAC7C,QAAQ,CAACE,IAAT,CAAc2C,WANhB,CAOVC,eAAe,CAAC9C,QAAQ,CAACE,IAAT,CAAc4C,eAPpB,CAQVC,aAAa,CAAC/C,QAAQ,CAACE,IAAT,CAAc6C,aARlB,CASVC,WAAW,CAAChD,QAAQ,CAACE,IAAT,CAAc8C,WAThB,CAUVpB,UAAU,CAAC7C,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAc0B,UAAf,CAA0B,WAA1B,CAAsC,SAAtC,CAVT,CAWVC,aAAa,CAAC7B,QAAQ,CAACE,IAAT,CAAc2B,aAXlB,EAD0B,CAalCC,OAAO,CAAC,KAb0B,CAA/B,CAAD,CAAR,CAeH,CAjBD,EAkBCC,KAlBD,CAkBO,SAAAC,KAAK,CAAI,CACZrC,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAE,CAACU,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAAChC,QAAN,CAAeiC,MAAf,GAA0B,GAA9B,CAAkC,CAC9BjD,KAAK,CAACgD,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGI,CACAlD,KAAK,CAACmD,IAAN,CAAWH,KAAK,CAAChC,QAAN,CAAeE,IAA1B,EACH,CACJ,CA1BD,EA2BH,CAjCD,CAmCH,CACD,MAAO,SAAS+C,CAAAA,cAAT,CAAwBrD,SAAxB,CAAkC,CACrC,MAAO,UAAUD,QAAV,CAAoB,CACvB,GAAKuD,CAAAA,IAAL,CAAoDtD,SAApD,CAAKsD,IAAL,CAAUZ,UAAV,CAAoD1C,SAApD,CAAU0C,UAAV,CAAqB/C,oBAArB,CAAoDK,SAApD,CAAqBL,oBAArB,CAA0CM,QAA1C,CAAoDD,SAApD,CAA0CC,QAA1C,CACA,GAAIsD,CAAAA,cAAc,CAAC,CACfC,uBAAuB,CAACF,IAAI,CAACE,uBADd,CAEf7D,oBAAoB,CAApBA,oBAFe,CAGfM,QAAQ,CAARA,QAHe,CAAnB,CAKAF,QAAQ,CAACV,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAL,KAAK,CAACkB,IAAN,CAAW,6CAAX,CAAyDqD,cAAzD,EACCpD,IADD,CACM,SAAAC,QAAQ,CAAG,CACbL,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAC,CACpCkB,UAAU,gCACHA,UADG,MAEVK,YAAY,CAACO,IAFH,CAGVT,aAAa,CAAC,IAHJ,CAIVI,WAAW,CAAC7C,QAAQ,CAACE,IAAT,CAAc2C,WAJhB,CAKVC,eAAe,CAAC9C,QAAQ,CAACE,IAAT,CAAc4C,eALpB,CAMVC,aAAa,CAAC/C,QAAQ,CAACE,IAAT,CAAc6C,aANlB,CAOVC,WAAW,CAAChD,QAAQ,CAACE,IAAT,CAAc8C,WAPhB,CAQVpB,UAAU,CAAC7C,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAc0B,UAAf,CAA0B,WAA1B,CAAsC,SAAtC,CART,CASVC,aAAa,CAAC7B,QAAQ,CAACE,IAAT,CAAc2B,aATlB,EAD0B,CAWlCC,OAAO,CAAC,KAX0B,CAA/B,CAAD,CAAR,CAeH,CAjBD,EAkBCC,KAlBD,CAkBO,SAAAC,KAAK,CAAI,CACZrC,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAE,CAACU,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAAChC,QAAN,CAAeiC,MAAf,GAA0B,GAA9B,CAAkC,CAC9BjD,KAAK,CAACgD,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGI,CACAlD,KAAK,CAACmD,IAAN,CAAWH,KAAK,CAAChC,QAAN,CAAeE,IAA1B,EACH,CACJ,CA1BD,EA2BH,CAnCD,CAsCH,CACD,MAAO,SAASmD,CAAAA,yBAAT,CAAmCC,0BAAnC,CAA8D/D,oBAA9D,CAAmFC,QAAnF,CAA4F8C,UAA5F,CAAwG7C,YAAxG,CAAqH,CACxH,MAAO,UAAUE,QAAV,CAAoB,CACvB,GAAG2C,UAAU,CAACE,eAAX,CAA2B,oBAA3B,IAAmDtD,iBAAiB,CAACqE,QAArE,EACMjB,UAAU,CAACE,eAAX,CAA2B,oBAA3B,IAAqDtD,iBAAiB,CAACsE,OADhF,CACwF,CAC5ExE,KAAK,CAACmD,IAAN,CAAWhD,IAAI,CAACsE,aAAL,CAAmB,CAAEC,EAAE,CAAE,6BAAN,CAAnB,CAAX,EACV,CAHF,IAGM,CACH,GAAGlE,QAAH,CAAY,CACX,GAAMI,CAAAA,SAAS,CAAC,CACZ0D,0BAA0B,CAACA,0BADf,CAEZ/D,oBAAoB,CAACA,oBAFT,CAGZM,QAAQ,CAACL,QAHG,CAAhB,CAKAG,QAAQ,CAACV,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAL,KAAK,CAACkB,IAAN,CAAW,0CAAX,CAAsDF,SAAtD,EACCG,IADD,CACM,SAAAC,QAAQ,CAAG,CACb2D,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAsB5D,QAAtB,EACA,GAAMC,CAAAA,sBAAsB,CAAGnB,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAcC,qBAAd,EAAuC,EAAxC,CAA4C,YAA5C,CAA0D,cAA1D,CAA0EC,SAA1E,CAAqFA,SAArF,CAAgG,IAAhG,CAAlD,CACA,GAAMC,CAAAA,0BAA0B,CAAGvB,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAcI,oBAAd,EAAsC,EAAvC,CAA2C,YAA3C,CAAyD,cAAzD,CAAyEF,SAAzE,CAAoFA,SAApF,CAA+F,IAA/F,CAAtD,CACA,GAAMG,CAAAA,wBAAwB,CAAGzB,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAcM,cAAd,EAAgC,EAAjC,CAAqC,YAArC,CAAmD,qBAAnD,CAA0EJ,SAA1E,CAAqFA,SAArF,CAAgG,IAAhG,CAApD,CACA,GAAMK,CAAAA,wBAAwB,CAAG3B,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAcQ,uBAAd,EAAyC,EAA1C,CAA8C,YAA9C,CAA4D,cAA5D,CAA4EN,SAA5E,CAAuFA,SAAvF,CAAkG,IAAlG,CAApD,CACA,GAAMO,CAAAA,mBAAmB,CAAG7B,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAcU,SAAd,EAA2B,EAA5B,CAAgC,gBAAhC,CAAkD,gBAAlD,CAAoER,SAApE,CAA+EA,SAA/E,CAA0F,IAA1F,CAA/C,CACA,GAAMS,CAAAA,mBAAmB,CAAGZ,sBAAsB,CAACa,GAAvB,CAA2B,YAA3B,CAA5B,CACA,GAAMC,CAAAA,uBAAuB,CAAGV,0BAA0B,CAACS,GAA3B,CAA+B,YAA/B,CAAhC,CACA,GAAME,CAAAA,qBAAqB,CAAGT,wBAAwB,CAACO,GAAzB,CAA6B,YAA7B,CAA9B,CACA,GAAMG,CAAAA,qBAAqB,CAAGR,wBAAwB,CAACK,GAAzB,CAA6B,YAA7B,CAA9B,CACA,GAAMI,CAAAA,gBAAgB,CAAGP,mBAAmB,CAACG,GAApB,CAAwB,YAAxB,CAAzB,CACA,GAAI+C,CAAAA,cAAc,CAAC,EAAnB,CACA7D,QAAQ,CAACE,IAAT,CAAcoB,YAAd,CAA2BwC,GAA3B,CAAgC,SAAAZ,IAAI,CAAE,CAClC,GAAIa,CAAAA,YAAY,CAAC,EAAjB,CACA,GAAIC,CAAAA,gBAAgB,CAAC,EAArB,CACA,GAAIC,CAAAA,cAAc,CAAC,EAAnB,CACA,GAAIC,CAAAA,WAAW,CAAC,EAAhB,CACA,GAAIC,CAAAA,kBAAkB,CAAC,EAAvB,CAEAnE,QAAQ,CAACE,IAAT,wBAA8BgD,IAAI,CAACkB,aAAnC,GAAoDN,GAApD,CAAwD,SAAA5D,IAAI,CACxD,CACAiE,kBAAkB,CAACE,IAAnB,CAAwB,CAACC,KAAK,CAACpE,IAAI,CAACqE,UAAZ,CAAuBC,KAAK,CAACtE,IAAI,CAACuE,YAAlC,CAA+CC,IAAI,CAACxE,IAApD,CAAxB,EACA6D,YAAY,CAACM,IAAb,CAAkBnE,IAAI,CAACqE,UAAvB,EACA,MAAO,KAAP,CACC,CALL,EAOA,GAAII,CAAAA,sBAAsB,CAAC,EAA3B,CACA3E,QAAQ,CAACE,IAAT,4BAAkCgD,IAAI,CAACkB,aAAvC,GAAwDN,GAAxD,CAA4D,SAAA5D,IAAI,CAAE,CAC9DyE,sBAAsB,CAACN,IAAvB,CAA4B,CAACC,KAAK,CAACpE,IAAI,CAACqE,UAAZ,CAAuBC,KAAK,CAACtE,IAAI,CAACuE,YAAlC,CAA+CC,IAAI,CAACxE,IAApD,CAA5B,EACA8D,gBAAgB,CAACK,IAAjB,CAAsBnE,IAAI,CAACqE,UAA3B,EACA,MAAO,KAAP,CACH,CAJD,EAOA,GAAIK,CAAAA,oBAAoB,CAAC,EAAzB,CACA5E,QAAQ,CAACE,IAAT,0BAAgCgD,IAAI,CAACkB,aAArC,GAAsDN,GAAtD,CAA0D,SAAA5D,IAAI,CAC1D,CACA0E,oBAAoB,CAACP,IAArB,CAA0B,CAACC,KAAK,CAACpE,IAAI,CAACqE,UAAZ,CAAuBC,KAAK,CAACtE,IAAI,CAACuE,YAAlC,CAA+CC,IAAI,CAACxE,IAApD,CAA1B,EACA+D,cAAc,CAACI,IAAf,CAAoBnE,IAAI,CAACqE,UAAzB,EACA,MAAO,KAAP,CACC,CALL,EAOA,GAAI9C,CAAAA,eAAe,CAAC,EAApB,CACAzB,QAAQ,CAACE,IAAT,qBAA2BgD,IAAI,CAACkB,aAAhC,GAAiDN,GAAjD,CAAqD,SAAA5D,IAAI,QACrDuB,CAAAA,eAAe,CAAC4C,IAAhB,CAAqB,CAACC,KAAK,CAACpE,IAAI,CAAC2E,cAAZ,CAA2BL,KAAK,CAACtE,IAAI,CAAC4E,cAAtC,CAAqDJ,IAAI,CAACxE,IAA1D,CAArB,CADqD,EAAzD,EAIA,GAAIwB,CAAAA,sBAAsB,CAAC,EAA3B,CACA1B,QAAQ,CAACE,IAAT,qBAA2BgD,IAAI,CAACkB,aAAhC,GAAiDN,GAAjD,CAAqD,SAAA5D,IAAI,QACrDwB,CAAAA,sBAAsB,CAAC2C,IAAvB,CAA4B,CAACC,KAAK,CAACpE,IAAI,CAAC6E,qBAAZ,CAAkCP,KAAK,CAACtE,IAAI,CAAC8E,qBAA7C,CAAmEN,IAAI,CAACxE,IAAxE,CAA5B,CADqD,EAAzD,EAIA,GAAI+E,CAAAA,gBAAgB,CAACjF,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDa,gBAA3E,CACA,GAAIC,CAAAA,gBAAgB,CAAClF,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDc,gBAA3E,CACA,GAAIC,CAAAA,WAAW,CAACnF,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDe,WAAtE,CACA,GAAIC,CAAAA,WAAW,CAACpF,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDgB,WAAtE,CACA,GAAIC,CAAAA,eAAe,CAACrF,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDiB,eAA1E,CAEAJ,gBAAgB,GAAG/F,iBAAiB,CAACoG,GAArC,CAAyCpB,WAAW,CAACG,IAAZ,CAAiBnF,iBAAiB,CAACqG,eAAnC,CAAzC,CAA6FrB,WAAW,CAACG,IAAZ,EAA7F,CACAa,gBAAgB,GAAGhG,iBAAiB,CAACoG,GAArC,CAAyCpB,WAAW,CAACG,IAAZ,CAAiBnF,iBAAiB,CAACsG,eAAnC,CAAzC,CAA6FtB,WAAW,CAACG,IAAZ,EAA7F,CACAc,WAAW,GAAGjG,iBAAiB,CAACoG,GAAhC,CAAoCpB,WAAW,CAACG,IAAZ,CAAiBnF,iBAAiB,CAACuG,MAAnC,CAApC,CAA+EvB,WAAW,CAACG,IAAZ,EAA/E,CACAe,WAAW,GAAGlG,iBAAiB,CAACoG,GAAhC,CAAoCpB,WAAW,CAACG,IAAZ,CAAiBnF,iBAAiB,CAACwG,MAAnC,CAApC,CAA+ExB,WAAW,CAACG,IAAZ,EAA/E,CACAgB,eAAe,GAAGnG,iBAAiB,CAACoG,GAApC,CAAwCpB,WAAW,CAACG,IAAZ,CAAiBnF,iBAAiB,CAACyG,UAAnC,CAAxC,CAAuFzB,WAAW,CAACG,IAAZ,EAAvF,CAEAR,cAAc,CAACX,IAAI,CAACkB,aAAN,CAAd,CAAmC,CAC/B,sBAAsBpE,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDwB,oBAD7C,CAE/B,yBAAyB5F,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDyB,wBAFhD,CAG/B,sBAAsB7F,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDa,gBAH7C,CAI/B,sBAAsBjF,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDc,gBAJ7C,CAK/B,aAAalF,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDe,WALpC,CAM/B,aAAanF,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDgB,WANpC,CAO/B,mBAAmBpF,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsD0B,aAP1C,CAQ/B,iBAAiB9F,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDiB,eARxC,CAS/B,YAAYrF,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsD2B,UATnC,CAU/B,eAAehC,YAVgB,CAW/B,iBAAiBE,cAXc,CAY/B,mBAAmBD,gBAZY,CAa/B,iBAAiBhE,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsD4B,mBAbxC,CAc/B,YAAYhG,QAAQ,CAACE,IAAT,qBAA2BgD,IAAI,CAACkB,aAAhC,GAAiD,CAAjD,EAAoDW,qBAdjC,CAAnC,CAgBAlB,cAAc,CAAC,cAAD,CAAd,CAA+B7D,QAAQ,CAACE,IAAT,CAAc+F,cAAd,CAA6BC,YAA5D,CACAlG,QAAQ,CAACE,IAAT,CAAc2B,aAAd,CAA4BiC,GAA5B,CAAgC,SAAAqC,MAAM,CAAG,CAC7D,GAAGA,MAAM,CAAC5B,UAAP,GAAoB,EAAvB,CACA,CACIV,cAAc,CAACsC,MAAM,CAACC,mBAAR,CAAd,CAA2CpG,QAAQ,CAACE,IAAT,CAAc+F,cAAd,CAA6BI,iBAAxE,CACH,CAHD,IAIK,IAAGF,MAAM,CAAC5B,UAAP,GAAoB,EAAvB,CACL,CACIV,cAAc,CAACsC,MAAM,CAACC,mBAAR,CAAd,CAA2CpG,QAAQ,CAACE,IAAT,CAAc+F,cAAd,CAA6BK,iBAAxE,CACH,CAEoB,CAVD,EAaAzC,cAAc,CAAC,mBAAD,CAAd,CAAoC7D,QAAQ,CAACE,IAAT,CAAc+F,cAAd,CAA6BM,kBAAjE,CACA1C,cAAc,CAAC,eAAD,CAAd,CAAgC7D,QAAQ,CAACE,IAAT,CAAc+F,cAAd,CAA6BO,UAA7D,CACA3C,cAAc,0BAAmBX,IAAI,CAACkB,aAAxB,EAAd,CAAuD,CAAC,CAACE,KAAK,CAACtE,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsD4B,mBAA7D,CAAiFxB,KAAK,CAACxE,QAAQ,CAACE,IAAT,uBAA6BgD,IAAI,CAACkB,aAAlC,GAAmD,CAAnD,EAAsDqC,eAA7I,CAAD,CAAvD,CACA5C,cAAc,wBAAiBX,IAAI,CAACkB,aAAtB,EAAd,CAAqDD,kBAArD,CACAN,cAAc,4BAAqBX,IAAI,CAACkB,aAA1B,EAAd,CAAyDO,sBAAzD,CACAd,cAAc,0BAAmBX,IAAI,CAACkB,aAAxB,EAAd,CAAuDQ,oBAAvD,CACAf,cAAc,qBAAcX,IAAI,CAACkB,aAAnB,EAAd,CAAkD3C,eAAlD,CACAoC,cAAc,4BAAqBX,IAAI,CAACkB,aAA1B,EAAd,CAAyD1C,sBAAzD,CACAmC,cAAc,wBAAiBX,IAAI,CAACkB,aAAtB,EAAd,CAAqDF,WAArD,CACA;AAEA,MAAO,KAAP,CACH,CA9FD,EA+FAvE,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAC,CACpChC,SAAS,CAAC,IAD0B,CACrBC,SAAS,CAAC,QADW,CAEpCgC,YAAY,CAACtC,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAcoB,YAAf,CAA4B,WAA5B,CAAwC,UAAxC,CAFe,CAGpCT,mBAAmB,CAAnBA,mBAHoC,CAIpCE,uBAAuB,CAAvBA,uBAJoC,CAKpCC,qBAAqB,CAArBA,qBALoC,CAMpCC,qBAAqB,CAArBA,qBANoC,CAOpCC,gBAAgB,CAAhBA,gBAPoC,CAQpCS,YAAY,CAAC3B,QAAQ,CAACE,IAAT,CAAcyB,YAAd,CAA2B3B,QAAQ,CAACE,IAAT,CAAcyB,YAAzC,CAAsD,EAR/B,CASpCC,UAAU,CAAC7C,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAc0B,UAAf,CAA0B,WAA1B,CAAsC,SAAtC,CATiB,CAUpCC,aAAa,CAAC7B,QAAQ,CAACE,IAAT,CAAc2B,aAVQ,CAWpCgC,cAAc,CAAdA,cAXoC,CAWrBvB,UAAU,CAAVA,UAXqB,CAWV7C,YAAY,CAAZA,YAXU,CAWGqC,OAAO,CAAC,KAXX,CAA/B,CAAD,CAAR,CAcH,CA3HD,EA4HCC,KA5HD,CA4HO,SAAAC,KAAK,CAAI,CACZrC,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAE,CAACU,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAAChC,QAAN,CAAeiC,MAAf,GAA0B,GAA9B,CAAkC,CAC9BjD,KAAK,CAACgD,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGI,CACAlD,KAAK,CAACmD,IAAN,CAAWH,KAAK,CAAChC,QAAN,CAAeE,IAA1B,EACH,CACJ,CApID,EAqIH,CACF,CACF,CAnJD,CAoJH,CACD,MAAO,SAASwG,CAAAA,eAAT,CAAyBvD,cAAzB,CAAwCwD,QAAxC,CAAiD,CACpD,MAAO,UAAShH,QAAT,CAAkB,CACrBA,QAAQ,CAACV,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAL,KAAK,CAACkB,IAAN,CAAW,wCAAX,CAAoDqD,cAAc,CAACvD,SAAnE,EACKG,IADL,CACU,SAAAC,QAAQ,CAAG,CAEb,GAAM4G,CAAAA,uBAAuB,CAAG9H,mBAAmB,CAAEkB,QAAQ,CAACE,IAAT,CAAc2G,gBAAd,EAAkC,EAApC,CAAwC,cAAxC,CAAwD,cAAxD,CAAwE,WAAxE,CAAqF,SAArF,CAAgG,KAAhG,CAAnD,CACA,GAAMC,CAAAA,0BAA0B,CAAGhI,mBAAmB,CAAEkB,QAAQ,CAACE,IAAT,CAAc6G,mBAAd,EAAqC,EAAvC,CAA2C,iBAA3C,CAA8D,iBAA9D,CAAiF,WAAjF,CAA8F,SAA9F,CAAyG,KAAzG,CAAtD,CACA,GAAIC,CAAAA,oBAAoB,CAAGJ,uBAAuB,CAAC9F,GAAxB,CAA4B,YAA5B,CAA3B,CACA,GAAImG,CAAAA,uBAAuB,CAAGH,0BAA0B,CAAChG,GAA3B,CAA+B,YAA/B,CAA9B,CACAnB,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAC,CACpCkB,UAAU,gCACHa,cAAc,CAACb,UADZ,MAEN4E,eAAe,CAACP,QAAQ,CAACO,eAFnB,CAGNC,oBAAoB,CAACR,QAAQ,CAACQ,oBAHxB,CAINH,oBAAoB,CAAChH,QAAQ,CAACE,IAAT,CAAc2G,gBAAd,CAA+BG,oBAA/B,CAAoDL,QAAQ,CAACK,oBAJ5E,CAKNC,uBAAuB,CAACjH,QAAQ,CAACE,IAAT,CAAc6G,mBAAd,CAAkCE,uBAAlC,CAA0DN,QAAQ,CAACM,uBALrF,CAMNG,gBAAgB,CAACpH,QAAQ,CAACE,IAAT,CAAc2G,gBAAd,EAAgC7G,QAAQ,CAACE,IAAT,CAAc2G,gBAAd,CAA+BjE,MAA/B,CAAsC,CAAtE,CAAwE7D,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAc2G,gBAAf,CAAgC,WAAhC,CAA4C,cAA5C,CAAhF,CAA4IF,QAAQ,CAACE,gBANhK,CAONQ,qBAAqB,CAACrH,QAAQ,CAACE,IAAT,CAAc2G,gBAAd,CAA+B7G,QAAQ,CAACE,IAAT,CAAc2G,gBAAd,CAA+BjE,MAA/B,CAAsC,CAAtC,CAAwC,CAAC0B,KAAK,CAACtE,QAAQ,CAACE,IAAT,CAAc2G,gBAAd,CAA+B,CAA/B,EAAkCS,YAAzC,CAAsD9C,KAAK,CAACxE,QAAQ,CAACE,IAAT,CAAc2G,gBAAd,CAA+B,CAA/B,EAAkCU,YAA9F,CAAxC,CAAoJZ,QAAQ,CAACU,qBAA5L,CAAkNV,QAAQ,CAACU,qBAP3O,CAQNG,mBAAmB,CAACxH,QAAQ,CAACE,IAAT,CAAc6G,mBAAd,EAAmC/G,QAAQ,CAACE,IAAT,CAAc6G,mBAAd,CAAkCnE,MAAlC,CAAyC,CAA5E,CAA8E7D,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAc6G,mBAAf,CAAmC,YAAnC,CAAgD,iBAAhD,CAAtF,CAAyJJ,QAAQ,CAACI,mBARhL,CASNU,wBAAwB,CAACzH,QAAQ,CAACE,IAAT,CAAc6G,mBAAd,CAAkC/G,QAAQ,CAACE,IAAT,CAAc6G,mBAAd,CAAkCnE,MAAlC,CAAyC,CAAzC,CAA2C,CAAC0B,KAAK,CAACtE,QAAQ,CAACE,IAAT,CAAc6G,mBAAd,CAAkC,CAAlC,EAAqCW,eAA5C,CAA4DlD,KAAK,CAACxE,QAAQ,CAACE,IAAT,CAAc6G,mBAAd,CAAkC,CAAlC,EAAqCY,eAAvG,CAA3C,CAAmKhB,QAAQ,CAACc,wBAA9M,CAAuOd,QAAQ,CAACc,wBATnQ,CAUNG,kBAAkB,CAAC5H,QAAQ,CAACE,IAAT,CAAc0H,kBAV3B,CAWNC,mBAAmB,CAAC7H,QAAQ,CAACE,IAAT,CAAc2H,mBAX5B,CAYNC,qBAAqB,CAAE9H,QAAQ,CAACE,IAAT,CAAc4H,qBAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBM,EAD0B,CA0BlChG,OAAO,CAAC,KA1B0B,CAA/B,CAAD,CAAR,CA8BH,CArCL,EAsCKC,KAtCL,CAsCW,SAAAC,KAAK,CAAE,CACVrC,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAE,CAACU,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAAChC,QAAN,CAAeiC,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjD,KAAK,CAACgD,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACDlD,KAAK,CAACmD,IAAN,CAAWH,KAAK,CAAChC,QAAN,CAAeE,IAA1B,EACH,CACJ,CA9CL,EA+CH,CAjDD,CAkDH,CACD,MAAO,SAAS6H,CAAAA,+BAAT,CAAyC5E,cAAzC,CAAwD,CAC3D,MAAO,UAASxD,QAAT,CAAkB,CACrBA,QAAQ,CAACV,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAL,KAAK,CAACkB,IAAN,CAAW,yCAAX,CAAqDqD,cAAc,CAACvD,SAApE,EACKG,IADL,CACU,SAAAC,QAAQ,CAAG,CACbL,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAC,CACpCkB,UAAU,gCACHa,cAAc,CAACb,UADZ,MAEN0F,WAAW,CAACjJ,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAc8H,WAAf,CAFd,CAGNxF,eAAe,CAACxC,QAAQ,CAACE,IAAT,CAAcsC,eAHxB,CAINE,uBAAuB,CAAC1C,QAAQ,CAACE,IAAT,CAAcwC,uBAJhC,CAKNC,YAAY,CAAC3C,QAAQ,CAACE,IAAT,CAAcwC,uBAAd,CAAsC1C,QAAQ,CAACE,IAAT,CAAcwC,uBAAd,CAAsCE,MAAtC,CAA6C,CAA7C,CAA+C7D,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAcwC,uBAAf,CAAuC,WAAvC,CAAmD,UAAnD,CAAR,CAAuE,CAAvE,CAA/C,CAAyH,EAA/J,CAAkK,EALzK,CAMND,aAAa,CAAC,IANR,CAONI,WAAW,CAAC7C,QAAQ,CAACE,IAAT,CAAc2C,WAPpB,CAQNC,eAAe,CAAC9C,QAAQ,CAACE,IAAT,CAAc4C,eARxB,CASNC,aAAa,CAAC/C,QAAQ,CAACE,IAAT,CAAc6C,aATtB,CAUNC,WAAW,CAAChD,QAAQ,CAACE,IAAT,CAAc8C,WAVpB,CAWNpB,UAAU,CAAC5B,QAAQ,CAACE,IAAT,CAAc0B,UAAd,EAA0B5B,QAAQ,CAACE,IAAT,CAAc0B,UAAd,CAAyBgB,MAAzB,CAAgC,CAA1D,EAA6D7D,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAc0B,UAAf,CAA0B,WAA1B,CAAsC,SAAtC,CAX1E,CAYNC,aAAa,CAAC7B,QAAQ,CAACE,IAAT,CAAc2B,aAZtB,CAaNoG,YAAY,CAAC7H,SAbP,EAD0B,CAelC0B,OAAO,CAAC,KAf0B,CAA/B,CAAD,CAAR,CAmBH,CArBL,EAsBKC,KAtBL,CAsBW,SAAAC,KAAK,CAAE,CACVrC,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAE,CAACU,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAAChC,QAAN,CAAeiC,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjD,KAAK,CAACgD,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACDlD,KAAK,CAACmD,IAAN,CAAWH,KAAK,CAAChC,QAAN,CAAeE,IAA1B,EACH,CACJ,CA9BL,EA+BH,CAjCD,CAkCH,CACD,MAAO,SAASgI,CAAAA,WAAT,CAAqB3I,oBAArB,CAA0CC,QAA1C,CAAmD8C,UAAnD,CAA8D7C,YAA9D,CAA2E,CAC9E,MAAO,UAASE,QAAT,CAAkB,CACrBA,QAAQ,CAACV,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAL,KAAK,CAACkB,IAAN,CAAW,+BAAX,CAA2C,CAACP,oBAAoB,CAACA,oBAAtB,CAA2CM,QAAQ,CAACL,QAApD,CAA3C,EACSO,IADT,CACc,SAAAC,QAAQ,CAAG,CACb,GAAI6D,CAAAA,cAAc,CAAC,EAAnB,CACA,GAAM+C,CAAAA,uBAAuB,CAAG9H,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAciI,WAAd,EAA6B,EAA9B,CAAkC,cAAlC,CAAkD,cAAlD,CAAkE,WAAlE,CAA+E,SAA/E,CAA0F,KAA1F,CAAnD,CACA,GAAMrB,CAAAA,0BAA0B,CAAGhI,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAckI,cAAd,EAAgC,EAAjC,CAAqC,iBAArC,CAAwD,iBAAxD,CAA2E,WAA3E,CAAwF,SAAxF,CAAmG,KAAnG,CAAtD,CACA,GAAIC,CAAAA,cAAc,CAAGzB,uBAAuB,CAAC9F,GAAxB,CAA4B,YAA5B,CAArB,CACA,GAAIwH,CAAAA,iBAAiB,CAAGxB,0BAA0B,CAAChG,GAA3B,CAA+B,YAA/B,CAAxB,CACA+C,cAAc,CAAC,SAAD,CAAd,CAA0B7D,QAAQ,CAACE,IAAT,CAAciI,WAAd,CAA0BvF,MAA1B,CAAiC,CAAjC,CAAmC,CAAC0B,KAAK,CAACtE,QAAQ,CAACE,IAAT,CAAciI,WAAd,CAA0B,CAA1B,EAA6Bb,YAApC,CAAiD9C,KAAK,CAACxE,QAAQ,CAACE,IAAT,CAAciI,WAAd,CAA0B,CAA1B,EAA6BZ,YAApF,CAAnC,CAAqI,EAA/J,CACA1D,cAAc,CAAC,YAAD,CAAd,CAA6B7D,QAAQ,CAACE,IAAT,CAAckI,cAAd,CAA6BpI,QAAQ,CAACE,IAAT,CAAckI,cAAd,CAA6BxF,MAA7B,CAAoC,CAApC,CAAsC,CAAC0B,KAAK,CAACtE,QAAQ,CAACE,IAAT,CAAckI,cAAd,CAA6B,CAA7B,EAAgCV,eAAvC,CAAuDlD,KAAK,CAACxE,QAAQ,CAACE,IAAT,CAAckI,cAAd,CAA6B,CAA7B,EAAgCT,eAA7F,CAAtC,CAAoJ,EAAjL,CAAoL,EAAjN,CACAhI,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAC,CACpC/B,SAAS,CAAC,MAD0B,CACnBD,SAAS,CAAC,IADS,CAEpCkJ,iBAAiB,CAAjBA,iBAFoC,CAGpCD,cAAc,CAAdA,cAHoC,CAIpCxE,cAAc,CAAdA,cAJoC,CAKpCvB,UAAU,CAAVA,UALoC,CAKzB7C,YAAY,CAAZA,YALyB,CAKZqC,OAAO,CAAC,KALI,CAA/B,CAAD,CAAR,CAOH,CAhBT,EAiBSC,KAjBT,CAiBe,SAAAC,KAAK,CAAE,CACVrC,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAE,CAACU,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAAChC,QAAN,CAAeiC,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjD,KAAK,CAACgD,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACDlD,KAAK,CAACmD,IAAN,CAAWH,KAAK,CAAChC,QAAN,CAAeE,IAA1B,EACH,CACJ,CAzBT,EA0BH,CA5BD,CA8BH,CACD,MAAO,SAASqI,CAAAA,cAAT,CAAwBC,SAAxB,CAAkC3E,cAAlC,CAAiDrE,QAAjD,CAA0D8C,UAA1D,CAAqE+F,cAArE,CAAoF,CACvF,MAAO,UAAS1I,QAAT,CAAkB,CACrBA,QAAQ,CAACV,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAL,KAAK,CAACkB,IAAN,CAAW,kCAAX,CAA8C,CAACwH,YAAY,CAACkB,SAAS,CAAClE,KAAxB,CAA8BzE,QAAQ,CAACL,QAAvC,CAA9C,EACCO,IADD,CACM,SAAAC,QAAQ,CAAG,CACb,GAAM8G,CAAAA,0BAA0B,CAAGhI,mBAAmB,CAACkB,QAAQ,CAACE,IAAT,CAAckI,cAAd,EAAgC,EAAjC,CAAqC,iBAArC,CAAwD,iBAAxD,CAA2E,WAA3E,CAAwF,SAAxF,CAAmG,KAAnG,CAAtD,CACA,GAAIE,CAAAA,iBAAiB,CAAGxB,0BAA0B,CAAChG,GAA3B,CAA+B,YAA/B,CAAxB,CACA+C,cAAc,CAAC,YAAD,CAAd,CAA6B7D,QAAQ,CAACE,IAAT,CAAckI,cAAd,CAA6BxF,MAA7B,CAAoC,CAApC,CAAsC,CAAC0B,KAAK,CAACtE,QAAQ,CAACE,IAAT,CAAckI,cAAd,CAA6B,CAA7B,EAAgCV,eAAvC,CAAuDlD,KAAK,CAACxE,QAAQ,CAACE,IAAT,CAAckI,cAAd,CAA6B,CAA7B,EAAgCT,eAA7F,CAAtC,CAAoJ,EAAjL,CACAhI,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAC,CACpC/B,SAAS,CAAC,MAD0B,CACnBD,SAAS,CAAC,IADS,CACJ0C,OAAO,CAAC,KADJ,CAEpCuG,cAAc,CAAdA,cAFoC,CAGpCC,iBAAiB,CAAjBA,iBAHoC,CAIpCzE,cAAc,CAAdA,cAJoC,CAKpCvB,UAAU,CAAVA,UALoC,CAA/B,CAAD,CAAR,CAOH,CAZD,EAaCP,KAbD,CAaO,SAAAC,KAAK,CAAE,CACVrC,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAE,CAACU,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAAChC,QAAN,CAAeiC,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjD,KAAK,CAACgD,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACDlD,KAAK,CAACmD,IAAN,CAAWH,KAAK,CAAChC,QAAN,CAAeE,IAA1B,EACH,CACJ,CArBD,EAsBH,CAxBD,CAyBH,CACD,MAAO,SAASuI,CAAAA,UAAT,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,CACtC,GAAKC,CAAAA,IAAL,CAA4EF,QAA5E,CAAKE,IAAL,CAAUxF,uBAAV,CAA4EsF,QAA5E,CAAUtF,uBAAV,CAAkC7D,oBAAlC,CAA4EmJ,QAA5E,CAAkCnJ,oBAAlC,CAAuDC,QAAvD,CAA4EkJ,QAA5E,CAAuDlJ,QAAvD,CAAgE8C,UAAhE,CAA4EoG,QAA5E,CAAgEpG,UAAhE,CACA,GAAIuG,CAAAA,OAAO,CAACH,QAAQ,CAAC7E,cAArB,CACA,MAAO,UAASlE,QAAT,CAAkB,CACrB,GAAGgJ,KAAK,CAACG,MAAN,CAAaC,OAAhB,CAAwB,CACpB,GAAInJ,CAAAA,SAAS,CAAC,EAAd,CACA,GAAIoJ,CAAAA,GAAG,CAAC,EAAR,CACA,GAAGJ,IAAI,GAAG,CAAV,CAAY,CACRhJ,SAAS,CAAC,CACNwD,uBAAuB,CAACA,uBADlB,CAEN6F,mBAAmB,CAACJ,OAAO,CAACI,mBAFtB,CAGN1J,oBAAoB,CAACA,oBAHf,CAIN2J,kBAAkB,CAACL,OAAO,CAACK,kBAJrB,CAKN5F,0BAA0B,CAAChB,UAAU,CAACE,eAAX,CAA2Bc,0BALhD,CAMNzD,QAAQ,CAACL,QANH,CAAV,CAQAwJ,GAAG,CAAC,uCAAJ,CACH,CAVD,IAUK,CACDpJ,SAAS,CAAC,CACNwD,uBAAuB,CAACA,uBADlB,CAEN+F,qBAAqB,CAACN,OAAO,CAACM,qBAFxB,CAGN5J,oBAAoB,CAACA,oBAHf,CAIN2J,kBAAkB,CAACL,OAAO,CAACK,kBAJrB,CAKN5F,0BAA0B,CAAChB,UAAU,CAACE,eAAX,CAA2Bc,0BALhD,CAMNzD,QAAQ,CAACL,QANH,CAAV,CAQAwJ,GAAG,CAAC,yCAAJ,CACH,CACDrJ,QAAQ,CAACV,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAL,KAAK,CAACkB,IAAN,CAAWkJ,GAAX,CAAepJ,SAAf,EACCG,IADD,CACM,SAAAC,QAAQ,CAAG,CACbL,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAC,CAEpCkB,UAAU,gCACHA,UADG,MAENG,aAAa,CAAC,IAFR,CAGNI,WAAW,CAAC7C,QAAQ,CAACE,IAAT,CAAc2C,WAHpB,CAINC,eAAe,CAAC9C,QAAQ,CAACE,IAAT,CAAc4C,eAJxB,CAKNC,aAAa,CAAC/C,QAAQ,CAACE,IAAT,CAAc6C,aALtB,CAMNC,WAAW,CAAChD,QAAQ,CAACE,IAAT,CAAc8C,WANpB,CAONpB,UAAU,CAAC7C,QAAQ,CAACiB,QAAQ,CAACE,IAAT,CAAc0B,UAAf,CAA0B,WAA1B,CAAsC,SAAtC,CAPb,CAQNC,aAAa,CAAC7B,QAAQ,CAACE,IAAT,CAAc2B,aARtB,EAF0B,CAWlCC,OAAO,CAAC,KAX0B,CAA/B,CAAD,CAAR,CAaH,CAfD,EAgBCC,KAhBD,CAgBO,SAAAC,KAAK,CAAE,CACVrC,QAAQ,CAAC,CAACwB,IAAI,CAAEtC,cAAP,CAAuBuC,OAAO,CAAE,CAACU,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACA,GAAIE,KAAK,CAAChC,QAAN,CAAeiC,MAAf,GAA0B,GAA9B,CAAmC,CAC/BjD,KAAK,CAACgD,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGK,CACDlD,KAAK,CAACmD,IAAN,CAAWH,KAAK,CAAChC,QAAN,CAAeE,IAA1B,EACH,CACJ,CAxBD,EAyBH,CACJ,CApDD,CAqDH","sourcesContent":["\r\nimport rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {constructOptionList, sortData} from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\";\r\n\r\n\r\nexport function openModal(operation,napprovalconfigcode,napprovalsubtypecode, userInfo, ncontrolcode,ntreeversiontempcode){\r\n    return function (dispatch) {  \r\n        if(userInfo){\r\n            const inputData={\r\n                napprovalconfigcode:napprovalconfigcode,\r\n                napprovalsubtypecode:napprovalsubtypecode,\r\n                ntreeversiontempcode,\r\n                userinfo:userInfo\r\n            };\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approvalconfig/getUserRoleApprovalConfig\",inputData)\r\n            .then(response=> { \r\n                const filterStatusOptionsMap = constructOptionList(response.data.availableFilterStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const validationStatusOptionsMap = constructOptionList(response.data.availableValidStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const approvalStatusOptionsMap = constructOptionList(response.data.approvalStatus || [], \"ntranscode\", \"stransdisplaystatus\", undefined, undefined, true);\r\n                const decisionStatusOptionsMap = constructOptionList(response.data.availableDecisionStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const checklistOptionsMap = constructOptionList(response.data.checklist || [], \"nchecklistcode\", \"schecklistname\", undefined, undefined, true);\r\n                const filterStatusOptions = filterStatusOptionsMap.get(\"OptionList\");\r\n                const validationStatusOptions = validationStatusOptionsMap.get(\"OptionList\");\r\n                const approvalStatusOptions = approvalStatusOptionsMap.get(\"OptionList\");\r\n                const decisionStatusOptions = decisionStatusOptionsMap.get(\"OptionList\");\r\n                const checklistOptions = checklistOptionsMap.get(\"OptionList\");\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    openModal:true,operation,userRoleTree:response.data.userroletree,\r\n                                filterStatusOptions,\r\n                                validationStatusOptions,\r\n                                approvalStatusOptions,\r\n                                decisionStatusOptions,\r\n                                checklistOptions,\r\n                                approvalStatusValue:response.data.AvailableDecisionStatus?response.data.AvailableDecisionStatus:[],\r\n                                checklistValues:[],\r\n                                checklistVersionValues:[],\r\n                                actionStatus:response.data.actionStatus?response.data.actionStatus:[],\r\n                                roleConfig:response.data.roleConfig?sortData(response.data.roleConfig,'ascending','nsorter'):[],\r\n                                versionConfig:response.data.versionConfig?response.data.versionConfig:[],                                \r\n                                ncontrolcode,loading:false\r\n                                }});\r\n                \r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }         \r\n            })\r\n            \r\n        }\r\n    }\r\n    \r\n}\r\nexport function getApprovalConfigVersion(version,napprovalsubtypecode,userInfo,masterData){\r\n    return function (dispatch) {  \r\n        const  inputData = {\"napprovalconfigversioncode\":version.napproveconfversioncode,\r\n                            napprovalsubtypecode:napprovalsubtypecode,\r\n                            userinfo:userInfo\r\n                        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputData)\r\n        .then(response=> { \r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                masterData:{\r\n                ...masterData,\r\n                selectedVersion:response.data.selectedVersion,\r\n                showAccordion:true,\r\n                approvalconfigRoleNames:response.data.approvalconfigRoleNames,\r\n                selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},\r\n                roleFilters:response.data.roleFilters,\r\n                roleValidations:response.data.roleValidations,\r\n                roleDecisions:response.data.roleDecisions,\r\n                roleActions:response.data.roleActions,\r\n                roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                versionConfig:response.data.versionConfig\r\n                },loading:false  \r\n            }}) \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })     \r\n    }\r\n\r\n}\r\nexport function getRoleDetails(inputData){\r\n    return function (dispatch) {  \r\n        let {role,masterData,napprovalsubtypecode,userinfo}=inputData\r\n        let inputParamData={\r\n            napprovalconfigrolecode:role.napprovalconfigrolecode,\r\n            napprovalsubtypecode,\r\n            userinfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigRoleDetails\",inputParamData)\r\n        .then(response=> { \r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                masterData:{\r\n                    ...masterData,\r\n                selectedRole:role,\r\n                showAccordion:true,\r\n                roleFilters:response.data.roleFilters,\r\n                roleValidations:response.data.roleValidations,\r\n                roleDecisions:response.data.roleDecisions,\r\n                roleActions:response.data.roleActions,\r\n                roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                versionConfig:response.data.versionConfig\r\n                },loading:false  \r\n\r\n                                    \r\n            }}) \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n    \r\n    \r\n}\r\nexport function getApprovalConfigEditData(napprovalconfigversioncode,napprovalsubtypecode,userInfo,masterData, ncontrolcode){\r\n    return function (dispatch) { \r\n        if(masterData.selectedVersion[\"ntransactionstatus\"]===transactionStatus.APPROVED || \r\n                 masterData.selectedVersion[\"ntransactionstatus\"] === transactionStatus.RETIRED){\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOEDIT\" }));\r\n         }else{ \r\n           if(userInfo){\r\n            const inputData={\r\n                napprovalconfigversioncode:napprovalconfigversioncode,\r\n                napprovalsubtypecode:napprovalsubtypecode,\r\n                userinfo:userInfo\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approvalconfig/getApprovalConfigEditData\",inputData)\r\n            .then(response=> { \r\n                console.log('fdsgfdg',response)\r\n                const filterStatusOptionsMap = constructOptionList(response.data.availableFilterStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const validationStatusOptionsMap = constructOptionList(response.data.availableValidStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const approvalStatusOptionsMap = constructOptionList(response.data.approvalStatus || [], \"ntranscode\", \"stransdisplaystatus\", undefined, undefined, true);\r\n                const decisionStatusOptionsMap = constructOptionList(response.data.availableDecisionStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const checklistOptionsMap = constructOptionList(response.data.checklist || [], \"nchecklistcode\", \"schecklistname\", undefined, undefined, true);\r\n                const filterStatusOptions = filterStatusOptionsMap.get(\"OptionList\");\r\n                const validationStatusOptions = validationStatusOptionsMap.get(\"OptionList\");\r\n                const approvalStatusOptions = approvalStatusOptionsMap.get(\"OptionList\");\r\n                const decisionStatusOptions = decisionStatusOptionsMap.get(\"OptionList\");\r\n                const checklistOptions = checklistOptionsMap.get(\"OptionList\");\r\n                let selectedRecord={}\r\n                response.data.userroletree.map( role=>{\r\n                    let filterStatus=[];\r\n                    let validationStatus=[];\r\n                    let decisionStatus=[];\r\n                    let actionArray=[];\r\n                    let filterStatusValues=[];\r\n                    \r\n                    response.data[`filterstatus_${role.nuserrolecode}`].map(data=>\r\n                        {\r\n                        filterStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data})\r\n                        filterStatus.push(data.ntranscode)\r\n                        return null;\r\n                        }\r\n                    )\r\n                    let validationStatusValues=[];\r\n                    response.data[`validationstatus_${role.nuserrolecode}`].map(data=>{\r\n                        validationStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data})\r\n                        validationStatus.push(data.ntranscode)\r\n                        return null;\r\n                    }\r\n                        \r\n                    )\r\n                    let decisionStatusValues=[];\r\n                    response.data[`decisionstatus_${role.nuserrolecode}`].map(data=>\r\n                        {\r\n                        decisionStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});\r\n                        decisionStatus.push(data.ntranscode);\r\n                        return null;\r\n                        }\r\n                    )\r\n                    let checklistValues=[];\r\n                    response.data[`checklist_${role.nuserrolecode}`].map(data=>\r\n                        checklistValues.push({value:data.nchecklistcode,label:data.schecklistname,item:data})\r\n                        \r\n                    )\r\n                    let checklistVersionValues=[];\r\n                    response.data[`checklist_${role.nuserrolecode}`].map(data=>\r\n                        checklistVersionValues.push({value:data.nchecklistversioncode,label:data.schecklistversionname,item:data})\r\n                        \r\n                    )\r\n                    let nrecomretestneed=response.data[`roledetails_${role.nuserrolecode}`][0].nrecomretestneed\r\n                    let nrecomrecalcneed=response.data[`roledetails_${role.nuserrolecode}`][0].nrecomrecalcneed\r\n                    let nretestneed=response.data[`roledetails_${role.nuserrolecode}`][0].nretestneed\r\n                    let nrecalcneed=response.data[`roledetails_${role.nuserrolecode}`][0].nrecalcneed\r\n                    let ncorrectionneed=response.data[`roledetails_${role.nuserrolecode}`][0].ncorrectionneed\r\n\r\n                    nrecomretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRETEST):actionArray.push()\r\n                    nrecomrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRECALC):actionArray.push()\r\n                    nretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RETEST):actionArray.push()\r\n                    nrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECALC):actionArray.push()\r\n                    ncorrectionneed===transactionStatus.YES?actionArray.push(transactionStatus.CORRECTION):actionArray.push()\r\n\r\n                    selectedRecord[role.nuserrolecode]={\r\n                        'IDS_PARTIALAPPROVAL':response.data[`roledetails_${role.nuserrolecode}`][0].npartialapprovalneed,\r\n                        'IDS_SECTIONWISEAPPROVE':response.data[`roledetails_${role.nuserrolecode}`][0].nsectionwiseapprovalneed,\r\n                        'IDS_RECOMMENDRETEST':response.data[`roledetails_${role.nuserrolecode}`][0].nrecomretestneed,\r\n                        'IDS_RECOMMENDRECALC':response.data[`roledetails_${role.nuserrolecode}`][0].nrecomrecalcneed,\r\n                        'IDS_RETEST':response.data[`roledetails_${role.nuserrolecode}`][0].nretestneed,\r\n                        'IDS_RECALC':response.data[`roledetails_${role.nuserrolecode}`][0].nrecalcneed,\r\n                        'IDS_AUTOAPPROVAL':response.data[`roledetails_${role.nuserrolecode}`][0].nautoapproval,\r\n                        'IDS_CORRECTION':response.data[`roledetails_${role.nuserrolecode}`][0].ncorrectionneed,\r\n                        'IDS_ESIGN':response.data[`roledetails_${role.nuserrolecode}`][0].nesignneed,\r\n                        'filterstatus':filterStatus,\r\n                        'decisionstatus':decisionStatus,\r\n                        'validationstatus':validationStatus,\r\n                        'approvalstatus':response.data[`roledetails_${role.nuserrolecode}`][0].napprovalstatuscode,\r\n                        'checklist':response.data[`checklist_${role.nuserrolecode}`][0].nchecklistversioncode\r\n                    }\r\n                    selectedRecord['sversionname']=response.data.versiondetails.sversionname\r\n                    response.data.versionConfig.map(action =>{\r\nif(action.ntranscode===81)\r\n{\r\n    selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautoapproval\r\n}\r\nelse if(action.ntranscode===85)\r\n{\r\n    selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautocomplete\r\n}\r\n\r\n                    })\r\n                   \r\n                  \r\n                    selectedRecord['IDS_JOBALLOCATION']=response.data.versiondetails.nneedjoballocation\r\n                    selectedRecord['IDS_AUTOALLOT']=response.data.versiondetails.nautoallot\r\n                    selectedRecord[`approvalstatus_${role.nuserrolecode}`]=[{value:response.data[`roledetails_${role.nuserrolecode}`][0].napprovalstatuscode,label:response.data[`roledetails_${role.nuserrolecode}`][0].sapprovalstatus}]\r\n                    selectedRecord[`filterstatus_${role.nuserrolecode}`]=filterStatusValues\r\n                    selectedRecord[`validationstatus_${role.nuserrolecode}`]=validationStatusValues\r\n                    selectedRecord[`decisionstatus_${role.nuserrolecode}`]=decisionStatusValues\r\n                    selectedRecord[`checklist_${role.nuserrolecode}`]=checklistValues\r\n                    selectedRecord[`checklistVersion_${role.nuserrolecode}`]=checklistVersionValues\r\n                    selectedRecord[`actionStatus_${role.nuserrolecode}`]=actionArray\r\n                    //selectedRecord[role.nuserrolecode]=response.data[`roledetails_${role.nuserrolecode}`][0]\r\n\r\n                    return null;\r\n                });\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    openModal:true,operation:\"update\",\r\n                    userRoleTree:sortData(response.data.userroletree,'ascending','nlevelno'),\r\n                    filterStatusOptions,\r\n                    validationStatusOptions,\r\n                    approvalStatusOptions,\r\n                    decisionStatusOptions,\r\n                    checklistOptions,\r\n                    actionStatus:response.data.actionStatus?response.data.actionStatus:[],\r\n                    roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                    versionConfig:response.data.versionConfig,\r\n                    selectedRecord,masterData,ncontrolcode,loading:false  \r\n\r\n                }})\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }         \r\n            })\r\n        } \r\n      }\r\n    }\r\n}\r\nexport function getFilterChange(inputParamData,oldState){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigFilter\",inputParamData.inputData)\r\n            .then(response =>{\r\n                \r\n                const RegistrationTypeListMap = constructOptionList( response.data.registrationtype || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nsorter', false);\r\n                const RegistrationSubTypeListMap = constructOptionList( response.data.registrationsubtype || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nsorter', false);\r\n                let RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n                let RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    masterData:{\r\n                        ...inputParamData.masterData,\r\n                        approvalsubtype:oldState.approvalsubtype,\r\n                        approvalSubTypeValue:oldState.approvalSubTypeValue,\r\n                        RegistrationTypeList:response.data.registrationtype?RegistrationTypeList:oldState.RegistrationTypeList,\r\n                        RegistrationSubTypeList:response.data.registrationsubtype?RegistrationSubTypeList:oldState.RegistrationSubTypeList,\r\n                        registrationType:response.data.registrationtype&&response.data.registrationtype.length>0?sortData(response.data.registrationtype,\"ascending\",\"nregtypecode\"):oldState.registrationtype,\r\n                        registrationTypeValue:response.data.registrationtype?response.data.registrationtype.length>0?{value:response.data.registrationtype[0].nregtypecode,label:response.data.registrationtype[0].sregtypename}:oldState.registrationTypeValue:oldState.registrationTypeValue,\r\n                        registrationSubType:response.data.registrationsubtype&&response.data.registrationsubtype.length>0?sortData(response.data.registrationsubtype,\"descending\",\"nregsubtypecode\"):oldState.registrationsubtype,\r\n                        registrationSubTypeValue:response.data.registrationsubtype?response.data.registrationsubtype.length>0?{value:response.data.registrationsubtype[0].nregsubtypecode,label:response.data.registrationsubtype[0].sregsubtypename}:oldState.registrationSubTypeValue:oldState.registrationSubTypeValue,\r\n                        approvalConfigCode:response.data.approvalConfigCode,\r\n                        treeVersionTemplate:response.data.treeVersionTemplate,\r\n                        userroleTemplateValue: response.data.userroleTemplateValue,\r\n\r\n                        // versionData:sortData(response.data.versionData),\r\n                        // selectedVersion:response.data.selectedVersion,\r\n                        // approvalconfigRoleNames:response.data.approvalconfigRoleNames,\r\n                        // showAccordion:true,\r\n                        // roleFilters:response.data.roleFilters,\r\n                        // roleValidations:response.data.roleValidations,\r\n                        // roleDecisions:response.data.roleDecisions,\r\n                        // roleActions:response.data.roleActions,\r\n                        // roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                        // versionConfig:response.data.versionConfig,\r\n                        // searchedData:undefined\r\n                    },loading:false\r\n                    \r\n\r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovalConfigurationVersion(inputParamData){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputParamData.inputData)\r\n            .then(response =>{\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    masterData:{\r\n                        ...inputParamData.masterData,\r\n                        versionData:sortData(response.data.versionData),\r\n                        selectedVersion:response.data.selectedVersion,\r\n                        approvalconfigRoleNames:response.data.approvalconfigRoleNames,\r\n                        selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},\r\n                        showAccordion:true,\r\n                        roleFilters:response.data.roleFilters,\r\n                        roleValidations:response.data.roleValidations,\r\n                        roleDecisions:response.data.roleDecisions,\r\n                        roleActions:response.data.roleActions,\r\n                        roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                        versionConfig:response.data.versionConfig,\r\n                        searchedData:undefined\r\n                    },loading:false\r\n                    \r\n\r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function copyVersion(napprovalsubtypecode,userInfo,masterData,ncontrolcode){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post('approvalconfig/getCopyRegType',{napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo})\r\n                .then(response =>{\r\n                    let selectedRecord={};\r\n                    const RegistrationTypeListMap = constructOptionList(response.data.CopyRegType || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nsorter', false);\r\n                    const RegistrationSubTypeListMap = constructOptionList(response.data.CopyRegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nsorter', false);\r\n                    let optCopyRegType = RegistrationTypeListMap.get(\"OptionList\");\r\n                    let optCopyRegSubType = RegistrationSubTypeListMap.get(\"OptionList\");\r\n                    selectedRecord['regtype']=response.data.CopyRegType.length>0?{value:response.data.CopyRegType[0].nregtypecode,label:response.data.CopyRegType[0].sregtypename}:[]\r\n                    selectedRecord['regsubtype']=response.data.CopyRegSubType?response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[]:[]\r\n                    dispatch({type: DEFAULT_RETURN, payload:{\r\n                        operation:\"copy\",openModal:true,\r\n                        optCopyRegSubType,\r\n                        optCopyRegType,\r\n                        selectedRecord,\r\n                        masterData,ncontrolcode,loading:false  \r\n                    }})\r\n                })\r\n                .catch(error=>{\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n    }\r\n\r\n}\r\nexport function getCopySubType(comboData,selectedRecord,userInfo,masterData,optCopyRegType){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post('approvalconfig/getCopyRegSubType',{nregtypecode:comboData.value,userinfo:userInfo})\r\n        .then(response =>{\r\n            const RegistrationSubTypeListMap = constructOptionList(response.data.CopyRegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nsorter', false);\r\n            let optCopyRegSubType = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            selectedRecord['regsubtype']=response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[]\r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                operation:\"copy\",openModal:true,loading:false  ,\r\n                optCopyRegType,\r\n                optCopyRegSubType,\r\n                selectedRecord,\r\n                masterData\r\n            }})\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500) {\r\n                toast.error(error.message);\r\n            }\r\n            else {\r\n                toast.warn(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}\r\nexport function setDefault(inputObj,event){\r\n    let {flag,napprovalconfigrolecode,napprovalsubtypecode,userInfo,masterData}=inputObj;\r\n    let rowData=inputObj.selectedRecord\r\n    return function(dispatch){\r\n        if(event.target.checked){\r\n            let inputData={}\r\n            let url='';\r\n            if(flag===1){\r\n                inputData={\r\n                    napprovalconfigrolecode:napprovalconfigrolecode,\r\n                    napprovalfiltercode:rowData.napprovalfiltercode,\r\n                    napprovalsubtypecode:napprovalsubtypecode,\r\n                    ntransactionstatus:rowData.ntransactionstatus,\r\n                    napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,\r\n                    userinfo:userInfo\r\n                }\r\n                url='approvalconfig/setDefaultFilterStatus'\r\n            }else{\r\n                inputData={\r\n                    napprovalconfigrolecode:napprovalconfigrolecode,\r\n                    napprovaldecisioncode:rowData.napprovaldecisioncode,\r\n                    napprovalsubtypecode:napprovalsubtypecode,\r\n                    ntransactionstatus:rowData.ntransactionstatus,\r\n                    napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,\r\n                    userinfo:userInfo\r\n                }\r\n                url='approvalconfig/setDefaultDecisionStatus'\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(url,inputData)\r\n            .then(response =>{\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                \r\n                    masterData:{\r\n                        ...masterData,\r\n                        showAccordion:true,\r\n                        roleFilters:response.data.roleFilters,\r\n                        roleValidations:response.data.roleValidations,\r\n                        roleDecisions:response.data.roleDecisions,\r\n                        roleActions:response.data.roleActions,\r\n                        roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                        versionConfig:response.data.versionConfig\r\n                    },loading:false  \r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}