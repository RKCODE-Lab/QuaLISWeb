{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\PatientMaster.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt, faHistory } from \"@fortawesome/free-solid-svg-icons\";\nimport DataGrid from '../../components/data-grid/data-grid.component'; //import DataGrid from \"../../components/data-grid/data-grid.component\";\n//import Fields from \"../../components/PatientMasterFields.json\";\n\nimport { BasicConfig, BasicFuncs, Utils as QbUtils } from \"@react-awesome-query-builder/ui\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getPatientDetail, getPatientComboService, filterColumnData, getTestParameter, getPatientReport, getPatientDetailsByFilterQuery, getDistrictComboServices, getCityComboServices, filtercomboService, getFilterStatusCombo, getPatientHistory } from \"../../actions\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport { showEsign, getControlMap, validatePhoneNumber, ageCalculate, formatInputDate, validateEmail, formatDate, constructOptionList, rearrangeDateFormat, formatInputDateWithoutT, convertDateValuetoString, sortData } from \"../../components/CommonScript\";\nimport { transactionStatus } from \"../../components/Enumeration\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport { ReactComponent as Reports } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/report-Icon.svg\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport AddPatient from \"./AddPatient\";\nimport Esign from \"../audittrail/Esign\";\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\"; // import ReactTooltip from \"react-tooltip\";\n//import { process } from \"@progress/kendo-data-query\";\n\nimport FilterQueryBuilder from \"../../components/FilterQueryBuilder\"; //import AddFilteredPatient from \"./AddFilteredPatient\";\n\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite';\nimport PatientMasterFilter from './PatientMasterFilter';\nimport AlertModal from '../dynamicpreregdesign/AlertModal';\nimport FormInput from '../../components/form-input/form-input.component';\nimport merge from \"lodash/merge\";\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { process } from \"@progress/kendo-data-query\"; //import Filtercomponent from '../../components/Filtercomponent';\n// import FilterDemo from \"./FilterDemo\";\n// import \"antd/dist/antd.css\";\n// import 'react-awesome-query-builder/css/styles.scss';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nconst {\n  queryBuilderFormat,\n  queryString,\n  mongodbFormat,\n  sqlFormat,\n  getTree,\n  checkTree,\n  loadTree,\n  uuid\n} = QbUtils;\nconst InitialConfig = BasicConfig;\nconst conjunctions = {\n  AND: InitialConfig.conjunctions.AND,\n  OR: InitialConfig.conjunctions.OR\n};\nconst operators1 = { ...InitialConfig.operators\n};\ndelete operators1.proximity;\nconst operators = { ...operators1,\n  between: { ...operators1.between,\n    textSeparators: [\"from\", \"to\"]\n  }\n};\nconst widgets = { ...InitialConfig.widgets,\n  date: { ...InitialConfig.widgets.date,\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\"\n  }\n};\nconst types = { ...InitialConfig.types,\n  boolean: merge(InitialConfig.types.boolean, {\n    widgets: {\n      boolean: {\n        widgetProps: {\n          hideOperator: true,\n          operatorInlineLabel: \"is\"\n        }\n      }\n    }\n  })\n};\nconst localeSettings = {\n  locale: {\n    moment: \"ru\"\n  },\n  valueLabel: \"Values\",\n  valuePlaceholder: \"Values\",\n  operatorLabel: \"Operator\",\n  fieldPlaceholder: \"Select field\",\n  operatorPlaceholder: \"Select operator\",\n  deleteLabel: null,\n  addGroupLabel: \"Add group\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: null,\n  notLabel: \"Not\",\n  funcLabel: \"Function\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: {\n    title: \"Are you sure delete this rule?\",\n    okText: \"Yes\",\n    okType: \"danger\"\n  },\n  removeGroupConfirmOptions: {\n    title: \"Are you sure delete this group?\",\n    okText: \"Yes\",\n    okType: \"danger\"\n  }\n};\nconst settings1 = { ...InitialConfig.settings\n};\ndelete settings1.field;\nconst settings = { ...settings1,\n  ...localeSettings,\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\"\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\"\n    }\n  },\n  maxNesting: 5,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  showErrorMessage: true,\n  customFieldSelectProps: {\n    showSearch: true\n  }\n};\nconst funcs = { ...BasicFuncs\n};\nconst config = { ...InitialConfig,\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  funcs,\n  fields: {}\n};\nconst fields1 = {\n  \"patientmaster.sfirstname\": {\n    \"label\": \"IDS_FIRSTNAME\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\", \"func\"],\n    \"mainWidgetProps\": {\n      \"valueLabel\": \"Name\",\n      \"valuePlaceholder\": \"Enter First Name\"\n    }\n  },\n  \"patientmaster.slastname\": {\n    \"label\": \"IDS_LASTNAME\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\", \"func\"],\n    \"mainWidgetProps\": {\n      \"valueLabel\": \"Name\",\n      \"valuePlaceholder\": \"Enter Last Name\"\n    }\n  },\n  \"patientmaster.sfathername\": {\n    \"label\": \"IDS_FATHERNAME\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\", \"func\"],\n    \"mainWidgetProps\": {\n      \"valueLabel\": \"Name\",\n      \"valuePlaceholder\": \"Enter Father Name\"\n    }\n  },\n  \"patientmaster.ngendercode\": {\n    \"label\": \"IDS_GENDER\",\n    \"type\": \"select\",\n    \"valueSources\": [\"value\"],\n    \"fieldSettings\": {\n      \"listValues\": [{\n        \"value\": \"1\",\n        \"title\": \"Male\"\n      }, {\n        \"value\": \"2\",\n        \"title\": \"Female\"\n      }, {\n        \"value\": \"3\",\n        \"title\": \"Others\"\n      }]\n    }\n  },\n  \"patientmaster.ddob\": {\n    \"label\": \"IDS_DATEOFBIRTH\",\n    \"type\": \"date\",\n    \"valueSources\": [\"value\"]\n  },\n  \"patientmaster.sage\": {\n    \"label\": \"IDS_AGE\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\", \"func\"],\n    \"mainWidgetProps\": {\n      \"valueLabel\": \"Age\",\n      \"valuePlaceholder\": \"Enter the Age\"\n    }\n  },\n  \"patientmaster.spatientid\": {\n    \"label\": \"IDS_PATIENTID\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\", \"func\"],\n    \"mainWidgetProps\": {\n      \"valueLabel\": \"Name\",\n      \"valuePlaceholder\": \"Enter Patient Id\"\n    }\n  },\n  \"patientmaster.sphoneno\": {\n    \"label\": \"IDS_PHONENO\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\"],\n    \"fieldSettings\": {\n      \"min\": 0,\n      \"valuePlaceholder\": \"Enter Phoneno\"\n    }\n  },\n  \"patientmaster.smobileno\": {\n    \"label\": \"IDS_MOBILENO\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\"],\n    \"fieldSettings\": {\n      \"min\": 0,\n      \"valuePlaceholder\": \"Enter Mobileno\"\n    }\n  },\n  \"patientmaster.semail\": {\n    \"label\": \"IDS_EMAIL\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\"],\n    \"fieldSettings\": {\n      \"min\": 0,\n      \"valuePlaceholder\": \"Enter Email\"\n    }\n  },\n  \"patientmaster.srefid\": {\n    \"label\": \"IDS_REFERENCEID\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\"],\n    \"fieldSettings\": {\n      \"min\": 0,\n      \"valuePlaceholder\": \"Enter ReferenceId\"\n    }\n  },\n  \"patientmaster.spassportno\": {\n    \"label\": \"IDS_PASSPORTNO\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\"],\n    \"fieldSettings\": {\n      \"min\": 0,\n      \"valuePlaceholder\": \"Enter Passportno\"\n    }\n  },\n  \"patientmaster.sexternalid\": {\n    \"label\": \"IDS_EXTERNALID\",\n    \"type\": \"text\",\n    \"valueSources\": [\"value\"],\n    \"fieldSettings\": {\n      \"min\": 0,\n      \"valuePlaceholder\": \"Enter ExternalID\"\n    }\n  }\n};\n\nclass PatientMaster extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.props.getFilterStatusCombo({\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          primarykey: transactionStatus.YES\n        },\n        masterData: { ...this.props.Login.masterData\n        },\n        Patconfigs: this.state.Patconfigs\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState\n      });\n    };\n\n    this.handlePageChange = event => {\n      this.setState({\n        kendoSkip: event.skip,\n        kendoTake: event.take\n      });\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      let inputData = []; //if(this.state.selectedRecord.npatientcasetypecode !== undefined && this.props.Login.masterData.SelectedPatientCaseType !== undefined)\n      //{\n\n      inputData[\"userinfo\"] = this.props.Login.userInfo; //  inputData[\"formdate\"] = this.state.selectedRecord['fromdate'] !== undefined ? convertDateValuetoString(this.state.selectedRecord[\"fromdate\"],this.state.selectedRecord[\"ToDay\"],this.props.Login.userInfo,true) : formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate));\n\n      inputData[\"date\"] = this.state.selectedRecord['fromdate'] !== undefined ? convertDateValuetoString(this.state.selectedRecord[\"fromdate\"], this.state.selectedRecord[\"ToDay\"], this.props.Login.userInfo, true) : convertDateValuetoString(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate), rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate), this.props.Login.userInfo, true); //   inputData[\"todate\"] = this.state.selectedRecord['ToDay'] !== undefined ? convertDateValuetoString(undefined,this.state.selectedRecord[\"ToDay\"],this.props.Login.userInfo,undefined) : formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate));\n\n      inputData[\"casetype\"] = \"Follow up\"; //this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.label : this.props.Login.masterData.SelectedPatientCaseType.spatientcasetypename;\n\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        classUrl: \"patient\",\n        methodUrl: \"Patient\",\n        inputData: inputData,\n        searchRef: this.searchRef,\n        isClearSearch: this.props.Login.isClearSearch,\n        displayname: \"Filter\"\n      };\n      const masterData = this.props.Login.masterData;\n      const SelectedPatientCaseType = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.item : this.props.Login.masterData.SelectedPatientCaseType;\n      this.props.getPatientDetailsByFilterQuery(inputParam, masterData, SelectedPatientCaseType); // }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deletePatient(\"Patient\", this.props.Login.masterData.SelectedPatient, \"delete\", deleteId));\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let openSolidAdvFilter = this.props.Login.openSolidAdvFilter;\n      let slideResult = this.props.Login.slideResult;\n      let tree = this.state.tree;\n      let openAlertModal;\n      let config = this.state.config;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openSolidAdvFilter = false;\n        openModal = false;\n        selectedRecord = {};\n        slideResult = {};\n        config = undefined;\n        tree = undefined;\n        this.props.Login.districtList = [];\n        this.props.Login.districtListTemp = [];\n        this.props.Login.cityListTemp = [];\n        this.props.Login.cityList = [];\n        this.setState({\n          config: config,\n          tree: tree\n        });\n        openAlertModal = false;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openAlertModal,\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          openSolidAdvFilter,\n          slideResult,\n          config,\n          tree\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName, optionlistname) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n\n      if (fieldName === \"nregioncode\") {\n        this.props.getDistrictComboServices({\n          inputData: {\n            dispalyname: \"District\",\n            userinfo: this.props.Login.userInfo,\n            sdisplayname: selectedRecord.nregioncode.label,\n            primarykey: selectedRecord.nregioncode.value,\n            optionlistname\n          }\n        });\n        selectedRecord[\"ndistrictcode\"] = \"\";\n        selectedRecord[\"ncitycode\"] = \"\";\n      } else if (fieldName === \"nregioncodetemp\") {\n        this.props.getDistrictComboServices({\n          inputData: {\n            dispalyname: \"DistrictTemp\",\n            userinfo: this.props.Login.userInfo,\n            sdisplayname: selectedRecord.nregioncodetemp.label,\n            primarykey: selectedRecord.nregioncodetemp.value,\n            optionlistname\n          }\n        });\n        selectedRecord[\"ndistrictcodetemp\"] = \"\";\n        selectedRecord[\"ncitycodetemp\"] = \"\";\n      } else if (fieldName === \"ndistrictcode\") {\n        this.props.getCityComboServices({\n          inputData: {\n            dispalyname: \"City\",\n            userinfo: this.props.Login.userInfo,\n            sdisplayname: selectedRecord.ndistrictcode.label,\n            primarykey: selectedRecord.ndistrictcode.value,\n            optionlistname\n          }\n        });\n        selectedRecord[\"ncitycode\"] = \"\";\n      } else if (fieldName === \"ndistrictcodetemp\") {\n        this.props.getCityComboServices({\n          inputData: {\n            dispalyname: \"CityTemp\",\n            userinfo: this.props.Login.userInfo,\n            sdisplayname: selectedRecord.ndistrictcodetemp.label,\n            primarykey: selectedRecord.ndistrictcodetemp.value,\n            optionlistname\n          }\n        });\n        selectedRecord[\"ncitycodetemp\"] = \"\";\n      } else if (fieldName === \"npatientcasetypecode\") {\n        selectedRecord[fieldName] = comboData;\n      } else if (fieldName === \"npatientfiltercode\") {\n        this.props.filtercomboService({\n          inputData: {\n            userinfo: this.props.Login.userInfo,\n            sdisplayname: selectedRecord.npatientfiltercode.label,\n            primarykey: selectedRecord.npatientfiltercode.value\n          },\n          masterData: { ...this.props.Login.masterData,\n            selectedRecord\n          },\n          Patconfigs: this.state.Patconfigs\n        });\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onChange = (immutableTree, config) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[\"tree\"] = immutableTree;\n      selectedRecord[\"config\"] = config; // this.setState({ tree: immutableTree, config: config });\n\n      selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config); // const jsonTree = QbUtils.getTree(immutableTree);\n      // <div>SQL where: <pre>{selectedRecord['filterquery']}</pre></div>\n\n      this.setState({\n        tree: immutableTree,\n        config: config,\n        selectedRecord: selectedRecord\n      });\n    };\n\n    this.onInputOnChange = (event, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        if (fieldName === \"nfilterstatus\") {\n          selectedRecord[\"npatientfiltercode\"] = undefined;\n          selectedRecord[fieldName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n          this.props.getFilterStatusCombo({\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              primarykey: selectedRecord.nfilterstatus\n            },\n            masterData: { ...this.props.Login.masterData,\n              selectedRecord\n            },\n            Patconfigs: this.state.Patconfigs\n          });\n        } else {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n\n          if (selectedRecord.nneedcurrentaddress === 3) {\n            selectedRecord.sflatnotemp = selectedRecord.sflatno;\n            selectedRecord.shousenotemp = selectedRecord.shouseno;\n            selectedRecord.spostalcodetemp = selectedRecord.spostalcode;\n            selectedRecord.sstreettemp = selectedRecord.sstreet;\n            selectedRecord.ncitycodetemp = selectedRecord.ncitycode;\n            selectedRecord.ndistrictcodetemp = selectedRecord.ndistrictcode;\n            selectedRecord.nregioncodetemp = selectedRecord.nregioncode;\n          } else {\n            selectedRecord.sflatnotemp = \"\";\n            selectedRecord.shousenotemp = \"\";\n            selectedRecord.spostalcodetemp = \"\";\n            selectedRecord.sstreettemp = \"\";\n            selectedRecord.ncitycodetemp = \"\";\n            selectedRecord.ndistrictcodetemp = \"\";\n            selectedRecord.nregioncodetemp = \"\";\n          }\n        }\n      } else {\n        if (event.target.name === \"sphoneno\" || event.target.name === \"smobileno\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n\n          if (selectedRecord.nneedcurrentaddress === 3) {\n            selectedRecord.sflatnotemp = selectedRecord.sflatno;\n            selectedRecord.shousenotemp = selectedRecord.shouseno;\n            selectedRecord.spostalcodetemp = selectedRecord.spostalcode;\n            selectedRecord.sstreettemp = selectedRecord.sstreet;\n            selectedRecord.ncitycodetemp = selectedRecord.ncitycode;\n            selectedRecord.ndistrictcodetemp = selectedRecord.ndistrictcode;\n            selectedRecord.nregioncodetemp = selectedRecord.nregioncode;\n          }\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      const age = ageCalculate(dateValue);\n      selectedRecord[\"sage\"] = age; //   if(dateName===\"ToDay\"){\n      //     this.props.getDateChangeServices({\n      //       userinfo: this.props.Login.userInfo,\n      //       date: rearrangeDateFormat(this.props.Login.userInfo,selectedRecord[\"ToDay\"])\n      // })\n      //}\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveGetClick = saveType => {\n      if (saveType === 7) {\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const inputParam = {\n          classUrl: \"patient\",\n          methodUrl: \"ByPatient\",\n          inputData: inputData,\n          openAlertModal: true,\n          loadEsign: false\n        };\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openAlertModal: true,\n            openSolidAdvFilter: true,\n            openModal: true,\n            inputData,\n            operation: \"create\",\n            screenData: {\n              inputParam\n            }\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        let selectedRecord = [];\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        inputData[\"filterquery\"] = this.state.selectedRecord['filterquery'] !== undefined ? this.state.selectedRecord['filterquery'] : this.props.Login.filterquery; //inputData[\"formdate\"] = this.state.selectedRecord['fromdate']!==undefined ?  formatInputDateWithoutT(this.state.selectedRecord[\"fromdate\"]) :formatInputDateWithoutT( rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate));\n        // inputData[\"todate\"] = this.state.selectedRecord['ToDay']!==undefined ?  formatInputDateWithoutT(this.state.selectedRecord[\"ToDay\"]):formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate));\n\n        inputData[\"patientfilter\"] = {\n          patientfilter: this.state.selectedRecord,\n          nfilterstatus: 4,\n          patient: \"Filter\",\n          sfilterstatus: \"Recent\"\n        };\n\n        if (inputData[\"filterquery\"] !== undefined && !inputData[\"filterquery\"].includes('Invalid date')) {\n          this.searchRef.current.value = \"\";\n          let paramFlag = true;\n          const inputParam = {\n            classUrl: \"patient\",\n            methodUrl: \"ByPatient\",\n            inputData: inputData,\n            searchRef: this.searchRef,\n            isClearSearch: this.props.Login.isClearSearch,\n            displayname: \"AdvanceFilter\"\n          };\n          const QueryName = this.props.Login.QueryName !== undefined ? this.props.Login.QueryName : this.props.Login.masterData.SelectedPatientFilterType.spatientfiltername;\n          const masterData = { ...this.props.Login.masterData,\n            QueryName: QueryName\n          };\n          const SelectedPatientCaseType = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.item : this.props.Login.masterData.SelectedPatientCaseType;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                }\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n\n          this.props.getPatientDetailsByFilterQuery(inputParam, masterData, SelectedPatientCaseType);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTALLVALUES\"\n          }));\n        }\n      }\n    };\n\n    this.handleSaveFilterClick = () => {\n      let inputData = {};\n      let methodUrl = \"\";\n      const selectedRecord = this.state.selectedRecord;\n\n      if (this.state.selectedRecord.filterquery !== undefined) {\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        inputData[\"patientfilter\"] = {\n          \"tree\": QbUtils.getTree(this.state.selectedRecord.tree),\n          \"filterquery\": this.state.selectedRecord.filterquery\n        }; //  inputData[\"patient\"]=this.state.selectedRecord.QueryName;\n\n        inputData[\"patient\"] = this.state.selectedRecord.QueryName !== undefined ? this.state.selectedRecord.QueryName : this.state.selectedRecord.npatientfiltercode.label;\n        inputData[\"nfilterstatus\"] = 3;\n        inputData[\"sfilterstatus\"] = \"Saved\";\n        methodUrl = \"FilterQuery\";\n        const inputParam = {\n          methodUrl: methodUrl,\n          classUrl: this.props.Login.inputParam.classUrl,\n          displayName: this.props.Login.inputParam.displayName,\n          inputData: inputData,\n          operation: this.props.Login.operation\n        };\n        const masterData = { ...this.state.selectedRecord,\n          ...this.props.Login.masterData\n        };\n        this.props.filtercomboService({\n          displayname: \"onSubmit\",\n          inputParam,\n          masterData\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUES\"\n        }));\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.state.selectedRecord['semail'] && this.state.selectedRecord['semail'] !== \"\" && this.state.selectedRecord['semail'] !== \"null\" ? validateEmail(this.state.selectedRecord[\"semail\"]) : true) {\n        let patientData = [];\n        patientData[\"userinfo\"] = this.props.Login.userInfo;\n        let postParam = {\n          inputListName: \"PatientList\",\n          selectedObject: \"SelectedPatient\",\n          primaryKeyField: \"spatientid\"\n        };\n\n        if (this.props.Login.operation === \"update\") {\n          postParam[\"primaryKeyValue\"] = this.props.Login.masterData.SelectedPatient.spatientid;\n          patientData[\"patient\"] = {\n            spatientid: this.props.Login.masterData.SelectedPatient.spatientid,\n            sfirstname: this.state.selectedRecord.sfirstname,\n            slastname: this.state.selectedRecord.slastname,\n            sfathername: this.state.selectedRecord.sfathername,\n            ddob: formatInputDate(this.state.selectedRecord[\"ddob\"], false),\n            sage: this.state.selectedRecord.sage,\n            ngendercode: this.state.selectedRecord.ngendercode.value,\n            ncitycode: this.state.selectedRecord.ncitycode.value,\n            ncountrycode: this.state.selectedRecord.ncountrycode.value,\n            saddress: this.state.selectedRecord.saddress,\n            sdistrict: this.state.selectedRecord.sdistrict,\n            spostalcode: this.state.selectedRecord.spostalcode,\n            sphoneno: this.state.selectedRecord.sphoneno,\n            smobileno: this.state.selectedRecord.smobileno,\n            semail: this.state.selectedRecord.semail,\n            spassportno: this.state.selectedRecord.spassportno,\n            srefid: this.state.selectedRecord.srefid,\n            sexternalid: this.state.selectedRecord.sexternalid,\n            sstreet: this.state.selectedRecord.sstreet,\n            sstreettemp: this.state.selectedRecord.nneedcurrentaddress === 3 ? this.state.selectedRecord.sstreet : this.state.selectedRecord.sstreettemp,\n            shouseno: this.state.selectedRecord.shouseno,\n            shousenotemp: this.state.selectedRecord.nneedcurrentaddress === 3 ? this.state.selectedRecord.shouseno : this.state.selectedRecord.shousenotemp,\n            sflatno: this.state.selectedRecord.sflatno,\n            sflatnotemp: this.state.selectedRecord.nneedcurrentaddress === 3 ? this.state.selectedRecord.sflatno : this.state.selectedRecord.sflatnotemp,\n            nneedcurrentaddress: this.state.selectedRecord.nneedcurrentaddress,\n            nneedmigrant: this.state.selectedRecord.nneedmigrant,\n            spostalcodetemp: this.state.selectedRecord.nneedcurrentaddress === 3 ? this.state.selectedRecord.spostalcode : this.state.selectedRecord.spostalcodetemp,\n            sgendername: this.state.selectedRecord.ngendercode.label\n          };\n        } else {\n          patientData[\"patient\"] = {\n            nsitecode: this.props.Login.userInfo.nmastersitecode\n          };\n          this.patientFieldList.map(item => {\n            return patientData[\"patient\"][item] = this.state.selectedRecord[item] == \"\" || this.state.selectedRecord[item] == undefined ? undefined : this.state.selectedRecord[item];\n          });\n        }\n\n        patientData[\"patient\"][\"ngendercode\"] = this.state.selectedRecord[\"ngendercode\"] ? this.state.selectedRecord[\"ngendercode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ncitycodetemp\"] = this.state.selectedRecord.nneedcurrentaddress === 3 ? this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : transactionStatus.NA : this.state.selectedRecord[\"ncitycodetemp\"] ? this.state.selectedRecord[\"ncitycodetemp\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"ndistrictcodetemp\"] = this.state.selectedRecord.nneedcurrentaddress === 3 ? this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : transactionStatus.NA : this.state.selectedRecord[\"ndistrictcodetemp\"] ? this.state.selectedRecord[\"ndistrictcodetemp\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : transactionStatus.NA;\n        patientData[\"patient\"][\"nregioncodetemp\"] = this.state.selectedRecord.nneedcurrentaddress === 3 ? this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : transactionStatus.NA : this.state.selectedRecord[\"nregioncodetemp\"] ? this.state.selectedRecord[\"nregioncodetemp\"].value : transactionStatus.NA; // if (patientData[\"patient\"][\"ddob\"] !== undefined\n        //     && patientData[\"patient\"][\"ddob\"] !== null && patientData[\"patient\"][\"ddob\"] !== \"\") {\n        //     patientData[\"patient\"][\"ddob\"] = formatInputDate(patientData[\"patient\"][\"ddob\"],false);\n        // }\n\n        if (this.state.selectedRecord[\"ddob\"]) {\n          if (this.props.Login.operation === \"create\") {\n            patientData[\"patient\"][\"sdob\"] = formatInputDate(this.state.selectedRecord[\"ddob\"], false);\n          } else {\n            patientData[\"patient\"][\"sdob\"] = this.state.selectedRecord[\"sdob\"];\n          }\n        }\n\n        patientData[\"patient\"][\"currentdate\"] = formatInputDate(new Date(), true);\n        const inputParam = {\n          classUrl: \"patient\",\n          methodUrl: \"Patient\",\n          inputData: patientData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData; // if (this.props.Login.operation === \"update\") {\n        // this.updatePatient(inputParam, this.props.Login.masterData, this.props.Login.ncontrolCode);\n        // return;\n        // }\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_ENTERVALIDEMAIL\"\n        }));\n      }\n    };\n\n    this.deletePatient = (methodUrl, selectedPatient, operation, ncontrolCode) => {\n      let inputData = [];\n      const postParam = {\n        inputListName: \"PatientList\",\n        selectedObject: \"SelectedPatient\",\n        primaryKeyField: \"spatientid\",\n        primaryKeyValue: selectedPatient.spatientid,\n        fetchUrl: \"patient/getPatient\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo,\n          currentdate: formatInputDate(new Date(), true)\n        }\n      };\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"patient\"] = selectedPatient;\n      inputData[\"patient\"][\"currentdate\"] = formatInputDate(new Date(), true);\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl,\n        postParam,\n        inputData,\n        operation,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_PATIENTMASTER\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.handleExpandChange = (row, dataState) => {\n      let childListMap3 = new Map();\n      let keylst = this.props.Login.masterData.patientHistorydetails.map(key => key.npreregno); // let keylst1=[]  ;\n\n      keylst.map((key, i) => {\n        childListMap3.set(parseInt(key), this.props.Login.masterData.patientHistorydetails);\n      });\n      this.setState({\n        childListMap3\n      }); // const viewParam = {\n      //   userInfo: this.props.Login.userInfo,\n      //   primaryKeyField: \"npreregno\",\n      //   masterData: this.props.Login.masterData,\n      // };\n      // this.props.getTestParameter({\n      //   ...viewParam,\n      //   dataState,\n      //   primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\n      //   viewRow: row[\"dataItem\"],\n      // });\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      let inputData = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"date\"] = this.state.selectedRecord['fromdate'] !== undefined ? convertDateValuetoString(this.state.selectedRecord[\"fromdate\"], this.state.selectedRecord[\"ToDay\"], this.props.Login.userInfo, true) : convertDateValuetoString(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate), rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate), this.props.Login.userInfo, true); //   inputData[\"formdate\"] = this.state.selectedRecord['fromdate'] !== undefined ? formatInputDateWithoutT(this.state.selectedRecord[\"fromdate\"]) : formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate));\n      // inputData[\"todate\"] = this.state.selectedRecord['ToDay'] !== undefined ? formatInputDateWithoutT(this.state.selectedRecord[\"ToDay\"]) : formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate));\n\n      inputData[\"casetype\"] = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.label : this.props.Login.masterData.SelectedPatientCaseType.spatientcasetypename;\n      const inputParam = {\n        inputData: inputData,\n        classUrl: \"patient\",\n        methodUrl: \"Patient\",\n        displayname: \"Filter\",\n        userInfo: this.props.Login.userInfo,\n        isClearSearch: this.props.Login.isClearSearch\n      };\n      const masterData = this.props.Login.masterData;\n      const SelectedPatientCaseType = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.item : this.props.Login.masterData.SelectedPatientCaseType;\n      this.props.getPatientDetailsByFilterQuery(inputParam, masterData, SelectedPatientCaseType);\n    };\n\n    Object.keys(config.operators).map(x => {\n      config.operators[x]['label'] = this.props.intl.formatMessage({\n        id: config.operators[x]['label']\n      });\n    });\n    Object.keys(config['funcs']).map(x => {\n      config['funcs'][x]['label'] = this.props.intl.formatMessage({\n        id: config['funcs'][x]['label']\n      });\n    });\n    Object.keys(fields1).map(x => {\n      fields1[x]['label'] = this.props.intl.formatMessage({\n        id: fields1[x]['label']\n      });\n    });\n    this.state = {\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      selectedPatient: undefined,\n      screenName: undefined,\n      userRoleControlRights: [],\n      patientCaseTypeList: [],\n      controlMap: new Map(),\n      isClearSearch: false,\n      dataState: {\n        skip: 0,\n        take: 5\n      },\n      tree: undefined,\n      config: undefined,\n      kendoSkip: 0,\n      kendoTake: 5,\n      childListMap3: [],\n      fields: {\n        \"patientmaster.sfirstname\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_FIRSTNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_FIRSTNAME\"\n            })\n          }\n        },\n        \"patientmaster.slastname\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_LASTNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_LASTNAME\"\n            })\n          }\n        },\n        \"patientmaster.sfathername\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_FATHERNAME\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_FATHERNAME\"\n            })\n          }\n        },\n        \"patientmaster.ngendercode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_GENDER\"\n          }),\n          \"type\": \"select\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"listValues\": [{\n              \"value\": \"1\",\n              \"title\": this.props.intl.formatMessage({\n                id: \"IDS_MALE\"\n              })\n            }, {\n              \"value\": \"2\",\n              \"title\": this.props.intl.formatMessage({\n                id: \"IDS_FEMALE\"\n              })\n            }, {\n              \"value\": \"3\",\n              \"title\": this.props.intl.formatMessage({\n                id: \"IDS_OTHERS\"\n              })\n            }]\n          }\n        },\n        \"patientmaster.ddob\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_DATEOFBIRTH\"\n          }),\n          \"type\": \"date\",\n          \"valueSources\": [\"value\"]\n        },\n        \"patientmaster.sage\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_AGE\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Age\",\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_AGE\"\n            })\n          }\n        },\n        \"patientmaster.spatientid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PATIENTID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\", \"func\"],\n          \"mainWidgetProps\": {\n            \"valueLabel\": \"Name\",\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_PATIENTID\"\n            })\n          }\n        },\n        \"patientmaster.sphoneno\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PHONENO\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_PHONENO\"\n            })\n          }\n        },\n        \"patientmaster.smobileno\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_MOBILENO\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_MOBILENO\"\n            })\n          }\n        },\n        \"patientmaster.semail\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_EMAIL\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_EMAIL\"\n            })\n          }\n        },\n        \"patientmaster.srefid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_REFERENCEID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_REFERENCEID\"\n            })\n          }\n        },\n        \"patientmaster.spassportno\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_PASSPORTNO\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_PASSPORTNO\"\n            })\n          }\n        },\n        \"patientmaster.sexternalid\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_EXTERNALID\"\n          }),\n          \"type\": \"text\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"min\": 0,\n            \"valuePlaceholder\": this.props.intl.formatMessage({\n              id: \"IDS_EXTERNALID\"\n            })\n          }\n        }\n      },\n      Patconfigs: { ...config,\n        settings: { ...config.settings,\n          notLabel: this.props.intl.formatMessage({\n            id: \"IDS_NOT\"\n          }),\n          valueLabel: this.props.intl.formatMessage({\n            id: \"IDS_VALUE\"\n          }),\n          valuePlaceholder: this.props.intl.formatMessage({\n            id: \"IDS_VALUE\"\n          }),\n          operatorLabel: this.props.intl.formatMessage({\n            id: \"IDS_OPERATOR\"\n          }),\n          fieldPlaceholder: this.props.intl.formatMessage({\n            id: \"IDS_SELECTFIELD\"\n          }),\n          operatorPlaceholder: this.props.intl.formatMessage({\n            id: \"IDS_SELECTOPERATOR\"\n          }),\n          addGroupLabel: this.props.intl.formatMessage({\n            id: \"IDS_ADDGROUP\"\n          }),\n          addRuleLabel: this.props.intl.formatMessage({\n            id: \"IDS_ADDRULE\"\n          }),\n          addSubRuleLabel: this.props.intl.formatMessage({\n            id: \"IDS_ADDSUBRULE\"\n          }),\n          valueSourcesPopupTitle: this.props.intl.formatMessage({\n            id: \"IDS_SELECTVALUESOURCE\"\n          }),\n          funcLabel: this.props.intl.formatMessage({\n            id: \"IDS_FUNCTION\"\n          }),\n          valueSourcesInfo: {\n            field: {\n              label: this.props.intl.formatMessage({\n                id: \"IDS_FIELD\"\n              }),\n              widget: 'field'\n            },\n            func: {\n              label: this.props.intl.formatMessage({\n                id: \"IDS_FUNCTION\"\n              }),\n              widget: 'func'\n            },\n            value: {\n              label: this.props.intl.formatMessage({\n                id: \"IDS_VALUE\"\n              })\n            }\n          },\n          removeRuleConfirmOptions: {\n            title: this.props.intl.formatMessage({\n              id: \"IDS_AREYOUSUREDELETETHISRULE\"\n            }),\n            okText: this.props.intl.formatMessage({\n              id: \"IDS_YES\"\n            }),\n            okType: \"danger\"\n          },\n          removeGroupConfirmOptions: {\n            title: this.props.intl.formatMessage({\n              id: \"IDS_AREYOUSUREDELETETHISGROUP\"\n            }),\n            okText: this.props.intl.formatMessage({\n              id: \"IDS_YES\"\n            }),\n            okType: \"danger\"\n          }\n        },\n        conjunctions: {\n          AND: { ...config['conjunctions']['AND'],\n            label: this.props.intl.formatMessage({\n              id: \"IDS_AND\"\n            })\n          },\n          OR: { ...config['conjunctions']['OR'],\n            label: this.props.intl.formatMessage({\n              id: \"IDS_OR\"\n            })\n          }\n        },\n        fields: fields1 //,settings:{...config.settings,notLabel:this.props.intl.formatMessage({id: \"NOT\"})}\n\n      }\n    };\n    this.searchRef = React.createRef();\n    this.emailRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.patientFieldList = [\"sfirstname\", \"slastname\", \"sfathername\", \"ddob\", \"sage\", \"saddress\", \"sdistrict\", \"spostalcode\", \"sphoneno\", \"smobileno\", \"semail\", \"srefid\", \"spassportno\", \"sexternalid\", \"sstreet\", \"sstreettemp\", \"shouseno\", \"shousenotemp\", \"sflatno\", \"sflatnotemp\", \"nneedmigrant\", \"nneedcurrentaddress\", \"spostalcodetemp\", \"sregionnametemp\", \"sregionname\", \"scitynametemp\"];\n    this.searchFieldList = [\"saddress\", \"sage\", \"sdob\", \"sgendername\", \"sfathername\", \"spatientname\", \"spatientid\", \"sphoneno\", \"smobileno\", \"semail\", \"scityname\", \"sdistrict\", \"scountryname\", \"spostalcode\", \"srefid\", \"spassportno\", \"sexternalid\", \"sstreet\", \"sstreettemp\", \"shouseno\", \"shousenotemp\", \"sflatno\", \"sflatnotemp\", \"sdisplaystatus\", \"nneedcurrentaddress\", \"spostalcodetemp\", \"sregionnametemp\", \"sregionname\", \"scitynametemp\"];\n    this.columnList = [{\n      idsName: \"IDS_ARNO\",\n      dataField: \"sarno\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_PRODUCT\",\n      dataField: \"sproductname\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_SPECIFICATION\",\n      dataField: \"sspecname\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_SPECIMENCOLLECTIONTIME\",\n      dataField: \"scolleciondate\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_RECEIVEDDATE\",\n      dataField: \"sreceiveddate\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_STATUS\",\n      dataField: \"stransdisplaystatus\",\n      width: \"100px\"\n    }];\n    this.childColumnList = [{\n      idsName: \"IDS_TESTNAME\",\n      dataField: \"stestsynonym\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_PARAMETERNAME\",\n      dataField: \"sparametersynonym\",\n      width: \"250px\"\n    }, {\n      idsName: \"IDS_RESULT\",\n      dataField: \"sresult\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_RESULTFLAG\",\n      dataField: \"sgradename\",\n      width: \"100px\"\n    }, {\n      idsName: \"IDS_RESULTDATE\",\n      dataField: \"sentereddate\",\n      width: \"150px\"\n    }, {\n      idsName: \"IDS_STATUS\",\n      dataField: \"stransdisplaystatus\",\n      width: \"100px\"\n    }];\n    this.slideList = [{\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PATIENTID\"\n      }),\n      filed: \"spatientid\",\n      width: \"250px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_FIRSTNAME\"\n      }),\n      filed: \"sfirstname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_LASTNAME\"\n      }),\n      filed: \"slastname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_FATHERNAME\"\n      }),\n      filed: \"sfathername\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_GENDER\"\n      }),\n      filed: \"sgendername\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_COUNTRY\"\n      }),\n      filed: \"scountryname\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_DATEOFBIRTH\"\n      }),\n      filed: \"sdob\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_DISTRICT\"\n      }),\n      filed: \"sdistrict\",\n      width: \"100px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_POSTALCODE\"\n      }),\n      filed: \"spostalcode\",\n      width: \"100px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PHONENO\"\n      }),\n      filed: \"sphoneno\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_MOBILENO\"\n      }),\n      filed: \"smobileno\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EMAIL\"\n      }),\n      filed: \"semail\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_REFID\"\n      }),\n      filed: \"srefid\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_PASSPORTNO\"\n      }),\n      filed: \"spassportno\",\n      width: \"150px\"\n    }, {\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EXTERNALID\"\n      }),\n      filed: \"sexternalid\",\n      width: \"150px\"\n    }];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const addId = this.state.controlMap.has(\"AddPatient\") && this.state.controlMap.get(\"AddPatient\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditPatient\") && this.state.controlMap.get(\"EditPatient\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeletePatient\") && this.state.controlMap.get(\"DeletePatient\").ncontrolcode;\n    const patientReportId = this.state.controlMap.has(\"PatientReport\") && this.state.controlMap.get(\"PatientReport\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"PatientList\",\n      selectedObject: \"SelectedPatient\",\n      primaryKeyField: \"spatientid\",\n      fetchUrl: \"patient/getPatient\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        currentdate: formatInputDate(new Date(), true)\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const addParam = {\n      screenName: \"IDS_PATIENTMASTER\",\n      operation: \"create\",\n      primaryKeyName: \"npatientcode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: addId\n    };\n    const editParam = {\n      screenName: \"IDS_PATIENTMASTER\",\n      operation: \"update\",\n      primaryKeyName: \"spatientid\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: editId,\n      inputListName: \"PatientList\",\n      selectedObject: \"SelectedPatient\"\n    };\n    const mandatoryFields = [{\n      mandatory: true,\n      idsName: \"IDS_FIRSTNAME\",\n      dataField: \"sfirstname\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_LASTNAME\",\n      dataField: \"slastname\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_DATEOFBIRTH\",\n      dataField: \"ddob\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, // {\n    //   mandatory: true,\n    //   idsName: \"IDS_AGE\",\n    //   dataField: \"sage\",\n    //   mandatoryLabel: \"IDS_ENTER\",\n    //   controlType: \"textbox\",\n    // },\n    {\n      mandatory: true,\n      idsName: \"IDS_GENDER\",\n      dataField: \"ngendercode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, // {\n    //   mandatory: true,\n    //   idsName: \"IDS_ADDRESS\",\n    //   dataField: \"saddress\",\n    //   mandatoryLabel: \"IDS_ENTER\",\n    //   controlType: \"textbox\",\n    // },\n    // {\n    //   mandatory: true,\n    //   idsName: \"IDS_PHONENO\",\n    //   dataField: \"sphoneno\",\n    //   mandatoryLabel: \"IDS_ENTER\",\n    //   controlType: \"textbox\",\n    // },\n    {\n      mandatory: true,\n      idsName: \"IDS_COUNTRY\",\n      dataField: \"ncountrycode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_REGIONNAME\",\n      dataField: \"nregioncode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_DISTRICTNAME\",\n      dataField: \"ndistrictcode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CITY\",\n      dataField: \"ncitycode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_STREET\",\n      dataField: \"sstreet\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_HOUSENO\",\n      dataField: \"shouseno\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_FLATNO\",\n      dataField: \"sflatno\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURENTREGION\",\n      dataField: \"nregioncodetemp\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURRENTDISTRICT\",\n      dataField: \"ndistrictcodetemp\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURRENTCITY\",\n      dataField: \"ncitycodetemp\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURRENTSTREET\",\n      dataField: \"sstreettemp\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURRENTHOUSENO\",\n      dataField: \"shousenotemp\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_CURRENTFLATNO\",\n      dataField: \"sflatnotemp\",\n      mandatoryLabel: \"IDS_ENTER\",\n      controlType: \"textbox\"\n    }];\n    this.extractedColumnList = [{\n      \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n      \"dataField\": \"sarno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\n      \"dataField\": \"ssamplearno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTREFNO\",\n      \"dataField\": \"sreportno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REGISTEREDDATE\",\n      \"dataField\": \"stransactiondate\",\n      \"width\": \"250px\"\n    }];\n    let fromDate = \"\";\n    let toDate = \"\";\n    let breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\n      fromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\n      toDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate);\n      breadCrumbData.push({\n        \"label\": \"IDS_FROM\",\n        \"value\": this.props.Login.masterData.filterFromdate !== undefined ? convertDateValuetoString(this.props.Login.masterData.filterFromdate, this.props.Login.masterData.filterToDay, this.props.Login.userInfo).breadCrumbFrom : convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo).breadCrumbFrom\n      }, {\n        \"label\": \"IDS_TO\",\n        \"value\": this.props.Login.masterData.filterToDay !== undefined ? convertDateValuetoString(this.props.Login.masterData.filterFromdate, this.props.Login.masterData.filterToDay, this.props.Login.userInfo).breadCrumbto : convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo).breadCrumbto\n      });\n    }\n\n    if (this.props.Login.masterData && this.props.Login.masterData.SelectedPatientCaseType) {\n      breadCrumbData.push({\n        \"label\": \"IDS_PATIENTCASETYPE\",\n        \"value\": this.props.Login.masterData.SelectedPatientCaseType ? this.props.Login.masterData.SelectedPatientCaseType.spatientcasetypename : '-'\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap  mtop-4 mtop-fixed-breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_PATIENTMASTER\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.PatientList,\n      getMasterDetail: user => this.props.getPatientDetail(user, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedPatient,\n      primaryKeyField: \"spatientid\",\n      mainField: \"spatientname\",\n      SecondaryField: true,\n      firstField: \"sage\",\n      secondField: \"sgendername\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getPatientComboService(addParam),\n      isMultiSelecct: false,\n      hidePaging: false,\n      isClearSearch: this.props.Login.isClearSearch,\n      showMicIcon: true,\n      showFilterIcon: true,\n      showSolidFilterIcon: true,\n      handleClick: this.handleClick,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_DATEFILTER\": /*#__PURE__*/React.createElement(PatientMasterFilter, {\n          fromDate: this.props.Login.masterData && this.props.Login.masterData.FromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate) : \"\",\n          toDate: this.props.Login.masterData && this.props.Login.masterData.ToDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate) : \"\",\n          selectedRecord: this.state.selectedRecord || {},\n          userInfo: this.props.Login.userInfo,\n          handleDateChange: this.handleDateChange,\n          onComboChange: this.onComboChange,\n          patientcasetypeList: this.state.patientCaseTypeList || [],\n          selectedProjectcasetype: this.props.Login.masterData.SelectedPatientCaseType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 39\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 17\n      }\n    }, this.props.Login.masterData.PatientList && this.props.Login.masterData.PatientList.length > 0 && this.props.Login.masterData.SelectedPatient ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.SelectedPatient.spatientname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editPatient\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.getPatientComboService(editParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deletePatient\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"PatientHistory\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PATIENTHISTORY\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.props.getPatientHistory(this.props.Login.masterData.SelectedPatient, this.props.Login.userInfo, this.props.Login.masterData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      name: \"patientReport\",\n      hidden: this.state.userRoleControlRights.indexOf(patientReportId) === -1,\n      onClick: () => this.props.getPatientReport(this.props.Login.masterData.SelectedPatient, this.props.Login.userInfo, patientReportId) //  data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PATIENTREPORT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Reports, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 33\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1106,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FATHERNAME\",\n      message: \"Father Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1114,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sfathername === null || this.props.Login.masterData.SelectedPatient.sfathername === \"\" ? \"-\" : this.props.Login.masterData.SelectedPatient.sfathername))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DATEOFBIRTH\",\n      message: \"Date Of Birth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1131,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdob === \"null\" || this.props.Login.masterData.SelectedPatient.sdob.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdob))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1141,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1142,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_AGE\",\n      message: \"Age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sage === \"null\" || this.props.Login.masterData.SelectedPatient.sage.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sage))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1156,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1157,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_GENDER\",\n      message: \"Gender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1161,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sgendername === null || this.props.Login.masterData.SelectedPatient.sgendername.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sgendername))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1171,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1172,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MOBILENO\",\n      message: \"Mobile No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.smobileno === null || this.props.Login.masterData.SelectedPatient.smobileno === \"\" ? \"-\" : this.props.Login.masterData.SelectedPatient.smobileno))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1187,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PHONENO\",\n      message: \"Phone No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sphoneno === null || this.props.Login.masterData.SelectedPatient.sphoneno === \"\" ? \"-\" : this.props.Login.masterData.SelectedPatient.sphoneno))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1204,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1205,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EMAILID\",\n      message: \"Email ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1207,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.semail === null || this.props.Login.masterData.SelectedPatient.semail === \"\" ? \"-\" : this.props.Login.masterData.SelectedPatient.semail))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1221,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1222,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MIGRANT\",\n      message: \"Migrant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1224,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1229,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdisplaystatus == \"null\" || this.props.Login.masterData.SelectedPatient.sdisplaystatus.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdisplaystatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1238,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1239,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1240,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COUNTRY\",\n      message: \"COUNTRY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1241,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1246,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.scountryname == \"null\" || this.props.Login.masterData.SelectedPatient.scountryname.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.scountryname))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1257,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1258,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REFERENCEID\",\n      message: \"Reference ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1265,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.srefid === null || this.props.Login.masterData.SelectedPatient.srefid === \"\" ? \"-\" : this.props.Login.masterData.SelectedPatient.srefid))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PASSPORTNO\",\n      message: \"Passport No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1283,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.spassportno === null || this.props.Login.masterData.SelectedPatient.spassportno === \"\" ? \"-\" : this.props.Login.masterData.SelectedPatient.spassportno))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1293,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1295,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXTERNALID\",\n      message: \"External ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1296,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1301,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sexternalid === null || this.props.Login.masterData.SelectedPatient.sexternalid === \"\" ? \"-\" : this.props.Login.masterData.SelectedPatient.sexternalid))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"horizontal-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1311,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1315,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PERMANENTADDRESS\",\n      message: \"Permanent Address:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REGIONNAME\",\n      message: \"Region\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1326,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1331,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sregionname === \"null\" || this.props.Login.masterData.SelectedPatient.sregionname.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sregionname))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1341,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1342,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DISTRICTNAME\",\n      message: \"District\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1343,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1348,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdistrictname === \"null\" || this.props.Login.masterData.SelectedPatient.sdistrictname.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdistrictname))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1357,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1360,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CITY\",\n      message: \"City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1361,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1366,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.scityname === \"null\" || this.props.Login.masterData.SelectedPatient.scityname.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.scityname))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1375,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1376,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1377,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_POSTALCODE\",\n      message: \"PostalCode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1383,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.spostalcode === null || this.props.Login.masterData.SelectedPatient.spostalcode === \"\" ? \"-\" : this.props.Login.masterData.SelectedPatient.spostalcode))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1393,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1394,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1395,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_STREET\",\n      message: \"Street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1396,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1401,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sstreet === \"null\" || this.props.Login.masterData.SelectedPatient.sstreet.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sstreet))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1410,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1411,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1412,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_HOUSENO\",\n      message: \"House No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1413,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1418,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.shouseno === \"null\" || this.props.Login.masterData.SelectedPatient.shouseno.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.shouseno))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1427,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1428,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1429,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FLATNO\",\n      message: \"Flat No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1430,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1435,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sflatno === \"null\" || this.props.Login.masterData.SelectedPatient.sflatno.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sflatno))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1444,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"horizontal-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1445,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1447,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1448,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CURRENTADDRESS\",\n      message: \"Current Address:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1450,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1457,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1459,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REGIONNAME\",\n      message: \"Region\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1460,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1465,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sregionnametemp === \"null\" || this.props.Login.masterData.SelectedPatient.sregionnametemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sregionnametemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1474,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1475,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1476,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DISTRICTNAME\",\n      message: \"District\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1477,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1482,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sdistrictnametemp === \"null\" || this.props.Login.masterData.SelectedPatient.sdistrictnametemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sdistrictnametemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1491,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1492,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1493,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CITY\",\n      message: \"City\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1494,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1499,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.scitynametemp === \"null\" || this.props.Login.masterData.SelectedPatient.scitynametemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.scitynametemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1508,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1509,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1510,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_POSTALCODE\",\n      message: \"PostalCode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1511,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1516,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.spostalcodetemp === null || this.props.Login.masterData.SelectedPatient.spostalcodetemp === \"\" ? \"-\" : this.props.Login.masterData.SelectedPatient.spostalcodetemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1526,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1527,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1528,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_STREET\",\n      message: \"Street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1529,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1534,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sstreettemp === \"null\" || this.props.Login.masterData.SelectedPatient.sstreettemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sstreettemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1543,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1544,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1545,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_HOUSENO\",\n      message: \"HouseNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1546,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1551,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.shousenotemp === \"null\" || this.props.Login.masterData.SelectedPatient.shousenotemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.shousenotemp))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1560,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1561,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1562,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_FLATNO\",\n      message: \"FlatNo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1568,\n        columnNumber: 31\n      }\n    }, this.props.Login.masterData.SelectedPatient.sflatnotemp === \"null\" || this.props.Login.masterData.SelectedPatient.sflatnotemp.length === 0 ? \"-\" : this.props.Login.masterData.SelectedPatient.sflatnotemp)))))) : \"\"))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      className: this.props.Login.openSolidAdvFilter ? \"wide-popup\" : \"\" // operation={this.props.Login.operation}\n      ,\n      size: this.props.Login.loadEsign ? \"lg\" : this.props.Login.openSolidAdvFilter ? \"xl\" : this.props.Login.patientHistory ? \"xl\" : \"lg\",\n      operation: this.props.Login.openSolidAdvFilter ? \"\" : this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.Login.openSolidAdvFilter ? this.onSaveGetClick : this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      showSubmit: this.props.Login.openSolidAdvFilter ? true : false,\n      showSaveAs: this.props.Login.openSolidAdvFilter ? true : false,\n      hideSave: this.props.Login.patientHistory ? true : this.props.Login.openSolidAdvFilter ? true : false,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.openSolidAdvFilter ? \"\" : this.props.Login.openModal ? mandatoryFields : \"\",\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1693,\n          columnNumber: 17\n        }\n      }) : this.props.Login.openSolidAdvFilter ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1701,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          \"margin-top\": \"14px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1702,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"npatientfiltercode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_PATIENTFILTER\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_PATIENTFILTER\"\n        }),\n        options: this.props.Login.masterData.patientFilerList,\n        value: this.state.selectedRecord.npatientfiltercode !== undefined ? this.state.selectedRecord.npatientfiltercode : this.props.Login.masterData.SelectedPatientFilterType && {\n          \"label\": this.props.Login.masterData.SelectedPatientFilterType.spatientfiltername,\n          \"value\": this.props.Login.masterData.SelectedPatientFilterType.npatientfiltercode\n        },\n        isMandatory: false,\n        required: true,\n        isClearable: false,\n        isMulti: false,\n        isSearchable: false,\n        isDisabled: false,\n        closeMenuOnSelect: true,\n        onChange: event => this.onComboChange(event, 'npatientfiltercode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1703,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1720,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CustomSwitch, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_\" + this.props.Login.masterData.SelectedPatientFilterType.sfilterstatus.toUpperCase()\n        }),\n        type: \"switch\",\n        name: \"nfilterstatus\",\n        onChange: event => this.onInputOnChange(event, 'nfilterstatus'),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_TRANSACTIONSTATUSACTIVE\"\n        }),\n        defaultValue: this.props.Login.masterData.SelectedPatientFilterType[\"nfilterstatus\"] === transactionStatus.YES ? true : false,\n        isMandatory: false,\n        required: false,\n        checked: this.props.Login.masterData.SelectedPatientFilterType[\"nfilterstatus\"] === transactionStatus.YES ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1721,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1733,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FilterQueryBuilder //fields={Fields}\n      , {\n        fields: this.state.fields,\n        queryArray: this.state.queryArray,\n        skip: this.state.kendoSkip,\n        take: this.state.kendoTake,\n        onChange: this.onChange,\n        tree: this.props.Login.tree !== undefined ? this.props.Login.tree : this.state.selectedRecord.tree // config={this.state.Patconfigs}\n        ,\n        gridColumns: this.slideList,\n        filterData: this.props.Login.slideResult || [],\n        handlePageChange: this.handlePageChange,\n        static: true,\n        userInfo: this.props.Login.userInfo,\n        updateStore: this.props.updateStore // controlMap={this.state.controlMap}\n        // dataState={this.state.dataState}\n        // dataStateChange={this.dataStateChange}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1734,\n          columnNumber: 21\n        }\n      })), this.props.Login.openAlertModal && /*#__PURE__*/React.createElement(AlertModal, {\n        openAlertModal: this.props.Login.openAlertModal,\n        modalTitle: \"IDS_ENTERQUERYNAME\",\n        closeModal: () => {\n          let selectedRecord = this.state.selectedRecord;\n          selectedRecord[\"QueryName\"] = undefined;\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openAlertModal: false,\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        },\n        onSaveClick: this.handleSaveFilterClick,\n        modalBody: /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1775,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1776,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(FormInput, {\n          label: this.props.intl.formatMessage({\n            id: \"IDS_QUERYNAME\"\n          }),\n          name: \"QueryName\",\n          type: \"text\",\n          onChange: event => this.onInputOnChange(event),\n          placeholder: this.props.intl.formatMessage({\n            id: \"IDS_QUERYNAME\"\n          }),\n          value: this.state.selectedRecord.QueryName ? this.state.selectedRecord.QueryName : this.props.Login.QueryName ? this.props.Login.QueryName : \"\" //   value={this.state.selectedRecord.QueryName ? this.state.selectedRecord.QueryName : this.state.selectedRecord.npatientfiltercode ? this.state.selectedRecord.npatientfiltercode.label : \"\"}\n          // value={this.props.Login.masterData.SelectedPatientFilterType.spatientfiltername ===\"Create New Query\"?this.state.selectedRecord.QueryName :this.state.selectedRecord.npatientfiltercode.label}\n          ,\n          isMandatory: true,\n          required: true,\n          maxLength: \"30\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1777,\n            columnNumber: 29\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1757,\n          columnNumber: 21\n        }\n      })) : this.props.Login.patientHistory ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1796,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1797,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1798,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_PATIENT\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1799,\n          columnNumber: 25\n        }\n      }), this.props.Login.masterData.SelectedPatient.spatientname)), /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1806,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DataGrid //   key=\"testsectionkey\"\n      //   primaryKeyField=\"npreregno\"\n      , {\n        expandField: \"expanded\",\n        handleExpandChange: this.handleExpandChange // dataResult={this.props.Login.masterData.patientHistorydetails &&\n        //     this.props.Login.masterData.patientHistory && process(\n        //          this.props.Login['patienthist'] \n        //         || [],\n        //         this.state.dataState\n        //             ? this.state.dataState : { skip: 0, take: 10 })} \n        ,\n        dataResult: this.props.Login.masterData.patientHistory && process(this.props.Login.masterData.patientHistory || [], this.state.dataState ? this.state.dataState : {\n          skip: 0,\n          take: 10\n        }),\n        dataState: this.state.dataState ? this.state.dataState : {\n          skip: 0,\n          take: 10\n        },\n        dataStateChange: this.dataStateChange,\n        extractedColumnList: this.extractedColumnList,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        pageable: true,\n        scrollable: 'scrollable',\n        hideColumnFilter: false,\n        selectedId: 0,\n        hasChild: true,\n        childMappingField: 'npreregno',\n        childColumnList: [{\n          \"idsName\": \"IDS_TESTNAME\",\n          \"dataField\": \"stestsynonym\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_PARAMETERNAME\",\n          \"dataField\": \"sparametersynonym\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_RESULT\",\n          \"dataField\": \"sfinal\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_PASSFLAG\",\n          \"dataField\": \"sgradename\",\n          \"width\": \"200px\"\n        }],\n        childList: this.state.childListMap3 //  activeTabName={\"IDS_NEEDTESTINITIATE\"}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1807,\n          columnNumber: 23\n        }\n      }))) : /*#__PURE__*/React.createElement(AddPatient, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        handleDateChange: this.handleDateChange,\n        genderList: this.props.Login.genderList || [],\n        cityList: this.props.Login.cityList || [],\n        countryList: this.props.Login.countryList || [],\n        selectedPatient: this.props.Login.masterData.SelectedPatient || {},\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        regionList: this.props.Login.regionList || [],\n        districtList: this.props.Login.districtList || [],\n        districtListTemp: this.props.Login.districtListTemp || [],\n        cityListTemp: this.props.Login.cityListTemp || [],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1847,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1671,\n        columnNumber: 11\n      }\n    }) : \"\");\n  } // handleExpandChange=()=>{\n  // }\n\n\n  componentDidUpdate(previousProps) {\n    // let { fields,selectedRecord,userRoleControlRights, controlMap, patientCaseTypeList} = this.state;\n    // let bool = false;\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      // bool=true;\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      }); // selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      let fields = this.state.fields;\n      let queryBuilderGender = [];\n      let queryBuilderCity = [];\n      let queryBuilderCountry = [];\n      let queryBuilderRegion = []; // let queryBuilderDistrict=[];\n\n      this.props.Login.masterData.genderList && this.props.Login.masterData.genderList.map(item => queryBuilderGender.push({\n        \"value\": item.ngendercode,\n        \"title\": item.sgendername\n      }));\n      this.props.Login.masterData.cityList && this.props.Login.masterData.cityList.map(item => queryBuilderCity.push({\n        \"value\": item.ncitycode,\n        \"title\": item.scityname\n      }));\n      this.props.Login.masterData.countryList && this.props.Login.masterData.countryList.map(item => queryBuilderCountry.push({\n        \"value\": item.ncountrycode,\n        \"title\": item.scountryname\n      }));\n      this.props.Login.masterData.regionList && this.props.Login.masterData.regionList.map(item => queryBuilderRegion.push({\n        \"value\": item.nregioncode,\n        \"title\": item.sregionname\n      })); // this.props.Login.masterData.districtList && this.props.Login.masterData.districtList.map(\n      //   (item)=>queryBuilderDistrict.push({\"value\":item.ndistrictcode ,\"title\":item.sdistrictname})\n      // )\n      //this.setState({ queryArray: queryArray });\n\n      fields = { ...fields,\n        // \"patientmaster.ngendercode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_GENDER\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": queryBuilderGender\n        //   }\n        // },\n        // \"patientmaster.ncitycode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_CITY\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": queryBuilderCity\n        //   }\n        // },\n        \"patientmaster.ncountrycode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_COUNTRY\"\n          }),\n          \"type\": \"select\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"listValues\": queryBuilderCountry\n          }\n        },\n        \"patientmaster.nregioncode\": {\n          \"label\": this.props.intl.formatMessage({\n            id: \"IDS_REGIONNAME\"\n          }),\n          \"type\": \"select\",\n          \"valueSources\": [\"value\"],\n          \"fieldSettings\": {\n            \"listValues\": queryBuilderRegion\n          }\n        } // \"patientmaster.ndistrictcode\": {\n        //   \"label\": this.props.intl.formatMessage({\n        //     id: \"IDS_DISTRICTNAME\",\n        //   }),\n        //   \"type\": \"select\",\n        //   \"valueSources\": [\"value\"],\n        //   \"fieldSettings\": {\n        //     \"listValues\": queryBuilderDistrict\n        //   }\n        // }\n\n      }; // bool=true;\n\n      this.setState({\n        fields: fields\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n      const patcasetypeMap = constructOptionList(this.props.Login.masterData.PatientCaseType || [], \"npatientcasetypecode\", \"spatientcasetypename\", undefined, undefined, false);\n      const patientCaseTypeList = patcasetypeMap.get(\"OptionList\");\n      const patcaseFiltertypeMap = constructOptionList(this.props.Login.masterData.patientFilterType || [], \"npatientfiltercode\", \"spatientfiltername\", undefined, undefined, false);\n      const patientFilerList = patcaseFiltertypeMap.get(\"OptionList\");\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode); // bool=true;\n\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        patientCaseTypeList,\n        patientFilerList\n      });\n    } // if(bool){\n    //   this.setState({ \n    //     fields,selectedRecord,userRoleControlRights, controlMap, patientCaseTypeList \n    //   });\n    // }\n\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getPatientDetail,\n  getPatientComboService,\n  filterColumnData,\n  getTestParameter,\n  getPatientReport,\n  getPatientDetailsByFilterQuery,\n  getDistrictComboServices,\n  getCityComboServices,\n  filtercomboService,\n  getFilterStatusCombo,\n  getPatientHistory\n})(injectIntl(PatientMaster));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/contactmaster/PatientMaster.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faHistory","DataGrid","BasicConfig","BasicFuncs","Utils","QbUtils","callService","crudMaster","validateEsignCredential","updateStore","getPatientDetail","getPatientComboService","filterColumnData","getTestParameter","getPatientReport","getPatientDetailsByFilterQuery","getDistrictComboServices","getCityComboServices","filtercomboService","getFilterStatusCombo","getPatientHistory","DEFAULT_RETURN","showEsign","getControlMap","validatePhoneNumber","ageCalculate","formatInputDate","validateEmail","formatDate","constructOptionList","rearrangeDateFormat","formatInputDateWithoutT","convertDateValuetoString","sortData","transactionStatus","ListMaster","SlideOutModal","ReadOnlyText","ContentPanel","AddPatient","Esign","ConfirmMessage","FilterQueryBuilder","FormSelectSearch","DateTimePicker","BreadcrumbComponent","Affix","PatientMasterFilter","AlertModal","FormInput","merge","CustomSwitch","process","mapStateToProps","state","Login","queryBuilderFormat","queryString","mongodbFormat","sqlFormat","getTree","checkTree","loadTree","uuid","InitialConfig","conjunctions","AND","OR","operators1","operators","proximity","between","textSeparators","widgets","date","dateFormat","valueFormat","types","boolean","widgetProps","hideOperator","operatorInlineLabel","localeSettings","locale","moment","valueLabel","valuePlaceholder","operatorLabel","fieldPlaceholder","operatorPlaceholder","deleteLabel","addGroupLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","notLabel","funcLabel","valueSourcesPopupTitle","removeRuleConfirmOptions","title","okText","okType","removeGroupConfirmOptions","settings1","settings","field","valueSourcesInfo","value","label","widget","func","maxNesting","canLeaveEmptyGroup","shouldCreateEmptyGroup","showErrorMessage","customFieldSelectProps","showSearch","funcs","config","fields","fields1","PatientMaster","Component","constructor","props","handleClick","inputData","userinfo","userInfo","primarykey","YES","masterData","Patconfigs","dataStateChange","event","setState","dataState","handlePageChange","kendoSkip","skip","kendoTake","take","openFilter","showFilter","updateInfo","typeName","data","closeFilter","onFilterSubmit","selectedRecord","undefined","FromDate","ToDate","searchRef","current","inputParam","classUrl","methodUrl","isClearSearch","displayname","SelectedPatientCaseType","npatientcasetypecode","item","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deletePatient","SelectedPatient","closeModal","loadEsign","openModal","openSolidAdvFilter","slideResult","tree","openAlertModal","operation","districtList","districtListTemp","cityListTemp","cityList","selectedId","onComboChange","comboData","fieldName","optionlistname","dispalyname","sdisplayname","nregioncode","nregioncodetemp","ndistrictcode","ndistrictcodetemp","npatientfiltercode","onNumericInputOnChange","name","onChange","immutableTree","onInputOnChange","target","type","checked","NO","nfilterstatus","nneedcurrentaddress","sflatnotemp","sflatno","shousenotemp","shouseno","spostalcodetemp","spostalcode","sstreettemp","sstreet","ncitycodetemp","ncitycode","handleDateChange","dateName","dateValue","age","onSaveGetClick","saveType","screenData","filterquery","patientfilter","patient","sfilterstatus","includes","paramFlag","QueryName","SelectedPatientFilterType","spatientfiltername","userRoleControlRights","nformcode","ncontrolCode","warn","handleSaveFilterClick","displayName","onSaveClick","formRef","patientData","postParam","inputListName","selectedObject","primaryKeyField","spatientid","sfirstname","slastname","sfathername","ddob","sage","ngendercode","ncountrycode","saddress","sdistrict","sphoneno","smobileno","semail","spassportno","srefid","sexternalid","nneedmigrant","sgendername","nsitecode","nmastersitecode","patientFieldList","map","NA","Date","selectedPatient","primaryKeyValue","fetchUrl","fecthInputObject","currentdate","screenName","validateEsign","sreason","nreasoncode","spredefinedreason","password","handleExpandChange","row","childListMap3","Map","keylst","patientHistorydetails","key","npreregno","i","set","parseInt","reloadData","spatientcasetypename","Object","keys","x","masterStatus","error","patientCaseTypeList","controlMap","createRef","emailRef","searchFieldList","columnList","idsName","dataField","width","childColumnList","slideList","filed","getDerivedStateFromProps","render","addId","has","get","ncontrolcode","editId","patientReportId","filterParam","addParam","primaryKeyName","editParam","mandatoryFields","mandatory","mandatoryLabel","controlType","extractedColumnList","genericLabel","slanguagetypecode","fromDate","toDate","breadCrumbData","push","filterFromdate","filterToDay","breadCrumbFrom","breadCrumbto","searchedData","PatientList","user","length","spatientname","indexOf","sdob","sdisplaystatus","scountryname","sregionname","sdistrictname","scityname","sregionnametemp","sdistrictnametemp","scitynametemp","patientHistory","patientFilerList","toUpperCase","queryArray","genderList","countryList","currentTime","regionList","componentDidUpdate","previousProps","queryBuilderGender","queryBuilderCity","queryBuilderCountry","queryBuilderRegion","patcasetypeMap","PatientCaseType","patcaseFiltertypeMap","patientFilterType","values"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { injectIntl, FormattedMessage } from \"react-intl\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt, faHistory } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n//import DataGrid from \"../../components/data-grid/data-grid.component\";\r\n//import Fields from \"../../components/PatientMasterFields.json\";\r\nimport {\r\n  BasicConfig, BasicFuncs,\r\n  Utils as QbUtils,\r\n} from \"@react-awesome-query-builder/ui\";\r\nimport {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getPatientDetail,\r\n  getPatientComboService,\r\n  filterColumnData,\r\n  getTestParameter,\r\n  getPatientReport, getPatientDetailsByFilterQuery, getDistrictComboServices, getCityComboServices, filtercomboService, getFilterStatusCombo, getPatientHistory\r\n} from \"../../actions\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport {\r\n  showEsign,\r\n  getControlMap,\r\n  validatePhoneNumber,\r\n  ageCalculate,\r\n  formatInputDate,\r\n  validateEmail,\r\n  formatDate, constructOptionList, rearrangeDateFormat, formatInputDateWithoutT, convertDateValuetoString, sortData\r\n} from \"../../components/CommonScript\";\r\nimport { transactionStatus } from \"../../components/Enumeration\";\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport { ReactComponent as Reports } from \"../../assets/image/report-Icon.svg\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport AddPatient from \"./AddPatient\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\n// import ReactTooltip from \"react-tooltip\";\r\n//import { process } from \"@progress/kendo-data-query\";\r\nimport FilterQueryBuilder from \"../../components/FilterQueryBuilder\";\r\n//import AddFilteredPatient from \"./AddFilteredPatient\";\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\nimport PatientMasterFilter from './PatientMasterFilter';\r\nimport AlertModal from '../dynamicpreregdesign/AlertModal';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport merge from \"lodash/merge\";\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { process } from \"@progress/kendo-data-query\";\r\n//import Filtercomponent from '../../components/Filtercomponent';\r\n// import FilterDemo from \"./FilterDemo\";\r\n// import \"antd/dist/antd.css\";\r\n// import 'react-awesome-query-builder/css/styles.scss';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\nconst { queryBuilderFormat, queryString, mongodbFormat, sqlFormat, getTree, checkTree, loadTree, uuid } = QbUtils;\r\n\r\n\r\nconst InitialConfig = BasicConfig;\r\nconst conjunctions = {\r\n  AND: InitialConfig.conjunctions.AND,\r\n  OR: InitialConfig.conjunctions.OR,\r\n};\r\nconst operators1 = {\r\n  ...InitialConfig.operators\r\n}\r\ndelete operators1.proximity\r\nconst operators = {\r\n  ...operators1,\r\n  between: {\r\n    ...operators1.between,\r\n    textSeparators: [\r\n      \"from\",\r\n      \"to\"\r\n    ],\r\n  }\r\n};\r\nconst widgets = {\r\n  ...InitialConfig.widgets,\r\n  date: {\r\n    ...InitialConfig.widgets.date,\r\n    dateFormat: \"DD.MM.YYYY\",\r\n    valueFormat: \"YYYY-MM-DD\",\r\n  }\r\n};\r\nconst types = {\r\n  ...InitialConfig.types,\r\n  boolean: merge(InitialConfig.types.boolean, {\r\n    widgets: {\r\n      boolean: {\r\n        widgetProps: {\r\n          hideOperator: true,\r\n          operatorInlineLabel: \"is\",\r\n        }\r\n      },\r\n    },\r\n  }),\r\n};\r\nconst localeSettings = {\r\n  locale: {\r\n    moment: \"ru\",\r\n  },\r\n  valueLabel: \"Values\",\r\n  valuePlaceholder: \"Values\",\r\n  operatorLabel: \"Operator\",\r\n  fieldPlaceholder: \"Select field\",\r\n  operatorPlaceholder: \"Select operator\",\r\n  deleteLabel: null,\r\n  addGroupLabel: \"Add group\",\r\n  addRuleLabel: \"Add rule\",\r\n  addSubRuleLabel: \"Add sub rule\",\r\n  delGroupLabel: null,\r\n  notLabel: \"Not\",\r\n  funcLabel: \"Function\",\r\n  valueSourcesPopupTitle: \"Select value source\",\r\n  removeRuleConfirmOptions: {\r\n    title: \"Are you sure delete this rule?\",\r\n    okText: \"Yes\",\r\n    okType: \"danger\",\r\n  },\r\n  removeGroupConfirmOptions: {\r\n    title: \"Are you sure delete this group?\",\r\n    okText: \"Yes\",\r\n    okType: \"danger\",\r\n  },\r\n};\r\nconst settings1 = { ...InitialConfig.settings }\r\ndelete settings1.field\r\nconst settings = {\r\n  ...settings1,\r\n  ...localeSettings,\r\n\r\n  valueSourcesInfo: {\r\n    value: {\r\n      label: \"Value\"\r\n    }\r\n    ,\r\n    field: {\r\n      label: \"Field\",\r\n      widget: \"field\",\r\n    },\r\n    func: {\r\n      label: \"Function\",\r\n      widget: \"func\",\r\n    }\r\n  },\r\n  maxNesting: 5,\r\n  canLeaveEmptyGroup: true,\r\n  shouldCreateEmptyGroup: false,\r\n  showErrorMessage: true,\r\n  customFieldSelectProps: {\r\n    showSearch: true\r\n  },\r\n};\r\nconst funcs = {\r\n  ...BasicFuncs\r\n};\r\nconst config = {\r\n  ...InitialConfig, conjunctions,\r\n  operators,\r\n  widgets,\r\n  types,\r\n  settings,\r\n  funcs,\r\n  fields: {}\r\n\r\n};\r\nconst fields1 = {\r\n  \"patientmaster.sfirstname\": {\r\n    \"label\": \"IDS_FIRSTNAME\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\", \"func\"],\r\n\r\n    \"mainWidgetProps\": {\r\n      \"valueLabel\": \"Name\",\r\n      \"valuePlaceholder\": \"Enter First Name\"\r\n    }\r\n\r\n  },\r\n  \"patientmaster.slastname\": {\r\n    \"label\": \"IDS_LASTNAME\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\", \"func\"],\r\n    \"mainWidgetProps\": {\r\n      \"valueLabel\": \"Name\",\r\n      \"valuePlaceholder\": \"Enter Last Name\"\r\n\r\n    }\r\n  },\r\n\r\n  \"patientmaster.sfathername\": {\r\n    \"label\": \"IDS_FATHERNAME\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\", \"func\"],\r\n    \"mainWidgetProps\": {\r\n      \"valueLabel\": \"Name\",\r\n      \"valuePlaceholder\": \"Enter Father Name\"\r\n\r\n    }\r\n  },\r\n\r\n  \"patientmaster.ngendercode\": {\r\n    \"label\": \"IDS_GENDER\",\r\n    \"type\": \"select\",\r\n    \"valueSources\": [\"value\"],\r\n    \"fieldSettings\": {\r\n      \"listValues\": [\r\n        { \"value\": \"1\", \"title\": \"Male\" },\r\n        { \"value\": \"2\", \"title\": \"Female\" },\r\n        { \"value\": \"3\", \"title\": \"Others\" }\r\n      ]\r\n    }\r\n  },\r\n  \"patientmaster.ddob\": {\r\n    \"label\": \"IDS_DATEOFBIRTH\",\r\n    \"type\": \"date\",\r\n    \"valueSources\": [\"value\"]\r\n  },\r\n\r\n  \"patientmaster.sage\": {\r\n    \"label\": \"IDS_AGE\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\", \"func\"],\r\n    \"mainWidgetProps\": {\r\n      \"valueLabel\": \"Age\",\r\n      \"valuePlaceholder\": \"Enter the Age\"\r\n\r\n    }\r\n  },\r\n\r\n  \"patientmaster.spatientid\": {\r\n    \"label\": \"IDS_PATIENTID\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\", \"func\"],\r\n    \"mainWidgetProps\": {\r\n      \"valueLabel\": \"Name\",\r\n      \"valuePlaceholder\": \"Enter Patient Id\"\r\n\r\n    }\r\n  },\r\n\r\n  \"patientmaster.sphoneno\": {\r\n    \"label\": \"IDS_PHONENO\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\"],\r\n    \"fieldSettings\": {\r\n      \"min\": 0,\r\n      \"valuePlaceholder\": \"Enter Phoneno\"\r\n\r\n    }\r\n  },\r\n\r\n  \"patientmaster.smobileno\": {\r\n    \"label\": \"IDS_MOBILENO\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\"],\r\n    \"fieldSettings\": {\r\n      \"min\": 0,\r\n      \"valuePlaceholder\": \"Enter Mobileno\"\r\n\r\n    }\r\n  },\r\n\r\n  \"patientmaster.semail\": {\r\n    \"label\": \"IDS_EMAIL\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\"],\r\n    \"fieldSettings\": {\r\n      \"min\": 0,\r\n      \"valuePlaceholder\": \"Enter Email\"\r\n\r\n    }\r\n  },\r\n\r\n  \"patientmaster.srefid\": {\r\n    \"label\": \"IDS_REFERENCEID\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\"],\r\n    \"fieldSettings\": {\r\n      \"min\": 0,\r\n      \"valuePlaceholder\": \"Enter ReferenceId\"\r\n\r\n    }\r\n  },\r\n\r\n  \"patientmaster.spassportno\": {\r\n    \"label\": \"IDS_PASSPORTNO\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\"],\r\n    \"fieldSettings\": {\r\n      \"min\": 0,\r\n      \"valuePlaceholder\": \"Enter Passportno\"\r\n\r\n    }\r\n  },\r\n\r\n  \"patientmaster.sexternalid\": {\r\n    \"label\": \"IDS_EXTERNALID\",\r\n    \"type\": \"text\",\r\n    \"valueSources\": [\"value\"],\r\n    \"fieldSettings\": {\r\n      \"min\": 0,\r\n      \"valuePlaceholder\": \"Enter ExternalID\"\r\n\r\n    }\r\n  }\r\n}\r\n\r\nclass PatientMaster extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    Object.keys(config.operators).map(x => {\r\n      config.operators[x]['label'] = this.props.intl.formatMessage({ id: config.operators[x]['label'] })\r\n    })\r\n\r\n    Object.keys(config['funcs']).map(x => {\r\n      config['funcs'][x]['label'] = this.props.intl.formatMessage({ id: config['funcs'][x]['label'] })\r\n    })\r\n\r\n    Object.keys(fields1).map(x => {\r\n      fields1[x]['label'] = this.props.intl.formatMessage({ id: fields1[x]['label'] })\r\n    })\r\n\r\n    this.state = {\r\n      masterStatus: \"\",\r\n      error: \"\",\r\n      selectedRecord: {},\r\n      operation: \"\",\r\n      selectedPatient: undefined,\r\n      screenName: undefined,\r\n      userRoleControlRights: [],\r\n      patientCaseTypeList: [],\r\n      controlMap: new Map(),\r\n      isClearSearch: false,\r\n      dataState: { skip: 0, take: 5 },\r\n      tree: undefined,\r\n      config: undefined,\r\n      kendoSkip: 0,\r\n      kendoTake: 5,\r\n      childListMap3: [],\r\n      fields: {\r\n        \"patientmaster.sfirstname\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_FIRSTNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\":  this.props.intl.formatMessage({\r\n              id: \"IDS_FIRSTNAME\"\r\n            })\r\n          }\r\n\r\n        },\r\n        \"patientmaster.slastname\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_LASTNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": this.props.intl.formatMessage({\r\n              id: \"IDS_LASTNAME\"\r\n            })\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.sfathername\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_FATHERNAME\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": this.props.intl.formatMessage({\r\n              id: \"IDS_FATHERNAME\"\r\n            })\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.ngendercode\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_GENDER\",\r\n          }),\r\n          \"type\": \"select\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"listValues\": [\r\n              { \"value\": \"1\", \"title\": this.props.intl.formatMessage({\r\n                id: \"IDS_MALE\",\r\n              })},\r\n              { \"value\": \"2\", \"title\":this.props.intl.formatMessage({\r\n                id: \"IDS_FEMALE\",\r\n              }) },\r\n              { \"value\": \"3\", \"title\": this.props.intl.formatMessage({\r\n                id: \"IDS_OTHERS\",\r\n              }) }\r\n            ]\r\n          }\r\n        },\r\n\r\n        \"patientmaster.ddob\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_DATEOFBIRTH\",\r\n          }),\r\n          \"type\": \"date\",\r\n          \"valueSources\": [\"value\"]\r\n        },\r\n\r\n        \"patientmaster.sage\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_AGE\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Age\",\r\n            \"valuePlaceholder\":  this.props.intl.formatMessage({\r\n              id: \"IDS_AGE\",\r\n            })\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.spatientid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PATIENTID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\", \"func\"],\r\n          \"mainWidgetProps\": {\r\n            \"valueLabel\": \"Name\",\r\n            \"valuePlaceholder\": this.props.intl.formatMessage({\r\n              id: \"IDS_PATIENTID\",\r\n            })\r\n          }\r\n        },\r\n        \"patientmaster.sphoneno\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PHONENO\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": this.props.intl.formatMessage({\r\n              id: \"IDS_PHONENO\",\r\n            })\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.smobileno\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_MOBILENO\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": this.props.intl.formatMessage({\r\n              id: \"IDS_MOBILENO\"\r\n            })\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.semail\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_EMAIL\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": this.props.intl.formatMessage({\r\n              id: \"IDS_EMAIL\"\r\n            })\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.srefid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_REFERENCEID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\": this.props.intl.formatMessage({\r\n              id: \"IDS_REFERENCEID\"\r\n            })\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.spassportno\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_PASSPORTNO\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\":this.props.intl.formatMessage({\r\n              id: \"IDS_PASSPORTNO\"\r\n            })\r\n\r\n          }\r\n        },\r\n\r\n        \"patientmaster.sexternalid\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_EXTERNALID\",\r\n          }),\r\n          \"type\": \"text\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"min\": 0,\r\n            \"valuePlaceholder\":  this.props.intl.formatMessage({\r\n              id: \"IDS_EXTERNALID\"\r\n            })\r\n\r\n          }\r\n        }\r\n      },\r\n      Patconfigs: {\r\n        ...config,\r\n        settings: {\r\n          ...config.settings, notLabel: this.props.intl.formatMessage({ id: \"IDS_NOT\" }),\r\n          valueLabel: this.props.intl.formatMessage({ id: \"IDS_VALUE\" }),\r\n          valuePlaceholder: this.props.intl.formatMessage({ id: \"IDS_VALUE\" }),\r\n          operatorLabel: this.props.intl.formatMessage({ id: \"IDS_OPERATOR\" }),\r\n          fieldPlaceholder: this.props.intl.formatMessage({ id: \"IDS_SELECTFIELD\" }),\r\n          operatorPlaceholder: this.props.intl.formatMessage({ id: \"IDS_SELECTOPERATOR\" }),\r\n          addGroupLabel: this.props.intl.formatMessage({ id: \"IDS_ADDGROUP\" }),\r\n          addRuleLabel: this.props.intl.formatMessage({ id: \"IDS_ADDRULE\" }),\r\n          addSubRuleLabel: this.props.intl.formatMessage({ id: \"IDS_ADDSUBRULE\" }),\r\n          valueSourcesPopupTitle: this.props.intl.formatMessage({ id: \"IDS_SELECTVALUESOURCE\" }),\r\n          funcLabel: this.props.intl.formatMessage({ id: \"IDS_FUNCTION\" }),\r\n          valueSourcesInfo: {\r\n            field: { label: this.props.intl.formatMessage({ id: \"IDS_FIELD\" }), widget: 'field' },\r\n            func: { label: this.props.intl.formatMessage({ id: \"IDS_FUNCTION\" }), widget: 'func' },\r\n            value: { label: this.props.intl.formatMessage({ id: \"IDS_VALUE\" }) }\r\n          },\r\n          removeRuleConfirmOptions: {\r\n            title: this.props.intl.formatMessage({ id: \"IDS_AREYOUSUREDELETETHISRULE\" }),\r\n            okText: this.props.intl.formatMessage({ id: \"IDS_YES\" }),\r\n            okType: \"danger\",\r\n          },\r\n          removeGroupConfirmOptions: {\r\n            title: this.props.intl.formatMessage({ id: \"IDS_AREYOUSUREDELETETHISGROUP\" }),\r\n            okText: this.props.intl.formatMessage({ id: \"IDS_YES\" }),\r\n            okType: \"danger\",\r\n          }\r\n        }, conjunctions: {\r\n          AND: { ...config['conjunctions']['AND'], label: this.props.intl.formatMessage({ id: \"IDS_AND\" }) },\r\n          OR: { ...config['conjunctions']['OR'], label: this.props.intl.formatMessage({ id: \"IDS_OR\" }) }\r\n        },\r\n        fields: fields1//,settings:{...config.settings,notLabel:this.props.intl.formatMessage({id: \"NOT\"})}\r\n      },\r\n\r\n\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.emailRef = React.createRef();\r\n    this.confirmMessage = new ConfirmMessage();\r\n\r\n    this.patientFieldList = [\r\n      \"sfirstname\",\r\n      \"slastname\",\r\n      \"sfathername\",\r\n      \"ddob\",\r\n      \"sage\",\r\n      \"saddress\",\r\n      \"sdistrict\",\r\n      \"spostalcode\",\r\n      \"sphoneno\",\r\n      \"smobileno\",\r\n      \"semail\",\r\n      \"srefid\",\r\n      \"spassportno\",\r\n      \"sexternalid\",\r\n      \"sstreet\", \"sstreettemp\", \"shouseno\", \"shousenotemp\", \"sflatno\", \"sflatnotemp\", \"nneedmigrant\", \"nneedcurrentaddress\", \"spostalcodetemp\", \"sregionnametemp\", \"sregionname\", \"scitynametemp\"\r\n    ];\r\n\r\n    this.searchFieldList = [\r\n      \"saddress\",\r\n      \"sage\",\r\n      \"sdob\",\r\n      \"sgendername\",\r\n      \"sfathername\",\r\n      \"spatientname\",\r\n      \"spatientid\",\r\n      \"sphoneno\",\r\n      \"smobileno\",\r\n      \"semail\",\r\n      \"scityname\",\r\n      \"sdistrict\",\r\n      \"scountryname\",\r\n      \"spostalcode\",\r\n      \"srefid\",\r\n      \"spassportno\",\r\n      \"sexternalid\",\r\n      \"sstreet\", \"sstreettemp\", \"shouseno\", \"shousenotemp\", \"sflatno\", \"sflatnotemp\", \"sdisplaystatus\", \"nneedcurrentaddress\", \"spostalcodetemp\", \"sregionnametemp\", \"sregionname\", \"scitynametemp\"\r\n    ];\r\n\r\n    this.columnList = [\r\n      { idsName: \"IDS_ARNO\", dataField: \"sarno\", width: \"150px\" },\r\n      { idsName: \"IDS_PRODUCT\", dataField: \"sproductname\", width: \"250px\" },\r\n      { idsName: \"IDS_SPECIFICATION\", dataField: \"sspecname\", width: \"150px\" },\r\n      {\r\n        idsName: \"IDS_SPECIMENCOLLECTIONTIME\",\r\n        dataField: \"scolleciondate\",\r\n        width: \"150px\",\r\n      },\r\n      {\r\n        idsName: \"IDS_RECEIVEDDATE\",\r\n        dataField: \"sreceiveddate\",\r\n        width: \"150px\",\r\n      },\r\n      {\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"stransdisplaystatus\",\r\n        width: \"100px\",\r\n      },\r\n    ];\r\n\r\n    this.childColumnList = [\r\n      { idsName: \"IDS_TESTNAME\", dataField: \"stestsynonym\", width: \"250px\" },\r\n      {\r\n        idsName: \"IDS_PARAMETERNAME\",\r\n        dataField: \"sparametersynonym\",\r\n        width: \"250px\",\r\n      },\r\n      { idsName: \"IDS_RESULT\", dataField: \"sresult\", width: \"150px\" },\r\n      { idsName: \"IDS_RESULTFLAG\", dataField: \"sgradename\", width: \"100px\" },\r\n      { idsName: \"IDS_RESULTDATE\", dataField: \"sentereddate\", width: \"150px\" },\r\n      {\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"stransdisplaystatus\",\r\n        width: \"100px\",\r\n      },\r\n    ];\r\n    this.slideList = [\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PATIENTID\" }), filed: \"spatientid\", width: \"250px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_FIRSTNAME\" }), filed: \"sfirstname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_LASTNAME\" }), filed: \"slastname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_FATHERNAME\" }), filed: \"sfathername\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_GENDER\" }), filed: \"sgendername\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_COUNTRY\" }), filed: \"scountryname\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_DATEOFBIRTH\" }), filed: \"sdob\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_DISTRICT\" }), filed: \"sdistrict\", width: \"100px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_POSTALCODE\" }), filed: \"spostalcode\", width: \"100px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PHONENO\" }), filed: \"sphoneno\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_MOBILENO\" }), filed: \"smobileno\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_EMAIL\" }), filed: \"semail\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_REFID\" }), filed: \"srefid\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_PASSPORTNO\" }), filed: \"spassportno\", width: \"150px\" },\r\n      { title: this.props.intl.formatMessage({ id: \"IDS_EXTERNALID\" }), filed: \"sexternalid\", width: \"150px\" },\r\n    ];\r\n\r\n\r\n\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (\r\n      props.Login.masterStatus !== \"\" &&\r\n      props.Login.masterStatus !== state.masterStatus\r\n    ) {\r\n      toast.warn(props.Login.masterStatus);\r\n      props.Login.masterStatus = \"\";\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n  handleClick = () => {\r\n    this.props.getFilterStatusCombo({\r\n      inputData: {\r\n        userinfo: this.props.Login.userInfo,\r\n        primarykey: transactionStatus.YES\r\n\r\n      },\r\n      masterData: { ...this.props.Login.masterData },\r\n      Patconfigs: this.state.Patconfigs\r\n    });\r\n  }\r\n\r\n  dataStateChange = (event) => {\r\n    this.setState({ dataState: event.dataState })\r\n  }\r\n\r\n  handlePageChange = (event) => {\r\n    this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n  };\r\n  render() {\r\n    const addId =\r\n      this.state.controlMap.has(\"AddPatient\") &&\r\n      this.state.controlMap.get(\"AddPatient\").ncontrolcode;\r\n    const editId =\r\n      this.state.controlMap.has(\"EditPatient\") &&\r\n      this.state.controlMap.get(\"EditPatient\").ncontrolcode;\r\n    const deleteId =\r\n      this.state.controlMap.has(\"DeletePatient\") &&\r\n      this.state.controlMap.get(\"DeletePatient\").ncontrolcode;\r\n    const patientReportId =\r\n      this.state.controlMap.has(\"PatientReport\") &&\r\n      this.state.controlMap.get(\"PatientReport\").ncontrolcode;\r\n\r\n    const filterParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"spatientid\",\r\n      fetchUrl: \"patient/getPatient\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo, currentdate: formatInputDate(new Date(), true) },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n\r\n    const addParam = {\r\n      screenName: \"IDS_PATIENTMASTER\",\r\n      operation: \"create\",\r\n      primaryKeyName: \"npatientcode\",\r\n      masterData: this.props.Login.masterData,\r\n      userInfo: this.props.Login.userInfo,\r\n      ncontrolcode: addId,\r\n    };\r\n    const editParam = {\r\n      screenName: \"IDS_PATIENTMASTER\",\r\n      operation: \"update\",\r\n      primaryKeyName: \"spatientid\",\r\n      masterData: this.props.Login.masterData,\r\n      userInfo: this.props.Login.userInfo,\r\n      ncontrolcode: editId,\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n    };\r\n    const mandatoryFields = [\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_FIRSTNAME\",\r\n        dataField: \"sfirstname\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_LASTNAME\",\r\n        dataField: \"slastname\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n\r\n        mandatory: true,\r\n        idsName: \"IDS_DATEOFBIRTH\",\r\n        dataField: \"ddob\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      // {\r\n      //   mandatory: true,\r\n      //   idsName: \"IDS_AGE\",\r\n      //   dataField: \"sage\",\r\n      //   mandatoryLabel: \"IDS_ENTER\",\r\n      //   controlType: \"textbox\",\r\n      // },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_GENDER\",\r\n        dataField: \"ngendercode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      // {\r\n      //   mandatory: true,\r\n      //   idsName: \"IDS_ADDRESS\",\r\n      //   dataField: \"saddress\",\r\n      //   mandatoryLabel: \"IDS_ENTER\",\r\n      //   controlType: \"textbox\",\r\n      // },\r\n      // {\r\n      //   mandatory: true,\r\n      //   idsName: \"IDS_PHONENO\",\r\n      //   dataField: \"sphoneno\",\r\n      //   mandatoryLabel: \"IDS_ENTER\",\r\n      //   controlType: \"textbox\",\r\n      // },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_COUNTRY\",\r\n        dataField: \"ncountrycode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_REGIONNAME\",\r\n        dataField: \"nregioncode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_DISTRICTNAME\",\r\n        dataField: \"ndistrictcode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CITY\",\r\n        dataField: \"ncitycode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_STREET\",\r\n        dataField: \"sstreet\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_HOUSENO\",\r\n        dataField: \"shouseno\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_FLATNO\",\r\n        dataField: \"sflatno\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURENTREGION\",\r\n        dataField: \"nregioncodetemp\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURRENTDISTRICT\",\r\n        dataField: \"ndistrictcodetemp\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURRENTCITY\",\r\n        dataField: \"ncitycodetemp\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURRENTSTREET\",\r\n        dataField: \"sstreettemp\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURRENTHOUSENO\",\r\n        dataField: \"shousenotemp\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n      {\r\n        mandatory: true,\r\n        idsName: \"IDS_CURRENTFLATNO\",\r\n        dataField: \"sflatnotemp\",\r\n        mandatoryLabel: \"IDS_ENTER\",\r\n        controlType: \"textbox\",\r\n      },\r\n    ];\r\n    this.extractedColumnList = [\r\n      { \"idsName\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n      { \"idsName\":  this.props.Login.genericLabel && this.props.Login.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_REPORTREFNO\", \"dataField\": \"sreportno\", \"width\": \"200px\"},\r\n      { \"idsName\": \"IDS_REGISTEREDDATE\", \"dataField\": \"stransactiondate\", \"width\": \"250px\" },\r\n    ]\r\n    let fromDate = \"\";\r\n    let toDate = \"\";\r\n    let breadCrumbData = [];\r\n    if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\r\n      fromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n      toDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate)\r\n\r\n      breadCrumbData.push(\r\n        {\r\n          \"label\": \"IDS_FROM\",\r\n          \"value\": this.props.Login.masterData.filterFromdate !== undefined ? convertDateValuetoString(this.props.Login.masterData.filterFromdate, this.props.Login.masterData.filterToDay, this.props.Login.userInfo).breadCrumbFrom : convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo).breadCrumbFrom\r\n        },\r\n        {\r\n          \"label\": \"IDS_TO\",\r\n          \"value\": this.props.Login.masterData.filterToDay !== undefined ? convertDateValuetoString(this.props.Login.masterData.filterFromdate, this.props.Login.masterData.filterToDay, this.props.Login.userInfo).breadCrumbto : convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo).breadCrumbto\r\n        },\r\n      );\r\n    }\r\n    if (this.props.Login.masterData && this.props.Login.masterData.SelectedPatientCaseType) {\r\n      breadCrumbData.push(\r\n        {\r\n          \"label\": \"IDS_PATIENTCASETYPE\",\r\n          \"value\": this.props.Login.masterData.SelectedPatientCaseType ? this.props.Login.masterData.SelectedPatientCaseType.spatientcasetypename : '-'\r\n        }\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap  mtop-4 mtop-fixed-breadcrumb\">\r\n          <Affix top={53}>\r\n            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n          </Affix>\r\n          <Row noGutters>\r\n            <Col md={4}>\r\n              <ListMaster\r\n                screenName={this.props.intl.formatMessage({\r\n                  id: \"IDS_PATIENTMASTER\",\r\n                })}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={\r\n                  this.props.Login.masterData.searchedData ||\r\n                  this.props.Login.masterData.PatientList\r\n                }\r\n                getMasterDetail={(user) =>\r\n                  this.props.getPatientDetail(\r\n                    user,\r\n                    this.props.Login.userInfo,\r\n                    this.props.Login.masterData\r\n                  )\r\n                }\r\n                selectedMaster={this.props.Login.masterData.SelectedPatient}\r\n                primaryKeyField=\"spatientid\"\r\n                mainField=\"spatientname\"\r\n                SecondaryField={true}\r\n                firstField=\"sage\"\r\n                secondField=\"sgendername\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                addId={addId}\r\n                searchRef={this.searchRef}\r\n                reloadData={this.reloadData}\r\n                openModal={() => this.props.getPatientComboService(addParam)}\r\n                isMultiSelecct={false}\r\n                hidePaging={false}\r\n                isClearSearch={this.props.Login.isClearSearch}\r\n                showMicIcon={true}\r\n                showFilterIcon={true}\r\n                showSolidFilterIcon={true}\r\n                handleClick={this.handleClick}\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}\r\n                showFilter={this.props.Login.showFilter}\r\n                filterComponent={[\r\n                  {\r\n                    \"IDS_DATEFILTER\": <PatientMasterFilter\r\n                      fromDate={this.props.Login.masterData && this.props.Login.masterData.FromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate) : \"\"}\r\n                      toDate={this.props.Login.masterData && this.props.Login.masterData.ToDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate) : \"\"}\r\n                      selectedRecord={this.state.selectedRecord || {}}\r\n                      userInfo={this.props.Login.userInfo}\r\n                      handleDateChange={this.handleDateChange}\r\n                      onComboChange={this.onComboChange}\r\n                      patientcasetypeList={this.state.patientCaseTypeList || []}\r\n                      selectedProjectcasetype={this.props.Login.masterData.SelectedPatientCaseType}\r\n                    />\r\n                  }\r\n                ]}\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              <ContentPanel className=\"panel-main-content\">\r\n                <Card className=\"border-0\">\r\n                  {this.props.Login.masterData.PatientList &&\r\n                    this.props.Login.masterData.PatientList.length > 0 &&\r\n                    this.props.Login.masterData.SelectedPatient ? (\r\n                    <>\r\n                      <Card.Header>\r\n                        {/* <ReactTooltip\r\n                          place=\"bottom\"\r\n                          globalEventOff=\"click\"\r\n                          id=\"tooltip_list_wrap\"\r\n                        /> */}\r\n                        <Card.Title className=\"product-title-main\">\r\n                          {\r\n                            this.props.Login.masterData.SelectedPatient.spatientname\r\n                          }\r\n                        </Card.Title>\r\n                        <Card.Subtitle>\r\n                          <div className=\"d-flex product-category\">\r\n                            <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                            <div className=\"d-inline\">\r\n                              <Nav.Link\r\n                                name=\"editPatient\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(editId) === -1\r\n                                }\r\n                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_EDIT\",\r\n                                })}\r\n                                //   data-for=\"tooltip_list_wrap\"\r\n                                onClick={() =>\r\n                                  this.props.getPatientComboService(editParam)\r\n                                }\r\n                              >\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                              </Nav.Link>\r\n\r\n                              <Nav.Link\r\n                                name=\"deletePatient\"\r\n                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_DELETE\",\r\n                                })}\r\n                                //   data-for=\"tooltip_list_wrap\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(deleteId) === -1\r\n                                }\r\n                                onClick={() => this.ConfirmDelete(deleteId)}\r\n                              >\r\n                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                              </Nav.Link>\r\n                              <Nav.Link\r\n                                name=\"PatientHistory\"\r\n                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_PATIENTHISTORY\",\r\n                                })}\r\n                                //   data-for=\"tooltip_list_wrap\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(deleteId) === -1\r\n                                }\r\n                                onClick={() => this.props.getPatientHistory(\r\n                                  this.props.Login.masterData.SelectedPatient,\r\n                                  this.props.Login.userInfo,\r\n                                  this.props.Login.masterData\r\n                                )}\r\n                              >\r\n                                <FontAwesomeIcon icon={faHistory} />\r\n                              </Nav.Link>\r\n\r\n                              <Nav.Link\r\n                                className=\"btn btn-circle outline-grey mr-2\"\r\n                                name=\"patientReport\"\r\n                                hidden={\r\n                                  this.state.userRoleControlRights.indexOf(\r\n                                    patientReportId\r\n                                  ) === -1\r\n                                }\r\n                                onClick={() =>\r\n                                  this.props.getPatientReport(\r\n                                    this.props.Login.masterData.SelectedPatient,\r\n                                    this.props.Login.userInfo,\r\n                                    patientReportId\r\n                                  )\r\n                                }\r\n                                //  data-for=\"tooltip_list_wrap\"\r\n                                data-tip={this.props.intl.formatMessage({\r\n                                  id: \"IDS_PATIENTREPORT\",\r\n                                })}\r\n                              >\r\n                                <Reports\r\n                                  className=\"custom_icons\"\r\n                                  width=\"20\"\r\n                                  height=\"20\"\r\n                                />\r\n                              </Nav.Link>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Subtitle>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        <Row>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_FATHERNAME\"\r\n                                  message=\"Father Name\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sfathername === null || \r\n                                  this.props.Login.masterData.SelectedPatient.sfathername === \"\" ? \"-\" :\r\n                                    this.props.Login.masterData.SelectedPatient.sfathername\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DATEOFBIRTH\"\r\n                                  message=\"Date Of Birth\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.sdob === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sdob.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sdob\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage id=\"IDS_AGE\" message=\"Age\" />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.sage === \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sage.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sage\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage id=\"IDS_GENDER\" message=\"Gender\" />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.sgendername === null ||\r\n                                  this.props.Login.masterData.SelectedPatient.sgendername.length === 0\r\n                                  ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.sgendername\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_MOBILENO\"\r\n                                  message=\"Mobile No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {this.props.Login.masterData.SelectedPatient.smobileno === null || \r\n                                this.props.Login.masterData.SelectedPatient.smobileno === \"\" ? \"-\"\r\n                                  : this.props.Login.masterData.SelectedPatient.smobileno}\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_PHONENO\"\r\n                                  message=\"Phone No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sphoneno === null || \r\n                                  this.props.Login.masterData.SelectedPatient.sphoneno === \"\" ? \"-\" :\r\n                                    this.props.Login.masterData.SelectedPatient.sphoneno\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_EMAILID\"\r\n                                  message=\"Email ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.semail === null || \r\n                                  this.props.Login.masterData.SelectedPatient.semail === \"\" ? \"-\" :\r\n                                    this.props.Login.masterData.SelectedPatient.semail\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_MIGRANT\"\r\n                                  message=\"Migrant\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sdisplaystatus == \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.sdisplaystatus.length === 0 ? \"-\" :\r\n                                    this.props.Login.masterData.SelectedPatient.sdisplaystatus\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_COUNTRY\"\r\n                                  message=\"COUNTRY\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.scountryname == \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.scountryname.length === 0 ? \"-\" :\r\n                                    this.props.Login.masterData.SelectedPatient.scountryname\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_REFERENCEID\"\r\n                                  message=\"Reference ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.srefid === null ||\r\n                                  this.props.Login.masterData.SelectedPatient.srefid === \"\" ? \"-\" :\r\n                                    this.props.Login.masterData.SelectedPatient.srefid\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_PASSPORTNO\"\r\n                                  message=\"Passport No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.spassportno === null ||\r\n                                  this.props.Login.masterData.SelectedPatient.spassportno === \"\" ? \"-\" :\r\n                                    this.props.Login.masterData.SelectedPatient.spassportno\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_EXTERNALID\"\r\n                                  message=\"External ID\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sexternalid === null ||\r\n                                  this.props.Login.masterData.SelectedPatient.sexternalid === \"\" ? \"-\" :\r\n                                    this.props.Login.masterData.SelectedPatient.sexternalid\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={12}>\r\n                            <div className=\"horizontal-line\"></div>\r\n                          </Col>\r\n                          <Col md={12}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_PERMANENTADDRESS\"\r\n                                  message=\"Permanent Address:\"\r\n                                />\r\n                              </FormLabel>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_REGIONNAME\"\r\n                                  message=\"Region\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sregionname === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.sregionname.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.sregionname\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DISTRICTNAME\"\r\n                                  message=\"District\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrictname === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.sdistrictname.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.sdistrictname\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_CITY\"\r\n                                  message=\"City\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.scityname === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.scityname.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.scityname\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_POSTALCODE\"\r\n                                  message=\"PostalCode\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcode === null ||\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcode === \"\" ? \"-\" :\r\n                                    this.props.Login.masterData.SelectedPatient.spostalcode\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_STREET\"\r\n                                  message=\"Street\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sstreet === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.sstreet.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.sstreet\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_HOUSENO\"\r\n                                  message=\"House No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.shouseno === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.shouseno.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.shouseno\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_FLATNO\"\r\n                                  message=\"Flat No\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sflatno === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.sflatno.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.sflatno\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={12}>\r\n                            <div className=\"horizontal-line\"></div>\r\n                          </Col>\r\n                          <Col md={12}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_CURRENTADDRESS\"\r\n                                  message=\"Current Address:\"\r\n                                />\r\n                              </FormLabel>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_REGIONNAME\"\r\n                                  message=\"Region\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sregionnametemp === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.sregionnametemp.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.sregionnametemp\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DISTRICTNAME\"\r\n                                  message=\"District\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrictnametemp === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.sdistrictnametemp.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.sdistrictnametemp\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_CITY\"\r\n                                  message=\"City\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.scitynametemp === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.scitynametemp.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.scitynametemp\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_POSTALCODE\"\r\n                                  message=\"PostalCode\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcodetemp === null ||\r\n                                  this.props.Login.masterData.SelectedPatient.spostalcodetemp === \"\" ? \"-\" :\r\n                                    this.props.Login.masterData.SelectedPatient.spostalcodetemp\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_STREET\"\r\n                                  message=\"Street\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sstreettemp === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.sstreettemp.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.sstreettemp\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_HOUSENO\"\r\n                                  message=\"HouseNo\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.shousenotemp === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.shousenotemp.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.shousenotemp\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md={3}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_FLATNO\"\r\n                                  message=\"FlatNo\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sflatnotemp === \"null\" ||\r\n                                    this.props.Login.masterData.SelectedPatient.sflatnotemp.length === 0 ? \"-\"\r\n                                    : this.props.Login.masterData.SelectedPatient.sflatnotemp\r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col>\r\n\r\n\r\n                          {/* <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_CITY\"\r\n                                  message=\"City\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.scityname == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.scityname.length === 0 ? \"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.scityname                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col> */}\r\n\r\n                          {/* <Col md={4}>\r\n                            <FormGroup>\r\n                              <FormLabel>\r\n                                <FormattedMessage\r\n                                  id=\"IDS_DISTRICT\"\r\n                                  message=\"District\"\r\n                                />\r\n                              </FormLabel>\r\n                              <ReadOnlyText>\r\n                                {\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrict == \"null\" ||\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrict === 0 ?\"-\":\r\n                                  this.props.Login.masterData.SelectedPatient.sdistrict                                 \r\n                                }\r\n                              </ReadOnlyText>\r\n                            </FormGroup>\r\n                          </Col> */}\r\n\r\n                          {/* <Col md={4}>\r\n                            <FormGroup> */}\r\n                        </Row>\r\n                        {/* <Row>\r\n                          <Col> */}\r\n                        {/* <DataGrid\r\n                              userRoleControlRights={\r\n                                this.state.userRoleControlRights\r\n                              }\r\n                              controlMap={this.state.controlMap}\r\n                              primaryKeyField={\"npreregno\"}\r\n                              data={\r\n                                this.props.Login.masterData &&\r\n                                this.props.Login.masterData[\"PatientHistory\"]\r\n                              }\r\n                              dataResult={process(\r\n                                this.props.Login.masterData &&\r\n                                (this.props.Login.masterData[\r\n                                  \"PatientHistory\"\r\n                                ] ||\r\n                                  []),\r\n                                this.state.dataState\r\n                              )}\r\n                              dataState={this.state.dataState}\r\n                              dataStateChange={this.dataStateChange}\r\n                              extractedColumnList={this.columnList}\r\n                              inputParam={this.props.Login.inputParam}\r\n                              userInfo={this.props.Login.userInfo}\r\n                              methodUrl={this.props.Login.inputParam.methodUrl}\r\n                              pageable={true}\r\n                              scrollable={\"scrollable\"}\r\n                              isActionRequired={false}\r\n                              isToolBarRequired={false}\r\n                              selectedId={null}\r\n                              hideColumnFilter={false}\r\n                              expandField={\"expanded\"}\r\n                              handleExpandChange={this.handleExpandChange}\r\n                              hasChild={true}\r\n                              childColumnList={this.childColumnList}\r\n                              childMappingField={\"npreregno\"}\r\n                              childList={this.props.Login.testMap || new Map()}\r\n                            />\r\n                          </Col>\r\n                        </Row> */}\r\n                      </Card.Body>\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Card>\r\n              </ContentPanel>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        {this.props.Login.openModal ? (\r\n          <SlideOutModal\r\n            show={this.props.Login.openModal}\r\n            closeModal={this.closeModal}\r\n            className={this.props.Login.openSolidAdvFilter ? \"wide-popup\" : \"\"}\r\n            // operation={this.props.Login.operation}\r\n            size={this.props.Login.loadEsign ? \"lg\" : this.props.Login.openSolidAdvFilter ? \"xl\" : this.props.Login.patientHistory ? \"xl\" : \"lg\"}\r\n            operation={this.props.Login.openSolidAdvFilter ? \"\" : this.props.Login.operation}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.props.Login.openSolidAdvFilter ? this.onSaveGetClick : this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            showSubmit={this.props.Login.openSolidAdvFilter ? true : false}\r\n            showSaveAs={this.props.Login.openSolidAdvFilter ? true : false}\r\n            hideSave={this.props.Login.patientHistory ? true : this.props.Login.openSolidAdvFilter ? true : false}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            mandatoryFields={this.props.Login.openSolidAdvFilter ? \"\" : this.props.Login.openModal ? mandatoryFields : \"\"}\r\n\r\n            addComponent={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.openSolidAdvFilter ?\r\n\r\n                <Row>\r\n                 <Col md={3} style={{ \"margin-top\": \"14px\" }}>\r\n                    <FormSelectSearch\r\n                      name={\"npatientfiltercode\"}\r\n                      formLabel={this.props.intl.formatMessage({ id: \"IDS_PATIENTFILTER\" })}\r\n                      placeholder={this.props.intl.formatMessage({ id: \"IDS_PATIENTFILTER\" })}\r\n                      options={this.props.Login.masterData.patientFilerList}\r\n                      value={this.state.selectedRecord.npatientfiltercode !== undefined ? this.state.selectedRecord.npatientfiltercode : this.props.Login.masterData.SelectedPatientFilterType && { \"label\": this.props.Login.masterData.SelectedPatientFilterType.spatientfiltername, \"value\": this.props.Login.masterData.SelectedPatientFilterType.npatientfiltercode }}\r\n                      isMandatory={false}\r\n                      required={true}\r\n                      isClearable={false}\r\n                      isMulti={false}\r\n                      isSearchable={false}\r\n                      isDisabled={false}\r\n                      closeMenuOnSelect={true}\r\n                      onChange={(event) => this.onComboChange(event, 'npatientfiltercode')}\r\n                    />\r\n                   \r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <CustomSwitch\r\n                      label={this.props.intl.formatMessage({ id: \"IDS_\" + (this.props.Login.masterData.SelectedPatientFilterType.sfilterstatus).toUpperCase() })}\r\n                      type=\"switch\"\r\n                      name={\"nfilterstatus\"}\r\n                      onChange={(event) => this.onInputOnChange(event, 'nfilterstatus')}\r\n                      placeholder={this.props.intl.formatMessage({ id: \"IDS_TRANSACTIONSTATUSACTIVE\" })}\r\n                      defaultValue={this.props.Login.masterData.SelectedPatientFilterType[\"nfilterstatus\"] === transactionStatus.YES ? true : false}\r\n                      isMandatory={false}\r\n                      required={false}\r\n                      checked={this.props.Login.masterData.SelectedPatientFilterType[\"nfilterstatus\"] === transactionStatus.YES ? true : false}\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"12\">\r\n                    <FilterQueryBuilder\r\n                      //fields={Fields}\r\n                      fields={this.state.fields}\r\n                      queryArray={this.state.queryArray}\r\n                      skip={this.state.kendoSkip}\r\n                      take={this.state.kendoTake}\r\n                      onChange={this.onChange}\r\n                      tree={this.props.Login.tree !== undefined ? this.props.Login.tree : this.state.selectedRecord.tree}\r\n                     // config={this.state.Patconfigs}\r\n                      gridColumns={this.slideList}\r\n                      filterData={this.props.Login.slideResult || []}\r\n                      handlePageChange={this.handlePageChange}\r\n                      static={true}\r\n                      userInfo={this.props.Login.userInfo}\r\n                      updateStore={this.props.updateStore}\r\n                    // controlMap={this.state.controlMap}\r\n                    // dataState={this.state.dataState}\r\n                    // dataStateChange={this.dataStateChange}\r\n                    />\r\n                  </Col>\r\n\r\n\r\n                  {this.props.Login.openAlertModal &&\r\n                    <AlertModal\r\n                      openAlertModal={this.props.Login.openAlertModal}\r\n                      modalTitle={\"IDS_ENTERQUERYNAME\"}\r\n                      closeModal={() => {\r\n                        let selectedRecord = this.state.selectedRecord;\r\n                        selectedRecord[\"QueryName\"] = undefined;\r\n                        const updateInfo = {\r\n                          typeName: DEFAULT_RETURN,\r\n                          data: {\r\n                            openAlertModal: false,\r\n                            selectedRecord\r\n                          },\r\n                        };\r\n                        this.props.updateStore(updateInfo);\r\n                      }\r\n                      }\r\n                      onSaveClick={this.handleSaveFilterClick}\r\n                      modalBody={\r\n                        <Row>\r\n                          <Col>\r\n                            <FormInput\r\n                              label={this.props.intl.formatMessage({ id: \"IDS_QUERYNAME\" })}\r\n                              name={\"QueryName\"}\r\n                              type=\"text\"\r\n                              onChange={(event) => this.onInputOnChange(event)}\r\n                              placeholder={this.props.intl.formatMessage({ id: \"IDS_QUERYNAME\" })}\r\n                              value={this.state.selectedRecord.QueryName ? this.state.selectedRecord.QueryName : this.props.Login.QueryName ? this.props.Login.QueryName : \"\"}\r\n                              //   value={this.state.selectedRecord.QueryName ? this.state.selectedRecord.QueryName : this.state.selectedRecord.npatientfiltercode ? this.state.selectedRecord.npatientfiltercode.label : \"\"}\r\n                              // value={this.props.Login.masterData.SelectedPatientFilterType.spatientfiltername ===\"Create New Query\"?this.state.selectedRecord.QueryName :this.state.selectedRecord.npatientfiltercode.label}\r\n                              isMandatory={true}\r\n                              required={true}\r\n                              maxLength={\"30\"}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      }\r\n                    />}\r\n                </Row>\r\n                : this.props.Login.patientHistory ?\r\n                  <Row>\r\n                    <Col md='12'>\r\n                      <Card.Title >\r\n                        <FormattedMessage\r\n                          id=\"IDS_PATIENT\" />\r\n                        {\r\n                          this.props.Login.masterData.SelectedPatient.spatientname\r\n                        }\r\n                      </Card.Title>\r\n                    </Col>\r\n                    <Col md='12'>\r\n                      <DataGrid\r\n                        //   key=\"testsectionkey\"\r\n                        //   primaryKeyField=\"npreregno\"\r\n                        expandField=\"expanded\"\r\n                        handleExpandChange={this.handleExpandChange}\r\n                        // dataResult={this.props.Login.masterData.patientHistorydetails &&\r\n                        //     this.props.Login.masterData.patientHistory && process(\r\n                        //          this.props.Login['patienthist'] \r\n                        //         || [],\r\n                        //         this.state.dataState\r\n                        //             ? this.state.dataState : { skip: 0, take: 10 })} \r\n                        dataResult={this.props.Login.masterData.patientHistory && process(\r\n                          this.props.Login.masterData.patientHistory || [],\r\n                          this.state.dataState ? this.state.dataState : { skip: 0, take: 10 }\r\n                        )}\r\n                        dataState={this.state.dataState\r\n                          ? this.state.dataState : { skip: 0, take: 10 }}\r\n                        dataStateChange={this.dataStateChange}\r\n                        extractedColumnList={this.extractedColumnList}\r\n                        controlMap={this.state.controlMap}\r\n                        userRoleControlRights={this.state.userRoleControlRights}\r\n                        pageable={true}\r\n                        scrollable={'scrollable'}\r\n                        hideColumnFilter={false}\r\n                        selectedId={0}\r\n                        hasChild={true}\r\n                        childMappingField={'npreregno'}\r\n                        childColumnList={[\r\n\r\n                          { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n                          { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\" },\r\n                          { \"idsName\": \"IDS_RESULT\", \"dataField\": \"sfinal\", \"width\": \"200px\" },\r\n                          { \"idsName\": \"IDS_PASSFLAG\", \"dataField\": \"sgradename\", \"width\": \"200px\" }\r\n                        ]}\r\n                        childList={this.state.childListMap3}\r\n                      //  activeTabName={\"IDS_NEEDTESTINITIATE\"}\r\n                      ></DataGrid>\r\n                    </Col>\r\n                  </Row>\r\n                  :\r\n                  <AddPatient\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    onInputOnChange={this.onInputOnChange}\r\n                    onComboChange={this.onComboChange}\r\n                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                    handleDateChange={this.handleDateChange}\r\n                    genderList={this.props.Login.genderList || []}\r\n                    cityList={this.props.Login.cityList || []}\r\n                    countryList={this.props.Login.countryList || []}\r\n                    selectedPatient={\r\n                      this.props.Login.masterData.SelectedPatient || {}\r\n                    }\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    currentTime={this.props.Login.currentTime}\r\n                    regionList={this.props.Login.regionList || []}\r\n                    districtList={this.props.Login.districtList || []}\r\n                    districtListTemp={this.props.Login.districtListTemp || []}\r\n                    cityListTemp={this.props.Login.cityListTemp || []}\r\n                  />\r\n\r\n            }\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n\r\n      </>\r\n    );\r\n  }\r\n  // handleExpandChange=()=>{\r\n\r\n  // }\r\n\r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n  }\r\n\r\n  closeFilter = () => {\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter: false }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n  }\r\n\r\n\r\n  onFilterSubmit = () => {\r\n\r\n    let inputData = [];\r\n    //if(this.state.selectedRecord.npatientcasetypecode !== undefined && this.props.Login.masterData.SelectedPatientCaseType !== undefined)\r\n    //{\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    //  inputData[\"formdate\"] = this.state.selectedRecord['fromdate'] !== undefined ? convertDateValuetoString(this.state.selectedRecord[\"fromdate\"],this.state.selectedRecord[\"ToDay\"],this.props.Login.userInfo,true) : formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate));\r\n    inputData[\"date\"] = this.state.selectedRecord['fromdate'] !== undefined ? convertDateValuetoString(this.state.selectedRecord[\"fromdate\"], this.state.selectedRecord[\"ToDay\"], this.props.Login.userInfo, true) :\r\n      convertDateValuetoString(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate), rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate), this.props.Login.userInfo, true);\r\n    //   inputData[\"todate\"] = this.state.selectedRecord['ToDay'] !== undefined ? convertDateValuetoString(undefined,this.state.selectedRecord[\"ToDay\"],this.props.Login.userInfo,undefined) : formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate));\r\n    inputData[\"casetype\"] = \"Follow up\";\r\n    //this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.label : this.props.Login.masterData.SelectedPatientCaseType.spatientcasetypename;\r\n    this.searchRef.current.value = \"\";\r\n    const inputParam = {\r\n      classUrl: \"patient\",\r\n      methodUrl: \"Patient\",\r\n      inputData: inputData,\r\n      searchRef: this.searchRef,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n      displayname: \"Filter\"\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n    const SelectedPatientCaseType = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.item : this.props.Login.masterData.SelectedPatientCaseType;\r\n\r\n    this.props.getPatientDetailsByFilterQuery(inputParam, masterData, SelectedPatientCaseType);\r\n    // }\r\n  }\r\n\r\n  componentDidUpdate(previousProps) {\r\n\r\n    // let { fields,selectedRecord,userRoleControlRights, controlMap, patientCaseTypeList} = this.state;\r\n    // let bool = false;\r\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n      // bool=true;\r\n      this.setState({ selectedRecord: this.props.Login.selectedRecord, });\r\n      // selectedRecord = this.props.Login.selectedRecord;\r\n    }\r\n\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n      let fields = this.state.fields;\r\n      let queryBuilderGender = [];\r\n      let queryBuilderCity = [];\r\n      let queryBuilderCountry = [];\r\n      let queryBuilderRegion = [];\r\n      // let queryBuilderDistrict=[];\r\n\r\n      this.props.Login.masterData.genderList && this.props.Login.masterData.genderList.map(\r\n        (item) => queryBuilderGender.push({ \"value\": item.ngendercode, \"title\": item.sgendername })\r\n      )\r\n\r\n      this.props.Login.masterData.cityList && this.props.Login.masterData.cityList.map(\r\n        (item) => queryBuilderCity.push({ \"value\": item.ncitycode, \"title\": item.scityname })\r\n      )\r\n\r\n      this.props.Login.masterData.countryList && this.props.Login.masterData.countryList.map(\r\n        (item) => queryBuilderCountry.push({ \"value\": item.ncountrycode, \"title\": item.scountryname })\r\n      )\r\n\r\n      this.props.Login.masterData.regionList && this.props.Login.masterData.regionList.map(\r\n        (item) => queryBuilderRegion.push({ \"value\": item.nregioncode, \"title\": item.sregionname })\r\n      )\r\n\r\n      // this.props.Login.masterData.districtList && this.props.Login.masterData.districtList.map(\r\n      //   (item)=>queryBuilderDistrict.push({\"value\":item.ndistrictcode ,\"title\":item.sdistrictname})\r\n      // )\r\n\r\n      //this.setState({ queryArray: queryArray });\r\n      fields = {\r\n        ...fields,\r\n        // \"patientmaster.ngendercode\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_GENDER\",\r\n        //   }),\r\n        //   \"type\": \"select\",\r\n        //   \"valueSources\": [\"value\"],\r\n        //   \"fieldSettings\": {\r\n        //     \"listValues\": queryBuilderGender\r\n        //   }\r\n        // },\r\n\r\n        // \"patientmaster.ncitycode\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_CITY\",\r\n        //   }),\r\n        //   \"type\": \"select\",\r\n        //   \"valueSources\": [\"value\"],\r\n        //   \"fieldSettings\": {\r\n        //     \"listValues\": queryBuilderCity\r\n        //   }\r\n        // },\r\n\r\n        \"patientmaster.ncountrycode\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_COUNTRY\",\r\n          }),\r\n          \"type\": \"select\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"listValues\": queryBuilderCountry\r\n          }\r\n        },\r\n        \"patientmaster.nregioncode\": {\r\n          \"label\": this.props.intl.formatMessage({\r\n            id: \"IDS_REGIONNAME\",\r\n          }),\r\n          \"type\": \"select\",\r\n          \"valueSources\": [\"value\"],\r\n          \"fieldSettings\": {\r\n            \"listValues\": queryBuilderRegion\r\n          }\r\n        },\r\n        // \"patientmaster.ndistrictcode\": {\r\n        //   \"label\": this.props.intl.formatMessage({\r\n        //     id: \"IDS_DISTRICTNAME\",\r\n        //   }),\r\n        //   \"type\": \"select\",\r\n        //   \"valueSources\": [\"value\"],\r\n        //   \"fieldSettings\": {\r\n        //     \"listValues\": queryBuilderDistrict\r\n        //   }\r\n        // }\r\n      }\r\n      // bool=true;\r\n      this.setState({ fields: fields });\r\n    }\r\n    if (\r\n      this.props.Login.userInfo.nformcode !==\r\n      previousProps.Login.userInfo.nformcode\r\n    ) {\r\n      const userRoleControlRights = [];\r\n      const patcasetypeMap = constructOptionList(this.props.Login.masterData.PatientCaseType || [], \"npatientcasetypecode\",\r\n        \"spatientcasetypename\", undefined, undefined, false);\r\n      const patientCaseTypeList = patcasetypeMap.get(\"OptionList\");\r\n      const patcaseFiltertypeMap = constructOptionList(this.props.Login.masterData.patientFilterType || [], \"npatientfiltercode\",\r\n        \"spatientfiltername\", undefined, undefined, false);\r\n      const patientFilerList = patcaseFiltertypeMap.get(\"OptionList\");\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[\r\n          this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      const controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      // bool=true;\r\n      this.setState({ userRoleControlRights, controlMap, patientCaseTypeList, patientFilerList });\r\n    }\r\n    // if(bool){\r\n    //   this.setState({ \r\n    //     fields,selectedRecord,userRoleControlRights, controlMap, patientCaseTypeList \r\n    //   });\r\n    // }\r\n  }\r\n\r\n  ConfirmDelete = (deleteId) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.deletePatient(\r\n          \"Patient\",\r\n          this.props.Login.masterData.SelectedPatient,\r\n          \"delete\",\r\n          deleteId\r\n        )\r\n    );\r\n  };\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    let openSolidAdvFilter = this.props.Login.openSolidAdvFilter;\r\n    let slideResult = this.props.Login.slideResult;\r\n    let tree = this.state.tree;\r\n    let openAlertModal;\r\n\r\n\r\n    let config = this.state.config;\r\n\r\n    if (this.props.Login.loadEsign) {\r\n      if (this.props.Login.operation === \"delete\") {\r\n        loadEsign = false;\r\n        openModal = false;\r\n        selectedRecord = {};\r\n      } else {\r\n        loadEsign = false;\r\n        selectedRecord['esignpassword'] = \"\";\r\n        selectedRecord['esigncomments'] = \"\";\r\n        selectedRecord['esignreason'] = \"\";\r\n      }\r\n    } else {\r\n      openSolidAdvFilter = false;\r\n      openModal = false;\r\n      selectedRecord = {};\r\n      slideResult = {};\r\n      config = undefined;\r\n      tree = undefined;\r\n      this.props.Login.districtList = [];\r\n      this.props.Login.districtListTemp = [];\r\n      this.props.Login.cityListTemp = [];\r\n      this.props.Login.cityList = [];\r\n      this.setState({ config: config, tree: tree })\r\n      openAlertModal = false;\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openAlertModal, openModal, loadEsign, selectedRecord, selectedId: null, openSolidAdvFilter, slideResult, config, tree },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onComboChange = (comboData, fieldName, optionlistname) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = comboData;\r\n    if (fieldName === \"nregioncode\") {\r\n      this.props.getDistrictComboServices({\r\n        inputData: {\r\n          dispalyname: \"District\",\r\n          userinfo: this.props.Login.userInfo,\r\n          sdisplayname: selectedRecord.nregioncode.label,\r\n          primarykey: selectedRecord.nregioncode.value,\r\n          optionlistname\r\n        }\r\n      });\r\n      selectedRecord[\"ndistrictcode\"] = \"\";\r\n      selectedRecord[\"ncitycode\"] = \"\";\r\n    }\r\n    else if (fieldName === \"nregioncodetemp\") {\r\n      this.props.getDistrictComboServices({\r\n        inputData: {\r\n          dispalyname: \"DistrictTemp\",\r\n          userinfo: this.props.Login.userInfo,\r\n          sdisplayname: selectedRecord.nregioncodetemp.label,\r\n          primarykey: selectedRecord.nregioncodetemp.value,\r\n          optionlistname\r\n        }\r\n      });\r\n      selectedRecord[\"ndistrictcodetemp\"] = \"\";\r\n      selectedRecord[\"ncitycodetemp\"] = \"\";\r\n    }\r\n    else if (fieldName === \"ndistrictcode\") {\r\n      this.props.getCityComboServices({\r\n        inputData: {\r\n          dispalyname: \"City\",\r\n          userinfo: this.props.Login.userInfo,\r\n          sdisplayname: selectedRecord.ndistrictcode.label,\r\n          primarykey: selectedRecord.ndistrictcode.value,\r\n          optionlistname\r\n        }\r\n      });\r\n      selectedRecord[\"ncitycode\"] = \"\";\r\n    }\r\n    else if (fieldName === \"ndistrictcodetemp\") {\r\n      this.props.getCityComboServices({\r\n        inputData: {\r\n          dispalyname: \"CityTemp\",\r\n          userinfo: this.props.Login.userInfo,\r\n          sdisplayname: selectedRecord.ndistrictcodetemp.label,\r\n          primarykey: selectedRecord.ndistrictcodetemp.value,\r\n          optionlistname\r\n        }\r\n      });\r\n      selectedRecord[\"ncitycodetemp\"] = \"\";\r\n    }\r\n    else if (fieldName === \"npatientcasetypecode\") {\r\n      selectedRecord[fieldName] = comboData;\r\n    } else if (fieldName === \"npatientfiltercode\") {\r\n      this.props.filtercomboService({\r\n        inputData: {\r\n          userinfo: this.props.Login.userInfo,\r\n          sdisplayname: selectedRecord.npatientfiltercode.label,\r\n          primarykey: selectedRecord.npatientfiltercode.value\r\n        },\r\n        masterData: { ...this.props.Login.masterData, selectedRecord },\r\n        Patconfigs: this.state.Patconfigs\r\n      });\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n  // onFilterInputChange(immutableTree,){\r\n\r\n  //  let QbUtilss=JSON.stringify(QbUtils.sqlFormat(immutableTree, config));\r\n  //   console.log('QbUtils',QbUtilss)\r\n  // return QbUtilss\r\n\r\n  // };\r\n  onChange = (immutableTree, config) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[\"tree\"] = immutableTree;\r\n    selectedRecord[\"config\"] = config;\r\n    // this.setState({ tree: immutableTree, config: config });\r\n    selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n    // const jsonTree = QbUtils.getTree(immutableTree);\r\n    // <div>SQL where: <pre>{selectedRecord['filterquery']}</pre></div>\r\n    this.setState({ tree: immutableTree, config: config, selectedRecord: selectedRecord });\r\n\r\n  };\r\n  onInputOnChange = (event, fieldName) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      if (fieldName === \"nfilterstatus\") {\r\n        selectedRecord[\"npatientfiltercode\"] = undefined;\r\n        selectedRecord[fieldName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        this.props.getFilterStatusCombo({\r\n          inputData: {\r\n            userinfo: this.props.Login.userInfo,\r\n            primarykey: selectedRecord.nfilterstatus\r\n          },\r\n          masterData: { ...this.props.Login.masterData, selectedRecord },\r\n          Patconfigs: this.state.Patconfigs\r\n        });\r\n      } else {\r\n        selectedRecord[event.target.name] =\r\n          event.target.checked === true\r\n            ? transactionStatus.YES\r\n            : transactionStatus.NO;\r\n        if (selectedRecord.nneedcurrentaddress === 3) {\r\n          selectedRecord.sflatnotemp = selectedRecord.sflatno;\r\n          selectedRecord.shousenotemp = selectedRecord.shouseno;\r\n          selectedRecord.spostalcodetemp = selectedRecord.spostalcode;\r\n          selectedRecord.sstreettemp = selectedRecord.sstreet;\r\n          selectedRecord.ncitycodetemp = selectedRecord.ncitycode;\r\n          selectedRecord.ndistrictcodetemp = selectedRecord.ndistrictcode;\r\n          selectedRecord.nregioncodetemp = selectedRecord.nregioncode;\r\n        }\r\n        else {\r\n          selectedRecord.sflatnotemp = \"\";\r\n          selectedRecord.shousenotemp = \"\";\r\n          selectedRecord.spostalcodetemp = \"\";\r\n          selectedRecord.sstreettemp = \"\";\r\n          selectedRecord.ncitycodetemp = \"\";\r\n          selectedRecord.ndistrictcodetemp = \"\";\r\n          selectedRecord.nregioncodetemp = \"\";\r\n        }\r\n      }\r\n    } else {\r\n      if (event.target.name === \"sphoneno\" || event.target.name === \"smobileno\") {\r\n        if (event.target.value !== \"\") {\r\n          event.target.value = validatePhoneNumber(event.target.value);\r\n          selectedRecord[event.target.name] =\r\n            event.target.value !== \"\"\r\n              ? event.target.value\r\n              : selectedRecord[event.target.name];\r\n        } else {\r\n          selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n      } else {\r\n        selectedRecord[event.target.name] = event.target.value;\r\n        if (selectedRecord.nneedcurrentaddress === 3) {\r\n          selectedRecord.sflatnotemp = selectedRecord.sflatno;\r\n          selectedRecord.shousenotemp = selectedRecord.shouseno;\r\n          selectedRecord.spostalcodetemp = selectedRecord.spostalcode;\r\n          selectedRecord.sstreettemp = selectedRecord.sstreet;\r\n          selectedRecord.ncitycodetemp = selectedRecord.ncitycode;\r\n          selectedRecord.ndistrictcodetemp = selectedRecord.ndistrictcode;\r\n          selectedRecord.nregioncodetemp = selectedRecord.nregioncode;\r\n        }\r\n      }\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    const age = ageCalculate(dateValue);\r\n    selectedRecord[\"sage\"] = age;\r\n    //   if(dateName===\"ToDay\"){\r\n    //     this.props.getDateChangeServices({\r\n    //       userinfo: this.props.Login.userInfo,\r\n    //       date: rearrangeDateFormat(this.props.Login.userInfo,selectedRecord[\"ToDay\"])\r\n    // })\r\n    //}\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n  onSaveGetClick = (saveType) => {\r\n    if (saveType === 7) {\r\n      let inputData = [];\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        classUrl: \"patient\",\r\n        methodUrl: \"ByPatient\",\r\n        inputData: inputData,\r\n        openAlertModal: true,\r\n        loadEsign: false,\r\n\r\n      };\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          openAlertModal: true,\r\n          openSolidAdvFilter: true,\r\n          openModal: true,\r\n          inputData,\r\n          operation: \"create\",\r\n          screenData: { inputParam }\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    }\r\n    else {\r\n      let selectedRecord = [];\r\n      let inputData = [];\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      inputData[\"filterquery\"] = this.state.selectedRecord['filterquery'] !== undefined   ? this.state.selectedRecord['filterquery'] : this.props.Login.filterquery;\r\n      //inputData[\"formdate\"] = this.state.selectedRecord['fromdate']!==undefined ?  formatInputDateWithoutT(this.state.selectedRecord[\"fromdate\"]) :formatInputDateWithoutT( rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate));\r\n      // inputData[\"todate\"] = this.state.selectedRecord['ToDay']!==undefined ?  formatInputDateWithoutT(this.state.selectedRecord[\"ToDay\"]):formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate));\r\n      inputData[\"patientfilter\"] = { patientfilter: this.state.selectedRecord, nfilterstatus: 4, patient: \"Filter\", sfilterstatus: \"Recent\" }\r\n      if (inputData[\"filterquery\"] !== undefined && !inputData[\"filterquery\"].includes('Invalid date') ) {\r\n        this.searchRef.current.value = \"\";\r\n        let paramFlag = true;\r\n        const inputParam = {\r\n          classUrl: \"patient\",\r\n          methodUrl: \"ByPatient\",\r\n          inputData: inputData,\r\n          searchRef: this.searchRef,\r\n          isClearSearch: this.props.Login.isClearSearch,\r\n          displayname: \"AdvanceFilter\",\r\n        };\r\n        const QueryName = this.props.Login.QueryName !== undefined ? this.props.Login.QueryName : this.props.Login.masterData.SelectedPatientFilterType.spatientfiltername;\r\n        const masterData = { ...this.props.Login.masterData, QueryName: QueryName };\r\n        const SelectedPatientCaseType = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.item : this.props.Login.masterData.SelectedPatientCaseType;\r\n        if (\r\n          showEsign(\r\n            this.props.Login.userRoleControlRights,\r\n            this.props.Login.userInfo.nformcode,\r\n            this.props.Login.ncontrolCode\r\n          )\r\n        ) {\r\n          const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n              loadEsign: true,\r\n              screenData: { inputParam, masterData }\r\n            },\r\n          };\r\n          this.props.updateStore(updateInfo);\r\n        }\r\n\r\n        this.props.getPatientDetailsByFilterQuery(inputParam, masterData, SelectedPatientCaseType);\r\n      } else {\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUES\" }));\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  handleSaveFilterClick = () => {\r\n    let inputData = {};\r\n    let methodUrl = \"\";\r\n    const selectedRecord = this.state.selectedRecord;\r\n    if (this.state.selectedRecord.filterquery !== undefined) {\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      inputData[\"patientfilter\"] = {\r\n        \"tree\": QbUtils.getTree(this.state.selectedRecord.tree),\r\n        \"filterquery\": this.state.selectedRecord.filterquery\r\n      }\r\n      //  inputData[\"patient\"]=this.state.selectedRecord.QueryName;\r\n      inputData[\"patient\"] = this.state.selectedRecord.QueryName !== undefined ? this.state.selectedRecord.QueryName : this.state.selectedRecord.npatientfiltercode.label;\r\n      inputData[\"nfilterstatus\"] = 3\r\n      inputData[\"sfilterstatus\"] = \"Saved\"\r\n      methodUrl = \"FilterQuery\"\r\n      const inputParam = {\r\n        methodUrl: methodUrl,\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        displayName: this.props.Login.inputParam.displayName,\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n      }\r\n      const masterData = { ...this.state.selectedRecord, ...this.props.Login.masterData }\r\n      this.props.filtercomboService({\r\n        displayname: \"onSubmit\",\r\n        inputParam, masterData\r\n      });\r\n    } else {\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUES\" }));\r\n    }\r\n  }\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n    if (this.state.selectedRecord['semail'] && this.state.selectedRecord['semail'] !== \"\" && this.state.selectedRecord['semail'] !== \"null\" ? validateEmail(this.state.selectedRecord[\"semail\"]) : true) {\r\n      let patientData = [];\r\n      patientData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n      let postParam = {\r\n        inputListName: \"PatientList\",\r\n        selectedObject: \"SelectedPatient\",\r\n        primaryKeyField: \"spatientid\",\r\n      };\r\n\r\n     \r\n\r\n      if (this.props.Login.operation === \"update\") {\r\n        postParam[\"primaryKeyValue\"] =\r\n          this.props.Login.masterData.SelectedPatient.spatientid;\r\n        patientData[\"patient\"] = {\r\n          spatientid: this.props.Login.masterData.SelectedPatient.spatientid,\r\n          sfirstname: this.state.selectedRecord.sfirstname,\r\n          slastname: this.state.selectedRecord.slastname,\r\n          sfathername: this.state.selectedRecord.sfathername,\r\n          ddob: formatInputDate(this.state.selectedRecord[\"ddob\"], false),\r\n          sage: this.state.selectedRecord.sage,\r\n          ngendercode: this.state.selectedRecord.ngendercode.value,\r\n          ncitycode: this.state.selectedRecord.ncitycode.value,\r\n          ncountrycode: this.state.selectedRecord.ncountrycode.value,\r\n          saddress: this.state.selectedRecord.saddress,\r\n          sdistrict: this.state.selectedRecord.sdistrict,\r\n          spostalcode: this.state.selectedRecord.spostalcode,\r\n          sphoneno: this.state.selectedRecord.sphoneno,\r\n          smobileno: this.state.selectedRecord.smobileno,\r\n          semail: this.state.selectedRecord.semail,\r\n          spassportno: this.state.selectedRecord.spassportno,\r\n          srefid: this.state.selectedRecord.srefid,\r\n          sexternalid: this.state.selectedRecord.sexternalid,\r\n          sstreet: this.state.selectedRecord.sstreet,\r\n          sstreettemp: this.state.selectedRecord.nneedcurrentaddress===3?this.state.selectedRecord.sstreet :this.state.selectedRecord.sstreettemp,\r\n          shouseno: this.state.selectedRecord.shouseno,\r\n          shousenotemp: this.state.selectedRecord.nneedcurrentaddress===3?this.state.selectedRecord.shouseno :this.state.selectedRecord.shousenotemp,\r\n          sflatno: this.state.selectedRecord.sflatno,\r\n          sflatnotemp: this.state.selectedRecord.nneedcurrentaddress===3?this.state.selectedRecord.sflatno :this.state.selectedRecord.sflatnotemp,\r\n          nneedcurrentaddress: this.state.selectedRecord.nneedcurrentaddress,\r\n          nneedmigrant: this.state.selectedRecord.nneedmigrant,\r\n          spostalcodetemp: this.state.selectedRecord.nneedcurrentaddress===3?this.state.selectedRecord.spostalcode :this.state.selectedRecord.spostalcodetemp,\r\n          sgendername: this.state.selectedRecord.ngendercode.label\r\n        };\r\n\r\n      } else {\r\n        patientData[\"patient\"] = {\r\n          nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n        };\r\n\r\n        this.patientFieldList.map((item) => {\r\n          return (patientData[\"patient\"][item] = this.state.selectedRecord[item] == \"\" || this.state.selectedRecord[item] == undefined ?\r\n            undefined : this.state.selectedRecord[item]);\r\n        });\r\n      }\r\n\r\n      patientData[\"patient\"][\"ngendercode\"] = this.state.selectedRecord[\"ngendercode\"] ? this.state.selectedRecord[\"ngendercode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      patientData[\"patient\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      patientData[\"patient\"][\"ncitycodetemp\"] = this.state.selectedRecord.nneedcurrentaddress===3?this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value\r\n      : transactionStatus.NA:this.state.selectedRecord[\"ncitycodetemp\"] ? this.state.selectedRecord[\"ncitycodetemp\"].value\r\n        : transactionStatus.NA;\r\n\r\n      patientData[\"patient\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      patientData[\"patient\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      patientData[\"patient\"][\"ndistrictcodetemp\"] = this.state.selectedRecord.nneedcurrentaddress===3?this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value\r\n      : transactionStatus.NA:this.state.selectedRecord[\"ndistrictcodetemp\"] ? this.state.selectedRecord[\"ndistrictcodetemp\"].value\r\n        : transactionStatus.NA;\r\n\r\n      patientData[\"patient\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      patientData[\"patient\"][\"nregioncodetemp\"] = this.state.selectedRecord.nneedcurrentaddress===3?this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value\r\n      : transactionStatus.NA:this.state.selectedRecord[\"nregioncodetemp\"] ? this.state.selectedRecord[\"nregioncodetemp\"].value\r\n        : transactionStatus.NA;\r\n\r\n      // if (patientData[\"patient\"][\"ddob\"] !== undefined\r\n      //     && patientData[\"patient\"][\"ddob\"] !== null && patientData[\"patient\"][\"ddob\"] !== \"\") {\r\n      //     patientData[\"patient\"][\"ddob\"] = formatInputDate(patientData[\"patient\"][\"ddob\"],false);\r\n\r\n      // }\r\n      if (this.state.selectedRecord[\"ddob\"]) {\r\n        if (this.props.Login.operation === \"create\") {\r\n          patientData[\"patient\"][\"sdob\"] = formatInputDate(this.state.selectedRecord[\"ddob\"], false);\r\n        }\r\n        else {\r\n          patientData[\"patient\"][\"sdob\"] = this.state.selectedRecord[\"sdob\"];\r\n        }\r\n      }\r\n      patientData[\"patient\"][\"currentdate\"] = formatInputDate(new Date(), true);\r\n      const inputParam = {\r\n        classUrl: \"patient\",\r\n        methodUrl: \"Patient\",\r\n        inputData: patientData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n        isClearSearch: this.props.Login.isClearSearch,\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      // if (this.props.Login.operation === \"update\") {\r\n      // this.updatePatient(inputParam, this.props.Login.masterData, this.props.Login.ncontrolCode);\r\n      // return;\r\n      // }\r\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    } else {\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }));\r\n    }\r\n  };\r\n\r\n  deletePatient = (methodUrl, selectedPatient, operation, ncontrolCode) => {\r\n    let inputData = [];\r\n    const postParam = {\r\n      inputListName: \"PatientList\",\r\n      selectedObject: \"SelectedPatient\",\r\n      primaryKeyField: \"spatientid\",\r\n      primaryKeyValue: selectedPatient.spatientid,\r\n      fetchUrl: \"patient/getPatient\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo, currentdate: formatInputDate(new Date(), true) },\r\n    };\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    inputData[\"patient\"] = selectedPatient;\r\n    inputData[\"patient\"][\"currentdate\"] = formatInputDate(new Date(), true)\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl,\r\n      postParam,\r\n      inputData,\r\n      operation,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openModal: true,\r\n          screenName: \"IDS_PATIENTMASTER\",\r\n          operation,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  };\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n          nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n          spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n    this.props.validateEsignCredential(inputParam, \"openModal\");\r\n  };\r\n\r\n  handleExpandChange = (row, dataState) => {\r\n\r\n    let childListMap3 = new Map();\r\n    let keylst = this.props.Login.masterData.patientHistorydetails.map(key => key.npreregno);\r\n    // let keylst1=[]  ;\r\n    keylst.map((key, i) => {\r\n      childListMap3.set(parseInt(key),\r\n        this.props.Login.masterData.patientHistorydetails);\r\n    })\r\n    this.setState({ childListMap3 })\r\n    // const viewParam = {\r\n    //   userInfo: this.props.Login.userInfo,\r\n    //   primaryKeyField: \"npreregno\",\r\n    //   masterData: this.props.Login.masterData,\r\n    // };\r\n\r\n    // this.props.getTestParameter({\r\n    //   ...viewParam,\r\n    //   dataState,\r\n    //   primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField],\r\n    //   viewRow: row[\"dataItem\"],\r\n    // });\r\n  };\r\n\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n    let inputData = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    inputData[\"date\"] = this.state.selectedRecord['fromdate'] !== undefined ? convertDateValuetoString(this.state.selectedRecord[\"fromdate\"], this.state.selectedRecord[\"ToDay\"], this.props.Login.userInfo, true) :\r\n      convertDateValuetoString(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate), rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate), this.props.Login.userInfo, true);\r\n    //   inputData[\"formdate\"] = this.state.selectedRecord['fromdate'] !== undefined ? formatInputDateWithoutT(this.state.selectedRecord[\"fromdate\"]) : formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate));\r\n    // inputData[\"todate\"] = this.state.selectedRecord['ToDay'] !== undefined ? formatInputDateWithoutT(this.state.selectedRecord[\"ToDay\"]) : formatInputDateWithoutT(rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.ToDate));\r\n    inputData[\"casetype\"] = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.label : this.props.Login.masterData.SelectedPatientCaseType.spatientcasetypename;\r\n    const inputParam = {\r\n      inputData: inputData,\r\n      classUrl: \"patient\",\r\n      methodUrl: \"Patient\",\r\n      displayname: \"Filter\",\r\n      userInfo: this.props.Login.userInfo,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    };\r\n\r\n    const masterData = this.props.Login.masterData;\r\n    const SelectedPatientCaseType = this.state.selectedRecord.npatientcasetypecode !== undefined ? this.state.selectedRecord.npatientcasetypecode.item : this.props.Login.masterData.SelectedPatientCaseType;\r\n\r\n    this.props.getPatientDetailsByFilterQuery(inputParam, masterData, SelectedPatientCaseType);\r\n  };\r\n}\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getPatientDetail,\r\n  getPatientComboService,\r\n  filterColumnData,\r\n  getTestParameter,\r\n  getPatientReport, getPatientDetailsByFilterQuery, getDistrictComboServices, getCityComboServices, filtercomboService, getFilterStatusCombo, getPatientHistory\r\n})(injectIntl(PatientMaster));\r\n"]},"metadata":{},"sourceType":"module"}