{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData}from'../components/CommonScript';import{initRequest}from'./LoginAction';import{toast}from'react-toastify';import{intl}from'../components/App';export function selectedAlertView(AlertView,userInfo,masterData,dataState){return function(dispatch){var selectedId=AlertView.nsqlquerycode;dispatch(initRequest(true));rsapi.post(\"/alertview/getSelectedAlertView\",{'userinfo':userInfo,\"nsqlquerycode\":AlertView.nsqlquerycode}).then(function(response){if(response.data.ReturnStatus===false){toast.warn(intl.formatMessage({id:\"IDS_INVALIDALERTQUERY\"}));}masterData=_objectSpread(_objectSpread({},masterData),{},{selectedAlertView:response.data.selectedAlertView,SelectedAlert:response.data.SelectedAlert,sqlQueryName:response.data.sqlQueryName});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,selectedId:selectedId,dataState:_objectSpread(_objectSpread({},dataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getListAlert(userInfo,loader){return function(dispatch){dispatch(initRequest(loader));rsapi.post(\"/alertview/getAlerts\",{'userinfo':userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{alert:response.data.alert,selectedAlertView:response.data.selectedAlertView,selectedAlertView1:response.data.selectedAlertView1,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getSelectedAlert(action,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/alertview/getSelectedAlert\",{'nsqlquerycode':action.nsqlquerycode,'userinfo':userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{selectedAlertView:response.data.selectedAlertView,selectedAlertView1:response.data.selectedAlertView1,sqlQueryName:response.data.sqlQueryName,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/AlertViewAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","initRequest","toast","intl","selectedAlertView","AlertView","userInfo","masterData","dataState","dispatch","selectedId","nsqlquerycode","post","then","response","data","ReturnStatus","warn","formatMessage","id","SelectedAlert","sqlQueryName","type","payload","loading","sort","undefined","filter","catch","error","getListAlert","loader","alert","selectedAlertView1","getSelectedAlert","action"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,cAAT,KAA+B,cAA/B,CACA,OAASC,QAAT,KAAyB,4BAAzB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,IAAT,KAAqB,mBAArB,CAEA,MAAO,SAASC,CAAAA,iBAAT,CAA2BC,SAA3B,CAAsCC,QAAtC,CAAgDC,UAAhD,CAA4DC,SAA5D,CAAuE,CAC1E,MAAO,UAAUC,QAAV,CAAoB,CACvB,GAAIC,CAAAA,UAAU,CAAGL,SAAS,CAACM,aAA3B,CAEAF,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAH,KAAK,CAACc,IAAN,CAAW,iCAAX,CAA8C,CAAE,WAAYN,QAAd,CAAwB,gBAAiBD,SAAS,CAACM,aAAnD,CAA9C,EAEKE,IAFL,CAEU,SAAAC,QAAQ,CAAI,CAEd,GAAIA,QAAQ,CAACC,IAAT,CAAcC,YAAd,GAA+B,KAAnC,CAAyC,CACrCd,KAAK,CAACe,IAAN,CAAWd,IAAI,CAACe,aAAL,CAAmB,CAAEC,EAAE,CAAE,uBAAN,CAAnB,CAAX,EACH,CACDZ,UAAU,gCAAQA,UAAR,MAAoBH,iBAAiB,CAAEU,QAAQ,CAACC,IAAT,CAAcX,iBAArD,CACMgB,aAAa,CAACN,QAAQ,CAACC,IAAT,CAAcK,aADlC,CAEMC,YAAY,CAAEP,QAAQ,CAACC,IAAT,CAAcM,YAFlC,EAAV,CAGArB,QAAQ,CAACO,UAAD,CAAR,CACAE,QAAQ,CAAC,CAAEa,IAAI,CAAEvB,cAAR,CAAwBwB,OAAO,CAAE,CAAEhB,UAAU,CAAVA,UAAF,CAAciB,OAAO,CAAE,KAAvB,CACEd,UAAU,CAAVA,UADF,CAEEF,SAAS,gCAAKA,SAAL,MAAgBiB,IAAI,CAACC,SAArB,CAAgCC,MAAM,CAACD,SAAvC,EAFX,CAAjC,CAAD,CAAR,CAIH,CAfL,EAgBKE,KAhBL,CAgBW,SAAAC,KAAK,CAAI,CACZpB,QAAQ,CAAC,CAAEa,IAAI,CAAEvB,cAAR,CAAwBwB,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACH,CAlBL,EAmBH,CAvBD,CAwBH,CAED,MAAO,SAASM,CAAAA,YAAT,CAAsBxB,QAAtB,CAA+ByB,MAA/B,CAAuC,CAC1C,MAAO,UAAUtB,QAAV,CAAoB,CACvBA,QAAQ,CAACR,WAAW,CAAC8B,MAAD,CAAZ,CAAR,CACAjC,KAAK,CAACc,IAAN,CAAW,sBAAX,CAAmC,CAAE,WAAYN,QAAd,CAAnC,EAEKO,IAFL,CAEU,SAAAC,QAAQ,CAAI,CAEdL,QAAQ,CAAC,CAAEa,IAAI,CAAEvB,cAAR,CAAwBwB,OAAO,CAAE,CAACS,KAAK,CAAClB,QAAQ,CAACC,IAAT,CAAciB,KAArB,CAA4B5B,iBAAiB,CAAEU,QAAQ,CAACC,IAAT,CAAcX,iBAA7D,CAA+E6B,kBAAkB,CAAEnB,QAAQ,CAACC,IAAT,CAAckB,kBAAjH,CAAqIT,OAAO,CAAE,KAA9I,CAAjC,CAAD,CAAR,CACH,CALL,EAMKI,KANL,CAMW,SAAAC,KAAK,CAAI,CACZpB,QAAQ,CAAC,CAAEa,IAAI,CAAEvB,cAAR,CAAwBwB,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACH,CARL,EASH,CAXD,CAYH,CAED,MAAO,SAASU,CAAAA,gBAAT,CAA0BC,MAA1B,CAAiC7B,QAAjC,CAA2C,CAC9C,MAAO,UAAUG,QAAV,CAAoB,CACvBA,QAAQ,CAACR,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAH,KAAK,CAACc,IAAN,CAAW,6BAAX,CAA0C,CAAE,gBAAgBuB,MAAM,CAACxB,aAAzB,CAAuC,WAAYL,QAAnD,CAA1C,EAEKO,IAFL,CAEU,SAAAC,QAAQ,CAAI,CAEdL,QAAQ,CAAC,CAAEa,IAAI,CAAEvB,cAAR,CAAwBwB,OAAO,CAAE,CAACnB,iBAAiB,CAAEU,QAAQ,CAACC,IAAT,CAAcX,iBAAlC,CAAoD6B,kBAAkB,CAAEnB,QAAQ,CAACC,IAAT,CAAckB,kBAAtF,CAA0GZ,YAAY,CAAEP,QAAQ,CAACC,IAAT,CAAcM,YAAtI,CAAqJG,OAAO,CAAE,KAA9J,CAAjC,CAAD,CAAR,CACH,CALL,EAMKI,KANL,CAMW,SAAAC,KAAK,CAAI,CACZpB,QAAQ,CAAC,CAAEa,IAAI,CAAEvB,cAAR,CAAwBwB,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAjC,CAAD,CAAR,CACH,CARL,EASH,CAXD,CAYH","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData } from '../components/CommonScript';\r\nimport { initRequest } from './LoginAction';\r\nimport { toast } from 'react-toastify';\r\nimport { intl } from '../components/App';\r\n\r\nexport function selectedAlertView(AlertView, userInfo, masterData, dataState) {\r\n    return function (dispatch) {\r\n        let selectedId = AlertView.nsqlquerycode;\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/alertview/getSelectedAlertView\", { 'userinfo': userInfo, \"nsqlquerycode\": AlertView.nsqlquerycode })\r\n\r\n            .then(response => {\r\n\r\n                if (response.data.ReturnStatus === false){\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_INVALIDALERTQUERY\" }));\r\n                }\r\n                masterData = { ...masterData, selectedAlertView: response.data.selectedAlertView,\r\n                                SelectedAlert:response.data.SelectedAlert, \r\n                                sqlQueryName: response.data.sqlQueryName }; \r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false, \r\n                                                            selectedId, \r\n                                                            dataState:{...dataState, sort:undefined, filter:undefined}\r\n                                                        } });\r\n            })\r\n            .catch(error => {              \r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getListAlert(userInfo,loader) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(loader));\r\n        rsapi.post(\"/alertview/getAlerts\", { 'userinfo': userInfo})\r\n\r\n            .then(response => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: {alert:response.data.alert ,selectedAlertView: response.data.selectedAlertView,selectedAlertView1: response.data.selectedAlertView1 ,loading: false } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSelectedAlert(action,userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/alertview/getSelectedAlert\", { 'nsqlquerycode':action.nsqlquerycode,'userinfo': userInfo})\r\n\r\n            .then(response => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: {selectedAlertView: response.data.selectedAlertView,selectedAlertView1: response.data.selectedAlertView1, sqlQueryName: response.data.sqlQueryName , loading: false } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}