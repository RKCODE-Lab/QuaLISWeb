{"ast":null,"code":"import { toggleInlineFormat } from './inline-style';\nimport { hasMark, toggleMark, removeMark, selectionMarks } from './mark';\nimport { EditorState } from 'prosemirror-state';\n\nvar modifyLink = function (options, tr) {\n  return function (state, dispatch) {\n    var _a = state.selection,\n        $cursor = _a.$cursor,\n        from = _a.from,\n        to = _a.to;\n    var markType = state.schema.marks[options.mark];\n\n    if (!$cursor) {\n      tr.doc.nodesBetween(from, to, function (node, pos) {\n        if (node.isInline && markType.isInSet(node.marks)) {\n          tr.removeMark(pos, pos + node.nodeSize, markType);\n          tr.addMark(pos, pos + node.nodeSize, markType.create(options.attrs));\n          dispatch(tr);\n        }\n      });\n    } else {\n      var parentNode = $cursor.parent;\n      var cursorNodeIndex = $cursor.index();\n      var mark = parentNode.child(cursorNodeIndex).marks.find(function (m) {\n        return m.type === markType;\n      });\n      var childCount = parentNode.childCount;\n      var linkStart = $cursor.pos - $cursor.textOffset,\n          linkSize = parentNode.child(cursorNodeIndex).nodeSize,\n          index = void 0,\n          nodeSize = void 0;\n      index = cursorNodeIndex - 1;\n\n      while (index >= 0 && mark.isInSet(parentNode.child(index).marks)) {\n        nodeSize = parentNode.child(index).nodeSize;\n        linkSize += nodeSize;\n        linkStart -= nodeSize;\n        index -= 1;\n      }\n\n      index = cursorNodeIndex + 1;\n\n      while (index < childCount && mark.isInSet(parentNode.child(index).marks)) {\n        linkSize += parentNode.child(index).nodeSize;\n        index += 1;\n      }\n\n      tr.removeMark(linkStart, linkStart + linkSize, markType);\n      tr.addMark(linkStart, linkStart + linkSize, markType.create(options.attrs));\n      dispatch(tr);\n    }\n  };\n};\n\nexport var removeLink = function (options, tr) {\n  return function (state, dispatch) {\n    var $cursor = state.selection.$cursor;\n\n    if (!$cursor) {\n      toggleInlineFormat(options, tr)(state, dispatch);\n    } else {\n      var parentNode = $cursor.parent;\n      var cursorNodeIndex = $cursor.index();\n      var toolMark_1 = state.schema.marks[options.mark];\n      var mark = parentNode.child(cursorNodeIndex).marks.find(function (m) {\n        return m.type === toolMark_1;\n      });\n      var childCount = parentNode.childCount;\n      var linkStart = $cursor.pos - $cursor.textOffset,\n          linkSize = parentNode.child(cursorNodeIndex).nodeSize,\n          index = void 0,\n          nodeSize = void 0;\n      index = cursorNodeIndex - 1;\n\n      while (index >= 0 && mark.isInSet(parentNode.child(index).marks)) {\n        nodeSize = parentNode.child(index).nodeSize;\n        linkSize += nodeSize;\n        linkStart -= nodeSize;\n        index -= 1;\n      }\n\n      index = cursorNodeIndex + 1;\n\n      while (index < childCount && mark.isInSet(parentNode.child(index).marks)) {\n        linkSize += parentNode.child(index).nodeSize;\n        index += 1;\n      }\n\n      dispatch(removeMark(tr || state.tr, linkStart, linkStart + linkSize, mark));\n    }\n  };\n};\n/**\n * Returns a mark which wraps the selection.\n */\n\nvar getParentMark = function (state, markType) {\n  var marks = selectionMarks(state, markType);\n  return marks.length === 1 && marks[0] ? marks[0] : null;\n};\n\nexport var applyLink = function (_a, commandName) {\n  var mark = _a.mark,\n      attrs = _a.attrs;\n\n  if (commandName === void 0) {\n    commandName = 'link';\n  }\n\n  return function (state, dispatch) {\n    var marks = state.schema.marks;\n    var tr = state.tr;\n\n    if (commandName) {\n      tr.setMeta('commandName', commandName);\n      tr.setMeta('args', attrs);\n    }\n\n    var dispatched = false;\n\n    var markDispatched = function () {\n      return dispatched = true;\n    };\n\n    if (getParentMark(state, marks[mark])) {\n      modifyLink({\n        mark: mark,\n        attrs: attrs\n      }, tr)(state, markDispatched);\n    } else {\n      var nextState = state;\n\n      if (hasMark(state, {\n        mark: mark\n      })) {\n        removeLink({\n          mark: mark,\n          attrs: attrs\n        }, tr)(state, markDispatched);\n        nextState = EditorState.create({\n          doc: tr.doc,\n          selection: tr.selection\n        });\n      }\n\n      if (dispatched) {\n        toggleMark(marks[mark], attrs, tr)(nextState, markDispatched);\n      } else {\n        toggleInlineFormat({\n          mark: mark\n        }, tr, attrs)(nextState, markDispatched);\n      }\n    }\n\n    if (dispatched) {\n      dispatch(tr);\n    }\n\n    return dispatched;\n  };\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/@progress/kendo-editor-common/dist/es/link.js"],"names":["toggleInlineFormat","hasMark","toggleMark","removeMark","selectionMarks","EditorState","modifyLink","options","tr","state","dispatch","_a","selection","$cursor","from","to","markType","schema","marks","mark","doc","nodesBetween","node","pos","isInline","isInSet","nodeSize","addMark","create","attrs","parentNode","parent","cursorNodeIndex","index","child","find","m","type","childCount","linkStart","textOffset","linkSize","removeLink","toolMark_1","getParentMark","length","applyLink","commandName","setMeta","dispatched","markDispatched","nextState"],"mappings":"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","sourcesContent":["import { toggleInlineFormat } from './inline-style';\nimport { hasMark, toggleMark, removeMark, selectionMarks } from './mark';\nimport { EditorState } from 'prosemirror-state';\nvar modifyLink = function (options, tr) { return function (state, dispatch) {\n    var _a = state.selection, $cursor = _a.$cursor, from = _a.from, to = _a.to;\n    var markType = state.schema.marks[options.mark];\n    if (!$cursor) {\n        tr.doc.nodesBetween(from, to, function (node, pos) {\n            if (node.isInline && markType.isInSet(node.marks)) {\n                tr.removeMark(pos, pos + node.nodeSize, markType);\n                tr.addMark(pos, pos + node.nodeSize, markType.create(options.attrs));\n                dispatch(tr);\n            }\n        });\n    }\n    else {\n        var parentNode = $cursor.parent;\n        var cursorNodeIndex = $cursor.index();\n        var mark = parentNode.child(cursorNodeIndex).marks.find(function (m) { return m.type === markType; });\n        var childCount = parentNode.childCount;\n        var linkStart = $cursor.pos - $cursor.textOffset, linkSize = parentNode.child(cursorNodeIndex).nodeSize, index = void 0, nodeSize = void 0;\n        index = cursorNodeIndex - 1;\n        while (index >= 0 && mark.isInSet(parentNode.child(index).marks)) {\n            nodeSize = parentNode.child(index).nodeSize;\n            linkSize += nodeSize;\n            linkStart -= nodeSize;\n            index -= 1;\n        }\n        index = cursorNodeIndex + 1;\n        while (index < childCount && mark.isInSet(parentNode.child(index).marks)) {\n            linkSize += parentNode.child(index).nodeSize;\n            index += 1;\n        }\n        tr.removeMark(linkStart, linkStart + linkSize, markType);\n        tr.addMark(linkStart, linkStart + linkSize, markType.create(options.attrs));\n        dispatch(tr);\n    }\n}; };\nexport var removeLink = function (options, tr) { return function (state, dispatch) {\n    var $cursor = state.selection.$cursor;\n    if (!$cursor) {\n        toggleInlineFormat(options, tr)(state, dispatch);\n    }\n    else {\n        var parentNode = $cursor.parent;\n        var cursorNodeIndex = $cursor.index();\n        var toolMark_1 = state.schema.marks[options.mark];\n        var mark = parentNode.child(cursorNodeIndex).marks.find(function (m) { return m.type === toolMark_1; });\n        var childCount = parentNode.childCount;\n        var linkStart = $cursor.pos - $cursor.textOffset, linkSize = parentNode.child(cursorNodeIndex).nodeSize, index = void 0, nodeSize = void 0;\n        index = cursorNodeIndex - 1;\n        while (index >= 0 && mark.isInSet(parentNode.child(index).marks)) {\n            nodeSize = parentNode.child(index).nodeSize;\n            linkSize += nodeSize;\n            linkStart -= nodeSize;\n            index -= 1;\n        }\n        index = cursorNodeIndex + 1;\n        while (index < childCount && mark.isInSet(parentNode.child(index).marks)) {\n            linkSize += parentNode.child(index).nodeSize;\n            index += 1;\n        }\n        dispatch(removeMark(tr || state.tr, linkStart, linkStart + linkSize, mark));\n    }\n}; };\n/**\n * Returns a mark which wraps the selection.\n */\nvar getParentMark = function (state, markType) {\n    var marks = selectionMarks(state, markType);\n    return marks.length === 1 && marks[0] ? marks[0] : null;\n};\nexport var applyLink = function (_a, commandName) {\n    var mark = _a.mark, attrs = _a.attrs;\n    if (commandName === void 0) { commandName = 'link'; }\n    return function (state, dispatch) {\n        var marks = state.schema.marks;\n        var tr = state.tr;\n        if (commandName) {\n            tr.setMeta('commandName', commandName);\n            tr.setMeta('args', attrs);\n        }\n        var dispatched = false;\n        var markDispatched = function () { return dispatched = true; };\n        if (getParentMark(state, marks[mark])) {\n            modifyLink({ mark: mark, attrs: attrs }, tr)(state, markDispatched);\n        }\n        else {\n            var nextState = state;\n            if (hasMark(state, { mark: mark })) {\n                removeLink({ mark: mark, attrs: attrs }, tr)(state, markDispatched);\n                nextState = EditorState.create({ doc: tr.doc, selection: tr.selection });\n            }\n            if (dispatched) {\n                toggleMark(marks[mark], attrs, tr)(nextState, markDispatched);\n            }\n            else {\n                toggleInlineFormat({ mark: mark }, tr, attrs)(nextState, markDispatched);\n            }\n        }\n        if (dispatched) {\n            dispatch(tr);\n        }\n        return dispatched;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}