{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{sortData,constructOptionList,rearrangeDateFormat,formatInputDate}from'../components/CommonScript';import{transactionStatus}from'../components/Enumeration';import{intl}from\"../components/App\";export var getreloadQuotation=function getreloadQuotation(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/quotation/get\"+inputParam.methodUrl,inputParam.inputData).then(function(response){var masterData=response.data;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{loading:false,dataState:undefined,masterData:_objectSpread({},masterData)}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function getClientCategoryComboService(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/client/getClientByCategory\",{\"userinfo\":methodParam.inputData.userinfo,\"nclientcatcode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var Client,sclientsiteaddress;var SelectedClient=[];var usertMap=constructOptionList(response[0].data.Client||[],\"nclientcode\",\"sclientname\",undefined,undefined,false);Client=usertMap.get(\"OptionList\");// SelectedClient=response[0].data.selectedClient;\n//  sclientsiteaddress= response[0].data.selectedClientSite.saddress1;\n// selectedRecord={...selectedRecord,...response[0].data.selectedClient}\n// selectedRecord={...selectedRecord,...response[0].data.selectedClientSite.saddress1} \nif(Client.length>0){selectedRecord[\"nclientcode\"]={label:response[0].data.selectedClient.sclientname,value:response[0].data.selectedClient.nclientcode,item:response[0].data.selectedClient};// selectedRecord[\"nclientcode\"]=response[0].data.selectedClient.nclientcode;\n// selectedRecord[\"sclientname\"]=response[0].data.selectedClient.sclientname;\nvar ClientSite=response[0].data.ClientSite;var ActiveClientSite=ClientSite.filter(function(x){return x.ndefaultstatus===3;});selectedRecord[\"sclientsiteaddress\"]=ActiveClientSite[0].saddress1;// selectedRecord={response[0].data.selectedClientSite.saddress1}\n}selectedRecord=_objectSpread({},selectedRecord);dispatch({type:DEFAULT_RETURN,payload:{Client:Client,selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined,sclientsiteaddress:sclientsiteaddress,SelectedClient:SelectedClient}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getQuotaionClientComboService(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/client/getSelectedClientDetail\",{\"userinfo\":methodParam.inputData.userinfo,\"nclientcode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var sclientsiteaddress;var SelectedClient=[];// SelectedClient=response[0].data.selectedClient;\n// sclientsiteaddress= response[0].data.selectedClientSite.saddress1;\nselectedRecord[\"sclientname\"]=response[0].data.selectedClient.sclientname;selectedRecord[\"sclientsiteaddress\"]=response[0].data.selectedClientSite.saddress1;dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined,sclientsiteaddress:sclientsiteaddress,SelectedClient:SelectedClient}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getQuotaionProductCategoryComboService(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/quotation/getProductByCategory\",{\"userinfo\":methodParam.inputData.userinfo,\"nproductcatcode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var Product;var usertMap=constructOptionList(response[0].data.Product||[],\"nproductcode\",\"sproductname\",undefined,undefined,false);Product=usertMap.get(\"OptionList\");if(Product.length>0){selectedRecord[\"nproductcode\"]={label:response[0].data.Product[0].sproductname,value:response[0].data.Product[0].nproductcode,item:response[0].data.Product[0]};}selectedRecord=_objectSpread({},selectedRecord);dispatch({type:DEFAULT_RETURN,payload:{Product:Product,selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getProjectTypeComboService(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/projectmaster/getApprovedProjectMasterByProjectType\",{\"userinfo\":methodParam.inputData.userinfo,\"nprojecttypecode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var ProjectCode,ProjectMaster=[];// let srfwdate;\nvar usertMap=constructOptionList(response[0].data.ProjectCode||[],\"nprojectmastercode\",\"sprojectcode\",undefined,undefined,false);ProjectCode=usertMap.get(\"OptionList\");if(ProjectCode.length>0){selectedRecord[\"nprojectmastercode\"]={label:response[0].data.SelectedProjectCode.sprojectcode,value:response[0].data.SelectedProjectCode.nprojectmastercode,item:response[0].data.SelectedProjectCode};// srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.Projectmaster[0].srfwdate); --  New\n//  srfwdate=response[0].data.Projectmaster[0].srfwdate;\nselectedRecord[\"sprojecttitle\"]=response[0].data.Projectmaster[0].sprojecttitle;// selectedRecord[\"srfwdate\"]=srfwdate; -- New\nselectedRecord[\"suserrolename\"]=response[0].data.Projectmaster[0].suserrolename;selectedRecord[\"susername\"]=response[0].data.Projectmaster[0].susername;// selectedRecord[\"nuserrolecode\"]=response[0].data.Projectmaster[0].nuserrolecode;\nselectedRecord[\"nusercode\"]=response[0].data.Projectmaster[0].nusercode;// ProjectMaster={...response[0].data.Projectmaster[0],srfwdate:srfwdate};\n}dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined,ProjectCode:ProjectCode,ProjectMaster:ProjectMaster}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getProjectCodeComboService(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/projectmaster/getActiveProjectMasterById\",{\"userinfo\":methodParam.inputData.userinfo,\"nprojectmastercode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){// let ProjectMaster=[];  \n// let srfwdate;  \n// srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.Projectmaster[0].srfwdate);\n// ProjectMaster=response[0].data.SelectedProjectMaster;\nselectedRecord[\"nprojectmastercode\"]={label:response[0].data.SelectedProjectMaster.sprojectcode,value:response[0].data.SelectedProjectMaster.nprojectmastercode,item:response[0].data.SelectedProjectMaster};// srfwdate=response[0].data.SelectedProjectMaster.srfwdate;\n// ProjectMaster={...response[0].data.SelectedProjectMaster,srfwdate:srfwdate};\n// srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.SelectedProjectMaster.srfwdate); -- New\nselectedRecord[\"sprojecttitle\"]=response[0].data.SelectedProjectMaster.sprojecttitle;// selectedRecord[\"srfwdate\"]=srfwdate; -- New\nselectedRecord[\"suserrolename\"]=response[0].data.SelectedProjectMaster.suserrolename;selectedRecord[\"susername\"]=response[0].data.SelectedProjectMaster.susername;// selectedRecord[\"nuserrolecode\"]=response[0].data.SelectedProjectMaster.nuserrolecode;\nselectedRecord[\"nusercode\"]=response[0].data.SelectedProjectMaster.nusercode;dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}//Add Quotation\nexport var addQuotation=function addQuotation(operation,userInfo,ncontrolCode,selectedQuotation){return function(dispatch){if(operation===\"create\"||operation===\"update\"&&selectedQuotation.ntransactionstatus!==transactionStatus.APPROVED){dispatch(initRequest(true));var urlArray=[];var selectedRecord={};if(operation===\"create\"||operation===\"update\"){urlArray.push(rsapi.post(\"clientcategory/getClientCategory\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"client/getClientByCategory\",{\"nclientcatcode\":1,\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"projecttype/getProjectType\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"quotation/getQuotationType\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"productcategory/getProductCategory\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"product/getProduct\",{\"nproductcode\":null,\"userinfo\":userInfo}));}if(operation===\"update\"){urlArray.push(rsapi.post(\"quotation/getActiveQuotationById\",{\"userinfo\":userInfo,\"nquotationcode\":selectedQuotation.nquotationcode}));}Axios.all(urlArray).then(function(response){var testData={};var _ref=[],ClientCategory=_ref.ClientCategory,Client=_ref.Client,ProjectType=_ref.ProjectType,ProjectMaster=_ref.ProjectMaster,sclientsiteaddress=_ref.sclientsiteaddress,QuotationType=_ref.QuotationType,Product=_ref.Product,ProductCategory=_ref.ProductCategory;if(operation===\"create\"){ClientCategory=constructOptionList(response[0].data||[],\"nclientcatcode\",\"sclientcatname\",false,false,true).get(\"OptionList\");//       Client = constructOptionList(response[1].data || [], \"nclientcode\", \"sclientname\", false, false, true).get(\"OptionList\");\nProjectType=constructOptionList(response[2].data||[],\"nprojecttypecode\",\"sprojecttypename\",false,false,true).get(\"OptionList\");QuotationType=constructOptionList(response[3].data||[],\"nquotationtypecode\",\"squotationname\",false,false,true).get(\"OptionList\");selectedRecord[\"dquotationdate\"]=new Date();ProductCategory=constructOptionList(response[4].data||[],\"nproductcatcode\",\"sproductcatname\",false,false,true).get(\"OptionList\");Product=constructOptionList(response[5].data.Product||[],\"nproductcode\",\"sproductname\",false,false,true).get(\"OptionList\");// selectedRecord[\"dquotationdate\"] = formatInputDate(new Date(), true);\n}else if(operation===\"update\"){var editData=response[6].data.SelectedQuotation;// ProjectMaster=response[5].data.SelectedQuotation;\n// sclientsiteaddress = editData.sclientsiteaddress;\nselectedRecord[\"sclientsiteaddress\"]=editData.sclientsiteaddress;// selectedRecord[\"sinvoiceaddress\"] = editData.sinvoiceaddress;\n// selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\nselectedRecord[\"sdescription\"]=editData.sdescription;selectedRecord[\"sdeviationremarks\"]=editData.sdeviationremarks;// selectedRecord[\"suserrolename\"] = editData.suserrolename;\n// selectedRecord[\"susername\"] = editData.susername;\n// selectedRecord[\"nuserrolecode\"] = editData.nuserrolecode;\n// selectedRecord[\"nusercode\"] = editData.nusercode;\nselectedRecord[\"soem\"]=editData.soem;selectedRecord[\"squotationleadtime\"]=editData.squotationleadtime;selectedRecord=_objectSpread({},selectedRecord);ClientCategory=constructOptionList(response[0].data||[],\"nclientcatcode\",\"sclientcatname\",false,false,true).get(\"OptionList\");Client=constructOptionList(response[1].data.Client||[],\"nclientcode\",\"sclientname\",false,false,true).get(\"OptionList\");ProjectType=constructOptionList(response[2].data||[],\"nprojecttypecode\",\"sprojecttypename\",false,false,true).get(\"OptionList\");QuotationType=constructOptionList(response[3].data||[],\"nquotationtypecode\",\"squotationname\",false,false,true).get(\"OptionList\");ProductCategory=constructOptionList(response[4].data||[],\"nproductcatcode\",\"sproductcatname\",false,false,true).get(\"OptionList\");Product=constructOptionList(response[5].data.Product||[],\"nproductcode\",\"sproductname\",false,false,true).get(\"OptionList\");// selectedRecord[\"nprojecttypecode\"] = {\n//     \"value\": editData[\"nprojecttypecode\"],\n//     \"label\":  editData[\"sprojecttypename\"]\n// };\nselectedRecord[\"nclientcatcode\"]={\"value\":editData[\"nclientcatcode\"],\"label\":editData[\"sclientcatname\"]};selectedRecord[\"nclientcode\"]={\"value\":editData[\"nclientcode\"],\"label\":editData[\"sclientname\"]};// selectedRecord[\"nquotationtypecode\"] = {\n//     \"value\": editData[\"nquotationtypecode\"],\n//     \"label\": editData[\"squotationname\"]\n// };\n// selectedRecord[\"nprojectmastercode\"] = {\n//     \"value\": editData[\"nprojectmastercode\"],\n//     \"label\": editData[\"sprojectcode\"]\n// };\nselectedRecord[\"nproductcatcode\"]={\"value\":editData[\"nproductcatcode\"],\"label\":editData[\"sproductcatname\"]};selectedRecord[\"nproductcode\"]={\"value\":editData[\"nproductcode\"],\"label\":editData[\"sproductname\"]};// selectedRecord[\"srfwdate\"] = rearrangeDateFormat(userInfo,editData.srfwdate);\nselectedRecord[\"dquotationdate\"]=rearrangeDateFormat(userInfo,editData.squotationdate);}dispatch({type:DEFAULT_RETURN,payload:{openModal:true,ProjectType:ProjectType,operation:operation,ClientCategory:ClientCategory,Client:Client,ProjectMaster:ProjectMaster,sclientsiteaddress:sclientsiteaddress,QuotationType:QuotationType,Product:Product,ProductCategory:ProductCategory,screenName:\"IDS_QUOTATION\",modalScreenSize:false,selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,testData:testData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}};};export var GrossQuotation=function GrossQuotation(operation,userInfo,ncontrolCode,selectedQuotation){return function(dispatch){//  if (operation === \"create\" || (operation === \"update\" && selectedQuotation.ntransactionstatus !== transactionStatus.RETIRED)) {\ndispatch(initRequest(true));var urlArray=[];var selectedRecord={};urlArray.push(rsapi.post(\"discountband/getDiscountBand\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"vatband/getVATBand\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"quotation/getQuotationGrossAmount\",{\"nquotationcode\":selectedQuotation.nquotationcode,\"userinfo\":userInfo}));Axios.all(urlArray).then(function(response){var _ref2=[],DiscountBand=_ref2.DiscountBand,VATBand=_ref2.VATBand;DiscountBand=constructOptionList(response[0].data||[],\"ndiscountbandcode\",\"sdiscountbandname\",false,false,true).get(\"OptionList\");VATBand=constructOptionList(response[1].data||[],\"nvatbandcode\",\"svatbandname\",false,false,true).get(\"OptionList\");var QuotationGrossAmount=response[2].data;if(QuotationGrossAmount[0].ndiscountpercentage>0||QuotationGrossAmount[0].nvatpercentage>0){//  selectedRecord[\"ndiscountamount\"] = QuotationGrossAmount[0].ndiscountamount; \n//   selectedRecord[\"nvatamount\"] = QuotationGrossAmount[0].nvatamount; \nselectedRecord[\"ndiscountpercentage\"]=QuotationGrossAmount[0].ndiscountpercentage;selectedRecord[\"DiscountAmount\"]=QuotationGrossAmount[0].ndiscountamount;selectedRecord[\"nvatpercentage\"]=QuotationGrossAmount[0].nvatpercentage;selectedRecord[\"VatAmount\"]=QuotationGrossAmount[0].nvatamount;selectedRecord[\"TotalNetAmount\"]=QuotationGrossAmount[0].ntotalgrossamount+selectedRecord[\"VatAmount\"]-selectedRecord[\"DiscountAmount\"];if(QuotationGrossAmount[0].ndiscountpercentage>0){selectedRecord[\"ndiscountbandcode\"]={\"value\":QuotationGrossAmount[0][\"ndiscountbandcode\"],\"label\":QuotationGrossAmount[0][\"sdiscountbandname\"]};}if(QuotationGrossAmount[0].nvatpercentage>0){selectedRecord[\"nvatbandcode\"]={\"value\":QuotationGrossAmount[0][\"nvatbandcode\"],\"label\":QuotationGrossAmount[0][\"svatbandname\"]};}}else{/*                 selectedRecord[\"ndiscountpercentage\"]= DiscountBand[0].item.namount;\r\n                    selectedRecord[\"nvatpercentage\"] = VATBand[0].item.namount;\r\n\r\n                    selectedRecord[\"nvatbandcode\"] = {\r\n                        \"value\": VATBand[0][\"value\"],\r\n                        \"label\": VATBand[0][\"label\"]\r\n                    };\r\n\r\n                    selectedRecord[\"ndiscountbandcode\"] = {\r\n                        \"value\": DiscountBand[0][\"value\"],\r\n                        \"label\": DiscountBand[0][\"label\"]\r\n                    }; \r\n\r\n                    selectedRecord[\"DiscountAmount\"]=QuotationGrossAmount[0].ntotalgrossamount * (DiscountBand[0].item.namount/100);\r\n                    selectedRecord[\"VatAmount\"]=QuotationGrossAmount[0].ntotalgrossamount * (VATBand[0].item.namount/100);\r\n     //             selectedRecord[\"TotalNetAmount\"]=QuotationGrossAmount[0].ntotalgrossamount+(selectedRecord[\"DiscountAmount\"]-selectedRecord[\"VatAmount\"]);\r\n                    selectedRecord[\"TotalNetAmount\"]=(QuotationGrossAmount[0].ntotalgrossamount+selectedRecord[\"VatAmount\"])-selectedRecord[\"DiscountAmount\"];\r\n\r\n*/selectedRecord[\"ndiscountpercentage\"]=0;selectedRecord[\"nvatpercentage\"]=0;selectedRecord[\"nvatbandcode\"]=\"\";selectedRecord[\"ndiscountbandcode\"]=\"\";selectedRecord[\"DiscountAmount\"]=0;selectedRecord[\"VatAmount\"]=0;selectedRecord[\"TotalNetAmount\"]=QuotationGrossAmount[0].ntotalgrossamount;}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,DiscountBand:DiscountBand,modalScreenSize:false,operation:operation,VATBand:VATBand,QuotationGrossAmount:QuotationGrossAmount,screenName:\"IDS_CALCULATEPRICING\",selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});//  } else {\n//         toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\n//  }\n};};//Quotation Record Click \nexport var getQuotation=function getQuotation(quotationItem,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/quotation/getActiveQuotationById\",{nquotationcode:quotationItem.nquotationcode,userinfo:userInfo}).then(function(response){var masterData1=_objectSpread(_objectSpread({},masterData),response.data);// ...masterData,\n// ...response.data\nmasterData=masterData1;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{// masterData,\nloading:false,dataState:undefined,masterData:masterData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function getQuotationAddTestService(screenName,operation,masterData,userInfo,ncontrolCode){return function(dispatch){if(masterData.SelectedQuotation.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));rsapi.post(\"quotation/getQuotationUnmappedTest\",{\"nquotationcode\":masterData.SelectedQuotation[\"nquotationcode\"],userinfo:userInfo}).then(function(response){var masterData1=_objectSpread(_objectSpread({},masterData),response.data);masterData=masterData1;dispatch({type:DEFAULT_RETURN,payload:{QuotationTestList:response.data,masterData:masterData,modalScreenSize:false,openChildModal:true,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,//selectedRecord, \nloading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}};}export function getQuotationPricingEditService(editParam){return function(dispatch){// screenName, operation, masterData, userInfo, ncontrolCode\n//console.log(\"editParam:\", editParam);\nif(editParam.masterData.SelectedQuotation.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));var urlArray=[];urlArray.push(rsapi.post(\"discountband/getDiscountBand\",{\"userinfo\":editParam.userInfo}));urlArray.push(rsapi.post(\"quotation/getQuotationPrice\",{\"nquotationcode\":editParam.masterData.SelectedQuotation[\"nquotationcode\"],\"nquotationtestcode\":editParam.editRow?editParam.editRow.nquotationtestcode:null,userinfo:editParam.userInfo}));Axios.all(urlArray).then(function(response){var DiscountBand=[].DiscountBand;var selectedRecord=[];DiscountBand=constructOptionList(response[0].data||[],\"ndiscountbandcode\",\"sdiscountbandname\",false,false,true).get(\"OptionList\");// selectedRecord[\"namount\"]= response[0].data[0].namount;\n// selectedRecord[\"ndiscountbandcode\"]= response[0].data[0].ndiscountbandcode;\nif(editParam.editRow){selectedRecord.push(response[1].data[\"SelectedQuotationPrice\"]);selectedRecord[0][\"ndiscountbandcode\"]=_objectSpread(_objectSpread({},selectedRecord[0][\"ndiscountbandcode\"]),{},{label:selectedRecord[0].sdiscountbandname,value:selectedRecord[0].ndiscountbandcode});}else{selectedRecord=sortData(response[1].data[\"QuotationPrice\"]);response[1].data[\"QuotationPrice\"].forEach(function(item,index){selectedRecord[index][\"ndiscountbandcode\"]=_objectSpread(_objectSpread({},selectedRecord[index][\"ndiscountbandcode\"]),{},{label:item.sdiscountbandname,value:item.ndiscountbandcode});});}dispatch({type:DEFAULT_RETURN,payload:{//pricingTestList:testList, \n//testPriceList:response.data[\"TestPrice\"],\nopenChildModal:true,modalScreenSize:true,operation:editParam.operation,screenName:editParam.screenName,ncontrolCode:editParam.ncontrolCode,selectedRecord:selectedRecord,selectedId:editParam.editRow?editParam.editRow.nquotationtestcode:null,loading:false,quotationDataState:editParam.quotationDataState,DiscountBand:DiscountBand}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/QuotationAction.js"],"names":["rsapi","Axios","toast","DEFAULT_RETURN","initRequest","sortData","constructOptionList","rearrangeDateFormat","formatInputDate","transactionStatus","intl","getreloadQuotation","inputParam","dispatch","post","methodUrl","inputData","then","response","masterData","data","type","payload","loading","dataState","undefined","catch","error","message","getClientCategoryComboService","methodParam","selectedRecord","URL","userinfo","primarykey","all","Client","sclientsiteaddress","SelectedClient","usertMap","get","length","label","selectedClient","sclientname","value","nclientcode","item","ClientSite","ActiveClientSite","filter","x","ndefaultstatus","saddress1","status","warn","getQuotaionClientComboService","selectedClientSite","getQuotaionProductCategoryComboService","Product","sproductname","nproductcode","getProjectTypeComboService","ProjectCode","ProjectMaster","SelectedProjectCode","sprojectcode","nprojectmastercode","Projectmaster","sprojecttitle","suserrolename","susername","nusercode","getProjectCodeComboService","SelectedProjectMaster","addQuotation","operation","userInfo","ncontrolCode","selectedQuotation","ntransactionstatus","APPROVED","urlArray","push","nquotationcode","testData","ClientCategory","ProjectType","QuotationType","ProductCategory","Date","editData","SelectedQuotation","sdescription","sdeviationremarks","soem","squotationleadtime","squotationdate","openModal","screenName","modalScreenSize","formatMessage","id","GrossQuotation","DiscountBand","VATBand","QuotationGrossAmount","ndiscountpercentage","nvatpercentage","ndiscountamount","nvatamount","ntotalgrossamount","openChildModal","getQuotation","quotationItem","masterData1","getQuotationAddTestService","DRAFT","QuotationTestList","getQuotationPricingEditService","editParam","editRow","nquotationtestcode","sdiscountbandname","ndiscountbandcode","forEach","index","selectedId","quotationDataState"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport { DEFAULT_RETURN} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData ,constructOptionList,rearrangeDateFormat,formatInputDate } from '../components/CommonScript';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\"; \r\n\r\nexport const getreloadQuotation = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/quotation/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n                    \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            // quotation: inputParam.inputData.quotation\r\n                            \r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getClientCategoryComboService(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/client/getClientByCategory\", { \"userinfo\": methodParam.inputData.userinfo, \"nclientcatcode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let Client,sclientsiteaddress;\r\n                let SelectedClient=[];\r\n             \r\n\r\n                const usertMap = constructOptionList(response[0].data.Client || [], \"nclientcode\",\"sclientname\", undefined, undefined, false);              \r\n\r\n                Client = usertMap.get(\"OptionList\");\r\n\r\n                // SelectedClient=response[0].data.selectedClient;\r\n               //  sclientsiteaddress= response[0].data.selectedClientSite.saddress1;\r\n                // selectedRecord={...selectedRecord,...response[0].data.selectedClient}\r\n                // selectedRecord={...selectedRecord,...response[0].data.selectedClientSite.saddress1} \r\n\r\n                if(Client.length>0){\r\n                    \r\n                    selectedRecord[\"nclientcode\"]=  {\r\n                        label: response[0].data.selectedClient.sclientname,\r\n                        value: response[0].data.selectedClient.nclientcode,\r\n                        item: response[0].data.selectedClient\r\n                    }\r\n                    // selectedRecord[\"nclientcode\"]=response[0].data.selectedClient.nclientcode;\r\n                    // selectedRecord[\"sclientname\"]=response[0].data.selectedClient.sclientname;\r\n                    let ClientSite = response[0].data.ClientSite;\r\n                    let ActiveClientSite = ClientSite.filter(x => x.ndefaultstatus === 3);\r\n\r\n                    selectedRecord[\"sclientsiteaddress\"]=ActiveClientSite[0].saddress1;\r\n                    // selectedRecord={response[0].data.selectedClientSite.saddress1}\r\n                }\r\n                \r\n               selectedRecord = {...selectedRecord}\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                     { Client,selectedRecord, loading: false, data: undefined, dataState: undefined,sclientsiteaddress,SelectedClient } })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function getQuotaionClientComboService(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/client/getSelectedClientDetail\", { \"userinfo\": methodParam.inputData.userinfo, \"nclientcode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let sclientsiteaddress;\r\n                let SelectedClient=[];\r\n\r\n                // SelectedClient=response[0].data.selectedClient;\r\n                // sclientsiteaddress= response[0].data.selectedClientSite.saddress1;\r\n                selectedRecord[\"sclientname\"]=response[0].data.selectedClient.sclientname;\r\n                selectedRecord[\"sclientsiteaddress\"]=response[0].data.selectedClientSite.saddress1;\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                     { selectedRecord, loading: false, data: undefined, dataState: undefined,sclientsiteaddress,SelectedClient } })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function getQuotaionProductCategoryComboService(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/quotation/getProductByCategory\", { \"userinfo\": methodParam.inputData.userinfo, \"nproductcatcode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let Product;\r\n               \r\n                const usertMap = constructOptionList(response[0].data.Product || [], \"nproductcode\",\"sproductname\", undefined, undefined, false);              \r\n\r\n                Product = usertMap.get(\"OptionList\");\r\n\r\n                if(Product.length>0){\r\n                    \r\n                    selectedRecord[\"nproductcode\"]=  {\r\n                        label: response[0].data.Product[0].sproductname,\r\n                        value: response[0].data.Product[0].nproductcode,\r\n                        item: response[0].data.Product[0]\r\n                    }\r\n\r\n                }\r\n                \r\n               selectedRecord = {...selectedRecord}\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                    { Product,selectedRecord, loading: false, data: undefined, dataState: undefined } })\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function getProjectTypeComboService(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/projectmaster/getApprovedProjectMasterByProjectType\", { \"userinfo\": methodParam.inputData.userinfo, \"nprojecttypecode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let ProjectCode,ProjectMaster=[];    \r\n                // let srfwdate;\r\n\r\n                const usertMap = constructOptionList(response[0].data.ProjectCode || [], \"nprojectmastercode\",\"sprojectcode\", undefined, undefined, false);              \r\n\r\n                ProjectCode = usertMap.get(\"OptionList\");\r\n    \r\n                if(ProjectCode.length>0){\r\n\r\n                    selectedRecord[\"nprojectmastercode\"]=  {\r\n                                label: response[0].data.SelectedProjectCode.sprojectcode,\r\n                                value: response[0].data.SelectedProjectCode.nprojectmastercode,\r\n                                item: response[0].data.SelectedProjectCode}\r\n\r\n                // srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.Projectmaster[0].srfwdate); --  New\r\n                //  srfwdate=response[0].data.Projectmaster[0].srfwdate;\r\n                    selectedRecord[\"sprojecttitle\"]=response[0].data.Projectmaster[0].sprojecttitle;\r\n                // selectedRecord[\"srfwdate\"]=srfwdate; -- New\r\n                    selectedRecord[\"suserrolename\"]=response[0].data.Projectmaster[0].suserrolename;\r\n                    selectedRecord[\"susername\"]=response[0].data.Projectmaster[0].susername;\r\n                    // selectedRecord[\"nuserrolecode\"]=response[0].data.Projectmaster[0].nuserrolecode;\r\n                    selectedRecord[\"nusercode\"]=response[0].data.Projectmaster[0].nusercode;\r\n                    // ProjectMaster={...response[0].data.Projectmaster[0],srfwdate:srfwdate};\r\n                }\r\n               \r\n\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                     { selectedRecord, loading: false, data: undefined, dataState: undefined,ProjectCode,ProjectMaster } })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function getProjectCodeComboService(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/projectmaster/getActiveProjectMasterById\", { \"userinfo\": methodParam.inputData.userinfo, \"nprojectmastercode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                // let ProjectMaster=[];  \r\n                // let srfwdate;  \r\n               \r\n                // srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.Projectmaster[0].srfwdate);\r\n                \r\n                // ProjectMaster=response[0].data.SelectedProjectMaster;\r\n\r\n                selectedRecord[\"nprojectmastercode\"]=  {\r\n                    label: response[0].data.SelectedProjectMaster.sprojectcode,\r\n                    value: response[0].data.SelectedProjectMaster.nprojectmastercode,\r\n                    item: response[0].data.SelectedProjectMaster}\r\n\r\n                // srfwdate=response[0].data.SelectedProjectMaster.srfwdate;\r\n                // ProjectMaster={...response[0].data.SelectedProjectMaster,srfwdate:srfwdate};\r\n\r\n                // srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.SelectedProjectMaster.srfwdate); -- New\r\n                selectedRecord[\"sprojecttitle\"]=response[0].data.SelectedProjectMaster.sprojecttitle;\r\n                // selectedRecord[\"srfwdate\"]=srfwdate; -- New\r\n                selectedRecord[\"suserrolename\"]=response[0].data.SelectedProjectMaster.suserrolename;\r\n                selectedRecord[\"susername\"]=response[0].data.SelectedProjectMaster.susername;\r\n                // selectedRecord[\"nuserrolecode\"]=response[0].data.SelectedProjectMaster.nuserrolecode;\r\n                selectedRecord[\"nusercode\"]=response[0].data.SelectedProjectMaster.nusercode;\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                     { selectedRecord, loading: false, data: undefined, dataState: undefined } })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n//Add Quotation\r\nexport const addQuotation = (operation, userInfo, ncontrolCode,selectedQuotation ) => {\r\n    return function (dispatch) {\r\n     if (operation === \"create\" || (operation === \"update\" && selectedQuotation.ntransactionstatus !== transactionStatus.APPROVED)) {\r\n                dispatch(initRequest(true));\r\n            const urlArray = [\r\n            ];\r\n            let selectedRecord = {};\r\n\r\n             if (operation === \"create\" || operation === \"update\") {\r\n\r\n                urlArray.push(rsapi.post(\"clientcategory/getClientCategory\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n                urlArray.push(rsapi.post(\"client/getClientByCategory\", {\r\n                    \"nclientcatcode\": 1,\r\n                    \"userinfo\": userInfo\r\n                })); \r\n\r\n\r\n                urlArray.push(rsapi.post(\"projecttype/getProjectType\", {\r\n                    \"userinfo\": userInfo \r\n                    \r\n                })); \r\n         \r\n                urlArray.push(rsapi.post(\"quotation/getQuotationType\", {\r\n                    \"userinfo\": userInfo \r\n                    \r\n                })); \r\n\r\n                urlArray.push(rsapi.post(\"productcategory/getProductCategory\", {\r\n                    \"userinfo\": userInfo \r\n                    \r\n                })); \r\n\r\n                urlArray.push(rsapi.post(\"product/getProduct\", {\r\n                    \"nproductcode\": null,\r\n                    \"userinfo\": userInfo \r\n                    \r\n                })); \r\n            } \r\n             if (operation === \"update\"){\r\n\r\n                urlArray.push(rsapi.post(\"quotation/getActiveQuotationById\", {\r\n                    \"userinfo\": userInfo,\r\n                    \"nquotationcode\": selectedQuotation.nquotationcode\r\n                }));\r\n\r\n            }\r\n\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n               \r\n                let testData = {};\r\n\r\n                let {ClientCategory,Client,ProjectType,ProjectMaster,sclientsiteaddress,QuotationType,Product,ProductCategory}=[]\r\n                \r\n\r\n              if (operation === \"create\") {\r\n                   \r\n                   \r\n                     ClientCategory = constructOptionList(response[0].data || [], \"nclientcatcode\", \"sclientcatname\", false, false, true).get(\"OptionList\");\r\n                   \r\n              //       Client = constructOptionList(response[1].data || [], \"nclientcode\", \"sclientname\", false, false, true).get(\"OptionList\");\r\n\r\n                     ProjectType = constructOptionList(response[2].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n                     QuotationType = constructOptionList(response[3].data || [], \"nquotationtypecode\", \"squotationname\", false, false, true).get(\"OptionList\");\r\n\r\n                    selectedRecord[\"dquotationdate\"] = new Date();\r\n                    ProductCategory = constructOptionList(response[4].data || [], \"nproductcatcode\", \"sproductcatname\", false, false, true).get(\"OptionList\");\r\n                    Product = constructOptionList(response[5].data.Product || [], \"nproductcode\", \"sproductname\", false, false, true).get(\"OptionList\");\r\n\r\n                    // selectedRecord[\"dquotationdate\"] = formatInputDate(new Date(), true);\r\n                     \r\n\r\n                }else if (operation === \"update\") {\r\n                    \r\n                    const editData = response[6].data.SelectedQuotation;\r\n                    // ProjectMaster=response[5].data.SelectedQuotation;\r\n\r\n                    // sclientsiteaddress = editData.sclientsiteaddress;\r\n                    selectedRecord[\"sclientsiteaddress\"]=editData.sclientsiteaddress;\r\n                    // selectedRecord[\"sinvoiceaddress\"] = editData.sinvoiceaddress;\r\n                    // selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\r\n                    selectedRecord[\"sdescription\"] = editData.sdescription;\r\n                    selectedRecord[\"sdeviationremarks\"] = editData.sdeviationremarks;\r\n                    // selectedRecord[\"suserrolename\"] = editData.suserrolename;\r\n                    // selectedRecord[\"susername\"] = editData.susername;\r\n                    // selectedRecord[\"nuserrolecode\"] = editData.nuserrolecode;\r\n                    // selectedRecord[\"nusercode\"] = editData.nusercode;\r\n                    selectedRecord[\"soem\"] = editData.soem;\r\n                    selectedRecord[\"squotationleadtime\"] = editData.squotationleadtime;\r\n                \r\n                    selectedRecord = {...selectedRecord}\r\n\r\n                   \r\n                ClientCategory = constructOptionList(response[0].data || [], \"nclientcatcode\", \"sclientcatname\", false, false, true).get(\"OptionList\");\r\n                Client = constructOptionList(response[1].data.Client || [], \"nclientcode\", \"sclientname\", false, false, true).get(\"OptionList\");\r\n                ProjectType = constructOptionList(response[2].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n                QuotationType = constructOptionList(response[3].data || [], \"nquotationtypecode\", \"squotationname\", false, false, true).get(\"OptionList\");\r\n                ProductCategory = constructOptionList(response[4].data || [], \"nproductcatcode\", \"sproductcatname\", false, false, true).get(\"OptionList\");\r\n                Product = constructOptionList(response[5].data.Product || [], \"nproductcode\", \"sproductname\", false, false, true).get(\"OptionList\");\r\n\r\n                          \r\n\r\n                    // selectedRecord[\"nprojecttypecode\"] = {\r\n                    //     \"value\": editData[\"nprojecttypecode\"],\r\n                    //     \"label\":  editData[\"sprojecttypename\"]\r\n                    // };\r\n\r\n                    selectedRecord[\"nclientcatcode\"] = {\r\n                        \"value\": editData[\"nclientcatcode\"],\r\n                        \"label\": editData[\"sclientcatname\"]\r\n                    };\r\n\r\n                    selectedRecord[\"nclientcode\"] = {\r\n                        \"value\": editData[\"nclientcode\"],\r\n                        \"label\": editData[\"sclientname\"]\r\n                    };\r\n                    \r\n                    // selectedRecord[\"nquotationtypecode\"] = {\r\n                    //     \"value\": editData[\"nquotationtypecode\"],\r\n                    //     \"label\": editData[\"squotationname\"]\r\n                    // };\r\n\r\n                    // selectedRecord[\"nprojectmastercode\"] = {\r\n                    //     \"value\": editData[\"nprojectmastercode\"],\r\n                    //     \"label\": editData[\"sprojectcode\"]\r\n                    // };\r\n                  \r\n                    selectedRecord[\"nproductcatcode\"] = {\r\n                        \"value\": editData[\"nproductcatcode\"],\r\n                        \"label\": editData[\"sproductcatname\"]\r\n                    };\r\n\r\n                    selectedRecord[\"nproductcode\"] = {\r\n                        \"value\": editData[\"nproductcode\"],\r\n                        \"label\": editData[\"sproductname\"]\r\n                    };\r\n\r\n                // selectedRecord[\"srfwdate\"] = rearrangeDateFormat(userInfo,editData.srfwdate);\r\n                selectedRecord[\"dquotationdate\"] = rearrangeDateFormat(userInfo,editData.squotationdate);\r\n               \r\n                }\r\n                   \r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n  \r\n                            openModal: true,\r\n                            ProjectType,\r\n                            operation: operation,ClientCategory,Client,ProjectMaster,sclientsiteaddress,QuotationType,Product,ProductCategory,\r\n                            screenName: \"IDS_QUOTATION\",modalScreenSize:false,\r\n                            selectedRecord,\r\n                            ncontrolCode,\r\n                            testData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n         } else {\r\n                          \r\n                toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n\r\n         }\r\n    }\r\n}\r\n\r\nexport const GrossQuotation = (operation, userInfo, ncontrolCode,selectedQuotation ) => {\r\n    return function (dispatch) {\r\n    //  if (operation === \"create\" || (operation === \"update\" && selectedQuotation.ntransactionstatus !== transactionStatus.RETIRED)) {\r\n                dispatch(initRequest(true));\r\n            const urlArray = [\r\n            ];\r\n            let selectedRecord = {};\r\n\r\n                urlArray.push(rsapi.post(\"discountband/getDiscountBand\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n                urlArray.push(rsapi.post(\"vatband/getVATBand\", {\r\n                    \"userinfo\": userInfo\r\n                })); \r\n\r\n                urlArray.push(rsapi.post(\"quotation/getQuotationGrossAmount\", {\r\n                    \"nquotationcode\": selectedQuotation.nquotationcode,\r\n                    \"userinfo\": userInfo\r\n                })); \r\n\r\n            \r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n                let {DiscountBand,VATBand}=[]\r\n                \r\n                DiscountBand = constructOptionList(response[0].data || [], \"ndiscountbandcode\", \"sdiscountbandname\", false, false, true).get(\"OptionList\");\r\n                VATBand = constructOptionList(response[1].data || [], \"nvatbandcode\", \"svatbandname\", false, false, true).get(\"OptionList\");\r\n                const QuotationGrossAmount= response[2].data;\r\n\r\n                if(QuotationGrossAmount[0].ndiscountpercentage >0 || QuotationGrossAmount[0].nvatpercentage >0){\r\n\r\n                   \r\n                //  selectedRecord[\"ndiscountamount\"] = QuotationGrossAmount[0].ndiscountamount; \r\n               //   selectedRecord[\"nvatamount\"] = QuotationGrossAmount[0].nvatamount; \r\n                     \r\n               selectedRecord[\"ndiscountpercentage\"]= QuotationGrossAmount[0].ndiscountpercentage;\r\n               selectedRecord[\"DiscountAmount\"] = QuotationGrossAmount[0].ndiscountamount;\r\n\r\n               selectedRecord[\"nvatpercentage\"] = QuotationGrossAmount[0].nvatpercentage;  \r\n               selectedRecord[\"VatAmount\"] = QuotationGrossAmount[0].nvatamount;\r\n               selectedRecord[\"TotalNetAmount\"]=(QuotationGrossAmount[0].ntotalgrossamount+selectedRecord[\"VatAmount\"])-selectedRecord[\"DiscountAmount\"];\r\n\r\n                   if(QuotationGrossAmount[0].ndiscountpercentage >0) {\r\n\r\n                    selectedRecord[\"ndiscountbandcode\"] = {\r\n                        \"value\": QuotationGrossAmount[0][\"ndiscountbandcode\"],\r\n                        \"label\": QuotationGrossAmount[0][\"sdiscountbandname\"]\r\n                    }\r\n                   }\r\n                    \r\n                   if(QuotationGrossAmount[0].nvatpercentage >0) {\r\n\r\n                    selectedRecord[\"nvatbandcode\"] = {\r\n                        \"value\": QuotationGrossAmount[0][\"nvatbandcode\"],\r\n                        \"label\":  QuotationGrossAmount[0][\"svatbandname\"]\r\n                      }\r\n                    }\r\n                   \r\n                }else {\r\n\r\n   /*                 selectedRecord[\"ndiscountpercentage\"]= DiscountBand[0].item.namount;\r\n                    selectedRecord[\"nvatpercentage\"] = VATBand[0].item.namount;\r\n\r\n                    selectedRecord[\"nvatbandcode\"] = {\r\n                        \"value\": VATBand[0][\"value\"],\r\n                        \"label\": VATBand[0][\"label\"]\r\n                    };\r\n\r\n                    selectedRecord[\"ndiscountbandcode\"] = {\r\n                        \"value\": DiscountBand[0][\"value\"],\r\n                        \"label\": DiscountBand[0][\"label\"]\r\n                    }; \r\n\r\n                    selectedRecord[\"DiscountAmount\"]=QuotationGrossAmount[0].ntotalgrossamount * (DiscountBand[0].item.namount/100);\r\n                    selectedRecord[\"VatAmount\"]=QuotationGrossAmount[0].ntotalgrossamount * (VATBand[0].item.namount/100);\r\n     //             selectedRecord[\"TotalNetAmount\"]=QuotationGrossAmount[0].ntotalgrossamount+(selectedRecord[\"DiscountAmount\"]-selectedRecord[\"VatAmount\"]);\r\n                    selectedRecord[\"TotalNetAmount\"]=(QuotationGrossAmount[0].ntotalgrossamount+selectedRecord[\"VatAmount\"])-selectedRecord[\"DiscountAmount\"];\r\n\r\n*/\r\n                    selectedRecord[\"ndiscountpercentage\"]= 0;\r\n                    selectedRecord[\"nvatpercentage\"] = 0;\r\n                    selectedRecord[\"nvatbandcode\"] =\"\";\r\n                    selectedRecord[\"ndiscountbandcode\"] = \"\";\r\n                    selectedRecord[\"DiscountAmount\"]=0;\r\n                    selectedRecord[\"VatAmount\"]=0;\r\n                    selectedRecord[\"TotalNetAmount\"]=QuotationGrossAmount[0].ntotalgrossamount;\r\n\r\n                }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n  \r\n                            openChildModal: true,\r\n                            DiscountBand,modalScreenSize:false,\r\n                            operation: operation,VATBand,QuotationGrossAmount,\r\n                            screenName: \"IDS_CALCULATEPRICING\",\r\n                            selectedRecord,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n        //  } else {\r\n                          \r\n        //         toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n\r\n        //  }\r\n    }\r\n}\r\n\r\n//Quotation Record Click \r\nexport const getQuotation = (quotationItem, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/quotation/getActiveQuotationById\", {\r\n            nquotationcode: quotationItem.nquotationcode,\r\n                userinfo: userInfo\r\n            })\r\n            .then(response => {\r\n                \r\n\r\n                    let masterData1  = {...masterData,\r\n\r\n                        ...response.data }\r\n\r\n                    // ...masterData,\r\n                    // ...response.data\r\n                    masterData=masterData1\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                       // masterData,\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getQuotationAddTestService(screenName, operation, masterData, userInfo, ncontrolCode){\r\n    return function (dispatch) {    \r\n        if (masterData.SelectedQuotation.ntransactionstatus === transactionStatus.DRAFT){     \r\n        \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"quotation/getQuotationUnmappedTest\",{\r\n            \"nquotationcode\":masterData.SelectedQuotation[\"nquotationcode\"], \r\n            userinfo:userInfo})\r\n\r\n        .then(response=>{\r\n\r\n            let masterData1  = {...masterData,\r\n\r\n                ...response.data }\r\n                masterData=masterData1                       \r\n                dispatch({type: DEFAULT_RETURN, payload:{ \r\n                                                        QuotationTestList:response.data,\r\n                                                        masterData,modalScreenSize:false,\r\n                                                        openChildModal:true,\r\n                                                        operation, screenName, ncontrolCode,\r\n                                                        //selectedRecord, \r\n                                                        loading:false}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }      \r\n            }) \r\n    }\r\n    else{\r\n        toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n    }\r\n}}\r\n\r\n\r\nexport function getQuotationPricingEditService(editParam){\r\n    return function (dispatch) {    \r\n       // screenName, operation, masterData, userInfo, ncontrolCode\r\n       //console.log(\"editParam:\", editParam);\r\n        if (editParam.masterData.SelectedQuotation.ntransactionstatus === transactionStatus.DRAFT){     \r\n        \r\n        dispatch(initRequest(true));\r\n        const urlArray = [\r\n        ];\r\n        \r\n\r\n            urlArray.push(rsapi.post(\"discountband/getDiscountBand\", {\r\n                \"userinfo\": editParam.userInfo\r\n            }));\r\n\r\n            urlArray.push( rsapi.post(\"quotation/getQuotationPrice\",{\"nquotationcode\":editParam.masterData.SelectedQuotation[\"nquotationcode\"], \r\n            \"nquotationtestcode\":editParam.editRow ? editParam.editRow.nquotationtestcode :null,\r\n            userinfo:editParam.userInfo}));\r\n\r\n        \r\n        Axios.all(urlArray)\r\n        .then(response=>{\r\n\r\n            let {DiscountBand}=[];\r\n            let selectedRecord =[];\r\n\r\n            DiscountBand = constructOptionList(response[0].data || [], \"ndiscountbandcode\", \"sdiscountbandname\", false, false, true).get(\"OptionList\");\r\n            \r\n            // selectedRecord[\"namount\"]= response[0].data[0].namount;\r\n            // selectedRecord[\"ndiscountbandcode\"]= response[0].data[0].ndiscountbandcode;\r\n\r\n                \r\n                if (editParam.editRow){\r\n\r\n                    selectedRecord.push(response[1].data[\"SelectedQuotationPrice\"]);\r\n                    selectedRecord[0][\"ndiscountbandcode\"]=  {...selectedRecord[0][\"ndiscountbandcode\"],\r\n    \r\n                            label: selectedRecord[0].sdiscountbandname,\r\n                            value: selectedRecord[0].ndiscountbandcode }\r\n                  \r\n                }\r\n                else{  \r\n\r\n                    selectedRecord = sortData(response[1].data[\"QuotationPrice\"]);   \r\n                    response[1].data[\"QuotationPrice\"].forEach((item, index) => {\r\n                \r\n                        selectedRecord[index][\"ndiscountbandcode\"]=  {...selectedRecord[index][\"ndiscountbandcode\"],\r\n    \r\n                            label: item.sdiscountbandname,\r\n                            value: item.ndiscountbandcode\r\n                            \r\n                        }\r\n                    });\r\n                }\r\n                dispatch({type: DEFAULT_RETURN, payload:{//pricingTestList:testList, \r\n                                                        //testPriceList:response.data[\"TestPrice\"],\r\n                                                        openChildModal:true,modalScreenSize:true,\r\n                                                        operation:editParam.operation,\r\n                                                        screenName:editParam.screenName, \r\n                                                        ncontrolCode:editParam.ncontrolCode,\r\n                                                        selectedRecord, \r\n                                                        selectedId:editParam.editRow ? editParam.editRow.nquotationtestcode :null,\r\n                                                        loading:false,\r\n                                                        quotationDataState:editParam.quotationDataState,\r\n                                                        DiscountBand}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data); \r\n                }      \r\n            }) \r\n    }\r\n    else{\r\n        toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n    }\r\n}}\r\n\r\n"]},"metadata":{},"sourceType":"module"}