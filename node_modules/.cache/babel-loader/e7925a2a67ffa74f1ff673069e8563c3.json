{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\competencemanagement\\\\trainingupdate\\\\TrainingParticipantsTab.js\";\nimport React from 'react';\nimport { Row, Col, Nav } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport ParticipantsAccordion from './ParticipantsAccordion';\nimport CustomAccordion from '../../../components/custom-accordion/custom-accordion.component';\nimport { getParticipantsAccordion } from '../../../actions';\nimport { faCertificate, faCogs, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nconst TrainingParticipantsTab = props => {\n  const attendanceId = props.controlMap.has(\"Attendance\") && props.controlMap.get(\"Attendance\").ncontrolcode;\n  const certifiedId = props.controlMap.has(\"Certified\") && props.controlMap.get(\"Certified\").ncontrolcode;\n  const competentId = props.controlMap.has(\"Competent\") && props.controlMap.get(\"Competent\").ncontrolcode;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_ATTENDANCE\"\n    }),\n    \"data-for\": \"tooltip_list_wrap\",\n    hidden: props.userRoleControlRights.indexOf(attendanceId) === -1,\n    onClick: () => props.getTrainingParticipantsAttended(props.Login.masterData.SelectedTrainingUpdate, props.selectedRecord, props.Login.userInfo, \"attend\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_CERTIFIED\"\n    }),\n    \"data-for\": \"tooltip_list_wrap\",\n    hidden: props.userRoleControlRights.indexOf(certifiedId) === -1,\n    onClick: () => props.getTrainingParticipantsCertified(props.Login.masterData.SelectedTrainingUpdate, props.selectedRecord, props.Login.userInfo, \"certify\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCertificate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_COMPETENT\"\n    }),\n    \"data-for\": \"tooltip_list_wrap\",\n    hidden: props.userRoleControlRights.indexOf(competentId) === -1,\n    onClick: () => props.getTrainingParticipantsCompetent(props.Login.masterData.SelectedTrainingUpdate, props.selectedRecord, props.Login.userInfo, \"competent\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }))), props.Login.masterData.Participants && props.Login.masterData.Participants.length > 0 ? /*#__PURE__*/React.createElement(CustomAccordion, {\n    key: \"Participants\",\n    accordionTitle: \"sfullname\",\n    accordionComponent: participantsAccordion(props),\n    inputParam: {\n      masterData: props.Login.masterData,\n      userInfo: props.Login.userInfo\n    },\n    accordionClick: props.getParticipantsAccordion,\n    accordionPrimaryKey: \"nparticipantcode\",\n    accordionObjectName: \"version\",\n    addtraineedocfile: props.addtraineedocfile,\n    selectedKey: props.Login.masterData.selectedParticipants.nparticipantcode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }) : \"\");\n};\n\nconst participantsAccordion = props => {\n  const accordionMap = new Map();\n  props.Login.masterData.Participants.map(version => accordionMap.set(version.nparticipantcode, /*#__PURE__*/React.createElement(ParticipantsAccordion, {\n    version: version,\n    addtraineedoc: props.addtraineedoc,\n    userRoleControlRights: props.userRoleControlRights,\n    controlMap: props.controlMap,\n    userInfo: props.Login.userInfo,\n    masterData: props.Login.masterData,\n    inputParam: props.Login.inputParam,\n    deleteRecord: props.deleteRecord,\n    fetchParticipantsRecordByID: props.fetchParticipantsRecordByID,\n    selectedId: props.Login.selectedId,\n    viewVersionTemplate: props.viewVersionTemplate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })));\n  return accordionMap;\n};\n\nexport default connect(mapStateToProps, {\n  getParticipantsAccordion\n})(injectIntl(TrainingParticipantsTab));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/competencemanagement/trainingupdate/TrainingParticipantsTab.js"],"names":["React","Row","Col","Nav","injectIntl","connect","ParticipantsAccordion","CustomAccordion","getParticipantsAccordion","faCertificate","faCogs","faUser","FontAwesomeIcon","mapStateToProps","state","Login","TrainingParticipantsTab","props","attendanceId","controlMap","has","get","ncontrolcode","certifiedId","competentId","intl","formatMessage","id","userRoleControlRights","indexOf","getTrainingParticipantsAttended","masterData","SelectedTrainingUpdate","selectedRecord","userInfo","getTrainingParticipantsCertified","getTrainingParticipantsCompetent","Participants","length","participantsAccordion","addtraineedocfile","selectedParticipants","nparticipantcode","accordionMap","Map","map","version","set","addtraineedoc","inputParam","deleteRecord","fetchParticipantsRecordByID","selectedId","viewVersionTemplate"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Nav } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport ParticipantsAccordion from './ParticipantsAccordion';\r\nimport CustomAccordion from '../../../components/custom-accordion/custom-accordion.component';\r\nimport {\r\n    getParticipantsAccordion\r\n} from '../../../actions';\r\nimport { faCertificate, faCogs, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nconst TrainingParticipantsTab = (props) => {\r\n    const attendanceId = props.controlMap.has(\"Attendance\") && props.controlMap.get(\"Attendance\").ncontrolcode;\r\n    const certifiedId = props.controlMap.has(\"Certified\") && props.controlMap.get(\"Certified\").ncontrolcode;\r\n    const competentId = props.controlMap.has(\"Competent\") && props.controlMap.get(\"Competent\").ncontrolcode;\r\n    \r\n    return (\r\n       <>\r\n<div className=\"d-flex justify-content-end\">      \r\n          <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                            data-tip={props.intl.formatMessage({ id: \"IDS_ATTENDANCE\" })}\r\n                            data-for=\"tooltip_list_wrap\"\r\n                            hidden={props.userRoleControlRights.indexOf(attendanceId) === -1}\r\n                            onClick={() => props.getTrainingParticipantsAttended(props.Login.masterData.SelectedTrainingUpdate,props.selectedRecord,props.Login.userInfo,\"attend\")}\r\n                        >\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        </Nav.Link>\r\n                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                            data-tip={props.intl.formatMessage({ id: \"IDS_CERTIFIED\" })}\r\n                            data-for=\"tooltip_list_wrap\"\r\n                            hidden={props.userRoleControlRights.indexOf(certifiedId) === -1}\r\n                            onClick={() => props.getTrainingParticipantsCertified(props.Login.masterData.SelectedTrainingUpdate,props.selectedRecord,props.Login.userInfo,\"certify\")}\r\n                        >\r\n                                <FontAwesomeIcon icon={faCertificate} />\r\n                           \r\n                        </Nav.Link>\r\n                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                            data-tip={props.intl.formatMessage({ id: \"IDS_COMPETENT\" })}\r\n                            data-for=\"tooltip_list_wrap\"\r\n                            hidden={props.userRoleControlRights.indexOf(competentId) === -1}\r\n                            onClick={() => props.getTrainingParticipantsCompetent(props.Login.masterData.SelectedTrainingUpdate,props.selectedRecord,props.Login.userInfo,\"competent\")}\r\n                        >\r\n                            <FontAwesomeIcon icon={faCogs} />\r\n                        </Nav.Link>\r\n            </div>\r\n           \r\n                {props.Login.masterData.Participants && props.Login.masterData.Participants.length > 0 ?\r\n                    <CustomAccordion\r\n                        key=\"Participants\"\r\n                        accordionTitle={\"sfullname\"}\r\n                        accordionComponent={participantsAccordion(props)}\r\n                        inputParam={{ masterData: props.Login.masterData, userInfo: props.Login.userInfo }}\r\n                        accordionClick={props.getParticipantsAccordion}\r\n                        accordionPrimaryKey={\"nparticipantcode\"}\r\n                        accordionObjectName={\"version\"}\r\n                        addtraineedocfile={props.addtraineedocfile}\r\n                        selectedKey={props.Login.masterData.selectedParticipants.nparticipantcode}\r\n                    />\r\n                    : \"\"}\r\n           \r\n      \r\n\r\n    </>\r\n    );\r\n\r\n}\r\n\r\n\r\nconst participantsAccordion = (props) => {\r\n    const accordionMap = new Map();\r\n    props.Login.masterData.Participants.map((version) =>\r\n        accordionMap.set(version.nparticipantcode,\r\n            <ParticipantsAccordion\r\n                version={version}\r\n                addtraineedoc={props.addtraineedoc}\r\n                userRoleControlRights={props.userRoleControlRights}\r\n                controlMap={props.controlMap}\r\n                userInfo={props.Login.userInfo}\r\n                masterData={props.Login.masterData}\r\n                inputParam={props.Login.inputParam}\r\n                deleteRecord={props.deleteRecord}\r\n                fetchParticipantsRecordByID={props.fetchParticipantsRecordByID}\r\n                selectedId={props.Login.selectedId}\r\n                viewVersionTemplate={props.viewVersionTemplate}\r\n                \r\n            />)\r\n    )\r\n    return accordionMap;\r\n}\r\n\r\nexport default connect(mapStateToProps, {getParticipantsAccordion})(injectIntl(TrainingParticipantsTab));"]},"metadata":{},"sourceType":"module"}