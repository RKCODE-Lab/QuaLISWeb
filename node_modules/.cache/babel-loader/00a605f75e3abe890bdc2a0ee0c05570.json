{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{sortData,constructOptionList,formatInputDate,showEsign,rearrangeDateFormat}from'../components/CommonScript';import{intl}from'../components/App';import{crudMaster}from'./ServiceAction';import{transactionStatus}from'../components/Enumeration';export function getBatchCreationComboService(batchParam){return function(dispatch){if(batchParam.operation===\"update\"&&batchParam.masterData.SelectedBatchCreation.ntransactionstatus===transactionStatus.CANCELLED){toast.warn(intl.formatMessage({id:\"IDS_CANNOTEDITCANCELLEDBATCH\"}));}else{var nreleasebatchcode=null;if(batchParam.operation===\"update\"){nreleasebatchcode=batchParam.primaryKeyValue;}var currentDate=formatInputDate(new Date(),true);var batchService=rsapi.post(\"batchcreation/getBatchCreationComboData\",//\"productcategory/getProductCategory\", \n{userinfo:batchParam.userInfo,currentdate:currentDate,nreleasebatchcode:nreleasebatchcode,ncontrolcode:batchParam.ncontrolCode});var timeZoneService=rsapi.post(\"timezone/getTimeZone\");var urlArray=[batchService,timeZoneService];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var productCatMap=constructOptionList(response[0].data[\"ProductCategory\"]||[],\"nproductcatcode\",\"sproductcatname\",undefined,undefined,true);var productCatList=productCatMap.get(\"OptionList\");var productMap=constructOptionList(response[0].data[\"Product\"]||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var productList=productMap.get(\"OptionList\");var studyPlanMap=constructOptionList(response[0].data[\"StudyPlan\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true);var studyPlanList=studyPlanMap.get(\"OptionList\");var timeZoneMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var selectedRecord={};//let respObject = {};\nif(batchParam.operation===\"update\"){var validityTimeZone=[];var expiryTimeZone=[];var selectedBatch=response[0].data[\"SelectedBatchCreation\"];selectedRecord=JSON.parse(JSON.stringify(response[0].data[\"SelectedBatchCreation\"]));selectedRecord[\"nproductcatcode\"]={\"value\":selectedBatch[\"nproductcatcode\"],\"label\":selectedBatch[\"sproductcatname\"]};selectedRecord[\"nproductcode\"]={\"value\":selectedBatch[\"nproductcode\"],\"label\":selectedBatch[\"sproductname\"]};selectedRecord[\"schargebandname\"]=selectedBatch[\"schargebandname\"];selectedRecord[\"sdeptname\"]=selectedBatch[\"sdeptname\"];selectedRecord[\"nallottedspeccode\"]={\"value\":selectedBatch[\"nallottedspeccode\"],\"label\":selectedBatch[\"sspecname\"]};selectedRecord[\"smanufsitename\"]=selectedBatch[\"smanufsitename\"];selectedRecord[\"slicencenumber\"]=selectedBatch[\"slicencenumber\"];selectedRecord[\"scertificatetype\"]=selectedBatch[\"scertificatetype\"];selectedRecord[\"scontainertype\"]=selectedBatch[\"scontainertype\"];selectedRecord[\"saddress1\"]=selectedBatch[\"saddress1\"];validityTimeZone.push({\"value\":selectedBatch[\"ntzvaliditystartdate\"],\"label\":selectedBatch[\"stzvaliditystartdate\"]});expiryTimeZone.push({\"value\":selectedBatch[\"ntzexpirydate\"],\"label\":selectedBatch[\"stzexpirydate\"]});// selectedRecord[\"dvaliditystartdate\"] = new Date(selectedBatch[\"svaliditystartdate\"]);\n// selectedRecord[\"dexpirydate\"] = new Date(selectedBatch[\"sexpirydate\"]);\nselectedRecord[\"dvaliditystartdate\"]=rearrangeDateFormat(batchParam.userInfo,selectedBatch[\"svaliditystartdate\"]);selectedRecord[\"dexpirydate\"]=rearrangeDateFormat(batchParam.userInfo,selectedBatch[\"sexpirydate\"]);selectedRecord[\"ntzvaliditystartdate\"]=validityTimeZone[0];selectedRecord[\"stzvaliditystartdate\"]=validityTimeZone[0].label;selectedRecord[\"ntzexpirydate\"]=expiryTimeZone[0];selectedRecord[\"stzexpirydate\"]=expiryTimeZone[0].label;}else{//add operation \nselectedRecord={\"dvaliditystartdate\":rearrangeDateFormat(batchParam.userInfo,response[0].data[\"ValidityStartDate\"]),\"dexpirydate\":rearrangeDateFormat(batchParam.userInfo,response[0].data[\"ExpiryDate\"]),\"ntzvaliditystartdate\":{\"value\":batchParam.userInfo.ntimezonecode,\"label\":batchParam.userInfo.stimezoneid},\"stzvaliditystartdate\":batchParam.userInfo.stimezoneid,\"ntzexpirydate\":{\"value\":batchParam.userInfo.ntimezonecode,\"label\":batchParam.userInfo.stimezoneid},\"stzexpirydate\":batchParam.userInfo.stimezoneid};if(response[0].data[\"SelectedProductCategory\"]!==null){selectedRecord[\"nproductcatcode\"]={label:response[0].data[\"SelectedProductCategory\"].sproductcatname,value:response[0].data[\"SelectedProductCategory\"].nproductcatcode,item:response[0].data[\"SelectedProductCategory\"]};}if(response[0].data[\"SelectedProduct\"]!==undefined){selectedRecord[\"nproductcode\"]={label:response[0].data[\"SelectedProduct\"].sproductname,value:response[0].data[\"SelectedProduct\"].nproductcode,item:response[0].data[\"SelectedProduct\"]};selectedRecord[\"schargebandname\"]=response[0].data[\"SelectedProduct\"].schargebandname;selectedRecord[\"sdeptname\"]=response[0].data[\"SelectedProduct\"].sdeptname;}//selectedRecord[\"nproductcatcode\"]= productCatMap.get(\"DefaultValue\");\n//selectedRecord[\"nproductcode\"]= productMap.get(\"DefaultValue\");\n}dispatch({type:DEFAULT_RETURN,payload:{productCategoryList:productCatList,productList:productList,studyPlanList:studyPlanList,timeZoneList:timeZoneList,productManufacturerList:response[0].data[\"ProductManufacturer\"]||[],batchCreationEditStatusList:response[0].data[\"BatchCreationEditStatus\"]||[],operation:batchParam.operation,screenName:batchParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:batchParam.ncontrolCode,loading:false,selectedId:nreleasebatchcode}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function getBatchProductCategoryComboChange(selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"batchcreation/getProductCategoryComboChange\",{nproductcatcode:selectedRecord.nproductcatcode.value}).then(function(response){var productList=[];var studyPlanList=[];var selected={nproductcatcode:selectedRecord[\"nproductcatcode\"],dvaliditystartdate:selectedRecord[\"dvaliditystartdate\"],ntzvaliditystartdate:selectedRecord[\"ntzvaliditystartdate\"],dexpirydate:selectedRecord[\"dexpirydate\"],ntzexpirydate:selectedRecord[\"ntzexpirydate\"],stzvaliditystartdate:selectedRecord[\"stzvaliditystartdate\"],stzexpirydate:selectedRecord[\"stzexpirydate\"]};selectedRecord=selected;var productMap=constructOptionList(response.data[\"Product\"]||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);productList=productMap.get(\"OptionList\");selectedRecord[\"nproductcode\"]=productMap.get(\"DefaultValue\");var studyPlanMap=constructOptionList(response.data[\"StudyPlan\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true);studyPlanList=studyPlanMap.get(\"OptionList\");if(response.data[\"SelectedProduct\"]!==undefined){selectedRecord[\"nproductcode\"]={label:response.data[\"SelectedProduct\"].sproductname,value:response.data[\"SelectedProduct\"].nproductcode,item:response.data[\"SelectedProduct\"]};selectedRecord[\"schargebandname\"]=response.data[\"SelectedProduct\"].schargebandname;selectedRecord[\"sdeptname\"]=response.data[\"SelectedProduct\"].sdeptname;}// }\ndispatch({type:DEFAULT_RETURN,payload:{loading:false,productList:productList,studyPlanList:studyPlanList,productManufacturerList:response.data[\"ProductManufacturer\"]||[],selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBatchProductComboChange(selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"batchcreation/getProductComboChange\",{nproductcode:selectedRecord.nproductcode.value}).then(function(response){var selected={nproductcatcode:selectedRecord[\"nproductcatcode\"],nproductcode:selectedRecord[\"nproductcode\"],dvaliditystartdate:selectedRecord[\"dvaliditystartdate\"],ntzvaliditystartdate:selectedRecord[\"ntzvaliditystartdate\"],dexpirydate:selectedRecord[\"dexpirydate\"],ntzexpirydate:selectedRecord[\"ntzexpirydate\"],stzvaliditystartdate:selectedRecord[\"stzvaliditystartdate\"],stzexpirydate:selectedRecord[\"stzexpirydate\"],schargebandname:selectedRecord.nproductcode.item.schargebandname,sdeptname:selectedRecord.nproductcode.item.sdeptname};selectedRecord=selected;var studyPlanList=[];if(response.data[\"StudyPlan\"]!==undefined&&response.data[\"StudyPlan\"].length>0){var studyPlanMap=constructOptionList(response.data[\"StudyPlan\"]||[],\"nallottedspeccode\",\"sspecname\",undefined,undefined,true);studyPlanList=studyPlanMap.get(\"OptionList\");}dispatch({type:DEFAULT_RETURN,payload:{loading:false,studyPlanList:studyPlanList,productManufacturerList:response.data[\"ProductManufacturer\"]||[],selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBatchManufacturerComboChange(selectedRecord,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"batchcreation/getManufacturerComboChange\",{nproductcode:selectedRecord.nproductcode.value,nproductmanufcode:selectedRecord.nproductmanufcode,userinfo:userInfo}).then(function(response){// selectedRecord[\"smanufsitename\"] = selectedRecord.smanufsitename;\nselectedRecord[\"nproductmahcode\"]=\"\";selectedRecord[\"smahname\"]=\"\";selectedRecord[\"slicencenumber\"]=\"\";selectedRecord[\"scertificatetype\"]=\"\";selectedRecord[\"scontainertype\"]=\"\";selectedRecord[\"saddress1\"]=\"\";dispatch({type:DEFAULT_RETURN,payload:{loading:false,maHolderList:response.data[\"ProductMAHolder\"]||[],selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBatchComponentComboService(batchParam){return function(dispatch){if(batchParam.masterData.SelectedBatchCreation.ntransactionstatus===transactionStatus.CANCELLED){if(batchParam.operation===\"delete\"){toast.warn(intl.formatMessage({id:\"IDS_CANNOTDELETECOMPONENTFORCANCELLEDBATCH\"}));}else{toast.warn(intl.formatMessage({id:\"IDS_CANNOTADDCOMPONENTFORCANCELLEDBATCH\"}));}}else{if(batchParam.operation===\"delete\"){dispatch(initRequest(true));rsapi.post(\"batchcreation/getBatchComponent\",{nreleasebatchcode:batchParam.masterData.SelectedBatchCreation.nreleasebatchcode,userinfo:batchParam.userInfo}).then(function(response){if(response.data.length>0){dispatch({type:DEFAULT_RETURN,payload:{operation:batchParam.operation,screenName:batchParam.screenName,//selectedRecord,\nopenChildModal:true,ncontrolCode:batchParam.ncontrolCode,loading:false,batchComponentDeleteList:response.data}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,multiLingualAlert:\"IDS_NOCOMPONENTSTOREMOVE\"}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var currentDate=formatInputDate(new Date(),true);var batchService=rsapi.post(\"batchcreation/getBatchComponentComboData\",{userinfo:batchParam.userInfo,currentdate:currentDate,batchcreation:batchParam.masterData.SelectedBatchCreation});var urlArray=[batchService];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var productCatMap=constructOptionList(response[0].data[\"ProductCategory\"]||[],\"nproductcatcode\",\"sproductcatname\",undefined,undefined,true);var productCatList=productCatMap.get(\"OptionList\");var productMap=constructOptionList(response[0].data[\"Product\"]||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var productList=productMap.get(\"OptionList\");var componentMap=constructOptionList(response[0].data[\"ComponentList\"]||[],\"ncomponentcode\",\"scomponentname\",undefined,undefined,true);var componentList=componentMap.get(\"OptionList\");var selectedRecord={\"nproductcatcode\":{label:response[0].data[\"SelectedProductCategory\"].sproductcatname,value:response[0].data[\"SelectedProductCategory\"].nproductcatcode,item:response[0].data[\"SelectedProductCategory\"]},\"nproductcode\":{label:response[0].data[\"SelectedProduct\"].sproductname,value:response[0].data[\"SelectedProduct\"].nproductcode,item:response[0].data[\"SelectedProduct\"]},\"transdatefrom\":rearrangeDateFormat(batchParam.userInfo,response[0].data[\"AddComponentDateFrom\"]),\"transdateto\":rearrangeDateFormat(batchParam.userInfo,response[0].data[\"AddComponentDateFrom\"])};dispatch({type:DEFAULT_RETURN,payload:{componentProductCatList:productCatList,componentProductList:productList,componentList:componentList,componentDefaultSearchDate:rearrangeDateFormat(batchParam.userInfo,response[0].data[\"AddComponentDateFrom\"]),operation:batchParam.operation,screenName:batchParam.screenName,selectedRecord:selectedRecord,openChildModal:true,ncontrolCode:batchParam.ncontrolCode,loading:false,//selectedId:nreleasebatchcode\naddComponentDataList:[],selectedComponentList:[]//response[0].data[\"BatchComponentCreation\"]\n}});}).catch(function(error){console.log(\"error:\",error);dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}}};}export function getDataForAddBatchComponent(searchParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"batchcreation/refreshGetForAddComponent\",_objectSpread({},searchParam.inputData)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,addComponentDataList:response.data||[],//selectedComponentList: [],\nselectedComponentList:searchParam.selectedComponentList||[],addedComponentList:[],deleteComponentSelectAll:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getCopyBatchCreationComboService(batchParam){return function(dispatch){var currentDate=formatInputDate(new Date(),true);var batchService=rsapi.post(\"batchcreation/getCopyBatchCreationComboData\",{userinfo:batchParam.userInfo,currentdate:currentDate,nreleasebatchcode:batchParam.primaryKeyValue});var timeZoneService=rsapi.post(\"timezone/getTimeZone\");var urlArray=[batchService,timeZoneService];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var timeZoneMap=constructOptionList(response[1].data||[],\"ntimezonecode\",\"stimezoneid\",undefined,undefined,true);var timeZoneList=timeZoneMap.get(\"OptionList\");var selectedRecord={\"dvaliditystartdate\":rearrangeDateFormat(batchParam.userInfo,response[0].data[\"ValidityStartDate\"]),\"dexpirydate\":rearrangeDateFormat(batchParam.userInfo,response[0].data[\"ExpiryDate\"]),\"ntzvaliditystartdate\":{\"value\":batchParam.userInfo.ntimezonecode,\"label\":batchParam.userInfo.stimezoneid},\"stzvaliditystartdate\":batchParam.userInfo.stimezoneid,\"ntzexpirydate\":{\"value\":batchParam.userInfo.ntimezonecode,\"label\":batchParam.userInfo.stimezoneid},\"stzexpirydate\":batchParam.userInfo.stimezoneid};dispatch({type:DEFAULT_RETURN,payload:{timeZoneList:timeZoneList,operation:batchParam.operation,screenName:batchParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:batchParam.ncontrolCode,loading:false//selectedId:nreleasebatchcode\n}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBatchCreationDetail(inputParam){return function(dispatch){dispatch(initRequest(true));//const batchParam = inputParam.batchParam;\nvar masterData=inputParam.masterData;return rsapi.post(\"batchcreation/getBatchCreation\",{nreleasebatchcode:parseInt(inputParam.nreleasebatchcode),userinfo:inputParam.userInfo,activeBCTab:inputParam.activeBCTab}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,activeBCTab:inputParam.activeBCTab,loading:false,dataState:_objectSpread(_objectSpread({},inputParam.dataState),{},{sort:undefined,filter:undefined}),sahDataState:_objectSpread(_objectSpread({},inputParam.sahDataState),{},{sort:undefined,filter:undefined}),bahDataState:_objectSpread(_objectSpread({},inputParam.bahDataState),{},{sort:undefined,filter:undefined}),chDataState:_objectSpread(_objectSpread({},inputParam.chDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function validateBatchComplete(batchParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"batchcreation/validateBatchComponentToComplete\",{nreleasebatchcode:batchParam.nreleasebatchcode,userinfo:batchParam.userInfo}).then(function(response){if(response.data.isValidForComplete===true){var postParam={inputListName:\"BatchCreationList\",selectedObject:\"SelectedBatchCreation\",primaryKeyField:\"nreleasebatchcode\",primaryKeyValue:batchParam.nreleasebatchcode,fetchUrl:\"batchcreation/getBatchCreation\",fecthInputObject:batchParam.userInfo};var inputParam={classUrl:\"batchcreation\",methodUrl:\"BatchCreation\",postParam:postParam,inputData:{\"userinfo\":batchParam.userInfo,nreleasebatchcode:batchParam.nreleasebatchcode},operation:\"complete\"};var esignNeeded=showEsign(batchParam.userRoleControlRights,batchParam.userInfo.nformcode,batchParam.ncontrolCode);if(esignNeeded){var data={loadEsign:true,screenData:{inputParam:inputParam,masterData:batchParam.masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:\"complete\"};dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},data),{},{serverTime:rearrangeDateFormat(batchParam.userInfo,response.data.serverTime),loading:false})});}else{dispatch(crudMaster(inputParam,batchParam.masterData,\"openModal\",{}));}}else{dispatch({type:DEFAULT_RETURN,payload:{showConfirmAlert:true,loading:false,operation:\"complete\",ncontrolCode:batchParam.ncontrolCode}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getBatchSampleApprovalHistory(methodParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"batchapproval/getBASampleApprovalHistory\",{npreregno:methodParam.primaryKeyValue,userinfo:methodParam.userInfo}).then(function(response){var sampleApprovalMap=methodParam.masterData.sampleApprovalMap||new Map();sampleApprovalMap.set(parseInt(Object.keys(response.data[\"BA_SampleApprovalHistory\"])[0]),Object.values(response.data[\"BA_SampleApprovalHistory\"])[0]);var masterData=_objectSpread(_objectSpread({},methodParam.masterData),{},{sampleApprovalMap:sampleApprovalMap});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,data:methodParam.data,sampleApprovalMap:sampleApprovalMap,dataState:methodParam.dataState,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getBatchCreationChildTabDetail(inputData){return function(dispatch){if(inputData.nreleaseBatchCode){var inputParamData={nreleaseBatchCode:inputData.nreleaseBatchCode,activeBCTab:inputData.activeBCTab,userinfo:inputData.userinfo};dispatch(initRequest(true));rsapi.post(\"batchcreation/getBatchCreationChildTab\",inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),responseData),loading:false,activeBCTab:inputData.activeBCTab,screenName:inputData.screenName}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,activeBATab:inputData.activeBATab}});}};}export function getProductByCategory(selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"product/getProductByProductCategory\",{nproductcatcode:selectedRecord.nproductcatcode.value}).then(function(response){selectedRecord[\"nproductcode\"]=null;var productMap=constructOptionList(response.data||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);dispatch({type:DEFAULT_RETURN,payload:{loading:false,selectedRecord:selectedRecord,componentProductList:productMap.get(\"OptionList\")}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function reloadBatchCreation(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"batchcreation/getBatchCreation\",_objectSpread({},inputParam.inputData)).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);var masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);if(inputParam.searchRef!==undefined&&inputParam.searchRef.current!==null){inputParam.searchRef.current.value=\"\";masterData['searchedData']=undefined;}dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,dataState:_objectSpread(_objectSpread({},inputParam.dataState),{},{sort:undefined,filter:undefined}),sahDataState:_objectSpread(_objectSpread({},inputParam.sahDataState),{},{sort:undefined,filter:undefined}),bahDataState:_objectSpread(_objectSpread({},inputParam.bahDataState),{},{sort:undefined,filter:undefined}),chDataState:_objectSpread(_objectSpread({},inputParam.chDataState),{},{sort:undefined,filter:undefined}),testCommentDataState:_objectSpread(_objectSpread({},inputParam.testCommentDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/BatchCreationAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","sortData","constructOptionList","formatInputDate","showEsign","rearrangeDateFormat","intl","crudMaster","transactionStatus","getBatchCreationComboService","batchParam","dispatch","operation","masterData","SelectedBatchCreation","ntransactionstatus","CANCELLED","warn","formatMessage","id","nreleasebatchcode","primaryKeyValue","currentDate","Date","batchService","post","userinfo","userInfo","currentdate","ncontrolcode","ncontrolCode","timeZoneService","urlArray","all","then","response","productCatMap","data","undefined","productCatList","get","productMap","productList","studyPlanMap","studyPlanList","timeZoneMap","timeZoneList","selectedRecord","validityTimeZone","expiryTimeZone","selectedBatch","JSON","parse","stringify","push","label","ntimezonecode","stimezoneid","sproductcatname","value","nproductcatcode","item","sproductname","nproductcode","schargebandname","sdeptname","type","payload","productCategoryList","productManufacturerList","batchCreationEditStatusList","screenName","openModal","loading","selectedId","catch","error","status","message","getBatchProductCategoryComboChange","selected","dvaliditystartdate","ntzvaliditystartdate","dexpirydate","ntzexpirydate","stzvaliditystartdate","stzexpirydate","getBatchProductComboChange","length","getBatchManufacturerComboChange","nproductmanufcode","maHolderList","getBatchComponentComboService","openChildModal","batchComponentDeleteList","multiLingualAlert","batchcreation","componentMap","componentList","componentProductCatList","componentProductList","componentDefaultSearchDate","addComponentDataList","selectedComponentList","console","log","getDataForAddBatchComponent","searchParam","inputData","addedComponentList","deleteComponentSelectAll","getCopyBatchCreationComboService","getBatchCreationDetail","inputParam","parseInt","activeBCTab","dataState","sort","filter","sahDataState","bahDataState","chDataState","validateBatchComplete","isValidForComplete","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","classUrl","methodUrl","esignNeeded","userRoleControlRights","nformcode","loadEsign","screenData","serverTime","showConfirmAlert","getBatchSampleApprovalHistory","methodParam","npreregno","sampleApprovalMap","Map","set","Object","keys","values","getBatchCreationChildTabDetail","nreleaseBatchCode","inputParamData","responseData","activeBATab","getProductByCategory","reloadBatchCreation","searchRef","current","showFilter","testCommentDataState"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData, constructOptionList, formatInputDate, showEsign, rearrangeDateFormat } from '../components/CommonScript';\r\nimport { intl } from '../components/App';\r\nimport { crudMaster } from './ServiceAction';\r\nimport { transactionStatus } from '../components/Enumeration';\r\n\r\n\r\nexport function getBatchCreationComboService(batchParam) {\r\n    return function (dispatch) {\r\n\r\n        if (batchParam.operation === \"update\" && batchParam.masterData.SelectedBatchCreation.ntransactionstatus === transactionStatus.CANCELLED){\r\n            toast.warn(intl.formatMessage({ id: \"IDS_CANNOTEDITCANCELLEDBATCH\"}));\r\n        }\r\n        else{\r\n            let nreleasebatchcode = null;\r\n            if (batchParam.operation === \"update\") {\r\n                nreleasebatchcode = batchParam.primaryKeyValue;\r\n            }\r\n\r\n            const currentDate = formatInputDate(new Date(), true);\r\n            const batchService = rsapi.post(\"batchcreation/getBatchCreationComboData\",//\"productcategory/getProductCategory\", \r\n                {\r\n                    userinfo: batchParam.userInfo, currentdate: currentDate,\r\n                    nreleasebatchcode,\r\n                    ncontrolcode: batchParam.ncontrolCode\r\n                });\r\n\r\n            const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n            let urlArray = [batchService, timeZoneService];\r\n\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n                    const productCatMap = constructOptionList(response[0].data[\"ProductCategory\"] || [], \"nproductcatcode\",\r\n                        \"sproductcatname\", undefined, undefined, true);\r\n                    const productCatList = productCatMap.get(\"OptionList\");\r\n\r\n                    const productMap = constructOptionList(response[0].data[\"Product\"] || [], \"nproductcode\",\r\n                        \"sproductname\", undefined, undefined, true);\r\n\r\n                    const productList = productMap.get(\"OptionList\");\r\n\r\n                    const studyPlanMap = constructOptionList(response[0].data[\"StudyPlan\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true);\r\n\r\n                    const studyPlanList = studyPlanMap.get(\"OptionList\");\r\n\r\n                    const timeZoneMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                        \"stimezoneid\", undefined, undefined, true);\r\n\r\n                    const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n\r\n                    let selectedRecord = {};\r\n                    //let respObject = {};\r\n                    if (batchParam.operation === \"update\") {\r\n\r\n                        let validityTimeZone = [];\r\n                        let expiryTimeZone = [];\r\n                        const selectedBatch = response[0].data[\"SelectedBatchCreation\"];\r\n                     \r\n                        selectedRecord = JSON.parse(JSON.stringify(response[0].data[\"SelectedBatchCreation\"]));\r\n\r\n                        selectedRecord[\"nproductcatcode\"] = { \"value\": selectedBatch[\"nproductcatcode\"], \"label\": selectedBatch[\"sproductcatname\"] };\r\n                        selectedRecord[\"nproductcode\"] = { \"value\": selectedBatch[\"nproductcode\"], \"label\": selectedBatch[\"sproductname\"] };\r\n\r\n                        selectedRecord[\"schargebandname\"] = selectedBatch[\"schargebandname\"];\r\n                        selectedRecord[\"sdeptname\"] = selectedBatch[\"sdeptname\"];\r\n\r\n                        selectedRecord[\"nallottedspeccode\"] = { \"value\": selectedBatch[\"nallottedspeccode\"], \"label\": selectedBatch[\"sspecname\"] };\r\n\r\n                        selectedRecord[\"smanufsitename\"] = selectedBatch[\"smanufsitename\"];\r\n                        selectedRecord[\"slicencenumber\"] = selectedBatch[\"slicencenumber\"];\r\n                        selectedRecord[\"scertificatetype\"] = selectedBatch[\"scertificatetype\"];\r\n                        selectedRecord[\"scontainertype\"] = selectedBatch[\"scontainertype\"];\r\n                        selectedRecord[\"saddress1\"] = selectedBatch[\"saddress1\"];\r\n\r\n                        validityTimeZone.push({ \"value\": selectedBatch[\"ntzvaliditystartdate\"], \"label\": selectedBatch[\"stzvaliditystartdate\"] });\r\n                        expiryTimeZone.push({ \"value\": selectedBatch[\"ntzexpirydate\"], \"label\": selectedBatch[\"stzexpirydate\"] });\r\n\r\n                       \r\n                        // selectedRecord[\"dvaliditystartdate\"] = new Date(selectedBatch[\"svaliditystartdate\"]);\r\n                        // selectedRecord[\"dexpirydate\"] = new Date(selectedBatch[\"sexpirydate\"]);\r\n                        selectedRecord[\"dvaliditystartdate\"] = rearrangeDateFormat(batchParam.userInfo, selectedBatch[\"svaliditystartdate\"]);\r\n                        selectedRecord[\"dexpirydate\"] = rearrangeDateFormat(batchParam.userInfo, selectedBatch[\"sexpirydate\"]);\r\n\r\n                        selectedRecord[\"ntzvaliditystartdate\"] = validityTimeZone[0];\r\n                        selectedRecord[\"stzvaliditystartdate\"] = validityTimeZone[0].label;\r\n                        selectedRecord[\"ntzexpirydate\"] = expiryTimeZone[0];\r\n                        selectedRecord[\"stzexpirydate\"] = expiryTimeZone[0].label;\r\n\r\n                    }\r\n                    else {\r\n                        //add operation \r\n                        \r\n                        selectedRecord = {                     \r\n                                            \"dvaliditystartdate\": rearrangeDateFormat(batchParam.userInfo, response[0].data[\"ValidityStartDate\"]),\r\n                                            \"dexpirydate\": rearrangeDateFormat(batchParam.userInfo, response[0].data[\"ExpiryDate\"]),\r\n                                            \"ntzvaliditystartdate\": {\r\n                                                \"value\": batchParam.userInfo.ntimezonecode,\r\n                                                \"label\": batchParam.userInfo.stimezoneid\r\n                                            },\r\n                                            \"stzvaliditystartdate\": batchParam.userInfo.stimezoneid,\r\n                                            \"ntzexpirydate\": {\r\n                                                \"value\": batchParam.userInfo.ntimezonecode,\r\n                                                \"label\": batchParam.userInfo.stimezoneid\r\n                                            },\r\n                                            \"stzexpirydate\": batchParam.userInfo.stimezoneid\r\n                                        };\r\n                        if (response[0].data[\"SelectedProductCategory\"] !== null)\r\n                        {\r\n                            selectedRecord[\"nproductcatcode\"]= {    label: response[0].data[\"SelectedProductCategory\"].sproductcatname,\r\n                                                                    value: response[0].data[\"SelectedProductCategory\"].nproductcatcode,\r\n                                                                    item: response[0].data[\"SelectedProductCategory\"]\r\n                                                                }\r\n                        }\r\n                        if (response[0].data[\"SelectedProduct\"] !== undefined) {\r\n                            selectedRecord[\"nproductcode\"] = {\r\n                                label: response[0].data[\"SelectedProduct\"].sproductname,\r\n                                value: response[0].data[\"SelectedProduct\"].nproductcode,\r\n                                item: response[0].data[\"SelectedProduct\"]\r\n                            };\r\n                            selectedRecord[\"schargebandname\"] = response[0].data[\"SelectedProduct\"].schargebandname;\r\n                            selectedRecord[\"sdeptname\"] = response[0].data[\"SelectedProduct\"].sdeptname;\r\n                        }\r\n\r\n                        //selectedRecord[\"nproductcatcode\"]= productCatMap.get(\"DefaultValue\");\r\n                        //selectedRecord[\"nproductcode\"]= productMap.get(\"DefaultValue\");\r\n\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            productCategoryList: productCatList,\r\n                            productList,\r\n                            studyPlanList,\r\n                            timeZoneList,\r\n                            productManufacturerList: response[0].data[\"ProductManufacturer\"] || [],\r\n                            batchCreationEditStatusList:response[0].data[\"BatchCreationEditStatus\"]|| [],\r\n                            operation: batchParam.operation,\r\n                            screenName: batchParam.screenName,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            ncontrolCode: batchParam.ncontrolCode,\r\n                            loading: false, selectedId: nreleasebatchcode\r\n                        }\r\n                    });\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport function getBatchProductCategoryComboChange(selectedRecord) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"batchcreation/getProductCategoryComboChange\", { nproductcatcode: selectedRecord.nproductcatcode.value })\r\n            .then(response => {\r\n                let productList = [];\r\n                let studyPlanList = [];              \r\n\r\n                const selected = {nproductcatcode: selectedRecord[\"nproductcatcode\"],\r\n                                    dvaliditystartdate:selectedRecord[\"dvaliditystartdate\"],\r\n                                    ntzvaliditystartdate:selectedRecord[\"ntzvaliditystartdate\"],\r\n                                    dexpirydate:selectedRecord[\"dexpirydate\"],\r\n                                    ntzexpirydate:selectedRecord[\"ntzexpirydate\"],\r\n                                    stzvaliditystartdate:selectedRecord[\"stzvaliditystartdate\"],\r\n                                    stzexpirydate:selectedRecord[\"stzexpirydate\"]\r\n                                };\r\n                selectedRecord = selected;\r\n            \r\n                const productMap = constructOptionList(response.data[\"Product\"] || [], \"nproductcode\",\r\n                    \"sproductname\", undefined, undefined, true);\r\n                productList = productMap.get(\"OptionList\");\r\n                selectedRecord[\"nproductcode\"] = productMap.get(\"DefaultValue\");\r\n\r\n                const studyPlanMap = constructOptionList(response.data[\"StudyPlan\"] || [], \"nallottedspeccode\",\r\n                    \"sspecname\", undefined, undefined, true);\r\n\r\n                studyPlanList = studyPlanMap.get(\"OptionList\");\r\n\r\n                if (response.data[\"SelectedProduct\"] !== undefined) {\r\n                    selectedRecord[\"nproductcode\"] = {\r\n                        label: response.data[\"SelectedProduct\"].sproductname,\r\n                        value: response.data[\"SelectedProduct\"].nproductcode,\r\n                        item: response.data[\"SelectedProduct\"]\r\n                    };\r\n                    selectedRecord[\"schargebandname\"] = response.data[\"SelectedProduct\"].schargebandname;\r\n                    selectedRecord[\"sdeptname\"] = response.data[\"SelectedProduct\"].sdeptname;\r\n                }\r\n                // }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false,\r\n                        productList,\r\n                        studyPlanList,\r\n                        productManufacturerList: response.data[\"ProductManufacturer\"] || [],\r\n                        selectedRecord\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getBatchProductComboChange(selectedRecord) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"batchcreation/getProductComboChange\", { nproductcode: selectedRecord.nproductcode.value })\r\n            .then(response => {\r\n\r\n                const selected = {nproductcatcode: selectedRecord[\"nproductcatcode\"],\r\n                                    nproductcode: selectedRecord[\"nproductcode\"],\r\n                                    dvaliditystartdate:selectedRecord[\"dvaliditystartdate\"],\r\n                                    ntzvaliditystartdate:selectedRecord[\"ntzvaliditystartdate\"],\r\n                                    dexpirydate:selectedRecord[\"dexpirydate\"],\r\n                                    ntzexpirydate:selectedRecord[\"ntzexpirydate\"],\r\n                                    stzvaliditystartdate:selectedRecord[\"stzvaliditystartdate\"],\r\n                                    stzexpirydate:selectedRecord[\"stzexpirydate\"],\r\n                                    schargebandname : selectedRecord.nproductcode.item.schargebandname,\r\n                                    sdeptname : selectedRecord.nproductcode.item.sdeptname\r\n                                };\r\n                selectedRecord = selected;\r\n\r\n                let studyPlanList = [];\r\n                if (response.data[\"StudyPlan\"] !== undefined && response.data[\"StudyPlan\"].length > 0) {\r\n                    const studyPlanMap = constructOptionList(response.data[\"StudyPlan\"] || [], \"nallottedspeccode\",\r\n                        \"sspecname\", undefined, undefined, true);\r\n\r\n                    studyPlanList = studyPlanMap.get(\"OptionList\");\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false,\r\n                        studyPlanList,\r\n                        productManufacturerList: response.data[\"ProductManufacturer\"] || [],\r\n                        selectedRecord\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getBatchManufacturerComboChange(selectedRecord, userInfo) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"batchcreation/getManufacturerComboChange\", {\r\n            nproductcode: selectedRecord.nproductcode.value,\r\n            nproductmanufcode: selectedRecord.nproductmanufcode,\r\n            userinfo: userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                // selectedRecord[\"smanufsitename\"] = selectedRecord.smanufsitename;\r\n                selectedRecord[\"nproductmahcode\"] = \"\";\r\n                selectedRecord[\"smahname\"] = \"\"\r\n                selectedRecord[\"slicencenumber\"] = \"\";\r\n                selectedRecord[\"scertificatetype\"] = \"\";\r\n                selectedRecord[\"scontainertype\"] = \"\";\r\n                selectedRecord[\"saddress1\"] = \"\";\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false,\r\n                        maHolderList: response.data[\"ProductMAHolder\"] || [],\r\n                        selectedRecord\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getBatchComponentComboService(batchParam) {\r\n    return function (dispatch) {\r\n\r\n        if (batchParam.masterData.SelectedBatchCreation.ntransactionstatus === transactionStatus.CANCELLED){\r\n            if (batchParam.operation === \"delete\"){\r\n                toast.warn(intl.formatMessage({ id: \"IDS_CANNOTDELETECOMPONENTFORCANCELLEDBATCH\"}));\r\n            }\r\n            else\r\n            {\r\n                toast.warn(intl.formatMessage({ id: \"IDS_CANNOTADDCOMPONENTFORCANCELLEDBATCH\"}));\r\n            }\r\n         \r\n        }\r\n        else{\r\n            if (batchParam.operation === \"delete\"){\r\n                dispatch(initRequest(true));\r\n                rsapi.post(\"batchcreation/getBatchComponent\", {nreleasebatchcode:batchParam.masterData.SelectedBatchCreation.nreleasebatchcode,\r\n                                        userinfo:batchParam.userInfo})\r\n                .then(response => {\r\n                    if(response.data.length>0){\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {                           \r\n                                operation: batchParam.operation,\r\n                                screenName: batchParam.screenName,\r\n                                //selectedRecord,\r\n                                openChildModal: true,\r\n                                ncontrolCode: batchParam.ncontrolCode,\r\n                                loading: false, \r\n                                batchComponentDeleteList: response.data\r\n                            }\r\n                        });\r\n                    }else{\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false ,multiLingualAlert:\"IDS_NOCOMPONENTSTOREMOVE\"} })\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                const currentDate = formatInputDate(new Date(), true);\r\n                const batchService = rsapi.post(\"batchcreation/getBatchComponentComboData\",\r\n                    {\r\n                        userinfo: batchParam.userInfo, currentdate: currentDate,\r\n                        batchcreation: batchParam.masterData.SelectedBatchCreation\r\n                    });\r\n\r\n                let urlArray = [batchService];\r\n\r\n                dispatch(initRequest(true));\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n\r\n                        const productCatMap = constructOptionList(response[0].data[\"ProductCategory\"] || [], \"nproductcatcode\",\r\n                            \"sproductcatname\", undefined, undefined, true);\r\n                        const productCatList = productCatMap.get(\"OptionList\");\r\n\r\n                        const productMap = constructOptionList(response[0].data[\"Product\"] || [], \"nproductcode\",\r\n                            \"sproductname\", undefined, undefined, true);\r\n\r\n                        const productList = productMap.get(\"OptionList\");\r\n\r\n                        const componentMap = constructOptionList(response[0].data[\"ComponentList\"] || [], \"ncomponentcode\",\r\n                            \"scomponentname\", undefined, undefined, true);\r\n\r\n                        const componentList = componentMap.get(\"OptionList\");\r\n\r\n                        let selectedRecord = {\r\n                            \"nproductcatcode\": {\r\n                                label: response[0].data[\"SelectedProductCategory\"].sproductcatname,\r\n                                value: response[0].data[\"SelectedProductCategory\"].nproductcatcode,\r\n                                item: response[0].data[\"SelectedProductCategory\"]\r\n                            },\r\n                            \"nproductcode\": {\r\n                                label: response[0].data[\"SelectedProduct\"].sproductname,\r\n                                value: response[0].data[\"SelectedProduct\"].nproductcode,\r\n                                item: response[0].data[\"SelectedProduct\"]\r\n                            },\r\n                            \"transdatefrom\": rearrangeDateFormat(batchParam.userInfo, response[0].data[\"AddComponentDateFrom\"]),\r\n                            \"transdateto\": rearrangeDateFormat(batchParam.userInfo, response[0].data[\"AddComponentDateFrom\"]),\r\n                        };\r\n\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                componentProductCatList: productCatList,\r\n                                componentProductList: productList,\r\n                                componentList,\r\n                                componentDefaultSearchDate:rearrangeDateFormat(batchParam.userInfo, response[0].data[\"AddComponentDateFrom\"]),\r\n                                operation: batchParam.operation,\r\n                                screenName: batchParam.screenName,\r\n                                selectedRecord,\r\n                                openChildModal: true,\r\n                                ncontrolCode: batchParam.ncontrolCode,\r\n                                loading: false, //selectedId:nreleasebatchcode\r\n                                addComponentDataList: [],\r\n                                selectedComponentList: []//response[0].data[\"BatchComponentCreation\"]\r\n                            }\r\n                        });\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"error:\", error);\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n    }\r\n}\r\n\r\nexport function getDataForAddBatchComponent(searchParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"batchcreation/refreshGetForAddComponent\", {...searchParam.inputData })\r\n            .then(response => {\r\n           \r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false,\r\n                        addComponentDataList: response.data || [],\r\n                        //selectedComponentList: [],\r\n                        selectedComponentList:searchParam.selectedComponentList ||[],\r\n                        addedComponentList:[],\r\n                        deleteComponentSelectAll:false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getCopyBatchCreationComboService(batchParam) {\r\n    return function (dispatch) {\r\n\r\n        const currentDate = formatInputDate(new Date(), true);\r\n        const batchService = rsapi.post(\"batchcreation/getCopyBatchCreationComboData\",\r\n            {\r\n                userinfo: batchParam.userInfo, currentdate: currentDate,\r\n                nreleasebatchcode: batchParam.primaryKeyValue\r\n            });\r\n\r\n        const timeZoneService = rsapi.post(\"timezone/getTimeZone\");\r\n\r\n        let urlArray = [batchService, timeZoneService];\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n\r\n                const timeZoneMap = constructOptionList(response[1].data || [], \"ntimezonecode\",\r\n                    \"stimezoneid\", undefined, undefined, true);\r\n\r\n                const timeZoneList = timeZoneMap.get(\"OptionList\");\r\n\r\n                let selectedRecord = {\r\n                    \"dvaliditystartdate\": rearrangeDateFormat(batchParam.userInfo, response[0].data[\"ValidityStartDate\"]),\r\n                    \"dexpirydate\": rearrangeDateFormat(batchParam.userInfo,response[0].data[\"ExpiryDate\"]),\r\n                    \"ntzvaliditystartdate\": {\r\n                        \"value\": batchParam.userInfo.ntimezonecode,\r\n                        \"label\": batchParam.userInfo.stimezoneid\r\n                    },\r\n                    \"stzvaliditystartdate\": batchParam.userInfo.stimezoneid,\r\n                    \"ntzexpirydate\": {\r\n                        \"value\": batchParam.userInfo.ntimezonecode,\r\n                        \"label\": batchParam.userInfo.stimezoneid\r\n                    },\r\n                    \"stzexpirydate\": batchParam.userInfo.stimezoneid\r\n                };\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        timeZoneList,\r\n                        operation: batchParam.operation,\r\n                        screenName: batchParam.screenName,\r\n                        selectedRecord,\r\n                        openModal: true,\r\n                        ncontrolCode: batchParam.ncontrolCode,\r\n                        loading: false,\r\n                        //selectedId:nreleasebatchcode\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getBatchCreationDetail(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        //const batchParam = inputParam.batchParam;\r\n        let masterData = inputParam.masterData;\r\n\r\n        return rsapi.post(\"batchcreation/getBatchCreation\", {\r\n            nreleasebatchcode: parseInt(inputParam.nreleasebatchcode),\r\n            userinfo: inputParam.userInfo, activeBCTab: inputParam.activeBCTab\r\n        })\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, \r\n                                                            activeBCTab: inputParam.activeBCTab, \r\n                                                            loading: false,\r\n                                                            dataState : {...inputParam.dataState, sort:undefined, filter:undefined},\r\n                                                            sahDataState : {...inputParam.sahDataState, sort:undefined, filter:undefined},\r\n                                                            bahDataState : {...inputParam.bahDataState, sort:undefined, filter:undefined},\r\n                                                            chDataState: {...inputParam.chDataState, sort:undefined, filter:undefined}\r\n                                                         } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function validateBatchComplete(batchParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"batchcreation/validateBatchComponentToComplete\", {\r\n            nreleasebatchcode: batchParam.nreleasebatchcode,userinfo:batchParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                if (response.data.isValidForComplete === true) {\r\n                    const postParam = {\r\n                        inputListName: \"BatchCreationList\", selectedObject: \"SelectedBatchCreation\",\r\n                        primaryKeyField: \"nreleasebatchcode\",\r\n                        primaryKeyValue: batchParam.nreleasebatchcode,\r\n                        fetchUrl: \"batchcreation/getBatchCreation\",\r\n                        fecthInputObject: batchParam.userInfo,\r\n                    }\r\n                    const inputParam = {\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"BatchCreation\", postParam,\r\n                        inputData: {\r\n                            \"userinfo\": batchParam.userInfo,\r\n                            nreleasebatchcode: batchParam.nreleasebatchcode\r\n                        },\r\n                        operation: \"complete\"\r\n                    }\r\n\r\n                    const esignNeeded = showEsign(batchParam.userRoleControlRights, batchParam.userInfo.nformcode, batchParam.ncontrolCode);\r\n                    if (esignNeeded) {\r\n                        const data = {\r\n                            loadEsign: true, screenData: { inputParam, masterData: batchParam.masterData },\r\n                            openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n                            operation: \"complete\"\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                ...data,\r\n                                serverTime:rearrangeDateFormat(batchParam.userInfo, response.data.serverTime),\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        dispatch(crudMaster(inputParam, batchParam.masterData, \"openModal\", {}));\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            showConfirmAlert: true, loading: false, operation: \"complete\",\r\n                            ncontrolCode: batchParam.ncontrolCode\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getBatchSampleApprovalHistory(methodParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n\r\n        return rsapi.post(\"batchapproval/getBASampleApprovalHistory\",\r\n            {\r\n                npreregno: methodParam.primaryKeyValue,\r\n                userinfo: methodParam.userInfo\r\n            })\r\n            .then(response => {\r\n                let sampleApprovalMap = methodParam.masterData.sampleApprovalMap || new Map();\r\n                sampleApprovalMap.set(parseInt(Object.keys(response.data[\"BA_SampleApprovalHistory\"])[0]), Object.values(response.data[\"BA_SampleApprovalHistory\"])[0]);\r\n                const masterData = { ...methodParam.masterData, sampleApprovalMap };\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        data: methodParam.data, sampleApprovalMap,\r\n                        dataState: methodParam.dataState,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getBatchCreationChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.nreleaseBatchCode) {\r\n            let inputParamData = {\r\n                nreleaseBatchCode: inputData.nreleaseBatchCode,\r\n                activeBCTab: inputData.activeBCTab,\r\n                userinfo: inputData.userinfo,\r\n\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"batchcreation/getBatchCreationChildTab\", inputParamData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...inputData.masterData,\r\n                                ...responseData,\r\n                            },\r\n                            loading: false,\r\n                            activeBCTab: inputData.activeBCTab,\r\n                            screenName: inputData.screenName\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData\r\n                    },\r\n                    loading: false,\r\n                    activeBATab: inputData.activeBATab\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\nexport function getProductByCategory(selectedRecord) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"product/getProductByProductCategory\", { nproductcatcode: selectedRecord.nproductcatcode.value })\r\n            .then(response => {\r\n                selectedRecord[\"nproductcode\"]=null\r\n                const productMap = constructOptionList(response.data || [], \"nproductcode\",\r\n                \"sproductname\", undefined, undefined, true);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false,\r\n                        selectedRecord,\r\n                        componentProductList:productMap.get(\"OptionList\")\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function reloadBatchCreation(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"batchcreation/getBatchCreation\", {...inputParam.inputData})\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                    inputParam.searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        dataState : {...inputParam.dataState, sort:undefined, filter:undefined},\r\n                        sahDataState : {...inputParam.sahDataState, sort:undefined, filter:undefined},\r\n                        bahDataState : {...inputParam.bahDataState, sort:undefined, filter:undefined},\r\n                        chDataState : {...inputParam.chDataState, sort:undefined, filter:undefined},\r\n                        testCommentDataState : {...inputParam.testCommentDataState, sort:undefined, filter:undefined}\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}