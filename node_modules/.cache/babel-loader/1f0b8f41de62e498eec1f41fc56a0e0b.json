{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{constructOptionList,fillRecordBasedOnCheckBoxSelection,getRecordBasedOnPrimaryKeyName,replaceUpdatedObject,sortData,getSameRecordFromTwoArrays,getSameRecordFromTwoDifferentArrays}from'../components/CommonScript';import{postCRUDOrganiseTransSearch}from'./ServiceAction';import{REPORTTYPE,reportCOAType,transactionStatus}from'../components/Enumeration';export function getsubSampleDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={ntype:2,nflag:2,nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,nsectioncode:inputData.nsectioncode,ntestcode:inputData.ntestcode,napprovalversioncode:inputData.napprovalversioncode,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,userinfo:inputData.userinfo,nneedsubsample:inputData.masterData.realRegSubTypeValue.nneedsubsample};var activeName=\"\";var dataStateName=\"\";var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"approval/getApprovalSubSample\",inputParamData).then(function(response){var responseData=_objectSpread(_objectSpread({},response.data),{},{APSelectedSample:inputData.APSelectedSample});responseData=sortData(responseData);var oldSelectedTest=inputData.masterData.APSelectedTest?inputData.masterData.APSelectedTest:[];inputData.masterData.APSelectedTest=responseData.APSelectedTest?responseData.APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];//inputData.masterData.APSelectedSubSample = responseData.APSelectedSubSample ? responseData.APSelectedSubSample : inputData.masterData.AP_SUBSAMPLE.length > 0 ? [inputData.masterData.AP_SUBSAMPLE[0]] : []\nvar skipInfo={};var masterData={};if(subSample){var oldSelectedSubSample=inputData.masterData.APSelectedSubSample;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:inputData.APSelectedSample,selectedPreregno:inputData.npreregno,APSelectedSubSample:inputData.masterData.AP_SUBSAMPLE.length>0?[inputData.masterData.AP_SUBSAMPLE[0]]:[]});if(inputData.checkBoxOperation===1||inputData.checkBoxOperation===7){var wholeSubSampleList=masterData.AP_SUBSAMPLE.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(subsample,index){if(!wholeSubSampleList.includes(subsample.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}});if(oldSelectedSubSample.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedSubSample:oldSelectedSubSample});}var APSelectedTest=getSameRecordFromTwoArrays(oldSelectedTest,masterData.APSelectedSubSample,'npreregno');masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:APSelectedTest});}if(inputData.checkBoxOperation===3){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:masterData.AP_TEST.length>0?[masterData.AP_TEST[0]]:[]});}var _inputData=inputData,testskip=_inputData.testskip,testtake=_inputData.testtake,subSampleSkip=_inputData.subSampleSkip,subSampleTake=_inputData.subSampleTake;var bool=false;if(inputData.masterData.AP_SUBSAMPLE.length<inputData.subSampleSkip){testskip=0;subSampleSkip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake,subSampleSkip:subSampleSkip,subSampleTake:subSampleTake};}}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var _masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:inputData.APSelectedSample,APSelectedSubSample:inputData.masterData.APSelectedSubSample,APSelectedTest:inputData.masterData.APSelectedTest||[],selectedPreregno:inputData.npreregno});if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";_masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";_masterData['searchedTests']=undefined;}var _inputData2=inputData,_testskip=_inputData2.testskip,_testtake=_inputData2.testtake;var _bool=false;if(inputData.masterData.AP_TEST.length<inputData.testskip){_testskip=0;_bool=true;}if(_bool){skipInfo={testskip:_testskip,testtake:_testtake};}var ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];if(inputData.checkBoxOperation===1){var wholeTestList=_masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var ntransactiontestcode;if(oldSelectedTest.length>0){keepOld=true;_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedTest:oldSelectedTest});}else{ntransactiontestcode=_masterData.selectedTest[0].ntransactiontestcode;}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var _ntransactiontestcode=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var list=[];var dbData=[];switch(inputData.activeTestTab){case\"IDS_RESULTS\":dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,_ntransactiontestcode,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":dbData=response.data.ResultUsedInstrument||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedInstrument),_toConsumableArray(dbData));ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TASK\":dbData=response.data.ResultUsedTasks||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedTasks),_toConsumableArray(dbData));ResultUsedTasks=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":dbData=response.data.RegistrationTestAttachment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(dbData));RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":dbData=response.data.ApprovalResultChangeHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalResultChangeHistory),_toConsumableArray(dbData));ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":dbData=response.data.RegistrationTestComment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(dbData));RegistrationTestComment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":dbData=response.data.ApprovalHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalHistory),_toConsumableArray(dbData));ApprovalHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;default:dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;}}else{_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var _ntransactiontestcode2=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var _list=[];switch(inputData.activeTestTab){case\"IDS_RESULTS\":_list=response.data.ApprovalParameter||[];ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list,_ntransactiontestcode2,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":_list=response.data.ResultUsedInstrument||[];ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":_list=response.data.ResultUsedTasks||[];ResultUsedTasks=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":_list=response.data.RegistrationTestAttachment||[];RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":_list=response.data.ApprovalResultChangeHistory||[];ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":_list=response.data.RegistrationTestComment||[];RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":_list=response.data.ApprovalHistory||[];ApprovalHistory=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:_list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(response.data.ApprovalParameter));ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}_masterData=_objectSpread(_objectSpread({},_masterData),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory});}if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})});dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,skip:undefined,take:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var skipInfo={};var bool=false;var _inputData3=inputData,testskip=_inputData3.testskip,testtake=_inputData3.testtake,subsampletake=_inputData3.subsampletake,subsampleskip=_inputData3.subsampleskip;var oldSelectedTest=inputData.masterData.APSelectedTest;var oldSelectedSubSample=inputData.masterData.APSelectedSubSample;var TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=true;}else{isGrandChildGetRequired=false;}var ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.selectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var ntransactiontestcode=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode.toString():\"\";var APSelectedSample=inputData.APSelectedSample;var selectedPreregno=inputData.npreregno;var APSelectedTest=inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];var APSelectedSubSample=inputData.masterData.AP_SUBSAMPLE;if(subSample){var filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.AP_SUBSAMPLE,\"ntransactionsamplecode\");APSelectedSubSample=filterSelectedSubSample.length>0?filterSelectedSubSample:[inputData.masterData.AP_SUBSAMPLE[0]];if(inputData.masterData.AP_SUBSAMPLE.length<=inputData.subsampleskip){subsampleskip=0;skipInfo={subsampletake:subsampletake,subsampleskip:subsampleskip};}}var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:APSelectedSample,APSelectedSubSample:APSelectedSubSample,APSelectedTest:APSelectedTest});if(inputData.masterData.AP_SUBSAMPLE.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{testskip:testskip,testtake:testtake});}inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\"],ntransactiontestcode:ntransactiontestcode,APSelectedSample:APSelectedSample,selectedPreregno:selectedPreregno,APSelectedTest:APSelectedTest,APSelectedSubSample:APSelectedSubSample,checkBoxOperation:3});if(subSample){if(APSelectedTest.length===0){inputData[\"npreregno\"]=APSelectedSubSample.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=APSelectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"AP_TEST\"];dispatch(getTestChildTabDetail(inputData,true));}else{dispatch(getTestChildTabDetail(inputData,true));}}else{dispatch(getTestChildTabDetail(inputData,true));}// dispatch(getTestChildTabDetail(inputData, true));\n}else{//added by sudharshanan for test select issue while sample click\nvar _masterData2=_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[],selectedSample:inputData.selectedSample,selectedSubSample:inputData.masterData.AP_SUBSAMPLE});var wholeTestList=_masterData2.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode3;if(oldSelectedTest.length>0){keepOld=true;_masterData2=_objectSpread(_objectSpread({},_masterData2),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode3=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"-1\";}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode3,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,_ntransactiontestcode3,\"ntransactiontestcode\");break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,_ntransactiontestcode3,\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode3,\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,_ntransactiontestcode3,\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode3,\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,_ntransactiontestcode3,\"ntransactiontestcode\");break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode3,\"ntransactiontestcode\");break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},_masterData2),{},{// wholeApprovalParameter,\nApprovalParameter:ApprovalParameter,// wholeResultUsedInstrument,\nResultUsedInstrument:ResultUsedInstrument,// wholeResultUsedTasks,\nResultUsedTasks:ResultUsedTasks,// wholeRegistrationTestAttachment,\nRegistrationTestAttachment:RegistrationTestAttachment,// wholeApprovalResultChangeHistory,\nApprovalResultChangeHistory:ApprovalResultChangeHistory,// wholeRegistrationTestComments,\nRegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab}});}}};}export function getTestDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={ntype:3,nflag:3,nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,napprovalversioncode:inputData.napprovalversioncode,napprovalconfigcode:inputData.napprovalconfigcode,ntransactionsamplecode:inputData.ntransactionsamplecode,nsectioncode:inputData.nsectioncode,ntestcode:inputData.ntestcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,userinfo:inputData.userinfo};var activeName=\"\";var dataStateName=\"\";var masterData={};dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"approval/getApprovalTest\",inputParamData).then(function(response){var responseData=_objectSpread({},response.data);//responseData = sortData(responseData)\ninputData.searchTestRef.current.null=\"\";//inputData.masterData.APSelectedTest = responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\nvar oldSelectedTest=inputData.masterData.APSelectedTest;inputData.masterData.APSelectedTest=oldSelectedTest.length>0?oldSelectedTest:responseData.APSelectedTest?responseData.APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedTest:inputData.masterData.APSelectedTest,// APselectedSample: inputData.APSelectedSample,\nAPSelectedSubSample:inputData.APSelectedSubSample,selectedPreregno:inputData.npreregno});if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTests']=undefined;}var _inputData4=inputData,testskip=_inputData4.testskip,testtake=_inputData4.testtake;var bool=false;if(inputData.masterData.AP_TEST.length<inputData.testskip){testskip=0;bool=true;}var skipInfo={};if(bool){skipInfo={testskip:testskip,testtake:testtake};}var ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];if(inputData.checkBoxOperation===1){var wholeTestList=masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var ntransactiontestcode;// if (oldSelectedTest.length > 0) {\n//     keepOld = true\n//     masterData = {\n//         ...masterData,\n//         selectedTest: oldSelectedTest\n//     }\n// } else {\nntransactiontestcode=masterData.APSelectedTest[0].ntransactiontestcode;// }\nswitch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var _ntransactiontestcode4=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var list=[];var dbData=[];switch(inputData.activeTestTab){case\"IDS_RESULTS\":dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(dbData,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":dbData=response.data.ResultUsedInstrument||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedInstrument),_toConsumableArray(dbData));ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TASK\":dbData=response.data.ResultUsedTasks||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedTasks),_toConsumableArray(dbData));ResultUsedTasks=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":dbData=response.data.RegistrationTestAttachment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(dbData));RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":dbData=response.data.ApprovalResultChangeHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalResultChangeHistory),_toConsumableArray(dbData));ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":dbData=response.data.RegistrationTestComment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(dbData));RegistrationTestComment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":dbData=response.data.ApprovalHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalHistory),_toConsumableArray(dbData));ApprovalHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;default:dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;}}else if(inputData.checkBoxOperation===7){var _wholeTestList=masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});var wholeTestListForSelectAll=masterData.AP_TEST;var wholeTestListForSelectSingleSelect=oldSelectedTest.forEach(function(test,index){if(!_wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}});var _keepOld=false;var _ntransactiontestcode5;if(oldSelectedTest.length>0){_keepOld=true;masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:oldSelectedTest//oldSelectedTest\n});}else{_ntransactiontestcode5=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\";}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=_keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=_keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":ResultUsedTasks=_keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=_keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=_keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=_keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=_keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:ApprovalParameter=_keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode5,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}else{masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var _ntransactiontestcode6=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var _list2=[];switch(inputData.activeTestTab){case\"IDS_RESULTS\":_list2=response.data.ApprovalParameter||[];ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list2,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":_list2=response.data.ResultUsedInstrument||[];ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":_list2=response.data.ResultUsedTasks||[];ResultUsedTasks=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":_list2=response.data.RegistrationTestAttachment||[];RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":_list2=response.data.ApprovalResultChangeHistory||[];ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":_list2=response.data.RegistrationTestComment||[];RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":_list2=response.data.ApprovalHistory||[];ApprovalHistory=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:_list2=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(response.data.ApprovalParameter));ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}masterData=_objectSpread(_objectSpread({},masterData),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})});dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{APSelectedSubSample:inputData.APSelectedSubSample,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,skip:undefined,take:undefined},skipInfo),loading:false,showFilter:false,activeTestTab:inputData.activeTestTab}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var bool=false;var skipInfo={};var _inputData5=inputData,testskip=_inputData5.testskip,testtake=_inputData5.testtake;var oldSelectedTest=inputData.masterData.APSelectedTest;var TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].ntransactionsamplecode,\"ntransactionsamplecode\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=true;}else{isGrandChildGetRequired=false;}var ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.APSelectedSubSample,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);if(isGrandChildGetRequired){//let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"\";\nvar APSelectedSample=inputData.masterData.APSelectedSample;var selectedPreregno=inputData.npreregno;//let selectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\nvar APSelectedSubSample=inputData.masterData.APSelectedSubSample;var filterTestSameOldSelectedTest=getSameRecordFromTwoDifferentArrays(oldSelectedTest,inputData.masterData.AP_TEST,\"ntransactiontestcode\");var APSelectedTest=filterTestSameOldSelectedTest.length>0?filterTestSameOldSelectedTest:[inputData.masterData.AP_TEST[0]];var ntransactiontestcode=APSelectedTest.length>0?APSelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\";if(inputData.masterData.AP_TEST.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake};}inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\"],ntransactiontestcode:ntransactiontestcode,APSelectedSample:APSelectedSample,selectedPreregno:selectedPreregno,APSelectedTest:APSelectedTest,APSelectedSubSample:APSelectedSubSample,checkBoxOperation:3,skipInfo:skipInfo});dispatch(getTestChildTabDetail(inputData,true));}else{var _oldSelectedTest=inputData.masterData.APSelectedTest;var _TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");var _isGrandChildGetRequired=false;if(_TestSelected.length>0){_isGrandChildGetRequired=true;}else{_isGrandChildGetRequired=false;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.APSelectedSubSample,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);if(_isGrandChildGetRequired){var _ntransactiontestcode7=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode.toString():\"-1\";var _APSelectedSubSample=inputData.APSelectedSubSample;// let selectedPreregno = inputData.npreregno;\nvar _APSelectedTest=inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];// let selectedSubSample = inputData.masterData.RegistrationGetSubSample\nvar _masterData3=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSubSample:_APSelectedSubSample,APSelectedTest:_APSelectedTest});inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"RegistrationTestComment\",\"RegistrationParameter\"],ntransactiontestcode:_ntransactiontestcode7,masterData:_masterData3,APSelectedTest:_APSelectedTest,APSelectedSubSample:_APSelectedSubSample,checkBoxOperation:3});dispatch(getTestChildTabDetail(inputData,true));}else{var _masterData4=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSubSample:inputData.APSelectedSubSample,selectedTransactioncode:inputData.ntransactionsamplecode,APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var wholeTestList=_masterData4.AP_TEST.map(function(b){return b.ntransactiontestcode;});_oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){_oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var _ntransactiontestcode8;if(_oldSelectedTest.length>0){keepOld=true;_masterData4=_objectSpread(_objectSpread({},_masterData4),{},{APSelectedTest:_oldSelectedTest});}else{_ntransactiontestcode8=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"-1\";}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,_ntransactiontestcode8,\"ntransactiontestcode\");break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode8,\"ntransactiontestcode\");break;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:_objectSpread(_objectSpread({},_masterData4),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false,showFilter:false},skipInfo),{},{activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab})});}}}};}export function getTestChildTabDetail(inputData,isServiceRequired){return function(dispatch){if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){var inputParamData={ntransactiontestcode:inputData.ntransactiontestcode,npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;var testtake=inputData.testtake;var activeName=\"\";var dataStateName=\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_PARAMETERRESULTS\":url=\"registration/getregistrationparameter\";activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";activeName=\"RegistrationTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_DOCUMENTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getApprovalHistory\";activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;default:url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(url!==null){dispatch(initRequest(true));if(isServiceRequired){rsapi.post(url,inputParamData).then(function(response){var skipInfo={};var responseData=_objectSpread(_objectSpread({},response.data),{},{APSelectedSubSample:inputData.APSelectedSubSample||inputData.masterData.APSelectedSubSample,selectedTest:inputData.APselectedTest});//responseData = sortData(responseData)\n// fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSubSample:inputData.APSelectedSubSample||inputData.masterData.APSelectedSubSample,APSelectedTest:inputData.APSelectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.APSelectedTest,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactiontestcode\",inputData.removeElementFromArray);var skipInfo={};var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedTest:inputData.APSelectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{var _inputData$masterData=inputData.masterData,ApprovalParameter=_inputData$masterData.ApprovalParameter,ResultUsedInstrument=_inputData$masterData.ResultUsedInstrument,ResultUsedTasks=_inputData$masterData.ResultUsedTasks,RegistrationTestAttachment=_inputData$masterData.RegistrationTestAttachment,ApprovalResultChangeHistory=_inputData$masterData.ApprovalResultChangeHistory,RegistrationTestComment=_inputData$masterData.RegistrationTestComment,ApprovalHistory=_inputData$masterData.ApprovalHistory;switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=[];break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=[];break;case\"IDS_TASK\":ResultUsedTasks=[];break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=[];break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=[];break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=[];break;case\"IDS_APPROVALHISTORY\":ApprovalHistory=[];break;default:ApprovalParameter=[];break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:[],ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false}});}};}export function getSampleChildTabDetail(inputData){return function(dispatch){if(inputData.npreregno.length>0){var inputParamData={npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;switch(inputData.activeSampleTab){case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;case\"IDS_SAMPLECOMMENTS\":url=\"resultentrybysample/getResultUsedInstrument\";break;case\"IDS_SUBSAMPLEATTACHMENTS\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_SUBSAMPLECOMMENTS\":url=\"resultentrybysample/getResultUsedTask\";break;case\"IDS_SOURCE\":url=\"registration/getRegistrationSourceCountry\";break;case\"IDS_SAMPLEAPPROVALHISTORY\":url=\"approval/getSampleApprovalHistory\";break;case\"IDS_PRINTHISTORY\":url=\"approval/getPrintHistory\";break;case\"IDS_REPORTHISTORY\":url=\"approval/getCOAHistory\";break;default:url=null;break;}if(url!==null){dispatch(initRequest(true));rsapi.post(url,inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{selectedSample:inputData.selectedSample,selectedTestCode:inputData.ntransactiontestcode}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,screenName:inputData.screenName}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{toast.warn(\"Please Select a Sample\");}};}export function performAction(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/performAction\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response.data),{},{AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')});// dispatch({type: DEFAULT_RETURN, payload:{\n// masterData:{\n//     ...inputParam.inputData.masterData,\n//     ...response.data, \n//     AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam   .inputData.masterData.AP_SAMPLE,'npreregno'),\n//     AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.inputData.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\n//     AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.inputData.masterData.AP_TEST,'ntransactiontestcode')\n// },\n//     loading:false ,\n//     loadEsign:false,\n//     openChildModal:false                     \n// }}) \nvar respObject={masterData:masterData,inputParam:inputParam,openChildModal:false,operation:\"dynamic\",masterStatus:\"\",errorCode:undefined,loadEsign:false,showEsign:false,selectedRecord:{},loading:false};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function updateDecision(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/updateDecision\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);// dispatch({type: DEFAULT_RETURN, payload:{\n//     masterData:{\n//         ...inputParam.masterData,\n//         ...responseData, \n//         AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),\n//         AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\n//         AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')\n//     },\n//     loading:false                      \n// }}) \nvar masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')});var respObject={masterData:masterData,inputParam:inputParam,openChildModal:false,operation:\"dynamic\",masterStatus:\"\",errorCode:undefined,loadEsign:false,showEsign:false,selectedRecord:{},loading:false};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getRegistrationType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{SampleTypeValue:inputData.SampleTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationSubType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getRegistrationSubType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegTypeValue:inputData.RegTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getFilterStatus(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getFilterStatus\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getFilterBasedTest(inputData){return function(dispatch){if(inputData.napprovalversioncode){dispatch(initRequest(true));rsapi.post(\"approval/getFilterBasedTest\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue}),loading:false}});if(response.data.rtn){toast.warn(response.data.rtn);}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(\"Please Select All the Values in Filter\");}};}export function getApprovalVersion(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getApprovalVersion\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),responseData),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovalSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getApprovalSample\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);// responseData = sortData(responseData)\nvar masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);if(inputParam.searchSampleRef!==undefined&&inputParam.searchSampleRef.current!==null){inputParam.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputParam.searchSubSampleRef!==undefined&&inputParam.searchSubSampleRef.current!==null){inputParam.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputParam.searchTestRef!==undefined&&inputParam.searchTestRef.current!==null){inputParam.searchTestRef.current.value=\"\";// masterData['searchedTest'] = undefined\nmasterData['searchedTests']=undefined;}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,take:inputParam.take,testskip:0,testtake:inputParam.testtake,resultDataState:_objectSpread(_objectSpread({},inputParam.resultDataState),{},{sort:undefined,filter:undefined}),instrumentDataState:_objectSpread(_objectSpread({},inputParam.instrumentDataState),{},{sort:undefined,filter:undefined}),materialDataState:_objectSpread(_objectSpread({},inputParam.materialDataState),{},{sort:undefined,filter:undefined}),taskDataState:_objectSpread(_objectSpread({},inputParam.taskDataState),{},{sort:undefined,filter:undefined}),documentDataState:_objectSpread(_objectSpread({},inputParam.documentDataState),{},{sort:undefined,filter:undefined}),resultChangeDataState:_objectSpread(_objectSpread({},inputParam.resultChangeDataState),{},{sort:undefined,filter:undefined}),testCommentDataState:_objectSpread(_objectSpread({},inputParam.testCommentDataState),{},{sort:undefined,filter:undefined}),historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined}),samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputParam.samplePrintHistoryDataState),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputParam.sampleHistoryDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getStatusCombo(inputParam){return function(dispatch){var inputData={ntransactionresultcode:inputParam.primaryKeyValue,userinfo:inputParam.userInfo};dispatch(initRequest(true));rsapi.post(\"approval/getStatusCombo\",inputData).then(function(response){var responseData=_objectSpread({},response.data);//responseData = sortData(responseData)\nvar GradeListMap=constructOptionList(response.data.Grade||[],\"ngradecode\",\"sgradename\",'ascending','ngradecode',false);var Grade=GradeListMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{Grade:Grade,selectedParamId:inputParam.primaryKeyValue}),loading:false,showFilter:false,openChildModal:true,ncontrolCode:inputParam.ncontrolCode,selectedRecord:{senforcestatuscomment:response.data.parameterComment&&response.data.parameterComment.senforcestatuscomment,ntransactionresultcode:response.data.parameterComment&&response.data.parameterComment.ntransactionresultcode,ntransactiontestcode:response.data.parameterComment&&response.data.parameterComment.ntransactiontestcode},operation:\"enforce\",screenName:\"IDS_STATUS\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getParameterEdit(inputParam){return function(dispatch){var inputData={ntransactiontestcode:inputParam.selectedTest&&inputParam.selectedTest.map(function(item){return item.ntransactiontestcode;}).join(\",\"),userinfo:inputParam.userInfo};if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){dispatch(initRequest(true));rsapi.post(\"approval/getEditParameter\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},responseData),{},{loading:false,openChildModal:true,operation:\"update\",screenName:\"IDS_APPROVALPARAMETER\"// ncontrolCode:inputParam.ncontrolCode,\n})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{multilingualMsg:\"IDS_SELECTTEST\"}});}};}export function validateEsignforApproval(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){if(inputParam.operation==='dynamic'){var methodUrl=\"performaction\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}dispatch(performAction(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]));}else if(inputParam.operation==='reportgeneration'){delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"agree\"];inputParam[\"screenData\"][\"inputParam\"][\"reporparam\"][\"userinfo\"]=inputParam.inputData.userinfo;dispatch(generateCOAReport(inputParam[\"screenData\"][\"inputParam\"]['reporparam']));}else if(inputParam.operation==='decision'){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"agree\"];inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;dispatch(updateDecision(inputParam[\"screenData\"][\"inputParam\"]));}}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function previewSampleReport(inputParam){return function(dispatch){dispatch(initRequest(true));var ndecisionStatus=inputParam.sample.ndecisionstatus;if(inputParam.sample.ndecisionstatus===undefined||inputParam.sample.ndecisionstatus===transactionStatus.DRAFT){ndecisionStatus=transactionStatus.PASS;}var inputData={ndecisionstatus:ndecisionStatus,userinfo:inputParam.userinfo,nprimarykey:inputParam.sample.npreregno,ncoareporttypecode:reportCOAType.SAMPLECERTIFICATEPRIVIEW,nreporttypecode:REPORTTYPE.SAMPLEREPORT,sprimarykeyname:\"npreregno\",ncontrolcode:inputParam.ncontrolCode,nregtypecode:inputParam.sample.nregtypecode,nregsubtypecode:inputParam.sample.nregsubtypecode,npreregno:inputParam.sample.npreregno};rsapi.post(\"approval/previewSampleReport\",inputData).then(function(response){if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,openChildModal:false,loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function generateCOAReport(inputParam){return function(dispatch){dispatch(initRequest(true));var inputData={npreregno:inputParam.sample.npreregno,nsectioncode:inputParam.nsectioncode||-1,userinfo:inputParam.userinfo,nprimarykey:inputParam.sample.npreregno,ncoareporttypecode:reportCOAType.SAMPLEWISE,nreporttypecode:REPORTTYPE.COAREPORT,sprimarykeyname:\"npreregno\",ncontrolcode:inputParam.ncontrolCode,nregtypecode:inputParam.nregtypecode,nregsubtypecode:inputParam.nregsubtypecode};rsapi.post(\"approval/generateCOAReport\",inputData).then(function(response){if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,openChildModal:false,selectedRecord:{},loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getEnforceCommentsHistory(selectedParam,masterData,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getEnforceCommentsHistory\",{ntransactionresultcode:selectedParam.ntransactionresultcode,userinfo:userInfo}).then(function(response){if(response.data.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{enforceCommentsHistory:response.data});dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,openChildModal:true,operation:\"view\",screenName:\"IDS_ENFORCECOMMENTHISTORY\"}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,multilingualMsg:\"IDS_NOPREVIOUSCOMMENTSFOUND\"}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/ApprovalAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","initRequest","constructOptionList","fillRecordBasedOnCheckBoxSelection","getRecordBasedOnPrimaryKeyName","replaceUpdatedObject","sortData","getSameRecordFromTwoArrays","getSameRecordFromTwoDifferentArrays","postCRUDOrganiseTransSearch","REPORTTYPE","reportCOAType","transactionStatus","getsubSampleDetail","inputData","isServiceRequired","dispatch","inputParamData","ntype","nflag","nsampletypecode","nregtypecode","nregsubtypecode","npreregno","ntransactionstatus","nsectioncode","ntestcode","napprovalversioncode","napprovalconfigcode","activeTestTab","activeSampleTab","userinfo","nneedsubsample","masterData","realRegSubTypeValue","activeName","dataStateName","subSample","post","then","response","responseData","data","APSelectedSample","oldSelectedTest","APSelectedTest","AP_TEST","length","skipInfo","oldSelectedSubSample","APSelectedSubSample","childTabsKey","checkBoxOperation","removeElementFromArray","selectedPreregno","AP_SUBSAMPLE","wholeSubSampleList","map","b","ntransactionsamplecode","forEach","subsample","index","includes","splice","testskip","testtake","subSampleSkip","subSampleTake","bool","searchSubSampleRef","undefined","current","value","searchTestRef","ApprovalParameter","ResultUsedInstrument","ResultUsedTasks","RegistrationTestAttachment","ApprovalResultChangeHistory","RegistrationTestComment","ApprovalHistory","wholeTestList","ntransactiontestcode","test","keepOld","selectedTest","list","dbData","skip","sort","filter","samplePrintHistoryDataState","sampleHistoryDataState","type","payload","loading","showFilter","take","catch","error","status","message","warn","subsampletake","subsampleskip","TestSelected","isGrandChildGetRequired","selectedSample","toString","filterSelectedSubSample","x","join","getTestChildTabDetail","selectedSubSample","getTestDetail","null","wholeTestListForSelectAll","wholeTestListForSelectSingleSelect","selectedSampleCode","filterTestSameOldSelectedTest","selectedTransactioncode","url","APselectedTest","selectedTestCode","screenName","getSampleChildTabDetail","performAction","inputParam","AP_SAMPLE","updatedSample","updatedSubSample","updatedTest","respObject","openChildModal","operation","masterStatus","errorCode","loadEsign","showEsign","selectedRecord","postParamList","updateDecision","getRegistrationType","SampleTypeValue","getRegistrationSubType","RegTypeValue","getFilterStatus","RegSubTypeValue","getFilterBasedTest","rtn","getApprovalVersion","getApprovalSample","searchSampleRef","resultDataState","instrumentDataState","materialDataState","taskDataState","documentDataState","resultChangeDataState","testCommentDataState","historyDataState","getStatusCombo","ntransactionresultcode","primaryKeyValue","userInfo","GradeListMap","Grade","get","selectedParamId","ncontrolCode","senforcestatuscomment","parameterComment","getParameterEdit","item","multilingualMsg","validateEsignforApproval","methodUrl","toLowerCase","generateCOAReport","previewSampleReport","ndecisionStatus","sample","ndecisionstatus","DRAFT","PASS","nprimarykey","ncoareporttypecode","SAMPLECERTIFICATEPRIVIEW","nreporttypecode","SAMPLEREPORT","sprimarykeyname","ncontrolcode","document","getElementById","setAttribute","filepath","click","SAMPLEWISE","COAREPORT","getEnforceCommentsHistory","selectedParam","enforceCommentsHistory"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { constructOptionList, fillRecordBasedOnCheckBoxSelection, getRecordBasedOnPrimaryKeyName, replaceUpdatedObject, sortData, getSameRecordFromTwoArrays, getSameRecordFromTwoDifferentArrays } from '../components/CommonScript';\r\nimport { postCRUDOrganiseTransSearch } from './ServiceAction';\r\nimport { REPORTTYPE, reportCOAType, transactionStatus } from '../components/Enumeration';\r\n\r\nexport function getsubSampleDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            ntype: 2,\r\n            nflag: 2,\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            nsectioncode: inputData.nsectioncode,\r\n            ntestcode: inputData.ntestcode,\r\n            napprovalversioncode: inputData.napprovalversioncode,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            nneedsubsample: inputData.masterData.realRegSubTypeValue.nneedsubsample\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        const subSample = inputData.nneedsubsample\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"approval/getApprovalSubSample\", inputParamData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data, APSelectedSample: inputData.APSelectedSample }\r\n                    responseData = sortData(responseData)\r\n                    let oldSelectedTest = inputData.masterData.APSelectedTest ? inputData.masterData.APSelectedTest : []\r\n                    inputData.masterData.APSelectedTest = responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                    //inputData.masterData.APSelectedSubSample = responseData.APSelectedSubSample ? responseData.APSelectedSubSample : inputData.masterData.AP_SUBSAMPLE.length > 0 ? [inputData.masterData.AP_SUBSAMPLE[0]] : []\r\n                    let skipInfo = {}\r\n                    let masterData = {}\r\n                    if (subSample) {\r\n                        let oldSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            APSelectedSample: inputData.APSelectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            APSelectedSubSample: inputData.masterData.AP_SUBSAMPLE.length > 0 ?\r\n                                [inputData.masterData.AP_SUBSAMPLE[0]] : [],\r\n                        }\r\n\r\n                        if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 7) {\r\n\r\n                            const wholeSubSampleList = masterData.AP_SUBSAMPLE.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((subsample, index) => {\r\n                                if (!wholeSubSampleList.includes(subsample.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n                            if (oldSelectedSubSample.length > 0) {\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    APSelectedSubSample: oldSelectedSubSample\r\n                                }\r\n                            }\r\n                            const APSelectedTest = getSameRecordFromTwoArrays(oldSelectedTest,\r\n                                masterData.APSelectedSubSample, 'npreregno')\r\n                            masterData = {\r\n                                ...masterData,\r\n                                APSelectedTest\r\n                            }\r\n                        }\r\n                        if (inputData.checkBoxOperation === 3) {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                APSelectedTest: masterData.AP_TEST.length > 0 ? [masterData.AP_TEST[0]] : []\r\n                            }\r\n                        }\r\n\r\n\r\n                        let { testskip, testtake, subSampleSkip, subSampleTake } = inputData\r\n                        let bool = false;\r\n\r\n                        if (inputData.masterData.AP_SUBSAMPLE.length < inputData.subSampleSkip) {\r\n                            testskip = 0;\r\n                            subSampleSkip = 0;\r\n                            bool = true\r\n                        }\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake, subSampleSkip, subSampleTake }\r\n                        }\r\n                    }\r\n                    else {\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n\r\n                        let masterData = {\r\n                            ...inputData.masterData,\r\n                            APSelectedSample: inputData.APSelectedSample,\r\n                            APSelectedSubSample: inputData.masterData.APSelectedSubSample,\r\n                            APSelectedTest: inputData.masterData.APSelectedTest || [],\r\n                            selectedPreregno: inputData.npreregno,\r\n                        }\r\n                        if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                            inputData.searchSubSampleRef.current.value = \"\";\r\n                            masterData['searchedSubSample'] = undefined\r\n                        }\r\n                        if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                            inputData.searchTestRef.current.value = \"\"\r\n                            masterData['searchedTests'] = undefined\r\n                        }\r\n                        let { testskip, testtake } = inputData\r\n                        let bool = false;\r\n                        if (inputData.masterData.AP_TEST.length < inputData.testskip) {\r\n                            testskip = 0;\r\n                            bool = true\r\n                        }\r\n\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake }\r\n                        }\r\n\r\n                        let ApprovalParameter = [];\r\n                        let ResultUsedInstrument = [];\r\n                        let ResultUsedTasks = [];\r\n                        let RegistrationTestAttachment = [];\r\n                        let ApprovalResultChangeHistory = [];\r\n                        let RegistrationTestComment = [];\r\n                        let ApprovalHistory = [];\r\n\r\n                        if (inputData.checkBoxOperation === 1) {\r\n\r\n                            let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                            oldSelectedTest.map((test, index) => {\r\n                                if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                    oldSelectedTest.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                            let keepOld = false;\r\n                            let ntransactiontestcode;\r\n                            if (oldSelectedTest.length > 0) {\r\n                                keepOld = true\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    selectedTest: oldSelectedTest\r\n                                }\r\n                            } else {\r\n                                ntransactiontestcode = masterData.selectedTest[0].ntransactiontestcode\r\n                            }\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedInstrument\"\r\n                                    dataStateName = \"instrumentDataState\"\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedTasks\"\r\n                                    dataStateName = \"taskDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalResultChangeHistory\"\r\n                                    dataStateName = \"resultChangeDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalHistory\"\r\n                                    dataStateName = \"historyDataState\"\r\n                                    break;\r\n                                default:\r\n                                    ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        } else if (inputData.checkBoxOperation === 5) {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                            }\r\n                            let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0;\r\n                            let list = [];\r\n                            let dbData = []\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    dbData = response.data.ApprovalParameter || []\r\n                                    list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    dbData = response.data.ResultUsedInstrument || []\r\n                                    list = [...inputData.masterData.ResultUsedInstrument, ...dbData]\r\n                                    ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    dbData = response.data.ResultUsedTasks || []\r\n                                    list = [...inputData.masterData.ResultUsedTasks, ...dbData]\r\n                                    ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    dbData = response.data.RegistrationTestAttachment || []\r\n                                    list = [...inputData.masterData.RegistrationTestAttachment, ...dbData]\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    dbData = response.data.ApprovalResultChangeHistory || []\r\n                                    list = [...inputData.masterData.ApprovalResultChangeHistory, ...dbData]\r\n                                    ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    dbData = response.data.RegistrationTestComment || []\r\n                                    list = [...inputData.masterData.RegistrationTestComment, ...dbData]\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    dbData = response.data.ApprovalHistory || []\r\n                                    list = [...inputData.masterData.ApprovalHistory, ...dbData]\r\n                                    ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                default:\r\n                                    dbData = response.data.ApprovalParameter || []\r\n                                    list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                            }\r\n                        } else {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                            }\r\n                            let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0\r\n                            let list = [];\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    list = response.data.ApprovalParameter || []\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    list = response.data.ResultUsedInstrument || []\r\n                                    ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedInstrument\"\r\n                                    dataStateName = \"instrumentDataState\"\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    list = response.data.ResultUsedTasks || []\r\n                                    ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedTasks\"\r\n                                    dataStateName = \"taskDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    list = response.data.RegistrationTestAttachment || []\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    list = response.data.ApprovalResultChangeHistory || []\r\n                                    ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalResultChangeHistory\"\r\n                                    dataStateName = \"resultChangeDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    list = response.data.RegistrationTestComment || []\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    list = response.data.ApprovalHistory || []\r\n                                    ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalHistory\"\r\n                                    dataStateName = \"historyDataState\"\r\n                                    break;\r\n                                default:\r\n                                    list = [...inputData.masterData.ApprovalParameter, ...response.data.ApprovalParameter]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n\r\n                        masterData = {\r\n                            ...masterData,\r\n                            ApprovalParameter,\r\n                            ResultUsedInstrument,\r\n                            ResultUsedTasks,\r\n                            RegistrationTestAttachment,\r\n                            ApprovalResultChangeHistory,\r\n                            RegistrationTestComment,\r\n                            ApprovalHistory\r\n                        }\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    skipInfo = {\r\n                        ...skipInfo,\r\n                        samplePrintHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        },\r\n                        sampleHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            let skipInfo = {};\r\n            let bool = false;\r\n            let { testskip, testtake, subsampletake, subsampleskip } = inputData;\r\n            let oldSelectedTest = inputData.masterData.APSelectedTest\r\n            let oldSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n            let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = true;\r\n            } else {\r\n                isGrandChildGetRequired = false;\r\n            }\r\n            let ApprovalParameter = [];\r\n            let ResultUsedInstrument = [];\r\n            let ResultUsedTasks = [];\r\n            let RegistrationTestAttachment = [];\r\n            let ApprovalResultChangeHistory = [];\r\n            let RegistrationTestComment = [];\r\n            let ApprovalHistory = [];\r\n\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"\";\r\n                let APSelectedSample = inputData.APSelectedSample;\r\n                let selectedPreregno = inputData.npreregno;\r\n                let APSelectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\r\n                let APSelectedSubSample = inputData.masterData.AP_SUBSAMPLE\r\n\r\n                if (subSample) {\r\n                    let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.AP_SUBSAMPLE, \"ntransactionsamplecode\");\r\n                    APSelectedSubSample = filterSelectedSubSample.length > 0 ? filterSelectedSubSample : [inputData.masterData.AP_SUBSAMPLE[0]];\r\n                    if (inputData.masterData.AP_SUBSAMPLE.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampletake, subsampleskip }\r\n                    }\r\n\r\n                }\r\n                let masterData = { ...inputData.masterData, APSelectedSample, APSelectedSubSample, APSelectedTest }\r\n                if (inputData.masterData.AP_SUBSAMPLE.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                        \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, APSelectedSample, selectedPreregno, APSelectedTest,\r\n                    APSelectedSubSample, checkBoxOperation: 3\r\n                }\r\n\r\n                if (subSample) {\r\n                    if (APSelectedTest.length === 0) {\r\n                        inputData[\"npreregno\"] = APSelectedSubSample.map(x => x.npreregno).join(\",\")\r\n                        inputData[\"ntransactionsamplecode\"] = APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\")\r\n                        inputData[\"checkBoxOperation\"] = 3\r\n                        inputData[\"childTabsKey\"] = [\"AP_TEST\"]\r\n                        dispatch(getTestChildTabDetail(inputData, true));\r\n                    } else {\r\n                        dispatch(getTestChildTabDetail(inputData, true));\r\n                    }\r\n                } else {\r\n                    dispatch(getTestChildTabDetail(inputData, true));\r\n                }\r\n\r\n                // dispatch(getTestChildTabDetail(inputData, true));\r\n            } else {\r\n                //added by sudharshanan for test select issue while sample click\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [],\r\n                    selectedSample: inputData.selectedSample,\r\n                    selectedSubSample: inputData.masterData.AP_SUBSAMPLE\r\n                }\r\n                let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.map((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                })\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"-1\";\r\n                }\r\n                switch (inputData.activeTestTab) {\r\n                    case \"IDS_RESULTS\":\r\n                        ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n\r\n                        break;\r\n                    case \"IDS_INSTRUMENT\":\r\n                        ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TASK\":\r\n                        ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TESTATTACHMENTS\":\r\n                        RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_RESULTCHANGEHISTORY\":\r\n                        ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TESTCOMMENTS\":\r\n                        RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TESTAPPROVALHISTORY\":\r\n                        ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    default:\r\n                        ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            // wholeApprovalParameter,\r\n                            ApprovalParameter,\r\n                            // wholeResultUsedInstrument,\r\n                            ResultUsedInstrument,\r\n                            // wholeResultUsedTasks,\r\n                            ResultUsedTasks,\r\n                            // wholeRegistrationTestAttachment,\r\n                            RegistrationTestAttachment,\r\n                            // wholeApprovalResultChangeHistory,\r\n                            ApprovalResultChangeHistory,\r\n                            // wholeRegistrationTestComments,\r\n                            RegistrationTestComment,\r\n                            ApprovalHistory\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getTestDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            ntype: 3,\r\n            nflag: 3,\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalversioncode: inputData.napprovalversioncode,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n            nsectioncode: inputData.nsectioncode,\r\n            ntestcode: inputData.ntestcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            userinfo: inputData.userinfo\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        let masterData = {};\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"approval/getApprovalTest\", inputParamData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data }\r\n                    //responseData = sortData(responseData)\r\n                    inputData.searchTestRef.current.null = \"\"\r\n                    //inputData.masterData.APSelectedTest = responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n\r\n                    let oldSelectedTest = inputData.masterData.APSelectedTest\r\n                    inputData.masterData.APSelectedTest = oldSelectedTest.length > 0 ? oldSelectedTest : responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        APSelectedTest: inputData.masterData.APSelectedTest,\r\n                        // APselectedSample: inputData.APSelectedSample,\r\n                        APSelectedSubSample: inputData.APSelectedSubSample,\r\n                        selectedPreregno: inputData.npreregno,\r\n                    }\r\n\r\n                    if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        inputData.searchSubSampleRef.current.value = \"\";\r\n                        masterData['searchedSubSample'] = undefined\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTests'] = undefined\r\n                    }\r\n\r\n                    let { testskip, testtake } = inputData\r\n                    let bool = false;\r\n                    if (inputData.masterData.AP_TEST.length < inputData.testskip) {\r\n                        testskip = 0;\r\n                        bool = true\r\n                    }\r\n                    let skipInfo = {}\r\n                    if (bool) {\r\n                        skipInfo = { testskip, testtake }\r\n                    }\r\n\r\n                    let ApprovalParameter = [];\r\n                    let ResultUsedInstrument = [];\r\n                    let ResultUsedTasks = [];\r\n                    let RegistrationTestAttachment = [];\r\n                    let ApprovalResultChangeHistory = [];\r\n                    let RegistrationTestComment = [];\r\n                    let ApprovalHistory = [];\r\n\r\n\r\n                    if (inputData.checkBoxOperation === 1) {\r\n                        let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                        oldSelectedTest.map((test, index) => {\r\n                            if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                oldSelectedTest.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                        let keepOld = false;\r\n                        let ntransactiontestcode;\r\n                        // if (oldSelectedTest.length > 0) {\r\n                        //     keepOld = true\r\n                        //     masterData = {\r\n                        //         ...masterData,\r\n                        //         selectedTest: oldSelectedTest\r\n                        //     }\r\n                        // } else {\r\n                        ntransactiontestcode = masterData.APSelectedTest[0].ntransactiontestcode\r\n                        // }\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    } else if (inputData.checkBoxOperation === 5) {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                        }\r\n                        let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0;\r\n                        let list = [];\r\n                        let dbData = []\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                dbData = response.data.ApprovalParameter || []\r\n                                list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(dbData, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                dbData = response.data.ResultUsedInstrument || []\r\n                                list = [...inputData.masterData.ResultUsedInstrument, ...dbData]\r\n                                ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                dbData = response.data.ResultUsedTasks || []\r\n                                list = [...inputData.masterData.ResultUsedTasks, ...dbData]\r\n                                ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                dbData = response.data.RegistrationTestAttachment || []\r\n                                list = [...inputData.masterData.RegistrationTestAttachment, ...dbData]\r\n                                RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                dbData = response.data.ApprovalResultChangeHistory || []\r\n                                list = [...inputData.masterData.ApprovalResultChangeHistory, ...dbData]\r\n                                ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                dbData = response.data.RegistrationTestComment || []\r\n                                list = [...inputData.masterData.RegistrationTestComment, ...dbData]\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                dbData = response.data.ApprovalHistory || []\r\n                                list = [...inputData.masterData.ApprovalHistory, ...dbData]\r\n                                ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            default:\r\n                                dbData = response.data.ApprovalParameter || []\r\n                                list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                        }\r\n                    } else if (inputData.checkBoxOperation === 7) {\r\n                        let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                        let wholeTestListForSelectAll = masterData.AP_TEST\r\n                        let wholeTestListForSelectSingleSelect =\r\n                            oldSelectedTest.forEach((test, index) => {\r\n                                if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                    oldSelectedTest.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n\r\n                        let keepOld = false;\r\n                        let ntransactiontestcode;\r\n                        if (oldSelectedTest.length > 0) {\r\n                            keepOld = true\r\n                            masterData = {\r\n                                ...masterData,\r\n                                APSelectedTest: oldSelectedTest\r\n                                //oldSelectedTest\r\n                            }\r\n                        } else {\r\n                            ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\"\r\n                        }\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n\r\n                    } else {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                        }\r\n                        let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0\r\n                        let list = [];\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                list = response.data.ApprovalParameter || []\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                list = response.data.ResultUsedInstrument || []\r\n                                ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                list = response.data.ResultUsedTasks || []\r\n                                ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                list = response.data.RegistrationTestAttachment || []\r\n                                RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                list = response.data.ApprovalResultChangeHistory || []\r\n                                ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                list = response.data.RegistrationTestComment || []\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                list = response.data.ApprovalHistory || []\r\n                                ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                list = [...inputData.masterData.ApprovalParameter, ...response.data.ApprovalParameter]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    masterData = {\r\n                        ...masterData,\r\n                        ApprovalParameter,\r\n                        ResultUsedInstrument,\r\n                        ResultUsedTasks,\r\n                        RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory,\r\n                        RegistrationTestComment,\r\n                        ApprovalHistory\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    skipInfo = {\r\n                        ...skipInfo,\r\n                        samplePrintHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        },\r\n                        sampleHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                APSelectedSubSample: inputData.APSelectedSubSample,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode,\r\n                                activeTestTab: inputData.activeTestTab,\r\n                                activeSampleTab: inputData.activeSampleTab,\r\n                                skip: undefined,\r\n                                take: undefined,\r\n                                ...skipInfo\r\n                            },\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            let bool = false;\r\n            let skipInfo = {};\r\n            let { testskip, testtake } = inputData;\r\n            let oldSelectedTest = inputData.masterData.APSelectedTest\r\n            let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].ntransactionsamplecode, \"ntransactionsamplecode\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = true;\r\n            } else {\r\n                isGrandChildGetRequired = false;\r\n            }\r\n\r\n            let ApprovalParameter = [];\r\n            let ResultUsedInstrument = [];\r\n            let ResultUsedTasks = [];\r\n            let RegistrationTestAttachment = [];\r\n            let ApprovalResultChangeHistory = [];\r\n            let RegistrationTestComment = [];\r\n\r\n            let ApprovalHistory = [];\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.APSelectedSubSample, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                //let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"\";\r\n                let APSelectedSample = inputData.masterData.APSelectedSample;\r\n                let selectedPreregno = inputData.npreregno;\r\n                //let selectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\r\n                let APSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n                let filterTestSameOldSelectedTest = getSameRecordFromTwoDifferentArrays(oldSelectedTest, inputData.masterData.AP_TEST, \"ntransactiontestcode\");\r\n                let APSelectedTest = filterTestSameOldSelectedTest.length > 0 ? filterTestSameOldSelectedTest : [inputData.masterData.AP_TEST[0]];\r\n                let ntransactiontestcode = APSelectedTest.length > 0 ? APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n\r\n\r\n                if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true;\r\n\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { testskip, testtake }\r\n\r\n                }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                        \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, APSelectedSample, selectedPreregno, APSelectedTest,\r\n                    APSelectedSubSample, checkBoxOperation: 3, skipInfo\r\n                }\r\n                dispatch(getTestChildTabDetail(inputData, true));\r\n            } else {\r\n                let oldSelectedTest = inputData.masterData.APSelectedTest\r\n                let TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                let isGrandChildGetRequired = false;\r\n                if (TestSelected.length > 0) {\r\n                    isGrandChildGetRequired = true;\r\n                } else {\r\n                    isGrandChildGetRequired = false;\r\n                }\r\n                fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.APSelectedSubSample, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n                if (isGrandChildGetRequired) {\r\n                    let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"-1\";\r\n                    let APSelectedSubSample = inputData.APSelectedSubSample;\r\n                    // let selectedPreregno = inputData.npreregno;\r\n                    let APSelectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\r\n                    // let selectedSubSample = inputData.masterData.RegistrationGetSubSample\r\n                    let masterData = { ...inputData.masterData, APSelectedSubSample, APSelectedTest }\r\n                    inputData = {\r\n                        ...inputData, childTabsKey: [\"RegistrationTestComment\", \"RegistrationParameter\"], ntransactiontestcode, masterData, APSelectedTest,\r\n                        APSelectedSubSample, checkBoxOperation: 3\r\n                    }\r\n                    dispatch(getTestChildTabDetail(inputData, true));\r\n                }\r\n                else {\r\n\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        APSelectedSubSample: inputData.APSelectedSubSample,\r\n                        selectedTransactioncode: inputData.ntransactionsamplecode,\r\n                        APSelectedTest: inputData.masterData.AP_TEST.length > 0 ?\r\n                            [inputData.masterData.AP_TEST[0]] : [],\r\n                    }\r\n\r\n                    const wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                    oldSelectedTest.forEach((test, index) => {\r\n                        if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                            oldSelectedTest.splice(index, 1)\r\n                        }\r\n                        return null;\r\n                    })\r\n                    let keepOld = false;\r\n                    let ntransactiontestcode;\r\n                    if (oldSelectedTest.length > 0) {\r\n                        keepOld = true\r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest: oldSelectedTest,\r\n                        }\r\n                    } else {\r\n                        ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ?\r\n                            inputData.masterData.AP_TEST[0].ntransactiontestcode : \"-1\"\r\n                    }\r\n\r\n\r\n                    switch (inputData.activeTestTab) {\r\n                        case \"IDS_RESULTS\":\r\n                            ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_INSTRUMENT\":\r\n                            ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TASK\":\r\n                            ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TESTATTACHMENTS\":\r\n                            RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_RESULTCHANGEHISTORY\":\r\n                            ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TESTCOMMENTS\":\r\n                            RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TESTAPPROVALHISTORY\":\r\n                            ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        default:\r\n                            ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                ApprovalParameter,\r\n                                ResultUsedInstrument,\r\n                                ResultUsedTasks,\r\n                                RegistrationTestAttachment,\r\n                                ApprovalResultChangeHistory,\r\n                                RegistrationTestComment,\r\n                                ApprovalHistory\r\n                            },\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            ...skipInfo,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getTestChildTabDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactiontestcode: inputData.ntransactiontestcode,\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            let { testtake } = inputData;\r\n            let activeName = \"\";\r\n            let dataStateName = \"\";\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_PARAMETERRESULTS\":\r\n                    url = \"registration/getregistrationparameter\"\r\n                    activeName = \"RegistrationParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    activeName = \"ResultUsedInstrument\"\r\n                    dataStateName = \"instrumentDataState\"\r\n                    break;\r\n                case \"IDS_MATERIAL\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    activeName = \"ResultUsedTasks\"\r\n                    dataStateName = \"taskDataState\"\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    url = \"attachment/getTestAttachment\"\r\n                    activeName = \"RegistrationTestAttachment\"\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    url = \"comments/getTestComment\"\r\n                    activeName = \"RegistrationTestComment\"\r\n                    dataStateName = \"testCommentDataState\"\r\n                    break;\r\n                case \"IDS_DOCUMENTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    url = \"approval/getApprovalResultChangeHistory\"\r\n                    activeName = \"ApprovalResultChangeHistory\"\r\n                    dataStateName = \"resultChangeDataState\"\r\n                    break;\r\n                case \"IDS_TESTAPPROVALHISTORY\":\r\n                    url = \"approval/getApprovalHistory\"\r\n                    activeName = \"ApprovalHistory\"\r\n                    dataStateName = \"historyDataState\"\r\n                    break;\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                default:\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                if (isServiceRequired) {\r\n                    rsapi.post(url, inputParamData)\r\n                        .then(response => {\r\n                            let skipInfo = {};\r\n                            let responseData = { ...response.data, APSelectedSubSample: inputData.APSelectedSubSample || inputData.masterData.APSelectedSubSample, selectedTest: inputData.APselectedTest }\r\n                            //responseData = sortData(responseData)\r\n                            // fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\r\n                            fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                            let masterData = {\r\n                                ...inputData.masterData,\r\n                                APSelectedSubSample: inputData.APSelectedSubSample || inputData.masterData.APSelectedSubSample,\r\n                                APSelectedTest: inputData.APSelectedTest,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode,\r\n                                selectedTestCode: inputData.ntransactiontestcode,\r\n                            }\r\n                            if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                                skipInfo = {\r\n\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        skip: 0,\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                skipInfo = {\r\n                                    ...skipInfo,\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    masterData,\r\n                                    loading: false,\r\n                                    showFilter: false,\r\n                                    activeTestTab: inputData.activeTestTab,\r\n                                    screenName: inputData.screenName,\r\n                                    testtake, testskip: undefined,\r\n                                    ...skipInfo\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(error.response.data);\r\n                            }\r\n                        })\r\n                } else {\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.APSelectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\", inputData.removeElementFromArray);\r\n                    let skipInfo = {};\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        APSelectedTest: inputData.APSelectedTest,\r\n                        selectedPreregno: inputData.npreregno,\r\n                        selectedSampleCode: inputData.ntransactionsamplecode,\r\n                        selectedTestCode: inputData.ntransactiontestcode,\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            screenName: inputData.screenName,\r\n                            testtake, testskip: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let { ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment, ApprovalResultChangeHistory,\r\n                RegistrationTestComment, ApprovalHistory } = inputData.masterData\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    ApprovalParameter = [];\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    ResultUsedInstrument = []\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    ResultUsedTasks = []\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    RegistrationTestAttachment = []\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    ApprovalResultChangeHistory = []\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    RegistrationTestComment = []\r\n                    break;\r\n                case \"IDS_APPROVALHISTORY\":\r\n                    ApprovalHistory = []\r\n                    break;\r\n                default:\r\n                    ApprovalParameter = []\r\n                    break;\r\n            }\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData,\r\n                        selectedTest: [],\r\n                        ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory, RegistrationTestComment, ApprovalHistory\r\n                    }, loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\nexport function getSampleChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.npreregno.length > 0) {\r\n            let inputParamData = {\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            switch (inputData.activeSampleTab) {\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                case \"IDS_SAMPLECOMMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    break;\r\n                case \"IDS_SOURCE\":\r\n                    url = \"registration/getRegistrationSourceCountry\"\r\n                    break;\r\n                case \"IDS_SAMPLEAPPROVALHISTORY\":\r\n                    url = \"approval/getSampleApprovalHistory\"\r\n                    break;\r\n\r\n                case \"IDS_PRINTHISTORY\":\r\n                    url = \"approval/getPrintHistory\"\r\n                    break;\r\n                case \"IDS_REPORTHISTORY\":\r\n                    url = \"approval/getCOAHistory\"\r\n                    break;\r\n                default:\r\n                    url = null\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(url, inputParamData)\r\n                    .then(response => {\r\n                        let responseData = { ...response.data }\r\n                        responseData = sortData(responseData)\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData: {\r\n                                    ...inputData.masterData,\r\n                                    ...responseData,\r\n                                    selectedSample: inputData.selectedSample,\r\n                                    selectedTestCode: inputData.ntransactiontestcode,\r\n                                },\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                activeSampleTab: inputData.activeSampleTab,\r\n                                screenName: inputData.screenName\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            toast.warn(\"Please Select a Sample\");\r\n        }\r\n    }\r\n}\r\nexport function performAction(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/performAction\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...response.data,\r\n                    AP_SAMPLE: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.AP_SAMPLE, 'npreregno'),\r\n                    AP_SUBSAMPLE: replaceUpdatedObject(response.data.updatedSubSample, inputParam.masterData.AP_SUBSAMPLE, 'ntransactionsamplecode'),\r\n                    AP_TEST: replaceUpdatedObject(response.data.updatedTest, inputParam.masterData.AP_TEST, 'ntransactiontestcode')\r\n                }\r\n                // dispatch({type: DEFAULT_RETURN, payload:{\r\n                // masterData:{\r\n                //     ...inputParam.inputData.masterData,\r\n                //     ...response.data, \r\n                //     AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam   .inputData.masterData.AP_SAMPLE,'npreregno'),\r\n                //     AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.inputData.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\r\n                //     AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.inputData.masterData.AP_TEST,'ntransactiontestcode')\r\n                // },\r\n                //     loading:false ,\r\n                //     loadEsign:false,\r\n                //     openChildModal:false                     \r\n                // }}) \r\n                let respObject = {\r\n                    masterData,\r\n                    inputParam,\r\n                    openChildModal: false,\r\n                    operation: \"dynamic\",\r\n                    masterStatus: \"\",\r\n                    errorCode: undefined,\r\n                    loadEsign: false,\r\n                    showEsign: false,\r\n                    selectedRecord: {},\r\n                    loading: false\r\n                }\r\n\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function updateDecision(inputParam) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/updateDecision\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                // dispatch({type: DEFAULT_RETURN, payload:{\r\n                //     masterData:{\r\n                //         ...inputParam.masterData,\r\n                //         ...responseData, \r\n                //         AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),\r\n                //         AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\r\n                //         AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')\r\n\r\n                //     },\r\n                //     loading:false                      \r\n                // }}) \r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                    AP_SAMPLE: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.AP_SAMPLE, 'npreregno'),\r\n                    AP_SUBSAMPLE: replaceUpdatedObject(response.data.updatedSubSample, inputParam.masterData.AP_SUBSAMPLE, 'ntransactionsamplecode'),\r\n                    AP_TEST: replaceUpdatedObject(response.data.updatedTest, inputParam.masterData.AP_TEST, 'ntransactiontestcode')\r\n\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    inputParam,\r\n                    openChildModal: false,\r\n                    operation: \"dynamic\",\r\n                    masterStatus: \"\",\r\n                    errorCode: undefined,\r\n                    loadEsign: false,\r\n                    showEsign: false,\r\n                    selectedRecord: {},\r\n                    loading: false\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getRegistrationType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            SampleTypeValue: inputData.SampleTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationSubType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getRegistrationSubType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegTypeValue: inputData.RegTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getFilterStatus(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getFilterStatus\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegSubTypeValue: inputData.RegSubTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getFilterBasedTest(inputData) {\r\n\r\n\r\n    return function (dispatch) {\r\n        if (inputData.napprovalversioncode) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approval/getFilterBasedTest\", inputData)\r\n                .then(response => {\r\n\r\n\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...inputData.masterData,\r\n                                ...responseData,\r\n                                RegSubTypeValue: inputData.RegSubTypeValue\r\n                            },\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (response.data.rtn) {\r\n                        toast.warn(response.data.rtn);\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.warn(\"Please Select All the Values in Filter\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getApprovalVersion(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApprovalVersion\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            // fromDate: inputParam.inputData.dfrom,\r\n                            // toDate: inputParam.inputData.dto,\r\n                        },\r\n                        loading: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovalSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApprovalSample\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchSampleRef !== undefined && inputParam.searchSampleRef.current !== null) {\r\n                    inputParam.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputParam.searchSubSampleRef !== undefined && inputParam.searchSubSampleRef.current !== null) {\r\n                    inputParam.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputParam.searchTestRef !== undefined && inputParam.searchTestRef.current !== null) {\r\n                    inputParam.searchTestRef.current.value = \"\"\r\n                    // masterData['searchedTest'] = undefined\r\n                    masterData['searchedTests'] = undefined\r\n\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        take: inputParam.take,\r\n                        testskip: 0,\r\n                        testtake: inputParam.testtake,\r\n                        resultDataState: { ...inputParam.resultDataState, sort: undefined, filter: undefined },\r\n                        instrumentDataState: { ...inputParam.instrumentDataState, sort: undefined, filter: undefined },\r\n                        materialDataState: { ...inputParam.materialDataState, sort: undefined, filter: undefined },\r\n                        taskDataState: { ...inputParam.taskDataState, sort: undefined, filter: undefined },\r\n                        documentDataState: { ...inputParam.documentDataState, sort: undefined, filter: undefined },\r\n                        resultChangeDataState: { ...inputParam.resultChangeDataState, sort: undefined, filter: undefined },\r\n                        testCommentDataState: { ...inputParam.testCommentDataState, sort: undefined, filter: undefined },\r\n                        historyDataState: { ...inputParam.historyDataState, sort: undefined, filter: undefined },\r\n                        samplePrintHistoryDataState: { ...inputParam.samplePrintHistoryDataState, sort: undefined, filter: undefined },\r\n                        sampleHistoryDataState: { ...inputParam.sampleHistoryDataState, sort: undefined, filter: undefined }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getStatusCombo(inputParam) {\r\n    return function (dispatch) {\r\n        let inputData = {\r\n            ntransactionresultcode: inputParam.primaryKeyValue,\r\n            userinfo: inputParam.userInfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getStatusCombo\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                //responseData = sortData(responseData)\r\n                const GradeListMap = constructOptionList(response.data.Grade || [], \"ngradecode\", \"sgradename\", 'ascending', 'ngradecode', false);\r\n                let Grade = GradeListMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            Grade,\r\n                            selectedParamId: inputParam.primaryKeyValue\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        openChildModal: true,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord: {\r\n                            senforcestatuscomment: response.data.parameterComment && response.data.parameterComment.senforcestatuscomment,\r\n                            ntransactionresultcode: response.data.parameterComment && response.data.parameterComment.ntransactionresultcode,\r\n                            ntransactiontestcode: response.data.parameterComment && response.data.parameterComment.ntransactiontestcode\r\n                        },\r\n                        operation: \"enforce\",\r\n                        screenName: \"IDS_STATUS\"\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getParameterEdit(inputParam) {\r\n    return function (dispatch) {\r\n        let inputData = {\r\n            ntransactiontestcode: inputParam.selectedTest && inputParam.selectedTest.map(item => item.ntransactiontestcode).join(\",\"),\r\n            userinfo: inputParam.userInfo\r\n        }\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approval/getEditParameter\", inputData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            ...responseData,\r\n                            loading: false,\r\n                            openChildModal: true,\r\n                            operation: \"update\",\r\n                            screenName: \"IDS_APPROVALPARAMETER\"\r\n                            // ncontrolCode:inputParam.ncontrolCode,\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    multilingualMsg: \"IDS_SELECTTEST\",\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nexport function validateEsignforApproval(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    if (inputParam.operation === 'dynamic') {\r\n                        const methodUrl = \"performaction\"\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                        if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                            inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"]\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"]\r\n                        }\r\n                        dispatch(performAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\r\n                    } else if (inputParam.operation === 'reportgeneration') {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignpassword\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esigncomments\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"agree\"]\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"reporparam\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                        dispatch(generateCOAReport(inputParam[\"screenData\"][\"inputParam\"]['reporparam']))\r\n                    }\r\n                    else if (inputParam.operation === 'decision') {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignpassword\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esigncomments\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"agree\"]\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                        dispatch(updateDecision(inputParam[\"screenData\"][\"inputParam\"]))\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function previewSampleReport(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        let ndecisionStatus = inputParam.sample.ndecisionstatus;\r\n        if (inputParam.sample.ndecisionstatus === undefined || inputParam.sample.ndecisionstatus === transactionStatus.DRAFT) {\r\n            ndecisionStatus = transactionStatus.PASS;\r\n        }\r\n        const inputData = {\r\n            ndecisionstatus: ndecisionStatus,\r\n            userinfo: inputParam.userinfo,\r\n            nprimarykey: inputParam.sample.npreregno,\r\n            ncoareporttypecode: reportCOAType.SAMPLECERTIFICATEPRIVIEW,\r\n            nreporttypecode: REPORTTYPE.SAMPLEREPORT,\r\n            sprimarykeyname: \"npreregno\",\r\n            ncontrolcode: inputParam.ncontrolCode,\r\n            nregtypecode: inputParam.sample.nregtypecode,\r\n            nregsubtypecode: inputParam.sample.nregsubtypecode,\r\n            npreregno: inputParam.sample.npreregno\r\n        }\r\n        rsapi.post(\"approval/previewSampleReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openChildModal: false, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function generateCOAReport(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const inputData = {\r\n            npreregno: inputParam.sample.npreregno,\r\n            nsectioncode: inputParam.nsectioncode || -1,\r\n            userinfo: inputParam.userinfo,\r\n            nprimarykey: inputParam.sample.npreregno,\r\n            ncoareporttypecode: reportCOAType.SAMPLEWISE,\r\n            nreporttypecode: REPORTTYPE.COAREPORT,\r\n            sprimarykeyname: \"npreregno\",\r\n            ncontrolcode: inputParam.ncontrolCode,\r\n            nregtypecode: inputParam.nregtypecode,\r\n            nregsubtypecode: inputParam.nregsubtypecode\r\n        }\r\n        rsapi.post(\"approval/generateCOAReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openChildModal: false, selectedRecord: {}, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getEnforceCommentsHistory(selectedParam, masterData, userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getEnforceCommentsHistory\", {\r\n            ntransactionresultcode: selectedParam.ntransactionresultcode,\r\n            userinfo: userInfo\r\n        })\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    masterData = { ...masterData, enforceCommentsHistory: response.data }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            masterData,\r\n                            openChildModal: true,\r\n                            operation: \"view\",\r\n                            screenName: \"IDS_ENFORCECOMMENTHISTORY\"\r\n                        }\r\n                    })\r\n                } else {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, multilingualMsg: \"IDS_NOPREVIOUSCOMMENTSFOUND\" } })\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}