{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import FormInput from'../../components/form-input/form-input.component';import{ReadOnlyText}from'../../components/App.styles';var EditQuotationTestPricing=function EditQuotationTestPricing(props){console.log(\"props.selected:\",props.selectedRecord);return Object.keys(props.selectedRecord).length>0?props.selectedRecord.map(function(item){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ReadOnlyText,null,item.stestsynonym)),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_COST\"}),name:\"ncost\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,item.nquotationtestcode);},onBlur:function onBlur(){return props.onnetAmountEvent(item.nquotationtestcode);},placeholder:props.intl.formatMessage({id:\"IDS_COST\"}),value:item.ncost||0,isMandatory:true,required:true,maxLength:9,isDisabled:false})),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormInput,{name:\"nnoofsamples\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_NUMBEROFSAMPLES\"}),placeholder:props.intl.formatMessage({id:\"IDS_NUMBEROFSAMPLES\"}),isMandatory:true,required:true,className:\"form-control\",value:item.nnoofsamples||0,onChange:function onChange(event){return props.onNumericInputChange(event,item.nquotationtestcode);},onBlur:function onBlur(){return props.onnetAmountEvent(item.nquotationtestcode);},maxLength:9})),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_TOTALNETAMOUNT\"}),name:\"ntotalamount\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,item.nquotationtestcode);},placeholder:props.intl.formatMessage({id:\"IDS_TOTALNETAMOUNT\"}),value:item.ntotalamount||0//     value={(item.ncost * item.nnoofsamples) || 0}\n,isMandatory:true,required:true,maxLength:9,isDisabled:true})));}):\"\";};export default injectIntl(EditQuotationTestPricing);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/EditQuotationTestPricing.jsx"],"names":["React","Row","Col","injectIntl","FormInput","ReadOnlyText","EditQuotationTestPricing","props","console","log","selectedRecord","Object","keys","length","map","item","stestsynonym","intl","formatMessage","id","event","onInputOnChange","nquotationtestcode","onnetAmountEvent","ncost","nnoofsamples","onNumericInputChange","ntotalamount"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\n\r\nconst EditQuotationTestPricing = (props) => {\r\n        console.log(\"props.selected:\", props.selectedRecord)\r\n        return (\r\n            Object.keys(props.selectedRecord).length > 0 ? \r\n                props.selectedRecord.map(item=>\r\n                <Row>\r\n                    <Col md={4}>\r\n                                <ReadOnlyText>{item.stestsynonym}</ReadOnlyText>\r\n                    </Col>\r\n                    {/* <Col md={4}>\r\n                            <ReadOnlyText>{item.stestdescription}</ReadOnlyText>\r\n                    </Col> */}\r\n                    <Col md={2}>\r\n                                <FormInput\r\n                                    label={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                    name={\"ncost\"}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                    onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                    value={item.ncost || 0}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={9}\r\n                                    isDisabled={false}\r\n                            />\r\n                            \r\n                    </Col>\r\n                    \r\n                    {/* <Col md={3}>\r\n\r\n                            <FormInput\r\n                                    label={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                    name={\"nnoofsamples\"}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                    onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                    value={item.nnoofsamples || 0}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={9}\r\n                                    precision={0}\r\n                            />\r\n                    </Col> */}\r\n\r\n                    <Col md={3}>\r\n\r\n                    <FormInput\r\n                                name={\"nnoofsamples\"}\r\n                                type=\"text\"\r\n                                label={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                className=\"form-control\"\r\n                                value={item.nnoofsamples || 0}\r\n                                onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\r\n                                onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                maxLength={9}\r\n                            />\r\n                    </Col>\r\n\r\n                    <Col md={3}>\r\n\r\n                            <FormInput\r\n                                    label={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                    name={\"ntotalamount\"}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                    value={item.ntotalamount || 0}\r\n                                //     value={(item.ncost * item.nnoofsamples) || 0}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={9}\r\n                                    isDisabled={true}\r\n                            />\r\n                    </Col>\r\n                </Row>\r\n            ) :\"\"\r\n        )\r\n}\r\n\r\nexport default injectIntl(EditQuotationTestPricing);"]},"metadata":{},"sourceType":"module"}