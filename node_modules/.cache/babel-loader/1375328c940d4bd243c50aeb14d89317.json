{"ast":null,"code":"import React from'react';import{Button,Form}from'react-bootstrap';var _require=require(\"@fortawesome/free-solid-svg-icons\"),faAd=_require.faAd,faMagic=_require.faMagic,faUniversity=_require.faUniversity,faAddressBook=_require.faAddressBook;var _require2=require(\"@fortawesome/react-fontawesome\"),FontAwesomeIcon=_require2.FontAwesomeIcon;var FormsIconForDropDown=function FormsIconForDropDown(props){switch(props.nformcode){case 33:return/*#__PURE__*/React.createElement(Form.Check.Label,{className:\"mr-3 label-circle \".concat(['label-orange','label-green','label-yellow','label-purple'][props.index%4]),htmlFor:\"tm_customCheck_\".concat(props.index)},props.option['sdisplayname'].substring(0,1).toUpperCase());// <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\n//  //   onClick={() => this.props.reloadData()}\n//     // {/* title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}  */}\n//     // data-for=\"tooltip_list_wrap\"\n//   //  data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\n//   >\n//     <FontAwesomeIcon icon={faAddressBook} style={{ \"width\": \"0.6!important\" }} />\n// </Button>\n//  <FontAwesomeIcon icon={faAddressBook} size={props.size}/>\nbreak;default:return/*#__PURE__*/React.createElement(Form.Check.Label,{className:\"mr-3 label-circle \".concat(['label-orange','label-green','label-yellow','label-purple'][props.index%4]),htmlFor:\"tm_customCheck_\".concat(props.index)},props.option['sdisplayname'].substring(0,1).toUpperCase());break;}};export default FormsIconForDropDown;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/home/FormIconForDropDown.js"],"names":["React","Button","Form","require","faAd","faMagic","faUniversity","faAddressBook","FontAwesomeIcon","FormsIconForDropDown","props","nformcode","index","option","substring","toUpperCase"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,iBAA7B,CACA,aAAuDC,OAAO,CAAC,mCAAD,CAA9D,CAAQC,IAAR,UAAQA,IAAR,CAAcC,OAAd,UAAcA,OAAd,CAAuBC,YAAvB,UAAuBA,YAAvB,CAAqCC,aAArC,UAAqCA,aAArC,CACA,cAA4BJ,OAAO,CAAC,gCAAD,CAAnC,CAAQK,eAAR,WAAQA,eAAR,CAGA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,CACpC,OAAQA,KAAK,CAACC,SAAd,EAEI,IAAK,GAAL,CACI,mBAAO,oBAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EAAkB,SAAS,6BAAuB,CAAC,cAAD,CAAiB,aAAjB,CAAgC,cAAhC,CAAgD,cAAhD,EAAgED,KAAK,CAACE,KAAN,CAAc,CAA9E,CAAvB,CAA3B,CAAsI,OAAO,0BAAoBF,KAAK,CAACE,KAA1B,CAA7I,EAAiLF,KAAK,CAACG,MAAN,CAAa,cAAb,EAA6BC,SAA7B,CAAuC,CAAvC,CAA0C,CAA1C,EAA6CC,WAA7C,EAAjL,CAAP,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAEJ,QACI,mBAAO,oBAAC,IAAD,CAAM,KAAN,CAAY,KAAZ,EAAkB,SAAS,6BAAuB,CAAC,cAAD,CAAiB,aAAjB,CAAgC,cAAhC,CAAgD,cAAhD,EAAgEL,KAAK,CAACE,KAAN,CAAc,CAA9E,CAAvB,CAA3B,CAAsI,OAAO,0BAAoBF,KAAK,CAACE,KAA1B,CAA7I,EAAiLF,KAAK,CAACG,MAAN,CAAa,cAAb,EAA6BC,SAA7B,CAAuC,CAAvC,CAA0C,CAA1C,EAA6CC,WAA7C,EAAjL,CAAP,CACA,MAlBR,CAqBH,CAtBD,CAwBA,cAAeN,CAAAA,oBAAf","sourcesContent":["import React from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nconst { faAd, faMagic, faUniversity, faAddressBook } = require(\"@fortawesome/free-solid-svg-icons\")\r\nconst { FontAwesomeIcon } = require(\"@fortawesome/react-fontawesome\")\r\n\r\n\r\nconst FormsIconForDropDown = (props) => {\r\n    switch (props.nformcode) {\r\n\r\n        case 33:\r\n            return <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            \r\n            // <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n            //  //   onClick={() => this.props.reloadData()}\r\n            //     // {/* title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}  */}\r\n            //     // data-for=\"tooltip_list_wrap\"\r\n            //   //  data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n            //   >\r\n            //     <FontAwesomeIcon icon={faAddressBook} style={{ \"width\": \"0.6!important\" }} />\r\n            // </Button>\r\n            //  <FontAwesomeIcon icon={faAddressBook} size={props.size}/>\r\n            break;\r\n\r\n        default:\r\n            return <Form.Check.Label className={`mr-3 label-circle ${['label-orange', 'label-green', 'label-yellow', 'label-purple'][props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{props.option['sdisplayname'].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n            break;\r\n    }\r\n\r\n}\r\n\r\nexport default FormsIconForDropDown;"]},"metadata":{},"sourceType":"module"}