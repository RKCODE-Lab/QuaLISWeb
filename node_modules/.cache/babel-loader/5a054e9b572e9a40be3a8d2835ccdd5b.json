{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\MAHolder.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons'; //faUserTimes, faTrash\n\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { toast } from 'react-toastify'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n//import rsapi from '../../rsapi';\n//import { callService, crudMaster } from '../../actions';\n\nimport { callService, crudMaster, validateEsignCredential, updateStore, getMAHolderDetail, getMAHolderComboService, getMAHContactComboDataService, filterColumnData } from '../../actions';\nimport { ContentPanel, ReadOnlyText } from '../../components/App.styles';\nimport { constructOptionList, getControlMap, showEsign } from '../../components/CommonScript'; //searchData, sortData,\n\nimport ListMaster from '../../components/list-master/list-master.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal'; //import Axios from 'axios';\n\nimport AddMAHolder from './AddMAHolder';\nimport MAHContact from './MAHContact';\nimport Esign from '../audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes'; // import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\n\nimport { transactionStatus } from '../../components/Enumeration';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component'; // import ReactTooltip from 'react-tooltip';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass MAHolder extends React.Component {\n  constructor(props) {\n    super(props); // const dataState = {\n    //     skip: 0,\n    //     take: 10,\n    // };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteRecord(\"MarketAuthorisationHolder\", this.props.Login.masterData.SelectedMAHolder, \"delete\", deleteId));\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      ;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE; // else if (event.target.name === \"nlockmode\")\n        //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\n        else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = undefined;\n\n      if (this.props.Login.operation === \"update\") {\n        // edit\n        postParam = {\n          inputListName: \"MAHolder\",\n          selectedObject: \"SelectedMAHolder\",\n          primaryKeyField: \"nmahcode\"\n        }; //inputData[\"marketauthorisationholder\"] = this.state.selectedRecord;\n\n        inputData[\"marketauthorisationholder\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\n        this.userFieldList.map(item => {\n          return inputData[\"marketauthorisationholder\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\n        });\n      } else {\n        //add               \n        inputData[\"marketauthorisationholder\"] = {\n          \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n        };\n        this.userFieldList.map(item => {\n          return inputData[\"marketauthorisationholder\"][item] = this.state.selectedRecord[item];\n        });\n      }\n\n      inputData[\"marketauthorisationholder\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : \"-1\";\n      const inputParam = {\n        classUrl: \"marketauthorisationholder\",\n        //this.props.Login.inputParam.classUrl,\n        methodUrl: \"MarketAuthorisationHolder\",\n        inputData: inputData,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        postParam,\n        searchRef: this.searchRef\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.deleteRecord = (methodUrl, selectedRecord, operation, ncontrolCode) => {\n      if (this.props.Login.masterData.SelectedMAHolder.ntransactionstatus === transactionStatus.RETIRED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: this.props.Login.masterData.SelectedMAHolder.stransstatus\n        }));\n      } else {\n        const postParam = {\n          inputListName: \"MarketAuthorisationHolder\",\n          selectedObject: \"SelectedMAHolder\",\n          primaryKeyField: \"nmahcode\",\n          primaryKeyValue: this.props.Login.masterData.SelectedMAHolder.nmahcode,\n          fetchUrl: \"marketauthorisationholder/getMarketAuthorisationHolder\",\n          fecthInputObject: {\n            userInfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          classUrl: \"marketauthorisationholder\",\n          //this.props.Login.inputParam.classUrl,\n          methodUrl,\n          postParam,\n          inputData: {\n            [methodUrl.toLowerCase()]: selectedRecord,\n            \"userinfo\": this.props.Login.userInfo,\n            \"marketauthorisationholder\": this.props.Login.masterData.SelectedMAHolder\n          },\n          operation\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"marketauthorisationholder\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        displayName: \"IDS_MAHOLDER\",\n        classUrl: \"marketauthorisationholder\",\n        methodUrl: \"MarketAuthorisationHolder\",\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.state = {\n      isOpen: false,\n      maHolderData: [],\n      maHContactData: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      screenName: undefined,\n      userLogged: true,\n      selectedmaHolder: undefined,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      countryList: []\n    };\n    this.searchRef = React.createRef();\n    this.userFieldList = ['smahname', 'saddress1', 'saddress2', 'saddress3', 'ntransactionstatus', 'ncountrycode']; //'nmahcode',\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    this.confirmMessage = new ConfirmMessage();\n    let userStatusCSS = \"outline-secondary\";\n\n    if (this.props.Login.masterData.SelectedMAHolder && this.props.Login.masterData.SelectedMAHolder.ntransactionstatus === transactionStatus.ACTIVE) {\n      userStatusCSS = \"outline-success\";\n    } // else if (this.state.selectedmaHolder && this.state.selectedmaHolder.ntransactionstatus === 7) {\n    //     userStatusCSS = \"outline-danger\";\n    // }\n\n\n    this.validationColumnList = [{\n      \"idsName\": \"IDS_MAHNAME\",\n      \"dataField\": \"smahname\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_ADDRESS1\",\n      \"dataField\": \"saddress1\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_COUNTRY\",\n      \"dataField\": \"ncountrycode\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const addId = this.state.controlMap.has(\"AddMAHolder\") && this.state.controlMap.get(\"AddMAHolder\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditMAHolder\") && this.state.controlMap.get(\"EditMAHolder\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteMAHolder\") && this.state.controlMap.get(\"DeleteMAHolder\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"MAHolder\",\n      selectedObject: \"SelectedMAHolder\",\n      primaryKeyField: \"nmahcode\",\n      fetchUrl: \"marketauthorisationholder/getMarketAuthorisationHolder\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.userFieldList\n    };\n    const mandatoryFields = [];\n    this.validationColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_MAHOLDER\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.MAHolder,\n      getMasterDetail: maHolder => this.props.getMAHolderDetail(maHolder, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedMAHolder,\n      primaryKeyField: \"nmahcode\",\n      mainField: \"smahname\",\n      firstField: \"scountryname\",\n      secondField: \"sdisplaystatus\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      reloadData: this.reloadData,\n      searchRef: this.searchRef,\n      hidePaging: false,\n      openModal: () => this.props.getMAHolderComboService(\"MA Holder\", \"create\", \"nmahcode\", null, this.props.Login.masterData, this.props.Login.userInfo, addId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.MAHolder && this.props.Login.masterData.MAHolder.length > 0 && this.props.Login.masterData.SelectedMAHolder ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.SelectedMAHolder.smahname)), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"text-muted font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData && this.props.Login.masterData.SelectedMAHolder.ntransactionstatus === transactionStatus.ACTIVE ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-check \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 192\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.Login.masterData.SelectedMAHolder.sdisplaystatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 65\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      onClick: () => this.props.getMAHolderComboService(\"MA Holder\", \"update\", \"nmahcode\", this.props.Login.masterData.SelectedMAHolder.nmahcode, this.props.Login.masterData, this.props.Login.userInfo, editId),\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteMAHolder\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //    data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 65\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COUNTRY\",\n      message: \"Country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedMAHolder.scountryname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDRESS1\",\n      message: \"Address 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedMAHolder.saddress1))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDRESS2\",\n      message: \"Address 2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedMAHolder.saddress2 === null || this.props.Login.masterData.SelectedMAHolder.saddress2.length === 0 ? '-' : this.props.Login.masterData.SelectedMAHolder.saddress2))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDRESS3\",\n      message: \"Address 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 61\n      }\n    }, \" \", this.props.Login.masterData.SelectedMAHolder.saddress3 === null || this.props.Login.masterData.SelectedMAHolder.saddress3.length === 0 ? '-' : this.props.Login.masterData.SelectedMAHolder.saddress3)))), /*#__PURE__*/React.createElement(MAHContact, {\n      formatMessage: this.props.intl.formatMessage,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      userInfo: this.props.Login.userInfo,\n      masterData: this.props.Login.masterData,\n      crudMaster: this.props.crudMaster,\n      errorCode: this.props.Login.errorCode,\n      masterStatus: this.props.Login.masterStatus,\n      openChildModal: this.props.Login.openChildModal,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.props.Login.selectedRecord,\n      getMAHContactComboDataService: this.props.getMAHContactComboDataService,\n      ncontrolCode: this.props.Login.ncontrolCode,\n      userRoleControlRights: this.state.userRoleControlRights,\n      esignRights: this.props.Login.userRoleControlRights,\n      screenData: this.props.Login.screenData,\n      validateEsignCredential: this.props.validateEsignCredential,\n      loadEsign: this.props.Login.loadEsign,\n      controlMap: this.state.controlMap,\n      showAccordian: this.state.showAccordian,\n      dataState: this.props.Login.dataState,\n      selectedId: this.props.Login.selectedId,\n      settings: this.props.Login.settings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 49\n      }\n    }))) : \"\"))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(AddMAHolder, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        formatMessage: this.props.intl.formatMessage,\n        countryList: this.state.countryList || [] //{this.props.Login.countryList || []}\n        ,\n        selectedmaHolder: this.props.Login.masterData.SelectedMAHolder || {},\n        operation: this.props.Login.operation,\n        userLogged: this.props.Login.userLogged,\n        inputParam: this.props.Login.inputParam,\n        selectedId: this.props.Login.selectedId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap\n      });\n    }\n\n    if (this.props.Login.countryList !== previousProps.Login.countryList) {\n      const countryList = constructOptionList(this.props.Login.countryList || [], \"ncountrycode\", \"scountryname\", undefined, undefined, undefined);\n      const countryListMAHolder = countryList.get(\"OptionList\");\n      this.setState({\n        countryList: countryListMAHolder\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getMAHolderDetail,\n  getMAHolderComboService,\n  getMAHContactComboDataService,\n  filterColumnData\n})(injectIntl(MAHolder));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/contactmaster/MAHolder.jsx"],"names":["React","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","connect","injectIntl","FormattedMessage","toast","callService","crudMaster","validateEsignCredential","updateStore","getMAHolderDetail","getMAHolderComboService","getMAHContactComboDataService","filterColumnData","ContentPanel","ReadOnlyText","constructOptionList","getControlMap","showEsign","ListMaster","SlideOutModal","AddMAHolder","MAHContact","Esign","DEFAULT_RETURN","transactionStatus","ConfirmMessage","mapStateToProps","state","Login","MAHolder","Component","constructor","props","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","masterData","SelectedMAHolder","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","data","selectedId","onComboChange","comboData","fieldName","setState","onInputOnChange","event","target","type","name","checked","ACTIVE","DEACTIVE","YES","NO","value","onSaveClick","saveType","formRef","inputData","userInfo","postParam","undefined","inputListName","selectedObject","primaryKeyField","JSON","parse","stringify","userFieldList","map","item","nmastersitecode","inputParam","classUrl","methodUrl","searchRef","userRoleControlRights","nformcode","ncontrolCode","screenData","ntransactionstatus","RETIRED","warn","stransstatus","primaryKeyValue","nmahcode","fetchUrl","fecthInputObject","toLowerCase","screenName","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","reloadData","current","displayName","isOpen","maHolderData","maHContactData","masterStatus","error","userLogged","selectedmaHolder","controlMap","Map","countryList","createRef","getDerivedStateFromProps","render","userStatusCSS","validationColumnList","addId","has","get","ncontrolcode","editId","filterParam","userinfo","searchFieldList","mandatoryFields","forEach","mandatory","push","searchedData","maHolder","length","smahname","sdisplaystatus","float","indexOf","scountryname","saddress1","saddress2","saddress3","errorCode","openChildModal","showAccordian","dataState","settings","componentDidUpdate","previousProps","Object","values","countryListMAHolder","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';//faUserTimes, faTrash\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\n//import rsapi from '../../rsapi';\r\n//import { callService, crudMaster } from '../../actions';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getMAHolderDetail,\r\n    getMAHolderComboService, getMAHContactComboDataService, filterColumnData\r\n} from '../../actions';\r\nimport { ContentPanel, ReadOnlyText} from '../../components/App.styles';\r\nimport { constructOptionList, getControlMap, showEsign } from '../../components/CommonScript';//searchData, sortData,\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\n//import Axios from 'axios';\r\nimport AddMAHolder from './AddMAHolder';\r\nimport MAHContact from './MAHContact';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass MAHolder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // const dataState = {\r\n        //     skip: 0,\r\n        //     take: 10,\r\n        // };\r\n\r\n        this.state = {\r\n\r\n            isOpen: false,\r\n            maHolderData: [], maHContactData: [],\r\n\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n\r\n            screenName: undefined,\r\n            userLogged: true,\r\n            selectedmaHolder: undefined,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(), countryList: []\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.userFieldList = ['smahname', 'saddress1',\r\n            'saddress2', 'saddress3', 'ntransactionstatus', 'ncountrycode'];//'nmahcode',\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }), () => this.deleteRecord(\"MarketAuthorisationHolder\", this.props.Login.masterData.SelectedMAHolder,\r\n                \"delete\", deleteId));\r\n    }\r\n\r\n    render() {\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        let userStatusCSS = \"outline-secondary\";\r\n        if (this.props.Login.masterData.SelectedMAHolder && this.props.Login.masterData.SelectedMAHolder.ntransactionstatus === transactionStatus.ACTIVE) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        // else if (this.state.selectedmaHolder && this.state.selectedmaHolder.ntransactionstatus === 7) {\r\n        //     userStatusCSS = \"outline-danger\";\r\n        // }\r\n\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_MAHNAME\", \"dataField\": \"smahname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_ADDRESS1\", \"dataField\": \"saddress1\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_COUNTRY\", \"dataField\": \"ncountrycode\", \"width\": \"150px\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n\r\n        ]\r\n\r\n        const addId = this.state.controlMap.has(\"AddMAHolder\") && this.state.controlMap.get(\"AddMAHolder\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditMAHolder\") && this.state.controlMap.get(\"EditMAHolder\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteMAHolder\") && this.state.controlMap.get(\"DeleteMAHolder\").ncontrolcode\r\n\r\n        const filterParam = {\r\n            inputListName: \"MAHolder\", selectedObject: \"SelectedMAHolder\", primaryKeyField: \"nmahcode\",\r\n            fetchUrl: \"marketauthorisationholder/getMarketAuthorisationHolder\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.userFieldList\r\n        };\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        return (\r\n            <>\r\n                {/* Start of get display*/}\r\n                <div className=\"client-listing-wrap mtop-4\">\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_MAHOLDER\" })}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.MAHolder}\r\n                                getMasterDetail={(maHolder) => this.props.getMAHolderDetail(maHolder, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedMAHolder}\r\n                                primaryKeyField=\"nmahcode\"\r\n                                mainField=\"smahname\"\r\n                                firstField=\"scountryname\"\r\n                                secondField=\"sdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                reloadData={this.reloadData}\r\n                                searchRef={this.searchRef}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getMAHolderComboService(\"MA Holder\", \"create\", \"nmahcode\", null, this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.MAHolder && this.props.Login.masterData.MAHolder.length > 0 && this.props.Login.masterData.SelectedMAHolder ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                <Card.Title>\r\n                                                    <h1 className=\"product-title-main\">{this.props.Login.masterData.SelectedMAHolder.smahname}</h1>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"text-muted font-weight-normal\">\r\n                                                    {/* <Row>\r\n                                                        <Col md={10} className=\"d-flex\"> */}\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                            <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                {this.props.Login.masterData && this.props.Login.masterData.SelectedMAHolder.ntransactionstatus === transactionStatus.ACTIVE ? <i class=\"fas fa-check \"></i> : \"\"}\r\n                                                                <FormattedMessage id={this.props.Login.masterData.SelectedMAHolder.sdisplaystatus} />\r\n                                                            </span>\r\n\r\n                                                        </h2>\r\n                                                        {/* </Col>\r\n                                                        <Col md={2}> */}\r\n                                                        <div className=\"d-flex product-category\" style={{ float: \"right\" }}>\r\n                                                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.props.getMAHolderComboService(\"MA Holder\", \"update\", \"nmahcode\",\r\n                                                                    this.props.Login.masterData.SelectedMAHolder.nmahcode, this.props.Login.masterData, this.props.Login.userInfo,\r\n                                                                    editId)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                              //  data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                            </Nav.Link>\r\n\r\n                                                            {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    onClick={() => this.deleteRecord(\"MarketAuthorisationHolder\", this.props.Login.masterData.SelectedMAHolder,\r\n                                                                        \"delete\", deleteId)}>\r\n                                                                    <FontAwesomeIcon icon={faTrash} />\r\n                                                                </Nav.Link> */}\r\n\r\n\r\n                                                            <Nav.Link name=\"deleteMAHolder\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            //    data-for=\"tooltip_list_wrap\"\r\n                                                                onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                {/* <ConfirmDialog\r\n                                                                            name=\"deleteMessage\"\r\n                                                                            message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                            doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                            doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                            icon={faTrashAlt}\r\n                                                                            title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n\r\n                                                                            handleClickDelete={() => this.deleteRecord(\"MarketAuthorisationHolder\", this.props.Login.masterData.SelectedMAHolder,\r\n                                                                                \"delete\", deleteId)}\r\n                                                                        /> */}\r\n                                                            </Nav.Link>\r\n\r\n                                                            {/* <Nav.Link name=\"deleteMAHolder\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}>\r\n                                                                        <ConfirmDialog\r\n                                                                            name=\"deleteMessage\"\r\n                                                                            message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                            doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                            doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                            icon={faTrashAlt}\r\n                                                                            title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n\r\n                                                                            handleClickDelete={() => this.deleteRecord(\"MarketAuthorisationHolder\", this.props.Login.masterData.SelectedMAHolder,\r\n                                                                                \"delete\", deleteId)}\r\n                                                                        />\r\n                                                                    </Nav.Link> */}\r\n                                                            {/* </Tooltip> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {/* </Col>\r\n                                                    </Row> */}\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                {/* <Card.Text> */}\r\n                                                <Row>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_COUNTRY\" message=\"Country\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedMAHolder.scountryname}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_ADDRESS1\" message=\"Address 1\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedMAHolder.saddress1}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_ADDRESS2\" message=\"Address 2\" /></FormLabel>\r\n                                                            <ReadOnlyText>\r\n                                                            {this.props.Login.masterData.SelectedMAHolder.saddress2 === null || this.props.Login.masterData.SelectedMAHolder.saddress2.length === 0 ? '-' :\r\n                                                               this.props.Login.masterData.SelectedMAHolder.saddress2}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_ADDRESS3\" message=\"Address 3\" /></FormLabel>\r\n                                                            <ReadOnlyText> {this.props.Login.masterData.SelectedMAHolder.saddress3 === null || this.props.Login.masterData.SelectedMAHolder.saddress3.length === 0 ? '-' :\r\n                                                               this.props.Login.masterData.SelectedMAHolder.saddress3}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {/* </Card.Text> */}\r\n\r\n                                                <MAHContact formatMessage={this.props.intl.formatMessage}\r\n                                                    operation={this.props.Login.operation}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    screenName={this.props.Login.screenName}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    crudMaster={this.props.crudMaster}\r\n                                                    errorCode={this.props.Login.errorCode}\r\n                                                    masterStatus={this.props.Login.masterStatus}\r\n                                                    openChildModal={this.props.Login.openChildModal}\r\n                                                    updateStore={this.props.updateStore}\r\n                                                    selectedRecord={this.props.Login.selectedRecord}\r\n                                                    getMAHContactComboDataService={this.props.getMAHContactComboDataService}\r\n                                                    ncontrolCode={this.props.Login.ncontrolCode}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    esignRights={this.props.Login.userRoleControlRights}\r\n                                                    screenData={this.props.Login.screenData}\r\n                                                    validateEsignCredential={this.props.validateEsignCredential}\r\n                                                    loadEsign={this.props.Login.loadEsign}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    showAccordian={this.state.showAccordian}\r\n                                                    dataState={this.props.Login.dataState}\r\n                                                    selectedId={this.props.Login.selectedId}\r\n                                                    settings = {this.props.Login.settings}\r\n                                                />\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                {/* End of get display*/}\r\n\r\n                {/* Start of Modal Sideout for User Creation */}\r\n\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddMAHolder\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                countryList={this.state.countryList || []}//{this.props.Login.countryList || []}\r\n                                selectedmaHolder={this.props.Login.masterData.SelectedMAHolder || {}}\r\n                                operation={this.props.Login.operation}\r\n                                userLogged={this.props.Login.userLogged}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedId={this.props.Login.selectedId}\r\n                            />}\r\n                    />\r\n                }\r\n                {/* End of Modal Sideout for User Creation */}\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n        if (this.props.Login.countryList !== previousProps.Login.countryList) {\r\n\r\n            const countryList = constructOptionList(this.props.Login.countryList || [], \"ncountrycode\",\r\n                \"scountryname\", undefined, undefined, undefined);\r\n            const countryListMAHolder = countryList.get(\"OptionList\");\r\n\r\n            this.setState({ countryList: countryListMAHolder });\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            // else if (event.target.name === \"nlockmode\")\r\n            //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"MAHolder\", selectedObject: \"SelectedMAHolder\", primaryKeyField: \"nmahcode\" };\r\n            //inputData[\"marketauthorisationholder\"] = this.state.selectedRecord;\r\n            inputData[\"marketauthorisationholder\"] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n            this.userFieldList.map(item => {\r\n                return inputData[\"marketauthorisationholder\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n            })\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"marketauthorisationholder\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n            this.userFieldList.map(item => {\r\n                return inputData[\"marketauthorisationholder\"][item] = this.state.selectedRecord[item]\r\n            });\r\n        }\r\n        inputData[\"marketauthorisationholder\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : \"-1\";\r\n\r\n        const inputParam = {\r\n            classUrl: \"marketauthorisationholder\", //this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"MarketAuthorisationHolder\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n\r\n        if (\r\n            showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n\r\n    deleteRecord = (methodUrl, selectedRecord, operation, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedMAHolder.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedMAHolder.stransstatus }));\r\n        }\r\n        else {\r\n\r\n            const postParam = {\r\n                inputListName: \"MarketAuthorisationHolder\", selectedObject: \"SelectedMAHolder\",\r\n                primaryKeyField: \"nmahcode\",\r\n                primaryKeyValue: this.props.Login.masterData.SelectedMAHolder.nmahcode,\r\n                fetchUrl: \"marketauthorisationholder/getMarketAuthorisationHolder\",\r\n                fecthInputObject: { userInfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const inputParam = {\r\n                classUrl: \"marketauthorisationholder\", //this.props.Login.inputParam.classUrl,\r\n                methodUrl, postParam,\r\n                inputData: {\r\n                    [methodUrl.toLowerCase()]: selectedRecord,\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n                    \"marketauthorisationholder\": this.props.Login.masterData.SelectedMAHolder\r\n                },\r\n                operation\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"marketauthorisationholder\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            displayName: \"IDS_MAHOLDER\",\r\n            classUrl: \"marketauthorisationholder\",\r\n            methodUrl: \"MarketAuthorisationHolder\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential,\r\n    updateStore, getMAHolderDetail, getMAHolderComboService, getMAHContactComboDataService, filterColumnData\r\n})(injectIntl(MAHolder));\r\n\r\n"]},"metadata":{},"sourceType":"module"}