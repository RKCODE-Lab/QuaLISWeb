{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{process}from'@progress/kendo-data-query';import React from'react';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{plantgroupsite,plantgroupdepartment,fusionplantchild,getActivePlantGroupById}from'../../actions';import{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{showEsign,getControlMap,Lims_JSON_stringify}from'../../components/CommonScript';import{Col,Row,Nav}from'react-bootstrap';import{faPlus}from'@fortawesome/free-solid-svg-icons';import{ListWrapper}from'../../components/client-group.styles';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import DataGrid from'../../../src/components/data-grid/data-grid.component';import Esign from'../audittrail/Esign';import AddPlantGroup from'../../pages/configurationmaster/AddPlantGroup';import{callService,updateStore,crudMaster,validateEsignCredential}from'../../actions';import{toast}from'react-toastify';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var PlantGroup=/*#__PURE__*/function(_React$Component){_inherits(PlantGroup,_React$Component);var _super=_createSuper(PlantGroup);function PlantGroup(props){var _this;_classCallCheck(this,PlantGroup);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,userInfo:_this.props.Login.userInfo,displayName:_this.props.Login.displayName};_this.props.callService(inputParam);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var controlButton=_this.props.Login.controlButton;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;}}else{openModal=false;selectedRecord={};controlButton=[];}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:[],controlButton:controlButton}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};if(fieldName===\"ssitecode\"){selectedRecord[fieldName]=comboData;delete selectedRecord[\"splantchildcode\"];delete selectedRecord[\"splantparentcode\"];//this.setState({ selectedRecord });\n_this.props.plantgroupdepartment(_this.state.selectedRecord.ssitecode.value,// this.props.Login.masterData.SelectedReportMaster.nformcode,\n_this.props.Login.userInfo);}else if(fieldName===\"splantparentcode\"){selectedRecord[fieldName]=comboData;delete selectedRecord[\"splantchildcode\"];//this.setState({ selectedRecord });\n_this.props.fusionplantchild(_this.state.selectedRecord.ssitecode.value,_this.state.selectedRecord.splantparentcode.value,_this.props.Login.userInfo);}else if(fieldName===\"splantchildcode\"){selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}//selectedRecord[fieldName] = comboData;;\n// this.setState({ selectedRecord });\n};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var controlButton=_this.props.Login.controlButton;var selectedId=_this.props.Login.selectedId;var fusionchildplants;var fusionparentplants;var fusionplantSite;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"create\"||_this.props.Login.operation===\"update\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;}}else{openModal=false;selectedRecord={};controlButton=[];selectedId=null;fusionchildplants=[];fusionparentplants=[];fusionplantSite=[];}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:selectedId,controlButton:controlButton,fusionchildplants:fusionchildplants,fusionparentplants:fusionparentplants,fusionplantSite:fusionplantSite}};_this.props.updateStore(updateInfo);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.operation===\"create\"){_this.onSavefusionPlantGroup(saveType,formRef);}else if(_this.props.Login.operation===\"update\"){_this.updatefusionPlantGroup(saveType,formRef);}};_this.onSavefusionPlantGroup=function(saveType,formRef){var childparameter=[];_this.state.selectedRecord.splantchildcode&&_this.state.selectedRecord.splantchildcode.map(function(data){return childparameter.push({nchildcode:\"'\"+data.value+\"'\",splantcode:\"'\"+data.value+\"'\"// childplantname : data.item,\n// ssitecode:this.state.selectedRecord.ssitecode.value,\n});});var inputParam={nformcode:_this.props.Login.userInfo.nformcode,classUrl:\"plantgroup\",methodUrl:\"PlantGroup\",inputData:{userinfo:_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sformname:Lims_JSON_stringify(_this.props.Login.userInfo.sformname),smodulename:Lims_JSON_stringify(_this.props.Login.userInfo.smodulename)}),//indexof:\nncontrolCode:_this.props.Login.userInfo.nformcode,nmappingsite:_this.state.selectedRecord.ssitecode.value,ssitecode:_this.state.selectedRecord.ssitecode.label,splantparentcode:_this.state.selectedRecord.splantparentcode.value,splantparentcodeLable:_this.state.selectedRecord.splantparentcode.label,splantchildcode:_this.state.selectedRecord.splantchildcode.map(function(el){return el.value;}).join(\",\")||null,splantchildcodeLable:_this.state.selectedRecord.splantchildcode.map(function(el){return el.label;}).join(\",\")||null,childparameterlist:childparameter},operation:\"create\",saveType:saveType,formRef:formRef};//inputData[\"completetreepath\"] = masterData.CompleteTreePath;\nvar masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.updatefusionPlantGroup=function(saveType,formRef){var inputParam={nformcode:_this.props.Login.userInfo.nformcode,classUrl:\"plantgroup\",methodUrl:\"PlantGroup\",inputData:{userinfo:_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sformname:Lims_JSON_stringify(_this.props.Login.userInfo.sformname),smodulename:Lims_JSON_stringify(_this.props.Login.userInfo.smodulename)}),//indexof:\nncontrolCode:_this.props.Login.userInfo.nformcode,nplantgroupcode:_this.state.selectedRecord.nplantgroupcode,nmappingsite:_this.state.selectedRecord.ssitecode.value,ssitecode:_this.state.selectedRecord.ssitecode.label,splantparentcode:_this.state.selectedRecord.splantparentcode.value,splantparentcodeLable:_this.state.selectedRecord.splantparentcode.label,//splantchildcode: this.state.selectedRecord.splantchildcode.map(function (el) { return \"'\"+el.value+\"'\"; }).join(\",\") || null,\n//splantchildcodeLable: this.state.selectedRecord.splantchildcode.map(function (el) { return  \"'\"+el.label+\"'\"; }).join(\",\") || null,\nsplantchildcode:_this.state.selectedRecord.splantchildcode.value,splantchildcodeLable:_this.state.selectedRecord.splantchildcode.label},operation:\"update\",saveType:saveType,formRef:formRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteRecord=function(deleteParam){var _inputData;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:(_inputData={},_defineProperty(_inputData,_this.props.Login.inputParam.methodUrl.toLowerCase(),deleteParam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:deleteParam.operation,dataState:_this.state.dataState,selectedRecord:deleteParam.selectedRecord};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.displayName}),operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.formRef=React.createRef();_this.extractedColumnList=[];var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,userRoleControlRights:[],controlMap:new Map()};return _this;}_createClass(PlantGroup,[{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"controlType\":\"selectbox\",\"idsName\":\"IDS_FUSIONPRANENTPLANT\",\"dataField\":\"sparentsplantname\",\"width\":\"150px\"},//parentsplantcode\n{\"controlType\":\"selectbox\",\"idsName\":\"IDS_FUSIONCHILDPLANTS\",\"dataField\":\"schildsplantname\",\"width\":\"150px\"},//childsplantcode\n{\"controlType\":\"selectbox\",\"idsName\":\"IDS_FUSIONSITE\",\"dataField\":\"ssitecode\",\"width\":\"150px\"}];primaryKeyField=\"nsiteprimarykey\";}var mandatoryFields=[];mandatoryFields.push({\"mandatory\":true,\"idsName\":\"IDS_FUSIONSITE\",\"dataField\":\"ssitecode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_FUSIONPRANENTPLANT\",\"dataField\":\"splantparentcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_FUSIONCHILDPLANTS\",\"dataField\":\"splantchildcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"});var addplantgroupId=this.state.controlMap.has(\"AddPlantGroup\")&&this.state.controlMap.get(\"AddPlantGroup\").ncontrolcode;var editplantgroupId=this.state.controlMap.has(\"EditPlantGroup\")&&this.state.controlMap.get(\"EditPlantGroup\").ncontrolcode;// const deleteplantgroupId = this.state.controlMap.has(\"DeletePlantGroup\") && this.state.controlMap.get(\"DeletePlantGroup\").ncontrolcode;\nvar editParam={screenName:this.props.Login.inputParam&&this.props.Login.inputParam.displayName&&this.props.intl.formatMessage({id:this.props.Login.inputParam.displayName}),primaryKeyField:\"nplantgroupcode\",operation:\"update\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editplantgroupId};var deleteParam={operation:\"delete\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addplantgroupId\",className:\"add-txt-btn\",hidden:this.state.userRoleControlRights.indexOf(AddPlantGroup)===-1,onClick:function onClick(){return _this2.props.plantgroupsite(AddPlantGroup);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_FUSIONPLANT\",defaultMessage:\"Validation Status\"}))),/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,selectedId:this.props.Login.selectedId,data:this.state.data,dataResult:this.state.dataResult||[],dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,fetchRecord:this.props.getActivePlantGroupById,deleteRecord:this.deleteRecord,reloadData:this.reloadData,editParam:editParam//editParam={() => this.props.getActivePlantGroupById(editplantgroupId,\"nplantgroupcode\", this.props.Login.userInfo) || []}\n,addRecord:function addRecord(){return _this2.props.plantgroupsite(addplantgroupId,_this2.props.Login.userInfo)||[];},deleteParam:deleteParam,scrollable:\"scrollable\",gridHeight:\"600px\",isActionRequired:true,isToolBarRequired:true,pageable:true,groupable:true,group:this.state.group,groupPanelCell:function groupPanelCell(){return null;}})))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,selectedRecord:this.state.selectedRecord||{},updateStore:this.props.updateStore,mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddPlantGroup,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,onClick:function onClick(){return _this2.openModal(\"IDS_FUSIONPLANT\");},fusionplantSite:this.state.fusionplantSite||[],fusionparentplants:this.state.fusionparentplants||[],fusionchildplants:this.state.fusionchildplants,inputParam:this.props.Login.inputParam,deleteFile:this.deleteFile,actionType:this.state.actionType,operation:this.props.Login.operation})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}var group=[];group=[{field:\"sparentsplantname\"}];dataState={group:group};this.setState({dataState:dataState});this.setState({data:this.props.Login.masterData,isOpen:false,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}// if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n//     this.setState({ selectedRecord: this.props.Login.selectedRecord });\n// }\nif(this.props.Login.fusionplantSite!==previousProps.Login.fusionplantSite){this.setState({fusionplantSite:this.props.Login.fusionplantSite});}if(this.props.Login.fusionparentplants!==previousProps.Login.fusionparentplants){this.setState({fusionparentplants:this.props.Login.fusionparentplants});}if(this.props.Login.fusionchildplants!==previousProps.Login.fusionchildplants){this.setState({fusionchildplants:this.props.Login.fusionchildplants});}// if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n//     const userRoleControlRights = [];\n//     if (this.props.Login.userRoleControlRights) {\n//         this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\n//             userRoleControlRights.push(item.ncontrolcode))\n//     }\n//     const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\n//     let skip = this.state.skip;\n//     let take = this.state.take;\n//     // if (reportTypeList.length < take) {\n//     //     skip = 0;\n//     //     take = take;\n//     // }\n//     this.setState({ userRoleControlRights,\n//        controlMap,skip, take\n//     });\n// }\n}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return PlantGroup;}(React.Component);export default connect(mapStateToProps,{updateStore:updateStore,callService:callService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,plantgroupsite:plantgroupsite,plantgroupdepartment:plantgroupdepartment,fusionplantchild:fusionplantchild,getActivePlantGroupById:getActivePlantGroupById})(injectIntl(PlantGroup));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/configurationmaster/PlantGroup.jsx"],"names":["process","React","SlideOutModal","plantgroupsite","plantgroupdepartment","fusionplantchild","getActivePlantGroupById","connect","injectIntl","FormattedMessage","DEFAULT_RETURN","showEsign","getControlMap","Lims_JSON_stringify","Col","Row","Nav","faPlus","ListWrapper","FontAwesomeIcon","DataGrid","Esign","AddPlantGroup","callService","updateStore","crudMaster","validateEsignCredential","toast","mapStateToProps","state","Login","PlantGroup","props","dataStateChange","event","setState","dataResult","data","dataState","reloadData","inputParam","inputData","userInfo","classUrl","methodUrl","displayName","closeModal","loadEsign","openModal","selectedRecord","controlButton","operation","updateInfo","typeName","selectedId","onComboChange","comboData","fieldName","ssitecode","value","splantparentcode","onInputOnChange","target","type","name","checked","fusionchildplants","fusionparentplants","fusionplantSite","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","screenData","onSaveClick","saveType","formRef","onSavefusionPlantGroup","updatefusionPlantGroup","childparameter","splantchildcode","map","push","nchildcode","splantcode","nformcode","userinfo","sformname","smodulename","ncontrolCode","nmappingsite","splantparentcodeLable","el","join","splantchildcodeLable","childparameterlist","masterData","userRoleControlRights","nplantgroupcode","deleteRecord","deleteParam","toLowerCase","screenName","intl","formatMessage","id","createRef","extractedColumnList","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","primaryKeyField","undefined","mandatoryFields","addplantgroupId","has","get","ncontrolcode","editplantgroupId","editParam","indexOf","group","deleteFile","actionType","previousProps","Object","values","item","field","isOpen","warn","Component"],"mappings":"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","sourcesContent":["import { process } from '@progress/kendo-data-query';\r\nimport React from 'react'\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { plantgroupsite, plantgroupdepartment, fusionplantchild, getActivePlantGroupById } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, getControlMap, Lims_JSON_stringify } from\r\n    '../../components/CommonScript';\r\nimport { Col, Row,  Nav } from 'react-bootstrap';\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../../src/components/data-grid/data-grid.component';\r\nimport Esign from '../audittrail/Esign';\r\nimport AddPlantGroup from '../../pages/configurationmaster/AddPlantGroup';\r\nimport { callService, updateStore, crudMaster, validateEsignCredential } from '../../actions';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass PlantGroup extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: this.props.Login.displayName\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let primaryKeyField = \"\";\r\n\r\n        if (this.props.Login.inputParam !== undefined) {\r\n\r\n            this.extractedColumnList = [\r\n                { \"controlType\": \"selectbox\", \"idsName\": \"IDS_FUSIONPRANENTPLANT\", \"dataField\": \"sparentsplantname\", \"width\": \"150px\" }, //parentsplantcode\r\n                { \"controlType\": \"selectbox\", \"idsName\": \"IDS_FUSIONCHILDPLANTS\", \"dataField\": \"schildsplantname\", \"width\": \"150px\" }, //childsplantcode\r\n                { \"controlType\": \"selectbox\", \"idsName\": \"IDS_FUSIONSITE\", \"dataField\": \"ssitecode\", \"width\": \"150px\" },\r\n            ]\r\n\r\n            primaryKeyField = \"nsiteprimarykey\";\r\n        }\r\n        let mandatoryFields = [];\r\n        mandatoryFields.push(\r\n            { \"mandatory\": true, \"idsName\": \"IDS_FUSIONSITE\", \"dataField\": \"ssitecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_FUSIONPRANENTPLANT\", \"dataField\": \"splantparentcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"mandatory\": true, \"idsName\": \"IDS_FUSIONCHILDPLANTS\", \"dataField\": \"splantchildcode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        )\r\n\r\n\r\n        const addplantgroupId = this.state.controlMap.has(\"AddPlantGroup\") && this.state.controlMap.get(\"AddPlantGroup\").ncontrolcode;\r\n        const editplantgroupId = this.state.controlMap.has(\"EditPlantGroup\") && this.state.controlMap.get(\"EditPlantGroup\").ncontrolcode;\r\n       // const deleteplantgroupId = this.state.controlMap.has(\"DeletePlantGroup\") && this.state.controlMap.get(\"DeletePlantGroup\").ncontrolcode;\r\n\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), primaryKeyField: \"nplantgroupcode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo:this.props.Login.userInfo,\r\n            ncontrolCode: editplantgroupId\r\n        };\r\n\r\n        const deleteParam = { operation: \"delete\" };\r\n\r\n        return (<>\r\n            <Row>\r\n                <Col>\r\n                    <ListWrapper className=\"client-list-content\">\r\n\r\n                        <div className=\"actions-stripe d-flex justify-content-end\">\r\n                            <Nav.Link name=\"addplantgroupId\" className=\"add-txt-btn\"\r\n                                hidden={this.state.userRoleControlRights.indexOf(AddPlantGroup) === -1}\r\n                                onClick={() => this.props.plantgroupsite(AddPlantGroup)}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} /> { }\r\n                                <FormattedMessage id='IDS_FUSIONPLANT' defaultMessage='Validation Status' />\r\n                            </Nav.Link>\r\n                        </div>\r\n                        <DataGrid\r\n                            primaryKeyField={primaryKeyField}\r\n                            selectedId={this.props.Login.selectedId}\r\n                            data={this.state.data}\r\n                            dataResult={this.state.dataResult || []}\r\n                            dataState={this.state.dataState}\r\n                            dataStateChange={this.dataStateChange}\r\n                            extractedColumnList={this.extractedColumnList}\r\n                            controlMap={this.state.controlMap}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            userInfo={this.props.Login.userInfo}\r\n                            fetchRecord={this.props.getActivePlantGroupById}\r\n                            deleteRecord={this.deleteRecord}\r\n                            reloadData={this.reloadData}\r\n                            editParam={editParam}\r\n                            //editParam={() => this.props.getActivePlantGroupById(editplantgroupId,\"nplantgroupcode\", this.props.Login.userInfo) || []}\r\n                            addRecord={() => this.props.plantgroupsite(addplantgroupId, this.props.Login.userInfo) || []}\r\n                            deleteParam={deleteParam}\r\n                            scrollable={\"scrollable\"}\r\n                            gridHeight={\"600px\"}\r\n                            isActionRequired={true}\r\n                            isToolBarRequired={true}\r\n                            pageable={true}\r\n                            groupable={true}\r\n                            group={this.state.group}\r\n                            groupPanelCell={() => null}\r\n\r\n                        />\r\n\r\n                    </ListWrapper>\r\n                </Col>\r\n            </Row>\r\n\r\n            {this.props.Login.openModal &&\r\n                <SlideOutModal\r\n                    show={this.props.Login.openModal}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName}\r\n                    onSaveClick={this.onSaveClick}\r\n                    esign={this.props.Login.loadEsign}\r\n                    validateEsign={this.validateEsign}\r\n                    masterStatus={this.props.Login.masterStatus}\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    updateStore={this.props.updateStore}\r\n                    mandatoryFields={mandatoryFields}\r\n                    addComponent={this.props.Login.loadEsign ?\r\n                        <Esign\r\n                            operation={this.props.Login.operation}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        />\r\n                        : <AddPlantGroup\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            onComboChange={this.onComboChange}\r\n                            onClick={() => this.openModal(\"IDS_FUSIONPLANT\")}\r\n                            fusionplantSite={this.state.fusionplantSite || []}\r\n                            fusionparentplants={this.state.fusionparentplants || []}\r\n                            fusionchildplants={this.state.fusionchildplants}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            deleteFile={this.deleteFile}\r\n                            actionType={this.state.actionType}\r\n                            operation={this.props.Login.operation}\r\n                        />}\r\n                />\r\n            }\r\n        </>);\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = {\r\n                    skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 \r\n                    }\r\n                }\r\n                let group=[];\r\n                group=[{field: \"sparentsplantname\" }]\r\n                dataState = {group}\r\n                this.setState( {dataState} );\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    isOpen: false,\r\n                    selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState });\r\n            }\r\n\r\n \r\n        } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        // if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n        //     this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        // }\r\n\r\n\r\n        if (this.props.Login.fusionplantSite !== previousProps.Login.fusionplantSite) {\r\n            this.setState({ fusionplantSite: this.props.Login.fusionplantSite });\r\n        }\r\n\r\n        if (this.props.Login.fusionparentplants !== previousProps.Login.fusionparentplants) {\r\n            this.setState({ fusionparentplants: this.props.Login.fusionparentplants });\r\n        }\r\n\r\n        if (this.props.Login.fusionchildplants !== previousProps.Login.fusionchildplants) {\r\n            this.setState({ fusionchildplants: this.props.Login.fusionchildplants });\r\n        }\r\n\r\n\r\n\r\n        // if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n        //     const userRoleControlRights = [];\r\n        //     if (this.props.Login.userRoleControlRights) {\r\n        //         this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n        //             userRoleControlRights.push(item.ncontrolcode))\r\n        //     }\r\n\r\n        //     const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n        //     let skip = this.state.skip;\r\n        //     let take = this.state.take;\r\n        //     // if (reportTypeList.length < take) {\r\n        //     //     skip = 0;\r\n        //     //     take = take;\r\n        //     // }\r\n\r\n        //     this.setState({ userRoleControlRights,\r\n        //        controlMap,skip, take\r\n        //     });\r\n\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let controlButton = this.props.Login.controlButton;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            controlButton = [];\r\n\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, selectedId: [], controlButton\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n\r\n        if (fieldName === \"ssitecode\") {\r\n            selectedRecord[fieldName] = comboData;\r\n            delete selectedRecord[\"splantchildcode\"];\r\n            delete selectedRecord[\"splantparentcode\"];\r\n\r\n            //this.setState({ selectedRecord });\r\n            this.props.plantgroupdepartment(\r\n                this.state.selectedRecord.ssitecode.value,\r\n                // this.props.Login.masterData.SelectedReportMaster.nformcode,\r\n                this.props.Login.userInfo,\r\n            )\r\n        } else if (fieldName === \"splantparentcode\") {\r\n            selectedRecord[fieldName] = comboData;\r\n            delete selectedRecord[\"splantchildcode\"];\r\n\r\n            //this.setState({ selectedRecord });\r\n            this.props.fusionplantchild(\r\n                this.state.selectedRecord.ssitecode.value,\r\n                this.state.selectedRecord.splantparentcode.value,\r\n                this.props.Login.userInfo\r\n            );\r\n\r\n        }\r\n        else if (fieldName === \"splantchildcode\") {\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n        else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n        //selectedRecord[fieldName] = comboData;;\r\n        // this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let controlButton = this.props.Login.controlButton;\r\n        let selectedId = this.props.Login.selectedId;\r\n        let fusionchildplants;\r\n        let fusionparentplants;\r\n        let fusionplantSite;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            controlButton = [];\r\n            selectedId = null;\r\n            fusionchildplants = [];\r\n            fusionparentplants = [];\r\n            fusionplantSite = [];\r\n\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, selectedId, controlButton, fusionchildplants, fusionparentplants, fusionplantSite\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.operation === \"create\") {\r\n            this.onSavefusionPlantGroup(saveType, formRef);\r\n        } else if (this.props.Login.operation === \"update\") {\r\n            this.updatefusionPlantGroup(saveType, formRef);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    onSavefusionPlantGroup = (saveType, formRef) => {\r\n\r\n        let childparameter = [];\r\n        this.state.selectedRecord.splantchildcode &&\r\n            this.state.selectedRecord.splantchildcode.map(data => {\r\n                return childparameter.push({\r\n                    nchildcode: \"'\" + data.value + \"'\",\r\n                    splantcode: \"'\" + data.value + \"'\"\r\n                    // childplantname : data.item,\r\n                    // ssitecode:this.state.selectedRecord.ssitecode.value,\r\n                })\r\n            })\r\n\r\n        const inputParam = {\r\n            nformcode: this.props.Login.userInfo.nformcode,\r\n            classUrl: \"plantgroup\",\r\n            methodUrl: \"PlantGroup\",\r\n            inputData: {\r\n                userinfo: {\r\n                    ...this.props.Login.userInfo,\r\n                    sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n                },\r\n                //indexof:\r\n\r\n                ncontrolCode: this.props.Login.userInfo.nformcode,\r\n                nmappingsite: this.state.selectedRecord.ssitecode.value,\r\n                ssitecode: this.state.selectedRecord.ssitecode.label,\r\n                splantparentcode: this.state.selectedRecord.splantparentcode.value,\r\n                splantparentcodeLable: this.state.selectedRecord.splantparentcode.label,\r\n                splantchildcode: this.state.selectedRecord.splantchildcode.map(function (el) { return el.value ; }).join(\",\") || null,\r\n                splantchildcodeLable: this.state.selectedRecord.splantchildcode.map(function (el) { return  el.label; }).join(\",\") || null,\r\n                childparameterlist: childparameter\r\n            },\r\n            operation: \"create\",\r\n            saveType, formRef,\r\n        }\r\n\r\n        //inputData[\"completetreepath\"] = masterData.CompleteTreePath;\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n\r\n    updatefusionPlantGroup = (saveType, formRef) => {\r\n\r\n\r\n        const inputParam = {\r\n            nformcode: this.props.Login.userInfo.nformcode,\r\n            classUrl: \"plantgroup\",\r\n            methodUrl: \"PlantGroup\",\r\n            inputData: {\r\n                userinfo: {\r\n                    ...this.props.Login.userInfo,\r\n                    sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n                },\r\n                //indexof:\r\n                ncontrolCode: this.props.Login.userInfo.nformcode,\r\n                nplantgroupcode: this.state.selectedRecord.nplantgroupcode,\r\n                nmappingsite: this.state.selectedRecord.ssitecode.value,\r\n                ssitecode: this.state.selectedRecord.ssitecode.label,\r\n                splantparentcode: this.state.selectedRecord.splantparentcode.value,\r\n                splantparentcodeLable: this.state.selectedRecord.splantparentcode.label,\r\n                //splantchildcode: this.state.selectedRecord.splantchildcode.map(function (el) { return \"'\"+el.value+\"'\"; }).join(\",\") || null,\r\n                //splantchildcodeLable: this.state.selectedRecord.splantchildcode.map(function (el) { return  \"'\"+el.label+\"'\"; }).join(\",\") || null,\r\n                splantchildcode:  this.state.selectedRecord.splantchildcode.value ,\r\n                splantchildcodeLable:  this.state.selectedRecord.splantchildcode.label \r\n\r\n            },\r\n            operation: \"update\",\r\n            saveType, formRef,\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    deleteRecord = (deleteParam) => {\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: {\r\n                [this.props.Login.inputParam.methodUrl.toLowerCase()]: deleteParam.selectedRecord,//.dataItem,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: deleteParam.operation,\r\n            dataState: this.state.dataState,\r\n            selectedRecord: deleteParam.selectedRecord\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id:this.props.Login.displayName }),\r\n                    operation: deleteParam.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, { updateStore, callService, crudMaster, validateEsignCredential, plantgroupsite, plantgroupdepartment, fusionplantchild, getActivePlantGroupById })(injectIntl(PlantGroup));\r\n"]},"metadata":{},"sourceType":"module"}