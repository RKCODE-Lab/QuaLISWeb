{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{constructOptionList,sortData}from'../components/CommonScript';import{toast}from'react-toastify';import{initRequest,updateStore}from'./LoginAction';import{transactionStatus}from'../components/Enumeration';import{intl}from\"../components/App\";export function openModal(operation,napprovalconfigcode,napprovalsubtypecode,userInfo,ncontrolcode,ntreeversiontempcode){return function(dispatch){if(userInfo){var inputData={napprovalconfigcode:napprovalconfigcode,napprovalsubtypecode:napprovalsubtypecode,ntreeversiontempcode:ntreeversiontempcode,userinfo:userInfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getUserRoleApprovalConfig\",inputData).then(function(response){var filterStatusOptionsMap=constructOptionList(response.data.availableFilterStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var validationStatusOptionsMap=constructOptionList(response.data.availableValidStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var approvalStatusOptionsMap=constructOptionList(response.data.approvalStatus||[],\"ntranscode\",\"stransdisplaystatus\",undefined,undefined,true);var decisionStatusOptionsMap=constructOptionList(response.data.availableDecisionStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var checklistOptionsMap=constructOptionList(response.data.checklist||[],\"nchecklistcode\",\"schecklistname\",undefined,undefined,true);var filterStatusOptions=filterStatusOptionsMap.get(\"OptionList\");var validationStatusOptions=validationStatusOptionsMap.get(\"OptionList\");var approvalStatusOptions=approvalStatusOptionsMap.get(\"OptionList\");var decisionStatusOptions=decisionStatusOptionsMap.get(\"OptionList\");var checklistOptions=checklistOptionsMap.get(\"OptionList\");// const userRoleTree = response.data.userroletree ?  response.data.userroletree.reverse() :[];\nvar userRoleTree=response.data.userroletree;var validStatusList=response.data.availableValidStatus||[];var topLevelValidStatus=validStatusList.filter(function(item){return item.ntranscode!==transactionStatus.COMPLETED;});var topLevelValidStatusMap=constructOptionList(topLevelValidStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var topLevelValidStatusOptions=topLevelValidStatusMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,userRoleTree:userRoleTree,//:response.data.userroletree,\nfilterStatusOptions:filterStatusOptions,validationStatusOptions:validationStatusOptions,topLevelValidStatusOptions:topLevelValidStatusOptions,approvalStatusOptions:approvalStatusOptions,decisionStatusOptions:decisionStatusOptions,checklistOptions:checklistOptions,approvalStatusValue:response.data.AvailableDecisionStatus?response.data.AvailableDecisionStatus:[],checklistValues:[],checklistVersionValues:[],actionStatus:response.data.actionStatus?response.data.actionStatus:[],roleConfig:response.data.roleConfig?sortData(response.data.roleConfig,'ascending','nsorter'):[],versionConfig:response.data.versionConfig?response.data.versionConfig:[],ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function getApprovalConfigVersion(version,napprovalsubtypecode,userInfo,masterData){return function(dispatch){var inputData={\"napprovalconfigversioncode\":version.napproveconfversioncode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedVersion:response.data.selectedVersion,showAccordion:true,approvalconfigRoleNames:response.data.approvalconfigRoleNames,selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRoleDetails(inputData){return function(dispatch){var role=inputData.role,masterData=inputData.masterData,napprovalsubtypecode=inputData.napprovalsubtypecode,userinfo=inputData.userinfo;//console.log(\"role:\", role);\nvar inputParamData={napprovalconfigrolecode:role.napprovalconfigrolecode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userinfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigRoleDetails\",inputParamData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedRole:role,showAccordion:true,roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovalConfigEditData(napprovalconfigversioncode,napprovalsubtypecode,userInfo,masterData,ncontrolcode){return function(dispatch){if(masterData.selectedVersion[\"ntransactionstatus\"]===transactionStatus.APPROVED||masterData.selectedVersion[\"ntransactionstatus\"]===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTOEDIT\"}));}else{if(userInfo){var inputData={napprovalconfigversioncode:napprovalconfigversioncode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo};dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigEditData\",inputData).then(function(response){var filterStatusOptionsMap=constructOptionList(response.data.availableFilterStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var validationStatusOptionsMap=constructOptionList(response.data.availableValidStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var approvalStatusOptionsMap=constructOptionList(response.data.approvalStatus||[],\"ntranscode\",\"stransdisplaystatus\",undefined,undefined,true);var decisionStatusOptionsMap=constructOptionList(response.data.availableDecisionStatus||[],\"ntranscode\",\"stransstatus\",undefined,undefined,true);var checklistOptionsMap=constructOptionList(response.data.checklist||[],\"nchecklistcode\",\"schecklistname\",undefined,undefined,true);var filterStatusOptions=filterStatusOptionsMap.get(\"OptionList\");var validationStatusOptions=validationStatusOptionsMap.get(\"OptionList\");var approvalStatusOptions=approvalStatusOptionsMap.get(\"OptionList\");var decisionStatusOptions=decisionStatusOptionsMap.get(\"OptionList\");var checklistOptions=checklistOptionsMap.get(\"OptionList\");//ALPD-5533--Vignesh (07-03-2025)-->The edit popup does not show the validation status. \nvar topLevelValidStatusOptions=validationStatusOptions.filter(function(item){return item.value!==transactionStatus.COMPLETED;});//const userRoleTree = response.data.userroletree ?  response.data.userroletree.reverse() :[];\nvar userRoleTree=response.data.userroletree?response.data.userroletree:[];var selectedRecord={};userRoleTree.map(function(role){var _selectedRecord$role$;var filterStatus=[];var validationStatus=[];var decisionStatus=[];var actionArray=[];var filterStatusValues=[];response.data[\"filterstatus_\".concat(role.nuserrolecode)].map(function(data){filterStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});filterStatus.push(data.ntranscode);return null;});var validationStatusValues=[];response.data[\"validationstatus_\".concat(role.nuserrolecode)].map(function(data){validationStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});validationStatus.push(data.ntranscode);return null;});var decisionStatusValues=[];response.data[\"decisionstatus_\".concat(role.nuserrolecode)]&&response.data[\"decisionstatus_\".concat(role.nuserrolecode)].map(function(data){decisionStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});decisionStatus.push(data.ntranscode);return null;});var checklistValues=[];response.data[\"checklist_\".concat(role.nuserrolecode)].map(function(data){return checklistValues.push({value:data.nchecklistcode,label:data.schecklistname,item:data});});var checklistVersionValues=[];response.data[\"checklist_\".concat(role.nuserrolecode)].map(function(data){return checklistVersionValues.push({value:data.nchecklistversioncode,label:data.schecklistversionname,item:data});});var nrecomretestneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomretestneed;var nrecomrecalcneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomrecalcneed;var nretestneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nretestneed;var nrecalcneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecalcneed;var ncorrectionneed=response.data[\"roledetails_\".concat(role.nuserrolecode)][0].ncorrectionneed;nrecomretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRETEST):actionArray.push();nrecomrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRECALC):actionArray.push();nretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RETEST):actionArray.push();nrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECALC):actionArray.push();ncorrectionneed===transactionStatus.YES?actionArray.push(transactionStatus.CORRECTION):actionArray.push();selectedRecord[role.nuserrolecode]=(_selectedRecord$role$={},_defineProperty(_selectedRecord$role$,\"Partial Approval_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].npartialapprovalneed),_defineProperty(_selectedRecord$role$,'IDS_SECTIONWISEAPPROVE',response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nsectionwiseapprovalneed),_defineProperty(_selectedRecord$role$,\"Recommend Retest_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomretestneed),_defineProperty(_selectedRecord$role$,\"Recommend Recalc_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecomrecalcneed),_defineProperty(_selectedRecord$role$,\"ReTest_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nretestneed),_defineProperty(_selectedRecord$role$,\"ReCalc_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nrecalcneed),_defineProperty(_selectedRecord$role$,'IDS_AUTOAPPROVAL',response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nautoapproval),_defineProperty(_selectedRecord$role$,\"Correction_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].ncorrectionneed),_defineProperty(_selectedRecord$role$,\"Esign_\".concat(role.nuserrolecode),response.data[\"roledetails_\".concat(role.nuserrolecode)][0].nesignneed),_defineProperty(_selectedRecord$role$,'filterstatus',filterStatus),_defineProperty(_selectedRecord$role$,'decisionstatus',decisionStatus),_defineProperty(_selectedRecord$role$,'validationstatus',validationStatus),_defineProperty(_selectedRecord$role$,'approvalstatus',response.data[\"roledetails_\".concat(role.nuserrolecode)][0].napprovalstatuscode),_defineProperty(_selectedRecord$role$,'checklist',response.data[\"checklist_\".concat(role.nuserrolecode)][0].nchecklistversioncode),_selectedRecord$role$);selectedRecord['sversionname']=response.data.versiondetails.sversionname;//ALPD-4833--Vignesh R(08-10-2024)\nselectedRecord['nneedautoinnerband']=response.data.versiondetails.nneedautoinnerband;selectedRecord['nneedautoouterband']=response.data.versiondetails.nneedautoouterband;response.data.versionConfig.map(function(action){if(action.ntranscode===transactionStatus.AUTOAPPROVAL){selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautoapproval;}else if(action.ntranscode===transactionStatus.AUTOCOMPLETE){selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautocomplete;}});selectedRecord['IDS_JOBALLOCATION']=response.data.versiondetails.nneedjoballocation;selectedRecord['IDS_AUTOALLOT']=response.data.versiondetails.nautoallot;selectedRecord[\"approvalstatus_\".concat(role.nuserrolecode)]=[{value:response.data[\"roledetails_\".concat(role.nuserrolecode)][0].napprovalstatuscode,label:response.data[\"roledetails_\".concat(role.nuserrolecode)][0].sapprovalstatus}];selectedRecord[\"filterstatus_\".concat(role.nuserrolecode)]=filterStatusValues;selectedRecord[\"validationstatus_\".concat(role.nuserrolecode)]=validationStatusValues;selectedRecord[\"decisionstatus_\".concat(role.nuserrolecode)]=decisionStatusValues;selectedRecord[\"checklist_\".concat(role.nuserrolecode)]=checklistValues;selectedRecord[\"checklistVersion_\".concat(role.nuserrolecode)]=checklistVersionValues;selectedRecord[\"actionStatus_\".concat(role.nuserrolecode)]=actionArray;//selectedRecord[role.nuserrolecode]=response.data[`roledetails_${role.nuserrolecode}`][0]\nreturn null;});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"update\",userRoleTree:userRoleTree,//userRoleTree:sortData(response.data.userroletree,'ascending','nlevelno'),\nfilterStatusOptions:filterStatusOptions,validationStatusOptions:validationStatusOptions,approvalStatusOptions:approvalStatusOptions,decisionStatusOptions:decisionStatusOptions,checklistOptions:checklistOptions,actionStatus:response.data.actionStatus?response.data.actionStatus:[],roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig,selectedRecord:selectedRecord,masterData:masterData,ncontrolcode:ncontrolcode,loading:false,//ALPD-5533--Vignesh (07-03-2025)-->The edit popup does not show the validation status. \ntopLevelValidStatusOptions:topLevelValidStatusOptions}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}}};}export function getFilterChange(inputParamData,oldState){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigFilter\",inputParamData.inputData).then(function(response){var RegistrationTypeListMap=constructOptionList(response.data.registrationtype||[],\"nregtypecode\",\"sregtypename\",'ascending','nsorter',false);var RegistrationSubTypeListMap=constructOptionList(response.data.registrationsubtype||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nsorter',false);var RegistrationTypeList=RegistrationTypeListMap.get(\"OptionList\");var RegistrationSubTypeList=RegistrationSubTypeListMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParamData.masterData),{},{approvalsubtype:oldState.approvalsubtype,approvalSubTypeValue:oldState.approvalSubTypeValue,RegistrationTypeList:response.data.registrationtype?RegistrationTypeList:oldState.RegistrationTypeList,RegistrationSubTypeList:response.data.registrationsubtype?RegistrationSubTypeList:oldState.RegistrationSubTypeList,registrationType:response.data.registrationtype&&response.data.registrationtype.length>0?response.data.registrationtype:oldState.registrationtype,//registrationType:response.data.registrationtype&&response.data.registrationtype.length>0?sortData(response.data.registrationtype,\"ascending\",\"nregtypecode\"):oldState.registrationtype,\nregistrationTypeValue:response.data.registrationtype?response.data.registrationtype.length>0?{value:response.data.registrationtype[0].nregtypecode,label:response.data.registrationtype[0].sregtypename}:oldState.registrationTypeValue:oldState.registrationTypeValue,//registrationSubType:response.data.registrationsubtype&&response.data.registrationsubtype.length>0?sortData(response.data.registrationsubtype,\"descending\",\"nregsubtypecode\"):oldState.registrationsubtype,\nregistrationSubType:response.data.registrationsubtype&&response.data.registrationsubtype.length>0?response.data.registrationsubtype:oldState.registrationsubtype,// ALPD-5306    Added validation by Vishakh for getting front end value if response is undefined\nregistrationSubTypeValue:response.data.registrationsubtype?response.data.registrationsubtype.length>0?{value:response.data.registrationsubtype[0].nregsubtypecode,label:response.data.registrationsubtype[0].sregsubtypename}:oldState.registrationSubTypeValue:oldState.registrationSubTypeValue,approvalConfigCode:response.data.approvalConfigCode,treeVersionTemplate:response.data.treeVersionTemplate,userroleTemplateValue:response.data.userroleTemplateValue||{}// versionData:sortData(response.data.versionData),\n// selectedVersion:response.data.selectedVersion,\n// approvalconfigRoleNames:response.data.approvalconfigRoleNames,\n// showAccordion:true,\n// roleFilters:response.data.roleFilters,\n// roleValidations:response.data.roleValidations,\n// roleDecisions:response.data.roleDecisions,\n// roleActions:response.data.roleActions,\n// roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),\n// versionConfig:response.data.versionConfig,\n// searchedData:undefined\n}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovalConfigurationVersion(inputParamData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputParamData.inputData).then(function(response){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],organisation:undefined}};dispatch(updateStore(updateInfo));//ALPD-4803 done by Dhanushya RI,To check searchref key is present or not\nif(inputParamData.searchRef!==undefined&&inputParamData.searchRef&&inputParamData.searchRef.current&&inputParamData.searchRef.current.value!==\"\"){inputParamData.searchRef.current.value=\"\";inputParamData.masterData[\"searchedData\"]=undefined;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParamData.masterData),{},{versionData:sortData(response.data.versionData),selectedVersion:response.data.selectedVersion,approvalconfigRoleNames:response.data.approvalconfigRoleNames,selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},showAccordion:true,roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig,searchedData:undefined}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function copyVersion(napprovalsubtypecode,userInfo,masterData,ncontrolcode){return function(dispatch){dispatch(initRequest(true));rsapi.post('approvalconfig/getCopyRegType',{napprovalconfigversioncode:masterData.selectedVersion.napproveconfversioncode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo}).then(function(response){var selectedRecord={};var RegistrationTypeListMap=constructOptionList(response.data.CopyRegType||[],\"nregtypecode\",\"sregtypename\",'ascending','nsorter',false);var RegistrationSubTypeListMap=constructOptionList(response.data.CopyRegSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nsorter',false);var optCopyRegType=RegistrationTypeListMap.get(\"OptionList\");var optCopyRegSubType=RegistrationSubTypeListMap.get(\"OptionList\");selectedRecord['regtype']=response.data.CopyRegType.length>0?{value:response.data.CopyRegType[0].nregtypecode,label:response.data.CopyRegType[0].sregtypename}:[];selectedRecord['regsubtype']=response.data.CopyRegSubType?response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[]:[];dispatch({type:DEFAULT_RETURN,payload:{operation:\"copy\",openModal:true,optCopyRegSubType:optCopyRegSubType,optCopyRegType:optCopyRegType,selectedRecord:selectedRecord,masterData:masterData,ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getCopySubType(comboData,selectedRecord,userInfo,masterData,optCopyRegType){return function(dispatch){dispatch(initRequest(true));rsapi.post('approvalconfig/getCopyRegSubType',{nregtypecode:comboData.value,userinfo:userInfo}).then(function(response){var RegistrationSubTypeListMap=constructOptionList(response.data.CopyRegSubType||[],\"nregsubtypecode\",\"sregsubtypename\",'ascending','nsorter',false);var optCopyRegSubType=RegistrationSubTypeListMap.get(\"OptionList\");selectedRecord['regsubtype']=response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[];dispatch({type:DEFAULT_RETURN,payload:{operation:\"copy\",openModal:true,loading:false,optCopyRegType:optCopyRegType,optCopyRegSubType:optCopyRegSubType,selectedRecord:selectedRecord,masterData:masterData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function setDefault(inputObj,event){var flag=inputObj.flag,napprovalconfigrolecode=inputObj.napprovalconfigrolecode,napprovalsubtypecode=inputObj.napprovalsubtypecode,userInfo=inputObj.userInfo,masterData=inputObj.masterData;var rowData=inputObj.selectedRecord;return function(dispatch){if(event.target.checked){var inputData={};var url='';if(flag===1){inputData={napprovalconfigrolecode:napprovalconfigrolecode,napprovalfiltercode:rowData.napprovalfiltercode,napprovalsubtypecode:napprovalsubtypecode,ntransactionstatus:rowData.ntransactionstatus,napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,userinfo:userInfo};url='approvalconfig/setDefaultFilterStatus';}else{inputData={napprovalconfigrolecode:napprovalconfigrolecode,napprovaldecisioncode:rowData.napprovaldecisioncode,napprovalsubtypecode:napprovalsubtypecode,ntransactionstatus:rowData.ntransactionstatus,napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,userinfo:userInfo};url='approvalconfig/setDefaultDecisionStatus';}dispatch(initRequest(true));rsapi.post(url,inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{showAccordion:true,roleFilters:response.data.roleFilters,roleValidations:response.data.roleValidations,roleDecisions:response.data.roleDecisions,roleActions:response.data.roleActions,roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),versionConfig:response.data.versionConfig}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}export function approveVersion(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approvalconfig/getDesignTemplateMapping\",_objectSpread({},inputParam.inputData)).then(function(response){var designTemplateMapping=constructOptionList(response.data.DesignTemplateMapping,\"ndesigntemplatemappingcode\",\"sregtemplatename\");var data=designTemplateMapping.get(\"OptionList\");var selectedRecord=data[0]?{'ndesigntemplatemappingcode':_objectSpread({},data[0])}:{};dispatch({type:DEFAULT_RETURN,payload:{loading:false,designTemplateMapping:data,selectedTemplate:data.length>0&&data[0].item.jsondata,openModal:true,subSampleCheck:response.data.subSampleCheck,subSampleTemplate:response.data.subSampleTemplate,operation:inputParam.operation,ncontrolcode:inputParam.ncontrolcode,// selectedRecord:{'ndesigntemplatemappingcode':{...data[0]}}\nselectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/ApprovalConfigAction.js"],"names":["rsapi","DEFAULT_RETURN","constructOptionList","sortData","toast","initRequest","updateStore","transactionStatus","intl","openModal","operation","napprovalconfigcode","napprovalsubtypecode","userInfo","ncontrolcode","ntreeversiontempcode","dispatch","inputData","userinfo","post","then","response","filterStatusOptionsMap","data","availableFilterStatus","undefined","validationStatusOptionsMap","availableValidStatus","approvalStatusOptionsMap","approvalStatus","decisionStatusOptionsMap","availableDecisionStatus","checklistOptionsMap","checklist","filterStatusOptions","get","validationStatusOptions","approvalStatusOptions","decisionStatusOptions","checklistOptions","userRoleTree","userroletree","validStatusList","topLevelValidStatus","filter","item","ntranscode","COMPLETED","topLevelValidStatusMap","topLevelValidStatusOptions","type","payload","approvalStatusValue","AvailableDecisionStatus","checklistValues","checklistVersionValues","actionStatus","roleConfig","versionConfig","loading","catch","error","status","message","warn","getApprovalConfigVersion","version","masterData","napproveconfversioncode","selectedVersion","showAccordion","approvalconfigRoleNames","selectedRole","length","roleFilters","roleValidations","roleDecisions","roleActions","getRoleDetails","role","inputParamData","napprovalconfigrolecode","getApprovalConfigEditData","napprovalconfigversioncode","APPROVED","RETIRED","formatMessage","id","value","selectedRecord","map","filterStatus","validationStatus","decisionStatus","actionArray","filterStatusValues","nuserrolecode","push","label","stransstatus","validationStatusValues","decisionStatusValues","nchecklistcode","schecklistname","nchecklistversioncode","schecklistversionname","nrecomretestneed","nrecomrecalcneed","nretestneed","nrecalcneed","ncorrectionneed","YES","RECOMMENDRETEST","RECOMMENDRECALC","RETEST","RECALC","CORRECTION","npartialapprovalneed","nsectionwiseapprovalneed","nautoapproval","nesignneed","napprovalstatuscode","versiondetails","sversionname","nneedautoinnerband","nneedautoouterband","action","AUTOAPPROVAL","stransdisplaystatus","nneedautoapproval","AUTOCOMPLETE","nneedautocomplete","nneedjoballocation","nautoallot","sapprovalstatus","getFilterChange","oldState","RegistrationTypeListMap","registrationtype","RegistrationSubTypeListMap","registrationsubtype","RegistrationTypeList","RegistrationSubTypeList","approvalsubtype","approvalSubTypeValue","registrationType","registrationTypeValue","nregtypecode","sregtypename","registrationSubType","registrationSubTypeValue","nregsubtypecode","sregsubtypename","approvalConfigCode","treeVersionTemplate","userroleTemplateValue","getApprovalConfigurationVersion","updateInfo","typeName","organisation","searchRef","current","versionData","searchedData","copyVersion","CopyRegType","CopyRegSubType","optCopyRegType","optCopyRegSubType","getCopySubType","comboData","setDefault","inputObj","event","flag","rowData","target","checked","url","napprovalfiltercode","ntransactionstatus","napprovaldecisioncode","approveVersion","inputParam","designTemplateMapping","DesignTemplateMapping","selectedTemplate","jsondata","subSampleCheck","subSampleTemplate"],"mappings":"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","sourcesContent":["\r\nimport rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {constructOptionList, sortData} from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest,updateStore } from './LoginAction';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\";\r\n\r\n\r\nexport function openModal(operation,napprovalconfigcode,napprovalsubtypecode, userInfo, ncontrolcode,ntreeversiontempcode){\r\n    return function (dispatch) {  \r\n        \r\n        if(userInfo){\r\n\r\n            const inputData={\r\n                napprovalconfigcode:napprovalconfigcode,\r\n                napprovalsubtypecode:napprovalsubtypecode,\r\n                ntreeversiontempcode,\r\n                userinfo:userInfo\r\n            };\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approvalconfig/getUserRoleApprovalConfig\",inputData)\r\n            .then(response=> { \r\n                const filterStatusOptionsMap = constructOptionList(response.data.availableFilterStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const validationStatusOptionsMap = constructOptionList(response.data.availableValidStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const approvalStatusOptionsMap = constructOptionList(response.data.approvalStatus || [], \"ntranscode\", \"stransdisplaystatus\", undefined, undefined, true);\r\n                const decisionStatusOptionsMap = constructOptionList(response.data.availableDecisionStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const checklistOptionsMap = constructOptionList(response.data.checklist || [], \"nchecklistcode\", \"schecklistname\", undefined, undefined, true);\r\n                const filterStatusOptions = filterStatusOptionsMap.get(\"OptionList\");\r\n                const validationStatusOptions = validationStatusOptionsMap.get(\"OptionList\");\r\n                const approvalStatusOptions = approvalStatusOptionsMap.get(\"OptionList\");\r\n                const decisionStatusOptions = decisionStatusOptionsMap.get(\"OptionList\");\r\n                const checklistOptions = checklistOptionsMap.get(\"OptionList\");\r\n\r\n               // const userRoleTree = response.data.userroletree ?  response.data.userroletree.reverse() :[];\r\n                const userRoleTree = response.data.userroletree;\r\n                const validStatusList = response.data.availableValidStatus || [];\r\n                const topLevelValidStatus = validStatusList.filter(item=>\r\n                              item.ntranscode !== transactionStatus.COMPLETED)\r\n                const topLevelValidStatusMap = constructOptionList(topLevelValidStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const topLevelValidStatusOptions = topLevelValidStatusMap.get(\"OptionList\");\r\n\r\n\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    openModal:true,operation,\r\n                     userRoleTree,//:response.data.userroletree,\r\n                                filterStatusOptions,\r\n                                validationStatusOptions,\r\n                                topLevelValidStatusOptions,\r\n                                approvalStatusOptions,\r\n                                decisionStatusOptions,\r\n                                checklistOptions,\r\n                                approvalStatusValue:response.data.AvailableDecisionStatus?response.data.AvailableDecisionStatus:[],\r\n                                checklistValues:[],\r\n                                checklistVersionValues:[],\r\n                                actionStatus:response.data.actionStatus?response.data.actionStatus:[],\r\n                                roleConfig:response.data.roleConfig?sortData(response.data.roleConfig,'ascending','nsorter'):[],\r\n                                versionConfig:response.data.versionConfig?response.data.versionConfig:[],                                \r\n                                ncontrolcode,loading:false\r\n                                }});\r\n                \r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }         \r\n            })\r\n            \r\n        }\r\n    }\r\n    \r\n}\r\nexport function getApprovalConfigVersion(version,napprovalsubtypecode,userInfo,masterData){\r\n    return function (dispatch) {  \r\n        const  inputData = {\"napprovalconfigversioncode\":version.napproveconfversioncode,\r\n                            napprovalsubtypecode:napprovalsubtypecode,\r\n                            userinfo:userInfo\r\n                        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputData)\r\n        .then(response=> { \r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                masterData:{\r\n                ...masterData,\r\n                selectedVersion:response.data.selectedVersion,\r\n                showAccordion:true,\r\n                approvalconfigRoleNames:response.data.approvalconfigRoleNames,\r\n                selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},\r\n                roleFilters:response.data.roleFilters,\r\n                roleValidations:response.data.roleValidations,\r\n                roleDecisions:response.data.roleDecisions,\r\n                roleActions:response.data.roleActions,\r\n                roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                versionConfig:response.data.versionConfig\r\n                },loading:false  \r\n            }}) \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })     \r\n    }\r\n\r\n}\r\nexport function getRoleDetails(inputData){\r\n    return function (dispatch) {  \r\n        let {role,masterData,napprovalsubtypecode,userinfo}=inputData\r\n        //console.log(\"role:\", role);\r\n        let inputParamData={\r\n            napprovalconfigrolecode:role.napprovalconfigrolecode,\r\n            napprovalsubtypecode,\r\n            userinfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigRoleDetails\",inputParamData)\r\n        .then(response=> { \r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                masterData:{\r\n                    ...masterData,\r\n                selectedRole:role,\r\n                showAccordion:true,\r\n                roleFilters:response.data.roleFilters,\r\n                roleValidations:response.data.roleValidations,\r\n                roleDecisions:response.data.roleDecisions,\r\n                roleActions:response.data.roleActions,\r\n                roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                versionConfig:response.data.versionConfig\r\n                },loading:false  \r\n\r\n                                    \r\n            }}) \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n    \r\n    \r\n}\r\nexport function getApprovalConfigEditData(napprovalconfigversioncode,napprovalsubtypecode,userInfo,masterData, ncontrolcode){\r\n    return function (dispatch) { \r\n        if(masterData.selectedVersion[\"ntransactionstatus\"]===transactionStatus.APPROVED || \r\n                 masterData.selectedVersion[\"ntransactionstatus\"] === transactionStatus.RETIRED){\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOEDIT\" }));\r\n         }else{ \r\n           if(userInfo){\r\n            const inputData={\r\n                napprovalconfigversioncode:napprovalconfigversioncode,\r\n                napprovalsubtypecode:napprovalsubtypecode,\r\n                userinfo:userInfo\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approvalconfig/getApprovalConfigEditData\",inputData)\r\n            .then(response=> { \r\n               \r\n                const filterStatusOptionsMap = constructOptionList(response.data.availableFilterStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const validationStatusOptionsMap = constructOptionList(response.data.availableValidStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const approvalStatusOptionsMap = constructOptionList(response.data.approvalStatus || [], \"ntranscode\", \"stransdisplaystatus\", undefined, undefined, true);\r\n                const decisionStatusOptionsMap = constructOptionList(response.data.availableDecisionStatus || [], \"ntranscode\", \"stransstatus\", undefined, undefined, true);\r\n                const checklistOptionsMap = constructOptionList(response.data.checklist || [], \"nchecklistcode\", \"schecklistname\", undefined, undefined, true);\r\n                const filterStatusOptions = filterStatusOptionsMap.get(\"OptionList\");\r\n                const validationStatusOptions = validationStatusOptionsMap.get(\"OptionList\");\r\n                const approvalStatusOptions = approvalStatusOptionsMap.get(\"OptionList\");\r\n                const decisionStatusOptions = decisionStatusOptionsMap.get(\"OptionList\");\r\n                const checklistOptions = checklistOptionsMap.get(\"OptionList\");\r\n\r\n                //ALPD-5533--Vignesh (07-03-2025)-->The edit popup does not show the validation status. \r\n                const topLevelValidStatusOptions = validationStatusOptions.filter(item=>\r\n                    item.value !== transactionStatus.COMPLETED);\r\n\r\n                //const userRoleTree = response.data.userroletree ?  response.data.userroletree.reverse() :[];\r\n                const userRoleTree = response.data.userroletree ?  response.data.userroletree :[];\r\n\r\n                let selectedRecord={}\r\n                userRoleTree.map( role=>{\r\n                    let filterStatus=[];\r\n                    let validationStatus=[];\r\n                    let decisionStatus=[];\r\n                    let actionArray=[];\r\n                    let filterStatusValues=[];\r\n                    \r\n                    response.data[`filterstatus_${role.nuserrolecode}`].map(data=>\r\n                        {\r\n                        filterStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data})\r\n                        filterStatus.push(data.ntranscode)\r\n                        return null;\r\n                        }\r\n                    )\r\n                    let validationStatusValues=[];\r\n                    response.data[`validationstatus_${role.nuserrolecode}`].map(data=>{\r\n                        validationStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data})\r\n                        validationStatus.push(data.ntranscode)\r\n                        return null;\r\n                    }\r\n                        \r\n                    )\r\n                    let decisionStatusValues=[];\r\n                    response.data[`decisionstatus_${role.nuserrolecode}`]&&response.data[`decisionstatus_${role.nuserrolecode}`].map(data=>\r\n                        {\r\n                        decisionStatusValues.push({value:data.ntranscode,label:data.stransstatus,item:data});\r\n                        decisionStatus.push(data.ntranscode);\r\n                        return null;\r\n                        }\r\n                    )\r\n                    let checklistValues=[];\r\n                    response.data[`checklist_${role.nuserrolecode}`].map(data=>\r\n                        checklistValues.push({value:data.nchecklistcode,label:data.schecklistname,item:data})\r\n                        \r\n                    )\r\n                    let checklistVersionValues=[];\r\n                    response.data[`checklist_${role.nuserrolecode}`].map(data=>\r\n                        checklistVersionValues.push({value:data.nchecklistversioncode,label:data.schecklistversionname,item:data})\r\n                        \r\n                    )\r\n                    let nrecomretestneed=response.data[`roledetails_${role.nuserrolecode}`][0].nrecomretestneed\r\n                    let nrecomrecalcneed=response.data[`roledetails_${role.nuserrolecode}`][0].nrecomrecalcneed\r\n                    let nretestneed=response.data[`roledetails_${role.nuserrolecode}`][0].nretestneed\r\n                    let nrecalcneed=response.data[`roledetails_${role.nuserrolecode}`][0].nrecalcneed\r\n                    let ncorrectionneed=response.data[`roledetails_${role.nuserrolecode}`][0].ncorrectionneed\r\n\r\n                    nrecomretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRETEST):actionArray.push()\r\n                    nrecomrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECOMMENDRECALC):actionArray.push()\r\n                    nretestneed===transactionStatus.YES?actionArray.push(transactionStatus.RETEST):actionArray.push()\r\n                    nrecalcneed===transactionStatus.YES?actionArray.push(transactionStatus.RECALC):actionArray.push()\r\n                    ncorrectionneed===transactionStatus.YES?actionArray.push(transactionStatus.CORRECTION):actionArray.push()\r\n\r\n                    selectedRecord[role.nuserrolecode]={\r\n                        // 'IDS_PARTIALAPPROVAL':response.data[`roledetails_${role.nuserrolecode}`][0].npartialapprovalneed,\r\n                        // 'IDS_SECTIONWISEAPPROVE':response.data[`roledetails_${role.nuserrolecode}`][0].nsectionwiseapprovalneed,\r\n                        // 'IDS_RECOMMENDRETEST':response.data[`roledetails_${role.nuserrolecode}`][0].nrecomretestneed,\r\n                        // 'IDS_RECOMMENDRECALC':response.data[`roledetails_${role.nuserrolecode}`][0].nrecomrecalcneed,\r\n                        // 'IDS_RETEST':response.data[`roledetails_${role.nuserrolecode}`][0].nretestneed,\r\n                        // 'IDS_RECALC':response.data[`roledetails_${role.nuserrolecode}`][0].nrecalcneed,\r\n                        // 'IDS_AUTOAPPROVAL':response.data[`roledetails_${role.nuserrolecode}`][0].nautoapproval,\r\n                        // 'IDS_CORRECTION':response.data[`roledetails_${role.nuserrolecode}`][0].ncorrectionneed,\r\n                        // 'IDS_ESIGN':response.data[`roledetails_${role.nuserrolecode}`][0].nesignneed,\r\n                        // 'filterstatus':filterStatus,\r\n                        // 'decisionstatus':decisionStatus,\r\n                        // 'validationstatus':validationStatus,\r\n                        // 'approvalstatus':response.data[`roledetails_${role.nuserrolecode}`][0].napprovalstatuscode,\r\n                        // 'checklist':response.data[`checklist_${role.nuserrolecode}`][0].nchecklistversioncode\r\n                        [`Partial Approval_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].npartialapprovalneed,\r\n                        'IDS_SECTIONWISEAPPROVE':response.data[`roledetails_${role.nuserrolecode}`][0].nsectionwiseapprovalneed,\r\n                        [`Recommend Retest_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].nrecomretestneed,\r\n                        [`Recommend Recalc_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].nrecomrecalcneed,\r\n                        [`ReTest_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].nretestneed,\r\n                        [`ReCalc_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].nrecalcneed,\r\n                        'IDS_AUTOAPPROVAL':response.data[`roledetails_${role.nuserrolecode}`][0].nautoapproval,\r\n                        [`Correction_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].ncorrectionneed,\r\n                        [`Esign_${role.nuserrolecode}`]:response.data[`roledetails_${role.nuserrolecode}`][0].nesignneed,\r\n                        'filterstatus':filterStatus,\r\n                        'decisionstatus':decisionStatus,\r\n                        'validationstatus':validationStatus,\r\n                        'approvalstatus':response.data[`roledetails_${role.nuserrolecode}`][0].napprovalstatuscode,\r\n                        'checklist':response.data[`checklist_${role.nuserrolecode}`][0].nchecklistversioncode\r\n                    }\r\n                    selectedRecord['sversionname']=response.data.versiondetails.sversionname\r\n                    //ALPD-4833--Vignesh R(08-10-2024)\r\n                    selectedRecord['nneedautoinnerband']=response.data.versiondetails.nneedautoinnerband\r\n                    selectedRecord['nneedautoouterband']=response.data.versiondetails.nneedautoouterband\r\n\r\n                    response.data.versionConfig.map(action =>{\r\nif(action.ntranscode===transactionStatus.AUTOAPPROVAL)\r\n{\r\n    selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautoapproval\r\n}\r\nelse if(action.ntranscode===transactionStatus.AUTOCOMPLETE)\r\n{\r\n    selectedRecord[action.stransdisplaystatus]=response.data.versiondetails.nneedautocomplete\r\n}\r\n\r\n                    })\r\n                   \r\n                  \r\n                    selectedRecord['IDS_JOBALLOCATION']=response.data.versiondetails.nneedjoballocation\r\n                    selectedRecord['IDS_AUTOALLOT']=response.data.versiondetails.nautoallot\r\n                    selectedRecord[`approvalstatus_${role.nuserrolecode}`]=[{value:response.data[`roledetails_${role.nuserrolecode}`][0].napprovalstatuscode,label:response.data[`roledetails_${role.nuserrolecode}`][0].sapprovalstatus}]\r\n                    selectedRecord[`filterstatus_${role.nuserrolecode}`]=filterStatusValues\r\n                    selectedRecord[`validationstatus_${role.nuserrolecode}`]=validationStatusValues\r\n                    selectedRecord[`decisionstatus_${role.nuserrolecode}`]=decisionStatusValues\r\n                    selectedRecord[`checklist_${role.nuserrolecode}`]=checklistValues\r\n                    selectedRecord[`checklistVersion_${role.nuserrolecode}`]=checklistVersionValues\r\n                    selectedRecord[`actionStatus_${role.nuserrolecode}`]=actionArray\r\n                    //selectedRecord[role.nuserrolecode]=response.data[`roledetails_${role.nuserrolecode}`][0]\r\n\r\n                    return null;\r\n                });\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    openModal:true,operation:\"update\",\r\n                    userRoleTree,\r\n                    //userRoleTree:sortData(response.data.userroletree,'ascending','nlevelno'),\r\n                    filterStatusOptions,\r\n                    validationStatusOptions,\r\n                    approvalStatusOptions,\r\n                    decisionStatusOptions,\r\n                    checklistOptions,\r\n                    actionStatus:response.data.actionStatus?response.data.actionStatus:[],\r\n                    roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                    versionConfig:response.data.versionConfig,\r\n                    selectedRecord,masterData,ncontrolcode,loading:false,\r\n                   //ALPD-5533--Vignesh (07-03-2025)-->The edit popup does not show the validation status. \r\n\t\t\t\t\ttopLevelValidStatusOptions\r\n\r\n                }})\r\n            })\r\n            .catch(error => {\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }         \r\n            })\r\n        } \r\n      }\r\n    }\r\n}\r\nexport function getFilterChange(inputParamData,oldState){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigFilter\",inputParamData.inputData)\r\n            .then(response =>{\r\n                \r\n                const RegistrationTypeListMap = constructOptionList( response.data.registrationtype || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nsorter', false);\r\n                const RegistrationSubTypeListMap = constructOptionList( response.data.registrationsubtype || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nsorter', false);\r\n                let RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n                let RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    masterData:{\r\n                        ...inputParamData.masterData,\r\n                        approvalsubtype:oldState.approvalsubtype,\r\n                        approvalSubTypeValue:oldState.approvalSubTypeValue,\r\n                        RegistrationTypeList:response.data.registrationtype?RegistrationTypeList:oldState.RegistrationTypeList,\r\n                        RegistrationSubTypeList:response.data.registrationsubtype?RegistrationSubTypeList:oldState.RegistrationSubTypeList,\r\n                        registrationType:response.data.registrationtype&&response.data.registrationtype.length>0?response.data.registrationtype:oldState.registrationtype,\r\n                        //registrationType:response.data.registrationtype&&response.data.registrationtype.length>0?sortData(response.data.registrationtype,\"ascending\",\"nregtypecode\"):oldState.registrationtype,\r\n                        registrationTypeValue:response.data.registrationtype?response.data.registrationtype.length>0?{value:response.data.registrationtype[0].nregtypecode,label:response.data.registrationtype[0].sregtypename}:oldState.registrationTypeValue:oldState.registrationTypeValue,\r\n                        //registrationSubType:response.data.registrationsubtype&&response.data.registrationsubtype.length>0?sortData(response.data.registrationsubtype,\"descending\",\"nregsubtypecode\"):oldState.registrationsubtype,\r\n                        registrationSubType:response.data.registrationsubtype && response.data.registrationsubtype.length > 0 ? response.data.registrationsubtype : oldState.registrationsubtype,\r\n                        // ALPD-5306    Added validation by Vishakh for getting front end value if response is undefined\r\n                        registrationSubTypeValue: response.data.registrationsubtype ? response.data.registrationsubtype.length>0 ? {value:response.data.registrationsubtype[0].nregsubtypecode,label:response.data.registrationsubtype[0].sregsubtypename} :  oldState.registrationSubTypeValue : oldState.registrationSubTypeValue,\r\n                        approvalConfigCode:response.data.approvalConfigCode,\r\n                        treeVersionTemplate:response.data.treeVersionTemplate,\r\n                        userroleTemplateValue: response.data.userroleTemplateValue ||{},\r\n\r\n                        // versionData:sortData(response.data.versionData),\r\n                        // selectedVersion:response.data.selectedVersion,\r\n                        // approvalconfigRoleNames:response.data.approvalconfigRoleNames,\r\n                        // showAccordion:true,\r\n                        // roleFilters:response.data.roleFilters,\r\n                        // roleValidations:response.data.roleValidations,\r\n                        // roleDecisions:response.data.roleDecisions,\r\n                        // roleActions:response.data.roleActions,\r\n                        // roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                        // versionConfig:response.data.versionConfig,\r\n                        // searchedData:undefined\r\n                    },loading:false\r\n                    \r\n\r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovalConfigurationVersion(inputParamData){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approvalconfig/getApprovalConfigVersion\",inputParamData.inputData)\r\n            .then(response =>{\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData: [], organisation: undefined, }\r\n                  }\r\n                dispatch(updateStore(updateInfo))\r\n                //ALPD-4803 done by Dhanushya RI,To check searchref key is present or not\r\n                if(inputParamData.searchRef!==undefined && inputParamData.searchRef && inputParamData.searchRef.current && inputParamData.searchRef.current.value!==\"\" ){\r\n                    inputParamData.searchRef.current.value=\"\"\r\n                    inputParamData.masterData[\"searchedData\"]=undefined\r\n                }\r\n\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                    masterData:{\r\n                        ...inputParamData.masterData,\r\n                        versionData:sortData(response.data.versionData),\r\n                        selectedVersion:response.data.selectedVersion,\r\n                        approvalconfigRoleNames:response.data.approvalconfigRoleNames,\r\n                        selectedRole:response.data.approvalconfigRoleNames?response.data.approvalconfigRoleNames.length>0?sortData(response.data.approvalconfigRoleNames,'ascending','nlevelno')[0]:{}:{},\r\n                        showAccordion:true,\r\n                        roleFilters:response.data.roleFilters,\r\n                        roleValidations:response.data.roleValidations,\r\n                        roleDecisions:response.data.roleDecisions,\r\n                        roleActions:response.data.roleActions,\r\n                        roleConfig:response.data.roleConfig&&response.data.roleConfig.length>0&&sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                        versionConfig:response.data.versionConfig,\r\n                        searchedData:undefined\r\n                    },loading:false\r\n                    \r\n\r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function copyVersion(napprovalsubtypecode,userInfo,masterData,ncontrolcode){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true)); \r\n        rsapi.post('approvalconfig/getCopyRegType',{napprovalconfigversioncode: masterData.selectedVersion.napproveconfversioncode,napprovalsubtypecode:napprovalsubtypecode,userinfo:userInfo})\r\n                .then(response =>{\r\n                    let selectedRecord={};\r\n                    const RegistrationTypeListMap = constructOptionList(response.data.CopyRegType || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nsorter', false);\r\n                    const RegistrationSubTypeListMap = constructOptionList(response.data.CopyRegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nsorter', false);\r\n                    let optCopyRegType = RegistrationTypeListMap.get(\"OptionList\");\r\n                    let optCopyRegSubType = RegistrationSubTypeListMap.get(\"OptionList\");\r\n                    selectedRecord['regtype']=response.data.CopyRegType.length>0?{value:response.data.CopyRegType[0].nregtypecode,label:response.data.CopyRegType[0].sregtypename}:[]\r\n                    selectedRecord['regsubtype']=response.data.CopyRegSubType?response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[]:[]\r\n                    dispatch({type: DEFAULT_RETURN, payload:{\r\n                        operation:\"copy\",openModal:true,\r\n                        optCopyRegSubType,\r\n                        optCopyRegType,\r\n                        selectedRecord,\r\n                        masterData,ncontrolcode,loading:false  \r\n                    }})\r\n                })\r\n                .catch(error=>{\r\n                    dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n    }\r\n\r\n}\r\nexport function getCopySubType(comboData,selectedRecord,userInfo,masterData,optCopyRegType){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post('approvalconfig/getCopyRegSubType',{nregtypecode:comboData.value,userinfo:userInfo})\r\n        .then(response =>{\r\n            const RegistrationSubTypeListMap = constructOptionList(response.data.CopyRegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nsorter', false);\r\n            let optCopyRegSubType = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            selectedRecord['regsubtype']=response.data.CopyRegSubType.length>0?{value:response.data.CopyRegSubType[0].nregsubtypecode,label:response.data.CopyRegSubType[0].sregsubtypename}:[]\r\n            dispatch({type: DEFAULT_RETURN, payload:{\r\n                operation:\"copy\",openModal:true,loading:false  ,\r\n                optCopyRegType,\r\n                optCopyRegSubType,\r\n                selectedRecord,\r\n                masterData\r\n            }})\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500) {\r\n                toast.error(error.message);\r\n            }\r\n            else {\r\n                toast.warn(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}\r\nexport function setDefault(inputObj,event){\r\n    let {flag,napprovalconfigrolecode,napprovalsubtypecode,userInfo,masterData}=inputObj;\r\n    let rowData=inputObj.selectedRecord\r\n    return function(dispatch){\r\n        if(event.target.checked){\r\n            let inputData={}\r\n            let url='';\r\n            if(flag===1){\r\n                inputData={\r\n                    napprovalconfigrolecode:napprovalconfigrolecode,\r\n                    napprovalfiltercode:rowData.napprovalfiltercode,\r\n                    napprovalsubtypecode:napprovalsubtypecode,\r\n                    ntransactionstatus:rowData.ntransactionstatus,\r\n                    napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,\r\n                    userinfo:userInfo\r\n                }\r\n                url='approvalconfig/setDefaultFilterStatus'\r\n            }else{\r\n                inputData={\r\n                    napprovalconfigrolecode:napprovalconfigrolecode,\r\n                    napprovaldecisioncode:rowData.napprovaldecisioncode,\r\n                    napprovalsubtypecode:napprovalsubtypecode,\r\n                    ntransactionstatus:rowData.ntransactionstatus,\r\n                    napprovalconfigversioncode:masterData.selectedVersion.napprovalconfigversioncode,\r\n                    userinfo:userInfo\r\n                }\r\n                url='approvalconfig/setDefaultDecisionStatus'\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(url,inputData)\r\n            .then(response =>{\r\n                dispatch({type: DEFAULT_RETURN, payload:{\r\n                \r\n                    masterData:{\r\n                        ...masterData,\r\n                        showAccordion:true,\r\n                        roleFilters:response.data.roleFilters,\r\n                        roleValidations:response.data.roleValidations,\r\n                        roleDecisions:response.data.roleDecisions,\r\n                        roleActions:response.data.roleActions,\r\n                        roleConfig:sortData(response.data.roleConfig,'ascending','nsorter'),\r\n                        versionConfig:response.data.versionConfig\r\n                    },loading:false  \r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function approveVersion(inputParam){\r\n    return function(dispatch){\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approvalconfig/getDesignTemplateMapping\",{...inputParam.inputData})\r\n            .then(response =>{\r\n                const designTemplateMapping=constructOptionList(response.data.DesignTemplateMapping,\"ndesigntemplatemappingcode\",\"sregtemplatename\");\r\n                const data=designTemplateMapping.get(\"OptionList\");\r\n                const selectedRecord = data[0] ? {'ndesigntemplatemappingcode':{...data[0]}} : {};\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:{\r\n                    loading:false ,\r\n                    designTemplateMapping: data,\r\n                    selectedTemplate:data.length>0&&data[0].item.jsondata,\r\n                    openModal:true,\r\n                    subSampleCheck:response.data.subSampleCheck,\r\n                    subSampleTemplate:response.data.subSampleTemplate,\r\n                    operation:inputParam.operation,\r\n                    ncontrolcode:inputParam.ncontrolcode,\r\n                    // selectedRecord:{'ndesigntemplatemappingcode':{...data[0]}}\r\n                    selectedRecord\r\n                }})\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}