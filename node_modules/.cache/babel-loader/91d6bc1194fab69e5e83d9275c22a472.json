{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\Material\\\\Material.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Row, Col, Nav, Card, Button, FormGroup, FormLabel } from 'react-bootstrap';\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\nimport { process } from '@progress/kendo-data-query';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faSave, faCopy, faPlus, faSync, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\nimport { showEsign, getControlMap, constructOptionList, sortData, getSameRecordFromTwoArrays, onDropAttachFileList, deleteAttachmentDropZone, create_UUID } from '../../components/CommonScript';\nimport { callService, updateStore, crudMaster, filterColumnData, validateEsignCredential, viewAttachment } from '../../actions';\nimport { initialcombochangeget, addSafetyInstructions, getAddMaterialPopup, getMaterialDetails, addMaterialProperty, getMaterialEdit, getMaterialByTypeCode, getAddMaterialSectionPopup, getMaterialSectionEdit, addMaterialFile } from '../../actions/MaterialAction';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\nimport { ContentPanel, AtSubCard, ReadOnlyText } from '../../components/App.styles';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport ReactTooltip from 'react-tooltip';\nimport MaterialFilter from './MaterialFilter';\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\nimport MaterialSectionTab from './MaterialSectionTab';\nimport AddMaterialSection from './AddMaterialSection';\nimport { Affix } from 'rsuite';\nimport MaterialFileTab from './MaterialFileTab';\nimport AddMaterialSafetyInstructionTab from './AddMaterialSafetyInstructionTab';\nimport AddMaterialFile from './AddMaterialFile';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Material extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.expandChange = event => {\n      const isExpanded = event.dataItem.expanded === undefined ? event.dataItem.aggregates : event.dataItem.expanded;\n      event.dataItem.expanded = !isExpanded;\n      this.setState({ ...this.state\n      });\n    };\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.handleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropMaterialFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.onSaveMaterialFile = () => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let testFileArray = [];\n      let testFile = {\n        nmaterialcode: this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode,\n        nmaterialfilecode: selectedRecord.nmaterialfilecode ? selectedRecord.nmaterialfilecode : 0,\n        nstatus: transactionStatus.ACTIVE,\n        nattachmenttypecode,\n        ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, testFile);\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\n            tempData[\"sfilename\"] = file.name;\n            tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            testFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          testFile[\"sfilename\"] = selectedRecord.sfilename;\n          testFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n          testFile[\"nlinkcode\"] = transactionStatus.NA;\n          testFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          testFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          testFileArray.push(testFile);\n        }\n      } else {\n        testFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n        testFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\n        testFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n        testFile[\"ssystemfilename\"] = \"\";\n        testFile[\"nfilesize\"] = 0;\n        testFileArray.push(testFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"materialfile\", JSON.stringify(testFileArray[0]));\n      let inputParam;\n\n      if (this.props.Login.operation === 'create') {\n        inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"create\",\n          classUrl: \"material\",\n          methodUrl: \"MaterialFile\"\n        };\n      } else {\n        inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"update\",\n          classUrl: \"material\",\n          methodUrl: \"MaterialFile\"\n        };\n      }\n\n      return inputParam;\n    };\n\n    this.getPreviewTemplate = (masterData, userInfo, editId) => {\n      let data = [];\n      const withoutCombocomponent = [];\n      const Layout = JSON.parse(this.props.Login.templateData);\n      Layout.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n              if (componentrow.inputtype === \"combo\") {\n                data.push(componentrow);\n              } else {\n                withoutCombocomponent.push(componentrow);\n              }\n            }) : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component);\n          });\n        });\n      });\n      const comboComponents = data;\n      this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord, null, comboComponents, withoutCombocomponent);\n    };\n\n    this.getPreviewTemplateOnchange = (comboData, control) => {\n      let data = [];\n      const withoutCombocomponent = [];\n      const Layout = JSON.parse(this.props.Login.templateData);\n      Layout.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n              if (componentrow.inputtype === \"combo\") {\n                data.push(componentrow);\n              } else {\n                withoutCombocomponent.push(componentrow);\n              }\n            }) : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component);\n          });\n        });\n      });\n      const comboComponents = data;\n      const childComboList = getSameRecordFromTwoArrays(comboComponents, control.child, \"label\");\n      let childColumnList = {};\n      childComboList.map(columnList => {\n        const val = this.comboChild(comboComponents, columnList, childColumnList, false);\n        childColumnList = val.childColumnList;\n      });\n      const parentList = getSameRecordFromTwoArrays(withoutCombocomponent, control.child, \"label\");\n      const inputParem = {\n        child: control.child,\n        source: control.source,\n        primarykeyField: control.valuemember,\n        value: comboData.value,\n        item: comboData.item\n      };\n      this.props.getChildValues(inputParem, this.props.Login.userInfo, this.state.selectedRecord, this.props.Login.comboData, childComboList, childColumnList, withoutCombocomponent, [...childComboList, ...parentList]);\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      {\n        let dataresultarr = [];\n        this.props.Login.masterData[\"MaterialSection\"] && this.props.Login.masterData[\"MaterialSection\"].map(temp => {\n          dataresultarr.push(temp.jsondata);\n        });\n        tabMap.set(\"IDS_MATERIALFILE\", /*#__PURE__*/React.createElement(MaterialFileTab, {\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          userInfo: this.props.Login.userInfo,\n          deleteRecord: this.deleteRecordmain,\n          MaterialFile: this.props.Login.masterData.MaterialFile || [],\n          addMaterialFile: this.props.addMaterialFile,\n          viewMaterialFile: this.viewMaterialFile,\n          screenName: \"IDS_MATERIALFILE\",\n          settings: this.props.settings,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 17\n          }\n        }));\n        this.props.Login.masterData.ismaterialSectionneed === 3 && tabMap.set(\"IDS_MATERIALSECTION\", /*#__PURE__*/React.createElement(MaterialSectionTab, {\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          dataResult: process(dataresultarr, this.props.screenName === undefined || this.props.screenName === \"IDS_MATERIALSECTION\" ? this.state.sectionDataState : {\n            skip: 0,\n            take: 10\n          }),\n          dataState: this.props.screenName === undefined || this.props.screenname === \"IDS_MATERIALSECTION\" ? this.state.sectionDataState : {\n            skip: 0,\n            take: 10\n          },\n          dataStateChange: event => this.setState({\n            sectionDataState: event.dataState\n          }),\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          getTestDetails: this.props.getTestDetails,\n          getAddMaterialSectionPopup: this.props.getAddMaterialSectionPopup,\n          addParameter: this.addMaterialSection,\n          dataState: {\n            skip: 0,\n            take: 10\n          },\n          deleteRecord: this.deleteRecordmain,\n          fetchRecord: this.props.getMaterialSectionEdit,\n          selectedRecord: this.props.Login.selectedRecord,\n          screenName: \"IDS_MATERIALSECTION\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 21\n          }\n        }));\n      }\n      return tabMap;\n    };\n\n    this.deleteRecordmain = deleteParam => {\n      const methodUrl = deleteParam.methodUrl;\n      const selected = deleteParam.methodUrl === 'MaterialSection' ? JSON.stringify(deleteParam.selectedRecord) : JSON.stringify(deleteParam.selectedRecord[\"jsondata\"]);\n      let dataState = undefined;\n\n      if (this.props.screenName === \"IDS_SECTION\") {\n        dataState = this.state.sectionDataState;\n      } else if (this.props.screenName === \"IDS_METHOD\") {\n        dataState = this.state.methodDataState;\n      } else if (this.props.screenName === \"IDS_INSTRUMENTCATEGORY\") {\n        dataState = this.state.instrumentCatDataState;\n      }\n\n      const inputParam = {\n        inputData: {\n          ncontrolCode: deleteParam.ncontrolCode,\n          [methodUrl.toLowerCase()]: selected,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"material\",\n        operation: deleteParam.operation,\n        ncontrolCode: deleteParam.ncontrolCode,\n        methodUrl: methodUrl,\n        screenName: \"IDS_MATERIAL\",\n        dataState\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_MATERIAL\",\n            operation: deleteParam.operation,\n            selectedRecord: {}\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\n      }\n    };\n\n    this.addMaterialSection = param => {\n      let showMaterialSection = this.props.Login.showMaterialSection;\n      let ncontrolCode = this.props.Login.ncontrolCode;\n      let openModal = this.props.Login.openModal;\n      let isneedcombomulti = this.props.Login.isneedcombomulti;\n      isneedcombomulti = false;\n      showMaterialSection = true;\n      openModal = true;\n      ncontrolCode = param;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showMaterialSection,\n          isneedcombomulti,\n          openModal\n        }\n      };\n      this.props.getAddMaterialSectionPopup(this.props.Login.masterData, this.props.Login.userInfo, updateInfo, ncontrolCode);\n    };\n\n    this.ListmasterSwitch = (event, nusersrolehidescreencode) => {\n      let inputData = [];\n      const selectedSwitch = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      const inputParam = {\n        needrights: selectedSwitch,\n        nusersrolehidescreencode: nusersrolehidescreencode,\n        nuserrolecode: this.state.selectedcombo[\"nuserrolecode\"].value,\n        nusercodemain: this.state.selectedcombouser[\"nusercode\"].value\n      };\n      this.props.ListSwitchUpdate(inputParam, this.props.Login.masterData, this.props.Login.userInfo);\n    };\n\n    this.switchGroupBy = event => {\n      const selectedSwitch = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      let dataState = this.state.dataState || {};\n\n      if (selectedSwitch === transactionStatus.YES) {\n        dataState = { ...dataState,\n          group: [{\n            field: 'screenname'\n          }]\n        };\n      } else {\n        dataState = {\n          skip: dataState.skip,\n          take: dataState.take\n        };\n      }\n\n      this.setState({\n        selectedSwitch,\n        dataState\n      });\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      let inputData = [];\n      inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\n      inputData[\"userrnameList\"] = this.state.userrnameList;\n      const inputParam = {\n        classUrl: \"material\",\n        methodUrl: \"getMaterialByTypeCode\",\n        displayName: \"Material\",\n        inputData: inputData\n      };\n\n      if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\n        this.props.getMaterialByTypeCode(inputParam, this.state.selectedcombo, this.state.selectedcombouser, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSERROLE\"\n        }));\n      }\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.viewMaterialFile = filedata => {\n      const inputParam = {\n        inputData: {\n          materialfile: JSON.stringify(filedata['jsondata']),\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"material\",\n        operation: \"view\",\n        methodUrl: \"AttachedMaterialFile\",\n        screenname: \"IDS_MATERIAL\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let showMaterialSection = this.props.Login.showMaterialSection;\n      let isneedcombomulti = this.props.Login.isneedcombomulti;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\n          loadEsign = false;\n          openModal = false;\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openModal = false;\n        showMaterialSection = false;\n        isneedcombomulti = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          showMaterialSection,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData != null) {\n        if (fieldName === \"nmaterialtypecode\") {\n          const selectedcombo = this.state.selectedcombo || {};\n          selectedcombo[fieldName] = comboData;\n          this.searchRef.current.value = \"\";\n          const inputParamcombo = {\n            nmaterialtypecode: comboData.item.nmaterialtypecode\n          };\n          const selectedcombouser = this.state.selectedcombouser || {};\n          this.props.initialcombochangeget(comboData.item.nmaterialtypecode, this.props.Login.masterData, this.props.Login.userInfo);\n        } else if (fieldName === \"nmaterialcatcode\") {\n          const selectedcombouser = this.state.selectedcombouser || {};\n          selectedcombouser[fieldName] = comboData;\n          this.setState({\n            selectedcombouser\n          });\n        } else if (fieldName === \"nmaterialsectioncode\") {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[\"nmaterialsectioncode\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"nlinkcode\") {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[\"nlinkcode\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName.displaymember === \"smaterialcatname\" || fieldName.displaymember === \"sunitname\" || fieldName.displaymember === \"speriodname\") {\n          const selectedcombouser = this.state.selectedcombouser || {};\n          selectedcombouser[fieldName] = comboData;\n          this.setState({\n            selectedcombouser\n          });\n          let comboName = fieldName.label;\n          const selectedRecord = this.state.selectedRecord || {};\n\n          if (comboData) {\n            selectedRecord[comboName] = comboData;\n          } else {\n            selectedRecord[comboName] = [];\n          }\n\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName.label === \"IDS_STORAGECONDITION\") {\n          let comboName = fieldName.label;\n          const selectedRecord = this.state.selectedRecord || {};\n\n          if (comboData) {\n            selectedRecord[comboName] = comboData;\n          } else {\n            selectedRecord[comboName] = [];\n          }\n\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } //For Onchange\n        else if (fieldName.displaymember === \"smaterialcatname1\") {\n          let data = [];\n          const withoutCombocomponent = [];\n        } else if (fieldName === \"value\") {\n          const comboitem = this.state.comboitem || {};\n          comboitem[fieldName] = comboData;\n          this.setState({\n            comboitem\n          });\n        } else if (fieldName === \"nformcode\") {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[\"nformcode\"] = comboData;\n          let availableDatas = [];\n          this.state.selectedRecord.nformcode.map(data => {\n            return availableDatas.push(data.item);\n          });\n          this.setState({\n            selectedRecord,\n            availableDatas\n          });\n        }\n      }\n    };\n\n    this.onInputOnChange = (event, optional1, optional2) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (this.props.Login.screenname !== \"IDS_MATERIALFILE\") {\n        if (event.target.type === 'checkbox') {\n          if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n\n        this.setState({\n          selectedRecord\n        });\n      } else {\n        if (event.target.type === 'checkbox') {\n          selectedRecord[event.target.name] = event.target.checked === true ? optional2[0] : optional2[1];\n        } else if (event.target.type === 'radio') {\n          selectedRecord[event.target.name] = optional2;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.saveClick = (selectedRecord, saveType, formRef) => {\n      let operation = \"update\";\n      let methodUrl = \"\";\n      let inputData = [];\n      let postParam = {\n        inputListName: \"ScreenRights\",\n        selectedObject: \"SelectedScreenRights\",\n        primaryKeyField: \"nusersrolehidescreencode\"\n      };\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights;\n      inputData[\"nflag\"] = transactionStatus.ACTIVE;\n      inputData[\"screenrights\"] = selectedRecord;\n\n      if (saveType === 1) {\n        inputData[\"needrights\"] = selectedRecord[\"needrights\"];\n        inputData[\"nneedesign\"] = null;\n        methodUrl = \"ControlRights\";\n      } else {\n        inputData[\"nneedesign\"] = selectedRecord[\"nneedesign\"];\n        methodUrl = \"Esign\";\n      }\n\n      const inputParam = {\n        classUrl: \"userscreenhide\",\n        methodUrl: \"ScreenHideControlRights\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: inputData,\n        operation: operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParam,\n        dataState: this.state.dataState\n      };\n      this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let inputParam = {};\n      let varmain = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = undefined;\n\n      if (this.props.Login.screenname === \"IDS_MATERIAL\") {\n        if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\n          varmain = \"IDS_STANDARDMATERIALNAME\";\n        } else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\n          varmain = \"IDS_VOLUMETRICMATERIALNAME\";\n        } else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\n          varmain = \"IDS_MATERIALNAME\";\n        }\n\n        inputData[\"Material\"] = {\n          \"IDS_PREFIX\": this.state.selectedRecord.IDS_PREFIX,\n          \"IDS_REORDERLEVEL\": this.state.selectedRecord.IDS_REORDERLEVEL,\n          \"IDS_OPENEXIPIRY\": this.state.selectedRecord.IDS_OPENEXIPIRY,\n          \"IDS_NEXTVALIDATION\": this.state.selectedRecord.IDS_NEXTVALIDATION,\n          \"IDS_EXPIRYPOLICY\": this.state.selectedRecord.IDS_EXPIRYPOLICY,\n          \"IDS_REMARKS\": this.state.selectedRecord.IDS_REMARKS,\n          \"nmaterialcatcode\": this.state.selectedcombouser[\"nmaterialcatcode\"].value,\n          \"nmaterialtypecode\": this.state.selectedcombo[\"nmaterialtypecode\"].value,\n          \"IDS_OPENEXIPIRYPERIOD\": {\n            value: this.state.selectedRecord[\"IDS_OPENEXIPIRYPERIOD\"] && this.state.selectedRecord[\"IDS_OPENEXIPIRYPERIOD\"].value,\n            label: this.state.selectedRecord[\"IDS_OPENEXIPIRYPERIOD\"] && this.state.selectedRecord[\"IDS_OPENEXIPIRYPERIOD\"].label\n          },\n          \"IDS_NEXTVALIDATIONPERIOD\": {\n            value: this.state.selectedRecord[\"IDS_NEXTVALIDATIONPERIOD\"] && this.state.selectedRecord[\"IDS_NEXTVALIDATIONPERIOD\"].value,\n            label: this.state.selectedRecord[\"IDS_NEXTVALIDATIONPERIOD\"] && this.state.selectedRecord[\"IDS_NEXTVALIDATIONPERIOD\"].label\n          },\n          \"IDS_EXPIRYPOLICYPERIOD\": {\n            value: this.state.selectedRecord[\"IDS_EXPIRYPOLICYPERIOD\"] && this.state.selectedRecord[\"IDS_EXPIRYPOLICYPERIOD\"].value,\n            label: this.state.selectedRecord[\"IDS_EXPIRYPOLICYPERIOD\"] && this.state.selectedRecord[\"IDS_EXPIRYPOLICYPERIOD\"].label\n          },\n          \"IDS_MATERIALCAT\": {\n            label: this.state.selectedRecord[\"IDS_MATERIALCAT\"].label,\n            value: this.state.selectedRecord[\"IDS_MATERIALCAT\"].value\n          },\n          \"IDS_BASICUOM\": {\n            label: this.state.selectedRecord[\"IDS_BASICUOM\"].label,\n            value: this.state.selectedRecord[\"IDS_BASICUOM\"].value\n          },\n          \"IDS_STORAGECONDITION\": {\n            label: this.state.selectedRecord[\"IDS_STORAGECONDITION\"] && this.state.selectedRecord[\"IDS_STORAGECONDITION\"].label,\n            value: this.state.selectedRecord[\"IDS_STORAGECONDITION\"] && this.state.selectedRecord[\"IDS_STORAGECONDITION\"].value\n          },\n          \"IDS_MATERIALSYNONYM\": this.state.selectedRecord[\"IDS_MATERIALSYNONYM\"] && this.state.selectedRecord[\"IDS_MATERIALSYNONYM\"],\n          \"IDS_QUARANTINE\": this.state.selectedRecord[\"IDS_QUARANTINE\"] && this.state.selectedRecord[\"IDS_QUARANTINE\"],\n          \"IDS_NOEXPIRY\": this.state.selectedRecord[\"IDS_NOEXPIRY\"] && this.state.selectedRecord[\"IDS_NOEXPIRY\"],\n          \"IDS_REUSABLE\": this.state.selectedRecord[\"IDS_REUSABLE\"] && this.state.selectedRecord[\"IDS_REUSABLE\"],\n          \"IDS_QUARANTINENAME\": this.state.selectedRecord[\"IDS_QUARANTINE\"] && this.state.selectedRecord[\"IDS_QUARANTINE\"] === transactionStatus.YES ? 'Yes' : 'No',\n          \"IDS_NOEXPIRYNAME\": this.state.selectedRecord[\"IDS_NOEXPIRY\"] && this.state.selectedRecord[\"IDS_NOEXPIRY\"] === transactionStatus.YES ? 'Yes' : 'No',\n          \"IDS_REUSABLENAME\": this.state.selectedRecord[\"IDS_REUSABLE\"] && this.state.selectedRecord[\"IDS_REUSABLE\"] === transactionStatus.YES ? 'Yes' : 'No'\n        };\n        inputData[\"Material\"][varmain] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ? this.state.selectedRecord.IDS_STANDARDMATERIALNAME : this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ? this.state.selectedRecord.IDS_VOLUMETRICMATERIALNAME : this.state.selectedRecord.IDS_MATERIALNAME;\n        inputData[\"materialJson\"] = JSON.stringify(inputData[\"Material\"]);\n        inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"].value;\n        inputData[\"nmaterialcatcode\"] = this.state.selectedcombouser[\"nmaterialcatcode\"].value;\n\n        if (this.props.Login.operation === 'create') {\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"Material\",\n            inputData: inputData,\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            postParam,\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef,\n            dataState: this.state.dataState\n          };\n        } else {\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode;\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"Material\",\n            inputData: inputData,\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            postParam,\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef,\n            dataState: this.state.dataState\n          };\n        }\n\n        const masterData = this.props.Login.masterData;\n\n        if (this.props.Login.screenName === \"IDS_MATERIAL\") {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\n          }\n        } else {\n          if (this.props.Login.masterData.copyScreenRights ? this.props.Login.masterData.copyScreenRights.length > 0 : false) {\n            this.ConfirmComponent();\n          } else {\n            //  if (this.props.Login.isSelectedRecordChange) {\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n              // let isSelectedRecordChange = this.props.Login.isSelectedRecordChange\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  loadEsign: true,\n                  screenData: {\n                    inputParam,\n                    masterData\n                  },\n                  saveType\n                }\n              }; // this.setState({ isSelectedRecordChange: false })\n\n              this.props.updateStore(updateInfo);\n            } else {\n              this.props.crudMaster(inputParam, masterData, \"openModal\");\n            } //  }\n            // else {\n            //     const updateInfo = {\n            //         typeName: DEFAULT_RETURN,\n            //         data: {\n            //             openModal: false,\n            //             isSelectedRecordChange: false\n            //         }\n            //     }\n            //     this.props.updateStore(updateInfo);\n            // }\n\n          }\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALSAFETYINSTRUCTIONS\") {\n        const dynamicobj = {\n          \"IDS_INFALMMABLE\": this.state.selectedRecord[\"IDS_INFALMMABLE\"],\n          \"IDS_KEEPREFRIGERATED\": this.state.selectedRecord[\"IDS_KEEPREFRIGERATED\"],\n          \"IDS_NOACIDS\": this.state.selectedRecord[\"IDS_NOACIDS\"],\n          \"IDS_NOBASES\": this.state.selectedRecord[\"IDS_NOBASES\"],\n          \"IDS_NOOXIDIZER\": this.state.selectedRecord[\"IDS_NOOXIDIZER\"],\n          \"IDS_CORROSIVE\": this.state.selectedRecord[\"IDS_CORROSIVE\"],\n          \"IDS_HAZARDOUS\": this.state.selectedRecord[\"IDS_HAZARDOUS\"],\n          \"IDS_AVOIDEXPOSURETOLIGHTS\": this.state.selectedRecord[\"IDS_AVOIDEXPOSURETOLIGHTS\"],\n          \"IDS_PERSONALPROTECTIVEEQUIPMENT\": this.state.selectedRecord[\"IDS_PERSONALPROTECTIVEEQUIPMENT\"],\n          \"IDS_KEEPFROZEN\": this.state.selectedRecord[\"IDS_KEEPFROZEN\"],\n          \"IDS_KEEPDESSICATED\": this.state.selectedRecord[\"IDS_KEEPDESSICATED\"],\n          \"IDS_CLOTHING\": this.state.selectedRecord[\"IDS_CLOTHING\"],\n          \"IDS_GOGGLES\": this.state.selectedRecord[\"IDS_GOGGLES\"],\n          \"IDS_GLOVES\": this.state.selectedRecord[\"IDS_GLOVES\"],\n          \"IDS_HEALTH\": this.state.selectedRecord[\"IDS_HEALTH\"],\n          \"IDS_REACTIVITY\": this.state.selectedRecord[\"IDS_REACTIVITY\"],\n          \"IDS_FLAMMABLE\": this.state.selectedRecord[\"IDS_FLAMMABLE\"],\n          \"IDS_SPECIFIC\": this.state.selectedRecord[\"IDS_SPECIFIC\"]\n        };\n        inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode;\n\n        if (this.props.Login.masterData.MaterialSafetyInstructions.length > 0) {\n          inputData[\"nmaterialsafetyinstructionscode\"] = this.props.Login.masterData.MaterialSafetyInstructions[0].nmaterialsafetyinstructionscode;\n        } else {\n          inputData[\"nmaterialsafetyinstructionscode\"] = 0;\n        }\n\n        inputData[\"materialSafetyInstructions\"] = JSON.stringify(dynamicobj);\n        inputData[\"nflag\"] = 1;\n        inputParam = {\n          classUrl: \"material\",\n          methodUrl: \"MaterialSafetyInstructions\",\n          inputData: inputData,\n          operation: 'create',\n          saveType,\n          formRef,\n          postParam,\n          selectedRecord: this.state.selectedRecord,\n          searchRef: this.searchRef,\n          dataState: this.state.dataState\n        };\n        let masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALFILE\") {\n        inputParam = this.onSaveMaterialFile();\n        let masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALPROPERTY\") {\n        let masterData = this.props.Login.masterData;\n        const dynamicobj = {\n          \"IDS_STRUCTURALFORMULA\": this.state.selectedRecord[\"IDS_STRUCTURALFORMULA\"],\n          \"IDS_PHYSICALDESCRIPTION\": this.state.selectedRecord[\"IDS_PHYSICALDESCRIPTION\"],\n          \"IDS_BOILINGPOINT\": this.state.selectedRecord[\"IDS_BOILINGPOINT\"],\n          \"IDS_MELTINGPOINT\": this.state.selectedRecord[\"IDS_MELTINGPOINT\"],\n          \"IDS_MOLECULARWEIGHT\": this.state.selectedRecord[\"IDS_MOLECULARWEIGHT\"],\n          \"IDS_STANDARDSPECIFICGRAVITY\": this.state.selectedRecord[\"IDS_STANDARDSPECIFICGRAVITY\"],\n          \"IDS_STANDARDPURITY\": this.state.selectedRecord[\"IDS_STANDARDPURITY\"],\n          \"IDS_STANDARDLENGTH\": this.state.selectedRecord[\"IDS_STANDARDLENGTH\"],\n          \"IDS_GASNUMBER\": this.state.selectedRecord[\"IDS_GASNUMBER\"],\n          \"IDS_BULKDENSITY\": this.state.selectedRecord[\"IDS_BULKDENSITY\"],\n          \"IDS_DATEOFSTANDARDIZATION\": this.state.selectedRecord[\"IDS_DATEOFSTANDARDIZATION\"],\n          \"IDS_ASISBASIS\": this.state.selectedRecord[\"IDS_ASISBASIS\"],\n          \"IDS_DRIEDANDYDROUSBASIS\": this.state.selectedRecord[\"IDS_DRIEDANDYDROUSBASIS\"],\n          \"IDS_ASISBASIS1\": this.state.selectedRecord[\"IDS_ASISBASIS1\"],\n          \"IDS_DRIEDANDYDROUSBASIS2\": this.state.selectedRecord[\"IDS_DRIEDANDYDROUSBASIS2\"],\n          \"IDS_DIRECTIONOFUSE\": this.state.selectedRecord[\"IDS_DIRECTIONOFUSE\"],\n          \"IDS_COMMENTS\": this.state.selectedRecord[\"IDS_COMMENTS\"]\n        };\n        inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode;\n\n        if (this.props.Login.masterData.MaterialProperties.length > 0) {\n          inputData[\"nmaterialpropertycode\"] = this.props.Login.masterData.MaterialProperties[0].nmaterialpropertycode;\n        } else {\n          inputData[\"nmaterialpropertycode\"] = 0;\n        }\n\n        inputData[\"materialProperty\"] = JSON.stringify(dynamicobj);\n        inputData[\"nflag\"] = 2;\n        inputParam = {\n          classUrl: \"material\",\n          methodUrl: \"MaterialSafetyInstructions\",\n          inputData: inputData,\n          operation: 'create',\n          saveType,\n          formRef,\n          postParam,\n          selectedRecord: this.state.selectedRecord,\n          searchRef: this.searchRef,\n          dataState: this.state.dataState\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else {\n        if (this.props.Login.operation !== \"update\") {\n          let showMaterialSection = this.props.Login.showMaterialSection;\n          let newarr = [];\n          let newarrobj = [];\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode;\n\n          if (this.state.selectedRecord[\"nmaterialsectioncode\"].length > 1) {\n            newarr = this.state.selectedRecord.nmaterialsectioncode.map(temp => {\n              return {\n                \"ssectionname\": temp.label,\n                \"nsectioncode\": temp.value,\n                \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\n                \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\n              };\n            });\n          } else {\n            newarr.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\n            });\n          }\n\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarr);\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"MaterialSection\",\n            inputData: inputData,\n            operation: \"create\",\n            showMaterialSection: showMaterialSection,\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef\n          };\n        } else {\n          let newarr = [];\n          let newarrobj = [];\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode;\n\n          if (Array.isArray(this.state.selectedRecord[\"nmaterialsectioncode\"])) {\n            newarrobj.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\n            });\n          } else {\n            newarrobj.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\n            });\n          }\n\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarrobj);\n          inputData[\"MaterialSection\"] = {\n            \"IDS_REORDERLEVEL\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"]\n          };\n          inputData[\"nmaterialsectioncode\"] = this.state.selectedRecord.nmaterialsectioncodeprimaryKeyValue;\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"MaterialSection\",\n            inputData: inputData,\n            showMaterialSection: false,\n            operation: \"update\",\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef\n          };\n        }\n\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.copyAlertSave = () => {\n      let inputData = [];\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = undefined;\n      inputData[\"screenrights\"] = this.state.availableDatas;\n      inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\n      inputData[\"userrolecode\"] = this.state.selectedRecord ? this.state.selectedRecord[\"nuserrole\"].value : \"\";\n      inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"ScreenRights\",\n        inputData: inputData,\n        operation: this.props.Login.operation,\n        postParam,\n        searchRef: this.searchRef\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            }\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.copyScreenRights(this.state.selectedRecord ? this.state.selectedRecord[\"nuserrole\"].value : \"\", this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\", this.props.Login.userInfo, this.props.Login.masterData);\n      }\n    };\n\n    this.onSaveAllControlAndEsign = (skip, take, saveType, formRef) => {\n      let value = this.state.comboitem ? this.state.comboitem.value.value : this.ControlButton[0].value;\n      let operation = \"\";\n      let methodUrl = \"\";\n      let inputData = [];\n      let postParam = undefined;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights;\n      inputData[\"nflag\"] = transactionStatus.DEACTIVE;\n      postParam = {\n        inputListName: \"ScreenRights\",\n        selectedObject: \"SelectedScreenRights\",\n        primaryKeyField: \"nusersrolehidescreencode\"\n      };\n\n      if (value === 1) {\n        inputData[\"needrights\"] = transactionStatus.YES;\n        inputData[\"nneedesign\"] = null;\n        operation = \"update\";\n        methodUrl = \"ControlRights\";\n      } else if (value === 2) {\n        inputData[\"needrights\"] = transactionStatus.NO;\n        inputData[\"nneedesign\"] = null;\n        operation = \"update\";\n        methodUrl = \"ControlRights\";\n      } else if (value === 3) {\n        inputData[\"nneedesign\"] = transactionStatus.YES;\n        operation = \"update\";\n        methodUrl = \"Esign\";\n      } else if (value === 4) {\n        inputData[\"nneedesign\"] = transactionStatus.NO;\n        operation = \"update\";\n        methodUrl = \"Esign\";\n      }\n\n      const inputParam = {\n        classUrl: \"userscreenhide\",\n        methodUrl: \"ScreenHideControlRights\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: inputData,\n        operation: operation,\n        saveType,\n        formRef,\n        postParam,\n        searchRef: this.searchRef,\n        selectedcombo: this.props.Login.selectedcombo\n      };\n      this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n    };\n\n    this.ConfirmComponent = () => {\n      this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({\n        id: \"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\"\n      }), \"ok\", \"cancel\", () => this.copyAlertSave());\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      let inputData = [];\n      inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\n      inputData[\"userrnameList\"] = this.state.userrnameList;\n      const inputParam = {\n        classUrl: \"material\",\n        methodUrl: \"getMaterialByTypeCode\",\n        displayName: \"Material\",\n        inputData: inputData\n      };\n      this.setState({\n        sectionDataState: {\n          skip: 0,\n          take: 10\n        }\n      });\n\n      if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\n        this.props.getMaterialByTypeCode(inputParam, this.state.selectedcombo, this.state.selectedcombouser, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSERROLE\"\n        }));\n      }\n    };\n\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.searchFieldList = [{\n      feild: \"IDS_MATERIALNAME\",\n      jsonfeild: \"jsondata\"\n    }];\n    this.state = {\n      masterStatus: \"\",\n      sectionDataState: {\n        skip: 0,\n        take: 10\n      },\n      error: \"\",\n      isOpen: false,\n      ScreenRightsData: [],\n      userRoleData: [],\n      availableDatas: [],\n      selectedRecord: {},\n      userroleList: [],\n      operation: \"\",\n      comboitem: undefined,\n      screenName: undefined,\n      SelectedScreenrights: undefined,\n      selectedcombo: undefined,\n      selectedcomboUserRole: undefined,\n      isSelectedRecordChange: false,\n      selectedcombouser: undefined,\n      userrnameList: [],\n      selectedListmasterSwitch: undefined,\n      custombuttonstate: false,\n      ControlRightsParent: [],\n      userRoleControlRights: [],\n      ControlRights: undefined,\n      ConfirmDialogScreen: false,\n      controlMap: new Map(),\n      showAccordian: true,\n      dataResult: [],\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      dataState: _dataState,\n      columnName: '',\n      rowIndex: 0,\n      data: [],\n      splitChangeWidthPercentage: 30\n    };\n    this.searchRef = React.createRef();\n    this.ControlButton = [{\n      value: 1,\n      label: this.props.intl.formatMessage({\n        id: \"IDS_ENABLEALLCONTROLRIGHTS\"\n      })\n    }, {\n      value: 2,\n      label: this.props.intl.formatMessage({\n        id: \"IDS_DISABLEALLCONTROLRIGHTS\"\n      })\n    }, {\n      value: 3,\n      label: this.props.intl.formatMessage({\n        id: \"IDS_ENABLEALLESIGNRIGHTS\"\n      })\n    }, {\n      value: 4,\n      label: this.props.intl.formatMessage({\n        id: \"IDS_DISABLEALLESIGNRIGHTS\"\n      })\n    }];\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    this.props.Login.masterData.ScreenRights && sortData(this.props.Login.masterData.ScreenRights, '', 'nusersrolehidescreencode');\n    const searchedData = this.props.Login.masterData.searchedData;\n    const ScreenRights = this.props.Login.masterData.ScreenRights || [];\n    const addId = this.state.controlMap.has(\"AddMaterial\") && this.state.controlMap.get(\"AddMaterial\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditMaterial\") && this.state.controlMap.get(\"EditMaterial\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteMaterial\") && this.state.controlMap.get(\"DeleteMaterial\").ncontrolcode;\n    const addParameterId = this.state.controlMap.has(\"AddMaterialSafetyInstructions\") && this.state.controlMap.get(\"AddMaterialSafetyInstructions\").ncontrolcode;\n    const addMaterialProperty = this.state.controlMap.has(\"AddMaterialProperties\") && this.state.controlMap.get(\"AddMaterialProperties\").ncontrolcode;\n    let checkboxListL = [];\n    checkboxListL = [{\n      label: 'inflammable'\n    }, {\n      label: 'Keep Refrigerated'\n    }, {\n      label: 'No Acids'\n    }, {\n      label: 'No Bases'\n    }, {\n      label: 'No Oxidizer'\n    }, {\n      label: 'Corrosive'\n    }, {\n      label: 'Hazardous'\n    }];\n    let checkboxListR = [];\n    checkboxListR = [{\n      label: 'Avoid Exposure To Light'\n    }, {\n      label: 'Personal Protective Equipment'\n    }, {\n      label: 'Keep Frozen'\n    }, {\n      label: 'Keep Desiccated'\n    }, {\n      label: 'Clothing'\n    }, {\n      label: 'Goggles'\n    }, {\n      label: 'Gloves'\n    }];\n    let masterlistmain = [];\n    this.props.Login.masterData.Material && this.props.Login.masterData.Material.map((temp, i) => {\n      return masterlistmain.push(this.props.Login.masterData.Material[i].jsondata);\n    });\n    let searchedDatalistmain = [];\n\n    if (this.props.Login.masterData.searchedData === undefined) {\n      searchedDatalistmain = undefined;\n    } else {\n      this.props.Login.masterData.searchedData && this.props.Login.masterData.searchedData.map((temp, i) => {\n        return searchedDatalistmain.push(this.props.Login.masterData.searchedData[i].jsondata);\n      });\n    }\n\n    let selectedmasterlistmain = [];\n    this.props.Login.masterData.SelectedMaterial && selectedmasterlistmain.push(this.props.Login.masterData.SelectedMaterial.jsondata);\n    const filterParam = {\n      inputListName: \"Material\",\n      selectedObject: \"SelectedMaterial\",\n      primaryKeyField: \"nmaterialcode\",\n      fetchUrl: \"material/getMaterialByID\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      isjsondata: true,\n      searchFieldList: this.searchFieldList\n    };\n    let mandatoryFieldsScreenRights = [];\n    let mandatoryFieldsMaterialFile = [];\n\n    if (this.props.Login.masterData.SelectedMaterialType) {\n      if (this.props.Login.masterData.SelectedMaterialType.length > 0) {\n        if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\n          mandatoryFieldsScreenRights = [{\n            \"mandatory\": false,\n            \"idsName\": \"IDS_MATERIALCAT\",\n            \"dataField\": \"IDS_MATERIALCAT\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          }, {\n            \"mandatory\": false,\n            \"idsName\": \"IDS_STANDARDMATERIALNAME\",\n            \"dataField\": \"IDS_STANDARDMATERIALNAME\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"selectbox\"\n          }, {\n            \"mandatory\": false,\n            \"idsName\": \"IDS_BASICUOM\",\n            \"dataField\": \"IDS_BASICUOM\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          }];\n        } else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\n          mandatoryFieldsScreenRights = [{\n            \"mandatory\": false,\n            \"idsName\": \"IDS_MATERIALCAT\",\n            \"dataField\": \"IDS_MATERIALCAT\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          }, {\n            \"mandatory\": false,\n            \"idsName\": \"IDS_VOLUMETRICMATERIALNAME\",\n            \"dataField\": \"IDS_VOLUMETRICMATERIALNAME\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"selectbox\"\n          }, {\n            \"mandatory\": false,\n            \"idsName\": \"IDS_BASICUOM\",\n            \"dataField\": \"IDS_BASICUOM\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          }];\n        } else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\n          mandatoryFieldsScreenRights = [{\n            \"mandatory\": false,\n            \"idsName\": \"IDS_MATERIALCAT\",\n            \"dataField\": \"IDS_MATERIALCAT\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          }, {\n            \"mandatory\": false,\n            \"idsName\": \"IDS_MATERIALNAME\",\n            \"dataField\": \"IDS_MATERIALNAME\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"selectbox\"\n          }, {\n            \"mandatory\": false,\n            \"idsName\": \"IDS_BASICUOM\",\n            \"dataField\": \"IDS_BASICUOM\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          }, {\n            \"mandatory\": false,\n            \"idsName\": \"IDS_PREFIX\",\n            \"dataField\": \"IDS_PREFIX\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"selectbox\"\n          }];\n        }\n      }\n    }\n\n    this.props.Login.screenname === 'IDS_MATERIALFILE' && this.props.Login.selectedRecord && this.props.Login.selectedRecord.nattachmenttypecode === attachmentType.LINK ? mandatoryFieldsMaterialFile = [{\n      \"idsName\": \"IDS_FILENAME\",\n      \"dataField\": \"slinkfilename\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }, {\n      \"idsName\": \"IDS_LINKNAME\",\n      \"dataField\": \"nlinkcode\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }] : mandatoryFieldsMaterialFile = [{\n      \"idsName\": \"IDS_FILE\",\n      \"dataField\": \"sfilename\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }];\n    const mandatoryFieldsMaterialSection = [{\n      \"mandatory\": false,\n      \"idsName\": \"IDS_MATERIALSECTION\",\n      \"dataField\": \"nmaterialsectioncode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 64,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Material\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: searchedDatalistmain || masterlistmain,\n      getMasterDetail: master => this.props.getMaterialDetails(master, this.props.Login.masterData, this.props.Login.userInfo),\n      selectedMaster: this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.jsondata,\n      primaryKeyField: \"nmaterialcode\",\n      mainField: this.props.Login.masterData.SelectedMaterialType ? this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ? \"IDS_STANDARDMATERIALNAME\" : this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ? \"IDS_VOLUMETRICMATERIALNAME\" : \"IDS_MATERIALNAME\" : \"\",\n      firstField: \"IDS_MATERIALNAME\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      showFilterIcon: true,\n      onFilterSubmit: this.onFilterSubmit,\n      filterComponent: [{\n        \"IDS_FILTER\": /*#__PURE__*/React.createElement(MaterialFilter, {\n          filterUserRole: this.state.userroleList || [],\n          userrnameList: this.state.userrnameList || [],\n          selectedRecord: this.state.selectedcombo || {} //\n          ,\n          selectedcombouser: this.state.selectedcombouser || {},\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 45\n          }\n        })\n      }],\n      openModal: () => this.props.getAddMaterialPopup(\"IDS_MATERIAL\", \"create\", this.props.Login.userInfo, this.state.selectedcombo, this.state.selectedcombouser, addId, this.props.Login.masterData, this.state.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 37\n      }\n    }, this.props.Login.masterData.Material && this.props.Login.masterData.Material.length > 0 && this.props.Login.masterData.SelectedMaterial ? /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 53\n      }\n    }, \"Material\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: e => this.props.getAddMaterialPopup(\"IDS_MATERIAL\", \"update\", this.props.Login.userInfo, this.state.selectedcombo, this.state.selectedcombouser, editId, this.props.Login.masterData, this.state.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDMATERIALSAFETYINSTRUCTIONS\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: e => this.props.addSafetyInstructions(this.props.Login.masterData, this.props.Login.userInfo, addParameterId, \"create\", {}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_ADDMATERIALSAFETYINSTRUCTIONS\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDMATERIALPROPERTY\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: e => this.props.addMaterialProperty(this.props.Login.masterData, this.props.Login.userInfo, addMaterialProperty, \"create\", {}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_ADDMATERIALPROPERTY\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 69\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_MATERIALCAT',\n      message: \"Material Category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_MATERIALCAT.label))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 ? 'IDS_MATERIALNAME' : this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ? 'IDS_STANDARDMATERIALNAME' : this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ? 'IDS_VOLUMETRICMATERIALNAME' : '',\n      message: \"Material\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 ? selectedmasterlistmain[0].IDS_MATERIALNAME : this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ? selectedmasterlistmain[0].IDS_STANDARDMATERIALNAME : this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ? selectedmasterlistmain[0].IDS_VOLUMETRICMATERIALNAME : ''))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_BASICUOM',\n      message: \"Basic Units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_BASICUOM.label))), this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 && /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_PREFIX',\n      message: \"Prefix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 69\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_PREFIX))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_REORDERLEVEL',\n      message: \"Reorder Level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_REORDERLEVEL))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_OPENEXIPIRY',\n      message: \"Open Expiry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_OPENEXIPIRY))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_OPENEXIPIRYPERIOD',\n      message: \"Open Expiry Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_OPENEXIPIRYPERIOD.label))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_NEXTVALIDATION',\n      message: \"Next Validation Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_NEXTVALIDATION))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_NEXTVALIDATIONPERIOD',\n      message: \"Next Validation Period\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_NEXTVALIDATIONPERIOD.label))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_EXPIRYPOLICY',\n      message: \"Expiry Policy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_EXPIRYPOLICY))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_EXPIRYPOLICYPERIOD',\n      message: \"Expiry Policy Period\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_EXPIRYPOLICYPERIOD.label))), this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 && /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_REMARKS',\n      message: \"Remarks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 69\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_REMARKS))), this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 && /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_REMARKS',\n      message: \"Remarks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 69\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_REMARKS))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_QUARANTINE',\n      message: \"Quarentine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 65\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_QUARANTINENAME && selectedmasterlistmain[0].IDS_QUARANTINENAME))), this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 && /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_NOEXPIRY',\n      message: \"No Expiry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 69\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_NOEXPIRYNAME && selectedmasterlistmain[0].IDS_NOEXPIRYNAME))), this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 && /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_STORAGECONDITION',\n      message: \"Storage Condition\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 69\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_STORAGECONDITION.label && selectedmasterlistmain[0].IDS_STORAGECONDITION.label))), this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 && /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: 'IDS_REUSABLE',\n      message: \"Reusable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 69\n      }\n    }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0].IDS_REUSABLENAME && selectedmasterlistmain[0].IDS_REUSABLENAME)))), this.props.Login.masterData && /*#__PURE__*/React.createElement(CustomTab, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 85\n      }\n    }))) : \"\")))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.screenname === 'IDS_MATERIALSAFETYINSTRUCTIONS' ? '' : this.props.Login.screenname === 'IDS_MATERIALPROPERTY' ? '' : this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenname,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.screenname === 'IDS_MATERIALFILE' ? mandatoryFieldsMaterialFile : this.props.Login.screenname === 'IDS_MATERIAL' ? mandatoryFieldsScreenRights : this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ? this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? mandatoryFieldsMaterialSection : '' : '',\n      updateStore: this.props.updateStore,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenname !== \"IDS_MATERIALFILE\" ? this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ? this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? this.props.Login.showMaterialSection ? /*#__PURE__*/React.createElement(AddMaterialSection, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        MaterialSectionCombodata: this.props.Login.masterData.MaterialSection && this.props.Login.masterData.MaterialSection,\n        onNumericInputChange: this.onNumericInputChange,\n        onComboChange: this.onComboChange,\n        isDisabled: this.props.Login.isneedcombomulti && this.props.Login.isneedcombomulti,\n        ismaterialsectionEdit: this.props.Login.ismaterialsectionEdit // parameterData={this.props.parameterData}\n        ,\n        comboData: this.props.Login.masterData.productCategoryList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.state.selectedRecord,\n        templateData: this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate[0].sjsonobjstr,\n        onNumericInputChange: this.onNumericInputChange,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChange,\n        comboData: this.props.Login.templateData && this.props.Login.templateData.comboData,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.props.Login.selectedRecord,\n        templateData: this.props.Login.masterData.selectedTemplateSafetyInstructions && this.props.Login.masterData.selectedTemplateSafetyInstructions[0].sjsonobjstr,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 45\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.props.Login.selectedRecord,\n        templateData: this.props.Login.masterData.selectedTemplateProperties && this.props.Login.masterData.selectedTemplateProperties[0].sjsonobjstr,\n        userInfo: this.props.Login.userInfo,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 41\n        }\n      }) : /*#__PURE__*/React.createElement(AddMaterialFile, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropMaterialFile,\n        deleteAttachment: this.deleteAttachment,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.Login.linkMaster,\n        maxSize: 20,\n        maxFiles: 1,\n        multiple: false,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_MATERIALFILE\"\n        }),\n        name: \"testfilename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n    breadCrumbData.push({\n      \"label\": \"IDS_MATERIALTYPE\",\n      \"value\": this.props.Login.masterData.SelectedMaterialType ? this.props.Login.masterData.SelectedMaterialType[0].smaterialtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_MATERIALCAT\",\n      \"value\": this.props.Login.masterData.SelectedMaterialCategory ? this.props.Login.masterData.SelectedMaterialCategory.smaterialcatname !== undefined ? this.props.Login.masterData.SelectedMaterialCategory.smaterialcatname : \"NA\" : \"NA\"\n    });\n    return breadCrumbData;\n  }\n\n  componentDidUpdate(previousProps) {\n    let bool = false;\n    let {\n      selectedRecord,\n      selectedcombo,\n      comboitem,\n      filterData,\n      userroleList,\n      selectedcombouser,\n      userrnameList\n    } = this.state;\n    const masterData = this.props.Login.masterData;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      bool = true;\n      selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.selectedcombo !== previousProps.Login.selectedcombo) {\n      bool = true;\n      selectedcombo = this.props.Login.selectedcombo;\n    }\n\n    if (this.props.Login.comboitem !== previousProps.Login.comboitem) {\n      bool = true;\n      comboitem = this.props.Login.comboitem;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        data: this.props.Login.masterData.ControlRights\n      });\n    }\n\n    if (this.props.Login.masterData.MaterialType !== undefined) {\n      if (this.props.Login.masterData.MaterialType !== previousProps.Login.masterData.MaterialType) {\n        bool = true;\n        const userrole = constructOptionList(this.props.Login.masterData.MaterialType || [], \"nmaterialtypecode\", \"smaterialtypename\", undefined, undefined, undefined);\n        userroleList = userrole.get(\"OptionList\");\n        selectedcombo = {\n          nmaterialtypecode: masterData.MaterialType && masterData.MaterialType.length > 0 ? {\n            \"value\": masterData.MaterialType[0].nmaterialtypecode,\n            \"label\": masterData.MaterialType[0].smaterialtypename\n          } : \"\"\n        };\n      }\n    }\n\n    if (this.props.Login.masterData.MaterialCategoryMain !== previousProps.Login.masterData.MaterialCategoryMain) {\n      const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\", \"smaterialcatname\", undefined, undefined, undefined);\n      userrnameList = MaterialCategoryMain.get(\"OptionList\");\n      selectedcombouser = {\n        nmaterialcatcode: masterData.MaterialCategoryMain && masterData.MaterialCategoryMain.length > 0 ? {\n          \"value\": masterData.MaterialCategoryMain[0].nmaterialcatcode,\n          \"label\": masterData.MaterialCategoryMain[0].smaterialcatname\n        } : \"\"\n      };\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      bool = true;\n      filterData = this.generateBreadCrumData();\n    }\n\n    if (this.props.Login.masterData.searchedData !== previousProps.Login.masterData.searchedData) {\n      if (this.props.Login.masterData.searchedData) {\n        if (this.props.Login.masterData.searchedData.length <= this.state.skip) {\n          this.setState({\n            skip: 0\n          });\n        }\n      }\n    }\n\n    if (bool) {\n      this.setState({\n        selectedRecord,\n        comboitem,\n        filterData,\n        selectedcombo,\n        userroleList,\n        selectedcombouser,\n        userrnameList\n      });\n    }\n  }\n\n  onInputOnControlRights(event, rowItem, columnName, rowIndex, saveType, needesignparent) {\n    const selectedRecord = {};\n\n    if (needesignparent === 4) {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_ITISDEACTIVEINSCREENRIGHTS\"\n      }));\n    } else {\n      if (rowItem[\"needrights\"] !== 3) {\n        selectedRecord[\"ncontrolcode\"] = rowItem[\"ncontrolcode\"];\n        selectedRecord[\"nformcode\"] = rowItem[\"nformcode\"];\n        selectedRecord[\"nstatus\"] = rowItem[\"nstatus\"];\n        selectedRecord[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"].value;\n        selectedRecord[\"nusercode\"] = this.state.selectedcombouser[\"nusercode\"].value;\n        selectedRecord[\"scontrolids\"] = rowItem[\"scontrolids\"];\n        selectedRecord[\"scontrolname\"] = rowItem[\"scontrolname\"];\n        selectedRecord[\"screenname\"] = rowItem[\"screenname\"];\n\n        if (columnName === \"nneedesign\") {\n          selectedRecord[\"nneedesign\"] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        } else {\n          selectedRecord[\"needrights\"] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        }\n\n        this.saveClick(selectedRecord, saveType, undefined);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n  handleClickDelete(masterData, ncontrolcode, modalName) {\n    const fieldArray = [];\n    let postParam = {\n      inputListName: \"Material\",\n      selectedObject: \"SelectedMaterial\",\n      primaryKeyField: \"nmaterialcode\",\n      primaryKeyValue: fieldArray,\n      fetchUrl: \"material/getMaterial\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      }\n    };\n    modalName = 'openModal';\n    const inputParam = {\n      methodUrl: \"Material\",\n      classUrl: \"material\",\n      inputData: {\n        \"material\": this.props.Login.masterData.SelectedMaterial,\n        \"nmaterialcatcode\": this.state.selectedcombouser[\"nmaterialcatcode\"].value,\n        \"userinfo\": this.props.Login.userInfo,\n        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode,\n        \"nmaterialtypecode\": this.state.selectedcombo[\"nmaterialtypecode\"].value\n      },\n      operation: \"delete\",\n      postParam,\n      displayName: \"Material\"\n    };\n\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: true,\n          screenData: {\n            inputParam,\n            masterData\n          },\n          [modalName]: true,\n          operation: 'delete',\n          screenName: \"Material\",\n          id: \"material\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n    } else {\n      this.props.crudMaster(inputParam, masterData, modalName);\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  updateStore,\n  initialcombochangeget,\n  getAddMaterialPopup,\n  viewAttachment,\n  crudMaster,\n  getMaterialDetails,\n  getMaterialEdit,\n  getMaterialByTypeCode,\n  addMaterialFile,\n  getAddMaterialSectionPopup,\n  getMaterialSectionEdit,\n  filterColumnData,\n  validateEsignCredential,\n  addSafetyInstructions,\n  addMaterialProperty\n})(injectIntl(Material));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/Material/Material.jsx"],"names":["React","connect","FormattedMessage","injectIntl","Row","Col","Nav","Card","Button","FormGroup","FormLabel","Grid","GridColumn","process","toast","FontAwesomeIcon","faTrashAlt","faSave","faCopy","faPlus","faSync","faPencilAlt","SlideOutModal","Esign","ListMaster","CustomTab","showEsign","getControlMap","constructOptionList","sortData","getSameRecordFromTwoArrays","onDropAttachFileList","deleteAttachmentDropZone","create_UUID","callService","updateStore","crudMaster","filterColumnData","validateEsignCredential","viewAttachment","initialcombochangeget","addSafetyInstructions","getAddMaterialPopup","getMaterialDetails","addMaterialProperty","getMaterialEdit","getMaterialByTypeCode","getAddMaterialSectionPopup","getMaterialSectionEdit","addMaterialFile","DEFAULT_RETURN","transactionStatus","attachmentType","ContentPanel","AtSubCard","ReadOnlyText","ConfirmMessage","BreadcrumbComponent","ReactTooltip","MaterialFilter","DynamicSlideout","MaterialSectionTab","AddMaterialSection","Affix","MaterialFileTab","AddMaterialSafetyInstructionTab","AddMaterialFile","mapStateToProps","state","Login","Material","Component","constructor","props","expandChange","event","isExpanded","dataItem","expanded","undefined","aggregates","setState","paneSizeChange","d","splitChangeWidthPercentage","handleDateChange","dateValue","dateName","selectedRecord","onTabChange","tabProps","screenName","updateInfo","typeName","data","onDropMaterialFile","attachedFiles","fieldName","maxSize","actionType","deleteAttachment","file","onSaveMaterialFile","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","NO","testFileArray","testFile","nmaterialcode","masterData","SelectedMaterial","jsondata","nmaterialfilecode","nstatus","ACTIVE","ndefaultstatus","LINK","formData","FormData","FTP","Array","isArray","length","forEach","index","tempData","Object","assign","splittedFileName","name","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","ntestfilecode","sdescription","trim","NA","size","append","push","YES","nfilesize","slinkfilename","slinkdescription","nlinkcode","value","JSON","stringify","inputParam","operation","inputData","userinfo","userInfo","isFileupload","classUrl","methodUrl","getPreviewTemplate","editId","withoutCombocomponent","Layout","parse","templateData","map","row","children","column","component","hasOwnProperty","componentrow","inputtype","comboComponents","getPreviewTemplateOnchange","comboData","control","childComboList","child","childColumnList","columnList","val","comboChild","parentList","inputParem","source","primarykeyField","valuemember","item","getChildValues","tabDetail","tabMap","Map","dataresultarr","temp","set","controlMap","userRoleControlRights","deleteRecordmain","MaterialFile","viewMaterialFile","settings","ismaterialSectionneed","sectionDataState","skip","take","screenname","dataState","getTestDetails","addMaterialSection","deleteParam","selected","methodDataState","instrumentCatDataState","ncontrolCode","toLowerCase","nformcode","loadEsign","screenData","openModal","param","showMaterialSection","isneedcombomulti","ListmasterSwitch","nusersrolehidescreencode","selectedSwitch","target","checked","needrights","nuserrolecode","selectedcombo","nusercodemain","selectedcombouser","ListSwitchUpdate","switchGroupBy","group","field","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","handleClickDelete","openFilter","showFilter","closeFilter","onFilterSubmit","searchRef","current","userrnameList","displayName","warn","handlePageChange","e","validateEsign","sreason","password","filedata","materialfile","closeModal","selectedId","onComboChange","inputParamcombo","nmaterialtypecode","displaymember","comboName","label","comboitem","availableDatas","onInputOnChange","optional1","optional2","type","DEACTIVE","saveClick","saveType","formRef","postParam","inputListName","selectedObject","primaryKeyField","SelectedScreenRights","onSaveClick","varmain","SelectedMaterialType","IDS_PREFIX","IDS_REORDERLEVEL","IDS_OPENEXIPIRY","IDS_NEXTVALIDATION","IDS_EXPIRYPOLICY","IDS_REMARKS","IDS_STANDARDMATERIALNAME","IDS_VOLUMETRICMATERIALNAME","IDS_MATERIALNAME","copyScreenRights","ConfirmComponent","dynamicobj","MaterialSafetyInstructions","nmaterialsafetyinstructionscode","MaterialProperties","nmaterialpropertycode","newarr","newarrobj","nmaterialsectioncode","nmaterialsectioncodeprimaryKeyValue","onNumericInputChange","copyAlertSave","onSaveAllControlAndEsign","ControlButton","reloadData","parseInt","searchFieldList","feild","jsonfeild","masterStatus","error","isOpen","ScreenRightsData","userRoleData","userroleList","SelectedScreenrights","selectedcomboUserRole","isSelectedRecordChange","selectedListmasterSwitch","custombuttonstate","ControlRightsParent","ControlRights","ConfirmDialogScreen","showAccordian","dataResult","columnName","rowIndex","createRef","getDerivedStateFromProps","render","ScreenRights","searchedData","addId","has","get","ncontrolcode","addParameterId","checkboxListL","checkboxListR","masterlistmain","i","searchedDatalistmain","selectedmasterlistmain","filterParam","fetchUrl","fecthInputObject","isjsondata","mandatoryFieldsScreenRights","mandatoryFieldsMaterialFile","mandatoryFieldsMaterialSection","breadCrumbData","filterData","master","IDS_MATERIALCAT","IDS_BASICUOM","IDS_OPENEXIPIRYPERIOD","IDS_NEXTVALIDATIONPERIOD","IDS_EXPIRYPOLICYPERIOD","IDS_QUARANTINENAME","IDS_NOEXPIRYNAME","IDS_STORAGECONDITION","IDS_REUSABLENAME","MaterialSection","ismaterialsectionEdit","productCategoryList","selectedTemplate","sjsonobjstr","handleChange","selectedTemplateSafetyInstructions","selectedTemplateProperties","linkMaster","componentDidMount","parentHeight","height","clientHeight","firstPane","generateBreadCrumData","smaterialtypename","SelectedMaterialCategory","smaterialcatname","componentDidUpdate","previousProps","bool","values","MaterialType","userrole","MaterialCategoryMain","nmaterialcatcode","onInputOnControlRights","rowItem","needesignparent","componentWillUnmount","modalName","fieldArray","primaryKeyValue"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav, Card, Button, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faSave, faCopy, faPlus, faSync, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component'\r\nimport { showEsign, getControlMap, constructOptionList, sortData, getSameRecordFromTwoArrays, onDropAttachFileList, deleteAttachmentDropZone, create_UUID } from '../../components/CommonScript';\r\n\r\nimport {\r\n    callService, updateStore, crudMaster, filterColumnData, validateEsignCredential, viewAttachment\r\n\r\n} from '../../actions';\r\nimport {\r\n    initialcombochangeget, addSafetyInstructions, getAddMaterialPopup, getMaterialDetails, addMaterialProperty,\r\n    getMaterialEdit, getMaterialByTypeCode, getAddMaterialSectionPopup, getMaterialSectionEdit, addMaterialFile\r\n} from '../../actions/MaterialAction';\r\n\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport { ContentPanel, AtSubCard, ReadOnlyText } from '../../components/App.styles';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport MaterialFilter from './MaterialFilter';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\r\nimport MaterialSectionTab from './MaterialSectionTab';\r\nimport AddMaterialSection from './AddMaterialSection';\r\nimport { Affix } from 'rsuite';\r\nimport MaterialFileTab from './MaterialFileTab';\r\nimport AddMaterialSafetyInstructionTab from './AddMaterialSafetyInstructionTab';\r\nimport AddMaterialFile from './AddMaterialFile';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Material extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n        this.searchFieldList = [{ feild: \"IDS_MATERIALNAME\", jsonfeild: \"jsondata\" }]\r\n        this.state = {\r\n            masterStatus: \"\",\r\n            sectionDataState: { skip: 0, take: 10 },\r\n            error: \"\",\r\n            isOpen: false,\r\n            ScreenRightsData: [], userRoleData: [],\r\n            availableDatas: [],\r\n            selectedRecord: {},\r\n            userroleList: [],\r\n            operation: \"\",\r\n            comboitem: undefined,\r\n            screenName: undefined,\r\n            SelectedScreenrights: undefined,\r\n            selectedcombo: undefined, selectedcomboUserRole: undefined,\r\n            isSelectedRecordChange: false,\r\n            selectedcombouser: undefined,\r\n            userrnameList: [],\r\n            selectedListmasterSwitch: undefined,\r\n            custombuttonstate: false,\r\n            ControlRightsParent: [],\r\n\r\n\r\n            userRoleControlRights: [],\r\n            ControlRights: undefined,\r\n            ConfirmDialogScreen: false,\r\n            controlMap: new Map(),\r\n            showAccordian: true,\r\n            dataResult: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            dataState: dataState,\r\n            columnName: '',\r\n            rowIndex: 0,\r\n            data: [],\r\n            splitChangeWidthPercentage: 30,\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.ControlButton = [{ value: 1, label: this.props.intl.formatMessage({ id: \"IDS_ENABLEALLCONTROLRIGHTS\" }) },\r\n        { value: 2, label: this.props.intl.formatMessage({ id: \"IDS_DISABLEALLCONTROLRIGHTS\" }) },\r\n        { value: 3, label: this.props.intl.formatMessage({ id: \"IDS_ENABLEALLESIGNRIGHTS\" }) },\r\n        { value: 4, label: this.props.intl.formatMessage({ id: \"IDS_DISABLEALLESIGNRIGHTS\" }) }\r\n        ];\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n\r\n    expandChange = event => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined\r\n                ? event.dataItem.aggregates\r\n                : event.dataItem.expanded;\r\n        event.dataItem.expanded = !isExpanded;\r\n        this.setState({ ...this.state });\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    render() {\r\n        this.props.Login.masterData.ScreenRights && sortData(this.props.Login.masterData.ScreenRights, '', 'nusersrolehidescreencode')\r\n        const searchedData = this.props.Login.masterData.searchedData\r\n        const ScreenRights = this.props.Login.masterData.ScreenRights || [];\r\n        const addId = this.state.controlMap.has(\"AddMaterial\") && this.state.controlMap.get(\"AddMaterial\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditMaterial\") && this.state.controlMap.get(\"EditMaterial\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteMaterial\") && this.state.controlMap.get(\"DeleteMaterial\").ncontrolcode;\r\n        const addParameterId = this.state.controlMap.has(\"AddMaterialSafetyInstructions\")\r\n            && this.state.controlMap.get(\"AddMaterialSafetyInstructions\").ncontrolcode;\r\n        const addMaterialProperty = this.state.controlMap.has(\"AddMaterialProperties\")\r\n            && this.state.controlMap.get(\"AddMaterialProperties\").ncontrolcode;\r\n        let checkboxListL = []\r\n        checkboxListL = [{\r\n            label: 'inflammable'\r\n        }, { label: 'Keep Refrigerated' }, { label: 'No Acids' }, { label: 'No Bases' }, { label: 'No Oxidizer' }\r\n            , { label: 'Corrosive' }, { label: 'Hazardous' }\r\n        ]\r\n        let checkboxListR = []\r\n        checkboxListR = [{\r\n            label: 'Avoid Exposure To Light'\r\n        }, { label: 'Personal Protective Equipment' }, { label: 'Keep Frozen' }, { label: 'Keep Desiccated' }\r\n            , { label: 'Clothing' }\r\n            , { label: 'Goggles' }, { label: 'Gloves' }\r\n        ]\r\n\r\n        let masterlistmain = []\r\n        this.props.Login.masterData.Material &&\r\n            this.props.Login.masterData.Material.map((temp, i) => {\r\n                return masterlistmain.push(this.props.Login.masterData.Material[i].jsondata)\r\n            })\r\n        let searchedDatalistmain = []\r\n\r\n        if (this.props.Login.masterData.searchedData === undefined) {\r\n            searchedDatalistmain = undefined\r\n        } else {\r\n            this.props.Login.masterData.searchedData &&\r\n                this.props.Login.masterData.searchedData.map((temp, i) => {\r\n                    return searchedDatalistmain.push(this.props.Login.masterData.searchedData[i].jsondata)\r\n                })\r\n        }\r\n\r\n\r\n        let selectedmasterlistmain = []\r\n        this.props.Login.masterData.SelectedMaterial &&\r\n            selectedmasterlistmain.push(this.props.Login.masterData.SelectedMaterial.jsondata)\r\n        const filterParam = {\r\n            inputListName: \"Material\", selectedObject: \"SelectedMaterial\", primaryKeyField: \"nmaterialcode\",\r\n            fetchUrl: \"material/getMaterialByID\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            isjsondata: true,\r\n            searchFieldList: this.searchFieldList\r\n        };\r\n        let mandatoryFieldsScreenRights = []\r\n        let mandatoryFieldsMaterialFile = []\r\n        if (this.props.Login.masterData.SelectedMaterialType) {\r\n            if (this.props.Login.masterData.SelectedMaterialType.length > 0) {\r\n                if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\r\n                    mandatoryFieldsScreenRights = [\r\n                        {\r\n                            \"mandatory\": false, \"idsName\": \"IDS_MATERIALCAT\", \"dataField\": \"IDS_MATERIALCAT\",\r\n                            \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                        },\r\n                        {\r\n                            \"mandatory\": false, \"idsName\": \"IDS_STANDARDMATERIALNAME\", \"dataField\": \"IDS_STANDARDMATERIALNAME\",\r\n                            \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                        },\r\n                        {\r\n                            \"mandatory\": false, \"idsName\": \"IDS_BASICUOM\", \"dataField\": \"IDS_BASICUOM\",\r\n                            \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                        },\r\n                    ];\r\n                }\r\n                else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\r\n                    mandatoryFieldsScreenRights = [\r\n                        {\r\n                            \"mandatory\": false, \"idsName\": \"IDS_MATERIALCAT\", \"dataField\": \"IDS_MATERIALCAT\",\r\n                            \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                        },\r\n                        {\r\n                            \"mandatory\": false, \"idsName\": \"IDS_VOLUMETRICMATERIALNAME\", \"dataField\": \"IDS_VOLUMETRICMATERIALNAME\",\r\n                            \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                        },\r\n                        {\r\n                            \"mandatory\": false, \"idsName\": \"IDS_BASICUOM\", \"dataField\": \"IDS_BASICUOM\",\r\n                            \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                        },\r\n                    ];\r\n                }\r\n                else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\r\n                    mandatoryFieldsScreenRights = [\r\n                        {\r\n                            \"mandatory\": false, \"idsName\": \"IDS_MATERIALCAT\", \"dataField\": \"IDS_MATERIALCAT\",\r\n                            \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                        },\r\n                        {\r\n                            \"mandatory\": false, \"idsName\": \"IDS_MATERIALNAME\", \"dataField\": \"IDS_MATERIALNAME\",\r\n                            \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                        },\r\n                        {\r\n                            \"mandatory\": false, \"idsName\": \"IDS_BASICUOM\", \"dataField\": \"IDS_BASICUOM\",\r\n                            \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                        },\r\n\r\n                        {\r\n                            \"mandatory\": false, \"idsName\": \"IDS_PREFIX\", \"dataField\": \"IDS_PREFIX\",\r\n                            \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                        }\r\n                    ];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.props.Login.screenname === 'IDS_MATERIALFILE' && (this.props.Login.selectedRecord &&\r\n            this.props.Login.selectedRecord.nattachmenttypecode === attachmentType.LINK) ?\r\n            mandatoryFieldsMaterialFile = [\r\n                { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ]\r\n            :\r\n            mandatoryFieldsMaterialFile = [\r\n                { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n            ]\r\n\r\n        const mandatoryFieldsMaterialSection = [\r\n            {\r\n                \"mandatory\": false, \"idsName\": \"IDS_MATERIALSECTION\", \"dataField\": \"nmaterialsectioncode\",\r\n                \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            }\r\n        ];\r\n\r\n\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                <div className=\"client-listing-wrap mtop-4\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={64}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix>\r\n                        : \"\"\r\n                    }\r\n                    <Row noGutters>\r\n                        <Col md={4} >\r\n\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Material\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={searchedDatalistmain || masterlistmain}\r\n                                getMasterDetail={(master) => this.props.getMaterialDetails(master, this.props.Login.masterData, this.props.Login.userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.jsondata}\r\n                                primaryKeyField=\"nmaterialcode\"\r\n                                mainField={this.props.Login.masterData.SelectedMaterialType ?\r\n                                    this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n                                        \"IDS_STANDARDMATERIALNAME\" :\r\n                                        this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n                                            \"IDS_VOLUMETRICMATERIALNAME\" :\r\n                                            \"IDS_MATERIALNAME\" : \"\"}\r\n\r\n\r\n                                firstField=\"IDS_MATERIALNAME\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                showFilterIcon={true}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\":\r\n                                            <MaterialFilter\r\n                                                filterUserRole={this.state.userroleList || []}\r\n                                                userrnameList={this.state.userrnameList || []}\r\n                                                selectedRecord={this.state.selectedcombo || {}}//\r\n                                                selectedcombouser={this.state.selectedcombouser || {}}\r\n                                                onComboChange={this.onComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                                openModal={() => this.props.getAddMaterialPopup(\"IDS_MATERIAL\",\r\n                                    \"create\", this.props.Login.userInfo, this.state.selectedcombo,\r\n                                    this.state.selectedcombouser, addId, this.props.Login.masterData,\r\n                                    this.state.selectedRecord)}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        {this.props.Login.masterData.Material && this.props.Login.masterData.Material.length > 0 && this.props.Login.masterData.SelectedMaterial ?\r\n                                            <Card className=\"border-0\">\r\n                                                <Card.Header>\r\n                                                    <Card.Title className=\"product-title-main\">Material</Card.Title>\r\n                                                    <Card.Subtitle>\r\n                                                        <div className=\"d-flex product-category\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                            </h2>\r\n                                                            <div className=\"d-inline \">\r\n                                                                <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) =>\r\n                                                                        this.props.getAddMaterialPopup(\"IDS_MATERIAL\",\r\n                                                                            \"update\", this.props.Login.userInfo, this.state.selectedcombo,\r\n                                                                            this.state.selectedcombouser, editId, this.props.Login.masterData,\r\n                                                                            this.state.selectedRecord)\r\n                                                                    }\r\n                                                                >\r\n\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.ConfirmDelete(deleteId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDMATERIALSAFETYINSTRUCTIONS\" })}\r\n                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) => this.props.addSafetyInstructions(this.props.Login.masterData,\r\n                                                                        this.props.Login.userInfo, addParameterId, \"create\", {})}\r\n                                                                >\r\n\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_ADDMATERIALSAFETYINSTRUCTIONS\" })} />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDMATERIALPROPERTY\" })}\r\n                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) => this.props.addMaterialProperty(this.props.Login.masterData,\r\n                                                                        this.props.Login.userInfo, addMaterialProperty, \"create\", {})}\r\n                                                                >\r\n\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_ADDMATERIALPROPERTY\" })} />\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Card.Subtitle>\r\n                                                </Card.Header>\r\n                                                <Card.Body>\r\n\r\n                                                    <Row>\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={'IDS_MATERIALCAT'} message=\"Material Category\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                        selectedmasterlistmain[0].IDS_MATERIALCAT.label}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={\r\n                                                                    this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 ?\r\n                                                                        'IDS_MATERIALNAME' :\r\n                                                                        this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n                                                                            'IDS_STANDARDMATERIALNAME' :\r\n                                                                            this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n                                                                                'IDS_VOLUMETRICMATERIALNAME' : ''\r\n\r\n\r\n\r\n                                                                } message=\"Material\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n                                                                        this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 ?\r\n                                                                        selectedmasterlistmain[0].IDS_MATERIALNAME :\r\n                                                                        this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n                                                                            selectedmasterlistmain[0].IDS_STANDARDMATERIALNAME :\r\n                                                                            this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n                                                                                selectedmasterlistmain[0].IDS_VOLUMETRICMATERIALNAME : ''}\r\n                                                                </ReadOnlyText>\r\n\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={'IDS_BASICUOM'} message=\"Basic Units\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                        selectedmasterlistmain[0].IDS_BASICUOM.label}\r\n                                                                </ReadOnlyText>\r\n\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        {this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 &&\r\n                                                            <Col md='4'>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id={'IDS_PREFIX'} message=\"Prefix\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                            selectedmasterlistmain[0].IDS_PREFIX}\r\n                                                                    </ReadOnlyText>\r\n\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        }\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={'IDS_REORDERLEVEL'} message=\"Reorder Level\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                        selectedmasterlistmain[0].IDS_REORDERLEVEL}\r\n                                                                </ReadOnlyText>\r\n\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={'IDS_OPENEXIPIRY'} message=\"Open Expiry\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                        selectedmasterlistmain[0].IDS_OPENEXIPIRY}\r\n                                                                </ReadOnlyText>\r\n\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={'IDS_OPENEXIPIRYPERIOD'} message=\"Open Expiry Name\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                        selectedmasterlistmain[0].IDS_OPENEXIPIRYPERIOD.label}\r\n                                                                </ReadOnlyText>\r\n\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={'IDS_NEXTVALIDATION'} message=\"Next Validation Name\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                        selectedmasterlistmain[0].IDS_NEXTVALIDATION}\r\n                                                                </ReadOnlyText>\r\n\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={'IDS_NEXTVALIDATIONPERIOD'} message=\"Next Validation Period\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                        selectedmasterlistmain[0].IDS_NEXTVALIDATIONPERIOD.label}\r\n                                                                </ReadOnlyText>\r\n\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={'IDS_EXPIRYPOLICY'} message=\"Expiry Policy\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                        selectedmasterlistmain[0].IDS_EXPIRYPOLICY}\r\n                                                                </ReadOnlyText>\r\n\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={'IDS_EXPIRYPOLICYPERIOD'} message=\"Expiry Policy Period\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                        selectedmasterlistmain[0].IDS_EXPIRYPOLICYPERIOD.label}\r\n                                                                </ReadOnlyText>\r\n\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        {this.props.Login.masterData.SelectedMaterialType &&\r\n                                                            this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 &&\r\n                                                            <Col md='4'>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id={'IDS_REMARKS'} message=\"Remarks\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                            selectedmasterlistmain[0].IDS_REMARKS}\r\n                                                                    </ReadOnlyText>\r\n\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        }\r\n                                                        {this.props.Login.masterData.SelectedMaterialType &&\r\n                                                            this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 &&\r\n                                                            <Col md='4'>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id={'IDS_REMARKS'} message=\"Remarks\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {selectedmasterlistmain.length > 0 &&\r\n\r\n                                                                            selectedmasterlistmain[0].IDS_REMARKS}\r\n                                                                    </ReadOnlyText>\r\n\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        }\r\n                                                        <Col md='4'>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={'IDS_QUARANTINE'} message=\"Quarentine\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {selectedmasterlistmain.length > 0 &&\r\n                                                                        selectedmasterlistmain[0].IDS_QUARANTINENAME &&\r\n                                                                        selectedmasterlistmain[0].IDS_QUARANTINENAME}\r\n                                                                </ReadOnlyText>\r\n\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n                                                        {this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 &&\r\n                                                            <Col md='4'>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id={'IDS_NOEXPIRY'} message=\"No Expiry\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {selectedmasterlistmain.length > 0 &&\r\n                                                                            selectedmasterlistmain[0].IDS_NOEXPIRYNAME &&\r\n                                                                            selectedmasterlistmain[0].IDS_NOEXPIRYNAME}\r\n                                                                    </ReadOnlyText>\r\n\r\n                                                                </FormGroup>\r\n\r\n                                                            </Col>\r\n                                                        }\r\n                                                        {this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 &&\r\n                                                            <Col md='4'>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id={'IDS_STORAGECONDITION'} message=\"Storage Condition\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {selectedmasterlistmain.length > 0 &&\r\n                                                                            selectedmasterlistmain[0].IDS_STORAGECONDITION.label &&\r\n                                                                            selectedmasterlistmain[0].IDS_STORAGECONDITION.label}\r\n                                                                    </ReadOnlyText>\r\n\r\n                                                                </FormGroup>\r\n\r\n                                                            </Col>\r\n                                                        }\r\n\r\n\r\n                                                        {this.props.Login.masterData.SelectedMaterialType && this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3 &&\r\n                                                            <Col md='4'>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id={'IDS_REUSABLE'} message=\"Reusable\" /></FormLabel>\r\n                                                                    <ReadOnlyText>\r\n                                                                        {selectedmasterlistmain.length > 0 &&\r\n                                                                            selectedmasterlistmain[0].IDS_REUSABLENAME &&\r\n                                                                            selectedmasterlistmain[0].IDS_REUSABLENAME}\r\n                                                                    </ReadOnlyText>\r\n\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        }\r\n\r\n                                                    </Row>\r\n\r\n                                                    {this.props.Login.masterData && <CustomTab tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />}\r\n                                                </Card.Body>\r\n                                            </Card> : \"\"}\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                { }\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.screenname === 'IDS_MATERIALSAFETYINSTRUCTIONS' ? '' :\r\n                            this.props.Login.screenname === 'IDS_MATERIALPROPERTY' ? '' :\r\n                                this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenname}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenname === 'IDS_MATERIALFILE' ? mandatoryFieldsMaterialFile : this.props.Login.screenname === 'IDS_MATERIAL' ? mandatoryFieldsScreenRights :\r\n                            this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ?\r\n                                this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? mandatoryFieldsMaterialSection : ''\r\n                                : ''}\r\n                        updateStore={this.props.updateStore}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                :\r\n                                this.props.Login.screenname !== \"IDS_MATERIALFILE\" ?\r\n                                    this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ?\r\n                                        this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ?\r\n                                            this.props.Login.showMaterialSection ?\r\n                                                <AddMaterialSection\r\n                                                    selectedRecord={this.props.Login.selectedRecord || {}}\r\n                                                    onInputOnChange={this.onInputOnChange}\r\n                                                    MaterialSectionCombodata={this.props.Login.masterData.MaterialSection && this.props.Login.masterData.MaterialSection}\r\n                                                    onNumericInputChange={this.onNumericInputChange}\r\n                                                    onComboChange={this.onComboChange}\r\n                                                    isDisabled={this.props.Login.isneedcombomulti && this.props.Login.isneedcombomulti}\r\n                                                    ismaterialsectionEdit={this.props.Login.ismaterialsectionEdit}\r\n                                                    // parameterData={this.props.parameterData}\r\n                                                    comboData={this.props.Login.masterData.productCategoryList}\r\n                                                />\r\n                                                :\r\n\r\n\r\n\r\n                                                <DynamicSlideout\r\n                                                    selectedRecord={this.state.selectedRecord}\r\n                                                    templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                                        this.props.Login.masterData.selectedTemplate[0].sjsonobjstr}\r\n                                                    onNumericInputChange={this.onNumericInputChange}\r\n                                                    handleChange={this.handleChange}\r\n                                                    onInputOnChange={this.onInputOnChange}\r\n                                                    comboData={this.props.Login.templateData && this.props.Login.templateData.comboData}\r\n                                                    onComboChange={this.onComboChange}\r\n\r\n                                                />\r\n                                            :\r\n                                            <DynamicSlideout\r\n                                                selectedRecord={this.props.Login.selectedRecord}\r\n                                                templateData={this.props.Login.masterData.selectedTemplateSafetyInstructions &&\r\n                                                    this.props.Login.masterData.selectedTemplateSafetyInstructions[0].sjsonobjstr}\r\n                                                handleChange={this.handleChange}\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                            />\r\n                                        :\r\n                                        <DynamicSlideout\r\n                                            selectedRecord={this.props.Login.selectedRecord}\r\n                                            templateData={this.props.Login.masterData.selectedTemplateProperties &&\r\n                                                this.props.Login.masterData.selectedTemplateProperties[0].sjsonobjstr}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            handleChange={this.handleChange}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                        /> :\r\n\r\n                                    <AddMaterialFile\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onDrop={this.onDropMaterialFile}\r\n                                        deleteAttachment={this.deleteAttachment}\r\n                                        onComboChange={this.onComboChange}\r\n                                        linkMaster={this.props.Login.linkMaster}\r\n                                        maxSize={20}\r\n                                        maxFiles={1}\r\n                                        multiple={false}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_MATERIALFILE\" })}\r\n                                        name=\"testfilename\"\r\n                                    />\r\n                        }\r\n                    />\r\n                }\r\n                { }\r\n            </>\r\n        );\r\n    }\r\n\r\n    handleDateChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onDropMaterialFile = (attachedFiles, fieldName, maxSize) => {\r\n\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\"\r\n        });\r\n    }\r\n    onSaveMaterialFile = () => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let testFileArray = [];\r\n        let testFile = {\r\n            nmaterialcode: this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode,\r\n            nmaterialfilecode: selectedRecord.nmaterialfilecode ? selectedRecord.nmaterialfilecode : 0,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            nattachmenttypecode,\r\n            ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\r\n        };\r\n        const formData = new FormData();\r\n        if (nattachmenttypecode === attachmentType.FTP) {\r\n            if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const tempData = Object.assign({}, testFile);\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\r\n                    const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\r\n                    const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0\r\n                        && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\r\n                    tempData[\"sfilename\"] = file.name;\r\n                    tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    testFileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                testFile[\"sfilename\"] = selectedRecord.sfilename;\r\n                testFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\r\n                testFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                testFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                testFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                testFileArray.push(testFile);\r\n            }\r\n        } else {\r\n            testFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n            testFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\r\n            testFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            testFile[\"ssystemfilename\"] = \"\";\r\n            testFile[\"nfilesize\"] = 0;\r\n            testFileArray.push(testFile);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"materialfile\", JSON.stringify(testFileArray[0]));\r\n\r\n        let inputParam;\r\n        if (this.props.Login.operation === 'create') {\r\n            inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"create\",\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialFile\"\r\n            }\r\n        }\r\n        else {\r\n            inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"update\",\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialFile\"\r\n            }\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n\r\n    getPreviewTemplate = (masterData, userInfo, editId) => {\r\n        let data = [];\r\n        const withoutCombocomponent = []\r\n        const Layout = JSON.parse(this.props.Login.templateData)\r\n        Layout.map(row => {\r\n            row.children.map(column => {\r\n                column.children.map(component => {\r\n                    return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            data.push(componentrow)\r\n                        } else {\r\n                            withoutCombocomponent.push(componentrow)\r\n                        }\r\n                    })\r\n                        : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component)\r\n                })\r\n            })\r\n        })\r\n        const comboComponents = data\r\n        this.props.getPreviewTemplate(masterData, userInfo, editId, data, this.state.selectedRecord, null, comboComponents, withoutCombocomponent)\r\n\r\n    }\r\n\r\n    getPreviewTemplateOnchange = (comboData, control) => {\r\n        let data = [];\r\n        const withoutCombocomponent = []\r\n        const Layout = JSON.parse(this.props.Login.templateData)\r\n        Layout.map(row => {\r\n            row.children.map(column => {\r\n                column.children.map(component => {\r\n                    return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            data.push(componentrow)\r\n                        } else {\r\n                            withoutCombocomponent.push(componentrow)\r\n                        }\r\n                    })\r\n                        : component.inputtype === \"combo\" ? data.push(component) : withoutCombocomponent.push(component)\r\n                })\r\n            })\r\n        })\r\n        const comboComponents = data\r\n        const childComboList = getSameRecordFromTwoArrays(comboComponents, control.child, \"label\")\r\n        let childColumnList = {};\r\n        childComboList.map(columnList => {\r\n            const val = this.comboChild(comboComponents, columnList, childColumnList, false);\r\n            childColumnList = val.childColumnList\r\n        })\r\n\r\n        const parentList = getSameRecordFromTwoArrays(withoutCombocomponent, control.child, \"label\")\r\n\r\n        const inputParem = {\r\n            child: control.child,\r\n            source: control.source,\r\n            primarykeyField: control.valuemember,\r\n            value: comboData.value,\r\n            item: comboData.item\r\n        }\r\n        this.props.getChildValues(inputParem,\r\n            this.props.Login.userInfo, this.state.selectedRecord, this.props.Login.comboData,\r\n            childComboList, childColumnList, withoutCombocomponent, [...childComboList, ...parentList])\r\n    }\r\n\r\n    tabDetail = () => {\r\n\r\n        const tabMap = new Map();\r\n        {\r\n            let dataresultarr = []\r\n            this.props.Login.masterData[\"MaterialSection\"] &&\r\n                this.props.Login.masterData[\"MaterialSection\"].map((temp) => {\r\n                    dataresultarr.push(temp.jsondata)\r\n                })\r\n            tabMap.set(\"IDS_MATERIALFILE\",\r\n                <MaterialFileTab\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    deleteRecord={this.deleteRecordmain}\r\n                    MaterialFile={this.props.Login.masterData.MaterialFile || []}\r\n                    addMaterialFile={this.props.addMaterialFile}\r\n                    viewMaterialFile={this.viewMaterialFile}\r\n                    screenName=\"IDS_MATERIALFILE\"\r\n                    settings={this.props.settings}\r\n                />);\r\n            this.props.Login.masterData.ismaterialSectionneed === 3 &&\r\n                tabMap.set(\"IDS_MATERIALSECTION\",\r\n                    <MaterialSectionTab\r\n                        controlMap={this.state.controlMap}\r\n                        userRoleControlRights={this.state.userRoleControlRights}\r\n                        dataResult={process(dataresultarr,\r\n                            (this.props.screenName === undefined || this.props.screenName === \"IDS_MATERIALSECTION\")\r\n                                ? this.state.sectionDataState : { skip: 0, take: 10 })}\r\n                        dataState={(this.props.screenName === undefined || this.props.screenname === \"IDS_MATERIALSECTION\")\r\n                            ? this.state.sectionDataState : { skip: 0, take: 10 }}\r\n                        dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\r\n                        masterData={this.props.Login.masterData}\r\n                        userInfo={this.props.Login.userInfo}\r\n                        getTestDetails={this.props.getTestDetails}\r\n                        getAddMaterialSectionPopup={this.props.getAddMaterialSectionPopup}\r\n                        addParameter={this.addMaterialSection}\r\n                        dataState={{ skip: 0, take: 10 }}\r\n                        deleteRecord={this.deleteRecordmain}\r\n                        fetchRecord={this.props.getMaterialSectionEdit}\r\n                        selectedRecord={this.props.Login.selectedRecord}\r\n\r\n                        screenName=\"IDS_MATERIALSECTION\"\r\n                    />\r\n                );\r\n\r\n        }\r\n\r\n        return tabMap;\r\n    }\r\n\r\n\r\n\r\n    deleteRecordmain = (deleteParam) => {\r\n        const methodUrl = deleteParam.methodUrl;\r\n        const selected = deleteParam.methodUrl === 'MaterialSection' ? JSON.stringify(deleteParam.selectedRecord) :\r\n            JSON.stringify(deleteParam.selectedRecord[\"jsondata\"]);\r\n        let dataState = undefined;\r\n        if (this.props.screenName === \"IDS_SECTION\") {\r\n            dataState = this.state.sectionDataState;\r\n        } else if (this.props.screenName === \"IDS_METHOD\") {\r\n            dataState = this.state.methodDataState;\r\n        } else if (this.props.screenName === \"IDS_INSTRUMENTCATEGORY\") {\r\n            dataState = this.state.instrumentCatDataState;\r\n        }\r\n        const inputParam = {\r\n            inputData: {\r\n                ncontrolCode: deleteParam.ncontrolCode,\r\n                [methodUrl.toLowerCase()]: selected,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"material\",\r\n            operation: deleteParam.operation,\r\n            ncontrolCode: deleteParam.ncontrolCode,\r\n            methodUrl: methodUrl,\r\n            screenName: \"IDS_MATERIAL\", dataState\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_MATERIAL\", operation: deleteParam.operation, selectedRecord: {}\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n        }\r\n    }\r\n\r\n    addMaterialSection = (param) => {\r\n        let showMaterialSection = this.props.Login.showMaterialSection\r\n        let ncontrolCode = this.props.Login.ncontrolCode\r\n\r\n        let openModal = this.props.Login.openModal\r\n        let isneedcombomulti = this.props.Login.isneedcombomulti;\r\n        isneedcombomulti = false;\r\n        showMaterialSection = true\r\n        openModal = true\r\n        ncontrolCode = param;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showMaterialSection, isneedcombomulti, openModal }\r\n        }\r\n        this.props.getAddMaterialSectionPopup(this.props.Login.masterData, this.props.Login.userInfo, updateInfo, ncontrolCode)\r\n\r\n\r\n    }\r\n\r\n    ListmasterSwitch = (event, nusersrolehidescreencode) => {\r\n        let inputData = [];\r\n        const selectedSwitch = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        const inputParam = {\r\n            needrights: selectedSwitch,\r\n            nusersrolehidescreencode: nusersrolehidescreencode,\r\n            nuserrolecode: this.state.selectedcombo[\"nuserrolecode\"].value,\r\n            nusercodemain: this.state.selectedcombouser[\"nusercode\"].value\r\n        }\r\n        this.props.ListSwitchUpdate(inputParam, this.props.Login.masterData, this.props.Login.userInfo);\r\n    }\r\n    switchGroupBy = (event) => {\r\n\r\n        const selectedSwitch = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        let dataState = this.state.dataState || {};\r\n        if (selectedSwitch === transactionStatus.YES) {\r\n            dataState = { ...dataState, group: [{ field: 'screenname' }] };\r\n        }\r\n        else {\r\n            dataState = { skip: dataState.skip, take: dataState.take }\r\n        }\r\n        this.setState({ selectedSwitch, dataState });\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let inputData = [];\r\n        inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\r\n        inputData[\"userrnameList\"] = this.state.userrnameList;\r\n        const inputParam = {\r\n            classUrl: \"material\",\r\n            methodUrl: \"getMaterialByTypeCode\",\r\n            displayName: \"Material\",\r\n            inputData: inputData\r\n        }\r\n        if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\r\n            this.props.getMaterialByTypeCode(inputParam, this.state.selectedcombo,\r\n                this.state.selectedcombouser, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height\r\n            });\r\n        }\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        breadCrumbData.push(\r\n            {\r\n                \"label\": \"IDS_MATERIALTYPE\",\r\n                \"value\": this.props.Login.masterData.SelectedMaterialType ? this.props.Login.masterData.SelectedMaterialType[0].smaterialtypename : \"NA\",\r\n\r\n            }, {\r\n\r\n            \"label\": \"IDS_MATERIALCAT\",\r\n            \"value\": this.props.Login.masterData.SelectedMaterialCategory ?\r\n                this.props.Login.masterData.SelectedMaterialCategory.smaterialcatname !== undefined ?\r\n                    this.props.Login.masterData.SelectedMaterialCategory.smaterialcatname : \"NA\" : \"NA\",\r\n        }\r\n        );\r\n        return breadCrumbData;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let bool = false;\r\n        let { selectedRecord, selectedcombo, comboitem, filterData, userroleList, selectedcombouser,\r\n            userrnameList } = this.state\r\n        const masterData = this.props.Login.masterData;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            bool = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        if (this.props.Login.selectedcombo !== previousProps.Login.selectedcombo) {\r\n            bool = true;\r\n            selectedcombo = this.props.Login.selectedcombo\r\n        }\r\n\r\n        if (this.props.Login.comboitem !== previousProps.Login.comboitem) {\r\n            bool = true;\r\n            comboitem = this.props.Login.comboitem\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({\r\n                userRoleControlRights, controlMap, data: this.props.Login.masterData.ControlRights\r\n            });\r\n        }\r\n        if (this.props.Login.masterData.MaterialType !== undefined) {\r\n            if (this.props.Login.masterData.MaterialType !== previousProps.Login.masterData.MaterialType) {\r\n                bool = true;\r\n                const userrole = constructOptionList(this.props.Login.masterData.MaterialType || [], \"nmaterialtypecode\",\r\n                    \"smaterialtypename\", undefined, undefined, undefined);\r\n                userroleList = userrole.get(\"OptionList\");\r\n\r\n                selectedcombo = {\r\n                    nmaterialtypecode: masterData.MaterialType && masterData.MaterialType.length > 0 ? {\r\n                        \"value\": masterData.MaterialType[0].nmaterialtypecode,\r\n                        \"label\": masterData.MaterialType[0].smaterialtypename\r\n                    } : \"\"\r\n                }\r\n            }\r\n        }\r\n        if (this.props.Login.masterData.MaterialCategoryMain !== previousProps.Login.masterData.MaterialCategoryMain) {\r\n            const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                \"smaterialcatname\", undefined, undefined, undefined);\r\n            userrnameList = MaterialCategoryMain.get(\"OptionList\");\r\n\r\n            selectedcombouser = {\r\n                nmaterialcatcode: masterData.MaterialCategoryMain && masterData.MaterialCategoryMain.length > 0 ? {\r\n                    \"value\": masterData.MaterialCategoryMain[0].nmaterialcatcode,\r\n                    \"label\": masterData.MaterialCategoryMain[0].smaterialcatname\r\n                } : \"\"\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            filterData = this.generateBreadCrumData();\r\n        }\r\n\r\n\r\n        if (this.props.Login.masterData.searchedData !== previousProps.Login.masterData.searchedData) {\r\n            if (this.props.Login.masterData.searchedData) {\r\n                if (this.props.Login.masterData.searchedData.length <= this.state.skip) {\r\n                    this.setState({ skip: 0 });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                selectedRecord, comboitem, filterData, selectedcombo, userroleList, selectedcombouser,\r\n                userrnameList\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handlePageChange = e => {\r\n\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n\r\n    };\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    viewMaterialFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                materialfile: JSON.stringify(filedata['jsondata']),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"material\",\r\n            operation: \"view\",\r\n            methodUrl: \"AttachedMaterialFile\",\r\n            screenname: \"IDS_MATERIAL\"\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let showMaterialSection = this.props.Login.showMaterialSection\r\n        let isneedcombomulti = this.props.Login.isneedcombomulti;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            showMaterialSection = false;\r\n            isneedcombomulti = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, showMaterialSection, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            if (fieldName === \"nmaterialtypecode\") {\r\n                const selectedcombo = this.state.selectedcombo || {};\r\n                selectedcombo[fieldName] = comboData;\r\n                this.searchRef.current.value = \"\";\r\n                const inputParamcombo = {\r\n                    nmaterialtypecode: comboData.item.nmaterialtypecode\r\n                };\r\n\r\n                const selectedcombouser = this.state.selectedcombouser || {};\r\n                this.props.initialcombochangeget(comboData.item.nmaterialtypecode, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n            }\r\n            else if (fieldName === \"nmaterialcatcode\") {\r\n                const selectedcombouser = this.state.selectedcombouser || {};\r\n                selectedcombouser[fieldName] = comboData;\r\n                this.setState({ selectedcombouser });\r\n            }\r\n\r\n            else if (fieldName === \"nmaterialsectioncode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nmaterialsectioncode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }\r\n            else if (fieldName === \"nlinkcode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nlinkcode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }\r\n\r\n            else if (fieldName.displaymember === \"smaterialcatname\" || fieldName.displaymember === \"sunitname\" || fieldName.displaymember === \"speriodname\") {\r\n                const selectedcombouser = this.state.selectedcombouser || {};\r\n                selectedcombouser[fieldName] = comboData;\r\n                this.setState({ selectedcombouser });\r\n\r\n                let comboName = fieldName.label\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                if (comboData) {\r\n                    selectedRecord[comboName] = comboData;\r\n                } else {\r\n                    selectedRecord[comboName] = []\r\n                }\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n\r\n            else if (fieldName.label === \"IDS_STORAGECONDITION\") {\r\n\r\n\r\n                let comboName = fieldName.label\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                if (comboData) {\r\n                    selectedRecord[comboName] = comboData;\r\n                } else {\r\n                    selectedRecord[comboName] = []\r\n                }\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n\r\n            //For Onchange\r\n            else if (fieldName.displaymember === \"smaterialcatname1\") {\r\n                let data = [];\r\n                const withoutCombocomponent = []\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            else if (fieldName === \"value\") {\r\n                const comboitem = this.state.comboitem || {};\r\n                comboitem[fieldName] = comboData;\r\n                this.setState({ comboitem });\r\n            }\r\n            else if (fieldName === \"nformcode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nformcode\"] = comboData;\r\n                let availableDatas = [];\r\n                this.state.selectedRecord.nformcode.map(data => {\r\n                    return availableDatas.push(data.item);\r\n                });\r\n\r\n\r\n                this.setState({ selectedRecord, availableDatas });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onInputOnChange = (event, optional1, optional2) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (this.props.Login.screenname !== \"IDS_MATERIALFILE\") {\r\n            if (event.target.type === 'checkbox') {\r\n                if (event.target.name === \"ntransactionstatus\")\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n                else\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n            this.setState({ selectedRecord });\r\n        }\r\n        else {\r\n            if (event.target.type === 'checkbox') {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? optional2[0] : optional2[1];\r\n            } else if (event.target.type === 'radio') {\r\n                selectedRecord[event.target.name] = optional2;\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    onInputOnControlRights(event, rowItem, columnName, rowIndex, saveType, needesignparent) {\r\n        const selectedRecord = {};\r\n        if (needesignparent === 4) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_ITISDEACTIVEINSCREENRIGHTS\" }))\r\n        }\r\n        else {\r\n            if (rowItem[\"needrights\"] !== 3) {\r\n                selectedRecord[\"ncontrolcode\"] = rowItem[\"ncontrolcode\"]\r\n                selectedRecord[\"nformcode\"] = rowItem[\"nformcode\"]\r\n                selectedRecord[\"nstatus\"] = rowItem[\"nstatus\"]\r\n                selectedRecord[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"].value\r\n                selectedRecord[\"nusercode\"] = this.state.selectedcombouser[\"nusercode\"].value\r\n                selectedRecord[\"scontrolids\"] = rowItem[\"scontrolids\"]\r\n                selectedRecord[\"scontrolname\"] = rowItem[\"scontrolname\"]\r\n                selectedRecord[\"screenname\"] = rowItem[\"screenname\"]\r\n                if (columnName === \"nneedesign\") {\r\n                    selectedRecord[\"nneedesign\"] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                }\r\n                else {\r\n                    selectedRecord[\"needrights\"] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                }\r\n                this.saveClick(selectedRecord, saveType, undefined);\r\n            }\r\n        }\r\n    }\r\n\r\n    saveClick = (selectedRecord, saveType, formRef) => {\r\n        let operation = \"update\";\r\n        let methodUrl = \"\";\r\n        let inputData = [];\r\n        let postParam = {\r\n            inputListName: \"ScreenRights\", selectedObject: \"SelectedScreenRights\",\r\n            primaryKeyField: \"nusersrolehidescreencode\"\r\n        }\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights;\r\n        inputData[\"nflag\"] = transactionStatus.ACTIVE;\r\n        inputData[\"screenrights\"] = selectedRecord;\r\n        if (saveType === 1) {\r\n            inputData[\"needrights\"] = selectedRecord[\"needrights\"];\r\n            inputData[\"nneedesign\"] = null;\r\n            methodUrl = \"ControlRights\";\r\n        }\r\n        else {\r\n            inputData[\"nneedesign\"] = selectedRecord[\"nneedesign\"];\r\n            methodUrl = \"Esign\";\r\n        }\r\n        const inputParam = {\r\n            classUrl: \"userscreenhide\",\r\n            methodUrl: \"ScreenHideControlRights\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef, searchRef: this.searchRef, postParam, dataState: this.state.dataState\r\n        }\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        let varmain = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n\r\n        if (this.props.Login.screenname === \"IDS_MATERIAL\") {\r\n\r\n            if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\r\n                varmain = \"IDS_STANDARDMATERIALNAME\"\r\n            }\r\n            else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\r\n                varmain = \"IDS_VOLUMETRICMATERIALNAME\"\r\n            }\r\n            else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\r\n                varmain = \"IDS_MATERIALNAME\"\r\n            }\r\n\r\n\r\n\r\n            inputData[\"Material\"] = {\r\n                \"IDS_PREFIX\": this.state.selectedRecord.IDS_PREFIX,\r\n                \"IDS_REORDERLEVEL\": this.state.selectedRecord.IDS_REORDERLEVEL,\r\n                \"IDS_OPENEXIPIRY\": this.state.selectedRecord.IDS_OPENEXIPIRY,\r\n                \"IDS_NEXTVALIDATION\": this.state.selectedRecord.IDS_NEXTVALIDATION,\r\n                \"IDS_EXPIRYPOLICY\": this.state.selectedRecord.IDS_EXPIRYPOLICY,\r\n                \"IDS_REMARKS\": this.state.selectedRecord.IDS_REMARKS,\r\n                \"nmaterialcatcode\": this.state.selectedcombouser[\"nmaterialcatcode\"].value,\r\n                \"nmaterialtypecode\": this.state.selectedcombo[\"nmaterialtypecode\"].value,\r\n                \"IDS_OPENEXIPIRYPERIOD\": {\r\n                    value: this.state.selectedRecord[\"IDS_OPENEXIPIRYPERIOD\"] && this.state.selectedRecord[\"IDS_OPENEXIPIRYPERIOD\"].value,\r\n                    label: this.state.selectedRecord[\"IDS_OPENEXIPIRYPERIOD\"] && this.state.selectedRecord[\"IDS_OPENEXIPIRYPERIOD\"].label\r\n                }\r\n\r\n                ,\r\n                \"IDS_NEXTVALIDATIONPERIOD\": {\r\n                    value: this.state.selectedRecord[\"IDS_NEXTVALIDATIONPERIOD\"] && this.state.selectedRecord[\"IDS_NEXTVALIDATIONPERIOD\"].value\r\n                    , label: this.state.selectedRecord[\"IDS_NEXTVALIDATIONPERIOD\"] && this.state.selectedRecord[\"IDS_NEXTVALIDATIONPERIOD\"].label\r\n                },\r\n\r\n                \"IDS_EXPIRYPOLICYPERIOD\": {\r\n                    value: this.state.selectedRecord[\"IDS_EXPIRYPOLICYPERIOD\"] && this.state.selectedRecord[\"IDS_EXPIRYPOLICYPERIOD\"].value,\r\n                    label: this.state.selectedRecord[\"IDS_EXPIRYPOLICYPERIOD\"] && this.state.selectedRecord[\"IDS_EXPIRYPOLICYPERIOD\"].label\r\n                },\r\n                \"IDS_MATERIALCAT\": {\r\n                    label: this.state.selectedRecord[\"IDS_MATERIALCAT\"].label,\r\n                    value: this.state.selectedRecord[\"IDS_MATERIALCAT\"].value\r\n                },\r\n                \"IDS_BASICUOM\": {\r\n                    label: this.state.selectedRecord[\"IDS_BASICUOM\"].label,\r\n                    value: this.state.selectedRecord[\"IDS_BASICUOM\"].value\r\n                },\r\n                \"IDS_STORAGECONDITION\": {\r\n                    label: this.state.selectedRecord[\"IDS_STORAGECONDITION\"] && this.state.selectedRecord[\"IDS_STORAGECONDITION\"].label,\r\n                    value: this.state.selectedRecord[\"IDS_STORAGECONDITION\"] && this.state.selectedRecord[\"IDS_STORAGECONDITION\"].value\r\n                },\r\n                \"IDS_MATERIALSYNONYM\": this.state.selectedRecord[\"IDS_MATERIALSYNONYM\"] && this.state.selectedRecord[\"IDS_MATERIALSYNONYM\"],\r\n\r\n                \"IDS_QUARANTINE\": this.state.selectedRecord[\"IDS_QUARANTINE\"] && this.state.selectedRecord[\"IDS_QUARANTINE\"],\r\n                \"IDS_NOEXPIRY\": this.state.selectedRecord[\"IDS_NOEXPIRY\"] && this.state.selectedRecord[\"IDS_NOEXPIRY\"],\r\n                \"IDS_REUSABLE\": this.state.selectedRecord[\"IDS_REUSABLE\"] && this.state.selectedRecord[\"IDS_REUSABLE\"],\r\n\r\n                \"IDS_QUARANTINENAME\": this.state.selectedRecord[\"IDS_QUARANTINE\"] && this.state.selectedRecord[\"IDS_QUARANTINE\"] === transactionStatus.YES ? 'Yes' : 'No',\r\n                \"IDS_NOEXPIRYNAME\": this.state.selectedRecord[\"IDS_NOEXPIRY\"] && this.state.selectedRecord[\"IDS_NOEXPIRY\"] === transactionStatus.YES ? 'Yes' : 'No',\r\n                \"IDS_REUSABLENAME\": this.state.selectedRecord[\"IDS_REUSABLE\"] && this.state.selectedRecord[\"IDS_REUSABLE\"] === transactionStatus.YES ? 'Yes' : 'No'\r\n\r\n            }\r\n\r\n            inputData[\"Material\"][varmain] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n                this.state.selectedRecord.IDS_STANDARDMATERIALNAME :\r\n                this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n                    this.state.selectedRecord.IDS_VOLUMETRICMATERIALNAME :\r\n                    this.state.selectedRecord.IDS_MATERIALNAME\r\n\r\n            inputData[\"materialJson\"] = JSON.stringify(inputData[\"Material\"])\r\n            inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"].value\r\n            inputData[\"nmaterialcatcode\"] = this.state.selectedcombouser[\"nmaterialcatcode\"].value\r\n            if (this.props.Login.operation === 'create') {\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"Material\",\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef,\r\n                    dataState: this.state.dataState\r\n                }\r\n            }\r\n            else {\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"Material\",\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef,\r\n                    dataState: this.state.dataState\r\n                }\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (this.props.Login.screenName === \"IDS_MATERIAL\") {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                }\r\n            } else {\r\n                if (this.props.Login.masterData.copyScreenRights ? this.props.Login.masterData.copyScreenRights.length > 0 : false) {\r\n                    this.ConfirmComponent()\r\n                }\r\n                else {\r\n                  //  if (this.props.Login.isSelectedRecordChange) {\r\n\r\n                        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                            // let isSelectedRecordChange = this.props.Login.isSelectedRecordChange\r\n                            const updateInfo = {\r\n                                typeName: DEFAULT_RETURN,\r\n                                data: {\r\n                                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                                }\r\n                            }\r\n                            // this.setState({ isSelectedRecordChange: false })\r\n                            this.props.updateStore(updateInfo);\r\n                        }\r\n                        else {\r\n                            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                        }\r\n                  //  }\r\n                    // else {\r\n                    //     const updateInfo = {\r\n                    //         typeName: DEFAULT_RETURN,\r\n                    //         data: {\r\n                    //             openModal: false,\r\n                    //             isSelectedRecordChange: false\r\n                    //         }\r\n                    //     }\r\n                    //     this.props.updateStore(updateInfo);\r\n                    // }\r\n                }\r\n            }\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALSAFETYINSTRUCTIONS\") {\r\n            const dynamicobj = {\r\n                \"IDS_INFALMMABLE\": this.state.selectedRecord[\"IDS_INFALMMABLE\"],\r\n                \"IDS_KEEPREFRIGERATED\": this.state.selectedRecord[\"IDS_KEEPREFRIGERATED\"],\r\n                \"IDS_NOACIDS\": this.state.selectedRecord[\"IDS_NOACIDS\"],\r\n                \"IDS_NOBASES\": this.state.selectedRecord[\"IDS_NOBASES\"],\r\n                \"IDS_NOOXIDIZER\": this.state.selectedRecord[\"IDS_NOOXIDIZER\"],\r\n                \"IDS_CORROSIVE\": this.state.selectedRecord[\"IDS_CORROSIVE\"],\r\n                \"IDS_HAZARDOUS\": this.state.selectedRecord[\"IDS_HAZARDOUS\"],\r\n                \"IDS_AVOIDEXPOSURETOLIGHTS\": this.state.selectedRecord[\"IDS_AVOIDEXPOSURETOLIGHTS\"],\r\n                \"IDS_PERSONALPROTECTIVEEQUIPMENT\": this.state.selectedRecord[\"IDS_PERSONALPROTECTIVEEQUIPMENT\"],\r\n                \"IDS_KEEPFROZEN\": this.state.selectedRecord[\"IDS_KEEPFROZEN\"],\r\n                \"IDS_KEEPDESSICATED\": this.state.selectedRecord[\"IDS_KEEPDESSICATED\"],\r\n                \"IDS_CLOTHING\": this.state.selectedRecord[\"IDS_CLOTHING\"],\r\n                \"IDS_GOGGLES\": this.state.selectedRecord[\"IDS_GOGGLES\"],\r\n                \"IDS_GLOVES\": this.state.selectedRecord[\"IDS_GLOVES\"],\r\n                \"IDS_HEALTH\": this.state.selectedRecord[\"IDS_HEALTH\"],\r\n                \"IDS_REACTIVITY\": this.state.selectedRecord[\"IDS_REACTIVITY\"],\r\n                \"IDS_FLAMMABLE\": this.state.selectedRecord[\"IDS_FLAMMABLE\"],\r\n                \"IDS_SPECIFIC\": this.state.selectedRecord[\"IDS_SPECIFIC\"]\r\n\r\n            }\r\n            inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\r\n            if (this.props.Login.masterData.MaterialSafetyInstructions.length > 0) {\r\n                inputData[\"nmaterialsafetyinstructionscode\"] =\r\n                    this.props.Login.masterData.MaterialSafetyInstructions[0].nmaterialsafetyinstructionscode\r\n            }\r\n            else {\r\n                inputData[\"nmaterialsafetyinstructionscode\"] = 0\r\n            }\r\n\r\n            inputData[\"materialSafetyInstructions\"] = JSON.stringify(dynamicobj)\r\n            inputData[\"nflag\"] = 1;\r\n            inputParam = {\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialSafetyInstructions\",\r\n                inputData: inputData,\r\n                operation: 'create',\r\n                saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                searchRef: this.searchRef,\r\n                dataState: this.state.dataState\r\n            }\r\n            let masterData = this.props.Login.masterData\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALFILE\") {\r\n            inputParam = this.onSaveMaterialFile();\r\n            let masterData = this.props.Login.masterData\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALPROPERTY\") {\r\n            let masterData = this.props.Login.masterData\r\n            const dynamicobj = {\r\n                \"IDS_STRUCTURALFORMULA\": this.state.selectedRecord[\"IDS_STRUCTURALFORMULA\"],\r\n                \"IDS_PHYSICALDESCRIPTION\": this.state.selectedRecord[\"IDS_PHYSICALDESCRIPTION\"],\r\n                \"IDS_BOILINGPOINT\": this.state.selectedRecord[\"IDS_BOILINGPOINT\"],\r\n                \"IDS_MELTINGPOINT\": this.state.selectedRecord[\"IDS_MELTINGPOINT\"],\r\n                \"IDS_MOLECULARWEIGHT\": this.state.selectedRecord[\"IDS_MOLECULARWEIGHT\"],\r\n                \"IDS_STANDARDSPECIFICGRAVITY\": this.state.selectedRecord[\"IDS_STANDARDSPECIFICGRAVITY\"],\r\n                \"IDS_STANDARDPURITY\": this.state.selectedRecord[\"IDS_STANDARDPURITY\"],\r\n                \"IDS_STANDARDLENGTH\": this.state.selectedRecord[\"IDS_STANDARDLENGTH\"],\r\n                \"IDS_GASNUMBER\": this.state.selectedRecord[\"IDS_GASNUMBER\"],\r\n                \"IDS_BULKDENSITY\": this.state.selectedRecord[\"IDS_BULKDENSITY\"],\r\n                \"IDS_DATEOFSTANDARDIZATION\": this.state.selectedRecord[\"IDS_DATEOFSTANDARDIZATION\"],\r\n                \"IDS_ASISBASIS\": this.state.selectedRecord[\"IDS_ASISBASIS\"],\r\n                \"IDS_DRIEDANDYDROUSBASIS\": this.state.selectedRecord[\"IDS_DRIEDANDYDROUSBASIS\"],\r\n                \"IDS_ASISBASIS1\": this.state.selectedRecord[\"IDS_ASISBASIS1\"],\r\n                \"IDS_DRIEDANDYDROUSBASIS2\": this.state.selectedRecord[\"IDS_DRIEDANDYDROUSBASIS2\"],\r\n                \"IDS_DIRECTIONOFUSE\": this.state.selectedRecord[\"IDS_DIRECTIONOFUSE\"],\r\n                \"IDS_COMMENTS\": this.state.selectedRecord[\"IDS_COMMENTS\"]\r\n\r\n            }\r\n            inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\r\n            if (this.props.Login.masterData.MaterialProperties.length > 0) {\r\n                inputData[\"nmaterialpropertycode\"] =\r\n                    this.props.Login.masterData.MaterialProperties[0].nmaterialpropertycode\r\n            } else {\r\n                inputData[\"nmaterialpropertycode\"] = 0\r\n            }\r\n\r\n\r\n            inputData[\"materialProperty\"] = JSON.stringify(dynamicobj)\r\n            inputData[\"nflag\"] = 2;\r\n            inputParam = {\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialSafetyInstructions\",\r\n                inputData: inputData,\r\n                operation: 'create',\r\n                saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                searchRef: this.searchRef,\r\n                dataState: this.state.dataState\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.Login.operation !== \"update\") {\r\n                let showMaterialSection = this.props.Login.showMaterialSection\r\n                let newarr = []\r\n                let newarrobj = []\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\r\n                if (this.state.selectedRecord[\"nmaterialsectioncode\"].length > 1) {\r\n                    newarr = this.state.selectedRecord.nmaterialsectioncode.map(temp => {\r\n                        return {\r\n                            \"ssectionname\": temp.label,\r\n                            \"nsectioncode\": temp.value,\r\n                            \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\r\n                            \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    newarr.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\r\n                    });\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarr)\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"MaterialSection\",\r\n                    inputData: inputData,\r\n                    operation: \"create\",\r\n                    showMaterialSection: showMaterialSection,\r\n                    selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef\r\n                }\r\n            }\r\n            else {\r\n                let newarr = []\r\n                let newarrobj = []\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\r\n                if (Array.isArray(this.state.selectedRecord[\"nmaterialsectioncode\"])) {\r\n                    newarrobj.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\r\n                    });\r\n                }\r\n                else {\r\n                    newarrobj.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode\r\n                    });\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarrobj)\r\n                inputData[\"MaterialSection\"] = {\r\n                    \"IDS_REORDERLEVEL\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"]\r\n\r\n                }\r\n                inputData[\"nmaterialsectioncode\"] = this.state.selectedRecord.nmaterialsectioncodeprimaryKeyValue\r\n\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"MaterialSection\",\r\n                    inputData: inputData,\r\n                    showMaterialSection: false,\r\n                    operation: \"update\",\r\n                    selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef\r\n                }\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    copyAlertSave = () => {\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        inputData[\"screenrights\"] = this.state.availableDatas;\r\n        inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\r\n        inputData[\"userrolecode\"] = this.state.selectedRecord ? this.state.selectedRecord[\"nuserrole\"].value : \"\";\r\n        inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"ScreenRights\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.copyScreenRights(this.state.selectedRecord ? this.state.selectedRecord[\"nuserrole\"].value : \"\", this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\", this.props.Login.userInfo, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n    onSaveAllControlAndEsign = (skip, take, saveType, formRef) => {\r\n        let value = this.state.comboitem ? this.state.comboitem.value.value : this.ControlButton[0].value\r\n        let operation = \"\";\r\n        let methodUrl = \"\";\r\n        let inputData = [];\r\n        let postParam = undefined;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights;\r\n        inputData[\"nflag\"] = transactionStatus.DEACTIVE;\r\n        postParam = {\r\n            inputListName: \"ScreenRights\", selectedObject: \"SelectedScreenRights\",\r\n            primaryKeyField: \"nusersrolehidescreencode\"\r\n        }\r\n        if (value === 1) {\r\n            inputData[\"needrights\"] = transactionStatus.YES;\r\n            inputData[\"nneedesign\"] = null;\r\n            operation = \"update\";\r\n            methodUrl = \"ControlRights\";\r\n        }\r\n        else if (value === 2) {\r\n            inputData[\"needrights\"] = transactionStatus.NO;\r\n            inputData[\"nneedesign\"] = null;\r\n            operation = \"update\";\r\n            methodUrl = \"ControlRights\";\r\n        }\r\n        else if (value === 3) {\r\n            inputData[\"nneedesign\"] = transactionStatus.YES;\r\n            operation = \"update\";\r\n            methodUrl = \"Esign\";\r\n        }\r\n        else if (value === 4) {\r\n            inputData[\"nneedesign\"] = transactionStatus.NO;\r\n            operation = \"update\";\r\n            methodUrl = \"Esign\";\r\n        }\r\n\r\n        const inputParam = {\r\n            classUrl: \"userscreenhide\",\r\n            methodUrl: \"ScreenHideControlRights\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType,\r\n            formRef, postParam,\r\n            searchRef: this.searchRef,\r\n            selectedcombo: this.props.Login.selectedcombo,\r\n        }\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n\r\n    ConfirmComponent = () => {\r\n        this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({ id: \"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\" }),\r\n            \"ok\", \"cancel\", () => this.copyAlertSave());\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    handleClickDelete(masterData, ncontrolcode, modalName) {\r\n        const fieldArray = [];\r\n        let postParam = {\r\n            inputListName: \"Material\", selectedObject: \"SelectedMaterial\",\r\n            primaryKeyField: \"nmaterialcode\",\r\n            primaryKeyValue: fieldArray,\r\n            fetchUrl: \"material/getMaterial\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        modalName = 'openModal'\r\n\r\n        const inputParam = {\r\n            methodUrl: \"Material\",\r\n            classUrl: \"material\",\r\n            inputData: {\r\n                \"material\": this.props.Login.masterData.SelectedMaterial,\r\n                \"nmaterialcatcode\": this.state.selectedcombouser[\"nmaterialcatcode\"].value,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.jsondata.nmaterialcode,\r\n                \"nmaterialtypecode\": this.state.selectedcombo[\"nmaterialtypecode\"].value\r\n            },\r\n            operation: \"delete\", postParam,\r\n            displayName: \"Material\",\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, [modalName]: true,\r\n                    operation: 'delete', screenName: \"Material\", id: \"material\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, modalName);\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let inputData = [];\r\n        inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\r\n        inputData[\"userrnameList\"] = this.state.userrnameList;\r\n        const inputParam = {\r\n            classUrl: \"material\",\r\n            methodUrl: \"getMaterialByTypeCode\",\r\n            displayName: \"Material\",\r\n            inputData: inputData\r\n        }\r\n        this.setState({ sectionDataState: { skip: 0, take: 10 } })\r\n        if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\r\n            this.props.getMaterialByTypeCode(inputParam, this.state.selectedcombo, this.state.selectedcombouser,\r\n                this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, updateStore, initialcombochangeget, getAddMaterialPopup, viewAttachment,\r\n    crudMaster, getMaterialDetails, getMaterialEdit, getMaterialByTypeCode, addMaterialFile\r\n    , getAddMaterialSectionPopup, getMaterialSectionEdit, filterColumnData, validateEsignCredential, addSafetyInstructions, addMaterialProperty\r\n})(injectIntl(Material));\r\n\r\n"]},"metadata":{},"sourceType":"module"}