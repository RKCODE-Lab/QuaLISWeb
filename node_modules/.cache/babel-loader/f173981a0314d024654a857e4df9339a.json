{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\AddSynonym.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../form-input/form-input.component';\n\nconst AddSynonym = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, props.languages.map(lang => /*#__PURE__*/React.createElement(FormInput, {\n    label: lang.label,\n    name: lang.value,\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, 'synonym'),\n    placeholder: lang.slanguagename,\n    value: props.selectedFieldRecord.displayname && props.selectedFieldRecord.displayname[lang.value] ? props.selectedFieldRecord.displayname[lang.value] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(AddSynonym);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/droparea/AddSynonym.jsx"],"names":["React","Col","Row","injectIntl","FormInput","AddSynonym","props","languages","map","lang","label","value","event","onInputOnChange","slanguagename","selectedFieldRecord","displayname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,sBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoBC,IAAI,iBACrB,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEA,IAAI,CAACC,KADhB;AAEI,IAAA,IAAI,EAAED,IAAI,CAACE,KAFf;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,eAAN,CAAsBD,KAAtB,EAA6B,SAA7B,CAJzB;AAKI,IAAA,WAAW,EAAEH,IAAI,CAACK,aALtB;AAMI,IAAA,KAAK,EAAER,KAAK,CAACS,mBAAN,CAA0BC,WAA1B,IAAyCV,KAAK,CAACS,mBAAN,CAA0BC,WAA1B,CAAsCP,IAAI,CAACE,KAA3C,CAAzC,GAA6FL,KAAK,CAACS,mBAAN,CAA0BC,WAA1B,CAAsCP,IAAI,CAACE,KAA3C,CAA7F,GAAiJ,EAN5J;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,QAAQ,EAAE,IARd;AASI,IAAA,SAAS,EAAE,IATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ,CADJ;AAoBH,CArBD;;AAsBA,eAAeR,UAAU,CAACE,UAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../form-input/form-input.component';\r\nconst AddSynonym = (props) => {\r\n    return (\r\n        <Row className='pt-3'>\r\n            <Col md={12}>\r\n                {props.languages.map(lang =>\r\n                    <FormInput\r\n                        label={lang.label}\r\n                        name={lang.value}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event, 'synonym')}\r\n                        placeholder={lang.slanguagename}\r\n                        value={props.selectedFieldRecord.displayname && props.selectedFieldRecord.displayname[lang.value] ? props.selectedFieldRecord.displayname[lang.value] : \"\"}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={\"30\"}\r\n                    />\r\n                )\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddSynonym)"]},"metadata":{},"sourceType":"module"}