{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{getComboLabelValue,constructOptionList}from'../components/CommonScript';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';export function getProductComboService(productParam){return function(dispatch){var productCategoryService=rsapi.post(\"/productcategory/getProductCategory\",{userinfo:productParam.userInfo});var urlArray=[];var selectedId=null;if(productParam.operation===\"create\"){urlArray=[productCategoryService];}else{var _rsapi$post;var url=productParam.inputParam.classUrl+\"/getActive\"+productParam.inputParam.methodUrl+\"ById\";//\"product/getActiveproductById\"      \nvar productById=rsapi.post(url,(_rsapi$post={},_defineProperty(_rsapi$post,productParam.primaryKeyField,productParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",productParam.userInfo),_rsapi$post));urlArray=[productCategoryService,productById];selectedId=productParam.primaryKeyValue;}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};var productCatMap=constructOptionList(response[0].data||[],\"nproductcatcode\",\"sproductcatname\",undefined,undefined,true);var productCategoryList=productCatMap.get(\"OptionList\");if(productParam.operation===\"update\"){selectedRecord=response[1].data;selectedRecord[\"nproductcatcode\"]=getComboLabelValue(selectedRecord,response[0].data,\"nproductcatcode\",\"sproductcatname\");}else{var productCatdefault=productCatMap.get(\"DefaultValue\");selectedRecord[\"nproductcatcode\"]=productCatdefault;}dispatch({type:DEFAULT_RETURN,payload:{productCategoryList:productCategoryList,//:response[0].data || [],                               \noperation:productParam.operation,screenName:productParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:productParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/ProductAction.js"],"names":["rsapi","Axios","toast","getComboLabelValue","constructOptionList","DEFAULT_RETURN","initRequest","getProductComboService","productParam","dispatch","productCategoryService","post","userinfo","userInfo","urlArray","selectedId","operation","url","inputParam","classUrl","methodUrl","productById","primaryKeyField","primaryKeyValue","all","then","response","selectedRecord","productCatMap","data","undefined","productCategoryList","get","productCatdefault","type","payload","screenName","openModal","ncontrolCode","loading","catch","error","status","message","warn"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    getComboLabelValue,\r\n    constructOptionList\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\n\r\n\r\n\r\nexport function getProductComboService (productParam) {            \r\n    return function (dispatch) {   \r\n    const productCategoryService = rsapi.post(\"/productcategory/getProductCategory\", \r\n                                    {userinfo:productParam.userInfo});\r\n    let urlArray = [];\r\n    let selectedId = null;\r\n    if (productParam.operation === \"create\"){\r\n        urlArray = [productCategoryService];\r\n    }\r\n    else{           \r\n        const url = productParam.inputParam.classUrl+ \"/getActive\" + productParam.inputParam.methodUrl + \"ById\";   //\"product/getActiveproductById\"      \r\n        const productById =  rsapi.post(url, { [productParam.primaryKeyField] :productParam.primaryKeyValue, \"userinfo\": productParam.userInfo} );\r\n        urlArray = [productCategoryService, productById];\r\n        selectedId = productParam.primaryKeyValue;\r\n    }\r\n    dispatch(initRequest(true));\r\n    Axios.all(urlArray)\r\n        .then(response=>{                  \r\n            \r\n            let selectedRecord =  {};\r\n\r\n            const productCatMap = constructOptionList(response[0].data || [], \"nproductcatcode\",\r\n                                \"sproductcatname\", undefined, undefined, true);\r\n            const productCategoryList = productCatMap.get(\"OptionList\");\r\n           \r\n           \r\n            \r\n            if (productParam.operation === \"update\"){\r\n                selectedRecord = response[1].data;\r\n                selectedRecord[\"nproductcatcode\"] = getComboLabelValue(selectedRecord, response[0].data, \r\n                    \"nproductcatcode\", \"sproductcatname\");                   \r\n            }\r\n           else\r\n           {\r\n \t\t\tconst  productCatdefault  = productCatMap.get(\"DefaultValue\");\r\n            selectedRecord[\"nproductcatcode\"] = productCatdefault; \r\n           }\r\n            dispatch({type: DEFAULT_RETURN, payload:{productCategoryList,//:response[0].data || [],                               \r\n                        operation:productParam.operation, screenName:productParam.screenName, selectedRecord, \r\n                        openModal : true,\r\n                        ncontrolCode:productParam.ncontrolCode,\r\n                        loading:false,selectedId\r\n                    }});\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        })        \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}