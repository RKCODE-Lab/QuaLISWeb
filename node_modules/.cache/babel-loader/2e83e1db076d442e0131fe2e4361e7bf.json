{"ast":null,"code":"import rsapi from '../rsapi';\nimport Axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { getComboLabelValue, constructOptionList } from '../components/CommonScript';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { initRequest } from './LoginAction';\nimport { sortData } from '../components/CommonScript';\nimport { transactionStatus, attachmentType } from '../components/Enumeration';\nimport { openModal } from './ApprovalConfigAction';\nexport function getSubContractorComboService(testdetail, userInfo) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"subcontracttestdetail/getSubcontractorBytest\", {\n      ntestcode: testdetail.ntestcode,\n      nsubcontractortestdetailcode: testdetail.nsubcontractortestdetailcode,\n      userinfo: userInfo\n    }).then(response => {\n      let selectedRecord = {};\n      selectedRecord[\"subcontractortestdetail\"] = testdetail;\n      const subContracorMap = constructOptionList(response.data['TestSubContract'] || [], \"nsuppliercode\", \"ssubcontractor\", undefined, undefined, true);\n      const subContracorMapList = subContracorMap.get(\"OptionList\"); //sortData(masterData);\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          selectedRecord,\n          subContracorMapList,\n          operation: \"sendsubcontractor\",\n          modalName: undefined,\n          openModal: true,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function updateSubContractSamplesdetails(inputData, masterData, modalName) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"subcontracttestdetail/updateSentSubContractTestdetails\", {\n      subcontractortestdetail: inputData.inputData['subcontractortestdetail'],\n      userinfo: inputData.inputData[\"userinfo\"]\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          operation: \"sendsubcontractor\",\n          openModal: false,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function updateReceiveSTTSubContractTest(inputData, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"subcontracttestdetail/updateReceiveSTTSubContractTest\", {\n      subcontractortestdetail: inputData,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          operation: \"ReceiveSTTSubContractor\",\n          openModal: false,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function updateReceiveResultSubContractTest(inputData, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"subcontracttestdetail/updateReceiveResultSubContractTest\", {\n      subcontractortestdetail: inputData,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          operation: \"ReceiveSTTSubContractor\",\n          openModal: false,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/actions/SubContractSamplesAction.js"],"names":["rsapi","Axios","toast","getComboLabelValue","constructOptionList","DEFAULT_RETURN","initRequest","sortData","transactionStatus","attachmentType","openModal","getSubContractorComboService","testdetail","userInfo","dispatch","post","ntestcode","nsubcontractortestdetailcode","userinfo","then","response","selectedRecord","subContracorMap","data","undefined","subContracorMapList","get","type","payload","operation","modalName","loading","catch","error","status","message","warn","updateSubContractSamplesdetails","inputData","masterData","subcontractortestdetail","updateReceiveSTTSubContractTest","updateReceiveResultSubContractTest"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    getComboLabelValue,\r\n    constructOptionList\r\n} from '../components/CommonScript'\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData} from '../components/CommonScript';\r\nimport { transactionStatus, attachmentType } from '../components/Enumeration';\r\nimport { openModal } from './ApprovalConfigAction';\r\n\r\nexport function getSubContractorComboService (testdetail, userInfo) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"subcontracttestdetail/getSubcontractorBytest\", {ntestcode:testdetail.ntestcode,\r\n        nsubcontractortestdetailcode:testdetail.nsubcontractortestdetailcode,userinfo:userInfo})\r\n   .then(response=>{  \r\n    let selectedRecord = {}   \r\n    selectedRecord[\"subcontractortestdetail\"] = testdetail;\r\n\r\n        const subContracorMap = constructOptionList(response.data['TestSubContract'] || [], \"nsuppliercode\",\r\n            \"ssubcontractor\", undefined, undefined, true);\r\n        const subContracorMapList = subContracorMap.get(\"OptionList\");\r\n\r\n        //sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:\r\n            {\r\n            selectedRecord,\r\n            subContracorMapList,\r\n            operation:\"sendsubcontractor\", \r\n            modalName:undefined,\r\n            openModal:true, \r\n            loading:false\r\n        }});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function updateSubContractSamplesdetails (inputData, masterData,modalName) {\r\n\r\n    return function (dispatch) {   \r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"subcontracttestdetail/updateSentSubContractTestdetails\",\r\n             {subcontractortestdetail:inputData.inputData['subcontractortestdetail'],userinfo:inputData.inputData[\"userinfo\"]})\r\n       .then(response=>{     \r\n        masterData = {...masterData,...response.data}\r\n\r\n          \r\n            dispatch({type: DEFAULT_RETURN, payload:\r\n                {\r\n                masterData,\r\n                operation:\"sendsubcontractor\", \r\n                openModal:false, \r\n                loading:false\r\n            }});   \r\n       })\r\n       .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n           if (error.response.status === 500){\r\n               toast.error(error.message);\r\n           } \r\n           else{               \r\n               toast.warn(error.response.data);\r\n           }  \r\n      \r\n       })\r\n    }\r\n\r\n}\r\n\r\nexport function updateReceiveSTTSubContractTest (inputData,userInfo,masterData) {\r\n\r\n    return function (dispatch) {   \r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"subcontracttestdetail/updateReceiveSTTSubContractTest\",\r\n             {subcontractortestdetail:inputData,userinfo:userInfo,})\r\n       .then(response=>{ \r\n\r\n        masterData = {...masterData,...response.data}\r\n\r\n          \r\n            dispatch({type: DEFAULT_RETURN, payload:\r\n                {\r\n                masterData,\r\n                operation:\"ReceiveSTTSubContractor\", \r\n                openModal:false, \r\n                loading:false\r\n            }});   \r\n       })\r\n       .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n           if (error.response.status === 500){\r\n               toast.error(error.message);\r\n           } \r\n           else{               \r\n               toast.warn(error.response.data);\r\n           }  \r\n      \r\n       })\r\n    }\r\n}\r\n\r\nexport function updateReceiveResultSubContractTest(inputData,userInfo,masterData) {\r\n\r\n    return function (dispatch) {   \r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"subcontracttestdetail/updateReceiveResultSubContractTest\",\r\n             {subcontractortestdetail:inputData,userinfo:userInfo,})\r\n       .then(response=>{ \r\n\r\n        masterData = {...masterData,...response.data}\r\n\r\n          \r\n            dispatch({type: DEFAULT_RETURN, payload:\r\n                {\r\n                masterData,\r\n                operation:\"ReceiveSTTSubContractor\", \r\n                openModal:false, \r\n                loading:false\r\n            }});   \r\n       })\r\n       .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n           if (error.response.status === 500){\r\n               toast.error(error.message);\r\n           } \r\n           else{               \r\n               toast.warn(error.response.data);\r\n           }  \r\n      \r\n       })\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}