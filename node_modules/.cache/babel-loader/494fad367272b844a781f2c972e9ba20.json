{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\SupplierMaterialCategoryTab.jsx\";\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap'; //, Nav, Tab\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faPlus } from '@fortawesome/free-solid-svg-icons';//,faPencilAlt, faTrash\n\nimport { injectIntl } from 'react-intl'; //FormattedMessage,\n//import { Grid, GridColumn } from '@progress/kendo-react-grid';\n\nimport { process } from '@progress/kendo-data-query';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal'; //import Axios from 'axios';\n//import rsapi from '../../rsapi';\n\nimport { toast } from 'react-toastify';\nimport AddSupplierCategory from './AddSupplierCategory';\nimport AddMaterialCategory from './AddMaterialCategory';\nimport Esign from '../audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { constructOptionList, showEsign, onDropAttachFileList, create_UUID, validateEmail, deleteAttachmentDropZone } from '../../components/CommonScript'; //import DataGrid from '../../components/DataGrid';\n\nimport SupplierTabs from './SupplierTabs';\nimport SupplierFileTab from './SupplierFileTabs';\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport AddSupplierFile from './AddSupplierFile';\nimport AddSupplierContact from './AddSupplierContact';\n\nclass SupplierMaterialCategoryTab extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.supplierDataStateChange = event => {\n      this.setState({\n        dataState: event.dataState\n      });\n    };\n\n    this.materialDataStateChange = event => {\n      this.setState({\n        dataStateMaterial: event.dataState\n      });\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropSupplierFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.tabDetail = () => {\n      const addSupCatId = this.props.controlMap.has(\"AddSupplierCategory\") && this.props.controlMap.get(\"AddSupplierCategory\").ncontrolcode;\n      const deleteSupCatId = this.props.controlMap.has(\"DeleteSupplierCategory\") && this.props.controlMap.get(\"DeleteSupplierCategory\").ncontrolcode;\n      const addMatCatId = this.props.controlMap.has(\"AddMaterialCategory\") && this.props.controlMap.get(\"AddMaterialCategory\").ncontrolcode;\n      const deleteMatCatId = this.props.controlMap.has(\"DeleteMaterialCategory\") && this.props.controlMap.get(\"DeleteMaterialCategory\").ncontrolcode;\n      const addSupCotId = this.props.controlMap.has(\"AddSupplierContact\") && this.props.controlMap.get(\"AddSupplierContact\").ncontrolcode;\n      const editSupCotId = this.props.controlMap.has(\"EditSupplierContact\") && this.props.controlMap.get(\"EditSupplierContact\").ncontrolcode;\n      const deleteSupCotId = this.props.controlMap.has(\"DeleteSupplierContact\") && this.props.controlMap.get(\"DeleteSupplierContact\").ncontrolcode;\n      const supcatAddParam = {\n        screenName: \"Supplier Category\",\n        operation: \"create\",\n        primaryKeyField: \"nsuppliercatcode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: addSupCatId\n      };\n      const supcatDeleteParam = {\n        screenName: \"SupplierCategory\",\n        methodUrl: \"SupplierMatrix\",\n        operation: \"delete\",\n        ncontrolCode: deleteSupCatId\n      };\n      const matericatAddParam = {\n        screenName: \"Material Category\",\n        operation: \"create\",\n        primaryKeyField: \"nmaterialcatcode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: addMatCatId\n      };\n      const materialcatDeleteParam = {\n        screenName: \"MaterialCategory\",\n        methodUrl: \"SupplierMatrix\",\n        operation: \"delete\",\n        ncontrolCode: deleteMatCatId\n      };\n      const supcotAddParam = {\n        screenName: \"Supplier Contact\",\n        operation: \"create\",\n        primaryKeyField: \"nsuppliercontactcode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: addSupCotId\n      };\n      const editcotAddParam = {\n        screenName: \"Supplier Contact\",\n        operation: \"update\",\n        primaryKeyField: \"nsuppliercontactcode\",\n        masterData: this.props.masterData,\n        userInfo: this.props.userInfo,\n        ncontrolCode: editSupCotId\n      };\n      const supcotDeleteParam = {\n        screenName: \"Supplier Contact\",\n        methodUrl: \"Supplier\",\n        operation: \"delete\",\n        ncontrolCode: deleteSupCotId\n      };\n      const tabMap = new Map();\n      const detailedFieldList = [{\n        \"idsName\": \"IDS_DESIGNATION\",\n        \"dataField\": \"sdesignation\",\n        \"width\": \"150px\",\n        \"mandatory\": false,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MOBILENO\",\n        \"dataField\": \"smobileno\",\n        \"width\": \"150px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TELEPHONENO\",\n        \"dataField\": \"stelephoneno\",\n        \"width\": \"150px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_EMAIL\",\n        \"dataField\": \"semail\",\n        \"width\": \"150px\",\n        \"mandatory\": false,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_DESCRIPTION\",\n        \"dataField\": \"sdescription\",\n        \"width\": \"150px\",\n        \"mandatory\": false,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_DEFAULTSTATUS\",\n        \"dataField\": \"sdisplaystatus\",\n        \"width\": \"250px\"\n      }];\n      tabMap.set(\"IDS_SUPPLIERCATEGORY\", /*#__PURE__*/React.createElement(SupplierTabs, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        addId: addSupCatId,\n        addParam: supcatAddParam,\n        comboDataService: this.props.getSupplierCategoryComboDataService,\n        addTitleIDS: \"IDS_SUPPLIERCATEGORY\",\n        addTitleDefaultMsg: 'SupplierCategory',\n        primaryKeyField: \"nsuppliermatrixcode\",\n        masterData: this.props.masterData,\n        primaryList: \"SupplierCategory\",\n        dataResult: process(this.props.masterData[\"SupplierCategory\"] || [], this.state.dataState) // dataState={this.state.dataState}\n        // dataStateChange={this.supplierDataStateChange}\n        ,\n        dataState: this.props.screenName === undefined || this.props.screenName === '' || this.props.screenName === \"SupplierCategory\" ? this.state.dataState : {\n          skip: 0\n        },\n        dataStateChange: event => this.setState({\n          dataState: event.dataState\n        }),\n        columnList: this.suppliercatColumnList,\n        methodUrl: \"SupplierMatrix\",\n        deleteRecord: this.deleteRecord,\n        deleteParam: supcatDeleteParam //selectedId={this.props.selectedId}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 44\n        }\n      }));\n      tabMap.set(\"IDS_MATERIALCATEGORY\", /*#__PURE__*/React.createElement(SupplierTabs, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        addId: addMatCatId,\n        addParam: matericatAddParam,\n        comboDataService: this.props.getMaterialCategoryComboDataService,\n        addTitleIDS: \"IDS_MATERIALCATEGORY\",\n        addTitleDefaultMsg: 'MaterialCategory',\n        primaryKeyField: \"nsuppliermatrixcode\",\n        masterData: this.props.masterData,\n        primaryList: \"MaterialCategory\",\n        dataResult: process(this.props.masterData[\"MaterialCategory\"] || [], this.state.dataStateMaterial) // dataState={this.state.dataStateMaterial}\n        // dataStateChange={this.materialDataStateChange}\n        ,\n        dataState: this.props.screenName === undefined || this.props.screenName === \"MaterialCategory\" ? this.state.dataStateMaterial : {\n          skip: 0\n        },\n        dataStateChange: event => this.setState({\n          dataStateMaterial: event.dataState\n        }),\n        columnList: this.materialcatColumnList,\n        methodUrl: \"SupplierMatrix\",\n        deleteRecord: this.deleteRecord,\n        deleteParam: materialcatDeleteParam //selectedId={this.props.selectedId}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 44\n        }\n      }));\n      tabMap.set(\"IDS_SUPPLIERCONTACT\", /*#__PURE__*/React.createElement(SupplierTabs, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        fetchRecord: this.props.getSupplierContactComboDataService,\n        addId: addSupCotId,\n        editId: editSupCotId,\n        editParam: editcotAddParam,\n        addParam: supcotAddParam,\n        comboDataService: this.props.getSupplierContactComboDataService,\n        addTitleIDS: \"IDS_SUPPLIERCONTACT\",\n        addTitleDefaultMsg: 'SupplierContact',\n        primaryKeyField: \"nsuppliercontactcode\",\n        masterData: this.props.masterData,\n        primaryList: \"SupplierContact\",\n        dataResult: process(this.props.masterData[\"SupplierContact\"] || [], this.state.dataState) // dataState={this.state.dataStateMaterial}\n        // dataStateChange={this.materialDataStateChange}\n        ,\n        dataState: this.props.screenName === undefined || supcotAddParam.screenName === \"Supplier Contact\" ? this.state.dataState : {\n          skip: 0\n        },\n        dataStateChange: event => this.setState({\n          dataState: event.dataState\n        }),\n        columnList: this.supplierContactColumnList,\n        methodUrl: \"SupplierContact\",\n        deleteRecord: this.deleteRecord,\n        deleteParam: supcotDeleteParam,\n        detailedFieldList: detailedFieldList //selectedId={this.props.selectedId}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 43\n        }\n      }));\n      tabMap.set(\"IDS_FILE\", /*#__PURE__*/React.createElement(SupplierFileTab, {\n        controlMap: this.props.controlMap,\n        userRoleControlRights: this.props.userRoleControlRights,\n        userInfo: this.props.userInfo,\n        inputParam: this.props.inputParam,\n        deleteRecord: this.deleteRecord,\n        supplierFile: this.props.masterData.supplierFile || [],\n        getAvailableData: this.props.getAvailableData,\n        addSupplierFile: this.props.addSupplierFile,\n        viewSupplierFile: this.viewSupplierFile,\n        defaultRecord: this.defaultRecord,\n        screenName: \"Supplier File\",\n        settings: this.props.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }\n      }));\n      return tabMap;\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.loadEsign;\n      let openChildModal = this.props.openChildModal;\n      let selectedRecord = this.props.selectedRecord;\n\n      if (this.props.loadEsign) {\n        if (this.props.operation === \"delete\") {\n          loadEsign = false;\n          openChildModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = '';\n          selectedRecord['esigncomments'] = '';\n        }\n      } else {\n        openChildModal = false;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openChildModal,\n          loadEsign,\n          selectedRecord\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      ;\n\n      if (fieldName === \"nsuppliercatcode\") {\n        let selectedSupplierCategory = comboData;\n        this.setState({\n          selectedRecord,\n          selectedSupplierCategory\n        });\n      }\n\n      if (fieldName === \"nmaterialcatcode\") {\n        let selectedMaterialCategory = comboData;\n        this.setState({\n          selectedRecord,\n          selectedMaterialCategory\n        });\n      }\n\n      if (fieldName === \"ncountrycode\") {\n        let selectedSupplierContact = comboData;\n        this.setState({\n          selectedRecord,\n          selectedSupplierContact\n        });\n      }\n    };\n\n    this.viewSupplierFile = filedata => {\n      const inputParam = {\n        inputData: {\n          supplierfile: filedata,\n          userinfo: this.props.userInfo\n        },\n        classUrl: \"supplier\",\n        operation: \"view\",\n        methodUrl: \"AttachedSupplierFile\",\n        screenName: \"Supplier File\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE; // else if (event.target.name === \"nlockmode\")\n        //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\n        else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      //add / edit  \n      if (this.state.selectedRecord['semail'] ? validateEmail(this.state.selectedRecord['semail']) : true) {\n        let inputParam = {};\n\n        if (this.props.screenName === \"Supplier Category\") {\n          inputParam = this.saveSupplierCategory(saveType, formRef);\n        } else if (this.props.screenName === \"Material Category\") {\n          inputParam = this.saveMaterial(saveType, formRef);\n        } else if (this.props.screenName === \"Supplier Contact\") {\n          inputParam = this.saveSupplierContact(saveType, formRef);\n        } else if (this.props.screenName === \"Supplier File\") {\n          inputParam = this.onSaveSupplierFile(saveType, formRef);\n        }\n\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_ENTERVALIDEMAIL\"\n        }));\n      }\n    };\n\n    this.onSaveSupplierFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let supplierFileArray = [];\n      let supplierFile = {\n        nsuppliercode: this.props.masterData.SelectedSupplier.nsuppliercode,\n        nsupplierfilecode: selectedRecord.nsupplierfilecode ? selectedRecord.nsupplierfilecode : 0,\n        nstatus: transactionStatus.ACTIVE,\n        nattachmenttypecode,\n        ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, supplierFile);\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.nsupplierfilecode && selectedRecord.nsupplierfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\n            tempData[\"sfilename\"] = file.name;\n            tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            supplierFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          supplierFile[\"sfilename\"] = selectedRecord.sfilename;\n          supplierFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n          supplierFile[\"nlinkcode\"] = transactionStatus.NA;\n          supplierFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          supplierFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          supplierFileArray.push(supplierFile);\n        }\n      } else {\n        supplierFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n        supplierFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\n        supplierFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n        supplierFile[\"ssystemfilename\"] = \"\";\n        supplierFile[\"nfilesize\"] = 0;\n        supplierFileArray.push(supplierFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"supplierfile\", JSON.stringify(supplierFileArray)); // formData.append(\"userinfo\", JSON.stringify(this.props.userInfo));\n\n      let selectedId = null;\n      let postParam = undefined;\n\n      if (this.props.operation === \"update\") {\n        // edit\n        postParam = {\n          inputListName: \"Supplier\",\n          selectedObject: \"SelectedSupplier\",\n          primaryKeyField: \"nsuppliercode\"\n        };\n        selectedId = selectedRecord[\"nsupplierfilecode\"];\n      }\n\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.userInfo\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.operation,\n        classUrl: \"supplier\",\n        saveType,\n        formRef,\n        methodUrl: \"SupplierFile\",\n        postParam\n      };\n      return inputParam;\n    };\n\n    this.deleteRecord = supplierparam => {\n      if (this.props.masterData.SelectedSupplier.ntransactionstatus === transactionStatus.RETIRED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: this.props.masterData.SelectedSupplier.stranstatus\n        }));\n      } else {\n        let inputParam = {};\n\n        if (this.props.screenName === 'Supplier File') {\n          inputParam = {\n            classUrl: \"supplier\",\n            methodUrl: supplierparam.methodUrl,\n            inputData: {\n              [supplierparam.methodUrl.toLowerCase()]: supplierparam.selectedRecord,\n              \"userinfo\": this.props.userInfo\n            },\n            operation: supplierparam.operation,\n            //dataState: this.state.dataState,\n            //dataStateMaterial: this.state.dataStateMaterial\n            dataState: this.state.dataState\n          };\n        } else if (supplierparam.screenName === \"Supplier Contact\") {\n          inputParam = {\n            classUrl: \"supplier\",\n            methodUrl: \"SupplierContact\",\n            inputData: {\n              [supplierparam.methodUrl.toLowerCase()]: supplierparam.selectedRecord,\n              \"userinfo\": this.props.userInfo\n            },\n            operation: supplierparam.operation,\n            //dataState: this.state.dataState,\n            //dataStateMaterial: this.state.dataStateMaterial\n            dataState: this.state.dataState\n          };\n        } else {\n          inputParam = {\n            classUrl: \"suppliermatrix\",\n            methodUrl: supplierparam.methodUrl,\n            inputData: {\n              [supplierparam.methodUrl.toLowerCase()]: supplierparam.selectedRecord,\n              \"userinfo\": this.props.userInfo\n            },\n            operation: supplierparam.operation,\n            //dataState: this.state.dataState,\n            //dataStateMaterial: this.state.dataStateMaterial\n            dataState: this.state.dataState\n          };\n        }\n\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, supplierparam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.masterData\n              },\n              openChildModal: true,\n              screenName: supplierparam.screenName,\n              operation: supplierparam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\n        }\n      }\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\" //fileToDelete:file.name \n\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openChildModal\");\n    };\n\n    const dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    const dataStateMaterial = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    this.state = {\n      isOpen: false,\n      selectedRecord: {},\n      dataResult: [],\n      activeTab: 'SupplierCategory-tab',\n      dataState: dataState,\n      dataStateMaterial: dataStateMaterial,\n      supplierCategory: [],\n      materialCategory: [],\n      countryList: []\n    };\n    this.supplerCategoryFieldList = ['nsuppliercode', 'ncategorycode', 'ntypecode', 'ssuppliercatname', 'smaterialcatname', 'sremarks', 'ntransactionstatus'];\n    this.supplierContactFieldList = ['ssuppliercontactname', 'sdescription', 'sdesignation', 'saddress1', 'saddress2', 'saddress3', 'sphoneno', 'smobileno', 'sfaxno', 'semail', 'ndefaultstatus', 'ncountrycode'];\n    this.suppliercatColumnList = [{\n      \"idsName\": \"IDS_SUPPLIERCATNAME\",\n      \"dataField\": \"ssuppliercatname\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n    this.materialcatColumnList = [{\n      \"idsName\": \"IDS_MATERIALCATNAME\",\n      \"dataField\": \"smaterialcatname\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n    this.supplierContactColumnList = [{\n      \"idsName\": \"IDS_SUPPLIERCONTACTNAME\",\n      \"dataField\": \"ssuppliercontactname\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_DEFAULTSTATUS\",\n      \"dataField\": \"sdisplaystatus\",\n      \"width\": \"250px\",\n      \"mandatory\": false,\n      \"controlType\": \"checkbox\"\n    }];\n    this.validationSuppliercatColumnList = [{\n      \"idsName\": \"IDS_SUPPLIERCATNAME\",\n      \"dataField\": \"nsuppliercatcode\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    this.validationMaterialcatColumnList = [{\n      \"idsName\": \"IDS_MATERIALCATNAME\",\n      \"dataField\": \"nmaterialcatcode\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n  }\n\n  render() {\n    const mandatoryFields = [];\n    let matmandatoryFields = [];\n    this.validationSuppliercatColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n\n    if (this.props.screenName === \"Material Category\") {\n      this.validationMaterialcatColumnList.forEach(item => item.mandatory === true ? matmandatoryFields.push(item) : \"\");\n    } else if (this.props.screenName == 'Supplier File') {\n      if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\n        matmandatoryFields = [{\n          \"idsName\": \"IDS_FILENAME\",\n          \"dataField\": \"slinkfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        }, {\n          \"idsName\": \"IDS_LINKNAME\",\n          \"dataField\": \"nlinkcode\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }];\n      } else {\n        // if (this.props.operation !== 'update') {\n        matmandatoryFields = [{\n          \"idsName\": \"IDS_FILE\",\n          \"dataField\": \"sfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        }]; // }\n      }\n    } else if (this.props.screenName == 'Supplier Contact') {\n      matmandatoryFields = [{\n        \"idsName\": \"IDS_SUPPLIERCONTACT\",\n        \"dataField\": \"ssuppliercontactname\",\n        \"width\": \"150px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }];\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CustomTabs, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    })))), this.props.openChildModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.openChildModal,\n      closeModal: this.closeModal,\n      operation: this.props.operation,\n      inputParam: this.props.inputParam,\n      screenName: this.props.screenName,\n      onSaveClick: this.onSaveClick,\n      updateStore: this.props.updateStore,\n      esign: this.props.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.screenName === \"Supplier Category\" ? mandatoryFields : matmandatoryFields || [],\n      addComponent: this.props.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }) : this.props.screenName === \"Supplier Category\" ? /*#__PURE__*/React.createElement(AddSupplierCategory, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        selectedSupplierCategory: this.props.masterData.selectedSupplierCategory,\n        supplierCategory: this.state.supplierCategory || [] //{this.props.supplierCategory || []}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }\n      }) : this.props.screenName === \"Material Category\" ? /*#__PURE__*/React.createElement(AddMaterialCategory, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        operation: this.props.operation,\n        selectedMaterialCategory: this.props.masterData.selectedMaterialCategory,\n        materialCategory: this.state.materialCategory //{this.props.materialCategory}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 37\n        }\n      }) : this.props.screenName === \"Supplier Contact\" ? /*#__PURE__*/React.createElement(AddSupplierContact, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        operation: this.props.operation,\n        formatMessage: this.props.intl.formatMessage,\n        selectedSupplierContact: this.props.masterData.selectedSupplierContact,\n        countryList: this.state.countryList || [],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 41\n        }\n      }) : this.props.screenName === \"Supplier File\" ? /*#__PURE__*/React.createElement(AddSupplierFile, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropSupplierFile,\n        onDropAccepted: this.onDropAccepted,\n        deleteAttachment: this.deleteAttachment,\n        actionType: this.state.actionType,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.linkMaster,\n        editFiles: this.props.editFiles,\n        maxSize: 20 // maxFiles={this.props.operation === \"update\" ? 1 : 3}\n        // multiple={this.props.operation === \"update\" ? false : true}\n        ,\n        maxFiles: 1,\n        multiple: false,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_SUPPLIERFILE\"\n        }),\n        name: \"supplierfilename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 45\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.masterData !== previousProps.masterData) {\n      let isOpen = false;\n\n      if (this.props.errorCode !== undefined && (this.state.operation === \"create\" || this.state.operation === \"update\")) {\n        isOpen = true;\n      }\n\n      let {\n        dataState,\n        dataStateMaterial\n      } = this.state;\n\n      if (this.props.dataState === undefined) {\n        dataState = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\n          filter: undefined,\n          sort: undefined\n        };\n        dataStateMaterial = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\n          filter: undefined,\n          sort: undefined\n        };\n      }\n\n      this.setState({\n        isOpen,\n        activeTab: 'SupplierCategory-tab',\n        dataState,\n        dataStateMaterial\n      });\n    }\n\n    if (this.props.selectedRecord !== previousProps.selectedRecord) {\n      const countryList = constructOptionList(this.props.selectedRecord.countryList || [], \"ncountrycode\", \"scountryname\", undefined, undefined, undefined);\n      const countryListSupplier = countryList.get(\"OptionList\");\n      this.setState({\n        selectedRecord: this.props.selectedRecord,\n        countryList: countryListSupplier\n      });\n    }\n\n    let {\n      dataState,\n      dataStateMaterial\n    } = this.state;\n\n    if (this.props.dataState !== previousProps.dataState && this.props.dataState !== dataState) {\n      dataState = {\n        skip: 0,\n        take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n      };\n      dataStateMaterial = {\n        skip: 0,\n        take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n      };\n      this.setState({\n        dataState,\n        dataStateMaterial\n      });\n    } // {\n    //     dataState={...dataState,filter:undefined,sort:undefined}\n    //     dataStateMaterial={...dataStateMaterial,filter:undefined,sort:undefined}\n    //     this.setState({ dataState, dataStateMaterial });\n    // }\n\n\n    if (this.props.supplierCategory !== previousProps.supplierCategory || this.props.materialCategory !== previousProps.materialCategory) {\n      const supplierCategory = constructOptionList(this.props.supplierCategory || [], \"nsuppliercatcode\", \"ssuppliercatname\", undefined, undefined, undefined);\n      const supplierCategoryList = supplierCategory.get(\"OptionList\");\n      const materialCategory = constructOptionList(this.props.materialCategory || [], \"nmaterialcatcode\", \"smaterialcatname\", undefined, undefined, undefined);\n      const materialCategoryList = materialCategory.get(\"OptionList\");\n      this.setState({\n        supplierCategory: supplierCategoryList,\n        materialCategory: materialCategoryList\n      });\n    }\n  }\n\n  saveSupplierCategory(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.userInfo;\n    inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\n    inputData[\"suppliermatrix\"] = {};\n    let dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    let suppliermatrixArray = [];\n    suppliermatrixArray = this.state.selectedRecord.nsuppliercatcode.map(item => {\n      let suppliermat = {};\n      suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\n\n      suppliermat[\"ntypecode\"] = 1;\n      suppliermat[\"sremarks\"] = \"\";\n      suppliermat[\"ntransactionstatus\"] = transactionStatus.ACTIVE;\n      suppliermat[\"ncategorycode\"] = item.value; //suppliermatrixArray.push(suppliermat);\n\n      return suppliermat;\n    });\n    inputData['suppliermatrix'] = suppliermatrixArray;\n    const inputParam = {\n      classUrl: \"suppliermatrix\",\n      methodUrl: \"SupplierMatrix\",\n      inputData: inputData,\n      operation: this.props.operation,\n      saveType,\n      formRef,\n      dataState\n    };\n    return inputParam;\n  }\n\n  saveMaterial(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.userInfo;\n    inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\n    inputData[\"suppliermatrix\"] = {};\n    let dataStateMaterial = undefined;\n    let suppliermatrixArray = [];\n    suppliermatrixArray = this.state.selectedRecord.nmaterialcatcode.map(item => {\n      let suppliermat = {};\n      suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\n\n      suppliermat[\"ntypecode\"] = 2;\n      suppliermat[\"sremarks\"] = \"\";\n      suppliermat[\"ntransactionstatus\"] = transactionStatus.ACTIVE;\n      suppliermat[\"ncategorycode\"] = item.value; //suppliermatrixArray.push(suppliermat);\n\n      return suppliermat;\n    });\n    inputData['suppliermatrix'] = suppliermatrixArray;\n    const inputParam = {\n      classUrl: \"suppliermatrix\",\n      methodUrl: \"SupplierMatrix\",\n      inputData: inputData,\n      operation: this.props.operation,\n      saveType,\n      formRef,\n      dataStateMaterial\n    };\n    return inputParam;\n  }\n\n  saveSupplierContact(saveType, formRef) {\n    let inputData = [];\n    let postParam = {};\n    inputData[\"userinfo\"] = this.props.userInfo;\n    inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\n    inputData[\"suppliercontact\"] = {};\n    let dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    let suppliercontactArray = [];\n    let suppliermat = {};\n\n    if (this.props.operation == \"update\") {\n      postParam = {\n        inputListName: \"Suppliercontact\",\n        selectedObject: \"SupplierContact\",\n        primaryKeyField: \"nsuppliercontactcode\"\n      };\n      inputData[\"nsuppliercontactcode\"] = this.state.selectedRecord.nsuppliercontactcode;\n      suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\n\n      suppliermat[\"sdescription\"] = this.state.selectedRecord.sdescription;\n      suppliermat[\"sdesignation\"] = this.state.selectedRecord.sdesignation;\n      suppliermat[\"smobileno\"] = this.state.selectedRecord.smobileno;\n      suppliermat[\"stelephoneno\"] = this.state.selectedRecord.stelephoneno;\n      suppliermat[\"semail\"] = this.state.selectedRecord.semail;\n      suppliermat[\"ndefaultstatus\"] = this.state.selectedRecord.ndefaultstatus ? this.state.selectedRecord.ndefaultstatus : \"4\";\n      suppliermat[\"ssuppliercontactname\"] = this.state.selectedRecord.ssuppliercontactname;\n      suppliermat[\"nsuppliercontactcode\"] = this.state.selectedRecord.nsuppliercontactcode;\n      inputData['suppliercontact'] = suppliermat;\n    } else {\n      suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\n\n      suppliermat[\"sdescription\"] = this.state.selectedRecord.sdescription;\n      suppliermat[\"sdesignation\"] = this.state.selectedRecord.sdesignation;\n      suppliermat[\"smobileno\"] = this.state.selectedRecord.smobileno;\n      suppliermat[\"stelephoneno\"] = this.state.selectedRecord.stelephoneno;\n      suppliermat[\"semail\"] = this.state.selectedRecord.semail;\n      suppliermat[\"ndefaultstatus\"] = this.state.selectedRecord.ndefaultstatus ? this.state.selectedRecord.ndefaultstatus : \"4\";\n      suppliermat[\"ssuppliercontactname\"] = this.state.selectedRecord.ssuppliercontactname; //suppliermat[\"ncategorycode\"] = item.value\n      //   suppliercontactArray.push(suppliermat);\n      //  return suppliermat;\n\n      inputData['suppliercontact'] = suppliermat;\n    }\n\n    let inputParam = {\n      classUrl: \"supplier\",\n      methodUrl: \"SupplierContact\",\n      inputData: inputData,\n      operation: this.props.operation,\n      postParam,\n      saveType,\n      formRef,\n      dataState\n    };\n    return inputParam;\n  }\n\n}\n\nexport default injectIntl(SupplierMaterialCategoryTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/contactmaster/SupplierMaterialCategoryTab.jsx"],"names":["React","Row","Col","Card","injectIntl","process","SlideOutModal","toast","AddSupplierCategory","AddMaterialCategory","Esign","DEFAULT_RETURN","constructOptionList","showEsign","onDropAttachFileList","create_UUID","validateEmail","deleteAttachmentDropZone","SupplierTabs","SupplierFileTab","transactionStatus","attachmentType","CustomTabs","AddSupplierFile","AddSupplierContact","SupplierMaterialCategoryTab","Component","constructor","props","supplierDataStateChange","event","setState","dataState","materialDataStateChange","dataStateMaterial","onTabChange","tabProps","screenName","updateInfo","typeName","data","updateStore","onDropSupplierFile","attachedFiles","fieldName","maxSize","selectedRecord","state","actionType","tabDetail","addSupCatId","controlMap","has","get","ncontrolcode","deleteSupCatId","addMatCatId","deleteMatCatId","addSupCotId","editSupCotId","deleteSupCotId","supcatAddParam","operation","primaryKeyField","masterData","userInfo","ncontrolCode","supcatDeleteParam","methodUrl","matericatAddParam","materialcatDeleteParam","supcotAddParam","editcotAddParam","supcotDeleteParam","tabMap","Map","detailedFieldList","set","userRoleControlRights","inputParam","getSupplierCategoryComboDataService","undefined","skip","suppliercatColumnList","deleteRecord","getMaterialCategoryComboDataService","materialcatColumnList","getSupplierContactComboDataService","supplierContactColumnList","supplierFile","getAvailableData","addSupplierFile","viewSupplierFile","defaultRecord","settings","closeModal","loadEsign","openChildModal","onComboChange","comboData","selectedSupplierCategory","selectedMaterialCategory","selectedSupplierContact","filedata","inputData","supplierfile","userinfo","classUrl","viewAttachment","onInputOnChange","optional","target","type","name","checked","ACTIVE","DEACTIVE","YES","NO","value","onSaveClick","saveType","formRef","saveSupplierCategory","saveMaterial","saveSupplierContact","onSaveSupplierFile","esignRights","nformcode","screenData","crudMaster","warn","intl","formatMessage","id","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","supplierFileArray","nsuppliercode","SelectedSupplier","nsupplierfilecode","nstatus","ndefaultstatus","LINK","formData","FormData","FTP","Array","isArray","length","forEach","file","index","tempData","Object","assign","splittedFileName","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","sdescription","trim","NA","size","append","push","nfilesize","slinkfilename","slinkdescription","nlinkcode","JSON","stringify","selectedId","postParam","inputListName","selectedObject","isFileupload","supplierparam","ntransactionstatus","RETIRED","stranstatus","toLowerCase","deleteAttachment","validateEsign","sreason","password","validateEsignCredential","take","parseInt","isOpen","dataResult","activeTab","supplierCategory","materialCategory","countryList","supplerCategoryFieldList","supplierContactFieldList","validationSuppliercatColumnList","validationMaterialcatColumnList","render","mandatoryFields","matmandatoryFields","item","mandatory","onDropAccepted","linkMaster","editFiles","componentDidUpdate","previousProps","errorCode","filter","sort","countryListSupplier","supplierCategoryList","materialCategoryList","suppliermatrixArray","nsuppliercatcode","map","suppliermat","nmaterialcatcode","suppliercontactArray","nsuppliercontactcode","sdesignation","smobileno","stelephoneno","semail","ssuppliercontactname"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card } from 'react-bootstrap';//, Nav, Tab\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import { faPlus } from '@fortawesome/free-solid-svg-icons';//,faPencilAlt, faTrash\r\nimport { injectIntl } from 'react-intl';//FormattedMessage,\r\n//import { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\n//import Axios from 'axios';\r\n//import rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport AddSupplierCategory from './AddSupplierCategory';\r\nimport AddMaterialCategory from './AddMaterialCategory';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { constructOptionList, showEsign, onDropAttachFileList, create_UUID, validateEmail,deleteAttachmentDropZone } from '../../components/CommonScript';\r\n//import DataGrid from '../../components/DataGrid';\r\nimport SupplierTabs from './SupplierTabs';\r\nimport SupplierFileTab from './SupplierFileTabs';\r\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport AddSupplierFile from './AddSupplierFile';\r\nimport AddSupplierContact from './AddSupplierContact';\r\n\r\nclass SupplierMaterialCategoryTab extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5\r\n        };\r\n        const dataStateMaterial = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5\r\n        };\r\n        this.state = {\r\n            isOpen: false, selectedRecord: {}, dataResult: [],\r\n            activeTab: 'SupplierCategory-tab',\r\n            dataState: dataState,\r\n            dataStateMaterial: dataStateMaterial, supplierCategory: [], materialCategory: [], countryList: []\r\n        };\r\n        this.supplerCategoryFieldList = ['nsuppliercode', 'ncategorycode', 'ntypecode', 'ssuppliercatname', 'smaterialcatname',\r\n            'sremarks', 'ntransactionstatus'];\r\n        this.supplierContactFieldList = ['ssuppliercontactname', 'sdescription', 'sdesignation', 'saddress1', 'saddress2', 'saddress3',\r\n            'sphoneno', 'smobileno', 'sfaxno', 'semail', 'ndefaultstatus', 'ncountrycode'];\r\n        this.suppliercatColumnList = [{ \"idsName\": \"IDS_SUPPLIERCATNAME\", \"dataField\": \"ssuppliercatname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }];\r\n        this.materialcatColumnList = [{ \"idsName\": \"IDS_MATERIALCATNAME\", \"dataField\": \"smaterialcatname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }];\r\n        this.supplierContactColumnList = [{ \"idsName\": \"IDS_SUPPLIERCONTACTNAME\", \"dataField\": \"ssuppliercontactname\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_DEFAULTSTATUS\", \"dataField\": \"sdisplaystatus\", \"width\": \"250px\",\"mandatory\": false,\"controlType\": \"checkbox\" }\r\n        ]\r\n        this.validationSuppliercatColumnList = [{ \"idsName\": \"IDS_SUPPLIERCATNAME\", \"dataField\": \"nsuppliercatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }];\r\n        this.validationMaterialcatColumnList = [{ \"idsName\": \"IDS_MATERIALCATNAME\", \"dataField\": \"nmaterialcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }];\r\n\r\n\r\n    }\r\n    supplierDataStateChange = (event) => {\r\n        this.setState({\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n    materialDataStateChange = (event) => {\r\n        this.setState({\r\n            dataStateMaterial: event.dataState\r\n        });\r\n    }\r\n    render() {\r\n        const mandatoryFields = [];\r\n        let matmandatoryFields = [];\r\n\r\n        this.validationSuppliercatColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        if (this.props.screenName === \"Material Category\") {\r\n            this.validationMaterialcatColumnList.forEach(item => item.mandatory === true ?\r\n                matmandatoryFields.push(item) : \"\"\r\n            );\r\n        }\r\n        else if (this.props.screenName == 'Supplier File') {\r\n            if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\r\n                matmandatoryFields = [\r\n                    { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                ];\r\n            } else {\r\n                // if (this.props.operation !== 'update') {\r\n                matmandatoryFields = [{ \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }];\r\n                // }\r\n            }\r\n        }\r\n        else if (this.props.screenName == 'Supplier Contact') {\r\n            matmandatoryFields = [{ \"idsName\": \"IDS_SUPPLIERCONTACT\", \"dataField\": \"ssuppliercontactname\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            ]\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Row className=\"no-gutters\">\r\n                    <Col md={12}>\r\n                        <Card className=\"at-tabs\">\r\n                            <CustomTabs tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.openChildModal &&\r\n                    <SlideOutModal show={this.props.openChildModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.operation}\r\n                        inputParam={this.props.inputParam}\r\n                        screenName={this.props.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        updateStore={this.props.updateStore}\r\n                        esign={this.props.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.screenName === \"Supplier Category\" ? mandatoryFields : matmandatoryFields || []}\r\n                        addComponent={this.props.loadEsign ?\r\n                            <Esign operation={this.props.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.screenName === \"Supplier Category\" ?\r\n                                <AddSupplierCategory selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    selectedSupplierCategory={this.props.masterData.selectedSupplierCategory}\r\n                                    supplierCategory={this.state.supplierCategory || []} //{this.props.supplierCategory || []}\r\n                                /> :\r\n                                this.props.screenName === \"Material Category\" ?\r\n                                    <AddMaterialCategory selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onComboChange={this.onComboChange}\r\n                                        operation={this.props.operation}\r\n                                        selectedMaterialCategory={this.props.masterData.selectedMaterialCategory}\r\n                                        materialCategory={this.state.materialCategory}//{this.props.materialCategory}\r\n                                    /> :\r\n                                    this.props.screenName === \"Supplier Contact\" ?\r\n                                        <AddSupplierContact\r\n                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            onComboChange={this.onComboChange}\r\n                                            operation={this.props.operation}\r\n                                            formatMessage={this.props.intl.formatMessage}\r\n                                            selectedSupplierContact={this.props.masterData.selectedSupplierContact}\r\n                                            countryList={this.state.countryList || []}\r\n                                        /> :\r\n                                        this.props.screenName === \"Supplier File\" ?\r\n                                            <AddSupplierFile\r\n                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                onDrop={this.onDropSupplierFile}\r\n                                                onDropAccepted={this.onDropAccepted}\r\n                                                deleteAttachment={this.deleteAttachment}\r\n                                                actionType={this.state.actionType}\r\n                                                onComboChange={this.onComboChange}\r\n                                                linkMaster={this.props.linkMaster}\r\n                                                editFiles={this.props.editFiles}\r\n                                                maxSize={20}\r\n                                                // maxFiles={this.props.operation === \"update\" ? 1 : 3}\r\n                                                // multiple={this.props.operation === \"update\" ? false : true}\r\n                                                maxFiles={1}\r\n                                                multiple={false}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_SUPPLIERFILE\" })}\r\n                                                name=\"supplierfilename\"\r\n                                            /> : \"\"\r\n                        }\r\n\r\n                    />\r\n                }\r\n            </>\r\n\r\n        )\r\n\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onDropSupplierFile = (attachedFiles, fieldName, maxSize) => {\r\n\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n\r\n    tabDetail = () => {\r\n        const addSupCatId = this.props.controlMap.has(\"AddSupplierCategory\") && this.props.controlMap.get(\"AddSupplierCategory\").ncontrolcode\r\n\r\n        const deleteSupCatId = this.props.controlMap.has(\"DeleteSupplierCategory\") && this.props.controlMap.get(\"DeleteSupplierCategory\").ncontrolcode\r\n\r\n        const addMatCatId = this.props.controlMap.has(\"AddMaterialCategory\") && this.props.controlMap.get(\"AddMaterialCategory\").ncontrolcode\r\n\r\n        const deleteMatCatId = this.props.controlMap.has(\"DeleteMaterialCategory\") && this.props.controlMap.get(\"DeleteMaterialCategory\").ncontrolcode\r\n\r\n        const addSupCotId = this.props.controlMap.has(\"AddSupplierContact\") && this.props.controlMap.get(\"AddSupplierContact\").ncontrolcode\r\n\r\n        const editSupCotId = this.props.controlMap.has(\"EditSupplierContact\") && this.props.controlMap.get(\"EditSupplierContact\").ncontrolcode\r\n\r\n        const deleteSupCotId = this.props.controlMap.has(\"DeleteSupplierContact\") && this.props.controlMap.get(\"DeleteSupplierContact\").ncontrolcode\r\n\r\n        const supcatAddParam = {\r\n            screenName: \"Supplier Category\", operation: \"create\", primaryKeyField: \"nsuppliercatcode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addSupCatId\r\n        };\r\n\r\n        const supcatDeleteParam = { screenName: \"SupplierCategory\", methodUrl: \"SupplierMatrix\", operation: \"delete\", ncontrolCode: deleteSupCatId };\r\n\r\n        const matericatAddParam = {\r\n            screenName: \"Material Category\", operation: \"create\", primaryKeyField: \"nmaterialcatcode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addMatCatId\r\n        };\r\n\r\n        const materialcatDeleteParam = { screenName: \"MaterialCategory\", methodUrl: \"SupplierMatrix\", operation: \"delete\", ncontrolCode: deleteMatCatId };\r\n\r\n        const supcotAddParam = {\r\n            screenName: \"Supplier Contact\", operation: \"create\", primaryKeyField: \"nsuppliercontactcode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addSupCotId\r\n        };\r\n        const editcotAddParam = {\r\n            screenName: \"Supplier Contact\", operation: \"update\", primaryKeyField: \"nsuppliercontactcode\",\r\n            masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: editSupCotId\r\n        };\r\n\r\n\r\n        const supcotDeleteParam = { screenName: \"Supplier Contact\", methodUrl: \"Supplier\", operation: \"delete\", ncontrolCode: deleteSupCotId };\r\n\r\n        const tabMap = new Map();\r\n        const detailedFieldList = [\r\n            { \"idsName\": \"IDS_DESIGNATION\", \"dataField\": \"sdesignation\", \"width\": \"150px\", \"mandatory\": false, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MOBILENO\", \"dataField\": \"smobileno\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_TELEPHONENO\", \"dataField\": \"stelephoneno\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_EMAIL\", \"dataField\": \"semail\", \"width\": \"150px\", \"mandatory\": false, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"150px\", \"mandatory\": false, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_DEFAULTSTATUS\", \"dataField\": \"sdisplaystatus\", \"width\": \"250px\" },\r\n\r\n        ];\r\n\r\n        tabMap.set(\"IDS_SUPPLIERCATEGORY\", <SupplierTabs userRoleControlRights={this.props.userRoleControlRights}\r\n            controlMap={this.props.controlMap}\r\n            inputParam={this.props.inputParam}\r\n            userInfo={this.props.userInfo}\r\n            addId={addSupCatId}\r\n            addParam={supcatAddParam}\r\n            comboDataService={this.props.getSupplierCategoryComboDataService}\r\n            addTitleIDS={\"IDS_SUPPLIERCATEGORY\"}\r\n            addTitleDefaultMsg={'SupplierCategory'}\r\n            primaryKeyField={\"nsuppliermatrixcode\"}\r\n            masterData={this.props.masterData}\r\n            primaryList={\"SupplierCategory\"}\r\n            dataResult={process(this.props.masterData[\"SupplierCategory\"]||[], this.state.dataState)}\r\n            // dataState={this.state.dataState}\r\n            // dataStateChange={this.supplierDataStateChange}\r\n            dataState={(this.props.screenName === undefined || this.props.screenName === '' || this.props.screenName === \"SupplierCategory\") ? this.state.dataState : { skip: 0 }}\r\n            dataStateChange={(event) => this.setState({ dataState: event.dataState })}\r\n            columnList={this.suppliercatColumnList}\r\n            methodUrl={\"SupplierMatrix\"}\r\n            deleteRecord={this.deleteRecord}\r\n            deleteParam={supcatDeleteParam}\r\n        //selectedId={this.props.selectedId}\r\n        />)\r\n        tabMap.set(\"IDS_MATERIALCATEGORY\", <SupplierTabs userRoleControlRights={this.props.userRoleControlRights}\r\n            controlMap={this.props.controlMap}\r\n            inputParam={this.props.inputParam}\r\n            userInfo={this.props.userInfo}\r\n            addId={addMatCatId}\r\n            addParam={matericatAddParam}\r\n            comboDataService={this.props.getMaterialCategoryComboDataService}\r\n            addTitleIDS={\"IDS_MATERIALCATEGORY\"}\r\n            addTitleDefaultMsg={'MaterialCategory'}\r\n            primaryKeyField={\"nsuppliermatrixcode\"}\r\n            masterData={this.props.masterData}\r\n            primaryList={\"MaterialCategory\"}\r\n            dataResult={process(this.props.masterData[\"MaterialCategory\"]||[], this.state.dataStateMaterial)}\r\n            // dataState={this.state.dataStateMaterial}\r\n            // dataStateChange={this.materialDataStateChange}\r\n            dataState={(this.props.screenName === undefined || this.props.screenName === \"MaterialCategory\") ? this.state.dataStateMaterial : { skip: 0 }}\r\n            dataStateChange={(event) => this.setState({ dataStateMaterial: event.dataState })}\r\n            columnList={this.materialcatColumnList}\r\n            methodUrl={\"SupplierMatrix\"}\r\n            deleteRecord={this.deleteRecord}\r\n            deleteParam={materialcatDeleteParam}\r\n        //selectedId={this.props.selectedId}\r\n        />)\r\n        tabMap.set(\"IDS_SUPPLIERCONTACT\", <SupplierTabs userRoleControlRights={this.props.userRoleControlRights}\r\n            controlMap={this.props.controlMap}\r\n            inputParam={this.props.inputParam}\r\n            userInfo={this.props.userInfo}\r\n            fetchRecord={this.props.getSupplierContactComboDataService}\r\n            addId={addSupCotId}\r\n            editId={editSupCotId}\r\n            editParam={editcotAddParam}\r\n            addParam={supcotAddParam}\r\n            comboDataService={this.props.getSupplierContactComboDataService}\r\n            addTitleIDS={\"IDS_SUPPLIERCONTACT\"}\r\n            addTitleDefaultMsg={'SupplierContact'}\r\n            primaryKeyField={\"nsuppliercontactcode\"}\r\n            masterData={this.props.masterData}\r\n            primaryList={\"SupplierContact\"}\r\n            dataResult={process(this.props.masterData[\"SupplierContact\"]||[], this.state.dataState)}\r\n            // dataState={this.state.dataStateMaterial}\r\n            // dataStateChange={this.materialDataStateChange}\r\n            dataState={(this.props.screenName === undefined || supcotAddParam.screenName === \"Supplier Contact\") ? this.state.dataState : { skip: 0 }}\r\n            dataStateChange={(event) => this.setState({ dataState: event.dataState })}\r\n            columnList={this.supplierContactColumnList}\r\n            methodUrl={\"SupplierContact\"}\r\n            deleteRecord={this.deleteRecord}\r\n            deleteParam={supcotDeleteParam}\r\n            detailedFieldList={detailedFieldList}\r\n        //selectedId={this.props.selectedId}\r\n        />)\r\n\r\n        tabMap.set(\"IDS_FILE\",\r\n            <SupplierFileTab\r\n                controlMap={this.props.controlMap}\r\n                userRoleControlRights={this.props.userRoleControlRights}\r\n                userInfo={this.props.userInfo}\r\n                inputParam={this.props.inputParam}\r\n                deleteRecord={this.deleteRecord}\r\n                supplierFile={this.props.masterData.supplierFile || []}\r\n                getAvailableData={this.props.getAvailableData}\r\n                addSupplierFile={this.props.addSupplierFile}\r\n                viewSupplierFile={this.viewSupplierFile}\r\n                defaultRecord={this.defaultRecord}\r\n                screenName=\"Supplier File\"\r\n                settings={this.props.settings}\r\n            />);\r\n        return tabMap;\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.loadEsign;\r\n        let openChildModal = this.props.openChildModal;\r\n        let selectedRecord = this.props.selectedRecord;\r\n        if (this.props.loadEsign) {\r\n            if (this.props.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = '';\r\n                selectedRecord['esigncomments'] = '';\r\n            }\r\n        }\r\n        else {\r\n            openChildModal = false;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openChildModal, loadEsign, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;\r\n\r\n\r\n        if (fieldName === \"nsuppliercatcode\") {\r\n            let selectedSupplierCategory = comboData;\r\n            this.setState({ selectedRecord, selectedSupplierCategory });\r\n        }\r\n        if (fieldName === \"nmaterialcatcode\") {\r\n            let selectedMaterialCategory = comboData;\r\n            this.setState({ selectedRecord, selectedMaterialCategory });\r\n        }\r\n        if (fieldName === \"ncountrycode\") {\r\n            let selectedSupplierContact = comboData;\r\n            this.setState({ selectedRecord, selectedSupplierContact });\r\n        }\r\n    }\r\n    viewSupplierFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                supplierfile: filedata,\r\n                userinfo: this.props.userInfo\r\n            },\r\n            classUrl: \"supplier\",\r\n            operation: \"view\",\r\n            methodUrl: \"AttachedSupplierFile\",\r\n            screenName: \"Supplier File\"\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n\r\n    onInputOnChange = (event, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            // else if (event.target.name === \"nlockmode\")\r\n            //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = optional;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.masterData !== previousProps.masterData) {\r\n\r\n            let isOpen = false;\r\n            if (this.props.errorCode !== undefined && (this.state.operation === \"create\" || this.state.operation === \"update\")) {\r\n                isOpen = true;\r\n            }\r\n            let { dataState, dataStateMaterial } = this.state;\r\n            if (this.props.dataState === undefined) {\r\n                dataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5, filter: undefined, sort: undefined }\r\n                dataStateMaterial = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5, filter: undefined, sort: undefined }\r\n            }\r\n            this.setState({ isOpen, activeTab: 'SupplierCategory-tab', dataState, dataStateMaterial });\r\n        }\r\n\r\n        if (this.props.selectedRecord !== previousProps.selectedRecord) {\r\n\r\n            const countryList = constructOptionList(this.props.selectedRecord.countryList || [], \"ncountrycode\",\r\n                \"scountryname\", undefined, undefined, undefined);\r\n            const countryListSupplier = countryList.get(\"OptionList\");\r\n            this.setState({ selectedRecord: this.props.selectedRecord, countryList: countryListSupplier });\r\n        }\r\n        let { dataState, dataStateMaterial } = this.state;\r\n        if (this.props.dataState !== previousProps.dataState && this.props.dataState !== dataState) {\r\n            dataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 }\r\n            dataStateMaterial = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 }\r\n            this.setState({ dataState, dataStateMaterial });\r\n        }\r\n\r\n        // {\r\n        //     dataState={...dataState,filter:undefined,sort:undefined}\r\n        //     dataStateMaterial={...dataStateMaterial,filter:undefined,sort:undefined}\r\n        //     this.setState({ dataState, dataStateMaterial });\r\n        // }\r\n        if (this.props.supplierCategory !== previousProps.supplierCategory || this.props.materialCategory !== previousProps.materialCategory) {\r\n\r\n            const supplierCategory = constructOptionList(this.props.supplierCategory || [], \"nsuppliercatcode\",\r\n                \"ssuppliercatname\", undefined, undefined, undefined);\r\n            const supplierCategoryList = supplierCategory.get(\"OptionList\");\r\n\r\n            const materialCategory = constructOptionList(this.props.materialCategory || [], \"nmaterialcatcode\",\r\n                \"smaterialcatname\", undefined, undefined, undefined);\r\n            const materialCategoryList = materialCategory.get(\"OptionList\");\r\n\r\n            this.setState({ supplierCategory: supplierCategoryList, materialCategory: materialCategoryList });\r\n        }\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        //add / edit  \r\n        if (this.state.selectedRecord['semail'] ? validateEmail(this.state.selectedRecord['semail']) : true) {\r\n\r\n        let inputParam = {};\r\n\r\n        if (this.props.screenName === \"Supplier Category\") {\r\n            inputParam = this.saveSupplierCategory(saveType, formRef);\r\n        }\r\n        else if (this.props.screenName === \"Material Category\") {\r\n            inputParam = this.saveMaterial(saveType, formRef);\r\n        }\r\n        else if (this.props.screenName === \"Supplier Contact\") {\r\n            inputParam = this.saveSupplierContact(saveType, formRef);\r\n        }\r\n        else if (this.props.screenName === \"Supplier File\") {\r\n            inputParam = this.onSaveSupplierFile(saveType, formRef);\r\n        }\r\n\r\n\r\n        if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, this.props.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n        }\r\n    } else {\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }));\r\n}\r\n\r\n }\r\n\r\n    saveSupplierCategory(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\r\n        inputData[\"suppliermatrix\"] = {};\r\n        let dataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n\r\n        let suppliermatrixArray = []\r\n        suppliermatrixArray = this.state.selectedRecord.nsuppliercatcode.map(item => {\r\n            let suppliermat = {}\r\n            suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\r\n            suppliermat[\"ntypecode\"] = 1;\r\n            suppliermat[\"sremarks\"] = \"\";\r\n            suppliermat[\"ntransactionstatus\"] = transactionStatus.ACTIVE;\r\n            suppliermat[\"ncategorycode\"] = item.value\r\n            //suppliermatrixArray.push(suppliermat);\r\n            return suppliermat;\r\n        });\r\n        inputData['suppliermatrix'] = suppliermatrixArray;\r\n\r\n        const inputParam = {\r\n            classUrl: \"suppliermatrix\",\r\n            methodUrl: \"SupplierMatrix\",\r\n            inputData: inputData,\r\n            operation: this.props.operation, saveType, formRef, dataState\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    saveMaterial(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\r\n        inputData[\"suppliermatrix\"] = {};\r\n        let dataStateMaterial = undefined;\r\n\r\n        let suppliermatrixArray = []\r\n        suppliermatrixArray = this.state.selectedRecord.nmaterialcatcode.map(item => {\r\n            let suppliermat = {}\r\n            suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\r\n            suppliermat[\"ntypecode\"] = 2;\r\n            suppliermat[\"sremarks\"] = \"\";\r\n            suppliermat[\"ntransactionstatus\"] = transactionStatus.ACTIVE;\r\n            suppliermat[\"ncategorycode\"] = item.value\r\n            //suppliermatrixArray.push(suppliermat);\r\n            return suppliermat;\r\n        });\r\n        inputData['suppliermatrix'] = suppliermatrixArray;\r\n\r\n        const inputParam = {\r\n            classUrl: \"suppliermatrix\",\r\n            methodUrl: \"SupplierMatrix\",\r\n            inputData: inputData,\r\n            operation: this.props.operation, saveType, formRef, dataStateMaterial\r\n        }\r\n        return inputParam;\r\n    }\r\n    saveSupplierContact(saveType, formRef) {\r\n        let inputData = [];\r\n        let postParam={};\r\n        inputData[\"userinfo\"] = this.props.userInfo;\r\n        inputData[\"supplier\"] = this.props.masterData.SelectedSupplier;\r\n        inputData[\"suppliercontact\"] = {};\r\n        let dataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n        let suppliercontactArray = []\r\n\r\n        let suppliermat = {}\r\n        if (this.props.operation == \"update\") {\r\n            postParam = { inputListName: \"Suppliercontact\", selectedObject: \"SupplierContact\", primaryKeyField: \"nsuppliercontactcode\" };\r\n\r\n            inputData[\"nsuppliercontactcode\"] = this.state.selectedRecord.nsuppliercontactcode;\r\n            suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\r\n            suppliermat[\"sdescription\"] = this.state.selectedRecord.sdescription;\r\n            suppliermat[\"sdesignation\"] = this.state.selectedRecord.sdesignation;\r\n            suppliermat[\"smobileno\"] = this.state.selectedRecord.smobileno;\r\n            suppliermat[\"stelephoneno\"] = this.state.selectedRecord.stelephoneno;\r\n            suppliermat[\"semail\"] = this.state.selectedRecord.semail;\r\n            suppliermat[\"ndefaultstatus\"] = this.state.selectedRecord.ndefaultstatus ? this.state.selectedRecord.ndefaultstatus : \"4\";\r\n            suppliermat[\"ssuppliercontactname\"] = this.state.selectedRecord.ssuppliercontactname;\r\n            suppliermat[\"nsuppliercontactcode\"] = this.state.selectedRecord.nsuppliercontactcode;\r\n            inputData['suppliercontact'] = suppliermat;\r\n\r\n        }\r\n        else {\r\n            suppliermat[\"nsuppliercode\"] = this.props.masterData.SelectedSupplier.nsuppliercode; //this.state.selectedRecord[\"nmahcode\"] ? this.state.selectedRecord[\"nmahcode\"].value : \"\";\r\n            suppliermat[\"sdescription\"] = this.state.selectedRecord.sdescription;\r\n            suppliermat[\"sdesignation\"] = this.state.selectedRecord.sdesignation;\r\n            suppliermat[\"smobileno\"] = this.state.selectedRecord.smobileno;\r\n            suppliermat[\"stelephoneno\"] = this.state.selectedRecord.stelephoneno;\r\n            suppliermat[\"semail\"] = this.state.selectedRecord.semail;\r\n            suppliermat[\"ndefaultstatus\"] = this.state.selectedRecord.ndefaultstatus ? this.state.selectedRecord.ndefaultstatus : \"4\";\r\n            suppliermat[\"ssuppliercontactname\"] = this.state.selectedRecord.ssuppliercontactname;\r\n\r\n            //suppliermat[\"ncategorycode\"] = item.value\r\n            //   suppliercontactArray.push(suppliermat);\r\n            //  return suppliermat;\r\n\r\n            inputData['suppliercontact'] = suppliermat;\r\n        }\r\n        let inputParam = {\r\n            classUrl: \"supplier\",\r\n            methodUrl: \"SupplierContact\",\r\n            inputData: inputData,\r\n            operation: this.props.operation,postParam, saveType, formRef, dataState\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n\r\n\r\n    onSaveSupplierFile = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let supplierFileArray = [];\r\n        let supplierFile = {\r\n            nsuppliercode: this.props.masterData.SelectedSupplier.nsuppliercode,\r\n            nsupplierfilecode: selectedRecord.nsupplierfilecode ? selectedRecord.nsupplierfilecode : 0,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            nattachmenttypecode,\r\n            ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\r\n        };\r\n        const formData = new FormData();\r\n        if (nattachmenttypecode === attachmentType.FTP) {\r\n            if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const tempData = Object.assign({}, supplierFile);\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\r\n                    const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\r\n                    const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.nsupplierfilecode && selectedRecord.nsupplierfilecode > 0\r\n                        && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\r\n                    tempData[\"sfilename\"] = file.name;\r\n                    tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    supplierFileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                supplierFile[\"sfilename\"] = selectedRecord.sfilename;\r\n                supplierFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\r\n                supplierFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                supplierFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                supplierFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                supplierFileArray.push(supplierFile);\r\n            }\r\n        } else {\r\n            supplierFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n            supplierFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\r\n            supplierFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            supplierFile[\"ssystemfilename\"] = \"\";\r\n            supplierFile[\"nfilesize\"] = 0;\r\n            supplierFileArray.push(supplierFile);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"supplierfile\", JSON.stringify(supplierFileArray));\r\n        // formData.append(\"userinfo\", JSON.stringify(this.props.userInfo));\r\n\r\n\r\n\r\n        let selectedId = null;\r\n        let postParam = undefined;\r\n        if (this.props.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"Supplier\", selectedObject: \"SelectedSupplier\", primaryKeyField: \"nsuppliercode\" };\r\n            selectedId = selectedRecord[\"nsupplierfilecode\"];\r\n        }\r\n        const inputParam = {\r\n            inputData: { userinfo: this.props.userInfo },\r\n            formData: formData,\r\n            isFileupload: true,\r\n            operation: this.props.operation,\r\n            classUrl: \"supplier\",\r\n            saveType, formRef, methodUrl: \"SupplierFile\", postParam\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    deleteRecord = (supplierparam) => {\r\n        if (this.props.masterData.SelectedSupplier.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: this.props.masterData.SelectedSupplier.stranstatus }));\r\n        }\r\n        else {\r\n            let inputParam = {};\r\n            if (this.props.screenName === 'Supplier File') {\r\n                inputParam = {\r\n                    classUrl: \"supplier\",\r\n                    methodUrl: supplierparam.methodUrl,\r\n                    inputData: {\r\n                        [supplierparam.methodUrl.toLowerCase()]: supplierparam.selectedRecord,\r\n                        \"userinfo\": this.props.userInfo,\r\n\r\n                    },\r\n                    operation: supplierparam.operation,\r\n                    //dataState: this.state.dataState,\r\n                    //dataStateMaterial: this.state.dataStateMaterial\r\n                    dataState: this.state.dataState\r\n                }\r\n            } else if (supplierparam.screenName === \"Supplier Contact\") {\r\n                inputParam = {\r\n                    classUrl: \"supplier\",\r\n                    methodUrl: \"SupplierContact\",\r\n                    inputData: {\r\n                        [supplierparam.methodUrl.toLowerCase()]: supplierparam.selectedRecord,\r\n                        \"userinfo\": this.props.userInfo,\r\n\r\n                    },\r\n                    operation: supplierparam.operation,\r\n                    //dataState: this.state.dataState,\r\n                    //dataStateMaterial: this.state.dataStateMaterial\r\n                    dataState: this.state.dataState\r\n                }\r\n            }\r\n            else {\r\n                inputParam = {\r\n                    classUrl: \"suppliermatrix\",\r\n                    methodUrl: supplierparam.methodUrl,\r\n                    inputData: {\r\n                        [supplierparam.methodUrl.toLowerCase()]: supplierparam.selectedRecord,\r\n                        \"userinfo\": this.props.userInfo,\r\n\r\n                    },\r\n                    operation: supplierparam.operation,\r\n                    //dataState: this.state.dataState,\r\n                    //dataStateMaterial: this.state.dataStateMaterial\r\n                    dataState: this.state.dataState\r\n                }\r\n            }\r\n\r\n            if (showEsign(this.props.esignRights, this.props.userInfo.nformcode, supplierparam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.masterData },\r\n                        openChildModal: true, screenName: supplierparam.screenName, operation: supplierparam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\");\r\n            }\r\n        }\r\n    }\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n    }\r\n}\r\n\r\nexport default injectIntl(SupplierMaterialCategoryTab);\r\n\r\n"]},"metadata":{},"sourceType":"module"}