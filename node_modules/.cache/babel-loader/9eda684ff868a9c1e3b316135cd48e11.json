{"ast":null,"code":"import _slicedToArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{injectIntl}from'react-intl';import{Row,Col,Card,FormGroup,FormLabel}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{transactionStatus}from'../../components/Enumeration';import{ReadOnlyText}from'../../components/App.styles';import FormTextarea from'../../components/form-textarea/form-textarea.component';var AddTemporaryStorage=function AddTemporaryStorage(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_PROJECTTYPE\"}),name:\"nprojecttypecode\",type:\"text\",placeholder:props.formatMessage({id:\"IDS_PROJECTTYPE\"}),onChange:function onChange(event){return props.onInputOnChange(event);},isDisabled:true,value:props.selectedProjectType.label,isMandatory:true,required:true,maxLength:50})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_BARCODEID\"}),name:\"sbarcodeid\",type:\"text\"//onBlur={(event) => props.autoSaveGetData(event)}\n,onKeyUp:function onKeyUp(event){return props.autoSaveGetDataTempoaryStorage(event,\"sbarcodeid\");},placeholder:props.formatMessage({id:\"IDS_BARCODEID\"}),onChange:function onChange(event){return props.onInputOnChange(event);},isDisabled:props.operation===\"update\"?true:false,value:props.selectedRecord[\"sbarcodeid\"],isMandatory:true,required:true,maxLength:20}))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Col,{md:props.userInfo.istimezoneshow===transactionStatus.YES?12:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dstoragedatetime\",label:props.intl.formatMessage({id:\"IDS_STORAGEDATETIME\"}),className:\"form-control\",placeholderText:props.intl.formatMessage({id:\"IDS_SELECTDATE\"})//dateFormat={props.userInfo[\"ssitedatetime\"]}\n,dateFormat:props.userInfo.ssitedatetime,timeInputLabel:props.intl.formatMessage({id:\"IDS_STORAGEDATETIME\"}),showTimeInput:true,timeFormat:true,isClearable:false,isMandatory:true,required:true// isDisabled={diableAllStatus === recordStatus}\n,minDate:props.currentTime,minTime:props.currentTime,onChange:function onChange(date){return props.handleDateChangeSlidout(\"dstoragedatetime\",date);},selected:props.selectedRecord?props.selectedRecord[\"dstoragedatetime\"]:new Date()})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_COMMENTS\"}),name:\"scomments\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_COMMENTS\"}),value:props.selectedRecord?props.selectedRecord[\"scomments\"]:\"\",rows:\"2\",isMandatory:false,required:false,maxLength:\"255\"}))),/*#__PURE__*/React.createElement(Row,null,props.barcodedata&&Object.entries(props.barcodedata).length!==0&&/*#__PURE__*/React.createElement(Col,{md:12,className:\" mb-2\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,props.intl.formatMessage({id:\"IDS_SAMPLEINFO\"})))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,props.barcodeFields&&props.barcodeFields.map(function(item){return props.barcodedata&&Object.entries(props.barcodedata).map(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];if(item.sfieldname===key){return/*#__PURE__*/React.createElement(Col,{md:6,key:\"specInfo_\".concat(key)},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,key),/*#__PURE__*/React.createElement(ReadOnlyText,null,value)));}else{return null;}});}))))))));};export default injectIntl(AddTemporaryStorage);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/storagemanagement/AddTemporaryStorage.jsx"],"names":["React","injectIntl","Row","Col","Card","FormGroup","FormLabel","FormInput","DateTimePicker","transactionStatus","ReadOnlyText","FormTextarea","AddTemporaryStorage","props","formatMessage","id","event","onInputOnChange","selectedProjectType","label","autoSaveGetDataTempoaryStorage","operation","selectedRecord","userInfo","istimezoneshow","YES","intl","ssitedatetime","currentTime","date","handleDateChangeSlidout","Date","barcodedata","Object","entries","length","display","marginTop","barcodeFields","map","item","key","value","sfieldname"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\nconst AddTemporaryStorage = (props) => {\r\n   \r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Col md={12}>\r\n\r\n                        <FormInput\r\n                            label={props.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                            name={\"nprojecttypecode\"}\r\n                            type=\"text\"\r\n                            placeholder={props.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            isDisabled={true}\r\n                            value={props.selectedProjectType.label}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={50}\r\n\r\n                        />\r\n\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.formatMessage({ id: \"IDS_BARCODEID\" })}\r\n                            name={\"sbarcodeid\"}\r\n                            type=\"text\"\r\n                            //onBlur={(event) => props.autoSaveGetData(event)}\r\n                            onKeyUp={(event) => props.autoSaveGetDataTempoaryStorage(event, \"sbarcodeid\")}\r\n                            placeholder={props.formatMessage({ id: \"IDS_BARCODEID\" })}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            isDisabled={props.operation === \"update\" ? true : false}\r\n                            value={props.selectedRecord[\"sbarcodeid\"]}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={20}\r\n\r\n                        />\r\n                    </Col>\r\n\r\n\r\n                </Col>\r\n                <Col md={6}>\r\n\r\n\r\n                    <Col md={props.userInfo.istimezoneshow === transactionStatus.YES ? 12 : 12}>\r\n                        <DateTimePicker\r\n                            name={\"dstoragedatetime\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_STORAGEDATETIME\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            //dateFormat={props.userInfo[\"ssitedatetime\"]}\r\n                            dateFormat={props.userInfo.ssitedatetime}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_STORAGEDATETIME\" })}\r\n                            showTimeInput={true}\r\n                            timeFormat={true}\r\n                            isClearable={false}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            // isDisabled={diableAllStatus === recordStatus}\r\n                            minDate={props.currentTime}\r\n                            minTime={props.currentTime}\r\n                            onChange={date => props.handleDateChangeSlidout(\"dstoragedatetime\", date)}\r\n                            selected={props.selectedRecord ? props.selectedRecord[\"dstoragedatetime\"] : new Date()} />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            label={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                            name={\"scomments\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"scomments\"] : \"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={\"255\"}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n                </Col>\r\n                <Row>\r\n                    {props.barcodedata && Object.entries(props.barcodedata).length !== 0 &&\r\n                        <Col md={12} className=' mb-2'>\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                        <h4>{props.intl.formatMessage({ id: \"IDS_SAMPLEINFO\" })}</h4>\r\n                                    </span>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        {\r\n                                            props.barcodeFields && props.barcodeFields.map(item => {\r\n                                                return (\r\n                                                    props.barcodedata && Object.entries(props.barcodedata).map(([key, value]) => {\r\n                                                        if (item.sfieldname === key) {\r\n                                                            return (\r\n                                                                <Col md={6} key={`specInfo_${key}`}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel>\r\n                                                                            {key}\r\n                                                                        </FormLabel>\r\n                                                                        <ReadOnlyText>{value}</ReadOnlyText>\r\n                                                                    </FormGroup>\r\n                                                                </Col>\r\n                                                            );\r\n                                                        } else {\r\n                                                            return null;\r\n                                                        }\r\n                                                    })\r\n                                                );\r\n                                            })\r\n                                        }\r\n\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>}\r\n                </Row>\r\n\r\n            </Row >\r\n        </>\r\n\r\n\r\n    )\r\n}\r\nexport default injectIntl(AddTemporaryStorage);\r\n"]},"metadata":{},"sourceType":"module"}