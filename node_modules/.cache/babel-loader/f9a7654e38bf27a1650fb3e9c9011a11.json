{"ast":null,"code":"import _toConsumableArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import rsapi from'../../rsapi';import{toast}from'react-toastify';import{Row,Col,Card,Button,Nav}from'react-bootstrap';import PerfectScrollbar from'react-perfect-scrollbar';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faPlus}from'@fortawesome/free-solid-svg-icons';import'react-perfect-scrollbar/dist/css/styles.css';import SplitterLayout from'react-splitter-layout';import{faEye,faTrashAlt}from'@fortawesome/free-regular-svg-icons';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport{process}from'@progress/kendo-data-query';import DataGrid from'../../components/data-grid/data-grid.component';import OrgTree from'react-org-tree';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import{callService,crudMaster,filterTestGroup,createTree,editTree,getTestGroupDetails,sampleTypeOnChange,validateEsignCredential,updateStore,addSpecification,getSpecification,addComponent,changeTestCategory,addTestGroupTest,editTestGroupTest,getTestGroupParameter,editTestGroupParameter,addTestFile,editSpecFile,getSpecificationDetails,addTestGroupCodedResult,getComponentBySpecId,filterColumnData,viewAttachment,viewTestGroupCheckList,getTestGroupComponentDetails,filterTransactionList,reportSpecification,retireSpecification,getDataForTestMaterial,getMaterialCategoryBasedMaterialType,getMaterialBasedMaterialCategory,getTestGroupMaterial,getDataForEditTestMaterial,addTestGroupNumericTab,getTestGroupRulesEngineAdd,getEditTestGroupRulesEngine,getSelectedTestGroupRulesEngine,getParameterforEnforce,getParameterRulesEngine,getParameterResultValue,subCodedResultView,saveExecutionOrder,getPredefinedDataRulesEngine,getCopyValues,generateControlBasedReport,getSpecDetailsForCopy,getSpecificationComboServices,getComponentComboServices,getRulesTestComboServices,getProductComboServices,getProfileRootComboServices}from'../../actions';import{constructOptionList,formatInputDate,create_UUID,deleteAttachmentDropZone,filterRecordBasedOnTwoArrays,getControlMap,onDropAttachFileList,showEsign,sortData,Lims_JSON_stringify,replaceBackSlash}from'../../components/CommonScript';import TestGroupTestTab from'./TestGroupTestTab';import AddTestGroupSpecification from'./AddTestGroupSpecification';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{transactionStatus,REPORTTYPE,attachmentType,formCode,designProperties,// parameterType,SampleType, grade } from '../../components/Enumeration';\n// parameterType,SampleType } from '../../components/Enumeration';\nparameterType,SampleType,MaterialType,ResultEntry}from'../../components/Enumeration';import AddTestGroupTest from'./AddTestGroupTest';import AddProfileTree from'./AddProfileTree';import SampleFilter from'./SampleFilter';import AddFile from'../testmanagement/AddFile';import AdvFilter from'../../components/AdvFilter';import SpecificationHistory from'./SpecificationHistory';import TestGroupSpecFile from'./TestGroupSpecFile';import SpecificationInfo from'./SpecificationInfo';import CustomTab from'../../components/custom-tabs/custom-tabs.component';import TransationListMaster from'../../components/TransactionListMaster';import FormTreeMenu from'../../components/form-tree-menu/form-tree-menu.component';// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport FormInput from'../../components/form-input/form-input.component';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import{testMoreFields,testSubFields,searchFieldList,specificationColumnList,addTestColumnList,editTestColumnList,specificationCopyColumnList}from'./TestGroupFields';import EditTestGroupTest from'./EditTestGroupTest';import{ContentPanel,SearchAdd}from'../../components/App.styles';import'../../pages/registration/registration.css';import{ListWrapper}from'../../components/client-group.styles';import{ProductList}from'../product/product.styled';import TransactionListMasterJsonView from'../../components/TransactionListMasterJsonView';// import ReactTooltip from 'react-tooltip';\nimport PortalModalSlideout from'../../components/portal-modal/portal-modal-slideout';import AddTestGroupRule from'./AddTestGroupRule';import ViewSubCodedResult from'./ViewSubCodedResult';import{numberConversion,numericGrade}from'../ResultEntryBySample/ResultEntryValidation';import ResultEntryPredefinedComments from'../ResultEntryBySample/ResultEntryPredefinedComments';import ModalShow from'../../components/ModalShow';import{ReactComponent as RefreshIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";var TestGroup=/*#__PURE__*/function(_Component){_inherits(TestGroup,_Component);var _super=_createSuper(TestGroup);function TestGroup(_props){var _ref3;var _this;_classCallCheck(this,TestGroup);_this=_super.call(this,_props);_this.reloadData=function(){//ALPD-5529--Vignesh R(06-03-2025)-->Test group screen -> Profile showing wrongly in specific scenario.\n//const filterData = this.props.Login.masterData.filterData || this.state.filterData;\n//ALPD-5547 Test Group-->Refreshing the screen causes the records to disappear from view.\nvar filterData=_this.state.filterData||_this.props.Login.masterData.filterData;if(filterData.nsampletypecode===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SAMPLETYPENOTAVAILABLE\"}));}else if(filterData.nproductcatcode===\"\"){if(filterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTCATEGORYNOTAVAILABLE\"}));}else if(filterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\"}));}else if(filterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_MATERIALCATEGORYNOTAVAILABLE\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_CATEGORYNOTAVAILABLE\"}));}}else if(filterData.nproductcode===\"\"&&filterData.nproductcatcode.item.ncategorybasedflow===transactionStatus.NO){if(filterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY&&filterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.NO){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}else if(filterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_INSTRUMENTNOTAVAILABLE\"}));}else if(filterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_MATERIALNOTAVAILABLE\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}}else if(filterData.ntreeversiontempcode===\"\"){toast.warn(_this.props.intl.formatMessage({id:\"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\"}));}else{var inputParam={inputData:{userinfo:_this.props.Login.userInfo,nsampletypecode:filterData.nsampletypecode.item[\"nsampletypecode\"],nproductcatcode:filterData.nproductcatcode.item[\"nproductcatcode\"],//   nproductcode: filterData.nproductcode.item[\"nproductcode\"],\nnproductcode:filterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.YES?-1:filterData.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES?-1:filterData.nproductcode?filterData.nproductcode.value:-1,ntreeversiontempcode:filterData.ntreeversiontempcode.item[\"ntreeversiontempcode\"],nprojectmastercode:filterData.nprojectmastercode!==undefined?filterData.nprojectmastercode.item[\"nprojectmastercode\"]:-1,filterData:filterData//: { ...this.props.Login.masterData.filterData }\n},historyDataState:_this.state.historyDataState};_this.props.filterTestGroup(inputParam,_this.props.Login.masterData,_this.searchRef);}};_this.ConfirmDelete=function(obj){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteRecord(obj);});};_this.handlePageChange=function(event){_this.setState({testskip:event.skip,testtake:event.take});};_this.viewTestFile=function(props){var viewParam={operation:\"view\",methodUrl:\"TestGroupTestFile\",classUrl:\"testgroup\",inputData:{ntestgroupfilecode:props.selectedTest?props.selectedTest.ntestgroupfilecode:0,userinfo:_this.props.Login.userInfo,testgroupspecification:_this.props.Login.masterData.SelectedSpecification,ntestgrouptestcode:props.selectedTest?props.selectedTest.ntestgrouptestcode:0}};_this.props.viewAttachment(viewParam);};_this.fileViewIcon=function(master){if(master.ntestgroupfilecode>0&&master.nlinkcode===transactionStatus.NA){return true;}else{return false;}};_this.linkViewIcon=function(master){if(master.ntestgroupfilecode>0&&master.nlinkcode!==transactionStatus.NA){return true;}else{return false;}};_this.onFilterSumbit=function(){var tempFilterData=_this.state.tempFilterData;if(tempFilterData.nsampletypecode===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SAMPLETYPENOTAVAILABLE\"}));}else if(tempFilterData.nproductcatcode===\"\"){if(tempFilterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTCATEGORYNOTAVAILABLE\"}));}else if(tempFilterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\"}));}else if(tempFilterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_MATERIALCATEGORYNOTAVAILABLE\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_CATEGORYNOTAVAILABLE\"}));}}// else if(tempFilterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.NO){\nelse if(tempFilterData.nproductcatcode.item.ncategorybasedflow===transactionStatus.NO&&tempFilterData.nproductcode===\"\"&&tempFilterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.NO||tempFilterData.nproductcatcode.item.ncategorybasedflow===transactionStatus.NO&&tempFilterData.nproductcode===undefined&&tempFilterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.NO){if(tempFilterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY&&tempFilterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.NO){toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}else if(tempFilterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_INSTRUMENTNOTAVAILABLE\"}));}else if(tempFilterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY){toast.warn(_this.props.intl.formatMessage({id:\"IDS_MATERIALNOTAVAILABLE\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}}// }\nelse if(tempFilterData.ntreeversiontempcode===\"\"){toast.warn(_this.props.intl.formatMessage({id:\"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\"}));}else{var inputParam={inputData:{userinfo:_this.props.Login.userInfo,nsampletypecode:tempFilterData.nsampletypecode.value,nproductcatcode:tempFilterData.nproductcatcode.value,nproductcode:tempFilterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.YES?-1:tempFilterData.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES?-1:tempFilterData.nproductcode?tempFilterData.nproductcode.value:-1,ntreeversiontempcode:tempFilterData.ntreeversiontempcode.value,nprojectmastercode:tempFilterData.nsampletypecode.value===SampleType.PROJECTSAMPLETYPE?tempFilterData.nsampletypecode.item.nprojectspecrequired===transactionStatus.YES?tempFilterData.nprojectmastercode.value:-1:-1,filterData:_objectSpread({},tempFilterData)},historyDataState:_this.state.historyDataState};_this.props.filterTestGroup(inputParam,_this.props.Login.masterData,_this.searchRef);}};_this.onCopyTreeClick=function(selectedCopyNodeManipulationCode,selectedCopyProfileName,CopyFocusKey,CopyActiveKey){var selectedRecord=_objectSpread({},_this.state.selectedRecord)||{};selectedRecord['selectedCopyNodeManipulationCode']=selectedCopyNodeManipulationCode;selectedRecord['selectedCopyProfileName']=selectedCopyProfileName;selectedRecord['CopyFocusKey']=CopyFocusKey;selectedRecord['CopyActiveKey']=CopyActiveKey;selectedRecord['scopyspecname']=selectedCopyProfileName;_this.setState({selectedRecord:_objectSpread({},selectedRecord)// isCopySpecRender: false\n});};_this.onTreeClick=function(event){var inputParam={methodUrl:\"TestGroupSpecification\",screenName:\"IDS_SPECIFICATION\",operation:\"get\",keyName:\"treetemplatemanipulation\",userinfo:_this.props.Login.userInfo,selectedRecord:event.item,activeKey:event.key,focusKey:event.key,primaryKey:event.primaryKey,historyDataState:_this.state.historyDataState};_this.props.getSpecification(inputParam,_this.props.Login.masterData,_this.searchRef);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_FILE\",/*#__PURE__*/React.createElement(TestGroupSpecFile,{controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,deleteRecord:_this.deleteRecord,testGroupSpecFile:_this.props.Login.masterData.TestGroupSpecFile||[],selectedSpecification:_this.props.Login.masterData.SelectedSpecification,addTestFile:_this.addFile,editSpecFile:_this.props.editSpecFile,filterData:_this.state.filterData,viewTestFile:_this.viewTestFile,defaultRecord:_this.defaultRecord,screenName:\"IDS_FILE\",viewAttachment:_this.props.viewAttachment,settings:_this.props.Login.settings,masterData:_this.props.Login.masterData}));tabMap.set(\"IDS_SPECIFICATIONHISTORY\",/*#__PURE__*/React.createElement(SpecificationHistory,{data:_this.props.Login.masterData.TestGroupSpecificationHistory,dataResult:process(_this.props.Login.masterData.TestGroupSpecificationHistory||[],_this.state.historyDataState),dataState:_this.state.historyDataState,dataStateChange:_this.historyDataStateChange// testGroupSpecificationHistory={this.props.Login.masterData.TestGroupSpecificationHistory}\n// dataState={this.props.Login.screenName === \"IDS_SPECIFICATIONHISTORY\" ? this.state.historyDataState : { skip: 0, take: 10 }}\n,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,inputParam:_this.props.Login.inputParam,screenName:\"IDS_SPECIFICATIONHISTORY\"}));return tabMap;};_this.historyDataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.TestGroupSpecificationHistory||[],event.dataState),historyDataState:event.dataState});};_this.specDataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.TestGroupTestClinicalSpec||[],event.dataState),clinicalspecDataState:event.dataState});};_this.addFile=function(userInfo,operation,ncontrolCode,screenName,modalName,nflag){// const testgroupspecification = this.props.Login.masterData.SelectedSpecification;\n// if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\n//     || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\n//     this.props.addTestFile(userInfo, operation, ncontrolCode, screenName, modalName, nflag);\n// } else {\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\n// }\nvar masterData=_this.props.Login.masterData;if(masterData.selectedNode){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=_this.props.Login.masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){_this.props.addTestFile(userInfo,operation,ncontrolCode,screenName,modalName);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};_this.componentRowClick=function(event){var masterData=_this.props.Login.masterData;masterData[\"SelectedComponent\"]=event.testgroupspecsampletype[0];var inputParam={testgroupspecsampletype:event.testgroupspecsampletype[0],userInfo:_this.props.Login.userInfo};_this.props.getTestGroupComponentDetails(inputParam,masterData,_this.searchRef);};_this.deleteTest=function(deleteParam){var masterData=_this.props.Login.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var testgrouptest=deleteParam.props.testgrouptest;var inputParam={inputData:{testgrouptest:testgrouptest,userinfo:_this.props.Login.userInfo,testgroupspecification:testgroupspecification,ntreeversiontempcode:deleteParam.filterData.ntreeversiontempcode.value,nprojectmastercode:masterData.selectedNode.nprojectmastercode?masterData.selectedNode.nprojectmastercode:-1},classUrl:\"testgroup\",operation:\"delete\",methodUrl:\"Test\",screenName:\"IDS_TEST\",postParam:{inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:testgrouptest.ntestgrouptestcode,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.Login.userInfo},masterData:masterData,searchFieldList:searchFieldList,unchangeList:[\"TestGroupSpecification\",\"SelectedSpecification\",\"SampleType\",\"TreeVersionTemplate\",\"ProductCategory\",\"SelectedTest\",\"Product\",\"AgaramTree\",\"OpenNodes\",\"selectedNode\",\"FocusKey\",\"ActiveKey\",\"SelectedComponent\",\"TestGroupSpecSampleType\"]//, isSingleSelect: true\n}};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_TEST\",operation:\"delete\",selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var masterData=_this.props.Login.masterData;if(loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"Default\"||_this.props.Login.operation==='approve'||_this.props.Login.operation==='complete'){loadEsign=false;openModal=false;selectedRecord={};delete masterData.selectedRecordCopy;}else{loadEsign=false;// selectedRecord[\"agree\"] = 4;\nselectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openModal=false;selectedRecord={};delete masterData.selectedRecordCopy;delete masterData.CopyOpenNodes;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,masterData:masterData}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event,caseNo,optional){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?optional[0]:optional[1];}else if(event.target.type==='radio'){selectedRecord[event.target.name]=optional;// selectedRecord[\"sfilename\"] = \"\";\n}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});break;case 2:selectedRecord[event.target.name]=event.target.value;var indexKey=Object.keys(optional)[0];var value=Object.values(optional)[0];var treeData={ntreeversiontempcode:value.ntreeversiontempcode,npositioncode:value.nlevelno-1,sleveldescription:event.target.value,ntemptranstestgroupcode:value.ntemptranstestgroupcode,nformcode:62,schildnode:\"\",nnextchildcode:value.schildnode!==null?value.schildnode:-1,ntemplatemanipulationcode:value.ntemplatemanipulationcode,isreadonly:value.ntemplatemanipulationcode>0?true:false,slevelformat:value.slevelformat};var treetemplatemanipulation=selectedRecord.treetemplatemanipulation||[];treetemplatemanipulation[indexKey]=treeData;selectedRecord[\"treetemplatemanipulation\"]=treetemplatemanipulation;_this.setState({selectedRecord:selectedRecord});break;default:break;}};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onTabChangeRulesEngine=function(tabProps){var masterData=_this.props.Login.masterData&&_this.props.Login.masterData;masterData['activeTabName']=tabProps.activeTabName;var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:masterData}};_this.props.updateStore(updateInfo);};_this.tabDetailRulesEngine=function(){var masterData=_this.props.Login.masterData||{};var jsonuidata=_this.props.Login.masterData.SelectedRulesEngine&&_this.props.Login.masterData.SelectedRulesEngine['jsonuidata'];var tabMap=new Map();{tabMap.set(\"IDS_Test\",/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",expandField:\"expanded\",handleExpandChange:_this.handleExpandChange,dataResult:_this.props.Login.masterData.SelectedRulesEngine&&_this.props.Login.masterData.SelectedRulesEngine&&process(sortData(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testInitiateTests'],\"descending\",\"npkAtestparametercode\")||[],_this.state.dataStatetestinitiate?_this.state.dataStatetestinitiate:{skip:0,take:10}),dataState:_this.state.dataStatetestinitiate?_this.state.dataStatetestinitiate:{skip:0,take:10},dataStateChange:_this.dataStateChangetestinitiateTab,extractedColumnList:[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"}],controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,pageable:true,scrollable:'scrollable',hideColumnFilter:false,selectedId:0,deleteParam:{operation:\"delete\"},hasChild:true,childMappingField:'npkAtestparametercode',childColumnList:[{\"idsName\":\"IDS_TOSITE\",\"dataField\":\"stositename\",\"width\":\"200px\"},{\"idsName\":\"IDS_FROMSITE\",\"dataField\":\"sfromsitename\",\"width\":\"200px\"}],childList:_this.state.childListMap,activeTabName:\"IDS_Test\"//gridHeight = {'400px'}\n,isActionRequired:true,actionIcons:[{title:_this.props.intl.formatMessage({id:\"IDS_VIEWPARAMETER\"}),controlname:\"faEye\",hidden:false,objectName:\"view\",onClick:_this.viewParameter}]}));tabMap.set(\"IDS_COMMENTS\",/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",handleExpandChange:_this.handleExpandChange,dataResult:_this.props.Login.masterData.SelectedRulesEngine&&process(sortData(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testCommentsTestsTab'],\"descending\",\"nslno\")||[],_this.state.dataState?_this.state.dataState:{skip:0,take:10}),dataState:_this.state.dataState?_this.state.dataState:{skip:0,take:10},dataStateChange:_this.dataStateChange,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,pageable:true,scrollable:'scrollable',hideColumnFilter:false,selectedId:0,deleteParam:{operation:\"delete\"},childMappingField:'npkBtestparametercode',extractedColumnList:[{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULTS\",\"dataField\":\"spredefinedname\",\"width\":\"200px\"},{\"idsName\":\"IDS_COMMENTSUBTYPE\",\"dataField\":\"scommentsubtype\",\"width\":\"200px\"},{\"idsName\":\"IDS_COMMENTTYPE\",\"dataField\":\"scommenttype\",\"width\":\"200px\"},{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"}],childList:_this.state.childListMap2&&_this.state.childListMap2,activeTabName:\"IDS_COMMENTS\"//gridHeight = {'400px'}\n}));tabMap.set(\"IDS_REPEAT\",/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:_this.props.Login.masterData.SelectedRulesEngine&&process(sortData(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testRepeatTestsTab'],\"descending\",\"npkCtestparametercode\")||[],_this.state.dataStaterepeatTab?_this.state.dataStaterepeatTab:{skip:0,take:10}),dataState:_this.state.dataStaterepeatTab?_this.state.dataStaterepeatTab:{skip:0,take:10},dataStateChange:_this.dataStateChangeRepeatTab,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,pageable:true,scrollable:'scrollable',hideColumnFilter:false,selectedId:0,deleteParam:{operation:\"delete\"},extractedColumnList:[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_REPEATCOUNT\",\"dataField\":\"nrepeatcountno\",\"width\":\"200px\"}],activeTabName:\"IDS_COMMENTS\"//gridHeight = {'400px'}\n}));tabMap.set(\"IDS_ENFORCERESULT\",/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"nresultusedmaterialcode\",dataResult:_this.props.Login.masterData.SelectedRulesEngine&&process(sortData(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testenforceTestsTab'],\"descending\",\"npkDtestparametercode\")||[],_this.state.dataStateChangenforceTab?_this.state.dataStateChangenforceTab:{skip:0,take:10}),dataState:_this.state.dataStateChangenforceTab?_this.state.dataStateChangenforceTab:{skip:0,take:10},dataStateChange:_this.dataStateChangenforceTab,controlMap:_this.state.controlMap,userRoleControlRights:_this.state.userRoleControlRights,pageable:true,scrollable:'scrollable',hideColumnFilter:false,selectedId:0,deleteParam:{operation:\"delete\"},extractedColumnList:[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_PARAMETERS\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULTFLAG\",\"dataField\":\"sgradename\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULTS\",\"dataField\":\"senforceresult\",\"width\":\"200px\"}],activeTabName:\"IDS_COMMENTS\"//gridHeight = {'400px'}\n}));}return tabMap;};_this.dataStateChange=function(event,ntestgrouptestparametercode){var dataStateObject=_this.state.dataStateObject||{};if(ntestgrouptestparametercode){dataStateObject=_objectSpread(_objectSpread({},dataStateObject),{},_defineProperty({},ntestgrouptestparametercode,event.dataState));_this.setState({dataStateObject:dataStateObject});}else{_this.setState({dataState:event.dataState});}};_this.dataStateChangetestRepeat=function(event){_this.setState({//  dataResult: process(this.props.Login.queryData, event.dataState),\ndataStatetestRepeat:event.dataState});};_this.dataStateChangetestEnforce=function(event){_this.setState({//  dataResult: process(this.props.Login.queryData, event.dataState),\ndataStatetestEnforce:event.dataState});};_this.dataStateChangetestinitiateTab=function(event){_this.setState({//  dataResult: process(this.props.Login.queryData, event.dataState),\ndataStatetestinitiate:event.dataState});};_this.dataStateChangeViewParameter=function(event){_this.setState({dataStateChangeViewParameter:event.dataState});};_this.dataStateChangeRepeatTab=function(event){_this.setState({//  dataResult: process(this.props.Login.queryData, event.dataState),\ndataStaterepeatTab:event.dataState});};_this.dataStateChangenforceTab=function(event){_this.setState({//  dataResult: process(this.props.Login.queryData, event.dataState),\ndataStateChangenforceTab:event.dataState});};_this.dataStateChangeMain=function(event){_this.setState({dataResultMain:process(_this.props.Login.queryDataMain,event.dataStateMain),dataStateMain:event.dataStateMain});};_this.ConfirmDeleteRule=function(deleteId){if(_this.props.Login.masterData['RulesEngine']&&_this.props.Login.masterData['RulesEngine'].length>0){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.handleClickDelete(_this.props.Login.masterData,deleteId,\"openModal\");});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTRULETODELETE\"}));}};_this.closeModalShow=function(){var openModalPopup=_this.props.Login.openModalPopup;var modalParameterPopup=_this.props.Login.modalParameterPopup;var selectedRecord=_this.props.Login.selectedRecord||{};selectedRecord['srulename']=\"\";if(selectedRecord['ParameterRulesEngine']){selectedRecord['ParameterRulesEngine']=[];}openModalPopup=false;modalParameterPopup=false;var updateInfo={typeName:DEFAULT_RETURN,data:{openModalPopup:openModalPopup,selectedRecord:selectedRecord,modalParameterPopup:modalParameterPopup}};_this.props.updateStore(updateInfo);};_this.onModalSavePredefAlert=function(){var selectedRecord=_this.state.selectedRecord||[];var currentAlertResultCode=_this.state.currentAlertResultCode||0;var currentntestgrouptestpredefcode=_this.state.currentntestgrouptestpredefcode||0;var bool=_this.state.selectedRecord.ParameterRulesEngine.some(function(x){return x['ntestgrouptestparametercode']===currentAlertResultCode;});if(bool){_this.state.selectedRecord.ParameterRulesEngine.map(function(Parameter){if(Parameter['ntestgrouptestparametercode']===currentAlertResultCode){Parameter['additionalInfoUidata']={ntestgrouptestpredefsubcode:selectedRecord['ntestgrouptestpredefsubcode']};if(selectedRecord['ntestgrouptestpredefsubcode']){if(typeof selectedRecord['ntestgrouptestpredefsubcode']==='string'){Parameter['additionalInfo']=selectedRecord['ntestgrouptestpredefsubcode'];}else{Parameter['additionalInfo']=\"\";Parameter['additionalInfo']=selectedRecord['ntestgrouptestpredefsubcode'].map(function(x){return x.label+\",\";}).join('\\n');Parameter['additionalInfo']=Parameter['additionalInfo'].substring(0,Parameter['additionalInfo'].length-1);}}else{Parameter['additionalInfo']=\"\";Parameter['additionalInfoUidata']&&delete Parameter['additionalInfoUidata'];}Parameter['ntestgrouptestpredefcode']=currentntestgrouptestpredefcode;}});}var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,showAlertGrid:false}};_this.props.updateStore(updateInfo);};_this.closeModalShowPredefAlert=function(){var showAlertGrid=_this.props.Login.showAlertGrid;var selectedRecord=_this.props.Login.selectedRecord;var masterData=_this.props.Login.masterData&&_this.props.Login.masterData;// masterData['RESelectedTest'].forEach(object => {\n//     object['expanded']&&delete object['expanded'];\n//   });\nselectedRecord['ntestgrouptestpredefsubcode']&&delete selectedRecord['ntestgrouptestpredefsubcode'];showAlertGrid=false;var updateInfo={typeName:DEFAULT_RETURN,data:{showAlertGrid:showAlertGrid,masterData:masterData,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.onsavevalidation=function(selectedRecord){var grouplist=selectedRecord[\"groupList\"];var hasAll=true;var _loop=function _loop(){var rules=grouplist[i];for(j=0;j<rules.length;j++){var props=[];if(rules[j][\"orderresulttype\"]&&rules[j][\"orderresulttype\"].value===1){props=[\"stestname\",\"ssymbolname\",\"orderresulttype\",\"ndiagnosticcasecode\"];}else if(rules[j][\"orderresulttype\"]&&rules[j][\"orderresulttype\"].value===3){if(rules[j][\"stestname\"]&&rules[j][\"stestname\"]['item']['nparametertypecode']===parameterType.PREDEFINED){props=[\"stestname\",\"ssymbolname\",\"orderresulttype\",\"ntestgrouptestpredefcode\"];}else if(rules[j][\"stestname\"]&&rules[j][\"stestname\"]['item']['nparametertypecode']===parameterType.CHARACTER){props=[\"stestname\",\"ssymbolname\",\"orderresulttype\",\"ntestgrouptestcharcode\"];}else if(rules[j][\"stestname\"]&&rules[j][\"stestname\"]['item']['nparametertypecode']===parameterType.NUMERIC){props=[\"stestname\",\"ssymbolname\",\"orderresulttype\",\"ntestgrouptestnumericcode\"];}else{if(rules[j][\"orderresulttype\"]&&rules[j][\"orderresulttype\"].value===1){props=[\"stestname\",\"ssymbolname\",\"orderresulttype\",\"ndiagnosticcasecode\"];}else{props=[\"stestname\",\"ssymbolname\",\"orderresulttype\",\"ngradecode\"];}}}else{props=[\"stestname\",\"ssymbolname\",\"orderresulttype\",\"ngradecode\"];}hasAll=props.every(function(prop){return rules[j].hasOwnProperty(prop);});if(hasAll===false){break;}}if(hasAll===false){return\"break\";}};for(var i=0;i<grouplist.length;i++){var j;var _ret=_loop();if(_ret===\"break\")break;}return hasAll;};_this.save=function(){var inputData=[];var siteObject=_this.props.Login.siteObject||{};var testCommentObject=_this.props.Login.testCommentObject||{};var reportCommentObject=_this.props.Login.reportCommentObject||{};var PredefinedParameterOptions=_this.props.Login.masterData.PredefinedParameterOptions||[];var testInitiateTests=_this.props.Login.testInitiateTests||[];var testCommentsTests=_this.props.Login.testCommentsTests||[];var reportCommentsTests=_this.props.Login.reportCommentsTests||[];var testRepeatTests=_this.props.Login.testRepeatTests||[];var testenforceTests=_this.props.Login.testenforceTests||[];var testsInvolvedInRules=[];var testsNameInvolvedInRules=[];var selectedRecord=_this.state.selectedRecord;var rules=[];//  if (selectedRecord[\"nproductcatcode\"]) {\nif(testInitiateTests.length>0||testCommentsTests.length>0||testRepeatTests.length>0||testenforceTests.length>0){if(selectedRecord[\"groupList\"].length>0){if(_this.onsavevalidation(selectedRecord)){if(selectedRecord[\"srulename\"]&&selectedRecord[\"srulename\"]!==\"\"&&_this.props.Login.action!=='update'&&_this.props.Login.action!=='IDS_ADDTESTCOMMENTS'&&_this.props.Login.action!=='IDS_ADDREPORTCOMMENTS'&&_this.props.Login.action!=='IDS_ADDTEST'&&_this.props.Login.action!=='IDS_ADDSITE'&&_this.props.Login.action!=='IDS_ADDPARAMETER'){if(selectedRecord[\"groupList\"]){var groupList=[];var outcomeList={};groupList=selectedRecord[\"groupList\"];outcomeList['groupList']=groupList;outcomeList['addGroupList']=_this.props.Login.addGroupList;outcomeList['testInitiateTests']=_this.props.Login.testInitiateTests&&_this.props.Login.testInitiateTests;outcomeList['testCommentsTests']=_this.props.Login.testCommentsTests&&_this.props.Login.testCommentsTests;outcomeList['testRepeatTests']=_this.props.Login.testRepeatTests&&_this.props.Login.testRepeatTests;outcomeList['testenforceTests']=_this.props.Login.testenforceTests&&_this.props.Login.testenforceTests;outcomeList['reportCommentsTests']=_this.props.Login.reportCommentsTests&&_this.props.Login.reportCommentsTests;outcomeList['siteObject']=_this.props.Login.siteObject&&_this.props.Login.siteObject;outcomeList['testCommentObject']=_this.props.Login.testCommentObject&&_this.props.Login.testCommentObject;outcomeList['reportCommentObject']=_this.props.Login.reportCommentObject&&_this.props.Login.reportCommentObject;outcomeList['testInitiateSiteTab']=_this.props.Login.masterData.testInitiateSiteTab&&_this.props.Login.masterData.testInitiateSiteTab;outcomeList['testCommentsTestsTab']=_this.props.Login.masterData.testCommentsTestsTab&&_this.props.Login.masterData.testCommentsTestsTab;outcomeList['reportCommentsTestsTab']=_this.props.Login.reportCommentsTestsTab&&_this.props.Login.reportCommentsTestsTab;outcomeList['testRepeatTestsTab']=_this.props.Login.masterData['testRepeatTestsTab']&&_this.props.Login.masterData['testRepeatTestsTab'];outcomeList['testenforceTestsTab']=_this.props.Login.masterData['testenforceTestsTab']&&_this.props.Login.masterData['testenforceTestsTab'];outcomeList['PredefinedParameterOptions']=PredefinedParameterOptions;// outcomeList['nproductcatcode'] = selectedRecord['nproductcatcode']\noutcomeList['ntestgrouptestcode']=_this.props.Login.masterData.SelectedTest.ntestgrouptestcode;// outcomeList['nallottedspeccode'] = selectedRecord['nallottedspeccode']\n// outcomeList['ncomponentcode'] = selectedRecord['ncomponentcode'] \noutcomeList['groupListJoins']=selectedRecord['groupListJoins']?selectedRecord['groupListJoins']:[];var ruleEngineLayout=[];var ruleEngineLayoutObject=[];var groupRuleObject={};groupList.map(function(List){return List.map(function(x){testsInvolvedInRules.push(x.stestname.item.ntestgrouptestcode);testsNameInvolvedInRules.push(x.stestname.item);});});outcomeList['testsNameInvolvedInRules']=testsNameInvolvedInRules;outcomeList['testsInvolvedInRules']=testsInvolvedInRules;groupList.map(function(List){if(List.hasOwnProperty('button_or')&&List['button_or']===true){if(List.hasOwnProperty('button_not')&&List['button_not']===true){groupRuleObject['button_not_button_or']=List;}else{groupRuleObject['button_or']=List;}// groupRuleObject['button_or'] = List\nruleEngineLayout.push(groupRuleObject);groupRuleObject={};}if(List.hasOwnProperty('button_and')&&List['button_and']===true){if(List.hasOwnProperty('button_not')&&List['button_not']===true){groupRuleObject['button_not_button_and']=List;}else{groupRuleObject['button_and']=List;}//  groupRuleObject['button_and'] = List\nruleEngineLayout.push(groupRuleObject);groupRuleObject={};}});ruleEngineLayoutObject=groupList.hasOwnProperty('button_or')&&groupList['button_or']===true?{'button_or':ruleEngineLayout}:{'button_and':ruleEngineLayout};// console.log('savelist--->', JSON.stringify(ruleEngineLayoutObject))\n//  inputData['nproductcatcode'] = this.props.Login.masterData.SelectedProductCategory.nproductcatcode\n//  inputData['nproductcatcode'] = selectedRecord['nproductcatcode'].value\ninputData['ntestgrouptestcode']=_this.props.Login.masterData.SelectedTest.ntestgrouptestcode;// inputData['nallottedspeccode'] = selectedRecord['nallottedspeccode'].value\n// inputData['ncomponentcode'] = selectedRecord['ncomponentcode'].value\ninputData['srulename']=selectedRecord['srulename'];//   inputData['nruleexecorder'] = parseInt(selectedRecord['nruleexecorder'])\ninputData['outcomeList']=JSON.stringify(outcomeList);inputData['jsondata']=JSON.stringify(ruleEngineLayout);inputData['userinfo']=_this.props.Login.userInfo;inputData['selectedValueForAudit']={sproductcatname:_this.state.filterData.nproductcatcode&&_this.state.filterData.nproductcatcode.label||'NA',sproductname:_this.state.filterData.nproductcode&&_this.state.filterData.nproductcode.label||'NA',sspecname:_this.props.Login.masterData.SelectedSpecification.sspecname||'NA',scomponentname:_this.props.Login.masterData.SelectedComponent.scomponentname||'NA',stestsynonym:_this.props.Login.masterData.SelectedTest.stestsynonym||'NA',sleveldescription:_this.props.Login.masterData.selectedNode.sleveldescription||'NA',srulename:selectedRecord['srulename']};if(_this.props.Login.operation==='update'){inputData['ntestgrouprulesenginecode']=_this.props.Login.masterData.SelectedRulesEngine['ntestgrouprulesenginecode'];}var inputParam={classUrl:\"testgrouprulesengine\",methodUrl:\"TestGroupRulesEngine\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:_this.props.Login.operation==='create'?'create':'update'};_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openPortalModal\");}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_PLEASEADDRULE\"}));}}else{selectedRecord['srulename']=selectedRecord['srulenamecopy']||\"\";//  selectedRecord['nruleexecorder'] = selectedRecord['nruleexecordercopy'] || \"\"\nvar updateInfo={typeName:DEFAULT_RETURN,data:{openModalPopup:true,selectedRecord:selectedRecord,action:\"IDS_SAVERULEMODAL\",openmodalsavePopup:true}};_this.props.updateStore(updateInfo);//   toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERRULESENGINENAME\" }));\n}}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_COMPLETETHERULETOSAVE\"}));}}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_ATLEASTADDONERULE\"}));}}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_ATLEASTADDONEOUTCOME\"}));}};_this.onOutcomeChange=function(comboData,index){var selectedRecord=_this.state.selectedRecord;selectedRecord[\"outComeList\"]=[];selectedRecord[\"outComeList\"][index]=[];selectedRecord[\"outComeList\"][index]=comboData;if(selectedRecord[\"outComeList\"][index]){_this.setState({selectedRecord:selectedRecord});}};_this.writtenRules=function(data){var selectedRecord=_this.state.selectedRecord||{};var grouplist=selectedRecord[\"groupList\"];var activeTabIndex=_this.props.Login.activeTabIndex||0;if(activeTabIndex===1){var boolean=grouplist.every(function(x){return x.every(function(y){return y['stestname']['item'].ntestgrouptestcode!==data['item'].ntestgrouptestcode;});});if(boolean){return data;}}else{var _boolean=grouplist.some(function(x){return x.some(function(y){return y['stestname']['item'].ntestgrouptestcode===data['item'].ntestgrouptestcode;});});if(_boolean){return data;}}};_this.selectedTestRemove=function(data){var activeTabIndex=_this.props.Login.activeTabIndex||0;if(activeTabIndex===1){if(_this.props.Login.masterData.SelectedTest.ntestgrouptestcode!==data['item'].ntestgrouptestcode){return data;}}else{if(_this.props.Login.masterData.SelectedTest.ntestgrouptestcode===data['item'].ntestgrouptestcode){return data;}}};_this.outComeTestsRemoveFromRules=function(data){var testInitiateTests=_this.props.Login.testInitiateTests;var boolean=testInitiateTests.every(function(x){return x['ntestgrouptestcode']!==data['item'].ntestgrouptestcode;});if(boolean){return data;}};_this.addTest=function(tabName){var openModalPopup=_this.props.Login.openModalPopup;var action=_this.props.Login.action;var selectedRecord=_this.props.Login.selectedRecord||{};var rulesOption=_this.props.Login.masterData.rulesOption||[];var testInitiateTestCombo=_this.props.Login.masterData.testInitiateTestCombo||[];var testCommentsTestCombo=_this.props.Login.masterData.testCommentsTestCombo||[];var testRepeatTestCombo=_this.props.Login.masterData.testRepeatTestCombo||[];var testenforceTestCombo=_this.props.Login.masterData.testenforceTestCombo||[];if(tabName=='IDS_Test'){testInitiateTestCombo=testInitiateTestCombo.filter(_this.selectedTestRemove);testInitiateTestCombo=testInitiateTestCombo.filter(_this.writtenRules);selectedRecord['ParameterRulesEngine']&&delete selectedRecord['ParameterRulesEngine'];}else if(tabName=='IDS_COMMENTS'){var selectedTestTempArray=[];selectedTestTempArray=testCommentsTestCombo.filter(_this.selectedTestRemove);testCommentsTestCombo=testCommentsTestCombo.filter(_this.writtenRules);var duplicatePresent=selectedTestTempArray.some(function(x){return testCommentsTestCombo.some(function(y){return y['item'].ntestgrouptestcode===x['item'].ntestgrouptestcode;});});if(duplicatePresent){testCommentsTestCombo=testCommentsTestCombo;}else{testCommentsTestCombo=[].concat(_toConsumableArray(testCommentsTestCombo),_toConsumableArray(selectedTestTempArray));}}else if(tabName=='IDS_REPEAT'){var _selectedTestTempArray=[];_selectedTestTempArray=testRepeatTestCombo.filter(_this.selectedTestRemove);testRepeatTestCombo=testRepeatTestCombo.filter(_this.writtenRules);var _duplicatePresent=_selectedTestTempArray.some(function(x){return testRepeatTestCombo.some(function(y){return y['item'].ntestgrouptestcode===x['item'].ntestgrouptestcode;});});if(_duplicatePresent){testRepeatTestCombo=testRepeatTestCombo;}else{testRepeatTestCombo=[].concat(_toConsumableArray(testRepeatTestCombo),_toConsumableArray(_selectedTestTempArray));}}else if(tabName=='IDS_ENFORCERESULT'){var _selectedTestTempArray2=[];_selectedTestTempArray2=testenforceTestCombo.filter(_this.selectedTestRemove);testenforceTestCombo=testenforceTestCombo.filter(_this.writtenRules);var _duplicatePresent2=_selectedTestTempArray2.some(function(x){return testenforceTestCombo.some(function(y){return y['item'].ntestgrouptestcode===x['item'].ntestgrouptestcode;});});if(_duplicatePresent2){testenforceTestCombo=testenforceTestCombo;}else{testenforceTestCombo=[].concat(_toConsumableArray(testenforceTestCombo),_toConsumableArray(_selectedTestTempArray2));}}else{}selectedRecord['ntestgrouptestcode']&&delete selectedRecord['ntestgrouptestcode'];selectedRecord['nsampletestcommentscode']&&delete selectedRecord['nsampletestcommentscode'];selectedRecord['ncommentsubtypecode']&&delete selectedRecord['ncommentsubtypecode'];selectedRecord['ncommenttypecode']&&delete selectedRecord['ncommenttypecode'];selectedRecord['sgeneralcomments']&&delete selectedRecord['sgeneralcomments'];selectedRecord['needoutsource']&&delete selectedRecord['needoutsource'];selectedRecord['sdescription']&&delete selectedRecord['sdescription'];selectedRecord['ntestgrouptestparametercode']&&delete selectedRecord['ntestgrouptestparametercode'];selectedRecord['senforceresult']&&delete selectedRecord['senforceresult'];selectedRecord['ngradecode']&&delete selectedRecord['ngradecode'];selectedRecord['nfromsitecode']&&delete selectedRecord['nfromsitecode'];selectedRecord['ntositecode']&&delete selectedRecord['ntositecode'];selectedRecord['nrepeatcountno']&&delete selectedRecord['nrepeatcountno'];if(_this.props.Login.addGroupList.length>0){action=\"IDS_ADDTEST\";openModalPopup=true;var updateInfo={typeName:DEFAULT_RETURN,data:{openModalPopup:openModalPopup,modalParameterPopup:false,action:action,selectedRecord:selectedRecord,openmodalsavePopup:false,testInitiateTestCombo:testInitiateTestCombo,testCommentsTestCombo:testCommentsTestCombo,testRepeatTestCombo:testRepeatTestCombo,testenforceTestCombo:testenforceTestCombo}};_this.props.updateStore(updateInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLEASEADDRULETOADDOUTCOME\"}));}};_this.onRuleChange=function(comboData,fieldName,groupIndex,index){var PredefinedParameterOptions=_this.props.Login.masterData.PredefinedParameterOptions||[];var selectedRecord=_this.state.selectedRecord;_this.clearSelectedRule(selectedRecord,index);if(selectedRecord[\"groupList\"][groupIndex][index][fieldName]&&selectedRecord[\"groupList\"][groupIndex][index][fieldName].value!==comboData.value){selectedRecord[\"groupList\"][groupIndex][index]['ndiagnosticcasecode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ndiagnosticcasecode'];selectedRecord[\"groupList\"][groupIndex][index]['ngradecode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ngradecode'];selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestpredefcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestpredefcode'];selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestcharcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestcharcode'];selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestnumericcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestnumericcode'];selectedRecord[\"groupList\"][groupIndex][index]['ssymbolname']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ssymbolname'];}selectedRecord[\"groupList\"][groupIndex][index][fieldName]=comboData;selectedRecord[\"groupList\"][groupIndex][index][fieldName]['nparenttestgrouptestcode']=_this.props.Login.masterData.SelectedTest.ntestgrouptestcode;selectedRecord[\"groupList\"][groupIndex][index][fieldName]['nparentstestname']=_this.props.Login.masterData.SelectedTest.stestname;if(selectedRecord[\"groupList\"][groupIndex][index]['orderresulttype']){if(selectedRecord[\"groupList\"][groupIndex][index]['orderresulttype'].value===3){var nparametertypecode=selectedRecord[\"groupList\"][groupIndex][index][fieldName]['item']['nparametertypecode'];if(nparametertypecode===parameterType.PREDEFINED){_this.props.getParameterResultValue(selectedRecord[\"groupList\"][groupIndex][index],groupIndex,index,PredefinedParameterOptions,selectedRecord,_this.props.Login.masterData,_this.props.Login.userInfo);}else{if(selectedRecord[\"groupList\"][groupIndex][index][fieldName]){_this.setState({selectedRecord:selectedRecord,groupIndex:groupIndex,index:index});}}}else{if(selectedRecord[\"groupList\"][groupIndex][index][fieldName]){_this.setState({selectedRecord:selectedRecord,groupIndex:groupIndex,index:index});}}}else{if(selectedRecord[\"groupList\"][groupIndex][index][fieldName]){_this.setState({selectedRecord:selectedRecord,groupIndex:groupIndex,index:index});}}};_this.onRuleInputChange=function(event,fieldName,groupIndex,index){var selectedRecord=_this.state.selectedRecord;selectedRecord[\"groupList\"][groupIndex][index][fieldName]=event.target.value;selectedRecord[\"groupList\"][groupIndex][index]['sfinal']=event.target.value;_this.setState({selectedRecord:selectedRecord});};_this.onRuleNumericInputOnChange=function(event,fieldName,groupIndex,index){var selectedRecord=_this.state.selectedRecord;if(groupIndex===undefined&&index===undefined){selectedRecord[fieldName]=event;_this.setState({selectedRecord:selectedRecord});}else{if(event!==0){selectedRecord[\"groupList\"][groupIndex][index][fieldName]=event;selectedRecord[\"groupList\"][groupIndex][index]['sfinal']=event;_this.setState({selectedRecord:selectedRecord});}}};_this.onMasterDataChange=function(comboData,fieldName,groupIndex,index){var selectedRecord=_this.state.selectedRecord;var PredefinedParameterOptions=_this.props.Login.masterData.PredefinedParameterOptions||[];var isResultorOrderType=[];var optionsByRule=[];if(_this.state.optionsByRule&&_this.state.optionsByRule.length>0){optionsByRule=_this.state.optionsByRule;}else{optionsByRule[groupIndex]=[];optionsByRule[groupIndex][index]=[];}if(_this.state.isResultorOrderType&&_this.state.isResultorOrderType.length>0){isResultorOrderType=_this.state.isResultorOrderType;}else{isResultorOrderType[groupIndex]=[];isResultorOrderType[groupIndex][index]=[];}if(fieldName!=='ndiagnosticcasecode'&&fieldName!=='ngradecode'&&fieldName!=='ntestgrouptestpredefcode'&&fieldName!=='ntestgrouptestcharcode'&&fieldName!=='ntestgrouptestnumericcode'){if(selectedRecord[\"groupList\"][groupIndex][index][fieldName]&&selectedRecord[\"groupList\"][groupIndex][index][fieldName].value!==comboData.value){selectedRecord[\"groupList\"][groupIndex][index]['ndiagnosticcasecode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ndiagnosticcasecode'];selectedRecord[\"groupList\"][groupIndex][index]['ngradecode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ngradecode'];selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestpredefcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestpredefcode'];selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestcharcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestcharcode'];selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestnumericcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestnumericcode'];selectedRecord[\"groupList\"][groupIndex][index]['ssymbolname']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ssymbolname'];}selectedRecord[\"groupList\"][groupIndex][index][fieldName]=comboData;if(isResultorOrderType[groupIndex]===undefined){isResultorOrderType[groupIndex]=[];isResultorOrderType[groupIndex][index]=[];}isResultorOrderType[groupIndex][index]=comboData.value;if(optionsByRule[groupIndex]===undefined){optionsByRule[groupIndex]=[];optionsByRule[groupIndex][index]=[];}if(isResultorOrderType[groupIndex][index]===1){optionsByRule[groupIndex][index]=_this.props.Login.masterData.DiagnosticCaseList;}else if(isResultorOrderType[groupIndex][index]===3){var nparametertypecode=selectedRecord[\"groupList\"][groupIndex][index]['stestname']['item']['nparametertypecode'];if(nparametertypecode===parameterType.PREDEFINED){_this.props.getParameterResultValue(selectedRecord[\"groupList\"][groupIndex][index],groupIndex,index,PredefinedParameterOptions,selectedRecord,_this.props.Login.masterData,_this.props.Login.userInfo);}else{optionsByRule[groupIndex][index]=_this.props.Login.masterData.GradeList;}}else{optionsByRule[groupIndex][index]=_this.props.Login.masterData.GradeList;}_this.setState({selectedRecord:selectedRecord,isResultorOrderType:isResultorOrderType,optionsByRule:optionsByRule});}else{selectedRecord[\"groupList\"][groupIndex][index][fieldName]=comboData;selectedRecord[\"groupList\"][groupIndex][index]['sfinal']=comboData.label;_this.setState({selectedRecord:selectedRecord});}};_this.addRule=function(type,groupIndex){var selectedRecord=_this.state.selectedRecord;var viewColumnListByRule=_this.props.Login.viewColumnListByRule||[];var addGroupList=_this.props.Login.addGroupList||[];var arrayLength=addGroupList[groupIndex];addGroupList[groupIndex]=arrayLength+1;selectedRecord[\"groupList\"][groupIndex][arrayLength]={};viewColumnListByRule=_this.props.Login.viewColumnList||_this.props.Login.databaseviewList;;var updateInfo={typeName:DEFAULT_RETURN,data:{addGroupList:addGroupList,viewColumnListByRule:viewColumnListByRule,activeTabIndex:0}};_this.props.updateStore(updateInfo);};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.addComments=function(){var openModalPopup=_this.props.Login.openModalPopup;var action=_this.props.Login.action;var selectedParameterRulesEngine=_this.props.Login.masterData.selectedParameterRulesEngine||[];var testparameter=_this.props.Login.masterData.testCommentsTestCombo||[];var selectedRecord=_this.props.Login.selectedRecord||{};selectedRecord['ntestgrouptestcode']={};selectedRecord['ntestgrouptestcode']=testparameter.filter(function(x){return x.value===selectedParameterRulesEngine.ntestgrouptestcode;})[0];delete selectedRecord['nsampletestcommentscode'];delete selectedRecord['ncommentsubtypecode'];delete selectedRecord['ncommenttypecode'];delete selectedRecord['sgeneralcomments'];delete selectedRecord['sdescription'];if(_this.props.Login.addGroupList.length>0){if(_this.props.Login.activeTabIndex===2){action=\"IDS_ADDTESTCOMMENTS\";}else{action=\"IDS_ADDREPORTCOMMENTS\";}openModalPopup=true;var updateInfo={typeName:DEFAULT_RETURN,data:{openModalPopup:openModalPopup,action:action,selectedRecord:selectedRecord,openmodalsavePopup:false}};_this.props.updateStore(updateInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLEASEADDRULETOADDOUTCOME\"}));}};_this.addModalSite=function(){var openModalPopup=_this.props.Login.openModalPopup;var selectedParameterRulesEngine=_this.props.Login.masterData.selectedParameterRulesEngine||[];var testparameter=_this.props.Login.masterData.testInitiateTestCombo||[];var selectedRecord=_this.props.Login.selectedRecord||{};selectedRecord['ntestgrouptestcode']={};selectedRecord['ntestgrouptestcode']=testparameter.filter(function(x){return x.value===selectedParameterRulesEngine.ntestgrouptestcode;})[0];selectedRecord['nfromsitecode']&&delete selectedRecord['nfromsitecode'];selectedRecord['ntositecode']&&delete selectedRecord['ntositecode'];openModalPopup=true;var action=_this.props.Login.action;action=\"IDS_ADDSITE\";var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:selectedRecord,openModalPopup:openModalPopup,action:action,openmodalsavePopup:false}};_this.props.updateStore(updateInfo);};_this.onGradeEvent=function(parameterResults,index,parameter){if(parameterResults.length>0&&parameterResults[index]!==undefined&&parameterResults[index].sresult!==null){var selectedRecord=_this.state.selectedRecord||[];var selectedResultGrade=_this.state.selectedRecord.selectedResultGrade||[];if(parameter.nparametertypecode===parameterType.NUMERIC){selectedResultGrade[index]={ngradecode:parameterResults[index].sresult!==\"\"?numericGrade(parameter,numberConversion(parseFloat(parameterResults[index].sresult),parseInt(parameter.nroundingdigits))):-1};}if(parameter.nparametertypecode===parameterType.PREDEFINED){if(parameterResults[index].sresult!==null){selectedResultGrade[index]={ngradecode:parameterResults[index].ngradecode};}else{selectedResultGrade[index]={ngradecode:0};}}if(parameter.nparametertypecode===parameterType.CHARACTER){if(parameterResults[index].sresult!==null&&parameterResults[index].sresult.trim()!==\"\"){selectedResultGrade[index]={ngradecode:4};}else{selectedResultGrade[index]={ngradecode:-1};}}selectedRecord.selectedResultGrade=selectedResultGrade;_this.setState({selectedRecord:selectedRecord});}};_this.onInputSwitchOnChange=function(event){if(event.target.name==\"PopupNav\"){_this.setState({enablePropertyPopup:!_this.state.enablePropertyPopup});}else{_this.setState({enableAutoClick:!_this.state.enableAutoClick});}};_this.addParameter=function(){var openModalPopup=_this.props.Login.openModalPopup;var isServiceNeed=_this.props.Login.isServiceNeed===undefined||_this.props.Login.isServiceNeed===true?true:false;var selectedParameterRulesEngine=_this.props.Login.masterData.selectedParameterRulesEngine||[];var testparameter=_this.props.Login.masterData.testInitiateTestCombo||[];var selectedRecord=_this.props.Login.selectedRecord||{};selectedRecord['ntestgrouptestpredefsubcode']&&delete selectedRecord['ntestgrouptestpredefsubcode'];selectedRecord['ntestgrouptestcode']={};selectedRecord['ntestgrouptestcode']=testparameter.filter(function(x){return x.value===selectedParameterRulesEngine.ntestgrouptestcode;})[0];selectedRecord['ntestgrouprulesenginecode']=_this.props.Login.masterData.SelectedRulesEngine['ntestgrouprulesenginecode']?_this.props.Login.masterData.SelectedRulesEngine['ntestgrouprulesenginecode']:0;selectedRecord['ParameterRulesEngine']&&delete selectedRecord['ParameterRulesEngine'];//    if(isServiceNeed){\n_this.props.getParameterRulesEngine(selectedRecord,_this.props.Login.masterData,_this.props.Login.userInfo,_this.state.activeTabIndex,\"IDS_ADDPARAMETER\");// }else{\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             openModalPopup: true,\n//                 modalParameterPopup:true,\n//                 // masterData: {\n//                 //     ...masterData,\n//                 //     ...response.data,\n//                 //     paremterResultcode\n//                 // },\n//                 // selectedRecord: {\n//                 //     ...selectedRecord,\n//                 //     additionalInfo: additionalInfo.length > 0 ? additionalInfo : [],\n//                 //     selectedResultGrade: selectedResultGrade,\n//                 //     ParameterRulesEngine: response.data.TestGroupTestParameterRulesEngine\n//                 // },\n//               ///  loading: false,\n//                 action:\"IDS_ADDPARAMETER\",\n//                 openmodalsavePopup:false\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// openModalPopup = true;\n// let action = this.props.Login.action;\n// action = \"IDS_ADDPARAMETER\"\n// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         selectedRecord,\n//         openModalPopup,\n//         action,\n//         modalParameterPopup :true,\n//         openmodalsavePopup: false\n//     }\n// }\n// this.props.updateStore(updateInfo);\n};_this.deletetestparameter=function(deleteparameter){var masterData=_this.props.Login.masterData||{};masterData['testParameter'].map(function(test){if(test['ParameterRulesEngine']){var parameters=test['ParameterRulesEngine'];var tempparameters=_toConsumableArray(test['ParameterRulesEngine']);tempparameters.map(function(param,index){if(param['ntestgrouptestparametercode']===deleteparameter['ntestgrouptestparametercode']){//delete parameters[index];\nvar removeIndex=parameters.findIndex(function(x){return x['ntestgrouptestparametercode']===param['ntestgrouptestparametercode'];});parameters.splice(removeIndex,1);sortData(test['ParameterRulesEngine'],'ascending','slNo').map(function(param,index){param['slNo']=index+1;});}});}});_this.setState({masterData:masterData});};_this.modalsaveClick=function(){var needoutsource=_this.props.Login.needoutsource||{};var selectedRecord=_this.state.selectedRecord||{};var masterData=_this.props.Login.masterData||{};var testInitiateTests=_this.props.Login.testInitiateTests||[];var testCommentsTests=_this.props.Login.testCommentsTests||[];var testRepeatTests=_this.props.Login.testRepeatTests||[];var testenforceTests=_this.props.Login.testenforceTests||[];var reportCommentsTests=_this.props.Login.reportCommentsTests||[];var siteObject=_this.props.Login.siteObject||{};var testCommentObject=_this.props.Login.testCommentObject||{};var reportCommentObject=_this.props.Login.reportCommentObject||{};var testInitiateTestsTemp=[];var testCommentsTestsTemp=[];var reportCommentsTestsTemp=[];var testInitiateSiteTemp=[];var testCommentsTestsTab=_this.props.Login.masterData.testCommentsTestsTab||[];var reportCommentsTestsTab=_this.props.Login.reportCommentsTestsTab||[];var testInitiateSiteTab=_this.props.Login.masterData.testInitiateSiteTab||[];var testInitiateTestOptions=_this.props.Login.testInitiateTestOptions||[];var testCommentsTestOptions=_this.props.Login.testCommentsTestOptions||[];var reportCommentsTestOptions=_this.props.Login.reportCommentsTestOptions||[];var testInitiateTestdeletedOptions=_this.props.Login.testInitiateTestdeletedOptions||[];var testCommentsTestdeletedOptions=_this.props.Login.testCommentsTestdeletedOptions||[];var reportCommentsTestdeletedOptions=_this.props.Login.reportCommentsTestdeletedOptions||[];var updateInfo={};if(_this.props.Login.action==='IDS_ADDTEST'){var npkAtestparametercode=0;var npkBtestparametercode=0;var npkCtestparametercode=0;var npkDtestparametercode=0;if(_this.props.Login.activeTabIndex===1){var isduplicate={};isduplicate=testInitiateTests.filter(function(x){return x.ntestgrouptestcode===selectedRecord['ntestgrouptestcode'].item['ntestgrouptestcode'];});if(isduplicate.length===0){masterData['testParameter']={};npkAtestparametercode=testInitiateTests.length>0?Math.max.apply(Math,_toConsumableArray(testInitiateTests.map(function(x){return x.npkAtestparametercode;}))):0;npkAtestparametercode++;selectedRecord['ntestgrouptestcode'].item['npkAtestparametercode']=npkAtestparametercode;// selectedRecord['ParameterRulesEngine']=selectedRecord['ParameterRulesEngine'].filter(param=>param['sresult']&&param['sresult']!==\"\");\n//  let slNo=1;\n// selectedRecord['ParameterRulesEngine']\n//      .map((resultData) => {\n//         if (resultData.nparametertypecode===1) { \n//             resultData[\"ngradecode\"] = resultData.sresult !== \"\" ?\n//             numericGrade(resultData, resultData[\"sfinal\"]) : -1;\n//          }\n//         else if (resultData.nparametertypecode===2)\n//          {\n//             resultData[\"ngradecode\"] = resultData.ngradecode; \n//             resultData[\"salertmessage\"] = resultData.salertmessage&&resultData.salertmessage;\n//             resultData[\"additionalInfo\"] = resultData['additionalInfo'];\n//             resultData[\"additionalInfoUidata\"] = resultData['additionalInfoUidata']===undefined?\"\":\n//             resultData['additionalInfoUidata']; \n//             resultData[\"ntestgrouptestpredefcode\"]=resultData['ntestgrouptestpredefcode']\n//             resultData[\"sresultcomment\"]=resultData['sresultcomment']  \n//          } \n//          else if (resultData.nparametertypecode===3)\n//          {\n//             resultData[\"ngradecode\"] = resultData.sresult&&resultData.sresult.trim() === \"\" ? -1 : grade.FIO; \n//          }\n//          else if (resultData.nparametertypecode===4)\n//          {\n//             resultData[\"ngradecode\"] = resultData.sresult&&resultData.sresult.trim() === \"\" ? -1 : grade.FIO; \n//          }   \n//          resultData[\"slNo\"]=slNo;\n//          slNo++;\n//     });\n// selectedRecord['ntestgrouptestcode'].item['ParameterRulesEngine']=sortData(selectedRecord['ParameterRulesEngine'],'descending','slNo')\nif(selectedRecord['ntestgrouptestcode'].item['nrepeatcountno']){selectedRecord['ntestgrouptestcode'].item['nrepeatcountno']=0;}selectedRecord['ntestgrouptestcode'].item['ParameterRulesEngine']&&delete selectedRecord['ntestgrouptestcode'].item['ParameterRulesEngine'];testInitiateTests.push(_objectSpread(_objectSpread({},selectedRecord['ntestgrouptestcode'].item),{},{\"nneedsample\":selectedRecord['nneedsample']===3?3:4}));masterData['testParameter']=sortData(testInitiateTests,'descending','npkAtestparametercode');masterData['selectedParameterRulesEngine']=_objectSpread(_objectSpread({},selectedRecord['ntestgrouptestcode'].item),{},{\"nneedsample\":selectedRecord['nneedsample']?3:4});delete selectedRecord['ntestgrouptestcode'];delete selectedRecord['nneedsample'];}else{return toast.warn(_this.props.intl.formatMessage({id:\"IDS_ALREADYEXISTS\"}));}}if(_this.props.Login.activeTabIndex===2){var _isduplicate={};_isduplicate=testCommentsTests.filter(function(x){return x.ntestgrouptestcode===selectedRecord['ntestgrouptestcode'].item['ntestgrouptestcode'];});if(_isduplicate.length===0){masterData['testParameterComments']={};npkBtestparametercode=testCommentsTests.length>0?Math.max.apply(Math,_toConsumableArray(testCommentsTests.map(function(x){return x.npkBtestparametercode;}))):0;npkBtestparametercode++;selectedRecord['ntestgrouptestcode'].item['npkBtestparametercode']=npkBtestparametercode;selectedRecord['ntestgrouptestcode'].item['sdescription']=selectedRecord['sdescription']?selectedRecord['sdescription']:'-';testCommentsTests.push(selectedRecord['ntestgrouptestcode'].item);masterData['testParameterComments']=sortData(testCommentsTests,'descending','npkBtestparametercode');masterData['selectedParameterRulesEngine']=selectedRecord['ntestgrouptestcode'].item;//delete selectedRecord['ntestgrouptestcode']\n}else{return toast.warn(_this.props.intl.formatMessage({id:\"IDS_ALREADYEXISTS\"}));}}if(_this.props.Login.activeTabIndex===3){var _isduplicate2={};_isduplicate2=testRepeatTests.filter(function(x){return x.ntestgrouptestcode===selectedRecord['ntestgrouptestcode'].item['ntestgrouptestcode'];});if(_isduplicate2.length===0){masterData['testRepeat']={};npkCtestparametercode=testRepeatTests.length>0?Math.max.apply(Math,_toConsumableArray(testRepeatTests.map(function(x){return x.npkCtestparametercode;}))):0;npkCtestparametercode++;selectedRecord['ntestgrouptestcode'].item['npkCtestparametercode']=npkCtestparametercode;selectedRecord['ntestgrouptestcode'].item['nrepeatcountno']=selectedRecord['nrepeatcountno']?selectedRecord['nrepeatcountno']:1;testRepeatTests.push(_objectSpread(_objectSpread({},selectedRecord['ntestgrouptestcode'].item),{},{\"nneedsample\":4}));masterData['testRepeatTestsTab']=sortData(testRepeatTests,'descending','npkCtestparametercode');masterData['testRepeat']=sortData(testRepeatTests,'descending','npkCtestparametercode');masterData['selectedParameterRulesEngine']=selectedRecord['ntestgrouptestcode'].item;delete selectedRecord['ntestgrouptestcode'];}else{return toast.warn(_this.props.intl.formatMessage({id:\"IDS_ALREADYEXISTS\"}));}}if(_this.props.Login.activeTabIndex===4){var _isduplicate3={};// isduplicate = testenforceTests.filter(x => x.ntestgrouptestcode ===\n//     selectedRecord['ntestgrouptestcode'].item['ntestgrouptestcode'])\n_isduplicate3=testenforceTests.some(function(x){return selectedRecord['ntestgrouptestcode'].value===x.ntestgrouptestcode&&selectedRecord['ntestgrouptestparametercode'].value===x.ntestgrouptestparametercode;});if(!_isduplicate3){masterData['testenforceTests']={};npkDtestparametercode=testenforceTests.length>0?Math.max.apply(Math,_toConsumableArray(testenforceTests.map(function(x){return x.npkDtestparametercode;}))):0;npkDtestparametercode++;// selectedRecord['ntestgrouptestcode'].item['sparametersynonym'] = selectedRecord['ntestgrouptestparametercode'] && selectedRecord['ntestgrouptestparametercode'].label\n// selectedRecord['ntestgrouptestcode'].item['ngradecode'] = selectedRecord['ngradecode'] && selectedRecord['ngradecode'].value\n// selectedRecord['ntestgrouptestcode'].item['sgradename'] = selectedRecord['ngradecode'] && selectedRecord['ngradecode'].label\n// selectedRecord['ntestgrouptestcode'].item['ntestgrouptestparametercode'] = selectedRecord['ntestgrouptestparametercode'] && selectedRecord['ntestgrouptestparametercode'].value\n// selectedRecord['ntestgrouptestcode'].item['senforceresult'] = selectedRecord['senforceresult'] && selectedRecord['senforceresult']\nvar object=_objectSpread(_objectSpread({},selectedRecord['ntestgrouptestcode'].item),{},{'sparametersynonym':selectedRecord['ntestgrouptestparametercode']&&selectedRecord['ntestgrouptestparametercode'].label,'ngradecode':selectedRecord['ngradecode']&&selectedRecord['ngradecode'].value,'sgradename':selectedRecord['ngradecode']&&selectedRecord['ngradecode'].label,'ntestgrouptestparametercode':selectedRecord['ntestgrouptestparametercode']&&selectedRecord['ntestgrouptestparametercode'].value,'senforceresult':selectedRecord['senforceresult']&&selectedRecord['senforceresult'],'npkDtestparametercode':npkDtestparametercode});// selectedRecord['ntestgrouptestcode'].item['npkDtestparametercode'] = npkDtestparametercode\ntestenforceTests.push(object);masterData['testenforceTestsTab']=sortData(testenforceTests,'descending','npkDtestparametercode');masterData['testenforceTests']=sortData(testenforceTests,'descending','npkDtestparametercode');//  masterData['selectedParameterRulesEngine'] = selectedRecord['ntestgrouptestcode'].item\ndelete selectedRecord['ntestgrouptestcode'];}else{return toast.warn(_this.props.intl.formatMessage({id:\"IDS_ALREADYEXISTS\"}));}}updateInfo={typeName:DEFAULT_RETURN,data:{openModalPopup:false,masterData:masterData,testInitiateTests:testInitiateTests,testCommentsTests:testCommentsTests,reportCommentsTests:reportCommentsTests,npkAtestparametercode:npkAtestparametercode,npkBtestparametercode:npkBtestparametercode,npkCtestparametercode:npkCtestparametercode,testInitiateTestOptions:testInitiateTestOptions,testInitiateTestdeletedOptions:testInitiateTestdeletedOptions,selectedRecord:selectedRecord,testRepeatTests:testRepeatTests,testenforceTests:testenforceTests}};}if(_this.props.Login.action==='IDS_ADDPARAMETER'){var selectedntestgrouptestcode=masterData.selectedParameterRulesEngine.ntestgrouptestcode;var selectedParameterRulesEngine=masterData.selectedParameterRulesEngine.ParameterRulesEngine;selectedRecord['ParameterRulesEngine']=selectedRecord['ParameterRulesEngine'].filter(function(param){return param['sresult']&&param['sresult']!==\"\";});var slNo=selectedParameterRulesEngine===undefined||selectedParameterRulesEngine&&selectedParameterRulesEngine.length===0?1:selectedParameterRulesEngine.length+1;selectedRecord['ParameterRulesEngine'].map(function(resultData){if(resultData.nparametertypecode===1){resultData[\"ngradecode\"]=resultData.sresult!==\"\"?numericGrade(resultData,resultData[\"sresult\"]):-1;resultData[\"sresult\"]=resultData.sresult;resultData[\"sfinal\"]=resultData.sresult!==\"\"?numberConversion(parseFloat(resultData.sresult),parseInt(resultData.nroundingdigits)):\"\";resultData[\"ngradecode\"]=resultData.sresult!==\"\"?numericGrade(resultData,resultData[\"sfinal\"]):-1;}else if(resultData.nparametertypecode===2){resultData[\"ngradecode\"]=resultData.ngradecode;resultData[\"salertmessage\"]=resultData.salertmessage&&resultData.salertmessage;resultData[\"additionalInfo\"]=resultData['additionalInfo'];resultData[\"additionalInfoUidata\"]=resultData['additionalInfoUidata']===undefined?\"\":resultData['additionalInfoUidata'];resultData[\"ntestgrouptestpredefcode\"]=resultData['ntestgrouptestpredefcode'];resultData[\"sresultcomment\"]=resultData['sresultcomment'];resultData[\"sresultpredefinedname\"]=resultData['sresultpredefinedname'];resultData[\"sfinal\"]=resultData['sfinal'];}else if(resultData.nparametertypecode===3){resultData[\"sresult\"]=resultData.sresult;resultData[\"sfinal\"]=resultData.sresult;resultData[\"ngradecode\"]=resultData.sresult&&resultData.sresult.trim()===\"\"?-1:ResultEntry.RESULTSTATUS_FIO;}else if(resultData.nparametertypecode===4){resultData[\"ngradecode\"]=resultData.sresult&&resultData.sresult.trim()===\"\"?-1:ResultEntry.RESULTSTATUS_FIO;}resultData['sgradename']=_this.props.Login.masterData.GradeValues[resultData[\"ngradecode\"]][0]['sgradename'];resultData[\"slNo\"]=slNo;slNo++;});masterData['testParameter'].map(function(param){if(param['ntestgrouptestcode']===selectedntestgrouptestcode){if(param['ParameterRulesEngine']){param['ParameterRulesEngine']=param['ParameterRulesEngine'].concat(sortData(selectedRecord['ParameterRulesEngine'],'descending','slNo'));}else{param['ParameterRulesEngine']=sortData(selectedRecord['ParameterRulesEngine'],'descending','slNo');}}});testInitiateTests=masterData['testParameter'];updateInfo={typeName:DEFAULT_RETURN,data:{openModalPopup:false,masterData:masterData,testInitiateTests:testInitiateTests,modalParameterPopup:false,isServiceNeed:false}};}if(selectedRecord['nsampletestcommentscode']||selectedRecord['sgeneralcomments']){masterData['testComments']={};var npKAsampletestcommentscode=0;var nslno=0;var _object={ncommentsubtypecode:selectedRecord['ncommentsubtypecode'],scommentsubtype:selectedRecord['ncommentsubtypecode']['label'],stestsynonym:selectedRecord['ntestgrouptestcode']['label'],ncommenttypecode:selectedRecord['ncommenttypecode']['value'],scommenttype:selectedRecord['ncommenttypecode']['label'],nsampletestcommentscode:selectedRecord['nsampletestcommentscode']?selectedRecord['nsampletestcommentscode']:-1,// spredefinedname: selectedRecord['nsampletestcommentscode'] ? selectedRecord['nsampletestcommentscode'].label : \"-\",\n// sgeneralcomments: selectedRecord['sgeneralcomments'] ? selectedRecord['sgeneralcomments'] : \"-\",\nspredefinedname:selectedRecord['nsampletestcommentscode']?selectedRecord['nsampletestcommentscode'].label:selectedRecord['sgeneralcomments']?selectedRecord['sgeneralcomments']:\"-\",scomments:selectedRecord['sdescription']?selectedRecord['sdescription']:'-',sdescription:selectedRecord['sdescription']?selectedRecord['sdescription']:'-',stestparametersynonym:masterData.selectedParameterRulesEngine.stestparametersynonym,ntestgrouptestcode:masterData.selectedParameterRulesEngine.ntestgrouptestcode,npkBtestparametercode:masterData.selectedParameterRulesEngine.npkBtestparametercode};nslno=testCommentsTestsTab.length>0?Math.max.apply(Math,_toConsumableArray(testCommentsTestsTab.map(function(x){return x.nslno;}))):0;nslno++;if(testCommentObject.hasOwnProperty(masterData.selectedParameterRulesEngine.npkBtestparametercode)){npKAsampletestcommentscode=Math.max.apply(Math,_toConsumableArray(testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode].map(function(x){return x.npKAsampletestcommentscode;})));npKAsampletestcommentscode++;_object=_objectSpread(_objectSpread({},_object),{},{npKAsampletestcommentscode:npKAsampletestcommentscode,nslno:nslno});testCommentsTestsTemp=testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode];testCommentsTestsTemp.push(_object);testCommentsTestsTab.push(_object);var commentsArrayIndex=testCommentsTests.findIndex(function(x){return x.npkBtestparametercode===masterData.selectedParameterRulesEngine.npkBtestparametercode;});testCommentsTests[commentsArrayIndex]['commentsArray']=[];testCommentsTests[commentsArrayIndex]['commentsArray']=sortData(testCommentsTestsTemp,'ascending','npKAsampletestcommentscode');testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode]=sortData(testCommentsTestsTemp,'descending','npKAsampletestcommentscode');delete selectedRecord['nsampletestcommentscode'];delete selectedRecord['ncommentsubtypecode'];delete selectedRecord['ncommenttypecode'];delete selectedRecord['sgeneralcomments'];}else{npKAsampletestcommentscode++;_object=_objectSpread(_objectSpread({},_object),{},{npKAsampletestcommentscode:npKAsampletestcommentscode,nslno:nslno});testCommentsTestsTemp.push(_object);testCommentsTestsTab.push(_object);var _commentsArrayIndex=testCommentsTests.findIndex(function(x){return x.npkBtestparametercode===masterData.selectedParameterRulesEngine.npkBtestparametercode;});testCommentsTests[_commentsArrayIndex]['commentsArray']=[];testCommentsTests[_commentsArrayIndex]['commentsArray']=sortData(testCommentsTestsTemp,'ascending','npKAsampletestcommentscode');testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode]=sortData(testCommentsTestsTemp,'descending','npKAsampletestcommentscode');delete selectedRecord['nsampletestcommentscode'];delete selectedRecord['ncommentsubtypecode'];delete selectedRecord['ncommenttypecode'];delete selectedRecord['sgeneralcomments'];}masterData['testComments']=testCommentObject;masterData['testCommentsTestsTab']=testCommentsTestsTab;updateInfo={typeName:DEFAULT_RETURN,data:{openModalPopup:false,masterData:masterData,testCommentObject:testCommentObject,npKAsampletestcommentscode:npKAsampletestcommentscode,selectedRecord:selectedRecord}};}if(selectedRecord['nfromsitecode']&&selectedRecord['ntositecode']){if(selectedRecord['nfromsitecode'].value!==selectedRecord['ntositecode'].value){var siteseqnumber=0;if(siteObject.hasOwnProperty(masterData.selectedParameterRulesEngine.npkAtestparametercode)){var isalreadyExist=siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode].some(function(x){return selectedRecord['nfromsitecode'].value===x.nfromsitecode&&selectedRecord['ntositecode'].value===x.ntositecode;});if(!isalreadyExist){masterData['testSite']={};siteseqnumber=Math.max.apply(Math,_toConsumableArray(siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode].map(function(x){return x.npksitecode;})));siteseqnumber++;var _object2={npksitecode:siteseqnumber,sfromsitename:selectedRecord['nfromsitecode'].label,stositename:selectedRecord['ntositecode'].label,nfromsitecode:selectedRecord['nfromsitecode'].value,ntositecode:selectedRecord['ntositecode'].value,stestparametersynonym:masterData.selectedParameterRulesEngine.stestparametersynonym,npkAtestparametercode:masterData.selectedParameterRulesEngine.ntestgrouptestcode};testInitiateSiteTemp=siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode];testInitiateSiteTemp.push(_object2);testInitiateSiteTab.push(_object2);siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode]=sortData(testInitiateSiteTemp,'descending','npksitecode');delete selectedRecord['ntestgrouptestcode'];delete selectedRecord['nfromsitecode'];delete selectedRecord['ntositecode'];}else{return toast.warn(_this.props.intl.formatMessage({id:\"IDS_FROMANDTOSITEALREADYEXIST\"}));}}else{masterData['testSite']={};siteseqnumber++;var _object3={npksitecode:siteseqnumber,sfromsitename:selectedRecord['nfromsitecode'].label,stositename:selectedRecord['ntositecode'].label,nfromsitecode:selectedRecord['nfromsitecode'].value,ntositecode:selectedRecord['ntositecode'].value,stestparametersynonym:masterData.selectedParameterRulesEngine.stestparametersynonym,npkAtestparametercode:masterData.selectedParameterRulesEngine.npkAtestparametercode};testInitiateSiteTemp.push(_object3);testInitiateSiteTab.push(_object3);siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode]=sortData(testInitiateSiteTemp,'descending','npksitecode');delete selectedRecord['ntestgrouptestcode'];delete selectedRecord['nfromsitecode'];delete selectedRecord['ntositecode'];}masterData['testSite']=siteObject;masterData['testInitiateSiteTab']=testInitiateSiteTab;updateInfo={typeName:DEFAULT_RETURN,data:{openModalPopup:false,masterData:masterData,siteObject:siteObject,siteseqnumber:siteseqnumber}};}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_FROMANDTOSITECANNOTBESAME\"}));}}if(Object.keys(updateInfo).length>0){_this.props.updateStore(updateInfo);}};_this.deletModalSite=function(inputparam,action,row){var temparray=[];var index=0;var testInitiateSiteTab=_this.props.Login.masterData.testInitiateSiteTab;var testCommentsTestsTab=_this.props.Login.masterData.testCommentsTestsTab;var reportCommentsTestsTab=_this.props.Login.reportCommentsTestsTab;var siteObject=_this.props.Login.siteObject||{};var testCommentObject=_this.props.Login.testCommentObject||{};var reportCommentObject=_this.props.Login.reportCommentObject||{};var masterData=_this.props.Login.masterData||{};if(_this.props.Login.activeTabIndex===1){temparray=siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode];temparray.splice(row['dataIndex'],1);testInitiateSiteTab.splice(row['dataIndex'],1);siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode]=temparray;}if(_this.props.Login.activeTabIndex===2){temparray=testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode];index=temparray.findIndex(function(x){return x.npKAsampletestcommentscode===row['dataItem'].npKAsampletestcommentscode;});// temparray.splice(row['dataIndex'], 1);\ntemparray.splice(index,1);index=testCommentsTestsTab.findIndex(function(x){return x.nslno===row['dataItem'].nslno;});//   testCommentsTestsTab.splice(row['dataIndex'], 1);\ntestCommentsTestsTab.splice(index,1);testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode]=temparray;}if(_this.props.Login.activeTabIndex===3){temparray=masterData.testRepeat;temparray.splice(row['dataIndex'],1);reportCommentsTestsTab.splice(row['dataIndex'],1);reportCommentObject[masterData.selectedParameterRulesEngine.ntestgrouptestcode]=temparray;}var updateInfo={};updateInfo={typeName:DEFAULT_RETURN,data:{siteObject:siteObject,testCommentObject:testCommentObject,reportCommentObject:reportCommentObject,testInitiateSiteTab:testInitiateSiteTab,reportCommentsTestsTab:reportCommentsTestsTab,testCommentsTestsTab:testCommentsTestsTab}};_this.props.updateStore(updateInfo);};_this.deleteModalTest=function(inputparam,action,row){var testInitiateTests=_this.props.Login.testInitiateTests||[];var testCommentsTests=_this.props.Login.testCommentsTests||[];var testRepeatTests=_this.props.Login.testRepeatTests||[];var testenforceTests=_this.props.Login.testenforceTests||[];var reportCommentsTests=_this.props.Login.reportCommentsTests||[];var testInitiateSiteTab=_this.props.Login.masterData.testInitiateSiteTab;var testCommentsTestsTab=_this.props.Login.masterData.testCommentsTestsTab;var testRepeatTestsTab=_this.props.Login.masterData.testRepeatTestsTab;var testenforceTestsTab=_this.props.Login.masterData.testenforceTestsTab;var siteObject=_this.props.Login.siteObject||{};var testCommentObject=_this.props.Login.testCommentObject||{};var reportCommentObject=_this.props.Login.reportCommentObject||{};var testInitiateTestOptions=_this.props.Login.testInitiateTestOptions||[];var testCommentsTestOptions=_this.props.Login.testCommentsTestOptions||[];var reportCommentsTestOptions=_this.props.Login.reportCommentsTestOptions||[];var viewColumnListByRule=_this.props.Login.viewColumnListByRule||[];var testInitiateTestdeletedOptions=_this.props.Login.testInitiateTestdeletedOptions||[];var testCommentsTestdeletedOptions=_this.props.Login.testCommentsTestdeletedOptions||[];var reportCommentsTestdeletedOptions=_this.props.Login.reportCommentsTestdeletedOptions||[];var masterData=_this.props.Login.masterData||{};var index=0;if(_this.props.Login.activeTabIndex===1){// index = this.props.Login.testInitiateTests.findIndex(x => x.ntestgrouptestcode === masterData.selectedParameterRulesEngine.ntestgrouptestcode)\nindex=_this.props.Login.testInitiateTests.findIndex(function(x){return x.npkAtestparametercode===inputparam.testParameter.npkAtestparametercode;});testInitiateTests.splice(index,1);//   index =  masterData['testParameter'].findIndex(x => x.ntestgrouptestcode === inputparam.testParameter.ntestgrouptestcode)\n//   masterData['testParameter'].splice(index, 1); \ntestInitiateSiteTab=testInitiateSiteTab.filter(function(obj){return obj.npkAtestparametercode!==inputparam.testParameter.npkAtestparametercode;});delete siteObject[inputparam.testParameter.npkAtestparametercode];}if(_this.props.Login.activeTabIndex===2){index=_this.props.Login.testCommentsTests.findIndex(function(x){return x.npkBtestparametercode===inputparam.testParameterComments.npkBtestparametercode;});testCommentsTests.splice(index,1);// index =  testCommentsTestsTab.findIndex(x => x.ntestgrouptestcode === inputparam.testParameterComments.ntestgrouptestcode) \n// testCommentsTestsTab.splice(index, 1);\ntestCommentsTestsTab=testCommentsTestsTab.filter(function(obj){return obj.npkBtestparametercode!==inputparam.testParameterComments.npkBtestparametercode;});delete testCommentObject[inputparam.testParameterComments.npkBtestparametercode];}if(_this.props.Login.activeTabIndex===3){//  index = this.props.Login.testRepeatTests.findIndex(x => x.ntestgrouptestcode === masterData.selectedParameterRulesEngine.ntestgrouptestcode) \nindex=row['dataIndex'];testRepeatTests.splice(index,1);testRepeatTestsTab.splice(index,1);}if(_this.props.Login.activeTabIndex===4){//    index = this.props.Login.testenforceTests.findIndex(x => x.ntestgrouptestcode === masterData.selectedParameterRulesEngine.ntestgrouptestcode)  \nindex=row['dataIndex'];testenforceTests.splice(index,1);testenforceTestsTab.splice(index,1);}var updateInfo={};updateInfo={typeName:DEFAULT_RETURN,data:{testInitiateTests:testInitiateTests,siteObject:siteObject,testCommentObject:testCommentObject,testCommentsTests:testCommentsTests,reportCommentsTests:reportCommentsTests,reportCommentObject:reportCommentObject,masterData:_objectSpread(_objectSpread({},masterData),{},{testCommentsTestsTab:testCommentsTestsTab,testInitiateSiteTab:testInitiateSiteTab,testRepeatTestsTab:testRepeatTestsTab,testenforceTestsTab:testenforceTestsTab}),testRepeatTests:testRepeatTests,testenforceTests:testenforceTests}};_this.props.updateStore(updateInfo);};_this.onmodalComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var isneedsgeneralcomments=_this.state.isneedsgeneralcomments||{};var action=_this.props.Login.action;if(fieldName==='ncommentsubtypecode'){if(comboData.value===6){isneedsgeneralcomments=true;delete selectedRecord['nsampletestcommentscode'];}else{isneedsgeneralcomments=false;delete selectedRecord['sgeneralcomments'];}}else if(fieldName==='nproductcatcode'){selectedRecord[fieldName]=comboData;_this.props.getSpecificationTestGroupRulesEngine(selectedRecord,_this.props.Login.selectedRecord,true,_this.props.Login.masterData,_this.props.Login.userInfo);}else if(fieldName==='ntestgrouptestcode'&&_this.state.activeTabIndex===4//||this.state.activeTabIndex === 1\n){if(selectedRecord['ntestgrouptestparametercode']){if(selectedRecord[fieldName].value!==comboData.value){delete selectedRecord['ntestgrouptestparametercode'];}}selectedRecord[fieldName]=comboData;selectedRecord['ntestgrouprulesenginecode']=_this.props.Login.masterData.SelectedRulesEngine['ntestgrouprulesenginecode']?_this.props.Login.masterData.SelectedRulesEngine['ntestgrouprulesenginecode']:0;_this.props.getParameterforEnforce(selectedRecord,_this.props.Login.masterData,_this.props.Login.userInfo,_this.state.activeTabIndex,action);}//This is to Get Parameter Results from the User\nelse if(fieldName==='ntestgrouptestparametercode'&&_this.state.activeTabIndex===1){var updateInfo={};updateInfo={typeName:DEFAULT_RETURN,data:{screenName:'IDS_TESTGROUPRESULTENTRY',openModal:true}};_this.props.updateStore(updateInfo);}else if(fieldName==='nallottedspeccode'){selectedRecord[fieldName]=comboData;_this.props.getComponentTestGroupRulesEngine(selectedRecord,_this.props.Login.selectedRecord,true,_this.props.Login.masterData,_this.props.Login.userInfo);}if(fieldName==='nsampletestcommentscode'){selectedRecord['sdescription']=comboData.item.sdescription;}selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord,isneedsgeneralcomments:isneedsgeneralcomments});};_this.onResultInputChange=function(event,index,parameter){var selectedRecord=_this.state.selectedRecord||[];var ParameterRulesEngine=_this.state.selectedRecord.ParameterRulesEngine?_this.state.selectedRecord.ParameterRulesEngine:[];var sresult=\"\";var sfinal=\"\";var sresultpredefinedname=\"\";var salertmessage=\"\";var sresultcomment=\"\";var sgradename=\"\";var value=-1;var acceptedFile=[];var ncalculatedresult;var currentAlertResultCode=0;var currentntestgrouptestpredefcode=0;var inputData={};if(parameter.nparametertypecode===parameterType.NUMERIC){if(/^-?\\d*?\\.?\\d*?$/.test(event.target.value)||event.target.value===\"\"){sresult=event.target.value;ncalculatedresult=4;}else{sresult=ParameterRulesEngine[index]['sresult']===null?\"\":ParameterRulesEngine[index]['sresult'];ncalculatedresult=ParameterRulesEngine[index]['ncalculatedresult'];}}if(parameter.nparametertypecode===parameterType.PREDEFINED){currentAlertResultCode=event.item.ntestgrouptestparametercode;currentntestgrouptestpredefcode=event.item.ntestgrouptestpredefcode;if(event!=null){sresult=event.item.spredefinedname;sresultpredefinedname=event.item.sresultpredefinedname;sfinal=event.item.spredefinedsynonym;value=event.item.ngradecode;salertmessage=event.item.salertmessage?event.item.salertmessage:\"\";sresultcomment=event.item.spredefinedcomments?event.item.spredefinedcomments:\"\";ncalculatedresult=4;}else{sresult=\"\";sfinal=\"\";sresultpredefinedname=\"\";value=-1;ncalculatedresult=4;}inputData={'ntestgrouptestpredefcode':event.item.ntestgrouptestpredefcode,'salertmessage':salertmessage,'nneedresultentryalert':event.item.nneedresultentryalert,'nneedsubcodedresult':event.item.nneedsubcodedresult};if(event.item.nneedresultentryalert===transactionStatus.NO&&event.item.nneedsubcodedresult===transactionStatus.NO){if(ParameterRulesEngine[index]['additionalInfo']){ParameterRulesEngine[index]['additionalInfo']=\"\";}if(ParameterRulesEngine[index]['additionalInfoUidata']){ParameterRulesEngine[index]['additionalInfoUidata']=\"\";}}}if(parameter.nparametertypecode===parameterType.CHARACTER){sresult=event.target.value;if(event.target.value.trim()===\"\"){ncalculatedresult=-1;}else{ncalculatedresult=4;}}if(parameter.nparametertypecode===parameterType.ATTACHMENT){sresult=event[0].name;acceptedFile=event;ncalculatedresult=4;}ParameterRulesEngine[index]['sresult']=sresult;ParameterRulesEngine[index]['sfinal']=sfinal;ParameterRulesEngine[index]['sresultpredefinedname']=sresultpredefinedname;ParameterRulesEngine[index]['sresultcomment']=sresultcomment;ParameterRulesEngine[index]['salertmessage']=salertmessage;ParameterRulesEngine[index]['acceptedFile']=acceptedFile;ParameterRulesEngine[index]['editable']=true;ParameterRulesEngine[index]['ngradecode']=value;ParameterRulesEngine[index]['ncalculatedresult']=ncalculatedresult;selectedRecord.ParameterRulesEngine=ParameterRulesEngine;if(parameter.nparametertypecode===parameterType.PREDEFINED){_this.props.getPredefinedDataRulesEngine(inputData,selectedRecord,currentAlertResultCode,_this.props.Login.masterData);}_this.setState({selectedRecord:selectedRecord,currentAlertResultCode:currentAlertResultCode,currentntestgrouptestpredefcode:currentntestgrouptestpredefcode});};_this.getOutcomeDetails=function(inputParam){var masterData=_this.props.Login.masterData||{};var testParameter=_this.state.activeTabIndex===1?inputParam.testParameter:_this.state.activeTabIndex===2?inputParam.testParameterComments:inputParam.testParameterreportComments;masterData['selectedParameterRulesEngine']={};masterData['selectedParameterRulesEngine']=testParameter;var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:masterData}};_this.props.updateStore(updateInfo);};_this.viewParameter=function(param){var masterData=_this.props.Login.masterData||{};masterData['ParameterRulesEngine']=param['ParameterRulesEngine'];var updateInfo={typeName:DEFAULT_RETURN,data:{showAlertGrid:true,masterData:masterData,showParameterGrid:true}};_this.props.updateStore(updateInfo);};_this.handleExpandChange=function(){var childListMap1=new Map();var childListMap2=new Map();var childListMap3=new Map();var childListMap=new Map();if(_this.props.Login.masterData.activeTabName==='IDS_Test'){var keylst=_this.props.Login.masterData.activeTabName==='IDS_Test'?Object.keys(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['siteObject']):_this.props.Login.masterData.activeTabName==='IDS_COMMENTS'?Object.keys(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testCommentObject']):Object.keys(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['reportCommentObject']);keylst.map(function(key){childListMap.set(parseInt(key),Object.values(_this.props.Login.masterData.activeTabName==='IDS_Test'?_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['siteObject'][key]:_this.props.Login.masterData.activeTabName==='IDS_COMMENTS'?_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testCommentObject'][key]:_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['reportCommentObject'][key]));});_this.setState({childListMap:childListMap});}if(_this.props.Login.masterData.activeTabName==='IDS_COMMENTS'){var _keylst=Object.keys(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testCommentObject']);_keylst.map(function(key){childListMap2.set(parseInt(key),Object.values(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testCommentObject'][key]));});_this.setState({childListMap2:childListMap2});}if(_this.props.Login.masterData.activeTabName==='IDS_REPORTCOMMENTS'){var _keylst2=Object.keys(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['reportCommentObject']);_keylst2.map(function(key){childListMap3.set(parseInt(key),Object.values(_this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['reportCommentObject'][key]));});_this.setState({childListMap3:childListMap3});}};_this.viewOutcome=function(props){if(_this.props.Login.masterData['RulesEngine']&&_this.props.Login.masterData['RulesEngine'].length>0){var masterData=_this.props.Login.masterData;masterData['SelectedRulesEngine']=props['SelectedRulesEngine'][0];if(masterData['SelectedRulesEngine']['jsonuidata']&&masterData['SelectedRulesEngine']['jsonuidata']['testInitiateTests']){masterData['SelectedRulesEngine']['jsonuidata']['testInitiateTests'].forEach(function(object){object['expanded']&&delete object['expanded'];});}masterData['activeTabName']='IDS_Test';var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:\"IDS_VIEWOUTCOME\",operation:\"IDS_VIEW\",openModal:true,masterData:masterData}};_this.props.updateStore(updateInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTRULETOVIEWOUTCOME\"}));}};_this.openflowview=function(props){if(_this.props.Login.masterData['RulesEngine']&&_this.props.Login.masterData['RulesEngine'].length>0){var masterData=_this.props.Login.masterData;masterData['SelectedRulesEngine']=props['SelectedRulesEngine'][0];var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:\"IDS_VIEWRULE\",operation:\"IDS_VIEW\",openModal:true,masterData:masterData}};_this.props.updateStore(updateInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTRULETOVIEWRULE\"}));}};_this.handlePageChangeRuleEngine=function(event){_this.setState({skipRulesEngine:event.skip,takeRulesEngine:event.take});};_this.addGroup=function(){var selectedRecord=_this.state.selectedRecord;var viewColumnListByRule=_this.props.Login.viewColumnListByRule||[];var addGroupList=_this.props.Login.addGroupList||[];var arrayLength=addGroupList.length;addGroupList[arrayLength]=1;viewColumnListByRule=_this.props.Login.databaseviewList;if(arrayLength===0){selectedRecord[\"groupList\"]=[];selectedRecord[\"filtercolumns\"]=_this.props.Login.selectFields;}if(selectedRecord[\"groupListJoins\"]===undefined){selectedRecord[\"groupListJoins\"]=[];}if(selectedRecord[\"groupListJoins\"][arrayLength-1]===undefined){selectedRecord[\"groupListJoins\"][arrayLength-1]={};}selectedRecord[\"groupListJoins\"][arrayLength-1][\"button_and\"]=true;selectedRecord[\"groupList\"][arrayLength]=[];selectedRecord[\"groupList\"][arrayLength][\"button_and\"]=true;selectedRecord[\"groupList\"][arrayLength][0]={};var updateInfo={typeName:DEFAULT_RETURN,data:{addGroupList:addGroupList,viewColumnListByRule:viewColumnListByRule,selectedRecord:selectedRecord,activeTabIndex:0}};_this.props.updateStore(updateInfo);};_this.getTestGroupRulesEngineAdd=function(){//   if (this.state.selectedcombo['nproductcatcode']) {\n//    const sqlQuery = false;\n//this.setState({ selectedRecord: {} });\nvar selectedRecord=_this.state.selectedRecord||{};_this.props.getTestGroupRulesEngineAdd(_this.props.Login.userInfo,false,{addRuleList:[],addGroupList:[],addAggregateList:[],addOrderbyList:[]},_this.props.Login.masterData);//  } else {\n//       toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTPRODUCTCATEGORY\" }));\n//   }\n};_this.closePortalModal=function(){var masterData=_this.props.Login.masterData||{};masterData['testParameter']={};masterData['testParameterComments']={};masterData['testParameterreportComments']={};masterData['testComments']={};masterData['reportComments']={};masterData['testSite']={};var updateInfo={typeName:DEFAULT_RETURN,data:_this.props.Login.operation!=='update'?{activeTabIndex:0,openPortalModal:false,selectedRecord:{},addRuleList:[],count:0,masterData:masterData,testInitiateTests:[],reportCommentsTests:[],testCommentsTests:[],siteObject:{},testCommentObject:{},reportCommentObject:{},npkAtestparametercode:0,npkBtestparametercode:0,npkCtestparametercode:0,testInitiateSiteTab:[],testCommentsTestsTab:[],reportCommentsTestsTab:[]}:{activeTabIndex:0,openPortalModal:false,selectedRecord:{},addRuleList:[],count:0,masterData:masterData,//  testInitiateTests: [], reportCommentsTests: [],\n// testCommentsTests: [], siteObject: {}, testCommentObject: {}, reportCommentObject: {},\nnpkAtestparametercode:0,npkBtestparametercode:0,npkCtestparametercode:0// ,\n// testInitiateSiteTab: [],\n// testCommentsTestsTab: [],\n// reportCommentsTestsTab: []\n}};_this.props.updateStore(updateInfo);};_this.changePropertyView=function(index,event,status){var id=false;var activeTabIndex;var activeTabId;var masterData=_this.props.Login.masterData||{};var activeTestTab=_this.props.Login.activeTestTab||\"\";var selectedRecord=_this.state.selectedRecord;if(selectedRecord[\"groupList\"].length>0){if(_this.onsavevalidation(selectedRecord)){if(window.innerWidth>992&&event&&_this.state.enableAutoClick||!event){activeTabIndex=_this.state.activeTabIndex!==index?index:id?index:false;}if(window.innerWidth>992&&event&&_this.state.enableAutoClick||!event){if(index===1){activeTestTab='IDS_Test';masterData['selectedParameterRulesEngine']=_this.props.Login.testInitiateTests&&_this.props.Login.testInitiateTests[0];}if(index===2){activeTestTab='IDS_COMMENTS';masterData['selectedParameterRulesEngine']=_this.props.Login.testCommentsTests&&_this.props.Login.testCommentsTests[0];}if(index===3){activeTestTab='IDS_REPEAT';masterData['selectedParameterRulesEngine']=_this.props.Login.testRepeatTests&&_this.props.Login.testRepeatTests[0];}if(index===4){activeTestTab='IDS_ENFORCERESULT';masterData['selectedParameterRulesEngine']=_this.props.Login.testEnforceTests&&_this.props.Login.testEnforceTests[0];}var updateInfo={typeName:DEFAULT_RETURN,data:{activeTabIndex:index===0?0:_this.state.activeTabIndex!==index?index:id?index:false,activeTabId:id,activeTestTab:activeTestTab,masterData:masterData}};_this.props.updateStore(updateInfo);}}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_FILLTHERULETOADDOUTCOME\"}));}}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_ATLEASTADDONERULETOADDOUTCOME\"}));}};_this.deleteRule=function(groupIndex,index){var addGroupList=_this.props.Login.addGroupList||[];var selectedRecord=_this.state.selectedRecord;addGroupList[groupIndex]=addGroupList[groupIndex]-1;if(addGroupList[groupIndex]===0){addGroupList.splice(groupIndex,1);selectedRecord[\"groupList\"].splice(groupIndex,1);if(selectedRecord[\"groupListJoins\"]){selectedRecord[\"groupListJoins\"].splice(groupIndex-1,1);}}else{selectedRecord[\"groupList\"][groupIndex].splice(index,1);}var updateInfo={typeName:DEFAULT_RETURN,data:{addGroupList:addGroupList,selectedRecord:selectedRecord,activeTabIndex:0}};_this.props.updateStore(updateInfo);};_this.deleteOutcome=function(index){var addOutcomeList=_this.props.Login.addOutcomeList;addOutcomeList.splice(index,1);var updateInfo={typeName:DEFAULT_RETURN,data:{addOutcomeList:addOutcomeList}};_this.props.updateStore(updateInfo);};_this.clearRule=function(){var sviewname=_this.state.selectedRecord.sviewname||\"\";var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:[],selectedRecord:{sviewname:sviewname},sqlQuery:false}};_this.props.updateStore(updateInfo);};_this.resetRule=function(){var masterData=_this.props.Login.masterData||{};var selectedRecord=_this.state.selectedRecord||{};masterData['testParameter']={};masterData['testParameterComments']={};masterData['testParameterreportComments']={};masterData['testComments']={};masterData['reportComments']={};masterData['testRepeat']=[];masterData['testenforceTests']=[];masterData['testSite']={};if(selectedRecord[\"groupList\"]){selectedRecord[\"groupList\"]=[];}if(selectedRecord[\"groupListJoins\"]){selectedRecord[\"groupListJoins\"]=[];}var updateInfo={typeName:DEFAULT_RETURN,data:{addRuleList:[],addGroupList:[],masterData:masterData,addAggregateList:[],addOrderbyList:[],testInitiateTests:[],reportCommentsTests:[],testCommentsTests:[],siteObject:{},testCommentObject:{},reportCommentObject:{},selectedRecord:selectedRecord,testRepeatTests:[],testenforceTests:[],activeTabIndex:0}};_this.props.updateStore(updateInfo);};_this.onSymbolChange=function(comboData,fieldName,groupIndex,index){var selectedRecord=_this.state.selectedRecord;var oldSelectedRecord=selectedRecord[\"groupList\"][groupIndex][index][fieldName]||{};selectedRecord[\"groupList\"][groupIndex][index][fieldName]=comboData;_this.setState({selectedRecord:selectedRecord,groupIndex:groupIndex,index:index});};_this.onInputChange=function(event,type,groupIndex,index){var selectedRecord=_this.state.selectedRecord||{};var needoutsource=_this.state.needoutsource||{};if(event.target.type==='checkbox'){if(event.target.name==='needoutsource'&&event.target.checked===true){needoutsource=true;}else{needoutsource=false;delete selectedRecord['nfromsitecode'];delete selectedRecord['ntositecode'];}selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord,needoutsource:needoutsource});};_this.onInputSwitchChange=function(event){var selectedRecord=_this.state.selectedRecord||{};var testInitiateTests=[];var selectedParameterRulesEngine={};if(event.target.type==='checkbox'){var testcode=_this.props.Login.masterData.selectedParameterRulesEngine.ntestgrouptestcode;var activeValue=_this.props.Login.testInitiateTests;activeValue.map(function(item){if(item.ntestgrouptestcode===testcode){testInitiateTests.push(_objectSpread(_objectSpread({},item),{},{'nneedsample':event.target.checked===true?3:4}));selectedParameterRulesEngine=_objectSpread(_objectSpread({},item),{},{'nneedsample':event.target.checked===true?3:4});}else{testInitiateTests.push(_objectSpread({},item));}});}//selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n//this.setState({ selectedRecord });\nvar updateInfo={typeName:DEFAULT_RETURN,data:{masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{\"selectedParameterRulesEngine\":selectedParameterRulesEngine}),testInitiateTests:testInitiateTests}};_this.props.updateStore(updateInfo);};_this.viewColumnListByRule=function(list){var activeTabIndex=_this.props.Login.activeTabIndex;if(activeTabIndex!==0){var selectedRecord=_this.props.Login.selectedRecord&&_this.props.Login.selectedRecord;var dynamicList=activeTabIndex===1?_this.props.Login.testInitiateTests:activeTabIndex===2?_this.props.Login.testCommentsTests:activeTabIndex===3?_this.props.Login.testRepeatTests:activeTabIndex===4?_this.props.Login.testenforceTests:\"\";if(dynamicList!==undefined&&dynamicList)list=list.filter(function(_ref){var value=_ref.value;return!dynamicList.some(function(x){return x.ntestgrouptestcode==value;});});}return list;};_this.onConditionClick=function(fieldName,index,isgroup){var selectedRecord=_this.state.selectedRecord;selectedRecord[\"groupListJoins\"]=selectedRecord[\"groupListJoins\"]||[];if(index!==undefined&&isgroup===false){if(fieldName===\"button_and\"){selectedRecord[\"groupList\"][index][fieldName]=selectedRecord[\"groupList\"][index][fieldName]===true?true:true;selectedRecord[\"groupList\"][index][\"button_or\"]=false;}else if(fieldName===\"button_or\"){selectedRecord[\"groupList\"][index][fieldName]=selectedRecord[\"groupList\"][index][fieldName]===true?true:true;selectedRecord[\"groupList\"][index][\"button_and\"]=false;}else if(fieldName===\"button_not\"){selectedRecord[\"groupList\"][index][fieldName]=selectedRecord[\"groupList\"][index][fieldName]===true?false:true;}else{}_this.setState({selectedRecord:selectedRecord});}else{if(fieldName===\"button_and\"){if(selectedRecord[\"groupListJoins\"][index]===undefined){selectedRecord[\"groupListJoins\"][index]={};}selectedRecord[\"groupListJoins\"][index][fieldName]=selectedRecord[\"groupListJoins\"][index][fieldName]===true?true:true;selectedRecord[\"groupListJoins\"][index][\"button_or\"]=false;}if(fieldName===\"button_or\"){if(selectedRecord[\"groupListJoins\"][index]===undefined){selectedRecord[\"groupListJoins\"][index]={};}selectedRecord[\"groupListJoins\"][index][fieldName]=selectedRecord[\"groupListJoins\"][index][fieldName]===true?true:true;selectedRecord[\"groupListJoins\"][index][\"button_and\"]=false;}if(fieldName===\"button_not\"){if(selectedRecord[\"groupListJoins\"][index]===undefined){selectedRecord[\"groupListJoins\"][index]={};}selectedRecord[\"groupListJoins\"][index][fieldName]=selectedRecord[\"groupListJoins\"][index][fieldName]===true?false:true;}_this.setState({selectedRecord:selectedRecord});}};_this.changePropertyViewClose=function(id){var updateInfo={typeName:DEFAULT_RETURN,data:{activeTabIndex:undefined,activeTestTab:undefined,activeTabId:id}};_this.props.updateStore(updateInfo);};_this.onFilterComboChange=function(comboData,fieldName,caseNo){var tempFilterData=_this.state.tempFilterData||{};var inputParam={};switch(caseNo){case 1:tempFilterData[fieldName]=comboData;inputParam={inputData:{userinfo:_this.props.Login.userInfo,sampletype:comboData.item,tempFilterData:tempFilterData},methodUrl:\"/getProductCategory\"};_this.props.sampleTypeOnChange(inputParam,_this.props.Login.masterData);break;case 2:tempFilterData[fieldName]=comboData;inputParam={inputData:{userinfo:_this.props.Login.userInfo,sampletype:tempFilterData.nsampletypecode.item,productcategory:comboData.item,tempFilterData:tempFilterData},methodUrl:\"/getProduct\"};_this.props.sampleTypeOnChange(inputParam,_this.props.Login.masterData);break;case 3:tempFilterData[fieldName]=comboData;inputParam={inputData:{userinfo:_this.props.Login.userInfo,sampletype:tempFilterData.nsampletypecode.item,productcategory:tempFilterData.nproductcatcode.item,product:comboData.item,project:comboData.item,tempFilterData:tempFilterData},methodUrl:\"/getTreeVersionTemplate\"};_this.props.sampleTypeOnChange(inputParam,_this.props.Login.masterData);break;case 4:tempFilterData[fieldName]=comboData;_this.setState({tempFilterData:tempFilterData});break;case 5:var selectedRecord=_this.state.selectedRecord;selectedRecord[fieldName]=comboData;var TestGroupSpecSampleType=_this.props.Login.testGroupInputData.TestGroupSpecSampleType||{};var testGroupSpecSampleType={};if(_this.props.Login.screenName===(_this.props.Login.genericLabel&&_this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][_this.props.Login.userInfo.slanguagetypecode])){testGroupSpecSampleType=selectedRecord[\"ncomponentcode\"]?selectedRecord[\"ncomponentcode\"].item:TestGroupSpecSampleType[0].item;}else{testGroupSpecSampleType=_this.props.Login.masterData.SelectedComponent;}inputParam={userinfo:_this.props.Login.userInfo,testcategory:comboData.item,testgroupspecsampletype:testGroupSpecSampleType,nallottedspeccode:_this.props.Login.masterData.SelectedSpecification[\"nallottedspeccode\"],selectedRecord:selectedRecord};_this.props.changeTestCategory(inputParam,_this.props.Login.testGroupInputData);break;case 6:tempFilterData[fieldName]=comboData;inputParam={inputData:{userinfo:_this.props.Login.userInfo,nprojecttypecode:tempFilterData.nprojecttypecode.value,projecttype:tempFilterData.nprojecttypecode.item,// sampletype: tempFilterData.nsampletypecode.item,\n// productcategory: comboData.item,\ntempFilterData:tempFilterData},classUrl:\"/projectmaster\",methodUrl:\"/getApprovedProjectByProjectType\"};_this.props.sampleTypeOnChange(inputParam,_this.props.Login.masterData);break;default:break;}};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(saveType,formRef){var inputParam={};var masterData=_this.props.Login.masterData;var clearSelectedRecordField=[];if(_this.props.Login.screenName===\"IDS_PROFILETREE\"||_this.props.Login.screenName===\"IDS_EDITTREE\"){inputParam=_this.onSaveTree(saveType,formRef);// clearSelectedRecordField = [\n//     { \"controlType\": \"textarea\", \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"sleveldescription\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\n//     { \"controlType\": \"textarea\", \"idsName\": \"IDS_CODEDRESULTSYNONYM\", \"dataField\": \"spredefinedsynonym\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\n//     { \"controlType\": \"textarea\", \"idsName\": \"IDS_RESULTPARAMETERCOMMENTS\", \"dataField\": \"spredefinedcomments\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\n//     { \"controlType\": \"checkbox\", \"idsName\": \"IDS_AlERTFORRESULTENTRY\", \"dataField\": \"nneedresultentryalert\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\n//     { \"controlType\": \"checkbox\", \"idsName\": \"IDS_SUBCODERESULTNEED\", \"dataField\": \"nneedsubcodedresult\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\n//     { \"controlType\": \"textarea\", \"idsName\": \"IDS_ALERTMESSAGE\", \"dataField\": \"salertmessage\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\n// ]\n}else if(_this.props.Login.screenName===\"IDS_SPECIFICATION\"){inputParam=_this.onSaveSpecification(saveType,formRef);// ALPD-4757, Commented because, it is not required to make isCopy as false when save.\n// if (masterData && masterData.selectedRecordCopy) {\n//     masterData.selectedRecordCopy.isCopy = false;\n// }\ndelete masterData.CopyOpenNodes;//ALPD-5279 Test Group - while adding a spec in test group with save & continue, the sample category name is not visible insted a numeric value is displayed.\nclearSelectedRecordField=[//{ \"controlType\": \"textarea\", \"idsName\": \"IDS_SELECTEDPROFILE\", \"dataField\": \"sselectedprofilename\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\n//{ \"controlType\": \"textarea\", \"idsName\": \"IDS_SPECNAME\", \"dataField\": \"scopyspecname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\n//{ \"controlType\": \"textarea\", \"idsName\": \"IDS_PRODUCTNAME\", \"dataField\": \"sproductname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\n//{ \"controlType\": \"textarea\", \"idsName\": \"IDS_PRODUCTCATNAME\", \"dataField\": \"sproductcatname\", \"width\": \"150px\",\"controlName\": \"sproductcatname\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true},\n//{ \"controlType\": \"checkbox\", \"idsName\": \"IDS_PRODUCTCATNAME\", \"dataField\": \"nneedsubcodedresult\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\n{\"controlType\":\"textarea\",\"idsName\":\"IDS_SPECNAME\",\"dataField\":\"sspecname\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"isClearField\":true},{\"controlType\":\"checkbox\",\"idsName\":\"IDS_ACTIVE\",\"dataField\":\"ntransactionstatus\",\"width\":\"150px\",\"controlName\":\"ntransactionstatus\",\"mandatoryLabel\":\"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":1},{\"controlType\":\"checkbox\",\"idsName\":\"IDS_COMPONENTREQUIRED\",\"dataField\":\"ncomponentrequired\",\"width\":\"150px\",\"controlName\":\"ncomponentrequired\",\"mandatoryLabel\":\"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4},{\"controlType\":\"textarea\",\"idsName\":\"IDS_SELECTEDPROFILE\",\"dataField\":\"sselectedprofilename\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"isClearField\":true},{\"controlType\":\"textarea\",\"idsName\":\"IDS_SPECNAME\",\"dataField\":\"scopyspecname\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"isClearField\":true}// { \"controlType\": \"textarea\", \"idsName\": \"IDS_SPECNAME\", \"dataField\": \"sspecname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\n];}else if(_this.props.Login.screenName===_this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][_this.props.Login.userInfo.slanguagetypecode]){inputParam=_this.onSaveComponent(saveType,formRef);}else if(_this.props.Login.screenName===\"IDS_COPYSPECIFICATION\"){inputParam=_this.onSaveCopySpecification(saveType,formRef);clearSelectedRecordField=[{\"controlType\":\"textarea\",\"idsName\":\"IDS_SELECTEDPROFILE\",\"dataField\":\"sselectedprofilename\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"isClearField\":true},{\"controlType\":\"textarea\",\"idsName\":\"IDS_SPECNAME\",\"dataField\":\"scopyspecname\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"isClearField\":true},// { \"controlType\": \"textarea\", \"idsName\": \"IDS_PRODUCTNAME\", \"dataField\": \"sproductname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\n// { \"controlType\": \"checkbox\", \"idsName\": \"IDS_AlERTFORRESULTENTRY\", \"dataField\": \"sproductcatname\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\n// { \"controlType\": \"checkbox\", \"idsName\": \"IDS_PRODUCTCATNAME\", \"dataField\": \"nneedsubcodedresult\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\n{\"controlType\":\"textarea\",\"idsName\":\"IDS_SPECNAME\",\"dataField\":\"sspecname\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"isClearField\":true}//{ \"controlType\": \"checkbox\", \"idsName\": \"IDS_ACTIVE\", \"dataField\": \"ntransactionstatus\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":1 },\n//{ \"controlType\": \"checkbox\", \"idsName\": \"IDS_COMPONENTREQUIRED\", \"dataField\": \"ncomponentrequired\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\n];}else if(_this.props.Login.screenName===\"IDS_TEST\"||_this.props.Login.screenName===\"IDS_EDITTESTGROUPTEST\"){inputParam=_this.onSaveTest(saveType,formRef);}else if(_this.props.Login.screenName===\"IDS_SPECFILE\"){inputParam=_this.onSaveSpecFile(saveType,formRef);clearSelectedRecordField=[{\"controlType\":\"textarea\",\"idsName\":\"IDS_FILENAME\",\"dataField\":\"slinkfilename\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"isClearField\":true},{\"controlType\":\"textarea\",\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"isClearField\":true},{\"controlType\":\"textarea\",\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"slinkdescription\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_ENTER\",\"isClearField\":true},{\"controlType\":\"NA\",\"idsName\":\"IDS_FILE\",\"dataField\":\"sfilename\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_SELECT\",\"isClearField\":true},// ALPD-5522 - Test Group -> when adding a spec file using \"Save & Continue,\" the file field is not displayed, and the link dropdown is cleared.\n{\"controlType\":\"checkbox\",\"idsName\":\"IDS_DEFAULTSTATUS\",\"dataField\":\"ndefaultstatus\",\"width\":\"150px\",\"controlName\":\"ndefaultstatus\",\"mandatoryLabel\":\"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4},{\"controlType\":\"checkbox\",\"idsName\":\"IDS_DEFAULTSTATUS\",\"dataField\":\"nlinkdefaultstatus\",\"width\":\"150px\",\"controlName\":\"ndefaultstatus\",\"mandatoryLabel\":\"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4}];}if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){//ALPD-5444 Test Group - Copy the spec in test group and do save continue loading issue occurs.\nvar updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,openModal:true,operation:_this.props.Login.operation,screenData:{inputParam:inputParam,masterData:masterData,clearSelectedRecordField:clearSelectedRecordField},saveType:saveType}};_this.props.updateStore(updateInfo);}else{if(_this.props.Login.screenName===\"IDS_SPECIFICATION\"||_this.props.Login.screenName===\"IDS_COPYSPECIFICATION\"||_this.props.Login.screenName===\"IDS_SPECFILE\"){_this.props.crudMaster(inputParam,masterData,\"openModal\",{},\"\",clearSelectedRecordField);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\",{});}}};_this.onSaveTest=function(saveType,formRef){var operation=_this.props.Login.operation;var masterData=_this.props.Login.masterData;var selectedRecord=_this.state.selectedRecord;var inputData={};var userinfo=_this.props.Login.userInfo;var postParam=undefined;if(operation===\"create\"){var testArray=selectedRecord.ntestcode.map(function(test){return _objectSpread(_objectSpread({},test.item),{},{nisvisible:transactionStatus.YES,nisadhoctest:transactionStatus.NO});});inputData={testgroupspecification:masterData.SelectedSpecification,testgroupspecsampletype:[masterData.SelectedComponent],testgrouptest:testArray,userinfo:userinfo};}else{postParam={inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",primaryKeyValue:masterData.SelectedTest?masterData.SelectedTest.ntestgrouptestcode:0,fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:_this.props.Login.userInfo},masterData:_this.props.Login.masterData,searchFieldList:searchFieldList,changeList:[\"TestGroupTestFormula\",\"TestGroupTestNumericParameter\",\"TestGroupTestPredefinedParameter\",\"TestGroupTestCharParameter\",\"TestGroupTestParameter\"],isSingleSelect:true};var testgrouptestfile=null;var testGroupFile=selectedRecord.ntestfilecode;if(testGroupFile){testGroupFile=testGroupFile.item;testgrouptestfile={nlinkcode:testGroupFile.nlinkcode,nattachmenttypecode:testGroupFile.nattachmenttypecode,sdescription:testGroupFile.sdescription,ssystemfilename:testGroupFile.ssystemfilename,dcreateddate:testGroupFile.dcreateddate,nfilesize:testGroupFile.nfilesize,ntestgroupfilecode:selectedRecord.ntestgroupfilecode,ntestgrouptestcode:selectedRecord.ntestgrouptestcode,sfilename:testGroupFile.sfilename,nstatus:transactionStatus.ACTIVE};}inputData={testgroupspecification:masterData.SelectedSpecification,testgrouptest:{ntestgrouptestcode:selectedRecord.ntestgrouptestcode,nsectioncode:selectedRecord.nsectioncode.value,//nsourcecode: selectedRecord.nsourcecode.value,\nnmethodcode:selectedRecord.nmethodcode?selectedRecord.nmethodcode.value:transactionStatus.NA,ninstrumentcatcode:selectedRecord.ninstrumentcatcode?selectedRecord.ninstrumentcatcode.value:transactionStatus.NA,ncontainertypecode:selectedRecord.ncontainertypecode?selectedRecord.ncontainertypecode.value:transactionStatus.NA,stestsynonym:selectedRecord.stestsynonym,ncost:selectedRecord.ncost,nsorter:selectedRecord.nsorter,nspecsampletypecode:selectedRecord.nspecsampletypecode,nrepeatcountno:selectedRecord.nrepeatcountno,ntestpackagecode:selectedRecord.ntestpackagecode?selectedRecord.ntestpackagecode.value:transactionStatus.NA,nisvisible:transactionStatus.YES,nisadhoctest:transactionStatus.NO},testgrouptestfile:testgrouptestfile,userinfo:userinfo};}var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:operation,methodUrl:\"Test\",saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:postParam};return inputParam;};_this.onSaveTree=function(saveType,formRef){var operation=_this.props.Login.operation;var selectedRecord=_this.state.selectedRecord;var inputData={userinfo:_this.props.Login.userInfo};if(operation===\"update\"){var selectedNode=_this.props.Login.masterData.selectedNode;inputData[\"treetemplatemanipulation\"]={ntemplatemanipulationcode:selectedRecord.ntemplatemanipulationcode,sleveldescription:selectedRecord.sleveldescription,nsampletypecode:selectedNode.nsampletypecode,ntreeversiontempcode:selectedNode.ntreeversiontempcode,nproductcatcode:selectedNode.nproductcatcode,nproductcode:selectedNode.nproductcode,nprojectmastercode:selectedNode.nprojectmastercode};inputData[\"selectednode\"]=_this.props.Login.masterData.ActiveKey;}else{var TreetempTranstestGroup=_this.props.Login.TreetempTranstestGroup;var filterData=_this.state.filterData;var _selectedRecord=_this.state.selectedRecord;var treetemplatemanipulation=[];var tempArray=filterRecordBasedOnTwoArrays(TreetempTranstestGroup,_selectedRecord.treetemplatemanipulation,\"ntemptranstestgroupcode\");tempArray.map(function(item){var treeData={ntreeversiontempcode:item.ntreeversiontempcode,npositioncode:item.nlevelno-1,sleveldescription:item.sleveldescription,ntemptranstestgroupcode:item.ntemptranstestgroupcode,nformcode:62,schildnode:\"\",nnextchildcode:item.schildnode,ntemplatemanipulationcode:item.ntemplatemanipulationcode,isreadonly:item.ntemplatemanipulationcode>0?true:false,slevelformat:item.slevelformat};return treetemplatemanipulation.push(treeData);});_selectedRecord.treetemplatemanipulation.map(function(item){var treeTemplateManip=TreetempTranstestGroup.filter(function(temp){return temp.ntemptranstestgroupcode===item.ntemptranstestgroupcode;});if(treeTemplateManip.length>0){item[\"ntemplatemanipulationcode\"]=treeTemplateManip[\"ntemplatemanipulationcode\"];}else{item[\"ntemplatemanipulationcode\"]=0;}return treetemplatemanipulation.push(item);});inputData[\"treetemplatemanipulation\"]=treetemplatemanipulation;inputData[\"sampletype\"]=filterData.nsampletypecode.item;inputData[\"ncategorycode\"]=filterData.nproductcatcode.value;inputData[\"nproductcode\"]=filterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.YES?-1:filterData.nproductcatcode.item.ncategorybasedflow==transactionStatus.YES?-1:filterData.nproductcode.value?filterData.nproductcode.value:-1;inputData[\"ntreeversiontempcode\"]=filterData.ntreeversiontempcode.value;//  inputData[\"nprojectmastercode\"] = filterData.nprojectmastercode ? filterData.nprojectmastercode.value:-1;\ninputData[\"nprojectmastercode\"]=filterData.nprojectmastercode?filterData.nsampletypecode.item.nprojectspecrequired===transactionStatus.YES?filterData.nprojectmastercode.value:-1:-1;}var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:operation,methodUrl:\"Tree\",saveType:saveType,formRef:formRef};return inputParam;};_this.onSaveSpecification=function(saveType,formRef){var operation=_this.props.Login.operation;var selectedRecord=_this.state.selectedRecord;var selectedCopyNodeManipulationCode=_this.state.selectedRecord.selectedCopyNodeManipulationCode||-1;var testGroupSpec={napproveconfversioncode:-1,sversion:'',napprovalstatus:transactionStatus.DRAFT,nstatus:transactionStatus.ACTIVE,ntransactionstatus:selectedRecord[\"ntransactionstatus\"],ncomponentrequired:selectedRecord[\"ncomponentrequired\"],//   nclinicalspec: selectedRecord[\"nclinicalspec\"],\n// nprojectcode: selectedRecord[\"nprojectcode\"] ? selectedRecord[\"nprojectcode\"] : -1,\nnprojectmastercode:_this.state.filterData.nprojectmastercode?_this.state.filterData.nsampletypecode.item.nprojectspecrequired===transactionStatus.YES?_this.state.filterData.nprojectmastercode.value:-1:-1,sspecname:operation===\"copy\"?selectedRecord[\"scopyspecname\"]:selectedRecord[\"sspecname\"],dexpirydate:selectedRecord[\"dexpirydate\"],nallottedspeccode:selectedRecord[\"nallottedspeccode\"]?selectedRecord[\"nallottedspeccode\"]:0,ntzexpirydate:selectedRecord[\"ntzexpirydate\"].value,stzexpirydate:selectedRecord[\"ntzexpirydate\"].label};var dexpirydate=testGroupSpec[\"dexpirydate\"];//need this conversion when the datatype of the field is 'Instant'\ntestGroupSpec[\"dexpirydate\"]=formatInputDate(dexpirydate,false);if(operation===\"create\"){testGroupSpec[\"ntemplatemanipulationcode\"]=_this.props.Login.masterData.selectedNode.ntemplatemanipulationcode;}var ntreeversiontempcode=_this.state.filterData.ntreeversiontempcode.value;var inputData={userinfo:_this.props.Login.userInfo,testgroupspecification:testGroupSpec,treetemplatemanipulation:_this.props.Login.masterData.selectedNode,selectedspecification:_this.props.Login.masterData.SelectedSpecification,ntreeversiontempcode:ntreeversiontempcode,selectedCopyNodeManipulationCode:selectedCopyNodeManipulationCode};var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:operation,methodUrl:\"Specification\",saveType:saveType,formRef:formRef,selectedRecord:_objectSpread({},_this.state.selectedRecord)};return inputParam;};_this.onSaveComponent=function(saveType,formRef){var masterData=_this.props.Login.masterData;var selectedRecord=_this.state.selectedRecord;var testArray=selectedRecord.ntestcode.map(function(test){return _objectSpread(_objectSpread({},test.item),{},{nisvisible:transactionStatus.YES,nisadhoctest:transactionStatus.NO});});var inputData={testgroupspecification:masterData.SelectedSpecification,testgroupspecsampletype:[selectedRecord.ncomponentcode.item],testgrouptest:testArray,userinfo:_this.props.Login.userInfo,genericlabel:_this.props.Login.genericLabel};var inputParam={inputData:inputData,classUrl:\"testgroup\",operation:_this.props.Login.operation,methodUrl:\"Component\",saveType:saveType,formRef:formRef};return inputParam;};_this.onSaveSpecFile=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;var acceptedFiles=selectedRecord.sfilename;var nattachmenttypecode=selectedRecord.nattachmenttypecode;var isFileEdited=transactionStatus.NO;var specFileArray=[];var selectedSpecification=_this.props.Login.masterData.SelectedSpecification;var specFile={nallottedspeccode:selectedSpecification.nallottedspeccode,nspecfilecode:selectedRecord.nspecfilecode?selectedRecord.nspecfilecode:0,nstatus:transactionStatus.ACTIVE,nattachmenttypecode:nattachmenttypecode};var formData=new FormData();if(nattachmenttypecode===attachmentType.FTP){if(acceptedFiles&&Array.isArray(acceptedFiles)&&acceptedFiles.length>0){acceptedFiles.forEach(function(file,index){var tempData=Object.assign({},specFile);var splittedFileName=file.name.split('.');var fileExtension=file.name.split('.')[splittedFileName.length-1];var uniquefilename=nattachmenttypecode===attachmentType.FTP?create_UUID()+'.'+fileExtension:\"\";tempData[\"sfilename\"]=Lims_JSON_stringify(file.name,false);tempData[\"sdescription\"]=Lims_JSON_stringify(replaceBackSlash(selectedRecord.sdescription?selectedRecord.sdescription.trim():\"\"),false);tempData[\"nlinkcode\"]=transactionStatus.NA;tempData[\"ssystemfilename\"]=uniquefilename;tempData[\"nfilesize\"]=file.size;formData.append(\"uploadedFile\"+index,file);formData.append(\"uniquefilename\"+index,uniquefilename);specFileArray.push(tempData);});formData.append(\"filecount\",acceptedFiles.length);isFileEdited=transactionStatus.YES;}else{specFile[\"sfilename\"]=Lims_JSON_stringify(selectedRecord.sfilename,false);specFile[\"sdescription\"]=Lims_JSON_stringify(replaceBackSlash(selectedRecord.sdescription?selectedRecord.sdescription.trim():\"\"),false);specFile[\"nlinkcode\"]=transactionStatus.NA;specFile[\"ssystemfilename\"]=selectedRecord.ssystemfilename;specFile[\"nfilesize\"]=selectedRecord.nfilesize;specFileArray.push(specFile);}}else{specFile[\"sfilename\"]=Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkfilename.trim()),false);specFile[\"sdescription\"]=Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkdescription?selectedRecord.slinkdescription.trim():\"\"),false);specFile[\"nlinkcode\"]=selectedRecord.nlinkcode.value?selectedRecord.nlinkcode.value:-1;specFile[\"ssystemfilename\"]=\"\";specFile[\"nfilesize\"]=0;specFileArray.push(specFile);}formData.append(\"isFileEdited\",isFileEdited);formData.append(\"testgroupspecification\",JSON.stringify(selectedSpecification));formData.append(\"testgroupspecfile\",JSON.stringify(specFileArray));var inputParam={// inputData: { userinfo: this.props.Login.userInfo },\ninputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sformname:Lims_JSON_stringify(_this.props.Login.userInfo.sformname),smodulename:Lims_JSON_stringify(_this.props.Login.userInfo.smodulename),//ALPD-1628(while saving the file and link,audit trail is not captured the respective language)\nslanguagename:Lims_JSON_stringify(_this.props.Login.userInfo.slanguagename)})},formData:formData,isFileupload:true,operation:_this.props.Login.operation,classUrl:\"testgroup\",saveType:saveType,formRef:formRef,methodUrl:\"SpecificationFile\",selectedRecord:_objectSpread({},_this.state.selectedRecord)};return inputParam;};_this.deleteSpecRecord=function(deleteParam){var selectedRecord=deleteParam.selectedRecord;var masterData=_this.props.Login.masterData;var ntreeversiontempcode=masterData[\"TreeTemplateManipulation\"][0].ntreeversiontempcode;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===ntreeversiontempcode;});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedRecord.napprovalstatus===transactionStatus.DRAFT||selectedRecord.napprovalstatus===transactionStatus.CORRECTION){_this.deleteRecord(deleteParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};_this.deleteRecord=function(deleteParam){if(_this.props.Login.masterData.selectedNode!==undefined&&_this.props.Login.masterData.selectedNode!==null){var masterData=_this.props.Login.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(_this.props.Login.masterData.selectedNode){var _inputData;var methodUrl=deleteParam.methodUrl;var dataState=_this.state.componentDataState;var screenName=deleteParam.screenName;var inputParam={inputData:(_inputData={},_defineProperty(_inputData,deleteParam.keyName,deleteParam.selectedRecord),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_defineProperty(_inputData,\"genericlabel\",_this.props.Login.genericLabel),_defineProperty(_inputData,\"testgroupspecification\",_this.props.Login.masterData.SelectedSpecification),_defineProperty(_inputData,\"treetemplatemanipulation\",_this.props.Login.masterData.selectedNode),_defineProperty(_inputData,\"ntreeversiontempcode\",deleteParam.filterData.ntreeversiontempcode.value),_inputData),classUrl:\"testgroup\",operation:deleteParam.operation,methodUrl:methodUrl,screenName:screenName,dataState:dataState};var _masterData=_this.props.Login.masterData;//if (showEsign(this.state.controlMap, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\nif(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_masterData},openModal:true,screenName:screenName,operation:deleteParam.operation,selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPROFILENODE\"}));}}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTPROFILENODE\"}));}};_this.deleteMultipleRecord=function(deleteParam){//console.log(\"delete component:\", deleteParam, this.props.Login.masterData);\nvar masterData=_this.props.Login.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=_this.props.Login.masterData.SelectedSpecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var inputParam={inputData:{testgroupspecsampletype:deleteParam.props.testgroupspecsampletype,userinfo:_this.props.Login.userInfo,genericlabel:_this.props.Login.genericLabel,testgroupspecification:testgroupspecification,treetemplatemanipulation:_this.props.Login.masterData.selectedNode},classUrl:\"testgroup\",operation:\"delete\",methodUrl:\"TestGroupComponent\",screenName:_this.props.Login.genericLabel&&_this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][_this.props.Login.userInfo.slanguagetypecode]};var _masterData2=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_masterData2},openModal:true,screenName:_this.props.Login.genericLabel&&_this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][_this.props.Login.userInfo.slanguagetypecode],operation:\"delete\",selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};_this.onDropSpecFile=function(attachedFiles,fieldName,maxSize){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=onDropAttachFileList(selectedRecord[fieldName],attachedFiles,maxSize);_this.setState({selectedRecord:selectedRecord,actionType:\"new\"});};_this.deleteAttachment=function(event,file,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=deleteAttachmentDropZone(selectedRecord[fieldName],file);_this.setState({selectedRecord:selectedRecord,actionType:\"delete\"//fileToDelete:file.name \n});};_this.validateTestGroupComplete=function(operation,inputValue,ncontrolCode){if(_this.props.Login.masterData.selectedNode!==undefined&&_this.props.Login.masterData.selectedNode!==null){var masterData=_this.props.Login.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(inputValue.testgroupspecification){if(inputValue.testgroupspecification.napprovalstatus===transactionStatus.DRAFT||inputValue.testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){return rsapi.post(\"testgroup/validateTestGroupComplete\",{nallottedspeccode:inputValue.testgroupspecification.nallottedspeccode,\"userinfo\":_this.props.Login.userInfo}).then(function(response){if(response.data&&response.data.length>0){var inactiveTestArray=[];response.data.map(function(item){return inactiveTestArray.indexOf(item.stestname)===-1?inactiveTestArray.push(item.stestname):\"\";});var data=\" [\"+inactiveTestArray+\"] \"+_this.props.intl.formatMessage({id:\"IDS_INACTIVETESTSATCOMPLETE\"});_this.confirmMessage.confirm(_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),data,_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.completeSpecification(operation,inputValue,ncontrolCode);},false,undefined);}else{_this.completeSpecification(operation,inputValue,ncontrolCode);}}).catch(function(error){if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response}));}});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.retireSpec=function(operation,selectedSpecification,approvalRoleActionDetail,retireSpecId){if(selectedSpecification.testgroupspecification.napprovalstatus!==transactionStatus.RETIRED){if(approvalRoleActionDetail.length>0&&approvalRoleActionDetail[0].nlevelno===transactionStatus.ACTIVE){if(selectedSpecification.testgroupspecification[\"napprovalstatus\"]===approvalRoleActionDetail[0].ntransactionstatus){var inputParam={inputData:{nallottedspeccode:selectedSpecification.testgroupspecification,treetemplatemanipulation:selectedSpecification.treetemplatemanipulation,approvalRoleActionDetail:approvalRoleActionDetail[0],userinfo:_this.props.Login.userInfo,operation:operation},classUrl:\"testgroup\",operation:operation,methodUrl:\"Spec\",screenName:\"IDS_STUDYPLAN\"};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,retireSpecId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_STUDYPLAN\",operation:operation,selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.retireSpecification(inputParam.inputData,masterData);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_RETIRECANBECONEAFTERFINAL\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_FINALLEVELAPPROVE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ALREADYRETIRED\"}));}};_this.onDownloadClick=function(reportSpecId){if(_this.props.Login.masterData.SelectedComponent&&_this.props.Login.masterData.SelectedTest){var inputParam={Vnallottedspeccode:_this.props.Login.masterData['SelectedSpecification'].nallottedspeccode,ntransactionstatus:_this.props.Login.masterData.SelectedSpecification.napprovalstatus};//this.props.reportSpecification(inputParam['inputData']);\n_this.props.generateControlBasedReport(reportSpecId,inputParam,_this.props.Login,\"Vnallottedspeccode\",_this.props.Login.masterData.SelectedComponent.nallottedspeccode);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_REPORTCANNOTGENERATEFORCOMPWITHOUTTEST\"}));}};_this.specificationReport=function(operation,ncontrolCode){if(_this.props.Login.masterData.SelectedComponent&&_this.props.Login.masterData.SelectedTest){var inputParam={inputData:{sprimarykeyname:'nallottedspeccode',userinfo:_this.props.Login.userInfo,ncontrolcode:ncontrolCode,nregtypecode:transactionStatus.NA,nregsubtypecode:transactionStatus.NA,nreportmodulecode:transactionStatus.NA,nreporttypecode:REPORTTYPE.CONTROLBASED,nreportdecisiontypecode:transactionStatus.NA,certificatetypecode:transactionStatus.NA,nsectioncode:transactionStatus.NA,operation:operation,nallottedspeccode:_this.props.Login.masterData['SelectedSpecification']['nallottedspeccode'],selectedComponent:_this.props.Login.masterData[\"SelectedComponent\"],selectedTest:_this.props.Login.masterData[\"SelectedTest\"],filterData:_this.state.filterData}};_this.props.reportSpecification(inputParam['inputData']);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_REPORTCANNOTGENERATEFORCOMPWITHOUTTEST\"}));}};_this.completeSpecification=function(operation,inputValue,ncontrolCode){if(inputValue.testgroupspecification){if(inputValue.testgroupspecification.napprovalstatus===transactionStatus.DRAFT||inputValue.testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var inputParam={inputData:_objectSpread({userinfo:_this.props.Login.userInfo,ntreeversiontempcode:_this.state.filterData.ntreeversiontempcode.value,testGroupTest:_this.props.Login.masterData.TestGroupTest,// ALPD-5329 - Gowtham R - In test group specification record getting Auto Approved when configuration for test group approval not done\nisQualisLite:parseInt(_this.props.Login.settings[71])},inputValue),classUrl:\"testgroup\",operation:operation,methodUrl:\"Specification\",screenName:\"IDS_SPECIFICATION\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"IDS_SPECIFICATION\",operation:operation,selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\",{});}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}};_this.approveSpecification=function(status,needEsign){var masterData=_this.props.Login.masterData;var inputParam={inputData:{userinfo:_this.props.Login.userInfo,treetemplatemanipulation:masterData.selectedNode,ntreeversiontempcode:_this.state.filterData.ntreeversiontempcode.value,testgroupspecification:_objectSpread(_objectSpread({},masterData.SelectedSpecification),{},{napprovalstatus:status})},classUrl:\"testgroup\",operation:\"approve\",methodUrl:\"Specification\",screenName:\"IDS_SPECIFICATION\"};if(needEsign===transactionStatus.YES){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_SPECIFICATION\",operation:\"approve\",selectedRecord:{}}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\",{});}};_this.onComboChange=function(comboData,fieldName,caseNo,optional){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 1:if(fieldName===\"ntestcode\"){selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}break;case 2:selectedRecord[\"parameterTypeCode\"]=comboData.value;selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});break;case 3:selectedRecord[\"schecklistversionname\"]=comboData.item.schecklistversionname;selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});break;default:break;}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};var componentDataState={skip:0,take:10};var historyDataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var clinicalspecDataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5,group:[{field:'sgendername'}]};_this.state={selectedRecord:{},filterData:{},error:\"\",userRoleControlRights:[],controlMap:new Map(),componentDataState:componentDataState,historyDataState:historyDataState,clinicalspecDataState:clinicalspecDataState,tempFilterData:{},showTest:true,testskip:0,testtake:_this.props.Login.settings?_this.props.Login.settings[12]:5,skipRulesEngine:0,takeRulesEngine:_this.props.Login.settings?_this.props.Login.settings[12]:5,fixefScrollHeight:window.outerHeight-400,initialVerticalWidth:\"20vh\",testView:true,//paneHeight:'calc(100vh - ' +window.outerHeight-847 + 'px)'\npaneHeight:'calc(100vh -183px)'// isCopySpecRender: true\n};_this.componentColumnList=[{\"idsName\":_this.props.Login.genericLabel&&_this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][_this.props.Login.userInfo.slanguagetypecode],\"dataField\":\"ncomponentcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"mandatory\":true},{\"idsName\":\"IDS_TEST\",\"dataField\":\"ntestcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"mandatory\":true}];_this.componentBreadcrumbs=[];_this.breadCrumbData=[];_this.searchRef=React.createRef();_this.specSubField=[_defineProperty({},designProperties.VALUE,\"stransdisplaystatus\"),(_ref3={},_defineProperty(_ref3,designProperties.VALUE,\"sapprovalstatus\"),_defineProperty(_ref3,designProperties.COLOUR,true),_ref3)];_this.myRef=React.createRef();return _this;}_createClass(TestGroup,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({parentHeight:height-50});}}// shouldComponentUpdate (nextProps,nextState) {  \n//     if(this.props.Login.operation===\"copy\" && nextProps.Login.openModal === false && this.state.isCopySpecRender === false){\n//         this.setState({ isCopySpecRender: true});\n//         return true;\n//     }\n//     if (this.props.Login.screenName === 'IDS_SPECIFICATION'\n//         &&nextState.isCopySpecRender===false\n//         // &&(nextState.selectedRecord.selectedCopyNodeManipulationCode !==this.state.selectedRecord.selectedCopyNodeManipulationCode)\n//         ) {\n//         return false;\n//       }\n//       else{\n//         return true;\n//       }\n// }\n},{key:\"render\",value:function render(){var _this2=this;console.log(\"Screen Name need\",this.props.Login.screenName);var _this$props$Login$mas=this.props.Login.masterData,TestGroupSpecification=_this$props$Login$mas.TestGroupSpecification,SelectedSpecification=_this$props$Login$mas.SelectedSpecification,SelectedTest=_this$props$Login$mas.SelectedTest,OpenNodes=_this$props$Login$mas.OpenNodes,selectedNode=_this$props$Login$mas.selectedNode,FocusKey=_this$props$Login$mas.FocusKey,ActiveKey=_this$props$Login$mas.ActiveKey,SelectedComponent=_this$props$Login$mas.SelectedComponent,TestGroupTest=_this$props$Login$mas.TestGroupTest,TestGroupSpecSampleType=_this$props$Login$mas.TestGroupSpecSampleType,searchedData=_this$props$Login$mas.searchedData,TestGroupTestParameter=_this$props$Login$mas.TestGroupTestParameter,CopyOpenNodes=_this$props$Login$mas.CopyOpenNodes;// const CopyOpenNodes = this.props.Login.masterData.OpenNodes;\n// const deleteTree = {\n//     methodUrl: \"Tree\", operation: \"delete\", inputParam: this.props.Login.inputParam,\n//     userInfo: this.props.Login.userInfo, screenName: \"IDS_TREE\"\n// };\nif(this.props.Login.masterData&&this.props.Login.masterData.AgaramTree&&this.props.Login.masterData.AgaramTree.length>0){this.props.Login.masterData.AgaramTree[0][\"label\"]=this.props.Login.masterData.AgaramTree[0][\"label\"]==='root'?this.props.intl.formatMessage({id:\"IDS_ROOT\"}):this.props.Login.masterData.AgaramTree[0][\"label\"];}//ALPD-5173 French Lang : Test Group screen -> While select the sample type, root name is changed into English lang.\nif(this.props.Login.masterData&&this.props.Login.masterData.selectedRecordCopy!==undefined&&this.props.Login.masterData.selectedRecordCopy&&this.props.Login.masterData.selectedRecordCopy.AgaramTree!==undefined&&this.props.Login.masterData.selectedRecordCopy.AgaramTree.length>0){this.props.Login.masterData.selectedRecordCopy.AgaramTree[0][\"label\"]=this.props.Login.masterData.selectedRecordCopy.AgaramTree[0][\"label\"]==='root'?this.props.intl.formatMessage({id:\"IDS_ROOT\"}):this.props.Login.masterData.selectedRecordCopy.AgaramTree[0][\"label\"];}//  const testGroupTestData = searchedData || TestGroupTest || []\nif(TestGroupTestParameter){sortData(TestGroupTestParameter,\"ascending\",\"nsorter\");}// ALPD-3242 Commented sortData as tests are sorted unnecessarily everytime while clicking on the test in the tab\n// if (testGroupTestData) {\n//     sortData(testGroupTestData, \"descending\", \"nsorter\");\n// }\nvar getComponent={screenName:this.props.Login.genericLabel&&this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],operation:\"get\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,methodUrl:\"TestGroupComponent\",keyName:\"testgroupspecification\"};var addSpecParam={testgroupspecification:SelectedSpecification,selectedRecord:this.state.filterData,userInfo:this.props.Login.userInfo,selectedNode:selectedNode};var editSpecParam={selectedRecord:this.state.filterData,userinfo:this.props.Login.userInfo,selectedNode:selectedNode};var specDeleteParam={operation:\"delete\",methodUrl:\"Specification\",screenName:\"IDS_SPECIFICATION\",keyName:\"testgroupspecification\",filterData:this.state.filterData};var addSpecId=this.state.controlMap.has(\"AddSpecification\")&&this.state.controlMap.get(\"AddSpecification\").ncontrolcode;var addTreeId=this.state.controlMap.has(\"AddTree\")&&this.state.controlMap.get(\"AddTree\").ncontrolcode;var editTreeId=this.state.controlMap.has(\"EditTree\")&&this.state.controlMap.get(\"EditTree\").ncontrolcode;var deleteTreeId=this.state.controlMap.has(\"DeleteTree\")&&this.state.controlMap.get(\"DeleteTree\").ncontrolcode;var editSpecId=this.state.controlMap.has(\"EditSpecification\")&&this.state.controlMap.get(\"EditSpecification\").ncontrolcode;var deleteSpecId=this.state.controlMap.has(\"DeleteSpecification\")&&this.state.controlMap.get(\"DeleteSpecification\").ncontrolcode;var addComponentId=this.state.controlMap.has(\"AddComponent\")&&this.state.controlMap.get(\"AddComponent\").ncontrolcode;var deleteComponentId=this.state.controlMap.has(\"DeleteComponent\")&&this.state.controlMap.get(\"DeleteComponent\").ncontrolcode;var addTestId=this.state.controlMap.has(\"AddTest\")&&this.state.controlMap.get(\"AddTest\").ncontrolcode;var deleteTestId=this.state.controlMap.has(\"DeleteTest\")&&this.state.controlMap.get(\"DeleteTest\").ncontrolcode;var editTestId=this.state.controlMap.has(\"EditTest\")&&this.state.controlMap.get(\"EditTest\").ncontrolcode;var viewFileId=this.state.controlMap.has(\"ViewTestFile\")&&this.state.controlMap.get(\"ViewTestFile\").ncontrolcode;var confirmMessage=new ConfirmMessage();var deleteTree={methodUrl:\"Tree\",operation:\"delete\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,screenName:\"IDS_TREE\",ncontrolCode:deleteTreeId,filterData:this.state.filterData};var getTest={screenName:\"IDS_TEST\",operation:\"get\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,methodUrl:\"TestGroupTest\",keyName:\"ntestgrouptestcode\"};var filterParam={testskip:0,testtake:this.props.Login.settings?this.props.Login.settings[12]:5,inputListName:\"TestGroupTest\",selectedObject:\"SelectedTest\",primaryKeyField:\"ntestgrouptestcode\",fetchUrl:\"testgroup/getTestGroupTest\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:searchFieldList,changeList:[\"TestGroupTestFormula\",\"TestGroupTestNumericParameter\",\"TestGroupTestPredefinedParameter\",\"TestGroupTestCharParameter\",\"TestGroupTestParameter\"],isSingleSelect:true};var filterParamRulesEngine={skipRulesEngine:0,takeRulesEngine:this.props.Login.settings?this.props.Login.settings[12]:5,inputListName:\"RulesEngine\",selectedObject:\"SelectedRulesEngine\",primaryKeyField:\"ntestgrouprulesenginecode\",fetchUrl:\"testgrouprulesengine/getSelectedTestGroupRulesEngine\",fecthInputObject:{userinfo:this.props.Login.userInfo,ntestgrouptestcode:this.props.Login.masterData.SelectedTest&&this.props.Login.masterData.SelectedTest.ntestgrouptestcode},masterData:this.props.Login.masterData,'searchFieldList':[\"srulename\",\"stransdisplaystatus\"],changeList:[],isSingleSelect:true};var specMandatoryFields=[];//ALPD-4962 Test group screen -> while copy the spec and in spec name field without giving anything & save it blank page occurs.\nvar specCopyMandatoryFields=[];var compMandatoryFields=[];var editTestMandatoryFields=[];var addTestMandatoryFields=[];specificationColumnList.forEach(function(item){return item.mandatory===true?specMandatoryFields.push(item):\"\";});//ALPD-4944, Added specCopyMandatoryFields to check mandatory fields for copy spec\n//ALPD-4962 Test group screen -> while copy the spec and in spec name field without giving anything & save it blank page occurs.\nspecificationCopyColumnList.forEach(function(item){return item.mandatory===true?specCopyMandatoryFields.push(item):\"\";});this.componentColumnList.forEach(function(item){return item.mandatory===true?compMandatoryFields.push(item):\"\";});editTestColumnList.forEach(function(item){return item.mandatory===true?editTestMandatoryFields.push(item):\"\";});addTestColumnList.forEach(function(item){return item.mandatory===true?addTestMandatoryFields.push(item):\"\";});if(this.props.Login.masterData&&Object.values(this.props.Login.masterData).length>0){if(selectedNode&&selectedNode.sleveldescription){var splitNode=this.props.Login.masterData.ActiveKey.split('/');var treeNodeNames=[];splitNode.forEach(function(nodeItem){_this2.props.Login.masterData.TreeTemplateManipulation.forEach(function(treeItem){if(treeItem.ntemplatemanipulationcode===parseInt(nodeItem))treeNodeNames.push(treeItem.sleveldescription);});});this.componentBreadcrumbs=treeNodeNames;if(SelectedSpecification&&SelectedSpecification!==null&&SelectedSpecification.sspecname){this.componentBreadcrumbs.push(SelectedSpecification.sspecname);if(SelectedComponent&&SelectedComponent!==null&&SelectedComponent.ncomponentcode!==-1){// this.componentBreadcrumbs[2] = this.props.intl.formatMessage({ id: \"IDS_COMPONENT\" }) + \": \" + SelectedComponent.scomponentname;\nthis.componentBreadcrumbs.push(SelectedComponent.scomponentname);}else{// delete this.componentBreadcrumbs[2];\n}}else{// delete this.componentBreadcrumbs[1];\n}}else{this.componentBreadcrumbs=[];// delete this.componentBreadcrumbs[0];\n}}this.confirmMessage=new ConfirmMessage();//New Design\nvar specDesign=/*#__PURE__*/React.createElement(React.Fragment,null,this.componentBreadcrumbs&&this.componentBreadcrumbs.length>0&&/*#__PURE__*/React.createElement(\"div\",{className:\"component_breadcrumbs\"},/*#__PURE__*/React.createElement(\"ul\",null,this.componentBreadcrumbs.map(function(item){return/*#__PURE__*/React.createElement(\"li\",null,item);}))),/*#__PURE__*/React.createElement(ContentPanel,{hidden:this.state.showTest,className:\"mr-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card_group\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(\"span\",{style:{display:\"inline-block\",marginTop:\"1%\"}},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_SPECIFICATIONINFO\"}))),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{float:\"right\",marginRight:\"1rem\"},onClick:function onClick(){return _this2.showSpecAndTestInfo1();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_TEST\"}))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(SpecificationInfo,{genericLabel:this.props.Login.genericLabel,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,selectedSpecification:this.props.Login.masterData.SelectedSpecification,userInfo:this.props.Login.userInfo,selectedNode:this.props.Login.masterData.selectedNode,selectedRecord:this.state.filterData,approvalRoleActionDetail:this.props.Login.masterData.ApprovalRoleActionDetail,screenName:\"IDS_SPECIFICATIONINFO\",deleteRecord:this.deleteRecord,addSpecification:this.props.addSpecification,filterData:this.state.filterData//completeSpecification={this.completeSpecification}\n,completeSpecification:this.validateTestGroupComplete,approveSpecification:this.approveSpecification,specificationReport:this.onDownloadClick,retireSpec:this.retireSpec,masterData:this.props.Login.masterData})))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CustomTab,{tabDetail:this.tabDetail(),onTabChange:this.onTabChange}))));var testDesign=/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"sm-header\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"spec-info-title\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_TEST\"})},this.props.intl.formatMessage({id:\"IDS_TEST\"})),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{position:\"absolute\",right:\"7px\",top:\"7px\"},onClick:function onClick(){return _this2.showSpecAndTestInfo();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye}),\"  \",this.props.intl.formatMessage({id:\"IDS_SPECINFO\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:this.state.testView?'p-0':'no-pad-t'},/*#__PURE__*/React.createElement(TransactionListMasterJsonView,{cardHead:167,componentBreadcrumbs:this.breadCrumbData?this.breadCrumbData.length>0?true:false:false// notSearchable={false}\n,masterList:searchedData||TestGroupTest||[]//selectedMaster={[SelectedTest]}\n,clickIconGroup:true,selectedMaster:SelectedTest!==undefined?[SelectedTest]:undefined,primaryKeyField:\"ntestgrouptestcode\",getMasterDetail:this.props.getTestGroupDetails,inputParam:getTest,additionalParam:[],mainField:\"stestname\",selectedListName:\"SelectedTest\",objectName:\"testgrouptest\",listName:\"IDS_TEST\",showStatusLink:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",subFields:testSubFields// moreField={testMoreFields}\n,moreField:this.TestGroupMorefields(testMoreFields),needValidation:false,needFilter:false,filterColumnData:this.props.filterTransactionList,searchListName:\"searchedData\",searchRef:this.searchRef,hidePaging:false,filterParam:filterParam,handlePageChange:this.handlePageChange,skip:this.state.testskip,take:this.state.testtake,pageSize:this.props.Login.settings&&this.props.Login.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_VIEW\"}),controlname:\"faCloudDownloadAlt\",objectName:\"selectedTest\",hidden:this.state.userRoleControlRights.indexOf(viewFileId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return _this2.viewTestFile(props);},needConditionalIcon:true,conditionalIconFunction:this.fileViewIcon},{title:this.props.intl.formatMessage({id:\"IDS_VIEW\"}),controlname:\"faExternalLinkAlt\",objectName:\"selectedTest\",hidden:this.state.userRoleControlRights.indexOf(viewFileId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return _this2.viewTestFile(props);},needConditionalIcon:true,conditionalIconFunction:this.linkViewIcon},{title:this.props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"testgroupspecification\",hidden:this.state.userRoleControlRights.indexOf(editTestId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return _this2.props.editTestGroupTest(\"update\",props.SelectedTest[0],_this2.props.Login.userInfo,editTestId,SelectedSpecification,_this2.state.filterData,props.masterData);}},{title:this.props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",objectName:\"testgrouptest\",hidden:this.state.userRoleControlRights.indexOf(deleteTestId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return confirmMessage.confirm(\"deleteMessage\",_this2.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this2.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this2.props.intl.formatMessage({id:\"IDS_OK\"}),_this2.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this2.deleteTest({props:props,ncontrolCode:deleteTestId,filterData:_this2.state.filterData});});}}],commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",hidden:this.state.userRoleControlRights.indexOf(addTestId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"})// data-for=\"tooltip-list-wrap\"\n,onClick:function onClick(){return _this2.props.addTestGroupTest(SelectedComponent,_this2.props.Login.userInfo,addTestId,SelectedSpecification,_this2.state.filterData,_this2.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,title:this.props.intl.formatMessage({id:\"IDS_ADD\"})})))})));var paramDesign=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ContentPanel,{hidden:!this.state.showTest,className:\"grouped-param\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(TestGroupTestTab,{paneHeight:this.state.paneHeight,testView:this.state.testView,isrulesenginerequired:this.props.Login.masterData.isrulesenginerequired&&this.props.Login.masterData.isrulesenginerequired===transactionStatus.YES?true:false,masterData:this.props.Login.masterData,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,userRoleControlRights:this.state.userRoleControlRights,esignRights:this.props.Login.userRoleControlRights,screenName:this.props.Login.screenName,openChildModal:this.props.Login.openChildModal,operation:this.props.Login.operation,loadEsign:this.props.Login.loadEsign,testGroupInputData:this.props.Login.testGroupInputData,parameterData:this.props.Login.parameterData,selectedRecord:this.state.selectedRecord,selectedsubcodedresult:this.state.selectedsubcodedresult||[],selectsubcodedelete:this.state.selectsubcodedelete,screenData:this.props.Login.screenData,ncontrolCode:this.props.Login.ncontrolCode,controlMap:this.state.controlMap,testGroupCheckList:this.props.Login.testGroupCheckList,openTemplateModal:this.props.Login.openTemplateModal,editTestGroupTest:this.props.editTestGroupTest,updateStore:this.props.updateStore,crudMaster:this.props.crudMaster,getTestGroupParameter:this.props.getTestGroupParameter,editTestGroupParameter:this.props.editTestGroupParameter,filterData:this.state.filterData,addTestGroupCodedResult:this.props.addTestGroupCodedResult,subCodedResultView:this.props.subCodedResultView,addTestGroupNumericTab:this.props.addTestGroupNumericTab,validateEsignCredential:this.props.validateEsignCredential,filterColumnData:this.props.filterColumnData,viewTestGroupCheckList:this.props.viewTestGroupCheckList,getDataForTestMaterial:this.props.getDataForTestMaterial,materialType:this.props.Login.materialType,getMaterialCategoryBasedMaterialType:this.props.getMaterialCategoryBasedMaterialType,materialCategoryList:this.props.Login.materialCategoryList,materialList:this.props.Login.materialList,getMaterialBasedMaterialCategory:this.props.getMaterialBasedMaterialCategory,getTestGroupMaterial:this.props.getTestGroupMaterial,getDataForEditTestMaterial:this.props.getDataForEditTestMaterial,dataState:this.state.clinicalspecDataState,dataStateChange:this.specDataStateChange,getTestGroupRulesEngineAdd:this.getTestGroupRulesEngineAdd,settings:this.props.Login.settings,skip:this.state.testskip,take:this.state.testtake,getEditTestGroupRulesEngine:this.props.getEditTestGroupRulesEngine,getSelectedTestGroupRulesEngine:this.props.getSelectedTestGroupRulesEngine,ConfirmDeleteRule:this.ConfirmDeleteRule,approveVersion:function approveVersion(masterdata,nflag){return _this2.approveVersion(masterdata,nflag);},openflowview:function openflowview(props){return _this2.openflowview(props);},handlePageChangeRuleEngine:function handlePageChangeRuleEngine(event){return _this2.handlePageChangeRuleEngine(event);},skipRulesEngine:this.state.skipRulesEngine,takeRulesEngine:this.state.takeRulesEngine,viewOutcome:function viewOutcome(props){return _this2.viewOutcome(props);},filterParamRulesEngine:filterParamRulesEngine,filterTransactionList:this.props.filterTransactionList,saveExecutionOrder:function saveExecutionOrder(props){return _this2.props.saveExecutionOrder(props,_this2.props.Login.masterData,_this2.props.Login.userInfo);}//ALPD-4984--Added by Vignesh R(10-04-2025)-->Test group: Copy Rules engine\n,copyVersion:function copyVersion(masterData,ncontrolCode){return _this2.props.getCopyValues(masterData,ncontrolCode,_this2.props.Login.userInfo,_this2.state.filterData);},getProductCategory:this.props.Login.getProductCategory||[],getSpecificationList:this.props.Login.getSpecificationList||[],getComponentList:this.props.Login.getComponentList||[],getProductList:this.props.Login.getProductList||[],getProfileRoot:this.props.Login.getProfileRoot||[],getComponentComboServices:function getComponentComboServices(methodparam){return _this2.props.getComponentComboServices(methodparam);},getSpecificationComboServices:function getSpecificationComboServices(methodparam){return _this2.props.getSpecificationComboServices(methodparam);},getRulesTestComboServices:function getRulesTestComboServices(methodparam){return _this2.props.getRulesTestComboServices(methodparam);},getProductComboServices:function getProductComboServices(methodparam){return _this2.props.getProductComboServices(methodparam);},getProfileRootComboServices:function getProfileRootComboServices(methodparam){return _this2.props.getProfileRootComboServices(methodparam);},getRulesList:this.props.Login.getRulesList||[]}))));var mainDesign=/*#__PURE__*/React.createElement(SplitterLayout,{customClassName:this.state.testView?\"detailed-inner\":\"detailed-inner no-height \",vertical:this.state.testView?false:true,borderColor:\"#999\",primaryIndex:1,percentage:true//secondaryInitialSize={this.state.testView ? 600 : this.state.fixefScrollHeight}\n,secondaryInitialSize:37,primaryMinSize:30,secondaryMinSize:37},testDesign,paramDesign);// const testDesign = this.state.testView ?\n//     <SplitterLayout\n//         customClassName=\"detailed-inner\"\n//         borderColor=\"#999\"\n//         primaryIndex={1}>\n//         {tempDesign}{paramDesign}\n//     </SplitterLayout>\n//     :\n//     <SplitterLayout\n//         customClassName=\"detailed-inner no-height\"\n//         vertical\n//         borderColor=\"#999\"\n//         primaryIndex={1}\n//         // onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\n//         secondaryInitialSize={this.state.fixefScrollHeight}\n//     >\n//         <ContentPanel>\n//             {tempDesign}\n//         </ContentPanel>\n//         {paramDesign}\n//     </SplitterLayout>\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-4 screen-height-window\"},this.breadCrumbData&&this.breadCrumbData.length>0&&/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData}),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height sticky_head_parent\",ref:function ref(parentHeight){_this2.parentHeight=parentHeight;}},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",primaryIndex:1,percentage:true,secondaryInitialSize:30//customClassName=\"fixed_list_height\"\n},/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(this.state.showModalBg?'show_modal_bg fixed_list_height':'fixed_list_height')},/*#__PURE__*/React.createElement(\"div\",{className:\"sticky_head\"},/*#__PURE__*/React.createElement(SearchAdd,{className:\"border fixed_ico_list title_grp_custom\"},/*#__PURE__*/React.createElement(\"h4\",null,this.props.intl.formatMessage({id:\"IDS_PROFILETREE\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"icon_group_right_aligned\"},/*#__PURE__*/React.createElement(AdvFilter,{filterComponent:[{\"IDS_SAMPLEFILTER\":/*#__PURE__*/React.createElement(SampleFilter,{genericLabel:this.props.Login.genericLabel,userInfo:this.props.Login.userInfo,sampleType:this.state.sampleType,treeVersionTemplate:this.state.treeVersionTemplate,productCategory:this.state.productCategory,product:this.state.product,projectType:this.state.projectType,project:this.state.project,onFilterComboChange:this.onFilterComboChange,tempFilterData:this.state.tempFilterData}),needActionStrip:false}],onFilterSubmit:this.onFilterSumbit,showModalBg:function showModalBg(e){return _this2.setState({showModalBg:e});}}),/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right icon-group-wrap\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue mr-1\",role:\"button\",hidden:this.state.userRoleControlRights.indexOf(addTreeId)===-1,onClick:function onClick(){return _this2.props.createTree(_this2.state.filterData,_this2.props.Login.userInfo,_this2.props.Login.masterData,addTreeId);},\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"})//  data-for=\"tooltip-list-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr0 mr-1\",name:\"edittestname\",hidden:this.state.userRoleControlRights.indexOf(editTreeId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})//  data-for=\"tooltip-list-wrap\"\n,onClick:function onClick(){return _this2.props.editTree(\"update\",selectedNode,_this2.props.Login.userInfo,editTreeId,_this2.state.filterData,_this2.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteLink\",hidden:this.state.userRoleControlRights.indexOf(deleteTreeId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"})// data-for=\"tooltip-list-wrap\"\n,className:\"btn btn-circle outline-grey \",onClick:function onClick(){return _this2.ConfirmDelete(_objectSpread({},deleteTree));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-1 p-0\",variant:\"link\",onClick:function onClick(){return _this2.reloadData();}// data-for=\"tooltip-list-wrap\"\n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})},/*#__PURE__*/React.createElement(RefreshIcon,{className:\"custom_icons\"})))))),/*#__PURE__*/React.createElement(\"div\",{className:\"sticky_head_scroll_body\",style:{\"height\":this.state.parentHeight}},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(FormTreeMenu,{data:this.props.Login.masterData.AgaramTree,hasSearch:false,handleTreeClick:this.onTreeClick,initialOpenNodes:OpenNodes,focusKey:FocusKey||\"\",activeKey:ActiveKey||\"\"}),/*#__PURE__*/React.createElement(TransationListMaster,{notSearchable:true,titleHead:this.props.intl.formatMessage({id:\"IDS_SPECIFICATION\"}),titleClasses:\"title_grp_custom fixed_ico_list\",masterList:TestGroupSpecification||[],selectedMaster:[SelectedSpecification],needMultiSelect:false,primaryKeyField:\"nallottedspeccode\",getMasterDetail:function getMasterDetail(spec){return _this2.props.getComponentBySpecId(_objectSpread(_objectSpread({},getComponent),{},{selectedRecord:spec,historyDataState:_this2.state.historyDataState}),_this2.props.Login.masterData,_this2.searchRef);},mainField:\"sspecname\",selectedListName:\"testgroupspecification\",objectName:\"testgroupspecification\",listName:\"IDS_SPECIFICATION\",onFilterSumbit:this.onFilterSumbit,subFields:this.specSubField,actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"testgroupspecification\",hidden:this.state.userRoleControlRights.indexOf(editSpecId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return _this2.props.addSpecification(\"update\",_objectSpread(_objectSpread({},editSpecParam),props),editSpecId);}},{title:this.props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",objectName:\"testgroupspecification\",hidden:this.state.userRoleControlRights.indexOf(deleteSpecId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return confirmMessage.confirm(\"deleteMessage\",_this2.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this2.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this2.props.intl.formatMessage({id:\"IDS_OK\"}),_this2.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this2.deleteSpecRecord(_objectSpread(_objectSpread({props:props},specDeleteParam),{},{selectedRecord:SelectedSpecification,ncontrolCode:deleteSpecId}));});}}],needFilter:false,commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",hidden:this.state.userRoleControlRights.indexOf(addSpecId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"})//  data-for=\"tooltip-list-wrap\"\n,onClick:function onClick(){return _this2.props.addSpecification(\"create\",_objectSpread({},addSpecParam),addSpecId,_this2.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus// title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\n}))),hideSearch:false,hidePaging:true}),this.props.Login.masterData.filterData&&this.props.Login.masterData.filterData.nproductcatcode.item.nmaterialtypecode===MaterialType.IQCSTANDARDMATERIALTYPE?\"\"://{\nSelectedSpecification&&SelectedSpecification.ncomponentrequired===transactionStatus.YES&&/*#__PURE__*/React.createElement(TransationListMaster,{notSearchable:true,titleHead:this.props.Login.genericLabel&&this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],titleClasses:\"title_grp_custom fixed_ico_list\",masterList:TestGroupSpecSampleType||[],selectedMaster:[SelectedComponent],needMultiSelect:false,primaryKeyField:\"nspecsampletypecode\",getMasterDetail:function getMasterDetail(event){return _this2.componentRowClick(event);},mainField:\"scomponentname\",selectedListName:\"testgroupspecsampletype\",objectName:\"testgroupspecsampletype\",listName:this.props.Login.genericLabel&&this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_DELETE\"}),// data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\ncontrolname:\"faTrashAlt\",objectName:\"testgroupspecsampletype\",hidden:this.state.userRoleControlRights.indexOf(deleteComponentId)===-1,inputData:{masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo},onClick:function onClick(props){return confirmMessage.confirm(\"deleteMessage\",_this2.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this2.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this2.props.intl.formatMessage({id:\"IDS_OK\"}),_this2.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this2.deleteMultipleRecord({props:props,ncontrolCode:deleteComponentId});});}}],commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",hidden:this.state.userRoleControlRights.indexOf(addComponentId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"})//  data-for=\"tooltip-list-wrap\"\n// title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\n,onClick:function onClick(){return _this2.props.addComponent(SelectedSpecification,_this2.props.Login.userInfo,addComponentId,_objectSpread(_objectSpread({},_this2.props.Login.masterData),{},{nsampletypecode:_this2.state.filterData.nsampletypecode}),_this2.props.Login.genericLabel);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus// title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} \n}))),hidePaging:true})//}\n))),/*#__PURE__*/React.createElement(React.Fragment,null,this.state.testView?/*#__PURE__*/React.createElement(React.Fragment,null,specDesign,this.state.showTest?/*#__PURE__*/React.createElement(\"div\",null,mainDesign):\"\"):/*#__PURE__*/React.createElement(PerfectScrollbar,null,specDesign,this.state.showTest?/*#__PURE__*/React.createElement(\"div\",null,mainDesign):\"\")))))),/*#__PURE__*/React.createElement(ModalShow,{modalShow:this.props.Login.showAlertGrid,modalTitle:this.props.Login.showParameterGrid?\"IDS_VIEWPARAMETER\":this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?this.props.intl.formatMessage({id:\"IDS_ADDITIONALINFOREQURIED\"}):'',closeModal:this.closeModalShowPredefAlert,onSaveClick:this.onModalSavePredefAlert,removeCancel:this.props.Login.showParameterGrid?false:this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?true:false,needSubmit:this.props.Login.showParameterGrid?false:this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?true:false,needSave:this.props.Login.showParameterGrid?true:this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?\"\":true,selectedRecord:this.state.selectedRecord||{},size:this.props.Login.showParameterGrid?\"lg\":this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?\"\":'lg',showAlertMsg:this.props.Login.showAlertForPredefined?true:false,modalBody:this.props.Login.showParameterGrid?/*#__PURE__*/React.createElement(DataGrid,{key:\"testsectionkey\",primaryKeyField:\"ntestgrouptestparametercode\",dataResult:this.props.Login.masterData.ParameterRulesEngine&&process(sortData(this.props.Login.masterData.ParameterRulesEngine,\"descending\",\"ntestgrouptestparametercode\")||[],this.state.dataStateChangeViewParameter?this.state.dataStateChangeViewParameter:{skip:0,take:10}),dataState:this.state.dataStateChangeViewParameter?this.state.dataStateChangeViewParameter:{skip:0,take:10},dataStateChange:this.dataStateChangeViewParameter,extractedColumnList:[{\"idsName\":\"IDS_PARAMETERNAME\",\"dataField\":\"sparametersynonym\",\"width\":\"200px\"},{\"idsName\":\"IDS_RESULT\",\"dataField\":\"sfinal\",\"width\":\"200px\"}// { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"200px\" } \n],controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,pageable:true,scrollable:'scrollable',hideColumnFilter:true,selectedId:0,activeTabName:\"IDS_Test\",gridHeight:'400px'}):this.props.Login.additionalInfoView?this.state.selectedRecord['additionalResultData']:this.props.Login.showAlertForPredefined?/*#__PURE__*/React.createElement(ResultEntryPredefinedComments,{onlyAlertMsgAvailable:this.props.Login.onlyAlertMsgAvailable,salertmessage:this.props.Login.masterData['salertmessage'],showMultiSelectCombo:this.props.Login.showMultiSelectCombo,testgrouptestpredefsubresultOptions:this.props.Login.masterData.testgrouptestpredefsubresultOptions||[],selectedRecord:this.state.selectedRecord||{},onInputChange:this.onInputChange,onComboChange:this.onComboChange}):''}),this.props.Login.openModal&&this.props.Login.screenName&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,className:this.props.Login.screenName===\"IDS_VIEWRULE\"?\"wide-popup\":\"\",operation:this.props.Login.screenName===\"IDS_VIEWRULE\"||this.props.Login.screenName===\"IDS_VIEWOUTCOME\"?\"\":this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName===\"IDS_VIEWRULE\"||this.props.Login.screenName===\"IDS_VIEWOUTCOME\"?this.props.intl.formatMessage({id:this.props.Login.screenName})+\" - \"+this.props.Login.masterData.SelectedTest.stestsynonym:this.props.Login.screenName,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign//ALPD-5444 Test Group - Copy the spec in test group and do save continue loading issue occurs.\n//ATE234 janakumar ALPD-5546All Master screen -> Copy & File remove the save&continue\n,showSaveContinue:this.props.Login.operation===\"copy\"?false:this.props.Login.screenName===\"IDS_SPECIFICATION\"||this.props.Login.screenName===\"IDS_SPECFILE\"?this.props.Login.loadEsign?false:true:false,onSaveClick:this.onSaveClick,hideSave:this.props.Login.screenName===\"IDS_VIEWRULE\"||this.props.Login.screenName===\"IDS_VIEWOUTCOME\"||this.props.Login.screenName===\"IDS_SUBCODERESULT\"?true:false,size:this.props.Login.screenName===\"IDS_VIEWRULE\"||this.props.Login.screenName===\"IDS_VIEWOUTCOME\"?'xl':\"lg\",selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.screenName===\"IDS_SPECFILE\"?this.findMandatoryFields(this.props.Login.screenName,this.state.selectedRecord):this.props.Login.screenName===\"IDS_SPECIFICATION\"?this.props.Login.operation===\"copy\"?specCopyMandatoryFields:specMandatoryFields//ALPD-4944, Added condition to read which mandatory records\n:this.props.Login.screenName===this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]?compMandatoryFields:this.props.Login.screenName===\"IDS_EDITTESTGROUPTEST\"?editTestMandatoryFields:this.props.Login.screenName===\"IDS_TEST\"?addTestMandatoryFields:this.props.Login.screenName===\"IDS_PROFILETREE\"||this.props.Login.screenName===\"IDS_EDITTREE\"?this.props.Login.treeMandatoryFields:[],addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName===\"IDS_SPECIFICATION\"?/*#__PURE__*/React.createElement(AddTestGroupSpecification,{genericLabel:this.props.Login.genericLabel,userInfo:this.props.Login.userInfo,selectedRecord:this.state.selectedRecord||{},timeZoneList:this.props.Login.timeZoneList,onInputOnChange:this.onInputOnChange,handleDateChange:this.handleDateChange,onComboChange:this.onComboChange,screenName:this.props.Login.screenName,operation:this.props.Login.operation,nsampletypecode:this.props.Login.masterData.selectedNode.nsampletypecode,settings:this.props.Login.settings,tempFilterData:this.state.tempFilterData//ALPD-5529--Vignesh R(06-03-2025)-->Test group screen -> Profile showing wrongly in specific scenario.\n,filterData:this.props.Login.masterData.filterData//For copy action --ALPD-4099 ,work done by Dhanushya R I\n,focusKey:// this.props.Login.masterData && this.props.Login.masterData.selectedRecordCopy ? this.props.Login.masterData.selectedRecordCopy.CopyFocusKey :\nthis.state.selectedRecord.CopyFocusKey||\"\",activeKey:// this.props.Login.masterData && this.props.Login.masterData.selectedRecordCopy ? this.props.Login.masterData.selectedRecordCopy.CopyActiveKey :\nthis.state.selectedRecord.CopyActiveKey||\"\",copyProfileName:this.state.selectedRecord.selectedCopyProfileName,onCopyTreeClick:this.onCopyTreeClick,initialOpenNodes:CopyOpenNodes||OpenNodes,data:this.props.Login.masterData.AgaramTree//For copy action --ALPD-4099 ,work done by Dhanushya R I\n,Copydata:this.props.Login.masterData.selectedRecordCopy&&this.props.Login.masterData.selectedRecordCopy.AgaramTree,masterData:this.props.Login.masterData,productCategory:this.state.productCategory,product:this.state.product,changeProductOrProductCategory:this.props.getSpecDetailsForCopy,initialProfile:this.props.Login.masterData&&this.props.Login.masterData.selectedNode&&this.props.Login.masterData.selectedNode.sleveldescription}):this.props.Login.screenName===this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]?/*#__PURE__*/React.createElement(AddTestGroupTest,{genericLabel:this.props.Login.genericLabel,userInfo:this.props.Login.userInfo,selectedRecord:this.state.selectedRecord||{},testGroupInputData:this.props.Login.testGroupInputData,screenName:this.props.Login.screenName,onComboChange:this.onComboChange,onFilterComboChange:this.onFilterComboChange}):this.props.Login.screenName===\"IDS_SUBCODERESULT\"?/*#__PURE__*/React.createElement(ViewSubCodedResult,{selectedRecord:this.state.selectedsubcoderesult||{},selectedsubcoderesult:this.props.Login.selectedsubcoderesult||[],screenName:this.props.Login.screenName,onComboChange:this.onComboChange,onFilterComboChange:this.onFilterComboChange}):this.props.Login.screenName===\"IDS_PROFILETREE\"?/*#__PURE__*/React.createElement(AddProfileTree,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,treetempTranstestGroup:this.props.Login.TreetempTranstestGroup}):this.props.Login.screenName===\"IDS_SPECFILE\"?/*#__PURE__*/React.createElement(AddFile,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,actionType:this.state.actionType,onDrop:this.onDropSpecFile,deleteAttachment:this.deleteAttachment,linkMaster:this.props.Login.linkMaster,editFiles:this.props.Login.editFiles,maxSize:20,maxFiles:this.props.Login.operation===\"update\"?1:1,multiple:this.props.Login.operation===\"update\"?false:true,label:this.props.intl.formatMessage({id:\"IDS_SPECFILE\"}),hideDefaultToggle:true,name:\"specfilename\"}):this.props.Login.screenName===\"IDS_EDITTREE\"?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"sleveldescription\",label:this.state.selectedRecord.slabelname,type:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event,1);},placeholder:this.state.selectedRecord.slabelname,value:this.state.selectedRecord?this.state.selectedRecord[\"sleveldescription\"]:\"\",isMandatory:\"*\",required:true,maxLength:100}))):this.props.Login.screenName===\"IDS_TEST\"?/*#__PURE__*/React.createElement(AddTestGroupTest,{genericLabel:this.props.Login.genericLabel,userInfo:this.props.Login.userInfo,selectedRecord:this.state.selectedRecord||{},testGroupInputData:this.props.Login.testGroupInputData,screenName:this.props.Login.screenName,onComboChange:this.onComboChange,onFilterComboChange:this.onFilterComboChange}):this.props.Login.screenName===\"IDS_EDITTESTGROUPTEST\"?/*#__PURE__*/React.createElement(EditTestGroupTest,{hideQualisForms:this.props.Login.hideQualisForms,selectedRecord:this.state.selectedRecord||{},testGroupInputData:this.props.Login.testGroupInputData,onComboChange:this.onComboChange,onInputOnChange:this.onInputOnChange,onNumericInputChange:this.onNumericInputChange}):this.props.Login.screenName===\"IDS_VIEWRULE\"?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(OrgTree,{data:this.ruleflowobject(),horizontal:true,collapsable:true,expandAll:true,labelClassName:\"ruletree\"}))):this.props.Login.screenName===\"IDS_VIEWOUTCOME\"?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},this.props.Login.masterData.SelectedRulesEngine&&/*#__PURE__*/React.createElement(CustomTab,{tabDetail:this.tabDetailRulesEngine(),onTabChange:this.onTabChangeRulesEngine}))):\"\"}),this.props.Login.openPortalModal&&/*#__PURE__*/React.createElement(PortalModalSlideout,{show:this.props.Login.openPortalModal,closeModal:this.closePortalModal,screenName:this.props.intl.formatMessage({id:this.props.Login.screenName})+\" - \"+this.props.Login.masterData.SelectedTest.stestsynonym,handleSaveClick:this.save,addComponent:(this.props.Login.operation==='update'?this.state.selectedRecord['groupList']:true)&&/*#__PURE__*/React.createElement(AddTestGroupRule,{productCategoryList:this.state.ProductCategoryList||[],selectedRecord:this.state.selectedRecord||{},databaseTableList:this.props.Login.databaseTableList,tableColumnList:this.state.tableColumnList,specificationOptions:this.state.TestGroupSpecificationList||[],componentOptions:this.state.ComponentList||[],foreignTableList:this.state.foreignTableList||[],foreignTableColumnList:this.props.Login.foreignTableColumnList||[],count:this.state.count,foreignTableCount:this.state.foreignTableCount,sqlQuery:this.state.sqlQuery,userInfo:this.props.Login.userInfo,onInputChange:this.onInputChange,deleteRule:this.deleteRule,clearRule:this.clearRule,resetRule:this.resetRule,onSymbolChange:this.onSymbolChange,onRuleChange:this.onRuleChange,addRule:this.addRule,addTest:this.addTest,onConditionClick:this.onConditionClick,onMasterDataChange:this.onMasterDataChange,databaseviewList:this.props.Login.databaseviewList,addRuleList:this.props.Login.addRuleList||[],rulesOption:this.props.Login.masterData.rulesOption&&this.props.Login.masterData.rulesOption.filter(this.outComeTestsRemoveFromRules),masterdata:this.props.Login.masterdata,switchRecord:this.state.switchRecord,data:this.state.data,dataResult:this.state.dataResult||[],dataState:this.state.dataState,dataStateChange:this.dataStateChange,userRoleControlRights:this.state.userRoleControlRights,gridColumnList:this.props.Login.gridColumnList||[],queryType:this.state.queryType,addAggregateList:this.props.Login.addAggregateList||[],addOrderbyList:this.props.Login.addOrderbyList||[],addGroup:this.addGroup,addGroupList:this.props.Login.addGroupList||[],onFilterComboChange:this.onFilterComboChange,selectFields:this.props.Login.selectFields||[],SelectedProductCategory:this.props.Login.masterData.SelectedProductCategory,DiagnosticCaseList:this.props.Login.masterData.DiagnosticCaseList,GradeList:this.props.Login.masterData.GradeList,PredefinedParameterOptions:this.props.Login.masterData.PredefinedParameterOptions,siteList:this.props.Login.masterData.siteList,resultTypeList:this.props.Login.masterData.resultTypeList,isResultorOrderType:this.state.isResultorOrderType,optionsByRule:this.state.optionsByRule||this.props.Login.masterData.DiagnosticCaseList,changePropertyView:this.changePropertyView,splitChangeWidthPercentage:this.state.splitChangeWidthPercentage,activeTabIndex:this.props.Login.activeTabIndex,enablePropertyPopup:this.state.enablePropertyPopup,propertyPopupWidth:this.state.propertyPopupWidth,controlMap:this.state.controlMap,sectionDataState:this.state.sectionDataState,masterData:this.props.Login.masterData,intl:this.props.intl,addOutcomeList:this.props.Login.addOutcomeList&&this.props.Login.addOutcomeList||[],deleteOutcome:this.deleteOutcome,onmodalComboChange:this.onmodalComboChange,openModalPopup:this.props.Login.openModalPopup,closeModalShow:this.closeModalShow,modalsaveClick:this.modalsaveClick,getOutcomeDetails:this.getOutcomeDetails,addModalSite:this.addModalSite,action:this.props.Login.action,deletModalSite:this.deletModalSite,deleteModalTest:this.deleteModalTest,activeTestTab:this.props.Login.activeTestTab,testcomments:this.props.Login.testcomments,reportcomments:this.props.Login.reportcomments,addComments:this.addComments,CommentType:this.props.Login.CommentType,CommentSubType:this.props.Login.CommentSubType,isneedsgeneralcomments:this.state.isneedsgeneralcomments,predefcomments:this.props.Login.predefcomments,needoutsource:this.state.selectedRecord['needoutsource']&&this.state.selectedRecord['needoutsource']===3?true:false,openmodalsavePopup:this.props.Login.openmodalsavePopup,save:this.save,dataStateObject:this.state.dataStateObject,paneSizeChange:this.paneSizeChange,testInitiateTestCombo:this.props.Login.testInitiateTestCombo&&this.viewColumnListByRule(this.props.Login.testInitiateTestCombo),testCommentsTestCombo:this.props.Login.testCommentsTestCombo&&this.viewColumnListByRule(this.props.Login.testCommentsTestCombo),testRepeatTestCombo:this.props.Login.testRepeatTestCombo&&this.viewColumnListByRule(this.props.Login.testRepeatTestCombo),testenforceTestCombo:this.props.Login.testenforceTestCombo&&this.props.Login.testenforceTestCombo,dataStateChangetestRepeat:this.dataStateChangetestRepeat,dataStateChangetestEnforce:this.dataStateChangetestEnforce,dataStatetestEnforce:this.state.dataStatetestEnforce,dataStatetestRepeat:this.state.dataStatetestRepeat,testGroupTestParameterRulesEngine:this.props.Login.masterData.testGroupTestParameterRulesEngine||[],ParameterRulesEngine:this.props.Login.masterData.ParameterRulesEngine||[],onRuleInputChange:this.onRuleInputChange,onRuleNumericInputOnChange:this.onRuleNumericInputOnChange,onResultInputChange:this.onResultInputChange,PredefinedValues:this.props.Login.masterData.PredefinedValues||{},onGradeEvent:this.onGradeEvent,deletetestparameter:this.deletetestparameter,gradeValues:this.props.Login.masterData.GradeValues||[],modalParameterPopup:this.props.Login.modalParameterPopup||false,addParameter:this.addParameter,onInputSwitchOnChange:this.onInputSwitchOnChange,onInputSwitchChange:this.onInputSwitchChange})}));}},{key:\"findMandatoryFields\",value:function findMandatoryFields(screenName,selectedRecord){var mandyFields=[];if(screenName===\"IDS_SPECFILE\"){if(selectedRecord&&selectedRecord.nattachmenttypecode===attachmentType.LINK){mandyFields=[{\"idsName\":\"IDS_FILENAME\",\"dataField\":\"slinkfilename\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"},{\"idsName\":\"IDS_LINKNAME\",\"dataField\":\"nlinkcode\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];}else{//if (this.props.Login.operation === 'update') {\nmandyFields=[{\"idsName\":\"IDS_FILE\",\"dataField\":\"sfilename\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"}];// }\n}}else{return[];}var finalMandyFields=[];mandyFields.forEach(function(item){return item.mandatory===true&&finalMandyFields.push(item);});return finalMandyFields;}},{key:\"showSpecAndTestInfo\",value:function showSpecAndTestInfo(){this.setState({showTest:!this.state.showTest,testView:false});this.updateSpiltterLayout();}},{key:\"showSpecAndTestInfo1\",value:function showSpecAndTestInfo1(){this.setState({showTest:!this.state.showTest,testView:true});//this.updateSpiltterLayout()\n}},{key:\"ruleflowobject\",value://Rules Engine Functions Start\nfunction ruleflowobject(){var _this3=this;var object={};//const labelColor = ['#e63109', '#2fb47d', '#eaa203', '#6554c0'];\n//const labelBGColor = ['#fcd7cd', '#e5f8f1', '#fcf3dd', '#e7e6f5'];\n// const borderColor = ['#e6310', '#c6f6e4', '#fde2a4', '#cbc5f7'];\nvar groupList=this.props.Login.masterData.SelectedRulesEngine['jsondata'];var groupListJoins=this.props.Login.masterData.SelectedRulesEngine['jsonuidata']&&this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['groupListJoins'];var children=[];var parent=[];var grandparent=[];groupList.map(function(groupobject,index){if(groupobject.hasOwnProperty('button_or')){children=[];var rulesList=groupobject['button_or'];rulesList.map(function(rule,index){children.push({id:index,label:/*#__PURE__*/React.createElement(React.Fragment,null,rule['stestname'].label+\" -> \"+rule['orderresulttype'].label+\" -> \"+rule['ssymbolname'].label+\" -> \"+(rule['ndiagnosticcasecode']&&rule['ndiagnosticcasecode'].label||rule['ngradecode']&&rule['ngradecode'].label||rule['ntestgrouptestnumericcode']&&rule['ntestgrouptestnumericcode']||rule['ntestgrouptestcharcode']&&rule['ntestgrouptestcharcode']||rule['ntestgrouptestpredefcode']&&rule['ntestgrouptestpredefcode'].label))});});if(groupList.length===1?rulesList.length>1:true){parent.push({id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_OR\"})),children:children});}}if(groupobject.hasOwnProperty('button_and')){children=[];var _rulesList=groupobject['button_and'];_rulesList.map(function(rule,index){children.push({id:index,label:/*#__PURE__*/React.createElement(React.Fragment,null,rule['stestname'].label+\" -> \"+rule['orderresulttype'].label+\" -> \"+rule['ssymbolname'].label+\" -> \"+(rule['ndiagnosticcasecode']&&rule['ndiagnosticcasecode'].label||rule['ngradecode']&&rule['ngradecode'].label||rule['ntestgrouptestnumericcode']&&rule['ntestgrouptestnumericcode']||rule['ntestgrouptestcharcode']&&rule['ntestgrouptestcharcode']||rule['ntestgrouptestpredefcode']&&rule['ntestgrouptestpredefcode'].label))});});if(groupList.length===1?_rulesList.length>1:true){parent.push({id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_AND\"})),children:children});}}if(groupobject.hasOwnProperty('button_not_button_and')){children=[];var _rulesList2=groupobject['button_not_button_and'];_rulesList2.map(function(rule,index){children.push({id:index,label:/*#__PURE__*/React.createElement(React.Fragment,null,rule['stestname'].label+\" -> \"+rule['orderresulttype'].label+\" -> \"+rule['ssymbolname'].label+\" -> \"+(rule['ndiagnosticcasecode']&&rule['ndiagnosticcasecode'].label||rule['ngradecode']&&rule['ngradecode'].label||rule['ntestgrouptestnumericcode']&&rule['ntestgrouptestnumericcode']||rule['ntestgrouptestcharcode']&&rule['ntestgrouptestcharcode']||rule['ntestgrouptestpredefcode']&&rule['ntestgrouptestpredefcode'].label))});});var notarray=[{id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_AND\"})),children:children}];if(groupList.length===1?_rulesList2.length>1:true){parent.push({id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_NOT\"})),children:notarray});}}if(groupobject.hasOwnProperty('button_not_button_or')){children=[];var _rulesList3=groupobject['button_not_button_or'];_rulesList3.map(function(rule,index){children.push({id:index,label:/*#__PURE__*/React.createElement(React.Fragment,null,rule['stestname'].label+\" -> \"+rule['orderresulttype'].label+\" -> \"+rule['ssymbolname'].label+\" -> \"+(rule['ndiagnosticcasecode']&&rule['ndiagnosticcasecode'].label||rule['ngradecode']&&rule['ngradecode'].label||rule['ntestgrouptestnumericcode']&&rule['ntestgrouptestnumericcode']||rule['ntestgrouptestcharcode']&&rule['ntestgrouptestcharcode']||rule['ntestgrouptestpredefcode']&&rule['ntestgrouptestpredefcode'].label))});});var _notarray=[{id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_OR\"})),children:children}];if(groupList.length===1?_rulesList3.length>1:true){parent.push({id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_NOT\"})),children:_notarray});}}});if(groupListJoins!==undefined){groupListJoins.map(function(join,index){var parentjoins=[];if(join.hasOwnProperty('button_or')&&join['button_or']===true){var notarray=[];parentjoins.push(parent[index]);parentjoins.push(parent[index+1]);if(join.hasOwnProperty('button_not')&&join['button_not']===true){notarray=[{id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_OR\"}),\" \")// 'button_or'\n,children:parentjoins}];grandparent.push({id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_NOT\"}),\" \")// 'button_or'\n,children:notarray});}else{grandparent.push({id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_OR\"}),\" \")// 'button_or'\n,children:parentjoins});}}if(join.hasOwnProperty('button_and')&&join['button_and']===true){var _notarray2=[];parentjoins.push(parent[index]);parentjoins.push(parent[index+1]);if(join.hasOwnProperty('button_not')&&join['button_not']===true){_notarray2=[{id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_AND\"}),\" \")// 'button_or'\n,children:parentjoins}];grandparent.push({id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_NOT\"}),\" \")// 'button_or'\n,children:_notarray2});}else{grandparent.push({id:index,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},_this3.props.intl.formatMessage({id:\"IDS_AND\"}))// 'button_and'\n,children:parentjoins});}}});}object=grandparent.length>0?{id:0,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},this.props.Login.masterData.SelectedRulesEngine.srulename,\" \"),children:grandparent}:{id:0,label:/*#__PURE__*/React.createElement(\"div\",{className:\"btn btn-primary\"},this.props.Login.masterData.SelectedRulesEngine.srulename,\" \"),children:parent.length!==0?parent:children};return object;}},{key:\"handleClickDelete\",value:function handleClickDelete(masterData,ncontrolcode//, modalName\n){var fieldArray=[];var inputParam={methodUrl:\"TestGroupRulesEngine\",classUrl:\"testgrouprulesengine\",inputData:{\"ntestgrouptestcode\":this.props.Login.masterData.SelectedTest.ntestgrouptestcode,\"ntestgrouprulesenginecode\":this.props.Login.masterData.SelectedRulesEngine.ntestgrouprulesenginecode,\"userinfo\":this.props.Login.userInfo,\"selectedValueForAudit\":{sproductcatname:this.state.filterData.nproductcatcode&&this.state.filterData.nproductcatcode.label||'NA',sproductname:this.state.filterData.nproductcode&&this.state.filterData.nproductcode.label||'NA',sspecname:this.props.Login.masterData.SelectedSpecification.sspecname||'NA',scomponentname:this.props.Login.masterData.SelectedComponent.scomponentname||'NA',stestsynonym:this.props.Login.masterData.SelectedTest.stestsynonym||'NA',sleveldescription:this.props.Login.masterData.selectedNode.sleveldescription||'NA',srulename:this.props.Login.masterData.SelectedRulesEngine.srulename}},operation:\"delete\",//postParam,\ndisplayName:\"RulesEngine\"};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},// [modalName]: true,\noperation:'delete',screenName:\"IDS_RULESENGINE\",id:\"RulesEngine\"}};this.props.updateStore(updateInfo);}else{this.props.crudMaster(inputParam,masterData,undefined);}}},{key:\"approveVersion\",value:function approveVersion(masterData,nflag,ncontrolcode//, modalName\n){if(masterData['RulesEngine']&&masterData['RulesEngine'].length>0){var fieldArray=[];var inputParam={methodUrl:\"TestGroupRulesEngine\",classUrl:\"testgrouprulesengine\",inputData:{\"ntestgrouptestcode\":this.props.Login.masterData.SelectedTest.ntestgrouptestcode,\"ntestgrouprulesenginecode\":this.props.Login.masterData.SelectedRulesEngine.ntestgrouprulesenginecode,\"userinfo\":this.props.Login.userInfo,nflag:nflag,\"selectedValueForAudit\":{sproductcatname:this.state.filterData.nproductcatcode&&this.state.filterData.nproductcatcode.label||'NA',sproductname:this.state.filterData.nproductcode&&this.state.filterData.nproductcode.label||'NA',sspecname:this.props.Login.masterData.SelectedSpecification.sspecname||'NA',scomponentname:this.props.Login.masterData.SelectedComponent.scomponentname||'NA',stestsynonym:this.props.Login.masterData.SelectedTest.stestsynonym||'NA',sleveldescription:this.props.Login.masterData.selectedNode.sleveldescription||'NA',srulename:this.props.Login.masterData.SelectedRulesEngine.srulename}},operation:\"approve\",//postParam,\ndisplayName:\"RulesEngine\"};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},// [modalName]: true,\noperation:'approve',screenName:\"IDS_RULESENGINE\",id:\"RulesEngine\"}};this.props.updateStore(updateInfo);}else{this.props.crudMaster(inputParam,masterData,undefined);}}else{if(nflag==1){toast.warn(this.props.intl.formatMessage({id:\"IDS_SELECTRULETOAPPROVE\"}));}else{toast.warn(this.props.intl.formatMessage({id:\"IDS_SELECTRULETORETIRE\"}));}}}},{key:\"clearSelectedRule\",value:function clearSelectedRule(selectedRecord,index){selectedRecord[\"sinputname_\"+index]&&delete selectedRecord[\"sinputname_\"+index];selectedRecord[\"ssymbolname_\"+index]&&delete selectedRecord[\"ssymbolname_\"+index];selectedRecord[\"snumericinput_\"+index]&&delete selectedRecord[\"snumericinput_\"+index];selectedRecord[\"columnname_\"+index]&&delete selectedRecord[\"columnname_\"+index];selectedRecord[\"snumericinputtwo_\"+index]&&delete selectedRecord[\"snumericinputtwo_\"+index];selectedRecord[\"dateinput_\"+index]&&delete selectedRecord[\"dateinput_\"+index];selectedRecord[\"dateinputtwo_\"+index]&&delete selectedRecord[\"dateinputtwo_\"+index];}},{key:\"TestGroupMorefields\",value://ALPD-3418\nfunction TestGroupMorefields(testMoreFields){testMoreFields=this.props.Login.hideQualisForms&&this.props.Login.hideQualisForms.findIndex(function(item){return item.nformcode===formCode.TESTPACKAGE;})===-1?testMoreFields:testMoreFields=testMoreFields&&testMoreFields.filter(function(item){return item[1]!=='IDS_TESTPACKAGE';});return testMoreFields;}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(filterData){if(filterData&&Object.values(filterData).length>0&&filterData.nsampletypecode&&filterData.nsampletypecode.item){// if (filterData.nsampletypecode && filterData.nproductcatcode \n//     && filterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES \n//     && filterData.nsampletypecode.item.ncategorybasedflowrequired == transactionStatus.NO) \nif(filterData.nsampletypecode&&filterData.nsampletypecode.item.ncategorybasedflowrequired==transactionStatus.YES?true:filterData.nproductcatcode&&filterData.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES?true:false){this.breadCrumbData=[{\"label\":\"IDS_SAMPLETYPE\",\"value\":filterData.nsampletypecode?filterData.nsampletypecode.label:\"\"},{\"label\":filterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY?this.props.Login.genericLabel&&this.props.Login.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]:filterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY?\"IDS_INSTRUMENTCATEGORY\":filterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY?\"IDS_MATERIALCATEGORY\":\"\",\"value\":filterData.nproductcatcode?filterData.nproductcatcode.label:\"\"},{\"label\":\"IDS_TREETEMPLATEVERSION\",\"value\":filterData.ntreeversiontempcode?filterData.ntreeversiontempcode.label:\"\"}];if(filterData.nsampletypecode.value===SampleType.PROJECTSAMPLETYPE){if(filterData.nsampletypecode.item.nprojectspecrequired===transactionStatus.YES){this.breadCrumbData.push({\"label\":\"IDS_PROJECTTYPE\",\"value\":filterData.nprojecttypecode?filterData.nprojecttypecode.label:\"\"},{\"label\":\"IDS_PROJECT\",\"value\":filterData.nprojectmastercode?filterData.nprojectmastercode.label:\"\"});}}}else{this.breadCrumbData=[{\"label\":\"IDS_SAMPLETYPE\",\"value\":filterData.nsampletypecode?filterData.nsampletypecode.label:\"\"},{\"label\":filterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY?this.props.Login.genericLabel&&this.props.Login.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]:filterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY?\"IDS_INSTRUMENTCATEGORY\":filterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY?\"IDS_MATERIALCATEGORY\":\"\",\"value\":filterData.nproductcatcode?filterData.nproductcatcode.label:\"\"},{\"label\":filterData.nsampletypecode.item.nformcode===formCode.PRODUCTCATEGORY?this.props.Login.genericLabel&&this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]:filterData.nsampletypecode.item.nformcode===formCode.INSTRUMENTCATEGORY?\"IDS_INSTRUMENT\":filterData.nsampletypecode.item.nformcode===formCode.MATERIALCATEGORY?\"IDS_MATERIAL\":\"\",\"value\":filterData.nproductcode?filterData.nproductcode.label:\"\"},{\"label\":\"IDS_TREETEMPLATEVERSION\",\"value\":filterData.ntreeversiontempcode?filterData.ntreeversiontempcode.label:\"\"}];if(filterData.nsampletypecode.value===SampleType.PROJECTSAMPLETYPE){if(filterData.nsampletypecode.item.nprojectspecrequired===transactionStatus.YES){this.breadCrumbData.push({\"label\":\"IDS_PROJECTTYPE\",\"value\":filterData.nprojecttypecode?filterData.nprojecttypecode.label:\"\"},{\"label\":\"IDS_PROJECT\",\"value\":filterData.nprojectmastercode?filterData.nprojectmastercode.label:\"\"});}}}}else{this.breadCrumbData=[{\"label\":\"IDS_SAMPLETYPE\",\"value\":filterData&&filterData.nsampletypecode?filterData.nsampletypecode.label:\"\"}];}}},{key:\"updateSpiltterLayout\",value:function updateSpiltterLayout(){var _this4=this;if(this.myRef&&this.myRef.current&&this.myRef.current.clientHeight+20!==this.state.fixefScrollHeight){this.setState({fixefScrollHeight:this.myRef.current.clientHeight+20,disableSplit:true});//console.log(this.myRef.current.clientHeight)\nsetTimeout(function(){_this4.setState({disableSplit:false});});}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps,previousState){var selectedRecord=this.state.selectedRecord;var selectedsubcodedresult=this.state.selectedsubcodedresult;var selectsubcodedelete=this.state.selectsubcodedelete;var filterData=this.state.filterData||{};var isStateChanged=false;var activeTabIndex=this.props.Login.activeTabIndex||0;var activeTabId=this.props.Login.activeTabId||false;var selectedRecordCopy=this.props.Login.masterData.selectedRecordCopy;//let CopyActiveKey = this.state.selectedRecord && this.state.selectedRecord.CopyActiveKey ? this.state.selectedRecord.CopyActiveKey:\"\";\n//let CopyFocusKey =  this.state.selectedRecord && this.state.selectedRecord.CopyFocusKey ? this.state.selectedRecord.CopyFocusKey:\"\";\nthis.updateSpiltterLayout();var tempFilterData=this.state.tempFilterData||{};if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;// if(CopyActiveKey!==\"\")\n// {\n// selectedRecord.CopyActiveKey=CopyActiveKey;\n// selectedRecord.CopyFocusKey=CopyFocusKey;\n// }\nisStateChanged=true;}if(this.props.Login.selectedsubcodedresult!==previousProps.Login.selectedsubcodedresult){selectedsubcodedresult=this.props.Login.selectedsubcodedresult;//selectedsubcodedresult = this.state.selectedsubcodedresult;\nisStateChanged=true;}if(this.props.Login.selectsubcodedelete!==previousProps.Login.selectsubcodedelete){selectsubcodedelete=this.props.Login.selectsubcodedelete;//selectedsubcodedresult = this.state.selectedsubcodedresult;\nisStateChanged=true;}if(this.props.Login.activeTabIndex!==previousProps.Login.activeTabIndex||this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.activeTabIndex!==previousProps.Login.activeTabIndex){activeTabIndex=this.props.Login.activeTabIndex;activeTabId=this.props.Login.activeTabId;isStateChanged=true;// this.setState({\n//     activeTabIndex,\n//     activeTabId\n// });\n}}if(this.props.Login.tempFilterData!==previousProps.Login.tempFilterData){tempFilterData=this.props.Login.tempFilterData||{};isStateChanged=true;}var sampleType=this.state.sampleType||[];if(this.props.Login.masterData.SampleType!==previousProps.Login.masterData.SampleType){var sampleTypeMap=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",\"nsorter\",\"ascending\",false);sampleType=sampleTypeMap.get(\"OptionList\");tempFilterData[\"nsampletypecode\"]=sampleType.length?sampleType[0]:\"\";isStateChanged=true;}var productCategory=this.state.productCategory||[];if(this.props.Login.masterData.ProductCategory!==previousProps.Login.masterData.ProductCategory){var productCatMap=constructOptionList(this.props.Login.masterData.ProductCategory||[],\"nproductcatcode\",\"sproductcatname\",\"nproductcatcode\",\"ascending\",false);productCategory=productCatMap.get(\"OptionList\");tempFilterData[\"nproductcatcode\"]=productCategory.length>0?productCategory[0]:\"\";isStateChanged=true;}var product=this.state.product||[];if(this.props.Login.masterData.Product!==previousProps.Login.masterData.Product){var productMap=constructOptionList(this.props.Login.masterData.Product||[],\"nproductcode\",\"sproductname\",\"nproductcode\",\"ascending\",false);product=productMap.get(\"OptionList\");tempFilterData[\"nproductcode\"]=product.length>0?product[0]:undefined;isStateChanged=true;}var projectType=this.state.projectType||[];if(this.props.Login.masterData.ProjectTypeList!==previousProps.Login.masterData.ProjectTypeList){var projectTypeMap=constructOptionList(this.props.Login.masterData.ProjectTypeList||[],\"nprojecttypecode\",\"sprojecttypename\",\"nprojecttypecode\",\"ascending\",false);projectType=projectTypeMap.get(\"OptionList\");tempFilterData[\"nprojecttypecode\"]=projectType.length>0?projectType[0]:undefined;isStateChanged=true;}var project=this.state.project||[];if(this.props.Login.masterData.ProjectMasterList!==previousProps.Login.masterData.ProjectMasterList){var projectMasterMap=constructOptionList(this.props.Login.masterData.ProjectMasterList||[],\"nprojectmastercode\",\"sprojectcode\",\"nprojectmastercode\",\"ascending\",false);project=projectMasterMap.get(\"OptionList\");tempFilterData[\"nprojectmastercode\"]=project.length>0?project[0]:undefined;isStateChanged=true;}var treeVersionTemplate=this.state.treeVersionTemplate||[];if(this.props.Login.masterData.TreeVersionTemplate!==previousProps.Login.masterData.TreeVersionTemplate){var templateMap=constructOptionList(this.props.Login.masterData.TreeVersionTemplate||[],\"ntreeversiontempcode\",\"sversiondescription\",\"ntreeversiontempcode\",\"ascending\",false);treeVersionTemplate=templateMap.get(\"OptionList\");tempFilterData[\"ntreeversiontempcode\"]=treeVersionTemplate.length>0?treeVersionTemplate[treeVersionTemplate.length-1]:\"\";isStateChanged=true;}// if (this.props.Login.masterData.TestGroupTestParameter && this.props.Login.masterData.TestGroupTestParameter !== previousProps.Login.masterData.TestGroupTestParameter) {\n//     sortData(this.props.Login.masterData.TestGroupTestParameter, \"ascending\", \"nsorter\");\n// }\n// if (this.props.Login.masterData.TestGroupTesT && this.props.Login.masterData.TestGroupTesT !== previousProps.Login.masterData.TestGroupTesT) {\n//     sortData(this.props.Login.masterData.TestGroupTesTest, \"ascending\", \"nsorter\");\n// }\nvar userRoleControlRights=this.state.userRoleControlRights||[];var controlMap=this.state.controlMap||[];if(this.props.Login.userInfo&&this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var nformCode=this.props.Login.userInfo.nformcode;if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[nformCode]&&Object.values(this.props.Login.userRoleControlRights[nformCode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,nformCode);filterData=_objectSpread({},tempFilterData);this.generateBreadCrumData(filterData);}//ALPD-5529--Vignesh R(06-03-2025)-->Test group screen -> Profile showing wrongly in specific scenario.\nif(this.props.Login.masterData.filterData!==previousProps.Login.masterData.filterData){filterData=_objectSpread({},this.props.Login.masterData.filterData);this.generateBreadCrumData(filterData);isStateChanged=true;}else{this.generateBreadCrumData(filterData);}// else if (filterData !== previousState.filterData) {\n//     filterData = { ...tempFilterData };\n//     this.generateBreadCrumData(filterData);\n// }\nvar historyDataState=this.state.historyDataState;if(this.props.Login.historyDataState&&this.props.Login.historyDataState!==previousProps.Login.historyDataState){historyDataState=this.props.Login.historyDataState;isStateChanged=true;}var _this$state=this.state,testskip=_this$state.testskip,testtake=_this$state.testtake;if(this.props.Login.masterData!==previousProps.Login.masterData){testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=testtake?testtake:this.props.Login.testtake;isStateChanged=true;}var _this$state2=this.state,skipRulesEngine=_this$state2.skipRulesEngine,takeRulesEngine=_this$state2.takeRulesEngine;if(this.props.Login.masterData!==previousProps.Login.masterData){skipRulesEngine=this.props.Login.skipRulesEngine===undefined?skipRulesEngine:this.props.Login.skipRulesEngine;takeRulesEngine=takeRulesEngine?takeRulesEngine:this.props.Login.takeRulesEngine;isStateChanged=true;}if(isStateChanged){this.setState({selectedRecord:selectedRecord,selectedRecordCopy:selectedRecordCopy,tempFilterData:tempFilterData,filterData:filterData,userRoleControlRights:userRoleControlRights,controlMap:controlMap,sampleType:sampleType,productCategory:productCategory,product:product,treeVersionTemplate:treeVersionTemplate,historyDataState:historyDataState,testskip:testskip,testtake:testtake,projectType:projectType,project:project,activeTabIndex:activeTabIndex,activeTabId:activeTabId,skipRulesEngine:skipRulesEngine,takeRulesEngine:takeRulesEngine,selectedsubcodedresult:selectedsubcodedresult,selectsubcodedelete:selectsubcodedelete});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return TestGroup;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,filterTestGroup:filterTestGroup,createTree:createTree,editTree:editTree,sampleTypeOnChange:sampleTypeOnChange,getTestGroupDetails:getTestGroupDetails,validateEsignCredential:validateEsignCredential,updateStore:updateStore,addSpecification:addSpecification,getSpecification:getSpecification,addComponent:addComponent,changeTestCategory:changeTestCategory,addTestGroupTest:addTestGroupTest,editTestGroupTest:editTestGroupTest,getTestGroupParameter:getTestGroupParameter,editTestGroupParameter:editTestGroupParameter,addTestFile:addTestFile,editSpecFile:editSpecFile,getSpecificationDetails:getSpecificationDetails,addTestGroupCodedResult:addTestGroupCodedResult,getComponentBySpecId:getComponentBySpecId,filterColumnData:filterColumnData,viewAttachment:viewAttachment,viewTestGroupCheckList:viewTestGroupCheckList,getTestGroupComponentDetails:getTestGroupComponentDetails,filterTransactionList:filterTransactionList,reportSpecification:reportSpecification,retireSpecification:retireSpecification,getDataForTestMaterial:getDataForTestMaterial,getEditTestGroupRulesEngine:getEditTestGroupRulesEngine,getMaterialCategoryBasedMaterialType:getMaterialCategoryBasedMaterialType,getMaterialBasedMaterialCategory:getMaterialBasedMaterialCategory,getTestGroupMaterial:getTestGroupMaterial,getDataForEditTestMaterial:getDataForEditTestMaterial,addTestGroupNumericTab:addTestGroupNumericTab,getTestGroupRulesEngineAdd:getTestGroupRulesEngineAdd,getSelectedTestGroupRulesEngine:getSelectedTestGroupRulesEngine,getParameterforEnforce:getParameterforEnforce,getParameterRulesEngine:getParameterRulesEngine,getParameterResultValue:getParameterResultValue,subCodedResultView:subCodedResultView,saveExecutionOrder:saveExecutionOrder,getPredefinedDataRulesEngine:getPredefinedDataRulesEngine,getCopyValues:getCopyValues,generateControlBasedReport:generateControlBasedReport,getSpecDetailsForCopy:getSpecDetailsForCopy,getSpecificationComboServices:getSpecificationComboServices,getComponentComboServices:getComponentComboServices,getRulesTestComboServices:getRulesTestComboServices,getProductComboServices:getProductComboServices,getProfileRootComboServices:getProfileRootComboServices})(injectIntl(TestGroup));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/testgroup/TestGroup.jsx"],"names":["React","Component","connect","injectIntl","rsapi","toast","Row","Col","Card","Button","Nav","PerfectScrollbar","FontAwesomeIcon","faPencilAlt","faPlus","SplitterLayout","faEye","faTrashAlt","process","DataGrid","OrgTree","SlideOutModal","Esign","callService","crudMaster","filterTestGroup","createTree","editTree","getTestGroupDetails","sampleTypeOnChange","validateEsignCredential","updateStore","addSpecification","getSpecification","addComponent","changeTestCategory","addTestGroupTest","editTestGroupTest","getTestGroupParameter","editTestGroupParameter","addTestFile","editSpecFile","getSpecificationDetails","addTestGroupCodedResult","getComponentBySpecId","filterColumnData","viewAttachment","viewTestGroupCheckList","getTestGroupComponentDetails","filterTransactionList","reportSpecification","retireSpecification","getDataForTestMaterial","getMaterialCategoryBasedMaterialType","getMaterialBasedMaterialCategory","getTestGroupMaterial","getDataForEditTestMaterial","addTestGroupNumericTab","getTestGroupRulesEngineAdd","getEditTestGroupRulesEngine","getSelectedTestGroupRulesEngine","getParameterforEnforce","getParameterRulesEngine","getParameterResultValue","subCodedResultView","saveExecutionOrder","getPredefinedDataRulesEngine","getCopyValues","generateControlBasedReport","getSpecDetailsForCopy","getSpecificationComboServices","getComponentComboServices","getRulesTestComboServices","getProductComboServices","getProfileRootComboServices","constructOptionList","formatInputDate","create_UUID","deleteAttachmentDropZone","filterRecordBasedOnTwoArrays","getControlMap","onDropAttachFileList","showEsign","sortData","Lims_JSON_stringify","replaceBackSlash","TestGroupTestTab","AddTestGroupSpecification","DEFAULT_RETURN","transactionStatus","REPORTTYPE","attachmentType","formCode","designProperties","parameterType","SampleType","MaterialType","ResultEntry","AddTestGroupTest","AddProfileTree","SampleFilter","AddFile","AdvFilter","SpecificationHistory","TestGroupSpecFile","SpecificationInfo","CustomTab","TransationListMaster","FormTreeMenu","FormInput","ConfirmMessage","BreadcrumbComponent","testMoreFields","testSubFields","searchFieldList","specificationColumnList","addTestColumnList","editTestColumnList","specificationCopyColumnList","EditTestGroupTest","ContentPanel","SearchAdd","ListWrapper","ProductList","TransactionListMasterJsonView","PortalModalSlideout","AddTestGroupRule","ViewSubCodedResult","numberConversion","numericGrade","ResultEntryPredefinedComments","ModalShow","TestGroup","props","reloadData","filterData","state","Login","masterData","nsampletypecode","undefined","warn","intl","formatMessage","id","nproductcatcode","item","nformcode","PRODUCTCATEGORY","INSTRUMENTCATEGORY","MATERIALCATEGORY","nproductcode","ncategorybasedflow","NO","ncategorybasedflowrequired","ntreeversiontempcode","inputParam","inputData","userinfo","userInfo","YES","value","nprojectmastercode","historyDataState","searchRef","ConfirmDelete","obj","confirmMessage","confirm","deleteRecord","handlePageChange","event","setState","testskip","skip","testtake","take","viewTestFile","viewParam","operation","methodUrl","classUrl","ntestgroupfilecode","selectedTest","testgroupspecification","SelectedSpecification","ntestgrouptestcode","fileViewIcon","master","nlinkcode","NA","linkViewIcon","onFilterSumbit","tempFilterData","PROJECTSAMPLETYPE","nprojectspecrequired","onCopyTreeClick","selectedCopyNodeManipulationCode","selectedCopyProfileName","CopyFocusKey","CopyActiveKey","selectedRecord","onTreeClick","screenName","keyName","activeKey","key","focusKey","primaryKey","tabDetail","tabMap","Map","set","controlMap","userRoleControlRights","addFile","defaultRecord","settings","TestGroupSpecificationHistory","historyDataStateChange","dataResult","dataState","specDataStateChange","TestGroupTestClinicalSpec","clinicalspecDataState","ncontrolCode","modalName","nflag","selectedNode","treeVersionTemplateIndex","findIndex","x","templateVersionStatus","ntransactionstatus","RETIRED","napprovalstatus","DRAFT","CORRECTION","onTabChange","tabProps","updateInfo","typeName","data","componentRowClick","testgroupspecsampletype","deleteTest","deleteParam","testgrouptest","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","fetchUrl","fecthInputObject","unchangeList","loadEsign","screenData","openModal","closeModal","selectedRecordCopy","CopyOpenNodes","onInputOnChange","caseNo","optional","target","type","name","checked","indexKey","Object","keys","values","treeData","npositioncode","nlevelno","sleveldescription","ntemptranstestgroupcode","schildnode","nnextchildcode","ntemplatemanipulationcode","isreadonly","slevelformat","treetemplatemanipulation","onEsignInputOnChange","onTabChangeRulesEngine","activeTabName","tabDetailRulesEngine","jsonuidata","SelectedRulesEngine","handleExpandChange","dataStatetestinitiate","dataStateChangetestinitiateTab","childListMap","title","controlname","hidden","objectName","onClick","viewParameter","dataStateChange","childListMap2","dataStaterepeatTab","dataStateChangeRepeatTab","dataStateChangenforceTab","ntestgrouptestparametercode","dataStateObject","dataStateChangetestRepeat","dataStatetestRepeat","dataStateChangetestEnforce","dataStatetestEnforce","dataStateChangeViewParameter","dataStateChangeMain","dataResultMain","queryDataMain","dataStateMain","ConfirmDeleteRule","deleteId","length","handleClickDelete","closeModalShow","openModalPopup","modalParameterPopup","onModalSavePredefAlert","currentAlertResultCode","currentntestgrouptestpredefcode","bool","ParameterRulesEngine","some","map","Parameter","ntestgrouptestpredefsubcode","label","join","substring","showAlertGrid","closeModalShowPredefAlert","onsavevalidation","grouplist","hasAll","rules","i","j","PREDEFINED","CHARACTER","NUMERIC","every","prop","hasOwnProperty","save","siteObject","testCommentObject","reportCommentObject","PredefinedParameterOptions","testInitiateTests","testCommentsTests","reportCommentsTests","testRepeatTests","testenforceTests","testsInvolvedInRules","testsNameInvolvedInRules","action","groupList","outcomeList","addGroupList","testInitiateSiteTab","testCommentsTestsTab","reportCommentsTestsTab","SelectedTest","ruleEngineLayout","ruleEngineLayoutObject","groupRuleObject","List","push","stestname","JSON","stringify","sproductcatname","sproductname","sspecname","scomponentname","SelectedComponent","stestsynonym","srulename","displayName","info","openmodalsavePopup","onOutcomeChange","comboData","index","writtenRules","activeTabIndex","boolean","y","selectedTestRemove","outComeTestsRemoveFromRules","addTest","tabName","rulesOption","testInitiateTestCombo","testCommentsTestCombo","testRepeatTestCombo","testenforceTestCombo","filter","selectedTestTempArray","duplicatePresent","onRuleChange","fieldName","groupIndex","clearSelectedRule","nparametertypecode","onRuleInputChange","onRuleNumericInputOnChange","onMasterDataChange","isResultorOrderType","optionsByRule","DiagnosticCaseList","GradeList","addRule","viewColumnListByRule","arrayLength","viewColumnList","databaseviewList","paneSizeChange","d","splitChangeWidthPercentage","addComments","selectedParameterRulesEngine","testparameter","addModalSite","onGradeEvent","parameterResults","parameter","sresult","selectedResultGrade","ngradecode","parseFloat","parseInt","nroundingdigits","trim","onInputSwitchOnChange","enablePropertyPopup","enableAutoClick","addParameter","isServiceNeed","deletetestparameter","deleteparameter","test","parameters","tempparameters","param","removeIndex","splice","modalsaveClick","needoutsource","testInitiateTestsTemp","testCommentsTestsTemp","reportCommentsTestsTemp","testInitiateSiteTemp","testInitiateTestOptions","testCommentsTestOptions","reportCommentsTestOptions","testInitiateTestdeletedOptions","testCommentsTestdeletedOptions","reportCommentsTestdeletedOptions","npkAtestparametercode","npkBtestparametercode","npkCtestparametercode","npkDtestparametercode","isduplicate","Math","max","object","selectedntestgrouptestcode","slNo","resultData","salertmessage","RESULTSTATUS_FIO","GradeValues","concat","npKAsampletestcommentscode","nslno","ncommentsubtypecode","scommentsubtype","ncommenttypecode","scommenttype","nsampletestcommentscode","spredefinedname","scomments","sdescription","stestparametersynonym","commentsArrayIndex","siteseqnumber","isalreadyExist","nfromsitecode","ntositecode","npksitecode","sfromsitename","stositename","deletModalSite","inputparam","row","temparray","testRepeat","deleteModalTest","testRepeatTestsTab","testenforceTestsTab","testParameter","testParameterComments","onmodalComboChange","isneedsgeneralcomments","getSpecificationTestGroupRulesEngine","getComponentTestGroupRulesEngine","onResultInputChange","sfinal","sresultpredefinedname","sresultcomment","sgradename","acceptedFile","ncalculatedresult","ntestgrouptestpredefcode","spredefinedsynonym","spredefinedcomments","nneedresultentryalert","nneedsubcodedresult","ATTACHMENT","getOutcomeDetails","testParameterreportComments","showParameterGrid","childListMap1","childListMap3","keylst","viewOutcome","forEach","openflowview","handlePageChangeRuleEngine","skipRulesEngine","takeRulesEngine","addGroup","selectFields","addRuleList","addAggregateList","addOrderbyList","closePortalModal","openPortalModal","count","changePropertyView","status","activeTabId","activeTestTab","window","innerWidth","testEnforceTests","deleteRule","deleteOutcome","addOutcomeList","clearRule","sviewname","sqlQuery","resetRule","onSymbolChange","oldSelectedRecord","onInputChange","onInputSwitchChange","testcode","activeValue","list","dynamicList","onConditionClick","isgroup","changePropertyViewClose","onFilterComboChange","sampletype","productcategory","product","project","TestGroupSpecSampleType","testGroupInputData","testGroupSpecSampleType","genericLabel","slanguagetypecode","testcategory","nallottedspeccode","nprojecttypecode","projecttype","handleDateChange","dateName","dateValue","Date","onNumericInputChange","onSaveClick","saveType","formRef","clearSelectedRecordField","onSaveTree","onSaveSpecification","onSaveComponent","onSaveCopySpecification","onSaveTest","onSaveSpecFile","testArray","ntestcode","nisvisible","nisadhoctest","changeList","isSingleSelect","testgrouptestfile","testGroupFile","ntestfilecode","nattachmenttypecode","ssystemfilename","dcreateddate","nfilesize","sfilename","nstatus","ACTIVE","nsectioncode","nmethodcode","ninstrumentcatcode","ncontainertypecode","ncost","nsorter","nspecsampletypecode","nrepeatcountno","ntestpackagecode","ActiveKey","TreetempTranstestGroup","tempArray","treeTemplateManip","temp","testGroupSpec","napproveconfversioncode","sversion","ncomponentrequired","dexpirydate","ntzexpirydate","stzexpirydate","selectedspecification","ncomponentcode","genericlabel","acceptedFiles","isFileEdited","specFileArray","selectedSpecification","specFile","nspecfilecode","formData","FormData","FTP","Array","isArray","file","tempData","assign","splittedFileName","split","fileExtension","uniquefilename","size","append","slinkfilename","slinkdescription","sformname","smodulename","slanguagename","isFileupload","deleteSpecRecord","componentDataState","deleteMultipleRecord","onDropSpecFile","attachedFiles","maxSize","actionType","deleteAttachment","validateTestGroupComplete","inputValue","post","then","response","inactiveTestArray","indexOf","completeSpecification","catch","error","message","retireSpec","approvalRoleActionDetail","retireSpecId","onDownloadClick","reportSpecId","Vnallottedspeccode","specificationReport","sprimarykeyname","ncontrolcode","nregtypecode","nregsubtypecode","nreportmodulecode","nreporttypecode","CONTROLBASED","nreportdecisiontypecode","certificatetypecode","selectedComponent","testGroupTest","TestGroupTest","isQualisLite","approveSpecification","needEsign","onComboChange","schecklistversionname","validateEsign","sreason","nreasoncode","spredefinedreason","password","group","field","showTest","fixefScrollHeight","outerHeight","initialVerticalWidth","testView","paneHeight","componentColumnList","componentBreadcrumbs","breadCrumbData","createRef","specSubField","VALUE","COLOUR","myRef","parentHeight","height","clientHeight","console","log","TestGroupSpecification","OpenNodes","FocusKey","searchedData","TestGroupTestParameter","AgaramTree","getComponent","addSpecParam","editSpecParam","specDeleteParam","addSpecId","has","get","addTreeId","editTreeId","deleteTreeId","editSpecId","deleteSpecId","addComponentId","deleteComponentId","addTestId","deleteTestId","editTestId","viewFileId","deleteTree","getTest","filterParam","filterParamRulesEngine","specMandatoryFields","specCopyMandatoryFields","compMandatoryFields","editTestMandatoryFields","addTestMandatoryFields","mandatory","splitNode","treeNodeNames","nodeItem","TreeTemplateManipulation","treeItem","specDesign","display","marginTop","float","marginRight","showSpecAndTestInfo1","ApprovalRoleActionDetail","testDesign","position","right","top","showSpecAndTestInfo","TestGroupMorefields","setting","needConditionalIcon","conditionalIconFunction","paramDesign","isrulesenginerequired","openChildModal","parameterData","selectedsubcodedresult","selectsubcodedelete","testGroupCheckList","openTemplateModal","materialType","materialCategoryList","materialList","masterdata","approveVersion","getProductCategory","getSpecificationList","getComponentList","getProductList","getProfileRoot","methodparam","getRulesList","mainDesign","showModalBg","sampleType","treeVersionTemplate","productCategory","projectType","needActionStrip","e","spec","nmaterialtypecode","IQCSTANDARDMATERIALTYPE","showAlertForPredefined","additionalInfoView","onlyAlertMsgAvailable","showMultiSelectCombo","testgrouptestpredefsubresultOptions","findMandatoryFields","treeMandatoryFields","timeZoneList","selectedsubcoderesult","linkMaster","editFiles","slabelname","hideQualisForms","ruleflowobject","ProductCategoryList","databaseTableList","tableColumnList","TestGroupSpecificationList","ComponentList","foreignTableList","foreignTableColumnList","foreignTableCount","switchRecord","gridColumnList","queryType","SelectedProductCategory","siteList","resultTypeList","propertyPopupWidth","sectionDataState","testcomments","reportcomments","CommentType","CommentSubType","predefcomments","testGroupTestParameterRulesEngine","PredefinedValues","mandyFields","LINK","finalMandyFields","updateSpiltterLayout","groupListJoins","children","parent","grandparent","groupobject","rulesList","rule","notarray","parentjoins","fieldArray","ntestgrouprulesenginecode","TESTPACKAGE","current","disableSplit","setTimeout","previousProps","previousState","isStateChanged","sampleTypeMap","ProductCategory","productCatMap","Product","productMap","ProjectTypeList","projectTypeMap","ProjectMasterList","projectMasterMap","TreeVersionTemplate","templateMap","nformCode","generateBreadCrumData","masterStatus","errorCode","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport { Row, Col, Card, Button, Nav } from 'react-bootstrap';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport { faEye, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport OrgTree from 'react-org-tree';\r\n\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport {\r\n    callService, crudMaster, filterTestGroup, createTree, editTree, getTestGroupDetails, sampleTypeOnChange,\r\n    validateEsignCredential, updateStore, addSpecification, getSpecification, addComponent, changeTestCategory,\r\n    addTestGroupTest, editTestGroupTest, getTestGroupParameter, editTestGroupParameter, addTestFile,\r\n    editSpecFile, getSpecificationDetails, addTestGroupCodedResult, getComponentBySpecId, filterColumnData,\r\n    viewAttachment, viewTestGroupCheckList, getTestGroupComponentDetails, filterTransactionList, reportSpecification, retireSpecification, getDataForTestMaterial,\r\n    getMaterialCategoryBasedMaterialType, getMaterialBasedMaterialCategory, getTestGroupMaterial, getDataForEditTestMaterial, addTestGroupNumericTab, getTestGroupRulesEngineAdd,\r\n    getEditTestGroupRulesEngine, getSelectedTestGroupRulesEngine, getParameterforEnforce, getParameterRulesEngine, getParameterResultValue, subCodedResultView, saveExecutionOrder, getPredefinedDataRulesEngine,getCopyValues,\r\n    generateControlBasedReport,getSpecDetailsForCopy,getSpecificationComboServices,getComponentComboServices,getRulesTestComboServices,getProductComboServices,getProfileRootComboServices\r\n} from '../../actions'\r\nimport { constructOptionList, formatInputDate, create_UUID, deleteAttachmentDropZone, filterRecordBasedOnTwoArrays, getControlMap, onDropAttachFileList, showEsign, sortData, Lims_JSON_stringify,replaceBackSlash } from '../../components/CommonScript';\r\nimport TestGroupTestTab from './TestGroupTestTab';\r\nimport AddTestGroupSpecification from './AddTestGroupSpecification';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus, REPORTTYPE, attachmentType, formCode, designProperties,\r\n   // parameterType,SampleType, grade } from '../../components/Enumeration';\r\n   // parameterType,SampleType } from '../../components/Enumeration';\r\n    parameterType,SampleType,MaterialType , ResultEntry} from '../../components/Enumeration';\r\nimport AddTestGroupTest from './AddTestGroupTest';\r\nimport AddProfileTree from './AddProfileTree';\r\nimport SampleFilter from './SampleFilter';\r\nimport AddFile from '../testmanagement/AddFile';\r\nimport AdvFilter from '../../components/AdvFilter';\r\nimport SpecificationHistory from './SpecificationHistory';\r\nimport TestGroupSpecFile from './TestGroupSpecFile';\r\nimport SpecificationInfo from './SpecificationInfo';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport TransationListMaster from '../../components/TransactionListMaster';\r\n\r\nimport FormTreeMenu from '../../components/form-tree-menu/form-tree-menu.component';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\n\r\nimport {\r\n    testMoreFields, testSubFields, searchFieldList, specificationColumnList,\r\n    addTestColumnList, editTestColumnList, specificationCopyColumnList\r\n} from './TestGroupFields';\r\n\r\nimport EditTestGroupTest from './EditTestGroupTest';\r\nimport { ContentPanel, SearchAdd } from '../../components/App.styles';\r\nimport '../../pages/registration/registration.css';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../product/product.styled';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport PortalModalSlideout from '../../components/portal-modal/portal-modal-slideout';\r\nimport AddTestGroupRule from './AddTestGroupRule';\r\nimport ViewSubCodedResult from './ViewSubCodedResult';\r\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\r\nimport ResultEntryPredefinedComments from '../ResultEntryBySample/ResultEntryPredefinedComments';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\n\r\n\r\nclass TestGroup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const componentDataState = { skip: 0, take: 10 };\r\n        const historyDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 };\r\n        const clinicalspecDataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sgendername' }] };\r\n\r\n        this.state = {\r\n\r\n            selectedRecord: {},\r\n            filterData: {},\r\n            error: \"\",\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            componentDataState,\r\n            historyDataState,\r\n            clinicalspecDataState,\r\n            tempFilterData: {},\r\n            showTest: true,\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings ? this.props.Login.settings[12] : 5,\r\n            skipRulesEngine: 0,\r\n            takeRulesEngine: this.props.Login.settings ? this.props.Login.settings[12] : 5,\r\n            fixefScrollHeight: window.outerHeight - 400,\r\n            initialVerticalWidth: \"20vh\",\r\n            testView: true,\r\n            //paneHeight:'calc(100vh - ' +window.outerHeight-847 + 'px)'\r\n            paneHeight: 'calc(100vh -183px)',\r\n            // isCopySpecRender: true\r\n        }\r\n        this.componentColumnList = [{\r\n            \"idsName\":this.props.Login.genericLabel&& this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode],\r\n            \"dataField\": \"ncomponentcode\",\r\n            \"mandatoryLabel\": \"IDS_SELECT\",\r\n            \"mandatory\": true\r\n        },\r\n        {\r\n            \"idsName\": \"IDS_TEST\",\r\n            \"dataField\": \"ntestcode\",\r\n            \"mandatoryLabel\": \"IDS_SELECT\",\r\n            \"mandatory\": true\r\n        }\r\n    ];\r\n        this.componentBreadcrumbs = [];\r\n        this.breadCrumbData = [];\r\n        this.searchRef = React.createRef();\r\n        this.specSubField = [{ [designProperties.VALUE]: \"stransdisplaystatus\" },\r\n        { [designProperties.VALUE]: \"sapprovalstatus\", [designProperties.COLOUR]: true }];\r\n        this.myRef = React.createRef();\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    \r\n\r\n    reloadData = () => {\r\n\t//ALPD-5529--Vignesh R(06-03-2025)-->Test group screen -> Profile showing wrongly in specific scenario.\r\n        //const filterData = this.props.Login.masterData.filterData || this.state.filterData;\r\n        //ALPD-5547 Test Group-->Refreshing the screen causes the records to disappear from view.\r\n        const filterData = this.state.filterData || this.props.Login.masterData.filterData;\r\n        if (filterData.nsampletypecode === undefined) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVAILABLE\" }));\r\n        }\r\n        else if (filterData.nproductcatcode === \"\") {\r\n            if (filterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTCATEGORYNOTAVAILABLE\" }));\r\n            } else if (filterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\" }));\r\n            } else if (filterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_MATERIALCATEGORYNOTAVAILABLE\" }));\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_CATEGORYNOTAVAILABLE\" }));\r\n            }\r\n        }\r\n        else if (filterData.nproductcode === \"\" && (filterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.NO)) {\r\n            if (filterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY && filterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.NO ) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTNOTAVAILABLE\" }));\r\n            } else if (filterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTNOTAVAILABLE\" }));\r\n            } else if (filterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_MATERIALNOTAVAILABLE\" }));\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTNOTAVAILABLE\" }));\r\n            }\r\n        } else if (filterData.ntreeversiontempcode === \"\") {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\" }));\r\n        }\r\n        else {\r\n            const inputParam = {\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: filterData.nsampletypecode.item[\"nsampletypecode\"],\r\n                    nproductcatcode: filterData.nproductcatcode.item[\"nproductcatcode\"],\r\n                 //   nproductcode: filterData.nproductcode.item[\"nproductcode\"],\r\n                    nproductcode: filterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.YES ? -1 :\r\n                    filterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES ? -1 : filterData.nproductcode ? filterData.nproductcode.value : -1,\r\n                    ntreeversiontempcode: filterData.ntreeversiontempcode.item[\"ntreeversiontempcode\"],\r\n                    nprojectmastercode: filterData.nprojectmastercode !== undefined ? filterData.nprojectmastercode.item[\"nprojectmastercode\"]:-1,\r\n                    filterData,//: { ...this.props.Login.masterData.filterData }\r\n                },\r\n                historyDataState: this.state.historyDataState\r\n\r\n            }\r\n            this.props.filterTestGroup(inputParam, this.props.Login.masterData, this.searchRef);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n    \r\n    // shouldComponentUpdate (nextProps,nextState) {  \r\n    //     if(this.props.Login.operation===\"copy\" && nextProps.Login.openModal === false && this.state.isCopySpecRender === false){\r\n    //         this.setState({ isCopySpecRender: true});\r\n    //         return true;\r\n    //     }\r\n    //     if (this.props.Login.screenName === 'IDS_SPECIFICATION'\r\n    //         &&nextState.isCopySpecRender===false\r\n    //         // &&(nextState.selectedRecord.selectedCopyNodeManipulationCode !==this.state.selectedRecord.selectedCopyNodeManipulationCode)\r\n    //         ) {\r\n    //         return false;\r\n    //       }\r\n    //       else{\r\n    //         return true;\r\n    //       }\r\n    // }\r\n    render() {\r\n        \r\n        console.log(\"Screen Name need\",this.props.Login.screenName);\r\n        const { TestGroupSpecification, SelectedSpecification, SelectedTest, OpenNodes, selectedNode, FocusKey,\r\n            ActiveKey, SelectedComponent, TestGroupTest, TestGroupSpecSampleType, searchedData,\r\n            TestGroupTestParameter, CopyOpenNodes } = this.props.Login.masterData;\r\n        // const CopyOpenNodes = this.props.Login.masterData.OpenNodes;\r\n        // const deleteTree = {\r\n        //     methodUrl: \"Tree\", operation: \"delete\", inputParam: this.props.Login.inputParam,\r\n        //     userInfo: this.props.Login.userInfo, screenName: \"IDS_TREE\"\r\n        // };\r\n        if (this.props.Login.masterData && this.props.Login.masterData.AgaramTree && this.props.Login.masterData.AgaramTree.length > 0) {\r\n         this.props.Login.masterData.AgaramTree[0][\"label\"] = this.props.Login.masterData.AgaramTree[0][\"label\"] === 'root' ? \r\n         this.props.intl.formatMessage({ id: \"IDS_ROOT\" }) : this.props.Login.masterData.AgaramTree[0][\"label\"];\r\n        }\r\n        //ALPD-5173 French Lang : Test Group screen -> While select the sample type, root name is changed into English lang.\r\n       if (this.props.Login.masterData && this.props.Login.masterData.selectedRecordCopy !==undefined && this.props.Login.masterData.selectedRecordCopy &&\r\n          this.props.Login.masterData.selectedRecordCopy.AgaramTree !==undefined && this.props.Login.masterData.selectedRecordCopy.AgaramTree.length > 0) {\r\n          this.props.Login.masterData.selectedRecordCopy.AgaramTree[0][\"label\"] = this.props.Login.masterData.selectedRecordCopy.AgaramTree[0][\"label\"] === 'root' ? \r\n          this.props.intl.formatMessage({ id: \"IDS_ROOT\" }) : this.props.Login.masterData.selectedRecordCopy.AgaramTree[0][\"label\"];\r\n        }\r\n      //  const testGroupTestData = searchedData || TestGroupTest || []\r\n\r\n        if (TestGroupTestParameter) {\r\n            sortData(TestGroupTestParameter, \"ascending\", \"nsorter\");\r\n        }\r\n        // ALPD-3242 Commented sortData as tests are sorted unnecessarily everytime while clicking on the test in the tab\r\n        // if (testGroupTestData) {\r\n        //     sortData(testGroupTestData, \"descending\", \"nsorter\");\r\n        // }\r\n\r\n        const getComponent = {\r\n            screenName:this.props.Login.genericLabel && this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode], operation: \"get\", inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"TestGroupComponent\", keyName: \"testgroupspecification\"\r\n        };\r\n        const addSpecParam = { testgroupspecification: SelectedSpecification, selectedRecord: this.state.filterData, userInfo: this.props.Login.userInfo, selectedNode };\r\n        const editSpecParam = { selectedRecord: this.state.filterData, userinfo: this.props.Login.userInfo, selectedNode };\r\n        const specDeleteParam = { operation: \"delete\", methodUrl: \"Specification\", screenName: \"IDS_SPECIFICATION\", keyName: \"testgroupspecification\", filterData: this.state.filterData };\r\n        const addSpecId = this.state.controlMap.has(\"AddSpecification\") && this.state.controlMap.get(\"AddSpecification\").ncontrolcode;\r\n        const addTreeId = this.state.controlMap.has(\"AddTree\") && this.state.controlMap.get(\"AddTree\").ncontrolcode;\r\n        const editTreeId = this.state.controlMap.has(\"EditTree\") && this.state.controlMap.get(\"EditTree\").ncontrolcode;\r\n        const deleteTreeId = this.state.controlMap.has(\"DeleteTree\") && this.state.controlMap.get(\"DeleteTree\").ncontrolcode;\r\n        const editSpecId = this.state.controlMap.has(\"EditSpecification\") && this.state.controlMap.get(\"EditSpecification\").ncontrolcode;\r\n        const deleteSpecId = this.state.controlMap.has(\"DeleteSpecification\") && this.state.controlMap.get(\"DeleteSpecification\").ncontrolcode;\r\n        const addComponentId = this.state.controlMap.has(\"AddComponent\") && this.state.controlMap.get(\"AddComponent\").ncontrolcode;\r\n        const deleteComponentId = this.state.controlMap.has(\"DeleteComponent\") && this.state.controlMap.get(\"DeleteComponent\").ncontrolcode;\r\n        const addTestId = this.state.controlMap.has(\"AddTest\") && this.state.controlMap.get(\"AddTest\").ncontrolcode;\r\n        const deleteTestId = this.state.controlMap.has(\"DeleteTest\") && this.state.controlMap.get(\"DeleteTest\").ncontrolcode;\r\n        const editTestId = this.state.controlMap.has(\"EditTest\") && this.state.controlMap.get(\"EditTest\").ncontrolcode;\r\n        const viewFileId = this.state.controlMap.has(\"ViewTestFile\") && this.state.controlMap.get(\"ViewTestFile\").ncontrolcode;\r\n        const confirmMessage = new ConfirmMessage();\r\n\r\n        const deleteTree = {\r\n            methodUrl: \"Tree\", operation: \"delete\", inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo, screenName: \"IDS_TREE\", ncontrolCode: deleteTreeId, filterData: this.state.filterData\r\n        };\r\n\r\n        const getTest = {\r\n            screenName: \"IDS_TEST\", operation: \"get\", masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"TestGroupTest\", keyName: \"ntestgrouptestcode\"\r\n        };\r\n        const filterParam = {\r\n            testskip: 0, testtake: this.props.Login.settings ? this.props.Login.settings[12] : 5,\r\n            inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n            fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.Login.userInfo }, masterData: this.props.Login.masterData,\r\n            searchFieldList, changeList: [\"TestGroupTestFormula\", \"TestGroupTestNumericParameter\",\r\n                \"TestGroupTestPredefinedParameter\", \"TestGroupTestCharParameter\", \"TestGroupTestParameter\"], isSingleSelect: true\r\n        };\r\n        const filterParamRulesEngine = {\r\n            skipRulesEngine: 0, takeRulesEngine: this.props.Login.settings ? this.props.Login.settings[12] : 5,\r\n            inputListName: \"RulesEngine\", selectedObject: \"SelectedRulesEngine\", primaryKeyField: \"ntestgrouprulesenginecode\",\r\n            fetchUrl: \"testgrouprulesengine/getSelectedTestGroupRulesEngine\", fecthInputObject: { userinfo: this.props.Login.userInfo\r\n                ,ntestgrouptestcode:this.props.Login.masterData.SelectedTest&&this.props.Login.masterData.SelectedTest.ntestgrouptestcode }, masterData: this.props.Login.masterData,\r\n            'searchFieldList':[\"srulename\",\"stransdisplaystatus\" \r\n        ], changeList: [],  isSingleSelect: true\r\n        };\r\n        const specMandatoryFields = [];\r\n        //ALPD-4962 Test group screen -> while copy the spec and in spec name field without giving anything & save it blank page occurs.\r\n        const specCopyMandatoryFields = [];\r\n        const compMandatoryFields = [];\r\n        const editTestMandatoryFields = [];\r\n        const addTestMandatoryFields = [];\r\n        specificationColumnList.forEach(item => item.mandatory === true ?\r\n            specMandatoryFields.push(item) : \"\"\r\n        );\r\n        //ALPD-4944, Added specCopyMandatoryFields to check mandatory fields for copy spec\r\n        //ALPD-4962 Test group screen -> while copy the spec and in spec name field without giving anything & save it blank page occurs.\r\n        specificationCopyColumnList.forEach(item => item.mandatory === true ? \r\n            specCopyMandatoryFields.push(item) : \"\"\r\n        );\r\n        this.componentColumnList.forEach(item => item.mandatory === true ?\r\n            compMandatoryFields.push(item) : \"\"\r\n        );\r\n        editTestColumnList.forEach(item => item.mandatory === true ?\r\n            editTestMandatoryFields.push(item) : \"\"\r\n        );\r\n        addTestColumnList.forEach(item => item.mandatory === true ?\r\n            addTestMandatoryFields.push(item) : \"\"\r\n        );\r\n\r\n        if (this.props.Login.masterData && Object.values(this.props.Login.masterData).length > 0) {\r\n            if (selectedNode && selectedNode.sleveldescription) {\r\n                const splitNode = this.props.Login.masterData.ActiveKey.split('/');\r\n                let treeNodeNames = [];\r\n                splitNode.forEach(nodeItem => {\r\n                    this.props.Login.masterData.TreeTemplateManipulation.forEach(treeItem => {\r\n                        if (treeItem.ntemplatemanipulationcode === parseInt(nodeItem))\r\n                            treeNodeNames.push(treeItem.sleveldescription);\r\n                    })\r\n                })\r\n                this.componentBreadcrumbs = treeNodeNames;\r\n                if (SelectedSpecification && SelectedSpecification !== null && SelectedSpecification.sspecname) {\r\n                    this.componentBreadcrumbs.push(SelectedSpecification.sspecname);\r\n                    if (SelectedComponent && SelectedComponent !== null && SelectedComponent.ncomponentcode !== -1) {\r\n                        // this.componentBreadcrumbs[2] = this.props.intl.formatMessage({ id: \"IDS_COMPONENT\" }) + \": \" + SelectedComponent.scomponentname;\r\n                        this.componentBreadcrumbs.push(SelectedComponent.scomponentname);\r\n                    } else {\r\n                        // delete this.componentBreadcrumbs[2];\r\n                    }\r\n                } else {\r\n                    // delete this.componentBreadcrumbs[1];\r\n                }\r\n            } else {\r\n                this.componentBreadcrumbs = [];\r\n                // delete this.componentBreadcrumbs[0];\r\n            }\r\n        }\r\n\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n\r\n\r\n        //New Design\r\n        const specDesign =\r\n            <>\r\n                {this.componentBreadcrumbs && this.componentBreadcrumbs.length > 0 &&\r\n                    <div className=\"component_breadcrumbs\">\r\n                        <ul>\r\n                            {this.componentBreadcrumbs.map((item) => {\r\n                                return <li>{item}</li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                }\r\n\r\n                <ContentPanel hidden={this.state.showTest} className='mr-2'>\r\n                    <div className='card_group'>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                    <h4>{this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONINFO\" })}</h4>\r\n                                </span>\r\n                                {/* <button className=\"btn btn-primary\" style={{ float: \"right\" }}\r\n                                    onClick={() => this.showSpecAndTestInfo()}>\r\n                                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                </button> */}\r\n                                <button className=\"btn btn-primary\" style={{ float: \"right\", marginRight: \"1rem\" }}\r\n                                    onClick={() => this.showSpecAndTestInfo1()}>\r\n                                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                </button>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <SpecificationInfo\r\n                                    genericLabel={this.props.Login.genericLabel}                             \r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    selectedSpecification={this.props.Login.masterData.SelectedSpecification}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    selectedNode={this.props.Login.masterData.selectedNode}\r\n                                    selectedRecord={this.state.filterData}\r\n                                    approvalRoleActionDetail={this.props.Login.masterData.ApprovalRoleActionDetail}\r\n                                    screenName=\"IDS_SPECIFICATIONINFO\"\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    addSpecification={this.props.addSpecification}\r\n                                    filterData={this.state.filterData}\r\n                                    //completeSpecification={this.completeSpecification}\r\n                                    completeSpecification={this.validateTestGroupComplete}\r\n                                    approveSpecification={this.approveSpecification}\r\n                                    specificationReport={this.onDownloadClick}\r\n                                    retireSpec={this.retireSpec}\r\n                                    masterData={this.props.Login.masterData}\r\n\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n\r\n                        <div>\r\n                            <CustomTab tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                        </div>\r\n                </ContentPanel>\r\n            </>\r\n\r\n\r\n        const testDesign = <Card>\r\n            <Card.Header className='sm-header'>\r\n                <h4 className='spec-info-title' data-tip={ this.props.intl.formatMessage({ id: \"IDS_TEST\" }) }>{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                <button className=\"btn btn-primary\" style={{ position: \"absolute\", right: \"7px\", top: \"7px\" }}\r\n                    onClick={() => this.showSpecAndTestInfo()}>\r\n                    <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                    {this.props.intl.formatMessage({ id: \"IDS_SPECINFO\" })}\r\n                </button>\r\n            </Card.Header>\r\n            <Card.Body className={this.state.testView ? 'p-0' : 'no-pad-t'}>\r\n                <TransactionListMasterJsonView\r\n                    cardHead={167}\r\n                    componentBreadcrumbs={this.breadCrumbData ? this.breadCrumbData.length > 0 ? true : false : false}\r\n                    // notSearchable={false}\r\n                    masterList={searchedData || TestGroupTest || []}\r\n                    //selectedMaster={[SelectedTest]}\r\n                    clickIconGroup={true}\r\n                    selectedMaster={SelectedTest !== undefined ? [SelectedTest] : undefined}\r\n                    primaryKeyField=\"ntestgrouptestcode\"\r\n                    getMasterDetail={this.props.getTestGroupDetails}\r\n                    inputParam={getTest}\r\n                    additionalParam={[]}\r\n                    mainField=\"stestname\"\r\n                    selectedListName=\"SelectedTest\"\r\n                    objectName=\"testgrouptest\"\r\n                    listName=\"IDS_TEST\"\r\n                    showStatusLink={true}\r\n                    statusFieldName=\"stransdisplaystatus\"\r\n                    statusField=\"ntransactionstatus\"\r\n                    subFields={testSubFields}\r\n                   // moreField={testMoreFields}\r\n                   moreField={this.TestGroupMorefields(testMoreFields)}\r\n                    needValidation={false}\r\n                    needFilter={false}\r\n                    filterColumnData={this.props.filterTransactionList}\r\n                    searchListName=\"searchedData\"\r\n                    searchRef={this.searchRef}\r\n                    hidePaging={false}\r\n                    filterParam={filterParam}\r\n                    handlePageChange={this.handlePageChange}\r\n                    skip={this.state.testskip}\r\n                    take={this.state.testtake}\r\n                    pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                    actionIcons={\r\n                        [\r\n                            {\r\n                                title: this.props.intl.formatMessage({ id: \"IDS_VIEW\" }),\r\n                                controlname: \"faCloudDownloadAlt\",\r\n                                objectName: \"selectedTest\",\r\n                                hidden: this.state.userRoleControlRights.indexOf(viewFileId) === -1,\r\n                                inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                onClick: (props) => this.viewTestFile(props),\r\n                                needConditionalIcon: true,\r\n                                conditionalIconFunction: this.fileViewIcon\r\n                            },\r\n                            {\r\n                                title: this.props.intl.formatMessage({ id: \"IDS_VIEW\" }),\r\n                                controlname: \"faExternalLinkAlt\",\r\n                                objectName: \"selectedTest\",\r\n                                hidden: this.state.userRoleControlRights.indexOf(viewFileId) === -1,\r\n                                inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                onClick: (props) => this.viewTestFile(props),\r\n                                needConditionalIcon: true,\r\n                                conditionalIconFunction: this.linkViewIcon\r\n                            },\r\n                            {\r\n                                title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                controlname: \"faPencilAlt\",\r\n                                objectName: \"testgroupspecification\",\r\n                                hidden: this.state.userRoleControlRights.indexOf(editTestId) === -1,\r\n                                inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                onClick: (props) => this.props.editTestGroupTest(\"update\", props.SelectedTest[0], this.props.Login.userInfo, editTestId, SelectedSpecification, this.state.filterData, props.masterData)\r\n                            },\r\n                            {\r\n                                title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                controlname: \"faTrashAlt\",\r\n                                objectName: \"testgrouptest\",\r\n                                hidden: this.state.userRoleControlRights.indexOf(deleteTestId) === -1,\r\n                                inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                onClick: (props) => confirmMessage.confirm(\r\n                                    \"deleteMessage\",\r\n                                    this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                    this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                                    this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                    this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                    () => this.deleteTest({ props, ncontrolCode: deleteTestId, filterData: this.state.filterData })\r\n                                )\r\n                            }\r\n                        ]\r\n                    }\r\n                    commonActions={\r\n                        <>\r\n\r\n                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                hidden={this.state.userRoleControlRights.indexOf(addTestId) === -1}\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                // data-for=\"tooltip-list-wrap\"\r\n                                onClick={() => this.props.addTestGroupTest(SelectedComponent, this.props.Login.userInfo, addTestId, SelectedSpecification, this.state.filterData, this.props.Login.masterData)}>\r\n                                <FontAwesomeIcon icon={faPlus} title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} />\r\n                            </Button>\r\n                        </>\r\n                    }\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n\r\n        const paramDesign =\r\n            <>\r\n                <ContentPanel hidden={!this.state.showTest} className=\"grouped-param\">\r\n                    <Card>\r\n                        {/* <Card.Header className='sm-header'>\r\n                            <span style={{ display: \"inline-block\" }} >\r\n                                <h4>{this.props.intl.formatMessage({ id: \"IDS_ADDPARAMETER\" })}</h4>\r\n                            </span>\r\n                        </Card.Header> */}\r\n                        {/* {TestGroupTestParameter && TestGroupTestParameter.length > 0 && */}\r\n                        {/* <PerfectScrollbar> */}\r\n                       \r\n                        <TestGroupTestTab\r\n                            paneHeight={this.state.paneHeight}\r\n                            testView={this.state.testView}\r\n                            isrulesenginerequired={this.props.Login.masterData.isrulesenginerequired&&\r\n                                this.props.Login.masterData.isrulesenginerequired===transactionStatus.YES?true:false}\r\n                            masterData={this.props.Login.masterData}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            userInfo={this.props.Login.userInfo}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            esignRights={this.props.Login.userRoleControlRights}\r\n                            screenName={this.props.Login.screenName}\r\n                            openChildModal={this.props.Login.openChildModal}\r\n                            operation={this.props.Login.operation}\r\n                            loadEsign={this.props.Login.loadEsign}\r\n                            testGroupInputData={this.props.Login.testGroupInputData}\r\n                            parameterData={this.props.Login.parameterData}  \r\n                            selectedRecord={this.state.selectedRecord}\r\n                            selectedsubcodedresult={this.state.selectedsubcodedresult || []}\r\n                            selectsubcodedelete={this.state.selectsubcodedelete}\r\n                            screenData={this.props.Login.screenData}\r\n                            ncontrolCode={this.props.Login.ncontrolCode}\r\n                            controlMap={this.state.controlMap}\r\n                            testGroupCheckList={this.props.Login.testGroupCheckList}\r\n                            openTemplateModal={this.props.Login.openTemplateModal}\r\n                            editTestGroupTest={this.props.editTestGroupTest}\r\n                            updateStore={this.props.updateStore}\r\n                            crudMaster={this.props.crudMaster}\r\n                            getTestGroupParameter={this.props.getTestGroupParameter}\r\n                            editTestGroupParameter={this.props.editTestGroupParameter}\r\n                            filterData={this.state.filterData}\r\n                            addTestGroupCodedResult={this.props.addTestGroupCodedResult}\r\n                            subCodedResultView={this.props.subCodedResultView}\r\n                            addTestGroupNumericTab={this.props.addTestGroupNumericTab}\r\n                            validateEsignCredential={this.props.validateEsignCredential}\r\n                            filterColumnData={this.props.filterColumnData}\r\n                            viewTestGroupCheckList={this.props.viewTestGroupCheckList}\r\n                            getDataForTestMaterial={this.props.getDataForTestMaterial}\r\n                            materialType={this.props.Login.materialType}\r\n                            getMaterialCategoryBasedMaterialType={this.props.getMaterialCategoryBasedMaterialType}\r\n                            materialCategoryList={this.props.Login.materialCategoryList}\r\n                            materialList={this.props.Login.materialList}\r\n                            getMaterialBasedMaterialCategory={this.props.getMaterialBasedMaterialCategory}\r\n                            getTestGroupMaterial={this.props.getTestGroupMaterial}\r\n                            getDataForEditTestMaterial={this.props.getDataForEditTestMaterial}\r\n                            dataState={this.state.clinicalspecDataState}\r\n                            dataStateChange={this.specDataStateChange}\r\n                            getTestGroupRulesEngineAdd={this.getTestGroupRulesEngineAdd}\r\n                            settings={this.props.Login.settings}\r\n                            skip={this.state.testskip}\r\n                            take={this.state.testtake}\r\n                            getEditTestGroupRulesEngine={this.props.getEditTestGroupRulesEngine}\r\n                            getSelectedTestGroupRulesEngine={this.props.getSelectedTestGroupRulesEngine}\r\n                            ConfirmDeleteRule={this.ConfirmDeleteRule}\r\n                            approveVersion={(masterdata, nflag) => this.approveVersion(masterdata, nflag)}\r\n                            openflowview={(props)=>this.openflowview(props)}\r\n                            handlePageChangeRuleEngine={(event) => this.handlePageChangeRuleEngine(event)}\r\n                            skipRulesEngine={this.state.skipRulesEngine}\r\n                            takeRulesEngine={this.state.takeRulesEngine}\r\n                            viewOutcome={ (props)=>this.viewOutcome(props)}\r\n                            filterParamRulesEngine={ filterParamRulesEngine}\r\n                            filterTransactionList={this.props.filterTransactionList} \r\n                            saveExecutionOrder={(props)=>this.props.saveExecutionOrder(props,this.props.Login.masterData,this.props.Login.userInfo)} \r\n                            //ALPD-4984--Added by Vignesh R(10-04-2025)-->Test group: Copy Rules engine\r\n\t\t\t\t\t\t\tcopyVersion={(masterData,ncontrolCode) => this.props.getCopyValues(masterData,ncontrolCode,this.props.Login.userInfo,this.state.filterData)} \r\n                            getProductCategory={this.props.Login.getProductCategory||[]}\r\n                            getSpecificationList={this.props.Login.getSpecificationList ||[]}\r\n                            getComponentList={this.props.Login.getComponentList||[]}\r\n                            getProductList={this.props.Login.getProductList||[]}\r\n                            getProfileRoot={this.props.Login.getProfileRoot||[]}\r\n                            getComponentComboServices={(methodparam)=>this.props.getComponentComboServices(methodparam)}\r\n                            getSpecificationComboServices={(methodparam)=>this.props.getSpecificationComboServices(methodparam)}\r\n                            getRulesTestComboServices={(methodparam)=>this.props.getRulesTestComboServices(methodparam)}\r\n                            getProductComboServices={(methodparam)=>this.props.getProductComboServices(methodparam)}\r\n                            getProfileRootComboServices={(methodparam)=>this.props.getProfileRootComboServices(methodparam)}\r\n                            getRulesList={this.props.Login.getRulesList||[]}\r\n                           \r\n                        />\r\n                        {/* </PerfectScrollbar>\r\n                     } */}\r\n                    </Card>\r\n                </ContentPanel>\r\n            </>\r\n\r\n        const mainDesign =\r\n            <SplitterLayout\r\n                customClassName={this.state.testView ? \"detailed-inner\" : \"detailed-inner no-height \"}\r\n                vertical={this.state.testView ? false : true}\r\n                borderColor=\"#999\"\r\n                primaryIndex={1}\r\n                percentage={true}\r\n                //secondaryInitialSize={this.state.testView ? 600 : this.state.fixefScrollHeight}\r\n                secondaryInitialSize={37}\r\n                primaryMinSize={30}\r\n                secondaryMinSize={37}\r\n            >\r\n                {testDesign}{paramDesign}\r\n            </SplitterLayout >\r\n\r\n\r\n        // const testDesign = this.state.testView ?\r\n        //     <SplitterLayout\r\n        //         customClassName=\"detailed-inner\"\r\n        //         borderColor=\"#999\"\r\n        //         primaryIndex={1}>\r\n        //         {tempDesign}{paramDesign}\r\n        //     </SplitterLayout>\r\n        //     :\r\n        //     <SplitterLayout\r\n        //         customClassName=\"detailed-inner no-height\"\r\n        //         vertical\r\n        //         borderColor=\"#999\"\r\n        //         primaryIndex={1}\r\n        //         // onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\r\n        //         secondaryInitialSize={this.state.fixefScrollHeight}\r\n        //     >\r\n        //         <ContentPanel>\r\n        //             {tempDesign}\r\n        //         </ContentPanel>\r\n\r\n        //         {paramDesign}\r\n        //     </SplitterLayout>\r\n\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip-list-wrap\" /> */}\r\n                {/* screen-height-window active_seperator */}\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    {this.breadCrumbData && this.breadCrumbData.length > 0 &&\r\n                        <BreadcrumbComponent\r\n                            breadCrumbItem={this.breadCrumbData}\r\n                        />}\r\n                    <Row noGutters>\r\n                        <Col md={12} className=\"parent-port-height sticky_head_parent\" ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <SplitterLayout\r\n                                borderColor=\"#999\"\r\n                                primaryIndex={1}\r\n                                percentage={true}\r\n                                secondaryInitialSize={30}\r\n                            //customClassName=\"fixed_list_height\"\r\n                            >\r\n                                <div className={`${this.state.showModalBg ? 'show_modal_bg fixed_list_height' : 'fixed_list_height'}`}>\r\n                                    <div className=\"sticky_head\">\r\n                                        <SearchAdd className=\"border fixed_ico_list title_grp_custom\">\r\n                                            <h4>{this.props.intl.formatMessage({ id: \"IDS_PROFILETREE\" })}</h4>\r\n                                            <div className=\"icon_group_right_aligned\">\r\n                                                <AdvFilter\r\n                                                    filterComponent={[{\r\n                                                        \"IDS_SAMPLEFILTER\":\r\n                                                            <SampleFilter\r\n                                                                genericLabel={this.props.Login.genericLabel}\r\n                                                                userInfo={this.props.Login.userInfo} \r\n                                                                sampleType={this.state.sampleType}\r\n                                                                treeVersionTemplate={this.state.treeVersionTemplate}\r\n                                                                productCategory={this.state.productCategory}\r\n                                                                product={this.state.product}\r\n                                                                projectType={this.state.projectType}\r\n                                                                project={this.state.project}\r\n                                                                onFilterComboChange={this.onFilterComboChange}\r\n                                                                tempFilterData={this.state.tempFilterData}\r\n                                                            >\r\n                                                            </SampleFilter>,\r\n                                                        needActionStrip: false\r\n                                                    }]}\r\n                                                    onFilterSubmit={this.onFilterSumbit}\r\n                                                    showModalBg={(e) => this.setState({ showModalBg: e })}\r\n                                                />\r\n\r\n                                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                    <Button className=\"btn btn-icon-rounded btn-circle solid-blue mr-1\" role=\"button\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(addTreeId) === -1}\r\n                                                        onClick={() => this.props.createTree(this.state.filterData, this.props.Login.userInfo, this.props.Login.masterData, addTreeId)}\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                    //  data-for=\"tooltip-list-wrap\"\r\n                                                    >\r\n                                                        <FontAwesomeIcon icon={faPlus} />\r\n                                                    </Button>\r\n\r\n                                                    <Nav.Link className=\"btn btn-circle outline-grey mr0 mr-1\" name=\"edittestname\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(editTreeId) === -1}\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                        //  data-for=\"tooltip-list-wrap\"\r\n                                                        onClick={() => this.props.editTree(\"update\", selectedNode, this.props.Login.userInfo, editTreeId, this.state.filterData,\r\n                                                            this.props.Login.masterData)}>\r\n                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                    </Nav.Link>\r\n                                                    <Nav.Link name=\"deleteLink\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(deleteTreeId) === -1}\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                        // data-for=\"tooltip-list-wrap\"\r\n                                                        className=\"btn btn-circle outline-grey \"\r\n                                                        onClick={() => this.ConfirmDelete({ ...deleteTree })}>\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        {/* <ConfirmDialog\r\n                                                            name=\"deleteMessage\"\r\n                                                            message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                            doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                            doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            icon={faTrashAlt}\r\n                                                            title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteTreeId) === -1}\r\n                                                            handleClickDelete={() => this.deleteRecord({ ...deleteTree })}\r\n                                                        /> */}\r\n                                                    </Nav.Link>\r\n                                                    <Button className=\"btn btn-circle outline-grey ml-1 p-0\" variant=\"link\"\r\n                                                        onClick={() => this.reloadData()}\r\n                                                        // data-for=\"tooltip-list-wrap\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                            <RefreshIcon className='custom_icons'/>\r\n                                                    </Button>\r\n                                                    {/* </Tooltip> */}\r\n                                                </ProductList>\r\n\r\n                                            </div>\r\n                                        </SearchAdd>\r\n                                    </div>\r\n                                    <div className=\"sticky_head_scroll_body\" style={{ \"height\": this.state.parentHeight }}>\r\n                                        <PerfectScrollbar>\r\n                                            <FormTreeMenu\r\n                                                data={this.props.Login.masterData.AgaramTree}\r\n                                                hasSearch={false}\r\n                                                handleTreeClick={this.onTreeClick}\r\n                                                initialOpenNodes={OpenNodes}\r\n                                                focusKey={FocusKey || \"\"}\r\n                                                activeKey={ActiveKey || \"\"}\r\n                                            />\r\n                                            <TransationListMaster\r\n                                                notSearchable={true}\r\n                                                titleHead={this.props.intl.formatMessage({ id: \"IDS_SPECIFICATION\" })}\r\n                                                titleClasses=\"title_grp_custom fixed_ico_list\"\r\n                                                masterList={TestGroupSpecification || []}\r\n                                                selectedMaster={[SelectedSpecification]}\r\n                                                needMultiSelect={false}\r\n                                                primaryKeyField=\"nallottedspeccode\"\r\n                                                getMasterDetail={(spec) => this.props.getComponentBySpecId({ ...getComponent, selectedRecord: spec, historyDataState: this.state.historyDataState }, this.props.Login.masterData, this.searchRef)}\r\n                                                mainField=\"sspecname\"\r\n                                                selectedListName=\"testgroupspecification\"\r\n                                                objectName=\"testgroupspecification\"\r\n                                                listName=\"IDS_SPECIFICATION\"\r\n                                                onFilterSumbit={this.onFilterSumbit}\r\n                                                subFields={this.specSubField}\r\n                                                actionIcons={\r\n                                                    [\r\n                                                        {\r\n                                                            title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                            controlname: \"faPencilAlt\",\r\n                                                            objectName: \"testgroupspecification\",\r\n                                                            hidden: this.state.userRoleControlRights.indexOf(editSpecId) === -1,\r\n                                                            inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                                            onClick: (props) => this.props.addSpecification(\"update\", { ...editSpecParam, ...props }, editSpecId)\r\n                                                        },\r\n                                                        {\r\n                                                            title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                            controlname: \"faTrashAlt\",\r\n                                                            objectName: \"testgroupspecification\",\r\n                                                            hidden: this.state.userRoleControlRights.indexOf(deleteSpecId) === -1,\r\n                                                            inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                                            onClick: (props) => confirmMessage.confirm(\r\n                                                                \"deleteMessage\",\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                                                () => this.deleteSpecRecord({ props, ...specDeleteParam, selectedRecord: SelectedSpecification, ncontrolCode: deleteSpecId })\r\n                                                            )\r\n                                                        }\r\n                                                    ]\r\n                                                }\r\n                                                needFilter={false}\r\n                                                commonActions={\r\n                                                    <>\r\n                                                        {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                        <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(addSpecId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                            //  data-for=\"tooltip-list-wrap\"\r\n                                                            onClick={() => this.props.addSpecification(\"create\", { ...addSpecParam }, addSpecId, this.props.Login.masterData)}>\r\n                                                            <FontAwesomeIcon icon={faPlus}\r\n                                                            // title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                            />\r\n                                                        </Button>\r\n                                                    </>\r\n                                                }\r\n                                                hideSearch={false}\r\n                                                hidePaging={true}\r\n                                            />\r\n\t\t\t\t\t\t\t\t\t\t{/*//ALPD-5529--Vignesh R(06-03-2025)-->Test group screen -> Profile showing wrongly in specific scenario.*/}\r\n                                        { this.props.Login.masterData.filterData && this.props.Login.masterData.filterData.nproductcatcode.item.nmaterialtypecode === MaterialType.IQCSTANDARDMATERIALTYPE ? \"\" :\r\n                                            //{\r\n                                            SelectedSpecification && SelectedSpecification.ncomponentrequired === transactionStatus.YES &&\r\n                                              \r\n                                                <TransationListMaster\r\n                                                    notSearchable={true}\r\n                                                    titleHead={this.props.Login.genericLabel && this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]}\r\n                                                    titleClasses=\"title_grp_custom fixed_ico_list\"\r\n                                                    masterList={TestGroupSpecSampleType || []}\r\n                                                    selectedMaster={[SelectedComponent]}\r\n                                                    needMultiSelect={false}\r\n                                                    primaryKeyField=\"nspecsampletypecode\"\r\n                                                    getMasterDetail={(event) => this.componentRowClick(event)}\r\n                                                    mainField=\"scomponentname\"\r\n                                                    selectedListName=\"testgroupspecsampletype\"\r\n                                                    objectName=\"testgroupspecsampletype\"\r\n                                                    listName={this.props.Login.genericLabel && this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] }\r\n                                                    actionIcons={\r\n                                                        [\r\n                                                            {\r\n                                                                title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                                // data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                                controlname: \"faTrashAlt\",\r\n                                                                objectName: \"testgroupspecsampletype\",\r\n                                                                hidden: this.state.userRoleControlRights.indexOf(deleteComponentId) === -1,\r\n                                                                inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo },\r\n                                                                onClick: (props) => confirmMessage.confirm(\r\n                                                                    \"deleteMessage\",\r\n                                                                    this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                                    this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                                                                    this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                                                    this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                                                    () => this.deleteMultipleRecord({ props, ncontrolCode: deleteComponentId })\r\n                                                                )\r\n                                                            }\r\n                                                        ]\r\n                                                    }\r\n                                                    commonActions={\r\n                                                        <>\r\n                                                            {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(addComponentId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                                //  data-for=\"tooltip-list-wrap\"\r\n                                                                // title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                                onClick={() => this.props.addComponent(SelectedSpecification, this.props.Login.userInfo, addComponentId, {...this.props.Login.masterData,nsampletypecode:this.state.filterData.nsampletypecode},this.props.Login.genericLabel)}>\r\n                                                                <FontAwesomeIcon icon={faPlus}\r\n                                                                // title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} \r\n                                                                />\r\n                                                            </Button>\r\n\r\n                                                        </>\r\n                                                    }\r\n                                                    hidePaging={true}\r\n                                                />\r\n                                                //}\r\n                                            }\r\n                                        </PerfectScrollbar>\r\n                                    </div>\r\n                                </div>\r\n                                <>\r\n                                    {this.state.testView ?\r\n                                        <>\r\n                                            {specDesign}\r\n                                            {this.state.showTest ?\r\n                                                <div>\r\n                                                    {mainDesign}\r\n                                                </div>\r\n                                                : \"\"}\r\n                                        </>\r\n                                        :\r\n                                        <PerfectScrollbar>\r\n                                            {specDesign}\r\n                                            {this.state.showTest ?\r\n                                                <div>\r\n                                                    {mainDesign}\r\n                                                </div>\r\n                                                : \"\"}\r\n                                        </PerfectScrollbar>\r\n                                    }\r\n\r\n\r\n                                </>\r\n                            </SplitterLayout>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n\r\n\r\n\r\n                <ModalShow\r\n                    modalShow={this.props.Login.showAlertGrid \r\n                    }\r\n                    modalTitle={  this.props.Login.showParameterGrid ? \"IDS_VIEWPARAMETER\":\r\n                        this.props.Login.showAlertForPredefined||\r\n                        this.props.Login.additionalInfoView?this.props.intl.formatMessage({ id: \"IDS_ADDITIONALINFOREQURIED\" }) \r\n                     :''}  \r\n                    closeModal={this.closeModalShowPredefAlert}\r\n                    onSaveClick ={this.onModalSavePredefAlert}\r\n                    removeCancel={this.props.Login.showParameterGrid?false:this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?true:false}\r\n                    needSubmit={this.props.Login.showParameterGrid?false:this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?true:false}\r\n                    needSave={this.props.Login.showParameterGrid?true:\r\n                        this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?\"\":true}\r\n                    selectedRecord={this.state.selectedRecord || {}}  \r\n                    size={ this.props.Login.showParameterGrid?\"lg\":\r\n                        this.props.Login.showAlertForPredefined||this.props.Login.additionalInfoView?\"\":'lg'}\r\n                    showAlertMsg={this.props.Login.showAlertForPredefined?true:false}\r\n                    modalBody={ \r\n                              this.props.Login.showParameterGrid?\r\n                               <DataGrid\r\n                                       key=\"testsectionkey\"\r\n                                       primaryKeyField=\"ntestgrouptestparametercode\" \r\n                                       dataResult={this.props.Login.masterData.ParameterRulesEngine && process(\r\n                                               sortData(this.props.Login.masterData.ParameterRulesEngine,\r\n                                                \"descending\", \"ntestgrouptestparametercode\")\r\n                                               || [],\r\n                                               this.state.dataStateChangeViewParameter\r\n                                                   ? this.state.dataStateChangeViewParameter : { skip: 0, take: 10 })} \r\n                                       dataState={this.state.dataStateChangeViewParameter\r\n                                           ? this.state.dataStateChangeViewParameter : { skip: 0, take: 10 }} \r\n                                       dataStateChange={this.dataStateChangeViewParameter} \r\n                                       extractedColumnList={[\r\n                                           { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\" } ,\r\n                                            { \"idsName\": \"IDS_RESULT\", \"dataField\": \"sfinal\", \"width\": \"200px\" } ,\r\n                                           // { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"200px\" } \r\n                                       ]}\r\n                                       controlMap={this.state.controlMap}\r\n                                       userRoleControlRights={this.state.userRoleControlRights}\r\n                                       pageable={true} \r\n                                       scrollable={'scrollable'}\r\n                                       hideColumnFilter={true}\r\n                                       selectedId={0}  \r\n                                       activeTabName={\"IDS_Test\"}\r\n                                       gridHeight = {'400px'}\r\n                                   >\r\n                                   </DataGrid>  :\r\n                        this.props.Login.additionalInfoView?\r\n                        this.state.selectedRecord['additionalResultData'] :\r\n                         this.props.Login.showAlertForPredefined? \r\n                       <ResultEntryPredefinedComments \r\n                       onlyAlertMsgAvailable={this.props.Login.onlyAlertMsgAvailable}\r\n                       salertmessage={this.props.Login.masterData['salertmessage']}\r\n                       showMultiSelectCombo={this.props.Login.showMultiSelectCombo}\r\n                       testgrouptestpredefsubresultOptions={this.props.Login.masterData.testgrouptestpredefsubresultOptions||[]}\r\n                       selectedRecord={this.state.selectedRecord || {}} \r\n                       onInputChange = {this.onInputChange}\r\n                       onComboChange={this.onComboChange} \r\n                       />  :''\r\n                    }\r\n                />\r\n\r\n\r\n                {\r\n                    this.props.Login.openModal && this.props.Login.screenName &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        className={this.props.Login.screenName === \"IDS_VIEWRULE\"  ? \"wide-popup\" : \"\"}\r\n                        operation={this.props.Login.screenName === \"IDS_VIEWRULE\"||this.props.Login.screenName === \"IDS_VIEWOUTCOME\" ? \"\" : this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={ this.props.Login.screenName === \"IDS_VIEWRULE\"||this.props.Login.screenName === \"IDS_VIEWOUTCOME\" ?this.props.intl.formatMessage({id: this.props.Login.screenName})\r\n                        +\" - \"+this.props.Login.masterData.SelectedTest.stestsynonym:this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        //ALPD-5444 Test Group - Copy the spec in test group and do save continue loading issue occurs.\r\n                        //ATE234 janakumar ALPD-5546All Master screen -> Copy & File remove the save&continue\r\n                        showSaveContinue={this.props.Login.operation===\"copy\"?false:this.props.Login.screenName === \"IDS_SPECIFICATION\" || this.props.Login.screenName === \"IDS_SPECFILE\"?this.props.Login.loadEsign ? false :true:false}\r\n                        onSaveClick={this.onSaveClick}\r\n                        hideSave={this.props.Login.screenName === \"IDS_VIEWRULE\"||this.props.Login.screenName === \"IDS_VIEWOUTCOME\" ||this.props.Login.screenName === \"IDS_SUBCODERESULT\"  ? true : false}\r\n                        size={this.props.Login.screenName === \"IDS_VIEWRULE\" ||this.props.Login.screenName === \"IDS_VIEWOUTCOME\"  ? 'xl' : \"lg\"}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={\r\n                            this.props.Login.screenName === \"IDS_SPECFILE\" ? this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord)\r\n                                : this.props.Login.screenName === \"IDS_SPECIFICATION\" ? this.props.Login.operation === \"copy\" ? specCopyMandatoryFields : specMandatoryFields   //ALPD-4944, Added condition to read which mandatory records\r\n                                    : this.props.Login.screenName ===this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] ? compMandatoryFields\r\n                                        : this.props.Login.screenName === \"IDS_EDITTESTGROUPTEST\" ? editTestMandatoryFields\r\n                                            : this.props.Login.screenName === \"IDS_TEST\" ? addTestMandatoryFields\r\n                                                : this.props.Login.screenName === \"IDS_PROFILETREE\" || this.props.Login.screenName === \"IDS_EDITTREE\"\r\n                                                    ? this.props.Login.treeMandatoryFields : []}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onEsignInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.Login.screenName === \"IDS_SPECIFICATION\" ?\r\n                                <AddTestGroupSpecification\r\n                                   genericLabel={this.props.Login.genericLabel}\r\n                                     userInfo={this.props.Login.userInfo}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    timeZoneList={this.props.Login.timeZoneList}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    handleDateChange={this.handleDateChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    screenName={this.props.Login.screenName}\r\n                                    operation={this.props.Login.operation}\r\n                                    nsampletypecode={this.props.Login.masterData.selectedNode.nsampletypecode}\r\n                                    settings={this.props.Login.settings}\r\n                                    tempFilterData = {this.state.tempFilterData}\r\n\t\t\t\t\t\t\t\t\t//ALPD-5529--Vignesh R(06-03-2025)-->Test group screen -> Profile showing wrongly in specific scenario.\r\n                                    filterData ={this.props.Login.masterData.filterData}\r\n                                    //For copy action --ALPD-4099 ,work done by Dhanushya R I\r\n                                    focusKey={\r\n                                        // this.props.Login.masterData && this.props.Login.masterData.selectedRecordCopy ? this.props.Login.masterData.selectedRecordCopy.CopyFocusKey :\r\n                                            this.state.selectedRecord.CopyFocusKey || \"\"}\r\n                                    activeKey={\r\n                                        // this.props.Login.masterData && this.props.Login.masterData.selectedRecordCopy ? this.props.Login.masterData.selectedRecordCopy.CopyActiveKey :\r\n                                        this.state.selectedRecord.CopyActiveKey || \"\"}\r\n                                    copyProfileName = {this.state.selectedRecord.selectedCopyProfileName}\r\n                                    onCopyTreeClick={this.onCopyTreeClick}\r\n                                    initialOpenNodes = {CopyOpenNodes || OpenNodes}\r\n                                    data={this.props.Login.masterData.AgaramTree}\r\n                                    //For copy action --ALPD-4099 ,work done by Dhanushya R I\r\n                                    Copydata={this.props.Login.masterData.selectedRecordCopy&&this.props.Login.masterData.selectedRecordCopy.AgaramTree}\r\n                                    masterData={this.props.Login.masterData}\r\n                                    productCategory={this.state.productCategory}\r\n                                    product={this.state.product}\r\n                                    changeProductOrProductCategory={this.props.getSpecDetailsForCopy}\r\n                                    initialProfile={this.props.Login.masterData&&this.props.Login.masterData.selectedNode&&this.props.Login.masterData.selectedNode.sleveldescription}\r\n                                /> :\r\n                                this.props.Login.screenName ===this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] ?\r\n                                    <AddTestGroupTest\r\n                                         genericLabel={this.props.Login.genericLabel}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        testGroupInputData={this.props.Login.testGroupInputData}\r\n                                        screenName={this.props.Login.screenName}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onFilterComboChange={this.onFilterComboChange}\r\n                                    /> :\r\n\r\n\r\n                                    this.props.Login.screenName === \"IDS_SUBCODERESULT\" ?\r\n                                    <ViewSubCodedResult\r\n                                        selectedRecord={this.state.selectedsubcoderesult || {}}\r\n                                        selectedsubcoderesult={this.props.Login.selectedsubcoderesult||[]}\r\n                                        screenName={this.props.Login.screenName}\r\n                                        onComboChange={this.onComboChange}\r\n                                        onFilterComboChange={this.onFilterComboChange}\r\n                                    /> :\r\n\r\n                                    this.props.Login.screenName === \"IDS_PROFILETREE\" ?\r\n                                        <AddProfileTree\r\n                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            treetempTranstestGroup={this.props.Login.TreetempTranstestGroup}\r\n                                        /> :\r\n                                        this.props.Login.screenName === \"IDS_SPECFILE\" ?\r\n                                            <AddFile\r\n                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                actionType={this.state.actionType}\r\n                                                onDrop={this.onDropSpecFile}\r\n                                                deleteAttachment={this.deleteAttachment}\r\n                                                linkMaster={this.props.Login.linkMaster}\r\n                                                editFiles={this.props.Login.editFiles}\r\n                                                maxSize={20}\r\n                                                maxFiles={this.props.Login.operation === \"update\" ? 1 : 1}\r\n                                                multiple={this.props.Login.operation === \"update\" ? false : true}\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_SPECFILE\" })}\r\n                                                hideDefaultToggle={true}\r\n                                                name=\"specfilename\"\r\n                                            /> :\r\n                                            this.props.Login.screenName === \"IDS_EDITTREE\" ?\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormInput\r\n                                                            name={\"sleveldescription\"}\r\n                                                            label={this.state.selectedRecord.slabelname}\r\n                                                            type=\"text\"\r\n                                                            onChange={(event) => this.onInputOnChange(event, 1)}\r\n                                                            placeholder={this.state.selectedRecord.slabelname}\r\n                                                            value={this.state.selectedRecord ? this.state.selectedRecord[\"sleveldescription\"] : \"\"}\r\n                                                            isMandatory=\"*\"\r\n                                                            required={true}\r\n                                                            maxLength={100}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row> :\r\n                                                this.props.Login.screenName === \"IDS_TEST\" ?\r\n                                                    <AddTestGroupTest\r\n                                                    genericLabel={this.props.Login.genericLabel}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                                        testGroupInputData={this.props.Login.testGroupInputData}\r\n                                                        screenName={this.props.Login.screenName}\r\n                                                        onComboChange={this.onComboChange}\r\n                                                        onFilterComboChange={this.onFilterComboChange}\r\n                                                    /> : this.props.Login.screenName === \"IDS_EDITTESTGROUPTEST\" ?\r\n                                                        <EditTestGroupTest\r\n                                                             hideQualisForms={this.props.Login.hideQualisForms}\r\n                                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                                            testGroupInputData={this.props.Login.testGroupInputData}\r\n                                                            onComboChange={this.onComboChange}\r\n                                                            onInputOnChange={this.onInputOnChange}\r\n                                                            onNumericInputChange={this.onNumericInputChange}\r\n                                                        /> : this.props.Login.screenName === \"IDS_VIEWRULE\" ?\r\n                                                            <Row>\r\n                                                                <Col md={12}>\r\n                                                                    <OrgTree\r\n                                                                        data={this.ruleflowobject()}\r\n                                                                        horizontal={true}\r\n                                                                        collapsable={true}\r\n                                                                        expandAll={true}\r\n                                                                        labelClassName={\"ruletree\"}\r\n                                                                    /> \r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                               \r\n                                                            :  this.props.Login.screenName === \"IDS_VIEWOUTCOME\" ?\r\n                                                            <Row>\r\n                                                                <Col md={12}> \r\n                                                                    {this.props.Login.masterData.SelectedRulesEngine &&\r\n                                                                <CustomTab tabDetail={this.tabDetailRulesEngine()} onTabChange={this.onTabChangeRulesEngine} /> }\r\n                                                                </Col>\r\n                                                            </Row> \r\n                                                            :\"\"\r\n                        }\r\n                    />\r\n                }\r\n                {\r\n                    this.props.Login.openPortalModal &&\r\n                    <PortalModalSlideout\r\n                        show={this.props.Login.openPortalModal}\r\n                        closeModal={this.closePortalModal}\r\n                        screenName={this.props.intl.formatMessage({ id:this.props.Login.screenName})+\" - \"+this.props.Login.masterData.SelectedTest.stestsynonym}\r\n                        handleSaveClick={this.save}\r\n                        addComponent={\r\n                            (this.props.Login.operation === 'update' ? this.state.selectedRecord['groupList'] : true) &&\r\n                            <AddTestGroupRule\r\n                                productCategoryList={this.state.ProductCategoryList || []}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                databaseTableList={this.props.Login.databaseTableList}\r\n                                tableColumnList={this.state.tableColumnList}\r\n                                specificationOptions={this.state.TestGroupSpecificationList || []}\r\n                                componentOptions={this.state.ComponentList || []}\r\n                                foreignTableList={this.state.foreignTableList || []}\r\n                                foreignTableColumnList={this.props.Login.foreignTableColumnList || []}\r\n                                count={this.state.count}\r\n                                foreignTableCount={this.state.foreignTableCount}\r\n                                sqlQuery={this.state.sqlQuery}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                onInputChange={this.onInputChange}\r\n                                deleteRule={this.deleteRule}\r\n                                clearRule={this.clearRule}\r\n                                resetRule={this.resetRule}\r\n                                onSymbolChange={this.onSymbolChange}\r\n                                onRuleChange={this.onRuleChange}\r\n                                addRule={this.addRule}\r\n                                addTest={this.addTest}\r\n                                onConditionClick={this.onConditionClick}\r\n                                onMasterDataChange={this.onMasterDataChange}\r\n                                databaseviewList={this.props.Login.databaseviewList}\r\n                                addRuleList={this.props.Login.addRuleList || []}\r\n                                rulesOption={this.props.Login.masterData.rulesOption&&this.props.Login.masterData.rulesOption.filter(this.outComeTestsRemoveFromRules)}\r\n                                masterdata={this.props.Login.masterdata}\r\n                                switchRecord={this.state.switchRecord}\r\n                                data={this.state.data}\r\n                                dataResult={this.state.dataResult || []}\r\n                                dataState={this.state.dataState}\r\n                                dataStateChange={this.dataStateChange}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                gridColumnList={this.props.Login.gridColumnList || []}\r\n                                queryType={this.state.queryType}\r\n                                addAggregateList={this.props.Login.addAggregateList || []}\r\n                                addOrderbyList={this.props.Login.addOrderbyList || []}\r\n                                addGroup={this.addGroup}\r\n                                addGroupList={this.props.Login.addGroupList || []}\r\n                                onFilterComboChange={this.onFilterComboChange}\r\n                                selectFields={this.props.Login.selectFields || []}\r\n                                SelectedProductCategory={this.props.Login.masterData.SelectedProductCategory}\r\n                                DiagnosticCaseList={this.props.Login.masterData.DiagnosticCaseList}\r\n                                GradeList={this.props.Login.masterData.GradeList}\r\n                                PredefinedParameterOptions={this.props.Login.masterData.PredefinedParameterOptions} \r\n                                siteList={this.props.Login.masterData.siteList}\r\n                                resultTypeList={this.props.Login.masterData.resultTypeList}\r\n                                isResultorOrderType={this.state.isResultorOrderType}\r\n                                optionsByRule={this.state.optionsByRule || this.props.Login.masterData.DiagnosticCaseList}\r\n                                changePropertyView={this.changePropertyView}\r\n                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                activeTabIndex={this.props.Login.activeTabIndex}\r\n                                enablePropertyPopup={this.state.enablePropertyPopup}\r\n                                propertyPopupWidth={this.state.propertyPopupWidth}\r\n                                controlMap={this.state.controlMap}\r\n                                sectionDataState={this.state.sectionDataState}\r\n                                masterData={this.props.Login.masterData}\r\n                                intl={this.props.intl}\r\n                                addOutcomeList={this.props.Login.addOutcomeList && this.props.Login.addOutcomeList || []}\r\n                                deleteOutcome={this.deleteOutcome}\r\n                                onmodalComboChange={this.onmodalComboChange}\r\n                                openModalPopup={this.props.Login.openModalPopup}\r\n                                closeModalShow={this.closeModalShow}\r\n                                modalsaveClick={this.modalsaveClick}\r\n                                getOutcomeDetails={this.getOutcomeDetails}\r\n                                addModalSite={this.addModalSite}\r\n                                action={this.props.Login.action}\r\n                                deletModalSite={this.deletModalSite}\r\n                                deleteModalTest={this.deleteModalTest}\r\n                                activeTestTab={this.props.Login.activeTestTab}\r\n                                testcomments={this.props.Login.testcomments}\r\n                                reportcomments={this.props.Login.reportcomments}\r\n                                addComments={this.addComments}\r\n                                CommentType={this.props.Login.CommentType}\r\n                                CommentSubType={this.props.Login.CommentSubType}\r\n                                isneedsgeneralcomments={this.state.isneedsgeneralcomments}\r\n                                predefcomments={this.props.Login.predefcomments}\r\n                                needoutsource={this.state.selectedRecord['needoutsource'] && this.state.selectedRecord['needoutsource'] === 3 ? true : false}\r\n                                openmodalsavePopup={this.props.Login.openmodalsavePopup}\r\n                                save={this.save}\r\n                                dataStateObject={this.state.dataStateObject}\r\n                                paneSizeChange={this.paneSizeChange}\r\n                                testInitiateTestCombo={this.props.Login.testInitiateTestCombo && this.viewColumnListByRule(this.props.Login.testInitiateTestCombo)}\r\n                                testCommentsTestCombo={this.props.Login.testCommentsTestCombo && this.viewColumnListByRule(this.props.Login.testCommentsTestCombo)}\r\n                                testRepeatTestCombo={this.props.Login.testRepeatTestCombo && this.viewColumnListByRule(this.props.Login.testRepeatTestCombo)}\r\n                                testenforceTestCombo={this.props.Login.testenforceTestCombo &&this.props.Login.testenforceTestCombo}\r\n                                dataStateChangetestRepeat={this.dataStateChangetestRepeat}\r\n                                dataStateChangetestEnforce={this.dataStateChangetestEnforce}\r\n                                dataStatetestEnforce={this.state.dataStatetestEnforce}\r\n                                dataStatetestRepeat={this.state.dataStatetestRepeat}\r\n                                testGroupTestParameterRulesEngine={this.props.Login.masterData.testGroupTestParameterRulesEngine||[]}\r\n                                ParameterRulesEngine={this.props.Login.masterData.ParameterRulesEngine||[]}\r\n                                onRuleInputChange={this.onRuleInputChange}\r\n                                onRuleNumericInputOnChange={this.onRuleNumericInputOnChange} \r\n                                onResultInputChange={this.onResultInputChange}\r\n                                PredefinedValues={this.props.Login.masterData.PredefinedValues||{}}\r\n                                onGradeEvent={this.onGradeEvent}\r\n                                deletetestparameter={this.deletetestparameter}\r\n                                gradeValues={this.props.Login.masterData.GradeValues || []}\r\n                                modalParameterPopup={this.props.Login.modalParameterPopup||false}\r\n                                addParameter={this.addParameter} \r\n                                onInputSwitchOnChange={this.onInputSwitchOnChange}\r\n                                onInputSwitchChange={this.onInputSwitchChange}\r\n                            />\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    ConfirmDelete = (obj) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(obj));\r\n    }\r\n\r\n    handlePageChange = (event) => {\r\n        this.setState({\r\n            testskip: event.skip,\r\n            testtake: event.take\r\n        });\r\n    }\r\n\r\n    findMandatoryFields(screenName, selectedRecord) {\r\n        let mandyFields = [];\r\n        if (screenName === \"IDS_SPECFILE\") {\r\n            if (selectedRecord && selectedRecord.nattachmenttypecode === attachmentType.LINK) {\r\n                mandyFields = [\r\n                    { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                ];\r\n            } else {\r\n                //if (this.props.Login.operation === 'update') {\r\n                mandyFields = [\r\n                    { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                ];\r\n                // }\r\n            }\r\n        } else {\r\n            return [];\r\n        }\r\n        let finalMandyFields = [];\r\n        mandyFields.forEach(item => item.mandatory === true && finalMandyFields.push(item));\r\n        return finalMandyFields;\r\n    }\r\n\r\n    viewTestFile = (props) => {\r\n        const viewParam = {\r\n            operation: \"view\",\r\n            methodUrl: \"TestGroupTestFile\",\r\n            classUrl: \"testgroup\",\r\n            inputData: {\r\n                ntestgroupfilecode: props.selectedTest ? props.selectedTest.ntestgroupfilecode : 0,\r\n                userinfo: this.props.Login.userInfo,\r\n                testgroupspecification: this.props.Login.masterData.SelectedSpecification,\r\n                ntestgrouptestcode: props.selectedTest ? props.selectedTest.ntestgrouptestcode : 0\r\n            }\r\n        }\r\n        this.props.viewAttachment(viewParam)\r\n    }\r\n\r\n    fileViewIcon = (master) => {\r\n        if (master.ntestgroupfilecode > 0 && master.nlinkcode === transactionStatus.NA) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    linkViewIcon = (master) => {\r\n        if (master.ntestgroupfilecode > 0 && master.nlinkcode !== transactionStatus.NA) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    showSpecAndTestInfo() {\r\n        this.setState({ showTest: !this.state.showTest, testView: false })\r\n        this.updateSpiltterLayout()\r\n\r\n    }\r\n    showSpecAndTestInfo1() {\r\n        this.setState({ showTest: !this.state.showTest, testView: true })\r\n        //this.updateSpiltterLayout()\r\n\r\n    }\r\n\r\n    onFilterSumbit = () => {\r\n        const tempFilterData = this.state.tempFilterData;\r\n        if (tempFilterData.nsampletypecode === undefined) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVAILABLE\" }));\r\n        } else if (tempFilterData.nproductcatcode === \"\") {\r\n            if (tempFilterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTCATEGORYNOTAVAILABLE\" }));\r\n            } else if (tempFilterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\" }));\r\n            } else if (tempFilterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_MATERIALCATEGORYNOTAVAILABLE\" }));\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_CATEGORYNOTAVAILABLE\" }));\r\n            }\r\n        }\r\n        // else if(tempFilterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.NO){\r\n        else if ((tempFilterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.NO && tempFilterData.nproductcode === \"\" && \r\n        tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.NO) ||\r\n            (tempFilterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.NO && tempFilterData.nproductcode === undefined  && \r\n                tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.NO) ) {\r\n            \r\n                if (tempFilterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY && tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.NO ) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTNOTAVAILABLE\" }));\r\n            } else if (tempFilterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTNOTAVAILABLE\" }));\r\n            } else if (tempFilterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_MATERIALNOTAVAILABLE\" }));\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PRODUCTNOTAVAILABLE\" }));\r\n            }\r\n        }\r\n        // }\r\n        else if (tempFilterData.ntreeversiontempcode === \"\") {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_STUDYPLANTEMPLATEISNOTAVAILABLE\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsampletypecode: tempFilterData.nsampletypecode.value,\r\n                    nproductcatcode: tempFilterData.nproductcatcode.value,\r\n                    nproductcode: tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.YES ? -1 : \r\n                    \r\n                    tempFilterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES ? -1 : tempFilterData.nproductcode ? tempFilterData.nproductcode.value : -1,\r\n                    ntreeversiontempcode: tempFilterData.ntreeversiontempcode.value,\r\n                    nprojectmastercode: tempFilterData.nsampletypecode.value === SampleType.PROJECTSAMPLETYPE ?  tempFilterData.nsampletypecode.item.nprojectspecrequired=== transactionStatus.YES ? tempFilterData.nprojectmastercode.value :-1 : -1,\r\n                    filterData: { ...tempFilterData },\r\n                },\r\n                historyDataState: this.state.historyDataState\r\n            }\r\n            this.props.filterTestGroup(inputParam, this.props.Login.masterData, this.searchRef);\r\n        }\r\n    }\r\n    onCopyTreeClick = (selectedCopyNodeManipulationCode, selectedCopyProfileName, CopyFocusKey, CopyActiveKey) =>{\r\n        let selectedRecord= {...this.state.selectedRecord} || {};\r\n       \r\n        selectedRecord['selectedCopyNodeManipulationCode'] = selectedCopyNodeManipulationCode\r\n        selectedRecord['selectedCopyProfileName'] = selectedCopyProfileName;\r\n        selectedRecord['CopyFocusKey'] = CopyFocusKey;\r\n        selectedRecord['CopyActiveKey'] = CopyActiveKey;\r\n        selectedRecord['scopyspecname'] = selectedCopyProfileName;\r\n            this.setState({ \r\n                            selectedRecord : {...selectedRecord},\r\n                            // isCopySpecRender: false\r\n                         });\r\n    }\r\n    onTreeClick = (event) => {\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupSpecification\",\r\n            screenName: \"IDS_SPECIFICATION\",\r\n            operation: \"get\",\r\n            keyName: \"treetemplatemanipulation\",\r\n            userinfo: this.props.Login.userInfo,\r\n            selectedRecord: event.item,\r\n            activeKey: event.key,\r\n            focusKey: event.key,\r\n            primaryKey: event.primaryKey,\r\n            historyDataState: this.state.historyDataState\r\n        };\r\n        this.props.getSpecification(inputParam, this.props.Login.masterData, this.searchRef);\r\n    }\r\n\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_FILE\",\r\n            <TestGroupSpecFile\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                deleteRecord={this.deleteRecord}\r\n                testGroupSpecFile={this.props.Login.masterData.TestGroupSpecFile || []}\r\n                selectedSpecification={this.props.Login.masterData.SelectedSpecification}\r\n                addTestFile={this.addFile}\r\n                editSpecFile={this.props.editSpecFile}\r\n                filterData={this.state.filterData}\r\n                viewTestFile={this.viewTestFile}\r\n                defaultRecord={this.defaultRecord}\r\n                screenName=\"IDS_FILE\"\r\n                viewAttachment={this.props.viewAttachment}\r\n                settings={this.props.Login.settings}\r\n                masterData={this.props.Login.masterData}\r\n            />);\r\n        tabMap.set(\"IDS_SPECIFICATIONHISTORY\",\r\n            <SpecificationHistory\r\n                data={this.props.Login.masterData.TestGroupSpecificationHistory}\r\n                dataResult={process(this.props.Login.masterData.TestGroupSpecificationHistory || [], this.state.historyDataState)}\r\n                dataState={this.state.historyDataState}\r\n                dataStateChange={this.historyDataStateChange}\r\n\r\n                // testGroupSpecificationHistory={this.props.Login.masterData.TestGroupSpecificationHistory}\r\n                // dataState={this.props.Login.screenName === \"IDS_SPECIFICATIONHISTORY\" ? this.state.historyDataState : { skip: 0, take: 10 }}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                userInfo={this.props.Login.userInfo}\r\n                inputParam={this.props.Login.inputParam}\r\n                screenName=\"IDS_SPECIFICATIONHISTORY\"\r\n            />);\r\n        return tabMap;\r\n    }\r\n\r\n    historyDataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.TestGroupSpecificationHistory || [], event.dataState),\r\n            historyDataState: event.dataState\r\n        });\r\n    }\r\n    specDataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.TestGroupTestClinicalSpec || [], event.dataState),\r\n            clinicalspecDataState: event.dataState\r\n        });\r\n    }\r\n    addFile = (userInfo, operation, ncontrolCode, screenName, modalName, nflag) => {\r\n        // const testgroupspecification = this.props.Login.masterData.SelectedSpecification;\r\n        // if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n        //     || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n        //     this.props.addTestFile(userInfo, operation, ncontrolCode, screenName, modalName, nflag);\r\n        // } else {\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n        // }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        if(masterData.selectedNode){\r\n            const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n                x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n    \r\n            const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n            if (templateVersionStatus === transactionStatus.RETIRED) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n            }\r\n            else {\r\n                const testgroupspecification = this.props.Login.masterData.SelectedSpecification;\r\n                if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                    || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                    this.props.addTestFile(userInfo, operation, ncontrolCode, screenName, modalName);\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n                }\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    componentRowClick = (event) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData[\"SelectedComponent\"] = event.testgroupspecsampletype[0];\r\n        const inputParam = {\r\n            testgroupspecsampletype: event.testgroupspecsampletype[0],\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        this.props.getTestGroupComponentDetails(inputParam, masterData, this.searchRef);\r\n    }\r\n\r\n    deleteTest = (deleteParam) => {\r\n        const masterData = this.props.Login.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const testgroupspecification = masterData.SelectedSpecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                const testgrouptest = deleteParam.props.testgrouptest;\r\n                const inputParam = {\r\n                    inputData: {\r\n                        testgrouptest,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        testgroupspecification,\r\n                        ntreeversiontempcode: deleteParam.filterData.ntreeversiontempcode.value,\r\n                        nprojectmastercode:masterData.selectedNode.nprojectmastercode?masterData.selectedNode.nprojectmastercode:-1\r\n                    },\r\n                    classUrl: \"testgroup\",\r\n                    operation: \"delete\",\r\n                    methodUrl: \"Test\",\r\n                    screenName: \"IDS_TEST\",\r\n                    postParam: {\r\n                        inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                        primaryKeyValue: testgrouptest.ntestgrouptestcode,\r\n                        fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                        masterData, searchFieldList, unchangeList: [\"TestGroupSpecification\", \"SelectedSpecification\",\r\n                            \"SampleType\", \"TreeVersionTemplate\", \"ProductCategory\", \"SelectedTest\", \"Product\",\r\n                            \"AgaramTree\", \"OpenNodes\", \"selectedNode\", \"FocusKey\", \"ActiveKey\", \"SelectedComponent\", \"TestGroupSpecSampleType\"]//, isSingleSelect: true\r\n                    }\r\n                }\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData },\r\n                            openModal: true, screenName: \"IDS_TEST\", operation: \"delete\", selectedRecord: {}\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\", {});\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let masterData = this.props.Login.masterData;\r\n        if (loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"Default\"\r\n                || this.props.Login.operation === 'approve' || this.props.Login.operation === 'complete') {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n                delete masterData.selectedRecordCopy;      \r\n                 } else {\r\n                loadEsign = false;\r\n                // selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            delete masterData.selectedRecordCopy;\r\n            delete masterData.CopyOpenNodes;\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord,masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onInputOnChange = (event, caseNo, optional) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                if (event.target.type === 'checkbox') {\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? optional[0] : optional[1];\r\n                } else if (event.target.type === 'radio') {\r\n                    selectedRecord[event.target.name] = optional;\r\n                    // selectedRecord[\"sfilename\"] = \"\";\r\n                } else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 2:\r\n                selectedRecord[event.target.name] = event.target.value;\r\n\r\n                const indexKey = Object.keys(optional)[0];\r\n                const value = Object.values(optional)[0];\r\n                const treeData = {\r\n                    ntreeversiontempcode: value.ntreeversiontempcode,\r\n                    npositioncode: value.nlevelno - 1,\r\n                    sleveldescription: event.target.value,\r\n                    ntemptranstestgroupcode: value.ntemptranstestgroupcode,\r\n                    nformcode: 62,\r\n                    schildnode: \"\",\r\n                    nnextchildcode: value.schildnode !== null ? value.schildnode : -1,\r\n                    ntemplatemanipulationcode: value.ntemplatemanipulationcode,\r\n                    isreadonly: value.ntemplatemanipulationcode > 0 ? true : false,\r\n                    slevelformat: value.slevelformat\r\n                }\r\n                let treetemplatemanipulation = selectedRecord.treetemplatemanipulation || [];\r\n                treetemplatemanipulation[indexKey] = treeData;\r\n                selectedRecord[\"treetemplatemanipulation\"] = treetemplatemanipulation;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onEsignInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    //Rules Engine Functions Start\r\n    ruleflowobject() {\r\n        let object = {};\r\n        //const labelColor = ['#e63109', '#2fb47d', '#eaa203', '#6554c0'];\r\n        //const labelBGColor = ['#fcd7cd', '#e5f8f1', '#fcf3dd', '#e7e6f5'];\r\n       // const borderColor = ['#e6310', '#c6f6e4', '#fde2a4', '#cbc5f7'];\r\n        let groupList = this.props.Login.masterData.SelectedRulesEngine['jsondata'];\r\n        let groupListJoins = this.props.Login.masterData.SelectedRulesEngine['jsonuidata'] &&\r\n            this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['groupListJoins'];\r\n        let children = [];\r\n        let parent = [];\r\n        let grandparent = [];\r\n        groupList.map((groupobject, index) => {\r\n            if (groupobject.hasOwnProperty('button_or')) {\r\n                children = [];\r\n                let rulesList = groupobject['button_or'];\r\n                rulesList.map((rule, index) => {\r\n                    children.push(\r\n                        {\r\n                            id: index, label: <>{(rule['stestname'].label) //+ \" -> \" + (this.props.intl.formatMessage({ id: \"IDS_WITH\" })) \r\n                            + \" -> \" +\r\n                                (rule['orderresulttype'].label) + \" -> \" +\r\n                                (rule['ssymbolname'].label) + \" -> \" + ( \r\n                                    (rule['ndiagnosticcasecode']&& rule['ndiagnosticcasecode'].label) \r\n                                    || (rule['ngradecode'] && rule['ngradecode'].label ) \r\n                                    || (rule['ntestgrouptestnumericcode'] && rule['ntestgrouptestnumericcode'])\r\n                                    || (rule['ntestgrouptestcharcode'] && rule['ntestgrouptestcharcode'] )\r\n                                    || (rule['ntestgrouptestpredefcode'] && rule['ntestgrouptestpredefcode'].label))\r\n\r\n                            }</>\r\n                        }\r\n                    )\r\n                })\r\n                if(groupList.length===1?rulesList.length>1:true){\r\n                 parent.push({ id: index, label: <div className=\"btn btn-primary\" >{this.props.intl.formatMessage({ id: \"IDS_OR\" })}</div>, children: children }) \r\n                }\r\n            }\r\n            if (groupobject.hasOwnProperty('button_and')) {\r\n                children = [];\r\n                let rulesList = groupobject['button_and'];\r\n                rulesList.map((rule, index) => {\r\n                    children.push(\r\n                        {\r\n                            id: index, label: <>{\r\n\r\n                                (rule['stestname'].label) //+ \" -> \" + (this.props.intl.formatMessage({ id: \"IDS_WITH\" })) \r\n                                + \" -> \" +\r\n                                (rule['orderresulttype'].label) + \" -> \" +\r\n                                (rule['ssymbolname'].label) + \" -> \" +  \r\n                                ( (rule['ndiagnosticcasecode'] && rule['ndiagnosticcasecode'].label)\r\n                                 || (rule['ngradecode'] && rule['ngradecode'].label)\r\n                                 || (rule['ntestgrouptestnumericcode'] && rule['ntestgrouptestnumericcode'])\r\n                                 || (rule['ntestgrouptestcharcode'] && rule['ntestgrouptestcharcode'])\r\n                                 || (rule['ntestgrouptestpredefcode'] && rule['ntestgrouptestpredefcode'].label))\r\n                            }</>\r\n                        }\r\n                    )\r\n                })\r\n                if(groupList.length===1?rulesList.length>1:true){\r\n                parent.push({ id: index, label: <div className=\"btn btn-primary\" >{this.props.intl.formatMessage({ id: \"IDS_AND\" })}</div>, children: children })\r\n                }\r\n            }\r\n            if (groupobject.hasOwnProperty('button_not_button_and')) {\r\n                children = [];\r\n                let rulesList = groupobject['button_not_button_and'];\r\n                rulesList.map((rule, index) => {\r\n                    children.push(\r\n                        {\r\n                            id: index, label: <>{(rule['stestname'].label) //+ \" -> \" + (this.props.intl.formatMessage({ id: \"IDS_WITH\" })) \r\n                            + \" -> \" +\r\n                                (rule['orderresulttype'].label) + \" -> \" +\r\n                                (rule['ssymbolname'].label) + \" -> \" +  ( rule['ndiagnosticcasecode']&& rule['ndiagnosticcasecode'].label ||\r\n                                rule['ngradecode']&&rule['ngradecode'].label||  rule['ntestgrouptestnumericcode']&&rule['ntestgrouptestnumericcode']||\r\n                                rule['ntestgrouptestcharcode']&&rule['ntestgrouptestcharcode']|| rule['ntestgrouptestpredefcode']&&rule['ntestgrouptestpredefcode'].label)\r\n\r\n                            }</>\r\n                        }\r\n                    )\r\n                })\r\n                let notarray = [{ id: index, label: <div className=\"btn btn-primary\" >{this.props.intl.formatMessage({ id: \"IDS_AND\" })}</div>, children: children }]\r\n                if(groupList.length===1?rulesList.length>1:true){\r\n                parent.push({ id: index, label: <div className=\"btn btn-primary\" >{this.props.intl.formatMessage({ id: \"IDS_NOT\" })}</div>, children: notarray })\r\n                }\r\n            }\r\n            if (groupobject.hasOwnProperty('button_not_button_or')) {\r\n                children = []\r\n                let rulesList = groupobject['button_not_button_or']\r\n                rulesList.map((rule, index) => {\r\n                    children.push(\r\n                        {\r\n                            id: index, label: <>{(rule['stestname'].label)// + \" -> \" + (this.props.intl.formatMessage({ id: \"IDS_WITH\" })) \r\n                            + \" -> \" +\r\n                                (rule['orderresulttype'].label) + \" -> \" +\r\n                                (rule['ssymbolname'].label) + \" -> \" +  ( rule['ndiagnosticcasecode']&& rule['ndiagnosticcasecode'].label ||\r\n                                rule['ngradecode']&&rule['ngradecode'].label||  rule['ntestgrouptestnumericcode']&&rule['ntestgrouptestnumericcode']||\r\n                                rule['ntestgrouptestcharcode']&&rule['ntestgrouptestcharcode']|| rule['ntestgrouptestpredefcode']&&rule['ntestgrouptestpredefcode'].label)\r\n\r\n                            }</>\r\n                        }\r\n                    )\r\n                })\r\n                let notarray = [{ id: index, label: <div className=\"btn btn-primary\" >{this.props.intl.formatMessage({ id: \"IDS_OR\" })}</div>, children: children }]\r\n                if(groupList.length===1?rulesList.length>1:true){\r\n                parent.push({ id: index, label: <div className=\"btn btn-primary\" >{this.props.intl.formatMessage({ id: \"IDS_NOT\" })}</div>, children: notarray })\r\n                }\r\n            }\r\n        })\r\n\r\n        if (groupListJoins !== undefined) {\r\n            groupListJoins.map((join, index) => {\r\n                let parentjoins = []\r\n                if (join.hasOwnProperty('button_or') && join['button_or'] === true) {\r\n                    let notarray = []\r\n                    parentjoins.push(parent[index])\r\n                    parentjoins.push(parent[index + 1])\r\n                    if (join.hasOwnProperty('button_not') && join['button_not'] === true) {\r\n                        notarray = [{\r\n                            id: index, label: <div className=\"btn btn-primary\" >\r\n                                {this.props.intl.formatMessage({ id: \"IDS_OR\" })} </div>// 'button_or'\r\n                            , children: parentjoins\r\n                        }]\r\n                        grandparent.push({\r\n                            id: index, label: <div className=\"btn btn-primary\" >\r\n                                {this.props.intl.formatMessage({ id: \"IDS_NOT\" })} </div>// 'button_or'\r\n                            , children: notarray\r\n                        })\r\n                    }\r\n                    else {\r\n                        grandparent.push({\r\n                            id: index, label: <div className=\"btn btn-primary\" >\r\n                                {this.props.intl.formatMessage({ id: \"IDS_OR\" })} </div>// 'button_or'\r\n                            , children: parentjoins\r\n                        })\r\n                    }\r\n                }\r\n                if (join.hasOwnProperty('button_and') && join['button_and'] === true) {\r\n                    let notarray = []\r\n                    parentjoins.push(parent[index])\r\n                    parentjoins.push(parent[index + 1])\r\n                    if (join.hasOwnProperty('button_not') && join['button_not'] === true) {\r\n                        notarray = [{\r\n                            id: index, label: <div className=\"btn btn-primary\" >\r\n                                {this.props.intl.formatMessage({ id: \"IDS_AND\" })} </div>// 'button_or'\r\n                            , children: parentjoins\r\n                        }]\r\n                        grandparent.push({\r\n                            id: index, label: <div className=\"btn btn-primary\" >\r\n                                {this.props.intl.formatMessage({ id: \"IDS_NOT\" })} </div>// 'button_or'\r\n                            , children: notarray\r\n                        })\r\n                    }\r\n                    else {\r\n                        grandparent.push({\r\n                            id: index, label: <div className=\"btn btn-primary\" >{this.props.intl.formatMessage({ id: \"IDS_AND\" })}</div>// 'button_and'\r\n                            , children: parentjoins\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        object = grandparent.length > 0 ?\r\n            {\r\n                id: 0,\r\n                label: <div className=\"btn btn-primary\" >{this.props.Login.masterData.SelectedRulesEngine.srulename} </div>,\r\n                children: grandparent\r\n            }\r\n            : {\r\n                id: 0,\r\n                label: <div className=\"btn btn-primary\" >{this.props.Login.masterData.SelectedRulesEngine.srulename} </div>,\r\n                children: parent.length!==0?parent:children\r\n            }\r\n        return object\r\n    }\r\n    onTabChangeRulesEngine = (tabProps) => {\r\n        let masterData = this.props.Login.masterData && this.props.Login.masterData\r\n        masterData['activeTabName'] = tabProps.activeTabName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    tabDetailRulesEngine = () => {\r\n        let masterData = this.props.Login.masterData || {};\r\n        let jsonuidata = this.props.Login.masterData.SelectedRulesEngine && this.props.Login.masterData.SelectedRulesEngine['jsonuidata'] \r\n        const tabMap = new Map();\r\n        {\r\n            tabMap.set(\"IDS_Test\",\r\n                <DataGrid\r\n                    key=\"testsectionkey\"\r\n                    primaryKeyField=\"nresultusedmaterialcode\"\r\n                    expandField=\"expanded\"\r\n                    handleExpandChange={this.handleExpandChange} \r\n                    dataResult={this.props.Login.masterData.SelectedRulesEngine &&\r\n                        this.props.Login.masterData.SelectedRulesEngine && process(\r\n                            sortData(this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testInitiateTests'], \"descending\", \"npkAtestparametercode\")\r\n                            || [],\r\n                            this.state.dataStatetestinitiate\r\n                                ? this.state.dataStatetestinitiate : { skip: 0, take: 10 })} \r\n                    dataState={this.state.dataStatetestinitiate\r\n                        ? this.state.dataStatetestinitiate : { skip: 0, take: 10 }} \r\n                    dataStateChange={this.dataStateChangetestinitiateTab}\r\n\r\n                    extractedColumnList={[\r\n                        { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" } \r\n                    ]}\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    pageable={true} \r\n                    scrollable={'scrollable'}\r\n                    hideColumnFilter={false}\r\n                    selectedId={0} \r\n                    deleteParam={{ operation: \"delete\" }} \r\n                    hasChild={true}\r\n                    childMappingField={'npkAtestparametercode'}\r\n                    childColumnList={[\r\n                        { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"stositename\", \"width\": \"200px\" },\r\n                        { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"sfromsitename\", \"width\": \"200px\" }\r\n                        \r\n                    ]}\r\n                    childList={this.state.childListMap}\r\n                    activeTabName={\"IDS_Test\"}\r\n                    //gridHeight = {'400px'}\r\n                    isActionRequired={true}\r\n                    actionIcons={[{\r\n                        title: this.props.intl.formatMessage({ id: \"IDS_VIEWPARAMETER\" }),\r\n                        controlname: \"faEye\",\r\n                        hidden: false,\r\n                        objectName: \"view\",\r\n                        onClick: this.viewParameter\r\n\r\n                    }]}\r\n                >\r\n                </DataGrid>); \r\n            tabMap.set(\"IDS_COMMENTS\",\r\n            <DataGrid\r\n                key=\"testsectionkey\"\r\n                primaryKeyField=\"nresultusedmaterialcode\" \r\n                handleExpandChange={this.handleExpandChange} \r\n                dataResult={this.props.Login.masterData.SelectedRulesEngine && process(\r\n                    sortData(this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testCommentsTestsTab'], \"descending\", \"nslno\")\r\n                    || [],\r\n                    this.state.dataState\r\n                        ? this.state.dataState : { skip: 0, take: 10 })} \r\n                dataState={this.state.dataState\r\n                    ? this.state.dataState : { skip: 0, take: 10 }} \r\n                dataStateChange={this.dataStateChange} \r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                pageable={true} \r\n                scrollable={'scrollable'}\r\n                hideColumnFilter={false}\r\n                selectedId={0} \r\n                deleteParam={{ operation: \"delete\" }} \r\n                childMappingField={'npkBtestparametercode'} \r\n                extractedColumnList={[\r\n                    { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"200px\" },\r\n                    { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" },\r\n                    { \"idsName\": \"IDS_COMMENTSUBTYPE\", \"dataField\": \"scommentsubtype\", \"width\": \"200px\" }, \r\n                    { \"idsName\": \"IDS_COMMENTTYPE\", \"dataField\": \"scommenttype\", \"width\": \"200px\" } ,\r\n                    { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" }   \r\n                ]}\r\n                childList={this.state.childListMap2 && this.state.childListMap2}\r\n                activeTabName={\"IDS_COMMENTS\"}\r\n                //gridHeight = {'400px'}\r\n                >\r\n            </DataGrid>\r\n        ); \r\n        tabMap.set(\"IDS_REPEAT\",\r\n        <DataGrid\r\n            key=\"testsectionkey\"\r\n            primaryKeyField=\"nresultusedmaterialcode\"  \r\n            dataResult={this.props.Login.masterData.SelectedRulesEngine && process(\r\n                sortData(this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testRepeatTestsTab'], \"descending\", \"npkCtestparametercode\")\r\n                || [],\r\n                this.state.dataStaterepeatTab\r\n                    ? this.state.dataStaterepeatTab : { skip: 0, take: 10 })} \r\n            dataState={this.state.dataStaterepeatTab\r\n                ? this.state.dataStaterepeatTab : { skip: 0, take: 10 }} \r\n            dataStateChange={this.dataStateChangeRepeatTab} \r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            pageable={true} \r\n            scrollable={'scrollable'}\r\n            hideColumnFilter={false}\r\n            selectedId={0} \r\n            deleteParam={{ operation: \"delete\" }}  \r\n            extractedColumnList={[ \r\n                { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPEATCOUNT\", \"dataField\": \"nrepeatcountno\", \"width\": \"200px\" }  \r\n\r\n            ]} \r\n            activeTabName={\"IDS_COMMENTS\"}\r\n            //gridHeight = {'400px'}\r\n            >\r\n        </DataGrid>\r\n    ); \r\n    tabMap.set(\"IDS_ENFORCERESULT\",\r\n    <DataGrid\r\n        key=\"testsectionkey\"\r\n        primaryKeyField=\"nresultusedmaterialcode\"  \r\n        dataResult={this.props.Login.masterData.SelectedRulesEngine && process(\r\n            sortData(this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testenforceTestsTab'], \"descending\", \"npkDtestparametercode\")\r\n            || [],\r\n            this.state.dataStateChangenforceTab\r\n                ? this.state.dataStateChangenforceTab : { skip: 0, take: 10 })} \r\n        dataState={this.state.dataStateChangenforceTab\r\n            ? this.state.dataStateChangenforceTab : { skip: 0, take: 10 }} \r\n        dataStateChange={this.dataStateChangenforceTab} \r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        pageable={true} \r\n        scrollable={'scrollable'}\r\n        hideColumnFilter={false}\r\n        selectedId={0} \r\n        deleteParam={{ operation: \"delete\" }}  \r\n        extractedColumnList={[ \r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" }, \r\n            { \"idsName\": \"IDS_PARAMETERS\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"senforceresult\", \"width\": \"200px\" }\r\n        ]} \r\n        activeTabName={\"IDS_COMMENTS\"}\r\n        //gridHeight = {'400px'}\r\n        >\r\n    </DataGrid>\r\n); \r\n        }\r\n        return tabMap;\r\n    }\r\n    dataStateChange = (event, ntestgrouptestparametercode) => {\r\n        let dataStateObject = this.state.dataStateObject || {}\r\n        if (ntestgrouptestparametercode) {\r\n            dataStateObject = {\r\n                ...dataStateObject,\r\n                [ntestgrouptestparametercode]: event.dataState\r\n            }\r\n            this.setState({\r\n                dataStateObject\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                dataState: event.dataState\r\n            });\r\n        }\r\n\r\n    }\r\n    dataStateChangetestRepeat = (event) => {\r\n        this.setState({\r\n            //  dataResult: process(this.props.Login.queryData, event.dataState),\r\n            dataStatetestRepeat: event.dataState\r\n        });\r\n    }\r\n    dataStateChangetestEnforce = (event) => {\r\n        this.setState({\r\n            //  dataResult: process(this.props.Login.queryData, event.dataState),\r\n            dataStatetestEnforce: event.dataState\r\n        });\r\n    }\r\n    dataStateChangetestinitiateTab = (event) => {\r\n        this.setState({\r\n            //  dataResult: process(this.props.Login.queryData, event.dataState),\r\n            dataStatetestinitiate: event.dataState\r\n        });\r\n    }\r\n    dataStateChangeViewParameter = (event) => {\r\n        this.setState({ \r\n            dataStateChangeViewParameter: event.dataState\r\n        });\r\n    }\r\n    dataStateChangeRepeatTab = (event) => {\r\n        this.setState({\r\n            //  dataResult: process(this.props.Login.queryData, event.dataState),\r\n            dataStaterepeatTab: event.dataState\r\n        });\r\n    } \r\n    dataStateChangenforceTab = (event) => {\r\n        this.setState({\r\n            //  dataResult: process(this.props.Login.queryData, event.dataState),\r\n            dataStateChangenforceTab: event.dataState\r\n        });\r\n    } \r\n    dataStateChangeMain = (event) => {\r\n        this.setState({\r\n            dataResultMain: process(this.props.Login.queryDataMain, event.dataStateMain),\r\n            dataStateMain: event.dataStateMain\r\n        });\r\n    }\r\n    ConfirmDeleteRule = (deleteId) => {\r\n        if(this.props.Login.masterData['RulesEngine']&&this.props.Login.masterData['RulesEngine'].length>0){ \r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\r\n        }\r\n        else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRULETODELETE\" })); \r\n        }\r\n    }\r\n    handleClickDelete(masterData, ncontrolcode//, modalName\r\n    ) {\r\n        const fieldArray = [];\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupRulesEngine\",\r\n            classUrl: \"testgrouprulesengine\",\r\n            inputData: {\r\n                \"ntestgrouptestcode\": this.props.Login.masterData.SelectedTest.ntestgrouptestcode,\r\n                \"ntestgrouprulesenginecode\": this.props.Login.masterData.SelectedRulesEngine.ntestgrouprulesenginecode,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"selectedValueForAudit\":{\r\n            sproductcatname:this.state.filterData.nproductcatcode && this.state.filterData.nproductcatcode.label||'NA',\r\n            sproductname:this.state.filterData.nproductcode && this.state.filterData.nproductcode.label||'NA',\r\n            sspecname:this.props.Login.masterData.SelectedSpecification.sspecname||'NA',\r\n            scomponentname:this.props.Login.masterData.SelectedComponent.scomponentname||'NA',\r\n            stestsynonym:this.props.Login.masterData.SelectedTest.stestsynonym||'NA',\r\n            sleveldescription:this.props.Login.masterData.selectedNode.sleveldescription||'NA',\r\n            srulename:this.props.Login.masterData.SelectedRulesEngine.srulename\r\n        }\r\n            },\r\n            operation: \"delete\", //postParam,\r\n            displayName: \"RulesEngine\",\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },// [modalName]: true,\r\n                    operation: 'delete', screenName: \"IDS_RULESENGINE\", id: \"RulesEngine\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, undefined\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    approveVersion(masterData, nflag, ncontrolcode//, modalName\r\n    ) {\r\n        if (masterData['RulesEngine']&&masterData['RulesEngine'].length > 0) {\r\n            const fieldArray = [];\r\n            const inputParam = {\r\n                methodUrl: \"TestGroupRulesEngine\",\r\n                classUrl: \"testgrouprulesengine\",\r\n                inputData: {\r\n                    \"ntestgrouptestcode\": this.props.Login.masterData.SelectedTest.ntestgrouptestcode,\r\n                    \"ntestgrouprulesenginecode\": this.props.Login.masterData.SelectedRulesEngine.ntestgrouprulesenginecode,\r\n                    \"userinfo\": this.props.Login.userInfo, nflag: nflag,\r\n                    \"selectedValueForAudit\":{\r\n                        sproductcatname:this.state.filterData.nproductcatcode && this.state.filterData.nproductcatcode.label||'NA',\r\n                        sproductname:this.state.filterData.nproductcode && this.state.filterData.nproductcode.label||'NA',\r\n                        sspecname:this.props.Login.masterData.SelectedSpecification.sspecname||'NA',\r\n                        scomponentname:this.props.Login.masterData.SelectedComponent.scomponentname||'NA',\r\n                        stestsynonym:this.props.Login.masterData.SelectedTest.stestsynonym||'NA',\r\n                        sleveldescription:this.props.Login.masterData.selectedNode.sleveldescription||'NA',\r\n                        srulename:this.props.Login.masterData.SelectedRulesEngine.srulename\r\n                    }\r\n                },\r\n                operation: \"approve\", //postParam,\r\n                displayName: \"RulesEngine\",\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },// [modalName]: true,\r\n                        operation: 'approve', screenName: \"IDS_RULESENGINE\", id: \"RulesEngine\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, undefined\r\n                );\r\n            }\r\n        }\r\n        else {\r\n            if(nflag==1)\r\n            { \r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRULETOAPPROVE\" }));  \r\n            }\r\n            else\r\n            { \r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRULETORETIRE\" }));  \r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    closeModalShow = () => {\r\n        let openModalPopup = this.props.Login.openModalPopup;\r\n        let modalParameterPopup = this.props.Login.modalParameterPopup\r\n        let selectedRecord = this.props.Login.selectedRecord || {};\r\n        selectedRecord['srulename'] = \"\"\r\n        if( selectedRecord['ParameterRulesEngine']){\r\n            selectedRecord['ParameterRulesEngine']=[]\r\n        }\r\n        openModalPopup = false;\r\n        modalParameterPopup = false;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModalPopup, selectedRecord,modalParameterPopup }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onModalSavePredefAlert =()=>{\r\n        const selectedRecord = this.state.selectedRecord || [];\r\n        let currentAlertResultCode=this.state.currentAlertResultCode||0; \r\n        let currentntestgrouptestpredefcode=this.state.currentntestgrouptestpredefcode||0; \r\n        let bool=this.state.selectedRecord.ParameterRulesEngine.some(x=>x['ntestgrouptestparametercode']===currentAlertResultCode) \r\n        if(bool){\r\n          this.state.selectedRecord.ParameterRulesEngine.map(Parameter=>\r\n              {\r\n                  if(Parameter['ntestgrouptestparametercode']===currentAlertResultCode){ \r\n                      Parameter['additionalInfoUidata']={ntestgrouptestpredefsubcode: selectedRecord['ntestgrouptestpredefsubcode']}\r\n                      if(selectedRecord['ntestgrouptestpredefsubcode']){\r\n                          if(typeof selectedRecord['ntestgrouptestpredefsubcode']==='string'){\r\n                              Parameter['additionalInfo']=selectedRecord['ntestgrouptestpredefsubcode']\r\n                          }else{\r\n                              Parameter['additionalInfo']=\"\" \r\n                              Parameter['additionalInfo']=selectedRecord['ntestgrouptestpredefsubcode'].map(x=>x.label+\",\").join('\\n')\r\n                                Parameter['additionalInfo']=Parameter['additionalInfo'].substring(0,\r\n                                   Parameter['additionalInfo'].length-1) \r\n                          } \r\n                      } else{\r\n                          Parameter['additionalInfo']=\"\"\r\n                          Parameter['additionalInfoUidata'] && delete Parameter['additionalInfoUidata']\r\n                      }\r\n                      Parameter['ntestgrouptestpredefcode']=currentntestgrouptestpredefcode\r\n                  }\r\n              }\r\n              );  \r\n        } \r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: { selectedRecord: selectedRecord,showAlertGrid:false}\r\n      }\r\n      this.props.updateStore(updateInfo);\r\n      }\r\n  \r\n\r\n    closeModalShowPredefAlert = () => {\r\n        let showAlertGrid = this.props.Login.showAlertGrid;\r\n        let  selectedRecord=this.props.Login.selectedRecord; \r\n        let masterData = this.props.Login.masterData && this.props.Login.masterData\r\n        // masterData['RESelectedTest'].forEach(object => {\r\n        //     object['expanded']&&delete object['expanded'];\r\n        //   });\r\n          selectedRecord['ntestgrouptestpredefsubcode'] &&delete selectedRecord['ntestgrouptestpredefsubcode'] \r\n        showAlertGrid = false; \r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showAlertGrid   ,masterData,selectedRecord}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onsavevalidation = (selectedRecord) => {\r\n        let grouplist = selectedRecord[\"groupList\"]\r\n        let hasAll = true;\r\n        for (var i = 0; i < grouplist.length; i++) {\r\n            let rules = grouplist[i]\r\n            for (var j = 0; j < rules.length; j++) {\r\n                let props = []\r\n                if (rules[j][\"orderresulttype\"] && rules[j][\"orderresulttype\"].value === 1) {\r\n                    props = [\"stestname\", \"ssymbolname\", \"orderresulttype\", \"ndiagnosticcasecode\"];\r\n                }\r\n                else if (rules[j][\"orderresulttype\"] && rules[j][\"orderresulttype\"].value === 3) {\r\n                    if(rules[j][\"stestname\"] && rules[j][\"stestname\"]['item']['nparametertypecode'] === parameterType.PREDEFINED)\r\n                    {\r\n                        props = [\"stestname\", \"ssymbolname\", \"orderresulttype\", \"ntestgrouptestpredefcode\"]; \r\n\r\n                    }\r\n                    else if(rules[j][\"stestname\"] && rules[j][\"stestname\"]['item']['nparametertypecode'] === parameterType.CHARACTER)\r\n                    {\r\n                        props = [\"stestname\", \"ssymbolname\", \"orderresulttype\", \"ntestgrouptestcharcode\"]; \r\n\r\n                    }\r\n                    else if (rules[j][\"stestname\"] && rules[j][\"stestname\"]['item']['nparametertypecode'] === parameterType.NUMERIC)\r\n                    {\r\n                        props = [\"stestname\", \"ssymbolname\", \"orderresulttype\", \"ntestgrouptestnumericcode\"]; \r\n\r\n                    } \r\n                    else\r\n                    {\r\n                        if (rules[j][\"orderresulttype\"] && rules[j][\"orderresulttype\"].value === 1) {\r\n                            props = [\"stestname\", \"ssymbolname\", \"orderresulttype\", \"ndiagnosticcasecode\"];\r\n                        }\r\n                        else {\r\n                            props = [\"stestname\", \"ssymbolname\", \"orderresulttype\", \"ngradecode\"];\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    props = [\"stestname\", \"ssymbolname\", \"orderresulttype\", \"ngradecode\"];\r\n                }\r\n                hasAll = props.every(prop => rules[j].hasOwnProperty(prop));\r\n                if (hasAll === false) {\r\n                    break;\r\n                }\r\n            }\r\n            if (hasAll === false) {\r\n                break;\r\n            }\r\n        }\r\n        return hasAll\r\n    }\r\n    save = () => {\r\n        let inputData = [];\r\n        let siteObject = this.props.Login.siteObject || {};\r\n        let testCommentObject = this.props.Login.testCommentObject || {};\r\n        let reportCommentObject = this.props.Login.reportCommentObject || {};\r\n        let PredefinedParameterOptions= this.props.Login.masterData.PredefinedParameterOptions||[]  \r\n\r\n        let testInitiateTests = this.props.Login.testInitiateTests || [];\r\n        let testCommentsTests = this.props.Login.testCommentsTests || [];\r\n        let reportCommentsTests = this.props.Login.reportCommentsTests || [];\r\n \r\n        let testRepeatTests = this.props.Login.testRepeatTests || [];\r\n        let testenforceTests = this.props.Login.testenforceTests || [];\r\n        let testsInvolvedInRules=[]\r\n        let testsNameInvolvedInRules=[]\r\n\r\n        const { selectedRecord } = this.state;\r\n        let rules = []\r\n        //  if (selectedRecord[\"nproductcatcode\"]) {\r\n            if(testInitiateTests.length > 0||testCommentsTests.length > 0||testRepeatTests.length > 0||testenforceTests.length > 0){\r\n        if (selectedRecord[\"groupList\"].length > 0) {\r\n            if (this.onsavevalidation(selectedRecord)) {\r\n                if (selectedRecord[\"srulename\"] && selectedRecord[\"srulename\"] !== \"\" && this.props.Login.action !== 'update'\r\n                    && this.props.Login.action !== 'IDS_ADDTESTCOMMENTS' && this.props.Login.action !== 'IDS_ADDREPORTCOMMENTS'\r\n                    && this.props.Login.action !== 'IDS_ADDTEST' && this.props.Login.action !== 'IDS_ADDSITE'\r\n                    && this.props.Login.action !== 'IDS_ADDPARAMETER'\r\n                ) {\r\n\r\n                    if (selectedRecord[\"groupList\"]) {\r\n                        let groupList = [];\r\n                        let outcomeList = {};\r\n                        groupList = selectedRecord[\"groupList\"];\r\n\r\n                        outcomeList['groupList'] = groupList\r\n                        outcomeList['addGroupList'] = this.props.Login.addGroupList\r\n                        outcomeList['testInitiateTests'] = this.props.Login.testInitiateTests && this.props.Login.testInitiateTests\r\n                        outcomeList['testCommentsTests'] = this.props.Login.testCommentsTests && this.props.Login.testCommentsTests\r\n                        outcomeList['testRepeatTests'] = this.props.Login.testRepeatTests && this.props.Login.testRepeatTests\r\n                        outcomeList['testenforceTests'] = this.props.Login.testenforceTests && this.props.Login.testenforceTests\r\n\r\n                        outcomeList['reportCommentsTests'] = this.props.Login.reportCommentsTests && this.props.Login.reportCommentsTests\r\n                        outcomeList['siteObject'] = this.props.Login.siteObject && this.props.Login.siteObject\r\n                        outcomeList['testCommentObject'] = this.props.Login.testCommentObject && this.props.Login.testCommentObject\r\n                        outcomeList['reportCommentObject'] = this.props.Login.reportCommentObject && this.props.Login.reportCommentObject\r\n                        outcomeList['testInitiateSiteTab'] = this.props.Login.masterData.testInitiateSiteTab && this.props.Login.masterData.testInitiateSiteTab\r\n                        outcomeList['testCommentsTestsTab'] = this.props.Login.masterData.testCommentsTestsTab && this.props.Login.masterData.testCommentsTestsTab\r\n                        outcomeList['reportCommentsTestsTab'] = this.props.Login.reportCommentsTestsTab && this.props.Login.reportCommentsTestsTab\r\n                        outcomeList['testRepeatTestsTab'] =  this.props.Login.masterData['testRepeatTestsTab']&& this.props.Login.masterData['testRepeatTestsTab']\r\n                        outcomeList['testenforceTestsTab'] =  this.props.Login.masterData['testenforceTestsTab']&& this.props.Login.masterData['testenforceTestsTab']\r\n                        outcomeList['PredefinedParameterOptions']=PredefinedParameterOptions\r\n                        // outcomeList['nproductcatcode'] = selectedRecord['nproductcatcode']\r\n                        outcomeList['ntestgrouptestcode'] = this.props.Login.masterData.SelectedTest.ntestgrouptestcode\r\n                        // outcomeList['nallottedspeccode'] = selectedRecord['nallottedspeccode']\r\n                        // outcomeList['ncomponentcode'] = selectedRecord['ncomponentcode'] \r\n                        outcomeList['groupListJoins'] = selectedRecord['groupListJoins']?selectedRecord['groupListJoins']:[]\r\n\r\n                        let ruleEngineLayout = []\r\n                        let ruleEngineLayoutObject = []\r\n                        let groupRuleObject = {}\r\n\r\n                        groupList.map((List) => \r\n                        List.map(x=>{\r\n                            testsInvolvedInRules.push(x.stestname.item.ntestgrouptestcode);\r\n                            testsNameInvolvedInRules.push(x.stestname.item);\r\n                        }) \r\n                        )\r\n                        outcomeList['testsNameInvolvedInRules'] = testsNameInvolvedInRules\r\n                        outcomeList['testsInvolvedInRules'] = testsInvolvedInRules\r\n                        groupList.map((List) => {\r\n                            if (List.hasOwnProperty('button_or') && List['button_or'] === true) {\r\n                                if (List.hasOwnProperty('button_not') && List['button_not'] === true) {\r\n                                    groupRuleObject['button_not_button_or'] = List\r\n                                }\r\n                                else {\r\n                                    groupRuleObject['button_or'] = List\r\n                                }\r\n                                // groupRuleObject['button_or'] = List\r\n                                ruleEngineLayout.push(groupRuleObject)\r\n                                groupRuleObject = {}\r\n                            }\r\n                            if (List.hasOwnProperty('button_and') && List['button_and'] === true) {\r\n                                if (List.hasOwnProperty('button_not') && List['button_not'] === true) {\r\n                                    groupRuleObject['button_not_button_and'] = List\r\n                                }\r\n                                else {\r\n                                    groupRuleObject['button_and'] = List\r\n                                }\r\n                                //  groupRuleObject['button_and'] = List\r\n                                ruleEngineLayout.push(groupRuleObject)\r\n                                groupRuleObject = {}\r\n                            }\r\n                        })\r\n                        ruleEngineLayoutObject = groupList.hasOwnProperty('button_or') && groupList['button_or'] === true ?\r\n                            {\r\n                                'button_or': ruleEngineLayout\r\n                            } : {\r\n                                'button_and': ruleEngineLayout\r\n                            }\r\n                       // console.log('savelist--->', JSON.stringify(ruleEngineLayoutObject))\r\n                        //  inputData['nproductcatcode'] = this.props.Login.masterData.SelectedProductCategory.nproductcatcode\r\n                        //  inputData['nproductcatcode'] = selectedRecord['nproductcatcode'].value\r\n                        inputData['ntestgrouptestcode'] = this.props.Login.masterData.SelectedTest.ntestgrouptestcode\r\n                        // inputData['nallottedspeccode'] = selectedRecord['nallottedspeccode'].value\r\n                        // inputData['ncomponentcode'] = selectedRecord['ncomponentcode'].value\r\n                        inputData['srulename'] = selectedRecord['srulename']\r\n                     //   inputData['nruleexecorder'] = parseInt(selectedRecord['nruleexecorder'])\r\n                        inputData['outcomeList'] = JSON.stringify(outcomeList)\r\n                        inputData['jsondata'] = JSON.stringify(ruleEngineLayout)\r\n                        inputData['userinfo'] = this.props.Login.userInfo\r\n                        inputData['selectedValueForAudit']={\r\n                            sproductcatname:this.state.filterData.nproductcatcode && this.state.filterData.nproductcatcode.label||'NA',\r\n                            sproductname:this.state.filterData.nproductcode && this.state.filterData.nproductcode.label||'NA',\r\n                            sspecname:this.props.Login.masterData.SelectedSpecification.sspecname||'NA',\r\n                            scomponentname:this.props.Login.masterData.SelectedComponent.scomponentname||'NA',\r\n                            stestsynonym:this.props.Login.masterData.SelectedTest.stestsynonym||'NA',\r\n                            sleveldescription:this.props.Login.masterData.selectedNode.sleveldescription||'NA',\r\n                            srulename:selectedRecord['srulename']\r\n                        }\r\n                        if (this.props.Login.operation === 'update') {\r\n                            inputData['ntestgrouprulesenginecode'] = this.props.Login.masterData.SelectedRulesEngine['ntestgrouprulesenginecode']\r\n                        }\r\n                        const inputParam = {\r\n                            classUrl: \"testgrouprulesengine\",\r\n                            methodUrl: \"TestGroupRulesEngine\",\r\n                            displayName: this.props.Login.inputParam.displayName,\r\n                            inputData: inputData,\r\n                            operation: this.props.Login.operation === 'create' ? 'create' : 'update'\r\n                        }\r\n                        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openPortalModal\");\r\n                    }\r\n                    else {\r\n                        toast.info(this.props.intl.formatMessage({ id: \"IDS_PLEASEADDRULE\" }));\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    selectedRecord['srulename'] = selectedRecord['srulenamecopy'] || \"\"\r\n                  //  selectedRecord['nruleexecorder'] = selectedRecord['nruleexecordercopy'] || \"\"\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { openModalPopup: true, selectedRecord, action: \"IDS_SAVERULEMODAL\", openmodalsavePopup: true }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                    //   toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERRULESENGINENAME\" }));\r\n\r\n                }\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_COMPLETETHERULETOSAVE\" }));\r\n            }\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_ATLEASTADDONERULE\" }));\r\n        } \r\n    }\r\n    else{\r\n        toast.info(this.props.intl.formatMessage({ id: \"IDS_ATLEASTADDONEOUTCOME\" })); \r\n    }\r\n    } \r\n    onOutcomeChange = (comboData, index) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[\"outComeList\"] = []\r\n        selectedRecord[\"outComeList\"][index] = []\r\n        selectedRecord[\"outComeList\"][index] = comboData;\r\n        if (selectedRecord[\"outComeList\"][index]) {\r\n            this.setState({\r\n                selectedRecord\r\n            });\r\n        }\r\n    }\r\n    writtenRules = (data) => {\r\n        let selectedRecord = this.state.selectedRecord || {}\r\n        let grouplist = selectedRecord[\"groupList\"]\r\n        let activeTabIndex = this.props.Login.activeTabIndex || 0;\r\n        if (activeTabIndex === 1) {\r\n            let boolean = grouplist.every(x => x.every(y => y['stestname']['item'].ntestgrouptestcode !== data['item'].ntestgrouptestcode)\r\n            )\r\n            if (boolean) {\r\n                return data;\r\n            }\r\n        }\r\n        else {\r\n            let boolean = grouplist.some(x => x.some(y => y['stestname']['item'].ntestgrouptestcode === data['item'].ntestgrouptestcode)\r\n            )\r\n            if (boolean) {\r\n                return data;\r\n            }\r\n        } \r\n    } \r\n    selectedTestRemove = (data) => {\r\n        let activeTabIndex = this.props.Login.activeTabIndex || 0;\r\n        if (activeTabIndex === 1) {\r\n            if (this.props.Login.masterData.SelectedTest.ntestgrouptestcode !== data['item'].ntestgrouptestcode) {\r\n                return data;\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.Login.masterData.SelectedTest.ntestgrouptestcode === data['item'].ntestgrouptestcode) {\r\n                return data;\r\n            }\r\n        } \r\n    }\r\n    outComeTestsRemoveFromRules = (data) => { \r\n        let testInitiateTests=this.props.Login.testInitiateTests;\r\n        let boolean = testInitiateTests.every(x => x['ntestgrouptestcode']!== data['item'].ntestgrouptestcode)\r\n            if (boolean) {\r\n                return data;\r\n            } \r\n    }\r\n  \r\n\r\n    addTest = (tabName) => {\r\n        let openModalPopup = this.props.Login.openModalPopup;\r\n        let action = this.props.Login.action;\r\n        let selectedRecord = this.props.Login.selectedRecord || {}\r\n\r\n        let rulesOption = this.props.Login.masterData.rulesOption || [];\r\n        let testInitiateTestCombo = this.props.Login.masterData.testInitiateTestCombo || [];\r\n        let testCommentsTestCombo = this.props.Login.masterData.testCommentsTestCombo || [];\r\n        let testRepeatTestCombo = this.props.Login.masterData.testRepeatTestCombo || [];\r\n        let testenforceTestCombo = this.props.Login.masterData.testenforceTestCombo || [];\r\n\r\n        if (tabName == 'IDS_Test') {\r\n            testInitiateTestCombo = testInitiateTestCombo.filter(this.selectedTestRemove);\r\n            testInitiateTestCombo = testInitiateTestCombo.filter(this.writtenRules);\r\n            selectedRecord['ParameterRulesEngine']&& delete selectedRecord['ParameterRulesEngine'] \r\n        }\r\n        else if (tabName == 'IDS_COMMENTS') {\r\n            let selectedTestTempArray = []\r\n            selectedTestTempArray = testCommentsTestCombo.filter(this.selectedTestRemove);\r\n            testCommentsTestCombo = testCommentsTestCombo.filter(this.writtenRules);\r\n            let duplicatePresent = selectedTestTempArray.some(x => testCommentsTestCombo.some(y => y['item'].ntestgrouptestcode === x['item'].ntestgrouptestcode))\r\n            if (duplicatePresent) {\r\n                testCommentsTestCombo = testCommentsTestCombo\r\n            } else {\r\n                testCommentsTestCombo = [...testCommentsTestCombo, ...selectedTestTempArray];\r\n            }\r\n        }\r\n        else if (tabName == 'IDS_REPEAT') {\r\n            let selectedTestTempArray = []\r\n            selectedTestTempArray = testRepeatTestCombo.filter(this.selectedTestRemove);\r\n            testRepeatTestCombo = testRepeatTestCombo.filter(this.writtenRules);\r\n            let duplicatePresent = selectedTestTempArray.some(x => testRepeatTestCombo.some(y => y['item'].ntestgrouptestcode === x['item'].ntestgrouptestcode))\r\n            if (duplicatePresent) {\r\n                testRepeatTestCombo = testRepeatTestCombo\r\n            } else {\r\n                testRepeatTestCombo = [...testRepeatTestCombo, ...selectedTestTempArray];\r\n            }\r\n        }\r\n        else if (tabName == 'IDS_ENFORCERESULT') {\r\n            let selectedTestTempArray = []\r\n            selectedTestTempArray = testenforceTestCombo.filter(this.selectedTestRemove);\r\n            testenforceTestCombo = testenforceTestCombo.filter(this.writtenRules);\r\n            let duplicatePresent = selectedTestTempArray.some(x => testenforceTestCombo.some(y => y['item'].ntestgrouptestcode === x['item'].ntestgrouptestcode))\r\n            if (duplicatePresent) {\r\n                testenforceTestCombo = testenforceTestCombo\r\n            } else {\r\n                testenforceTestCombo = [...testenforceTestCombo, ...selectedTestTempArray];\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n        selectedRecord['ntestgrouptestcode']&& delete selectedRecord['ntestgrouptestcode']\r\n        selectedRecord['nsampletestcommentscode']&&delete selectedRecord['nsampletestcommentscode']\r\n        selectedRecord['ncommentsubtypecode']&&delete selectedRecord['ncommentsubtypecode']\r\n        selectedRecord['ncommenttypecode']&&delete selectedRecord['ncommenttypecode']\r\n        selectedRecord['sgeneralcomments']&&delete selectedRecord['sgeneralcomments']\r\n        selectedRecord['needoutsource']&&delete selectedRecord['needoutsource']\r\n        selectedRecord['sdescription']&&delete selectedRecord['sdescription']\r\n        selectedRecord['ntestgrouptestparametercode']&&delete selectedRecord['ntestgrouptestparametercode']\r\n        selectedRecord['senforceresult']&&delete selectedRecord['senforceresult']\r\n        selectedRecord['ngradecode']&&delete selectedRecord['ngradecode']\r\n        selectedRecord['nfromsitecode']&&delete selectedRecord['nfromsitecode']\r\n        selectedRecord['ntositecode']&&delete selectedRecord['ntositecode']\r\n        selectedRecord['nrepeatcountno']&&delete selectedRecord['nrepeatcountno']\r\n\r\n        if (this.props.Login.addGroupList.length > 0) {\r\n            action = \"IDS_ADDTEST\"\r\n            openModalPopup = true;\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openModalPopup,\r\n                    modalParameterPopup: false,\r\n                    action,\r\n                    selectedRecord,\r\n                    openmodalsavePopup: false,\r\n                    testInitiateTestCombo,\r\n                    testCommentsTestCombo,\r\n                    testRepeatTestCombo,\r\n                    testenforceTestCombo\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEADDRULETOADDOUTCOME\" }));\r\n        }\r\n\r\n    }\r\n    onRuleChange = (comboData, fieldName, groupIndex, index) => {\r\n        let PredefinedParameterOptions= this.props.Login.masterData.PredefinedParameterOptions||[] \r\n        const { selectedRecord } = this.state;\r\n        this.clearSelectedRule(selectedRecord, index); \r\n        if(selectedRecord[\"groupList\"][groupIndex][index][fieldName]&&\r\n            selectedRecord[\"groupList\"][groupIndex][index][fieldName].value!==comboData.value)\r\n        {\r\n            selectedRecord[\"groupList\"][groupIndex][index]['ndiagnosticcasecode']&& delete selectedRecord[\"groupList\"][groupIndex][index]['ndiagnosticcasecode']\r\n            selectedRecord[\"groupList\"][groupIndex][index]['ngradecode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ngradecode'] \r\n            selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestpredefcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestpredefcode'] \r\n            selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestcharcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestcharcode'] \r\n            selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestnumericcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestnumericcode']  \r\n            selectedRecord[\"groupList\"][groupIndex][index]['ssymbolname']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ssymbolname']   \r\n        } \r\n        selectedRecord[\"groupList\"][groupIndex][index][fieldName] = comboData;  \r\n        selectedRecord[\"groupList\"][groupIndex][index][fieldName]['nparenttestgrouptestcode'] = this.props.Login.masterData.SelectedTest.ntestgrouptestcode;  \r\n        selectedRecord[\"groupList\"][groupIndex][index][fieldName]['nparentstestname'] = this.props.Login.masterData.SelectedTest.stestname;  \r\n        if(selectedRecord[\"groupList\"][groupIndex][index]['orderresulttype'])\r\n        {\r\n            if(selectedRecord[\"groupList\"][groupIndex][index]['orderresulttype'].value === 3)\r\n            {\r\n                let nparametertypecode=selectedRecord[\"groupList\"][groupIndex][index][fieldName]['item']['nparametertypecode'] \r\n                 if(nparametertypecode===parameterType.PREDEFINED)\r\n                {\r\n                    this.props.getParameterResultValue(selectedRecord[\"groupList\"][groupIndex][index],groupIndex,index,PredefinedParameterOptions,selectedRecord, this.props.Login.masterData, this.props.Login.userInfo) \r\n                }\r\n                else{\r\n                    if (selectedRecord[\"groupList\"][groupIndex][index][fieldName]) {\r\n                        this.setState({\r\n                            selectedRecord,\r\n                            groupIndex,\r\n                            index\r\n                        });\r\n                    }\r\n                }    \r\n            }      else{\r\n                if (selectedRecord[\"groupList\"][groupIndex][index][fieldName]) {\r\n                    this.setState({\r\n                        selectedRecord,\r\n                        groupIndex,\r\n                        index\r\n                    });\r\n                }\r\n            }  \r\n        }\r\n        else{\r\n            if (selectedRecord[\"groupList\"][groupIndex][index][fieldName]) {\r\n                this.setState({\r\n                    selectedRecord,\r\n                    groupIndex,\r\n                    index\r\n                });\r\n            }\r\n        }  \r\n    }\r\n    onRuleInputChange = (event, fieldName, groupIndex, index) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[\"groupList\"][groupIndex][index][fieldName] = event.target.value;\r\n        selectedRecord[\"groupList\"][groupIndex][index]['sfinal'] = event.target.value; \r\n        this.setState({ selectedRecord });\r\n    }\r\n    onRuleNumericInputOnChange = (event, fieldName, groupIndex, index) => {\r\n        const { selectedRecord } = this.state;\r\n        if(groupIndex===undefined&&index===undefined)\r\n        {\r\n            selectedRecord[fieldName] =  event;\r\n            this.setState({ selectedRecord }); \r\n        } \r\n        else\r\n        {\r\n            if(event!==0){ \r\n                selectedRecord[\"groupList\"][groupIndex][index][fieldName] =  event;\r\n                selectedRecord[\"groupList\"][groupIndex][index]['sfinal']=  event;\r\n                this.setState({ selectedRecord });\r\n            } \r\n        } \r\n    }\r\n    onMasterDataChange = (comboData, fieldName, groupIndex, index) => {\r\n        const { selectedRecord } = this.state;\r\n        let PredefinedParameterOptions= this.props.Login.masterData.PredefinedParameterOptions||[]  \r\n        let isResultorOrderType = [];\r\n        let optionsByRule = [];\r\n        if (this.state.optionsByRule && this.state.optionsByRule.length > 0) {\r\n            optionsByRule = this.state.optionsByRule\r\n        }\r\n        else {\r\n            optionsByRule[groupIndex] = [];\r\n            optionsByRule[groupIndex][index] = [];\r\n        }\r\n        if (this.state.isResultorOrderType && this.state.isResultorOrderType.length > 0) {\r\n            isResultorOrderType = this.state.isResultorOrderType\r\n        }\r\n        else {\r\n            isResultorOrderType[groupIndex] = [];\r\n            isResultorOrderType[groupIndex][index] = [];\r\n        }\r\n        if (fieldName !== 'ndiagnosticcasecode' && fieldName !== 'ngradecode'&&\r\n        fieldName !== 'ntestgrouptestpredefcode' && fieldName !== 'ntestgrouptestcharcode' && fieldName !== 'ntestgrouptestnumericcode') {\r\n            if(selectedRecord[\"groupList\"][groupIndex][index][fieldName]&&\r\n            selectedRecord[\"groupList\"][groupIndex][index][fieldName].value!==comboData.value)\r\n        {\r\n            selectedRecord[\"groupList\"][groupIndex][index]['ndiagnosticcasecode']&& delete selectedRecord[\"groupList\"][groupIndex][index]['ndiagnosticcasecode']\r\n            selectedRecord[\"groupList\"][groupIndex][index]['ngradecode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ngradecode'] \r\n            selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestpredefcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestpredefcode'] \r\n            selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestcharcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestcharcode'] \r\n            selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestnumericcode']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ntestgrouptestnumericcode']  \r\n            selectedRecord[\"groupList\"][groupIndex][index]['ssymbolname']&&delete selectedRecord[\"groupList\"][groupIndex][index]['ssymbolname']   \r\n        } \r\n        selectedRecord[\"groupList\"][groupIndex][index][fieldName] = comboData; \r\n            if (isResultorOrderType[groupIndex] === undefined) {\r\n                isResultorOrderType[groupIndex] = [];\r\n                isResultorOrderType[groupIndex][index] = [];\r\n            }\r\n            isResultorOrderType[groupIndex][index] = comboData.value\r\n            if (optionsByRule[groupIndex] === undefined) {\r\n                optionsByRule[groupIndex] = [];\r\n                optionsByRule[groupIndex][index] = [];\r\n            }\r\n            if (isResultorOrderType[groupIndex][index] === 1) { \r\n                optionsByRule[groupIndex][index] = this.props.Login.masterData.DiagnosticCaseList\r\n            }\r\n            else if (isResultorOrderType[groupIndex][index] === 3) { \r\n                let nparametertypecode=selectedRecord[\"groupList\"][groupIndex][index]['stestname']['item']['nparametertypecode'] \r\n                 if(nparametertypecode===parameterType.PREDEFINED)\r\n                {\r\n                    this.props.getParameterResultValue(selectedRecord[\"groupList\"][groupIndex][index],groupIndex,index,PredefinedParameterOptions,selectedRecord, this.props.Login.masterData, this.props.Login.userInfo) \r\n                } \r\n                else\r\n                {\r\n                    optionsByRule[groupIndex][index] = this.props.Login.masterData.GradeList \r\n                }\r\n            }\r\n            else { \r\n                optionsByRule[groupIndex][index] = this.props.Login.masterData.GradeList\r\n            }\r\n            this.setState({ selectedRecord, isResultorOrderType, optionsByRule });\r\n        } \r\n        else {\r\n            selectedRecord[\"groupList\"][groupIndex][index][fieldName] = comboData; \r\n            selectedRecord[\"groupList\"][groupIndex][index]['sfinal'] = comboData.label; \r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n    addRule = (type, groupIndex) => {\r\n        const { selectedRecord } = this.state;\r\n        let viewColumnListByRule = this.props.Login.viewColumnListByRule || [];\r\n        const addGroupList = this.props.Login.addGroupList || [];\r\n        const arrayLength = addGroupList[groupIndex];\r\n        addGroupList[groupIndex] = arrayLength + 1;\r\n        selectedRecord[\"groupList\"][groupIndex][arrayLength] = {};\r\n        viewColumnListByRule = this.props.Login.viewColumnList || this.props.Login.databaseviewList;;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                addGroupList,\r\n                viewColumnListByRule,\r\n                activeTabIndex:0\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    addComments = () => {\r\n        let openModalPopup = this.props.Login.openModalPopup;\r\n        let action = this.props.Login.action;\r\n        let selectedParameterRulesEngine = this.props.Login.masterData.selectedParameterRulesEngine || [];\r\n        let testparameter = this.props.Login.masterData.testCommentsTestCombo || [];\r\n        let selectedRecord = this.props.Login.selectedRecord || {}\r\n        selectedRecord['ntestgrouptestcode'] = {}\r\n        selectedRecord['ntestgrouptestcode'] = testparameter.filter(x => { return x.value === selectedParameterRulesEngine.ntestgrouptestcode })[0]\r\n\r\n        delete selectedRecord['nsampletestcommentscode']\r\n        delete selectedRecord['ncommentsubtypecode']\r\n        delete selectedRecord['ncommenttypecode']\r\n        delete selectedRecord['sgeneralcomments']\r\n        delete selectedRecord['sdescription']\r\n\r\n\r\n        if (this.props.Login.addGroupList.length > 0) {\r\n            if (this.props.Login.activeTabIndex === 2) {\r\n                action = \"IDS_ADDTESTCOMMENTS\"\r\n            }\r\n            else {\r\n                action = \"IDS_ADDREPORTCOMMENTS\"\r\n            }\r\n            openModalPopup = true;\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openModalPopup,\r\n                    action,\r\n                    selectedRecord,\r\n                    openmodalsavePopup: false\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEADDRULETOADDOUTCOME\" }));\r\n        }\r\n\r\n    }\r\n    addModalSite = () => {\r\n        let openModalPopup = this.props.Login.openModalPopup;\r\n\r\n        let selectedParameterRulesEngine = this.props.Login.masterData.selectedParameterRulesEngine || [];\r\n        let testparameter = this.props.Login.masterData.testInitiateTestCombo || [];\r\n        let selectedRecord = this.props.Login.selectedRecord || {}\r\n        selectedRecord['ntestgrouptestcode'] = {}\r\n        selectedRecord['ntestgrouptestcode'] = testparameter.filter(x => { return x.value === selectedParameterRulesEngine.ntestgrouptestcode })[0]\r\n        selectedRecord['nfromsitecode']&&delete selectedRecord['nfromsitecode']\r\n        selectedRecord['ntositecode']&&delete selectedRecord['ntositecode']\r\n\r\n        openModalPopup = true;\r\n        let action = this.props.Login.action;\r\n        action = \"IDS_ADDSITE\"\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord,\r\n                openModalPopup,\r\n                action,\r\n                openmodalsavePopup: false\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onGradeEvent = (parameterResults, index, parameter) => {\r\n        if (parameterResults.length > 0 && parameterResults[index] !== undefined && parameterResults[index].sresult !== null) {\r\n            let selectedRecord = this.state.selectedRecord || [];\r\n            let selectedResultGrade = this.state.selectedRecord.selectedResultGrade || [];\r\n            if (parameter.nparametertypecode === parameterType.NUMERIC) {\r\n                selectedResultGrade[index] = {\r\n                    ngradecode: parameterResults[index].sresult !== \"\" ?\r\n                        numericGrade(parameter, numberConversion(parseFloat(parameterResults[index].sresult), parseInt(parameter.nroundingdigits))) : -1\r\n                };\r\n            }\r\n            if (parameter.nparametertypecode === parameterType.PREDEFINED) {\r\n                if (parameterResults[index].sresult !== null) {\r\n                    selectedResultGrade[index] = { ngradecode: parameterResults[index].ngradecode };\r\n                }\r\n                else {\r\n                    selectedResultGrade[index] = { ngradecode: 0 };\r\n                }\r\n            }\r\n            if (parameter.nparametertypecode === parameterType.CHARACTER) {\r\n                if (parameterResults[index].sresult !== null && parameterResults[index].sresult.trim() !== \"\") { \r\n                    selectedResultGrade[index] = { ngradecode: 4 };\r\n                }\r\n                else {\r\n                    selectedResultGrade[index] = { ngradecode: -1 };\r\n                }\r\n            } \r\n            selectedRecord.selectedResultGrade = selectedResultGrade;\r\n\r\n            this.setState({\r\n                selectedRecord\r\n            }); \r\n        }\r\n    }\r\n    onInputSwitchOnChange = (event) => {\r\n        if (event.target.name == \"PopupNav\") {\r\n            this.setState({\r\n                enablePropertyPopup: !this.state.enablePropertyPopup\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                enableAutoClick: !this.state.enableAutoClick\r\n            })\r\n        }\r\n    }\r\n    addParameter= () => {\r\n        let openModalPopup = this.props.Login.openModalPopup;  \r\n        let isServiceNeed=this.props.Login.isServiceNeed===undefined||this.props.Login.isServiceNeed===true?true:false ;\r\n        let selectedParameterRulesEngine = this.props.Login.masterData.selectedParameterRulesEngine || [];\r\n        let testparameter = this.props.Login.masterData.testInitiateTestCombo || [];\r\n        let selectedRecord = this.props.Login.selectedRecord || {}\r\n        selectedRecord['ntestgrouptestpredefsubcode'] &&delete selectedRecord['ntestgrouptestpredefsubcode'] \r\n        selectedRecord['ntestgrouptestcode'] = {}\r\n        selectedRecord['ntestgrouptestcode'] = testparameter.filter(x => \r\n            { return x.value === selectedParameterRulesEngine.ntestgrouptestcode })[0]\r\n        selectedRecord['ntestgrouprulesenginecode']=this.props.Login.masterData.SelectedRulesEngine['ntestgrouprulesenginecode']?\r\n        this.props.Login.masterData.SelectedRulesEngine['ntestgrouprulesenginecode']:0;\r\n        selectedRecord['ParameterRulesEngine']&& delete selectedRecord['ParameterRulesEngine'] \r\n    //    if(isServiceNeed){\r\n            this.props.getParameterRulesEngine(selectedRecord, this.props.Login.masterData, this.props.Login.userInfo,\r\n                this.state.activeTabIndex,\"IDS_ADDPARAMETER\")\r\n        // }else{\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             openModalPopup: true,\r\n        //                 modalParameterPopup:true,\r\n        //                 // masterData: {\r\n        //                 //     ...masterData,\r\n        //                 //     ...response.data,\r\n        //                 //     paremterResultcode\r\n\r\n        //                 // },\r\n        //                 // selectedRecord: {\r\n        //                 //     ...selectedRecord,\r\n        //                 //     additionalInfo: additionalInfo.length > 0 ? additionalInfo : [],\r\n        //                 //     selectedResultGrade: selectedResultGrade,\r\n        //                 //     ParameterRulesEngine: response.data.TestGroupTestParameterRulesEngine\r\n        //                 // },\r\n        //               ///  loading: false,\r\n        //                 action:\"IDS_ADDPARAMETER\",\r\n        //                 openmodalsavePopup:false\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        \r\n     \r\n        // openModalPopup = true;\r\n        // let action = this.props.Login.action;\r\n        // action = \"IDS_ADDPARAMETER\"\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         selectedRecord,\r\n        //         openModalPopup,\r\n        //         action,\r\n        //         modalParameterPopup :true,\r\n        //         openmodalsavePopup: false\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n    }\r\n    deletetestparameter = (deleteparameter) => { \r\n        let masterData = this.props.Login.masterData || {};  \r\n        masterData['testParameter'].map(test=>{\r\n            if(test['ParameterRulesEngine']){\r\n                let parameters=test['ParameterRulesEngine'];\r\n                let tempparameters=[...test['ParameterRulesEngine']]\r\n                tempparameters.map((param,index)=>{\r\n                    if(param['ntestgrouptestparametercode']===deleteparameter['ntestgrouptestparametercode']){\r\n                        //delete parameters[index];\r\n                        let removeIndex=parameters.findIndex(x=>x['ntestgrouptestparametercode']===param['ntestgrouptestparametercode'])\r\n    \r\n                        parameters.splice(removeIndex,1);\r\n                        sortData(test['ParameterRulesEngine'],'ascending','slNo').map((param,index)=>{\r\n                            param['slNo']=index+1;\r\n                        })\r\n                    }\r\n                })\r\n            \r\n            } \r\n        }); \r\n        \r\n        this.setState({masterData});\r\n    }\r\n    modalsaveClick = () => {\r\n        let needoutsource = this.props.Login.needoutsource || {};\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let masterData = this.props.Login.masterData || {};\r\n        let testInitiateTests = this.props.Login.testInitiateTests || [];\r\n        let testCommentsTests = this.props.Login.testCommentsTests || [];\r\n        let testRepeatTests = this.props.Login.testRepeatTests || [];\r\n        let testenforceTests = this.props.Login.testenforceTests || [];\r\n\r\n\r\n        let reportCommentsTests = this.props.Login.reportCommentsTests || [];\r\n\r\n        let siteObject = this.props.Login.siteObject || {};\r\n        let testCommentObject = this.props.Login.testCommentObject || {};\r\n        let reportCommentObject = this.props.Login.reportCommentObject || {};\r\n\r\n\r\n        let testInitiateTestsTemp = [];\r\n        let testCommentsTestsTemp = [];\r\n        let reportCommentsTestsTemp = [];\r\n        let testInitiateSiteTemp = [];\r\n\r\n        let testCommentsTestsTab = this.props.Login.masterData.testCommentsTestsTab || []; \r\n\r\n\r\n        let reportCommentsTestsTab = this.props.Login.reportCommentsTestsTab || [];\r\n        let testInitiateSiteTab = this.props.Login.masterData.testInitiateSiteTab || [];\r\n\r\n        let testInitiateTestOptions = this.props.Login.testInitiateTestOptions || [];\r\n        let testCommentsTestOptions = this.props.Login.testCommentsTestOptions || [];\r\n        let reportCommentsTestOptions = this.props.Login.reportCommentsTestOptions || [];\r\n\r\n\r\n        let testInitiateTestdeletedOptions = this.props.Login.testInitiateTestdeletedOptions || [];\r\n        let testCommentsTestdeletedOptions = this.props.Login.testCommentsTestdeletedOptions || [];\r\n        let reportCommentsTestdeletedOptions = this.props.Login.reportCommentsTestdeletedOptions || [];\r\n\r\n        let updateInfo = {}\r\n        if (this.props.Login.action === 'IDS_ADDTEST') {\r\n            let npkAtestparametercode = 0;\r\n            let npkBtestparametercode = 0;\r\n            let npkCtestparametercode = 0;\r\n            let npkDtestparametercode = 0;\r\n            if (this.props.Login.activeTabIndex === 1) {\r\n                let isduplicate = {}\r\n                isduplicate = testInitiateTests.filter(x => x.ntestgrouptestcode ===\r\n                    selectedRecord['ntestgrouptestcode'].item['ntestgrouptestcode'])\r\n                if (isduplicate.length === 0) {\r\n                    masterData['testParameter'] = {}\r\n                    npkAtestparametercode = testInitiateTests.length>0?Math.max(...testInitiateTests.map(x => x.npkAtestparametercode)) : 0;\r\n                    npkAtestparametercode++;\r\n                    selectedRecord['ntestgrouptestcode'].item['npkAtestparametercode'] = npkAtestparametercode \r\n                    // selectedRecord['ParameterRulesEngine']=selectedRecord['ParameterRulesEngine'].filter(param=>param['sresult']&&param['sresult']!==\"\");\r\n                    //  let slNo=1;\r\n                    // selectedRecord['ParameterRulesEngine']\r\n                    //      .map((resultData) => {\r\n                    //         if (resultData.nparametertypecode===1) { \r\n                    //             resultData[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                    //             numericGrade(resultData, resultData[\"sfinal\"]) : -1;\r\n                    //          }\r\n                    //         else if (resultData.nparametertypecode===2)\r\n                    //          {\r\n                    //             resultData[\"ngradecode\"] = resultData.ngradecode; \r\n                    //             resultData[\"salertmessage\"] = resultData.salertmessage&&resultData.salertmessage;\r\n                    //             resultData[\"additionalInfo\"] = resultData['additionalInfo'];\r\n                    //             resultData[\"additionalInfoUidata\"] = resultData['additionalInfoUidata']===undefined?\"\":\r\n                    //             resultData['additionalInfoUidata']; \r\n                    //             resultData[\"ntestgrouptestpredefcode\"]=resultData['ntestgrouptestpredefcode']\r\n                    //             resultData[\"sresultcomment\"]=resultData['sresultcomment']  \r\n                    //          } \r\n                    //          else if (resultData.nparametertypecode===3)\r\n                    //          {\r\n                    //             resultData[\"ngradecode\"] = resultData.sresult&&resultData.sresult.trim() === \"\" ? -1 : grade.FIO; \r\n                    //          }\r\n                    //          else if (resultData.nparametertypecode===4)\r\n                    //          {\r\n                    //             resultData[\"ngradecode\"] = resultData.sresult&&resultData.sresult.trim() === \"\" ? -1 : grade.FIO; \r\n                    //          }   \r\n                    //          resultData[\"slNo\"]=slNo;\r\n                    //          slNo++;\r\n                    //     });\r\n                    // selectedRecord['ntestgrouptestcode'].item['ParameterRulesEngine']=sortData(selectedRecord['ParameterRulesEngine'],'descending','slNo')\r\n                    if( selectedRecord['ntestgrouptestcode'].item['nrepeatcountno']){\r\n                        selectedRecord['ntestgrouptestcode'].item['nrepeatcountno']=0;\r\n                    } \r\n                    selectedRecord['ntestgrouptestcode'].item['ParameterRulesEngine']&&\r\n                    delete selectedRecord['ntestgrouptestcode'].item['ParameterRulesEngine']\r\n                    testInitiateTests.push({...selectedRecord['ntestgrouptestcode'].item,\r\n                    \"nneedsample\":selectedRecord['nneedsample']===3?3:4});\r\n                    masterData['testParameter'] = sortData(testInitiateTests, 'descending', 'npkAtestparametercode')\r\n                    masterData['selectedParameterRulesEngine'] = {...selectedRecord['ntestgrouptestcode'].item,\"nneedsample\":selectedRecord['nneedsample']?3:4}\r\n                    delete selectedRecord['ntestgrouptestcode'];\r\n                    delete selectedRecord['nneedsample'];\r\n\r\n                }\r\n                else {\r\n                    return toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYEXISTS\" }));\r\n                }\r\n\r\n            }\r\n            if (this.props.Login.activeTabIndex === 2) {\r\n                let isduplicate = {}\r\n                isduplicate = testCommentsTests.filter(x => x.ntestgrouptestcode ===\r\n                    selectedRecord['ntestgrouptestcode'].item['ntestgrouptestcode'])\r\n                if (isduplicate.length === 0) {\r\n                    masterData['testParameterComments'] = {}\r\n                    npkBtestparametercode = testCommentsTests.length>0?Math.max(...testCommentsTests.map(x => x.npkBtestparametercode)) : 0;\r\n                    npkBtestparametercode++;\r\n                    selectedRecord['ntestgrouptestcode'].item['npkBtestparametercode'] = npkBtestparametercode\r\n                    selectedRecord['ntestgrouptestcode'].item['sdescription'] = selectedRecord['sdescription'] ? selectedRecord['sdescription'] : '-'\r\n                    testCommentsTests.push(selectedRecord['ntestgrouptestcode'].item);\r\n                    masterData['testParameterComments'] = sortData(testCommentsTests, 'descending', 'npkBtestparametercode')\r\n                    masterData['selectedParameterRulesEngine'] = selectedRecord['ntestgrouptestcode'].item\r\n                    //delete selectedRecord['ntestgrouptestcode']\r\n                }\r\n                else {\r\n                    return toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYEXISTS\" }));\r\n                }\r\n            }\r\n            if (this.props.Login.activeTabIndex === 3) {\r\n                let isduplicate = {}\r\n                isduplicate = testRepeatTests.filter(x => x.ntestgrouptestcode ===\r\n                    selectedRecord['ntestgrouptestcode'].item['ntestgrouptestcode'])\r\n                if (isduplicate.length === 0) {\r\n                    masterData['testRepeat'] = {}\r\n                    npkCtestparametercode = testRepeatTests.length>0? Math.max(...testRepeatTests.map(x => x.npkCtestparametercode)) : 0;\r\n                    npkCtestparametercode++;\r\n                    selectedRecord['ntestgrouptestcode'].item['npkCtestparametercode'] = npkCtestparametercode\r\n                    selectedRecord['ntestgrouptestcode'].item['nrepeatcountno'] = selectedRecord['nrepeatcountno']?selectedRecord['nrepeatcountno']:1\r\n                    testRepeatTests.push({...selectedRecord['ntestgrouptestcode'].item,\r\n                    \"nneedsample\":4});\r\n                    masterData['testRepeatTestsTab'] = sortData(testRepeatTests, 'descending', 'npkCtestparametercode')\r\n                    masterData['testRepeat'] = sortData(testRepeatTests, 'descending', 'npkCtestparametercode')\r\n                    masterData['selectedParameterRulesEngine'] = selectedRecord['ntestgrouptestcode'].item\r\n                    delete selectedRecord['ntestgrouptestcode']\r\n                }\r\n                else {\r\n                    return toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYEXISTS\" }));\r\n                }\r\n            }\r\n            if (this.props.Login.activeTabIndex === 4) {\r\n                let isduplicate = {}\r\n                // isduplicate = testenforceTests.filter(x => x.ntestgrouptestcode ===\r\n                //     selectedRecord['ntestgrouptestcode'].item['ntestgrouptestcode'])\r\n                    isduplicate=testenforceTests.some(x=>selectedRecord['ntestgrouptestcode'].value===x.ntestgrouptestcode&&selectedRecord['ntestgrouptestparametercode'].value===x.ntestgrouptestparametercode)\r\n\r\n                if (!isduplicate) { \r\n                    masterData['testenforceTests'] = {}\r\n                    npkDtestparametercode = testenforceTests.length>0? Math.max(...testenforceTests.map(x => x.npkDtestparametercode)) : 0;\r\n                    npkDtestparametercode++;\r\n                    // selectedRecord['ntestgrouptestcode'].item['sparametersynonym'] = selectedRecord['ntestgrouptestparametercode'] && selectedRecord['ntestgrouptestparametercode'].label\r\n                    // selectedRecord['ntestgrouptestcode'].item['ngradecode'] = selectedRecord['ngradecode'] && selectedRecord['ngradecode'].value\r\n                    // selectedRecord['ntestgrouptestcode'].item['sgradename'] = selectedRecord['ngradecode'] && selectedRecord['ngradecode'].label\r\n                    // selectedRecord['ntestgrouptestcode'].item['ntestgrouptestparametercode'] = selectedRecord['ntestgrouptestparametercode'] && selectedRecord['ntestgrouptestparametercode'].value\r\n                    // selectedRecord['ntestgrouptestcode'].item['senforceresult'] = selectedRecord['senforceresult'] && selectedRecord['senforceresult']\r\n                    let object={...selectedRecord['ntestgrouptestcode'].item,\r\n                    'sparametersynonym':selectedRecord['ntestgrouptestparametercode'] && selectedRecord['ntestgrouptestparametercode'].label,\r\n                    'ngradecode':selectedRecord['ngradecode'] && selectedRecord['ngradecode'].value,\r\n                    'sgradename': selectedRecord['ngradecode'] && selectedRecord['ngradecode'].label,\r\n                    'ntestgrouptestparametercode':selectedRecord['ntestgrouptestparametercode'] && selectedRecord['ntestgrouptestparametercode'].value,\r\n                    'senforceresult':selectedRecord['senforceresult'] && selectedRecord['senforceresult'],\r\n                'npkDtestparametercode':npkDtestparametercode}\r\n                   // selectedRecord['ntestgrouptestcode'].item['npkDtestparametercode'] = npkDtestparametercode\r\n                    testenforceTests.push(object);\r\n                    masterData['testenforceTestsTab'] = sortData(testenforceTests, 'descending', 'npkDtestparametercode') \r\n                    masterData['testenforceTests'] = sortData(testenforceTests, 'descending', 'npkDtestparametercode')\r\n                    //  masterData['selectedParameterRulesEngine'] = selectedRecord['ntestgrouptestcode'].item\r\n                    delete selectedRecord['ntestgrouptestcode']\r\n                }\r\n                else {\r\n                    return toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYEXISTS\" }));\r\n                }\r\n            }\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openModalPopup: false,\r\n                   \r\n                    masterData,\r\n                    testInitiateTests,\r\n                    testCommentsTests,\r\n                    reportCommentsTests,\r\n                    npkAtestparametercode,\r\n                    npkBtestparametercode,\r\n                    npkCtestparametercode,\r\n                    testInitiateTestOptions,\r\n                    testInitiateTestdeletedOptions,\r\n                    selectedRecord,\r\n                    testRepeatTests,\r\n                    testenforceTests\r\n                }\r\n            }\r\n        }\r\n        if(this.props.Login.action === 'IDS_ADDPARAMETER'){\r\n            let selectedntestgrouptestcode=masterData.selectedParameterRulesEngine.ntestgrouptestcode;\r\n            let selectedParameterRulesEngine=masterData.selectedParameterRulesEngine.ParameterRulesEngine; \r\n            selectedRecord['ParameterRulesEngine']=selectedRecord['ParameterRulesEngine'].filter(param=>param['sresult']&&param['sresult']!==\"\");\r\n          let slNo=selectedParameterRulesEngine===undefined||(selectedParameterRulesEngine&&selectedParameterRulesEngine.length===0)?1:selectedParameterRulesEngine.length+1;\r\n            selectedRecord['ParameterRulesEngine']\r\n                         .map((resultData) => {\r\n                            if (resultData.nparametertypecode===1) { \r\n                                resultData[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                                numericGrade(resultData, resultData[\"sresult\"]) : -1;\r\n\r\n\r\n                                resultData[\"sresult\"] = resultData.sresult;\r\n                                resultData[\"sfinal\"] = resultData.sresult !== \"\" ?\r\n                                        numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\r\n                                resultData[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                                        numericGrade(resultData, resultData[\"sfinal\"]) : -1;\r\n\r\n                             }\r\n                            else if (resultData.nparametertypecode===2)\r\n                             {\r\n                                resultData[\"ngradecode\"] = resultData.ngradecode; \r\n                                resultData[\"salertmessage\"] = resultData.salertmessage&&resultData.salertmessage;\r\n                                resultData[\"additionalInfo\"] = resultData['additionalInfo'];\r\n                                resultData[\"additionalInfoUidata\"] = resultData['additionalInfoUidata']===undefined?\"\":\r\n                                resultData['additionalInfoUidata']; \r\n                                resultData[\"ntestgrouptestpredefcode\"]=resultData['ntestgrouptestpredefcode']\r\n                                resultData[\"sresultcomment\"]=resultData['sresultcomment']  \r\n                                resultData[\"sresultpredefinedname\"]=resultData['sresultpredefinedname']  \r\n                                resultData[\"sfinal\"]=resultData['sfinal']   \r\n\r\n                             } \r\n                             else if (resultData.nparametertypecode===3)\r\n                             {\r\n                                resultData[\"sresult\"] = resultData.sresult;\r\n                                resultData[\"sfinal\"] = resultData.sresult; \r\n                                resultData[\"ngradecode\"] = resultData.sresult&&resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO; \r\n\r\n                             }\r\n                             else if (resultData.nparametertypecode===4)\r\n                             {\r\n                                resultData[\"ngradecode\"] = resultData.sresult&&resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO; \r\n                             }   \r\n                             resultData['sgradename']=this.props.Login.masterData.GradeValues[resultData[\"ngradecode\"]][0]['sgradename'] \r\n                            resultData[\"slNo\"]=slNo;\r\n                         slNo++;\r\n                        });   \r\n                        masterData['testParameter'].map((param) => { \r\n                                if (param['ntestgrouptestcode'] ===selectedntestgrouptestcode) {\r\n                                    if(param['ParameterRulesEngine']){ \r\n                                        param['ParameterRulesEngine']= param['ParameterRulesEngine'].concat(sortData(selectedRecord['ParameterRulesEngine'],'descending','slNo'));\r\n\r\n                                    }else{\r\n                                        param['ParameterRulesEngine']= sortData(selectedRecord['ParameterRulesEngine'],'descending','slNo');\r\n\r\n                                    }\r\n                                }\r\n                            }); \r\n                            testInitiateTests=masterData['testParameter']\r\n                            updateInfo = {\r\n                                typeName: DEFAULT_RETURN,\r\n                                data: {\r\n                                    openModalPopup: false,\r\n                                    masterData,\r\n                                    testInitiateTests,\r\n                                    modalParameterPopup:false ,\r\n                                    isServiceNeed:false\r\n                                }\r\n                            }\r\n        }\r\n        if (selectedRecord['nsampletestcommentscode'] || selectedRecord['sgeneralcomments']\r\n        ) {\r\n            masterData['testComments'] = {}\r\n            let npKAsampletestcommentscode = 0;\r\n            let nslno = 0;\r\n\r\n            let object = {\r\n                ncommentsubtypecode: selectedRecord['ncommentsubtypecode'],\r\n                scommentsubtype: selectedRecord['ncommentsubtypecode']['label'],\r\n                stestsynonym: selectedRecord['ntestgrouptestcode']['label'], \r\n                ncommenttypecode: selectedRecord['ncommenttypecode']['value'],\r\n                scommenttype: selectedRecord['ncommenttypecode']['label'],\r\n                nsampletestcommentscode: selectedRecord['nsampletestcommentscode'] ? selectedRecord['nsampletestcommentscode'] : -1,\r\n                // spredefinedname: selectedRecord['nsampletestcommentscode'] ? selectedRecord['nsampletestcommentscode'].label : \"-\",\r\n                // sgeneralcomments: selectedRecord['sgeneralcomments'] ? selectedRecord['sgeneralcomments'] : \"-\",\r\n                spredefinedname:selectedRecord['nsampletestcommentscode']? selectedRecord['nsampletestcommentscode'].label:\r\n                selectedRecord['sgeneralcomments'] ? selectedRecord['sgeneralcomments'] : \"-\",\r\n                scomments: selectedRecord['sdescription'] ? selectedRecord['sdescription'] : '-',\r\n                sdescription: selectedRecord['sdescription'] ? selectedRecord['sdescription'] : '-'  \r\n                , stestparametersynonym: masterData.selectedParameterRulesEngine.stestparametersynonym,\r\n                ntestgrouptestcode: masterData.selectedParameterRulesEngine.ntestgrouptestcode,\r\n                npkBtestparametercode:masterData.selectedParameterRulesEngine.npkBtestparametercode\r\n            }\r\n            nslno= testCommentsTestsTab.length>0? Math.max(...testCommentsTestsTab.map(x => x.nslno)):0; \r\n            nslno++;\r\n            if (testCommentObject.hasOwnProperty(masterData.selectedParameterRulesEngine.npkBtestparametercode)) {\r\n                npKAsampletestcommentscode = Math.max(...testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode].map(x => x.npKAsampletestcommentscode));\r\n                npKAsampletestcommentscode++;\r\n                object = { ...object, npKAsampletestcommentscode: npKAsampletestcommentscode,nslno:nslno }\r\n                testCommentsTestsTemp = testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode]\r\n                testCommentsTestsTemp.push(object);\r\n                testCommentsTestsTab.push(object);\r\n                let commentsArrayIndex=testCommentsTests.findIndex(x=>x.npkBtestparametercode===masterData.selectedParameterRulesEngine.npkBtestparametercode)\r\n                testCommentsTests[commentsArrayIndex]['commentsArray']=[];\r\n                testCommentsTests[commentsArrayIndex]['commentsArray']=sortData(testCommentsTestsTemp, 'ascending', 'npKAsampletestcommentscode')\r\n                testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode] = sortData(testCommentsTestsTemp, 'descending', 'npKAsampletestcommentscode')\r\n                delete selectedRecord['nsampletestcommentscode']\r\n                delete selectedRecord['ncommentsubtypecode']\r\n                delete selectedRecord['ncommenttypecode']\r\n                delete selectedRecord['sgeneralcomments']\r\n            }\r\n            else {\r\n                npKAsampletestcommentscode++;\r\n                object = { ...object, npKAsampletestcommentscode: npKAsampletestcommentscode,nslno:nslno }\r\n                testCommentsTestsTemp.push(object);\r\n                testCommentsTestsTab.push(object);\r\n                let commentsArrayIndex=testCommentsTests.findIndex(x=>x.npkBtestparametercode===masterData.selectedParameterRulesEngine.npkBtestparametercode)\r\n                testCommentsTests[commentsArrayIndex]['commentsArray']=[];\r\n                testCommentsTests[commentsArrayIndex]['commentsArray']=sortData(testCommentsTestsTemp, 'ascending', 'npKAsampletestcommentscode')\r\n                testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode] = sortData(testCommentsTestsTemp, 'descending', 'npKAsampletestcommentscode')\r\n                delete selectedRecord['nsampletestcommentscode']\r\n                delete selectedRecord['ncommentsubtypecode']\r\n                delete selectedRecord['ncommenttypecode']\r\n                delete selectedRecord['sgeneralcomments']\r\n            }\r\n            masterData['testComments'] = testCommentObject\r\n            masterData['testCommentsTestsTab'] = testCommentsTestsTab \r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openModalPopup: false,\r\n                    masterData,\r\n                    testCommentObject, \r\n                    npKAsampletestcommentscode,\r\n                    selectedRecord\r\n                }\r\n            }\r\n        }\r\n        if (selectedRecord['nfromsitecode'] && selectedRecord['ntositecode']) {\r\n          \r\n            if(selectedRecord['nfromsitecode'].value!==selectedRecord['ntositecode'].value){\r\n           \r\n            let siteseqnumber = 0;\r\n            if (siteObject.hasOwnProperty(masterData.selectedParameterRulesEngine.npkAtestparametercode)) {\r\n                let isalreadyExist=siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode].some(x=>selectedRecord['nfromsitecode'].value===x.nfromsitecode&&selectedRecord['ntositecode'].value===x.ntositecode)\r\n                if(!isalreadyExist){\r\n                    masterData['testSite'] = {}\r\n                siteseqnumber = Math.max(...siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode].map(x => x.npksitecode));\r\n                siteseqnumber++;\r\n                let object = {\r\n                    npksitecode: siteseqnumber, sfromsitename: selectedRecord['nfromsitecode'].label, stositename: selectedRecord['ntositecode'].label,\r\n                    nfromsitecode: selectedRecord['nfromsitecode'].value, ntositecode: selectedRecord['ntositecode'].value\r\n                    , stestparametersynonym: masterData.selectedParameterRulesEngine.stestparametersynonym, npkAtestparametercode: masterData.selectedParameterRulesEngine.ntestgrouptestcode\r\n                }\r\n                testInitiateSiteTemp = siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode]\r\n                testInitiateSiteTemp.push(object);\r\n                testInitiateSiteTab.push(object);\r\n                siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode] = sortData(testInitiateSiteTemp, 'descending', 'npksitecode')\r\n                delete selectedRecord['ntestgrouptestcode']\r\n                delete selectedRecord['nfromsitecode'];\r\n                delete selectedRecord['ntositecode'];\r\n            }\r\n            else\r\n            {\r\n                return toast.warn(this.props.intl.formatMessage({ id: \"IDS_FROMANDTOSITEALREADYEXIST\" }));  \r\n            }\r\n\r\n            }\r\n            else {\r\n                masterData['testSite'] = {}\r\n                siteseqnumber++;\r\n                let object = {\r\n                    npksitecode: siteseqnumber, sfromsitename: selectedRecord['nfromsitecode'].label, stositename: selectedRecord['ntositecode'].label,\r\n                    nfromsitecode: selectedRecord['nfromsitecode'].value, ntositecode: selectedRecord['ntositecode'].value\r\n                    , stestparametersynonym: masterData.selectedParameterRulesEngine.stestparametersynonym, npkAtestparametercode: masterData.selectedParameterRulesEngine.npkAtestparametercode\r\n                }\r\n                testInitiateSiteTemp.push(object);\r\n                testInitiateSiteTab.push(object);\r\n                siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode] = sortData(testInitiateSiteTemp, 'descending', 'npksitecode')\r\n                delete selectedRecord['ntestgrouptestcode']\r\n                delete selectedRecord['nfromsitecode'];\r\n                delete selectedRecord['ntositecode'];\r\n            }\r\n            masterData['testSite'] = siteObject\r\n            masterData['testInitiateSiteTab'] = testInitiateSiteTab \r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openModalPopup: false,\r\n                    masterData,\r\n                    siteObject,\r\n                    siteseqnumber,\r\n                    \r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n           toast.warn(this.props.intl.formatMessage({ id: \"IDS_FROMANDTOSITECANNOTBESAME\" })); \r\n        }\r\n   \r\n        }\r\n        if (Object.keys(updateInfo).length > 0) {\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    deletModalSite = (inputparam, action, row) => {\r\n        let temparray = [];\r\n        let index = 0;\r\n\r\n        let testInitiateSiteTab = this.props.Login.masterData.testInitiateSiteTab\r\n        let testCommentsTestsTab = this.props.Login.masterData.testCommentsTestsTab\r\n        let reportCommentsTestsTab = this.props.Login.reportCommentsTestsTab\r\n\r\n\r\n        let siteObject = this.props.Login.siteObject || {};\r\n        let testCommentObject = this.props.Login.testCommentObject || {};\r\n        let reportCommentObject = this.props.Login.reportCommentObject || {};\r\n        let masterData = this.props.Login.masterData || {};\r\n\r\n\r\n\r\n        if (this.props.Login.activeTabIndex === 1) {\r\n            temparray = siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode]\r\n            temparray.splice(row['dataIndex'], 1);\r\n            testInitiateSiteTab.splice(row['dataIndex'], 1);\r\n            siteObject[masterData.selectedParameterRulesEngine.npkAtestparametercode] = temparray\r\n\r\n        }\r\n        if (this.props.Login.activeTabIndex === 2) {\r\n            temparray = testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode]\r\n            index = temparray.findIndex(x => x.npKAsampletestcommentscode === row['dataItem'].npKAsampletestcommentscode)\r\n            // temparray.splice(row['dataIndex'], 1);\r\n            temparray.splice(index, 1);\r\n            index = testCommentsTestsTab.findIndex(x => x.nslno === row['dataItem'].nslno)\r\n            //   testCommentsTestsTab.splice(row['dataIndex'], 1);\r\n            testCommentsTestsTab.splice(index, 1);\r\n            testCommentObject[masterData.selectedParameterRulesEngine.npkBtestparametercode] = temparray\r\n        }\r\n        if (this.props.Login.activeTabIndex === 3) {\r\n            temparray = masterData.testRepeat\r\n            temparray.splice(row['dataIndex'], 1);\r\n            reportCommentsTestsTab.splice(row['dataIndex'], 1);\r\n            reportCommentObject[masterData.selectedParameterRulesEngine.ntestgrouptestcode] = temparray\r\n        }\r\n        let updateInfo = {}\r\n        updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                siteObject,\r\n                testCommentObject,\r\n                reportCommentObject,\r\n                testInitiateSiteTab,\r\n                reportCommentsTestsTab,\r\n                testCommentsTestsTab\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    deleteModalTest = (inputparam, action, row) => {\r\n\r\n        let testInitiateTests = this.props.Login.testInitiateTests || [];\r\n        let testCommentsTests = this.props.Login.testCommentsTests || [];\r\n        let testRepeatTests = this.props.Login.testRepeatTests || [];\r\n        let testenforceTests = this.props.Login.testenforceTests || [];\r\n        let reportCommentsTests = this.props.Login.reportCommentsTests || [];\r\n        let testInitiateSiteTab = this.props.Login.masterData.testInitiateSiteTab \r\n        let testCommentsTestsTab = this.props.Login.masterData.testCommentsTestsTab\r\n        let testRepeatTestsTab = this.props.Login.masterData.testRepeatTestsTab\r\n        let testenforceTestsTab = this.props.Login.masterData.testenforceTestsTab\r\n\r\n        let siteObject = this.props.Login.siteObject || {};\r\n        let testCommentObject = this.props.Login.testCommentObject || {};\r\n        let reportCommentObject = this.props.Login.reportCommentObject || {};\r\n\r\n\r\n        let testInitiateTestOptions = this.props.Login.testInitiateTestOptions || [];\r\n        let testCommentsTestOptions = this.props.Login.testCommentsTestOptions || [];\r\n        let reportCommentsTestOptions = this.props.Login.reportCommentsTestOptions || [];\r\n        let viewColumnListByRule = this.props.Login.viewColumnListByRule || [];\r\n\r\n\r\n        let testInitiateTestdeletedOptions = this.props.Login.testInitiateTestdeletedOptions || [];\r\n        let testCommentsTestdeletedOptions = this.props.Login.testCommentsTestdeletedOptions || [];\r\n        let reportCommentsTestdeletedOptions = this.props.Login.reportCommentsTestdeletedOptions || [];\r\n\r\n        let masterData = this.props.Login.masterData || {};\r\n        let index = 0;\r\n        if (this.props.Login.activeTabIndex === 1) {\r\n           // index = this.props.Login.testInitiateTests.findIndex(x => x.ntestgrouptestcode === masterData.selectedParameterRulesEngine.ntestgrouptestcode)\r\n            index = this.props.Login.testInitiateTests.findIndex(x => x.npkAtestparametercode === inputparam.testParameter.npkAtestparametercode)\r\n            testInitiateTests.splice(index, 1);\r\n            //   index =  masterData['testParameter'].findIndex(x => x.ntestgrouptestcode === inputparam.testParameter.ntestgrouptestcode)\r\n            //   masterData['testParameter'].splice(index, 1); \r\n           \r\n            testInitiateSiteTab=testInitiateSiteTab.filter(function( obj ) {\r\n                return obj.npkAtestparametercode !== inputparam.testParameter.npkAtestparametercode;\r\n            }) \r\n            delete siteObject[inputparam.testParameter.npkAtestparametercode]\r\n        }\r\n        if (this.props.Login.activeTabIndex === 2) {\r\n            index = this.props.Login.testCommentsTests.findIndex(x => x.npkBtestparametercode === inputparam.testParameterComments.npkBtestparametercode)\r\n            testCommentsTests.splice(index, 1); \r\n            // index =  testCommentsTestsTab.findIndex(x => x.ntestgrouptestcode === inputparam.testParameterComments.ntestgrouptestcode) \r\n            // testCommentsTestsTab.splice(index, 1);\r\n            testCommentsTestsTab=testCommentsTestsTab.filter(function( obj ) {\r\n                return obj.npkBtestparametercode !== inputparam.testParameterComments.npkBtestparametercode;\r\n            }) \r\n            delete testCommentObject[inputparam.testParameterComments.npkBtestparametercode]\r\n        }\r\n        if (this.props.Login.activeTabIndex === 3) {\r\n          //  index = this.props.Login.testRepeatTests.findIndex(x => x.ntestgrouptestcode === masterData.selectedParameterRulesEngine.ntestgrouptestcode) \r\n            index=row['dataIndex'] \r\n            testRepeatTests.splice(index, 1);\r\n            testRepeatTestsTab.splice(index, 1); \r\n        }\r\n        if (this.props.Login.activeTabIndex === 4) {\r\n        //    index = this.props.Login.testenforceTests.findIndex(x => x.ntestgrouptestcode === masterData.selectedParameterRulesEngine.ntestgrouptestcode)  \r\n            index=row['dataIndex']\r\n            testenforceTests.splice(index, 1);\r\n            testenforceTestsTab.splice(index, 1); \r\n        }\r\n        let updateInfo = {}\r\n        updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                testInitiateTests,\r\n                siteObject,\r\n                testCommentObject,\r\n                testCommentsTests,\r\n                reportCommentsTests,\r\n                reportCommentObject,\r\n                masterData:{...masterData,   testCommentsTestsTab,testInitiateSiteTab,\r\n                    testRepeatTestsTab,\r\n                    testenforceTestsTab},\r\n                testRepeatTests,\r\n                testenforceTests,\r\n             \r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onmodalComboChange = (comboData, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let isneedsgeneralcomments = this.state.isneedsgeneralcomments || {} \r\n        let action=this.props.Login.action;\r\n        if (fieldName === 'ncommentsubtypecode') {\r\n            if (comboData.value === 6) {\r\n                isneedsgeneralcomments = true\r\n                delete selectedRecord['nsampletestcommentscode']\r\n            }\r\n            else {\r\n                isneedsgeneralcomments = false\r\n                delete selectedRecord['sgeneralcomments']\r\n\r\n            }\r\n        }\r\n        else if (fieldName === 'nproductcatcode') {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.props.getSpecificationTestGroupRulesEngine(selectedRecord, this.props.Login.selectedRecord, true, this.props.Login.masterData, this.props.Login.userInfo)\r\n        }\r\n        else if (fieldName === 'ntestgrouptestcode' && (this.state.activeTabIndex === 4//||this.state.activeTabIndex === 1\r\n            ) ) {\r\n\r\n            if (selectedRecord['ntestgrouptestparametercode']) {\r\n                if (selectedRecord[fieldName].value !== comboData.value) {\r\n                    delete selectedRecord['ntestgrouptestparametercode']\r\n                }\r\n            }\r\n            selectedRecord[fieldName] = comboData;\r\n            selectedRecord['ntestgrouprulesenginecode']=this.props.Login.masterData.SelectedRulesEngine['ntestgrouprulesenginecode']?\r\n        this.props.Login.masterData.SelectedRulesEngine['ntestgrouprulesenginecode']:0;\r\n            this.props.getParameterforEnforce(selectedRecord, this.props.Login.masterData, this.props.Login.userInfo\r\n                ,this.state.activeTabIndex,action)\r\n\r\n        }\r\n        //This is to Get Parameter Results from the User\r\n        else if (fieldName === 'ntestgrouptestparametercode' && (this.state.activeTabIndex === 1) ) { \r\n            let updateInfo = {}\r\n            updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    screenName:'IDS_TESTGROUPRESULTENTRY', \r\n                    openModal:true\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n\r\n        }\r\n        else if (fieldName === 'nallottedspeccode') {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.props.getComponentTestGroupRulesEngine(selectedRecord, this.props.Login.selectedRecord, true, this.props.Login.masterData, this.props.Login.userInfo)\r\n        }\r\n        if (fieldName === 'nsampletestcommentscode') {\r\n            selectedRecord['sdescription'] = comboData.item.sdescription;\r\n        }\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord, isneedsgeneralcomments });\r\n    }\r\n\r\n  onResultInputChange = (event, index, parameter)=> {\r\n        let selectedRecord = this.state.selectedRecord || [];\r\n        let ParameterRulesEngine = this.state.selectedRecord.ParameterRulesEngine ? this.state.selectedRecord.ParameterRulesEngine : [];\r\n        let sresult = \"\";\r\n        let sfinal = \"\";\r\n        let sresultpredefinedname = \"\";\r\n        let salertmessage = \"\";\r\n        let sresultcomment = \"\";\r\n        let sgradename=\"\";\r\n        let value = -1;\r\n        let acceptedFile = [];\r\n        let ncalculatedresult;\r\n        let currentAlertResultCode = 0;\r\n        let currentntestgrouptestpredefcode = 0;\r\n        let inputData = {} \r\n        if (parameter.nparametertypecode === parameterType.NUMERIC) {\r\n            if (/^-?\\d*?\\.?\\d*?$/.test(event.target.value) || event.target.value === \"\") {\r\n                sresult = event.target.value;\r\n                ncalculatedresult = 4\r\n            } else {\r\n                sresult = ParameterRulesEngine[index]['sresult'] === null ? \"\" : ParameterRulesEngine[index]['sresult'];\r\n                ncalculatedresult = ParameterRulesEngine[index]['ncalculatedresult'];\r\n            } \r\n        }\r\n        if (parameter.nparametertypecode === parameterType.PREDEFINED) {\r\n            currentAlertResultCode = event.item.ntestgrouptestparametercode;\r\n            currentntestgrouptestpredefcode = event.item.ntestgrouptestpredefcode;\r\n            if (event != null) {\r\n                sresult = event.item.spredefinedname;\r\n                sresultpredefinedname = event.item.sresultpredefinedname;\r\n                sfinal = event.item.spredefinedsynonym\r\n                value = event.item.ngradecode;\r\n                salertmessage = event.item.salertmessage ? event.item.salertmessage : \"\";\r\n                sresultcomment = event.item.spredefinedcomments ? event.item.spredefinedcomments : \"\";\r\n                ncalculatedresult = 4;\r\n            \r\n            }\r\n            else {\r\n                sresult = \"\";\r\n                sfinal = \"\";\r\n                sresultpredefinedname = \"\";\r\n                value = -1;\r\n                ncalculatedresult = 4\r\n            }\r\n            inputData = {\r\n                'ntestgrouptestpredefcode': event.item.ntestgrouptestpredefcode,\r\n                'salertmessage': salertmessage,\r\n                'nneedresultentryalert': event.item.nneedresultentryalert,\r\n                'nneedsubcodedresult': event.item.nneedsubcodedresult\r\n            }\r\n            if (event.item.nneedresultentryalert === transactionStatus.NO &&\r\n                event.item.nneedsubcodedresult === transactionStatus.NO) {\r\n                if (ParameterRulesEngine[index]['additionalInfo']) {\r\n                    ParameterRulesEngine[index]['additionalInfo'] = \"\"\r\n                }\r\n                if (ParameterRulesEngine[index]['additionalInfoUidata']) {\r\n                    ParameterRulesEngine[index]['additionalInfoUidata'] = \"\"\r\n                }\r\n            } \r\n        }\r\n        if (parameter.nparametertypecode === parameterType.CHARACTER) {\r\n            sresult = event.target.value;\r\n            if (event.target.value.trim() === \"\"){\r\n                ncalculatedresult = -1;\r\n            }\r\n            else{\r\n                ncalculatedresult = 4;\r\n            }  \r\n        }\r\n        if (parameter.nparametertypecode === parameterType.ATTACHMENT) {\r\n            sresult = event[0].name;\r\n            acceptedFile = event;\r\n            ncalculatedresult = 4 \r\n        }\r\n        ParameterRulesEngine[index]['sresult'] = sresult\r\n        ParameterRulesEngine[index]['sfinal'] = sfinal\r\n        ParameterRulesEngine[index]['sresultpredefinedname'] = sresultpredefinedname\r\n        ParameterRulesEngine[index]['sresultcomment'] = sresultcomment\r\n        ParameterRulesEngine[index]['salertmessage'] = salertmessage\r\n        ParameterRulesEngine[index]['acceptedFile'] = acceptedFile\r\n        ParameterRulesEngine[index]['editable'] = true\r\n        ParameterRulesEngine[index]['ngradecode'] = value\r\n        ParameterRulesEngine[index]['ncalculatedresult'] = ncalculatedresult\r\n\r\n        selectedRecord.ParameterRulesEngine = ParameterRulesEngine\r\n        if (parameter.nparametertypecode === parameterType.PREDEFINED) {\r\n            this.props.getPredefinedDataRulesEngine(inputData, selectedRecord, currentAlertResultCode, this.props.Login.masterData)\r\n        }\r\n        this.setState({\r\n            selectedRecord: selectedRecord,\r\n            currentAlertResultCode,\r\n            currentntestgrouptestpredefcode \r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    getOutcomeDetails = (inputParam) => {\r\n        let masterData = this.props.Login.masterData || {};\r\n        const testParameter = this.state.activeTabIndex === 1 ? inputParam.testParameter : this.state.activeTabIndex === 2 ?\r\n            inputParam.testParameterComments : inputParam.testParameterreportComments;\r\n        masterData['selectedParameterRulesEngine'] = {}\r\n        masterData['selectedParameterRulesEngine'] = testParameter;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    viewParameter=(param)=>{\r\n        let masterData = this.props.Login.masterData || {};\r\n        masterData['ParameterRulesEngine']=param['ParameterRulesEngine']\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                showAlertGrid:true,\r\n                masterData,\r\n                showParameterGrid:true\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo); \r\n    }\r\n    handleExpandChange = () => {\r\n        let childListMap1 =  new Map();\r\n        let childListMap2 =   new Map();\r\n        let childListMap3 =  new Map();\r\n        let childListMap =  new Map(); \r\n        if (this.props.Login.masterData.activeTabName === 'IDS_Test') { \r\n            let keylst = this.props.Login.masterData.activeTabName === 'IDS_Test' ?\r\n                Object.keys(this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['siteObject']) :\r\n                this.props.Login.masterData.activeTabName === 'IDS_COMMENTS' ?\r\n                    Object.keys(this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testCommentObject']) :\r\n                    Object.keys(this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['reportCommentObject'])\r\n            keylst.map(key => {\r\n                childListMap.set(parseInt(key),\r\n                    Object.values(this.props.Login.masterData.activeTabName === 'IDS_Test' ?\r\n                        this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['siteObject'][key] :\r\n                        this.props.Login.masterData.activeTabName === 'IDS_COMMENTS' ?\r\n                            this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testCommentObject'][key] :\r\n                            this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['reportCommentObject'][key]));\r\n            })\r\n            this.setState({ childListMap })\r\n        }\r\n        if (this.props.Login.masterData.activeTabName === 'IDS_COMMENTS') {\r\n            let keylst = Object.keys(this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testCommentObject'])\r\n            keylst.map(key => {\r\n                childListMap2.set(parseInt(key),\r\n                    Object.values(\r\n                        this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['testCommentObject'][key]));\r\n            })\r\n            this.setState({ childListMap2 })\r\n        }\r\n        if (this.props.Login.masterData.activeTabName === 'IDS_REPORTCOMMENTS') {\r\n            let keylst =\r\n                Object.keys(this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['reportCommentObject']);\r\n            keylst.map(key => {\r\n                childListMap3.set(parseInt(key),\r\n                    Object.values(\r\n                        this.props.Login.masterData.SelectedRulesEngine['jsonuidata']['reportCommentObject'][key]));\r\n            })\r\n            this.setState({ childListMap3 })\r\n        }\r\n    }\r\n    viewOutcome = (props) => {\r\n        if(this.props.Login.masterData['RulesEngine']&&this.props.Login.masterData['RulesEngine'].length>0){ \r\n            let  masterData= this.props.Login.masterData\r\n            masterData['SelectedRulesEngine']=props['SelectedRulesEngine'][0]\r\n            if(masterData['SelectedRulesEngine']['jsonuidata']&&masterData['SelectedRulesEngine']['jsonuidata']['testInitiateTests'])\r\n            {\r\n                 masterData['SelectedRulesEngine']['jsonuidata']['testInitiateTests'].forEach(object => {\r\n                    object['expanded']&&delete object['expanded'];\r\n                  });\r\n            } \r\n            masterData['activeTabName']='IDS_Test'\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                screenName: \"IDS_VIEWOUTCOME\",\r\n                operation: \"IDS_VIEW\",\r\n                openModal: true,\r\n                masterData\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRULETOVIEWOUTCOME\" })); \r\n    }\r\n    }\r\n    openflowview = (props) => {\r\n        if(this.props.Login.masterData['RulesEngine']&&this.props.Login.masterData['RulesEngine'].length>0){\r\n           let  masterData= this.props.Login.masterData \r\n        masterData['SelectedRulesEngine']=props['SelectedRulesEngine'][0]\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                screenName: \"IDS_VIEWRULE\",\r\n                operation: \"IDS_VIEW\",\r\n                openModal: true,\r\n                masterData\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRULETOVIEWRULE\" })); \r\n    }\r\n    } \r\n    handlePageChangeRuleEngine = (event) => {\r\n        this.setState({\r\n            skipRulesEngine: event.skip,\r\n            takeRulesEngine: event.take\r\n        });\r\n    }\r\n    addGroup = () => {\r\n\r\n        const { selectedRecord } = this.state;\r\n        let viewColumnListByRule = this.props.Login.viewColumnListByRule || [];\r\n        const addGroupList = this.props.Login.addGroupList || [];\r\n        const arrayLength = addGroupList.length;\r\n        addGroupList[arrayLength] = 1;\r\n\r\n        viewColumnListByRule = this.props.Login.databaseviewList;\r\n        if (arrayLength === 0) {\r\n            selectedRecord[\"groupList\"] = [];\r\n            selectedRecord[\"filtercolumns\"] = this.props.Login.selectFields;\r\n        }\r\n        if (selectedRecord[\"groupListJoins\"] === undefined) {\r\n            selectedRecord[\"groupListJoins\"] = []\r\n        }\r\n        if (selectedRecord[\"groupListJoins\"][arrayLength - 1] === undefined) {\r\n            selectedRecord[\"groupListJoins\"][arrayLength - 1] = {}\r\n        }\r\n        selectedRecord[\"groupListJoins\"][arrayLength - 1][\"button_and\"] = true;\r\n\r\n        selectedRecord[\"groupList\"][arrayLength] = [];\r\n        selectedRecord[\"groupList\"][arrayLength][\"button_and\"] = true;\r\n        selectedRecord[\"groupList\"][arrayLength][0] = {};\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                addGroupList,\r\n                viewColumnListByRule,\r\n                selectedRecord,\r\n                activeTabIndex:0\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    getTestGroupRulesEngineAdd = () => {\r\n        //   if (this.state.selectedcombo['nproductcatcode']) {\r\n        //    const sqlQuery = false;\r\n        //this.setState({ selectedRecord: {} });\r\n        let selectedRecord = this.state.selectedRecord || {}\r\n        this.props.getTestGroupRulesEngineAdd(this.props.Login.userInfo, false, {\r\n            addRuleList: [], addGroupList: [],\r\n            addAggregateList: [], addOrderbyList: []\r\n        }, this.props.Login.masterData);\r\n        //  } else {\r\n        //       toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTPRODUCTCATEGORY\" }));\r\n\r\n        //   }\r\n\r\n\r\n    }\r\n    closePortalModal = () => {\r\n        let masterData = this.props.Login.masterData || {};\r\n        masterData['testParameter'] = {}\r\n        masterData['testParameterComments'] = {}\r\n        masterData['testParameterreportComments'] = {}\r\n        masterData['testComments'] = {}\r\n        masterData['reportComments'] = {}\r\n        masterData['testSite'] = {}\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: this.props.Login.operation !== 'update' ? {\r\n                activeTabIndex: 0,\r\n                openPortalModal: false, selectedRecord: {}, addRuleList: [], count: 0,\r\n                masterData, testInitiateTests: [], reportCommentsTests: [],\r\n                testCommentsTests: [], siteObject: {}, testCommentObject: {}, reportCommentObject: {},\r\n                npkAtestparametercode: 0,\r\n                npkBtestparametercode: 0,\r\n                npkCtestparametercode: 0,\r\n                testInitiateSiteTab: [],\r\n                testCommentsTestsTab: [],\r\n                reportCommentsTestsTab: []\r\n            } : {\r\n                activeTabIndex: 0,\r\n                openPortalModal: false, selectedRecord: {}, addRuleList: [], count: 0,\r\n                masterData,\r\n                //  testInitiateTests: [], reportCommentsTests: [],\r\n                // testCommentsTests: [], siteObject: {}, testCommentObject: {}, reportCommentObject: {},\r\n                npkAtestparametercode: 0,\r\n                npkBtestparametercode: 0,\r\n                npkCtestparametercode: 0\r\n                // ,\r\n                // testInitiateSiteTab: [],\r\n                // testCommentsTestsTab: [],\r\n                // reportCommentsTestsTab: []\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    changePropertyView = (index, event, status) => {\r\n\r\n        let id = false;\r\n        let activeTabIndex\r\n        let activeTabId\r\n        let masterData = this.props.Login.masterData || {};\r\n        let activeTestTab = this.props.Login.activeTestTab || \"\"\r\n        const { selectedRecord } = this.state;\r\n        if (selectedRecord[\"groupList\"].length > 0) {\r\n            if (this.onsavevalidation(selectedRecord)) {\r\n                if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n                    activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n                }\r\n                if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n                    if (index === 1) {\r\n                        activeTestTab = 'IDS_Test'\r\n                        masterData['selectedParameterRulesEngine'] = this.props.Login.testInitiateTests && this.props.Login.testInitiateTests[0]\r\n                    }\r\n                    if (index === 2) {\r\n                        activeTestTab = 'IDS_COMMENTS'\r\n                        masterData['selectedParameterRulesEngine'] = this.props.Login.testCommentsTests && this.props.Login.testCommentsTests[0]\r\n                    }\r\n                    if (index === 3) {\r\n                        activeTestTab = 'IDS_REPEAT'\r\n                        masterData['selectedParameterRulesEngine'] = this.props.Login.testRepeatTests && this.props.Login.testRepeatTests[0]\r\n                    }\r\n                    if (index === 4) {\r\n                        activeTestTab = 'IDS_ENFORCERESULT'\r\n                        masterData['selectedParameterRulesEngine'] = this.props.Login.testEnforceTests && this.props.Login.testEnforceTests[0]\r\n                    }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            activeTabIndex: index === 0 ? 0 : this.state.activeTabIndex !== index ? index : id ? index : false,\r\n                            activeTabId: id,\r\n                            activeTestTab,\r\n                            masterData\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_FILLTHERULETOADDOUTCOME\" }));\r\n            }\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_ATLEASTADDONERULETOADDOUTCOME\" }));\r\n        }\r\n    }\r\n\r\n\r\n    deleteRule = (groupIndex, index) => {\r\n        let addGroupList = this.props.Login.addGroupList || [];\r\n        const selectedRecord = this.state.selectedRecord;\r\n        addGroupList[groupIndex] = addGroupList[groupIndex] - 1;\r\n\r\n        if (addGroupList[groupIndex] === 0) {\r\n            addGroupList.splice(groupIndex, 1);\r\n            selectedRecord[\"groupList\"].splice(groupIndex, 1);\r\n            if (selectedRecord[\"groupListJoins\"]) {\r\n                selectedRecord[\"groupListJoins\"].splice(groupIndex - 1, 1);\r\n            }\r\n        } else {\r\n            selectedRecord[\"groupList\"][groupIndex].splice(index, 1);\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addGroupList, selectedRecord,\r\n                activeTabIndex:0 }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    deleteOutcome = (index) => {\r\n        let addOutcomeList = this.props.Login.addOutcomeList;\r\n        addOutcomeList.splice(index, 1);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addOutcomeList }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    clearSelectedRule(selectedRecord, index) {\r\n        selectedRecord[\"sinputname_\" + index] && delete selectedRecord[\"sinputname_\" + index];\r\n        selectedRecord[\"ssymbolname_\" + index] && delete selectedRecord[\"ssymbolname_\" + index];\r\n        selectedRecord[\"snumericinput_\" + index] && delete selectedRecord[\"snumericinput_\" + index];\r\n        selectedRecord[\"columnname_\" + index] && delete selectedRecord[\"columnname_\" + index];\r\n        selectedRecord[\"snumericinputtwo_\" + index] && delete selectedRecord[\"snumericinputtwo_\" + index];\r\n        selectedRecord[\"dateinput_\" + index] && delete selectedRecord[\"dateinput_\" + index];\r\n        selectedRecord[\"dateinputtwo_\" + index] && delete selectedRecord[\"dateinputtwo_\" + index];\r\n    }\r\n\r\n    clearRule = () => {\r\n        const sviewname = this.state.selectedRecord.sviewname || \"\";\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { addRuleList: [], selectedRecord: { sviewname }, sqlQuery: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    resetRule = () => {\r\n        let masterData = this.props.Login.masterData || {};\r\n        let selectedRecord = this.state.selectedRecord || {}\r\n        masterData['testParameter'] = {}\r\n        masterData['testParameterComments'] = {}\r\n        masterData['testParameterreportComments'] = {}\r\n        masterData['testComments'] = {}\r\n        masterData['reportComments'] = {}\r\n        masterData['testRepeat'] = []\r\n        masterData['testenforceTests'] = []\r\n        masterData['testSite'] = {}\r\n        if (selectedRecord[\"groupList\"]) {\r\n            selectedRecord[\"groupList\"] = []\r\n\r\n        }\r\n        if (selectedRecord[\"groupListJoins\"]) {\r\n            selectedRecord[\"groupListJoins\"] = []\r\n\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                addRuleList: [], addGroupList: [], masterData,\r\n                addAggregateList: [], addOrderbyList: [], testInitiateTests: [], reportCommentsTests: [],\r\n                testCommentsTests: [], siteObject: {}, testCommentObject: {}, reportCommentObject: {}, selectedRecord, testRepeatTests: [],\r\n                testenforceTests: [],\r\n                activeTabIndex:0\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onSymbolChange = (comboData, fieldName, groupIndex, index) => {\r\n        const { selectedRecord } = this.state;\r\n        const oldSelectedRecord = selectedRecord[\"groupList\"][groupIndex][index][fieldName] || {};\r\n        selectedRecord[\"groupList\"][groupIndex][index][fieldName] = comboData;\r\n        this.setState({ selectedRecord, groupIndex, index });\r\n    }\r\n\t//ALPD-3418\r\n      TestGroupMorefields( testMoreFields){\r\n        testMoreFields=this.props.Login.hideQualisForms && this.props.Login.hideQualisForms.findIndex(item=>item.nformcode === formCode.TESTPACKAGE) === -1?testMoreFields : testMoreFields=testMoreFields && testMoreFields.filter(item=>{ return item[1]!=='IDS_TESTPACKAGE'})\r\n        return testMoreFields;\r\n\r\n    }\r\n        \r\n    \r\n\r\n    onInputChange = (event, type, groupIndex, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let needoutsource = this.state.needoutsource || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'needoutsource' && event.target.checked === true) {\r\n                needoutsource = true\r\n            }\r\n            else {\r\n                needoutsource = false\r\n                delete selectedRecord['nfromsitecode'];\r\n                delete selectedRecord['ntositecode'];\r\n            }\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord, needoutsource });\r\n    }\r\n    onInputSwitchChange=(event)=>{\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let testInitiateTests=[];\r\n        let selectedParameterRulesEngine={};\r\n        if (event.target.type === 'checkbox') {\r\n            let testcode=this.props.Login.masterData.selectedParameterRulesEngine.ntestgrouptestcode;\r\n            let activeValue=this.props.Login.testInitiateTests;\r\n            activeValue.map(item=>{\r\n                if(item.ntestgrouptestcode===testcode){\r\n                    testInitiateTests.push({...item,'nneedsample':event.target.checked === true ? 3 : 4})\r\n                    selectedParameterRulesEngine={...item,'nneedsample':event.target.checked === true ? 3 : 4}\r\n                }else{\r\n                    testInitiateTests.push({...item})\r\n                }\r\n            })\r\n        }\r\n        //selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        //this.setState({ selectedRecord });\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData:{...this.props.Login.masterData,\"selectedParameterRulesEngine\":selectedParameterRulesEngine},\r\n                testInitiateTests:testInitiateTests\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n\r\n\r\n    viewColumnListByRule = (list) => {\r\n        let activeTabIndex = this.props.Login.activeTabIndex\r\n\r\n        if (activeTabIndex !== 0) {\r\n            let selectedRecord = this.props.Login.selectedRecord && this.props.Login.selectedRecord\r\n            let dynamicList = activeTabIndex === 1 ? this.props.Login.testInitiateTests : activeTabIndex === 2 ? this.props.Login.testCommentsTests\r\n                : activeTabIndex === 3 ? this.props.Login.testRepeatTests : activeTabIndex === 4 ? this.props.Login.testenforceTests : \"\"\r\n            if (dynamicList !== undefined && dynamicList)\r\n                list = list.filter(({ value }) => !dynamicList.some(x => x.ntestgrouptestcode == value))\r\n        }\r\n        return list\r\n    }\r\n    onConditionClick = (fieldName, index, isgroup) => {\r\n        let { selectedRecord } = this.state;\r\n        selectedRecord[\"groupListJoins\"] = selectedRecord[\"groupListJoins\"] || []\r\n        if (index !== undefined && isgroup === false) {\r\n            if (fieldName === `button_and`) {\r\n                selectedRecord[\"groupList\"][index][fieldName] = selectedRecord[\"groupList\"][index][fieldName] === true ? true : true;\r\n                selectedRecord[\"groupList\"][index][`button_or`] = false;\r\n            } else if (fieldName === `button_or`) {\r\n                selectedRecord[\"groupList\"][index][fieldName] = selectedRecord[\"groupList\"][index][fieldName] === true ? true : true;\r\n                selectedRecord[\"groupList\"][index][`button_and`] = false;\r\n            } else if (fieldName === `button_not`) {\r\n                selectedRecord[\"groupList\"][index][fieldName] = selectedRecord[\"groupList\"][index][fieldName] === true ? false : true;\r\n            }\r\n            else {\r\n\r\n            }\r\n            this.setState({ selectedRecord });\r\n        }\r\n        else {\r\n            if (fieldName === `button_and`) {\r\n                if (selectedRecord[\"groupListJoins\"][index] === undefined) {\r\n                    selectedRecord[\"groupListJoins\"][index] = {}\r\n                }\r\n                selectedRecord[\"groupListJoins\"][index][fieldName] = selectedRecord[\"groupListJoins\"][index][fieldName] === true ? true : true;\r\n                selectedRecord[\"groupListJoins\"][index][`button_or`] = false;\r\n            }\r\n            if (fieldName === `button_or`) {\r\n                if (selectedRecord[\"groupListJoins\"][index] === undefined) {\r\n                    selectedRecord[\"groupListJoins\"][index] = {}\r\n                }\r\n                selectedRecord[\"groupListJoins\"][index][fieldName] = selectedRecord[\"groupListJoins\"][index][fieldName] === true ? true : true;\r\n                selectedRecord[\"groupListJoins\"][index][`button_and`] = false;\r\n            }\r\n            if (fieldName === `button_not`) {\r\n                if (selectedRecord[\"groupListJoins\"][index] === undefined) {\r\n                    selectedRecord[\"groupListJoins\"][index] = {}\r\n                }\r\n                selectedRecord[\"groupListJoins\"][index][fieldName] = selectedRecord[\"groupListJoins\"][index][fieldName] === true ? false : true;\r\n            }\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //Rules Engine Functions End\r\n    changePropertyViewClose = (id) => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n                activeTabId: id\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterComboChange = (comboData, fieldName, caseNo) => {\r\n        let tempFilterData = this.state.tempFilterData || {};\r\n        let inputParam = {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                tempFilterData[fieldName] = comboData;\r\n                inputParam = {\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        sampletype: comboData.item,\r\n                        tempFilterData\r\n                    },\r\n                    methodUrl: \"/getProductCategory\"\r\n                }\r\n                this.props.sampleTypeOnChange(inputParam, this.props.Login.masterData);\r\n                break;\r\n\r\n            case 2:\r\n                tempFilterData[fieldName] = comboData;\r\n                inputParam = {\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        sampletype: tempFilterData.nsampletypecode.item,\r\n                        productcategory: comboData.item,\r\n                        tempFilterData\r\n                    },\r\n                    methodUrl: \"/getProduct\"\r\n                }\r\n                this.props.sampleTypeOnChange(inputParam, this.props.Login.masterData);\r\n                break;\r\n\r\n            case 3:\r\n                tempFilterData[fieldName] = comboData;\r\n                inputParam = {\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        sampletype: tempFilterData.nsampletypecode.item,\r\n                        productcategory: tempFilterData.nproductcatcode.item,\r\n                        product: comboData.item,\r\n                        project:comboData.item,\r\n                        tempFilterData\r\n                    },\r\n                    methodUrl: \"/getTreeVersionTemplate\"\r\n                }\r\n                this.props.sampleTypeOnChange(inputParam, this.props.Login.masterData);\r\n                break;\r\n\r\n            case 4:\r\n                tempFilterData[fieldName] = comboData;\r\n                this.setState({ tempFilterData });\r\n                break;\r\n\r\n            case 5:\r\n                const selectedRecord = this.state.selectedRecord;\r\n                selectedRecord[fieldName] = comboData;\r\n                const TestGroupSpecSampleType = this.props.Login.testGroupInputData.TestGroupSpecSampleType || {};\r\n                let testGroupSpecSampleType = {};\r\n                if (this.props.Login.screenName === (this.props.Login.genericLabel && this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode])) {\r\n                    testGroupSpecSampleType = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].item : TestGroupSpecSampleType[0].item;\r\n                } else {\r\n                    testGroupSpecSampleType = this.props.Login.masterData.SelectedComponent;\r\n                }\r\n                inputParam = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    testcategory: comboData.item,\r\n                    testgroupspecsampletype: testGroupSpecSampleType,\r\n                    nallottedspeccode: this.props.Login.masterData.SelectedSpecification[\"nallottedspeccode\"],\r\n                    selectedRecord\r\n                }\r\n                this.props.changeTestCategory(inputParam, this.props.Login.testGroupInputData);\r\n                break;\r\n            case 6:\r\n                tempFilterData[fieldName] = comboData;\r\n                inputParam = {\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nprojecttypecode:tempFilterData.nprojecttypecode.value,\r\n                        projecttype:tempFilterData.nprojecttypecode.item,\r\n                       // sampletype: tempFilterData.nsampletypecode.item,\r\n                       // productcategory: comboData.item,\r\n                        tempFilterData\r\n                    },\r\n                    classUrl:\"/projectmaster\",\r\n                    methodUrl: \"/getApprovedProjectByProjectType\"\r\n                }\r\n                this.props.sampleTypeOnChange(inputParam, this.props.Login.masterData);\r\n                break;\r\n           \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        let masterData=this.props.Login.masterData;\r\n        let clearSelectedRecordField = [];\r\n        if (this.props.Login.screenName === \"IDS_PROFILETREE\"\r\n            || this.props.Login.screenName === \"IDS_EDITTREE\") {\r\n            inputParam = this.onSaveTree(saveType, formRef);\r\n            // clearSelectedRecordField = [\r\n            //     { \"controlType\": \"textarea\", \"idsName\": \"IDS_CODEDRESULT\", \"dataField\": \"sleveldescription\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n            //     { \"controlType\": \"textarea\", \"idsName\": \"IDS_CODEDRESULTSYNONYM\", \"dataField\": \"spredefinedsynonym\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n            //     { \"controlType\": \"textarea\", \"idsName\": \"IDS_RESULTPARAMETERCOMMENTS\", \"dataField\": \"spredefinedcomments\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n            //     { \"controlType\": \"checkbox\", \"idsName\": \"IDS_AlERTFORRESULTENTRY\", \"dataField\": \"nneedresultentryalert\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\r\n            //     { \"controlType\": \"checkbox\", \"idsName\": \"IDS_SUBCODERESULTNEED\", \"dataField\": \"nneedsubcodedresult\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\r\n            //     { \"controlType\": \"textarea\", \"idsName\": \"IDS_ALERTMESSAGE\", \"dataField\": \"salertmessage\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n            // ]\r\n        } else if (this.props.Login.screenName === \"IDS_SPECIFICATION\") {\r\n            inputParam = this.onSaveSpecification(saveType, formRef);\r\n            // ALPD-4757, Commented because, it is not required to make isCopy as false when save.\r\n            // if (masterData && masterData.selectedRecordCopy) {\r\n            //     masterData.selectedRecordCopy.isCopy = false;\r\n            // }\r\n            delete masterData.CopyOpenNodes;\r\n//ALPD-5279 Test Group - while adding a spec in test group with save & continue, the sample category name is not visible insted a numeric value is displayed.\r\n            clearSelectedRecordField = [\r\n                //{ \"controlType\": \"textarea\", \"idsName\": \"IDS_SELECTEDPROFILE\", \"dataField\": \"sselectedprofilename\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                //{ \"controlType\": \"textarea\", \"idsName\": \"IDS_SPECNAME\", \"dataField\": \"scopyspecname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                //{ \"controlType\": \"textarea\", \"idsName\": \"IDS_PRODUCTNAME\", \"dataField\": \"sproductname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                //{ \"controlType\": \"textarea\", \"idsName\": \"IDS_PRODUCTCATNAME\", \"dataField\": \"sproductcatname\", \"width\": \"150px\",\"controlName\": \"sproductcatname\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true},\r\n                //{ \"controlType\": \"checkbox\", \"idsName\": \"IDS_PRODUCTCATNAME\", \"dataField\": \"nneedsubcodedresult\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\r\n                { \"controlType\": \"textarea\", \"idsName\": \"IDS_SPECNAME\", \"dataField\": \"sspecname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                { \"controlType\": \"checkbox\", \"idsName\": \"IDS_ACTIVE\", \"dataField\": \"ntransactionstatus\", \"width\": \"150px\",\"controlName\": \"ntransactionstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":1 },\r\n                { \"controlType\": \"checkbox\", \"idsName\": \"IDS_COMPONENTREQUIRED\", \"dataField\": \"ncomponentrequired\", \"width\": \"150px\",\"controlName\": \"ncomponentrequired\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\r\n                { \"controlType\": \"textarea\", \"idsName\": \"IDS_SELECTEDPROFILE\", \"dataField\": \"sselectedprofilename\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                { \"controlType\": \"textarea\", \"idsName\": \"IDS_SPECNAME\", \"dataField\": \"scopyspecname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                \r\n                // { \"controlType\": \"textarea\", \"idsName\": \"IDS_SPECNAME\", \"dataField\": \"sspecname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n            ]\r\n\r\n        } else if (this.props.Login.screenName ===this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]) {\r\n            inputParam = this.onSaveComponent(saveType, formRef);\r\n        } else if (this.props.Login.screenName === \"IDS_COPYSPECIFICATION\") {\r\n            inputParam = this.onSaveCopySpecification(saveType, formRef);\r\n\r\n            clearSelectedRecordField = [\r\n                { \"controlType\": \"textarea\", \"idsName\": \"IDS_SELECTEDPROFILE\", \"dataField\": \"sselectedprofilename\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                { \"controlType\": \"textarea\", \"idsName\": \"IDS_SPECNAME\", \"dataField\": \"scopyspecname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                // { \"controlType\": \"textarea\", \"idsName\": \"IDS_PRODUCTNAME\", \"dataField\": \"sproductname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                // { \"controlType\": \"checkbox\", \"idsName\": \"IDS_AlERTFORRESULTENTRY\", \"dataField\": \"sproductcatname\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\r\n                // { \"controlType\": \"checkbox\", \"idsName\": \"IDS_PRODUCTCATNAME\", \"dataField\": \"nneedsubcodedresult\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\r\n                 { \"controlType\": \"textarea\", \"idsName\": \"IDS_SPECNAME\", \"dataField\": \"sspecname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                //{ \"controlType\": \"checkbox\", \"idsName\": \"IDS_ACTIVE\", \"dataField\": \"ntransactionstatus\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":1 },\r\n                //{ \"controlType\": \"checkbox\", \"idsName\": \"IDS_COMPONENTREQUIRED\", \"dataField\": \"ncomponentrequired\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\r\n            ]\r\n\r\n        } else if (this.props.Login.screenName === \"IDS_TEST\"\r\n            || this.props.Login.screenName === \"IDS_EDITTESTGROUPTEST\") {\r\n            inputParam = this.onSaveTest(saveType, formRef);\r\n        } else if (this.props.Login.screenName === \"IDS_SPECFILE\") {\r\n            inputParam = this.onSaveSpecFile(saveType, formRef);\r\n\r\n            clearSelectedRecordField = [\r\n                \r\n                { \"controlType\": \"textarea\", \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                { \"controlType\": \"textarea\", \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                { \"controlType\": \"textarea\", \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"slinkdescription\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\",\"isClearField\":true },\r\n                { \"controlType\": \"NA\", \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true }, // ALPD-5522 - Test Group -> when adding a spec file using \"Save & Continue,\" the file field is not displayed, and the link dropdown is cleared.\r\n                { \"controlType\": \"checkbox\", \"idsName\": \"IDS_DEFAULTSTATUS\", \"dataField\": \"ndefaultstatus\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\r\n                { \"controlType\": \"checkbox\", \"idsName\": \"IDS_DEFAULTSTATUS\", \"dataField\": \"nlinkdefaultstatus\", \"width\": \"150px\",\"controlName\": \"ndefaultstatus\", \"mandatoryLabel\": \"IDS_SELECT\",\"isClearField\":true,\"preSetValue\":4 },\r\n            ]\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            //ALPD-5444 Test Group - Copy the spec in test group and do save continue loading issue occurs.\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, openModal: true, operation: this.props.Login.operation,\r\n                    screenData: { inputParam, masterData,clearSelectedRecordField },\r\n                    saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            if(this.props.Login.screenName === \"IDS_SPECIFICATION\" || this.props.Login.screenName === \"IDS_COPYSPECIFICATION\" || \r\n               this.props.Login.screenName === \"IDS_SPECFILE\"\r\n            )\r\n            {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\", {},\"\",clearSelectedRecordField);\r\n            }\r\n            else\r\n            {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\", {});\r\n        }\r\n    }\r\n    }\r\n\r\n    onSaveTest = (saveType, formRef) => {\r\n        const operation = this.props.Login.operation;\r\n        const masterData = this.props.Login.masterData;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        let inputData = {};\r\n        const userinfo = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        if (operation === \"create\") {\r\n            const testArray = selectedRecord.ntestcode.map(test => \r\n                { return {...test.item,nisvisible:transactionStatus.YES,nisadhoctest:transactionStatus.NO} });\r\n            inputData = {\r\n                testgroupspecification: masterData.SelectedSpecification,\r\n                testgroupspecsampletype: [masterData.SelectedComponent],\r\n                testgrouptest: testArray, userinfo\r\n            }\r\n        } else {\r\n            postParam = {\r\n                inputListName: \"TestGroupTest\", selectedObject: \"SelectedTest\", primaryKeyField: \"ntestgrouptestcode\",\r\n                primaryKeyValue: masterData.SelectedTest ? masterData.SelectedTest.ntestgrouptestcode : 0,\r\n                fetchUrl: \"testgroup/getTestGroupTest\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                masterData: this.props.Login.masterData, searchFieldList, changeList: [\"TestGroupTestFormula\", \"TestGroupTestNumericParameter\",\r\n                    \"TestGroupTestPredefinedParameter\", \"TestGroupTestCharParameter\", \"TestGroupTestParameter\"], isSingleSelect: true\r\n            }\r\n            let testgrouptestfile = null;\r\n            let testGroupFile = selectedRecord.ntestfilecode;\r\n            if (testGroupFile) {\r\n                testGroupFile = testGroupFile.item;\r\n                testgrouptestfile = {\r\n                    nlinkcode: testGroupFile.nlinkcode,\r\n                    nattachmenttypecode: testGroupFile.nattachmenttypecode,\r\n                    sdescription: testGroupFile.sdescription,\r\n                    ssystemfilename: testGroupFile.ssystemfilename,\r\n                    dcreateddate: testGroupFile.dcreateddate,\r\n                    nfilesize: testGroupFile.nfilesize,\r\n                    ntestgroupfilecode: selectedRecord.ntestgroupfilecode,\r\n                    ntestgrouptestcode: selectedRecord.ntestgrouptestcode,\r\n                    sfilename: testGroupFile.sfilename,\r\n                    nstatus: transactionStatus.ACTIVE\r\n                };\r\n            }\r\n            inputData = {\r\n                testgroupspecification: masterData.SelectedSpecification,\r\n                testgrouptest: {\r\n                    ntestgrouptestcode: selectedRecord.ntestgrouptestcode,\r\n                    nsectioncode: selectedRecord.nsectioncode.value,\r\n                    //nsourcecode: selectedRecord.nsourcecode.value,\r\n                    nmethodcode: selectedRecord.nmethodcode ? selectedRecord.nmethodcode.value : transactionStatus.NA,\r\n                    ninstrumentcatcode: selectedRecord.ninstrumentcatcode ? selectedRecord.ninstrumentcatcode.value : transactionStatus.NA,\r\n                    ncontainertypecode: selectedRecord.ncontainertypecode ? selectedRecord.ncontainertypecode.value : transactionStatus.NA,\r\n                    stestsynonym: selectedRecord.stestsynonym,\r\n                    ncost: selectedRecord.ncost,\r\n                    nsorter: selectedRecord.nsorter,\r\n                    nspecsampletypecode: selectedRecord.nspecsampletypecode,\r\n                    nrepeatcountno: selectedRecord.nrepeatcountno,\r\n                    ntestpackagecode: selectedRecord.ntestpackagecode ? selectedRecord.ntestpackagecode.value : transactionStatus.NA,\r\n                    nisvisible:transactionStatus.YES,nisadhoctest:transactionStatus.NO\r\n\r\n                },\r\n                testgrouptestfile, userinfo\r\n            }\r\n        }\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: operation,\r\n            methodUrl: \"Test\",\r\n            saveType, formRef, searchRef: this.searchRef,\r\n            postParam\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveTree = (saveType, formRef) => {\r\n        const operation = this.props.Login.operation;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        let inputData = {\r\n            userinfo: this.props.Login.userInfo\r\n        };\r\n        if (operation === \"update\") {\r\n            const selectedNode = this.props.Login.masterData.selectedNode;\r\n            inputData[\"treetemplatemanipulation\"] = {\r\n                ntemplatemanipulationcode: selectedRecord.ntemplatemanipulationcode,\r\n                sleveldescription: selectedRecord.sleveldescription,\r\n                nsampletypecode: selectedNode.nsampletypecode,\r\n                ntreeversiontempcode: selectedNode.ntreeversiontempcode,\r\n                nproductcatcode: selectedNode.nproductcatcode,\r\n                nproductcode: selectedNode.nproductcode,\r\n                nprojectmastercode: selectedNode.nprojectmastercode,\r\n            }\r\n            inputData[\"selectednode\"] = this.props.Login.masterData.ActiveKey;\r\n        } else {\r\n            const TreetempTranstestGroup = this.props.Login.TreetempTranstestGroup;\r\n            const filterData = this.state.filterData;\r\n            const selectedRecord = this.state.selectedRecord;\r\n            let treetemplatemanipulation = [];\r\n            let tempArray = filterRecordBasedOnTwoArrays(TreetempTranstestGroup, selectedRecord.treetemplatemanipulation, \"ntemptranstestgroupcode\");\r\n\r\n            tempArray.map(item => {\r\n                const treeData = {\r\n                    ntreeversiontempcode: item.ntreeversiontempcode,\r\n                    npositioncode: item.nlevelno - 1,\r\n                    sleveldescription: item.sleveldescription,\r\n                    ntemptranstestgroupcode: item.ntemptranstestgroupcode,\r\n                    nformcode: 62,\r\n                    schildnode: \"\",\r\n                    nnextchildcode: item.schildnode,\r\n                    ntemplatemanipulationcode: item.ntemplatemanipulationcode,\r\n                    isreadonly: item.ntemplatemanipulationcode > 0 ? true : false,\r\n                    slevelformat: item.slevelformat\r\n                }\r\n                return treetemplatemanipulation.push(treeData);\r\n            });\r\n\r\n\r\n            selectedRecord.treetemplatemanipulation.map(item => {\r\n                const treeTemplateManip = TreetempTranstestGroup.filter(temp => temp.ntemptranstestgroupcode === item.ntemptranstestgroupcode);\r\n                if (treeTemplateManip.length > 0) {\r\n                    item[\"ntemplatemanipulationcode\"] = treeTemplateManip[\"ntemplatemanipulationcode\"];\r\n                } else {\r\n                    item[\"ntemplatemanipulationcode\"] = 0;\r\n                }\r\n                return treetemplatemanipulation.push(item);\r\n            });\r\n\r\n            inputData[\"treetemplatemanipulation\"] = treetemplatemanipulation;\r\n            inputData[\"sampletype\"] = filterData.nsampletypecode.item;\r\n            inputData[\"ncategorycode\"] = filterData.nproductcatcode.value;\r\n            inputData[\"nproductcode\"] = filterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.YES ? -1 : filterData.nproductcatcode.item.ncategorybasedflow == transactionStatus.YES ? -1 :\r\n                filterData.nproductcode.value ? filterData.nproductcode.value : -1;\r\n            inputData[\"ntreeversiontempcode\"] = filterData.ntreeversiontempcode.value;\r\n          //  inputData[\"nprojectmastercode\"] = filterData.nprojectmastercode ? filterData.nprojectmastercode.value:-1;\r\n            inputData[\"nprojectmastercode\"] = filterData.nprojectmastercode ? filterData.nsampletypecode.item.nprojectspecrequired === transactionStatus.YES ? filterData.nprojectmastercode.value :-1:-1;\r\n        }\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: operation,\r\n            methodUrl: \"Tree\",\r\n            saveType, formRef\r\n            \r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveSpecification = (saveType, formRef) => {\r\n        const operation = this.props.Login.operation;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        let selectedCopyNodeManipulationCode = this.state.selectedRecord.selectedCopyNodeManipulationCode || -1;\r\n\r\n        let testGroupSpec = {\r\n            napproveconfversioncode: -1,\r\n            sversion: '',\r\n            napprovalstatus: transactionStatus.DRAFT,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            ntransactionstatus: selectedRecord[\"ntransactionstatus\"],\r\n            ncomponentrequired: selectedRecord[\"ncomponentrequired\"],\r\n            //   nclinicalspec: selectedRecord[\"nclinicalspec\"],\r\n           // nprojectcode: selectedRecord[\"nprojectcode\"] ? selectedRecord[\"nprojectcode\"] : -1,\r\n            nprojectmastercode: this.state.filterData.nprojectmastercode ? this.state.filterData.nsampletypecode.item.nprojectspecrequired === transactionStatus.YES ? this.state.filterData.nprojectmastercode.value :-1 : -1,\r\n            sspecname: operation===\"copy\"?selectedRecord[\"scopyspecname\"]:selectedRecord[\"sspecname\"],\r\n            dexpirydate: selectedRecord[\"dexpirydate\"],\r\n            nallottedspeccode: selectedRecord[\"nallottedspeccode\"] ? selectedRecord[\"nallottedspeccode\"] : 0,\r\n            ntzexpirydate: selectedRecord[\"ntzexpirydate\"].value,\r\n            stzexpirydate: selectedRecord[\"ntzexpirydate\"].label\r\n        };\r\n\r\n        const dexpirydate = testGroupSpec[\"dexpirydate\"];\r\n        //need this conversion when the datatype of the field is 'Instant'\r\n        testGroupSpec[\"dexpirydate\"] = formatInputDate(dexpirydate, false);\r\n\r\n        if (operation === \"create\") {\r\n            testGroupSpec[\"ntemplatemanipulationcode\"] = this.props.Login.masterData.selectedNode.ntemplatemanipulationcode\r\n        }\r\n        let ntreeversiontempcode = this.state.filterData.ntreeversiontempcode.value;\r\n        \r\n        const inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n            testgroupspecification: testGroupSpec,\r\n            treetemplatemanipulation: this.props.Login.masterData.selectedNode,\r\n            selectedspecification: this.props.Login.masterData.SelectedSpecification,\r\n            ntreeversiontempcode: ntreeversiontempcode,\r\n            selectedCopyNodeManipulationCode : selectedCopyNodeManipulationCode\r\n        }\r\n        \r\n\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: operation,\r\n            methodUrl: \"Specification\",\r\n            saveType, formRef,\r\n            selectedRecord: {...this.state.selectedRecord}\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveComponent = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const testArray = selectedRecord.ntestcode.map(test => { return {...test.item,nisvisible:transactionStatus.YES,nisadhoctest:transactionStatus.NO}});\r\n        const inputData = {\r\n            testgroupspecification: masterData.SelectedSpecification,\r\n            testgroupspecsampletype: [selectedRecord.ncomponentcode.item],\r\n            testgrouptest: testArray,\r\n            userinfo: this.props.Login.userInfo,\r\n            genericlabel:this.props.Login.genericLabel\r\n        }\r\n        const inputParam = {\r\n            inputData,\r\n            classUrl: \"testgroup\",\r\n            operation: this.props.Login.operation,\r\n            methodUrl: \"Component\",\r\n            saveType, formRef\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    onSaveSpecFile = (saveType, formRef) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let specFileArray = [];\r\n        const selectedSpecification = this.props.Login.masterData.SelectedSpecification;\r\n        let specFile = {\r\n            nallottedspeccode: selectedSpecification.nallottedspeccode,\r\n            nspecfilecode: selectedRecord.nspecfilecode ? selectedRecord.nspecfilecode : 0,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            nattachmenttypecode\r\n        };\r\n        const formData = new FormData();\r\n        if (nattachmenttypecode === attachmentType.FTP) {\r\n            if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const tempData = Object.assign({}, specFile);\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const uniquefilename = nattachmenttypecode === attachmentType.FTP ? create_UUID() + '.' + fileExtension : \"\";\r\n                    tempData[\"sfilename\"] =Lims_JSON_stringify(file.name,false);\r\n                    tempData[\"sdescription\"] =Lims_JSON_stringify(replaceBackSlash( selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\"),false);\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    specFileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                specFile[\"sfilename\"] =Lims_JSON_stringify(selectedRecord.sfilename,false);\r\n                specFile[\"sdescription\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\"),false) ;\r\n                specFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                specFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                specFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                specFileArray.push(specFile);\r\n            }\r\n        } else {\r\n            specFile[\"sfilename\"] =Lims_JSON_stringify( replaceBackSlash(selectedRecord.slinkfilename.trim()),false) ;\r\n            specFile[\"sdescription\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\"),false);\r\n            specFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            specFile[\"ssystemfilename\"] = \"\";\r\n            specFile[\"nfilesize\"] = 0;\r\n            specFileArray.push(specFile);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"testgroupspecification\", JSON.stringify(selectedSpecification));\r\n        formData.append(\"testgroupspecfile\", JSON.stringify(specFileArray));\r\n        const inputParam = {\r\n           // inputData: { userinfo: this.props.Login.userInfo },\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n                    //ALPD-1628(while saving the file and link,audit trail is not captured the respective language)\r\n                    slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n                }\r\n            },\r\n            formData: formData,\r\n            isFileupload: true,\r\n            operation: this.props.Login.operation,\r\n            classUrl: \"testgroup\",\r\n            saveType, formRef, methodUrl: \"SpecificationFile\",\r\n            selectedRecord: {...this.state.selectedRecord}\r\n        }\r\n        return inputParam;\r\n    }\r\n\r\n    deleteSpecRecord = (deleteParam) => {\r\n        const selectedRecord = deleteParam.selectedRecord;\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        const ntreeversiontempcode = masterData[\"TreeTemplateManipulation\"][0].ntreeversiontempcode;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === ntreeversiontempcode);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedRecord.napprovalstatus === transactionStatus.DRAFT\r\n                || selectedRecord.napprovalstatus === transactionStatus.CORRECTION) {\r\n                this.deleteRecord(deleteParam);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteRecord = (deleteParam) => {\r\n        if (this.props.Login.masterData.selectedNode !== undefined && this.props.Login.masterData.selectedNode !== null) {\r\n            const masterData = this.props.Login.masterData;\r\n            const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n                x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n            const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n            if (templateVersionStatus === transactionStatus.RETIRED) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n            }\r\n            else {\r\n                if (this.props.Login.masterData.selectedNode) {\r\n                    const methodUrl = deleteParam.methodUrl;\r\n                    let dataState = this.state.componentDataState;\r\n                    const screenName = deleteParam.screenName;\r\n                    const inputParam = {\r\n                        inputData: {\r\n                            [deleteParam.keyName]: deleteParam.selectedRecord,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            genericlabel: this.props.Login.genericLabel,\r\n                            testgroupspecification: this.props.Login.masterData.SelectedSpecification,\r\n                            treetemplatemanipulation: this.props.Login.masterData.selectedNode,\r\n                            ntreeversiontempcode: deleteParam.filterData.ntreeversiontempcode.value\r\n                        },\r\n                        classUrl: \"testgroup\",\r\n                        operation: deleteParam.operation,\r\n                        methodUrl: methodUrl,\r\n                        screenName, dataState\r\n                    }\r\n                    const masterData = this.props.Login.masterData;\r\n                    //if (showEsign(this.state.controlMap, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam, masterData },\r\n                                openModal: true, screenName: screenName, operation: deleteParam.operation, selectedRecord: {}\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    } else {\r\n                        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n                    }\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPROFILENODE\" }));\r\n                }\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTPROFILENODE\" }));\r\n        }\r\n    }\r\n\r\n    deleteMultipleRecord = (deleteParam) => {\r\n        //console.log(\"delete component:\", deleteParam, this.props.Login.masterData);\r\n        const masterData = this.props.Login.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const testgroupspecification = this.props.Login.masterData.SelectedSpecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                || testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                const inputParam = {\r\n                    inputData: {\r\n                        testgroupspecsampletype: deleteParam.props.testgroupspecsampletype,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        genericlabel:this.props.Login.genericLabel,\r\n                        testgroupspecification,\r\n                        treetemplatemanipulation: this.props.Login.masterData.selectedNode\r\n                    },\r\n                    classUrl: \"testgroup\",\r\n                    operation: \"delete\",\r\n                    methodUrl: \"TestGroupComponent\",\r\n                    screenName:this.props.Login.genericLabel && this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] \r\n                }\r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData },\r\n                            openModal: true, screenName:this.props.Login.genericLabel && this.props.Login.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] , operation: \"delete\", selectedRecord: {}\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropSpecFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n    validateTestGroupComplete = (operation, inputValue, ncontrolCode) => {\r\n        if (this.props.Login.masterData.selectedNode !== undefined && this.props.Login.masterData.selectedNode !== null) {\r\n            const masterData = this.props.Login.masterData;\r\n            const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n                x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n            const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n            if (templateVersionStatus === transactionStatus.RETIRED) {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n            }\r\n            else {\r\n                if (inputValue.testgroupspecification) {\r\n                    if (inputValue.testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                        || inputValue.testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                        return rsapi.post(\"testgroup/validateTestGroupComplete\", {\r\n                            nallottedspeccode: inputValue.testgroupspecification.nallottedspeccode,\r\n                            \"userinfo\": this.props.Login.userInfo\r\n                        })\r\n                            .then(response => {\r\n                                if (response.data && response.data.length > 0) {\r\n                                    const inactiveTestArray = [];\r\n                                    response.data.map(item => inactiveTestArray.indexOf(item.stestname) === -1 ? inactiveTestArray.push(item.stestname) : \"\");\r\n                                    const data = \" [\" + inactiveTestArray + \"] \" + this.props.intl.formatMessage({ id: \"IDS_INACTIVETESTSATCOMPLETE\" })\r\n                                    this.confirmMessage.confirm(this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                                        this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }),\r\n                                        data,\r\n                                        this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                        this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                        () => this.completeSpecification(operation, inputValue, ncontrolCode),\r\n                                        false,\r\n                                        undefined);\r\n                                }\r\n                                else {\r\n                                    this.completeSpecification(operation, inputValue, ncontrolCode);\r\n                                }\r\n\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.status === 500) {\r\n                                    toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                                }\r\n                                else {\r\n                                    toast.warn(this.props.intl.formatMessage({ id: error.response }));\r\n                                }\r\n                            })\r\n                    }\r\n                    else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n                    }\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n    }\r\n\r\n    retireSpec = (operation, selectedSpecification, approvalRoleActionDetail, retireSpecId) => {\r\n        if (selectedSpecification.testgroupspecification.napprovalstatus !== transactionStatus.RETIRED) {\r\n            if (approvalRoleActionDetail.length > 0 && approvalRoleActionDetail[0].nlevelno === transactionStatus.ACTIVE) {\r\n                if (selectedSpecification.testgroupspecification[\"napprovalstatus\"] === approvalRoleActionDetail[0].ntransactionstatus) {\r\n                    const inputParam = {\r\n                        inputData: {\r\n                            nallottedspeccode: selectedSpecification.testgroupspecification,\r\n                            treetemplatemanipulation: selectedSpecification.treetemplatemanipulation,\r\n                            approvalRoleActionDetail: approvalRoleActionDetail[0],\r\n                            userinfo: this.props.Login.userInfo,\r\n                            operation: operation\r\n                        },\r\n                        classUrl: \"testgroup\",\r\n                        operation: operation,\r\n                        methodUrl: \"Spec\",\r\n                        screenName: \"IDS_STUDYPLAN\"\r\n                    }\r\n\r\n\r\n                    let masterData = this.props.Login.masterData\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, retireSpecId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam, masterData },\r\n                                openModal: true, screenName: \"IDS_STUDYPLAN\", operation: operation, selectedRecord: {}\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    } else {\r\n                        this.props.retireSpecification(inputParam.inputData, masterData);\r\n                    }\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_RETIRECANBECONEAFTERFINAL\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_FINALLEVELAPPROVE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYRETIRED\" }));\r\n        }\r\n\r\n    }\r\n\r\n    onDownloadClick = (reportSpecId) => {\r\n        if (this.props.Login.masterData.SelectedComponent && this.props.Login.masterData.SelectedTest) {\r\n        const inputParam = {\r\n    \r\n            Vnallottedspeccode:this.props.Login.masterData['SelectedSpecification'].nallottedspeccode,  \r\n            ntransactionstatus:this.props.Login.masterData.SelectedSpecification.napprovalstatus,\r\n\r\n        }\r\n        //this.props.reportSpecification(inputParam['inputData']);\r\n        this.props.generateControlBasedReport(reportSpecId,inputParam,this.props.Login,\"Vnallottedspeccode\",this.props.Login.masterData.SelectedComponent.nallottedspeccode);\r\n    } else {\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTCANNOTGENERATEFORCOMPWITHOUTTEST\" }));\r\n    }\r\n    \r\n    }\r\n\r\n\r\n    specificationReport = (operation, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedComponent && this.props.Login.masterData.SelectedTest) {\r\n            const inputParam = {\r\n                inputData: {\r\n                    sprimarykeyname: 'nallottedspeccode',\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ncontrolcode: ncontrolCode,\r\n                    nregtypecode: transactionStatus.NA,\r\n                    nregsubtypecode: transactionStatus.NA,\r\n                    nreportmodulecode: transactionStatus.NA,\r\n                    nreporttypecode: REPORTTYPE.CONTROLBASED,\r\n                    nreportdecisiontypecode: transactionStatus.NA,\r\n                    certificatetypecode: transactionStatus.NA,\r\n                    nsectioncode: transactionStatus.NA,\r\n                    operation: operation,\r\n                    nallottedspeccode: this.props.Login.masterData['SelectedSpecification']['nallottedspeccode'],\r\n                    selectedComponent: this.props.Login.masterData[\"SelectedComponent\"],\r\n                    selectedTest: this.props.Login.masterData[\"SelectedTest\"],\r\n                    filterData: this.state.filterData\r\n\r\n                },\r\n            }\r\n            this.props.reportSpecification(inputParam['inputData']);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTCANNOTGENERATEFORCOMPWITHOUTTEST\" }));\r\n        }\r\n    }\r\n\r\n    completeSpecification = (operation, inputValue, ncontrolCode) => {\r\n        if (inputValue.testgroupspecification) {\r\n            if (inputValue.testgroupspecification.napprovalstatus === transactionStatus.DRAFT\r\n                || inputValue.testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n\r\n                const inputParam = {\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ntreeversiontempcode: this.state.filterData.ntreeversiontempcode.value,\r\n                        testGroupTest: this.props.Login.masterData.TestGroupTest,\r\n                        // ALPD-5329 - Gowtham R - In test group specification record getting Auto Approved when configuration for test group approval not done\r\n                        isQualisLite:parseInt(this.props.Login.settings[71]),\r\n                        ...inputValue\r\n                    },\r\n                    classUrl: \"testgroup\",\r\n                    operation: operation,\r\n                    methodUrl: \"Specification\",\r\n                    screenName: \"IDS_SPECIFICATION\"\r\n                }\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: \"IDS_SPECIFICATION\", operation: operation, selectedRecord: {}\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n        }\r\n    }\r\n\r\n    approveSpecification = (status, needEsign) => {\r\n        const masterData = this.props.Login.masterData;\r\n        const inputParam = {\r\n            inputData: {\r\n                userinfo: this.props.Login.userInfo,\r\n                treetemplatemanipulation: masterData.selectedNode,\r\n                ntreeversiontempcode: this.state.filterData.ntreeversiontempcode.value,\r\n                testgroupspecification: {\r\n                    ...masterData.SelectedSpecification,\r\n                    napprovalstatus: status\r\n                }\r\n            },\r\n            classUrl: \"testgroup\",\r\n            operation: \"approve\",\r\n            methodUrl: \"Specification\",\r\n            screenName: \"IDS_SPECIFICATION\"\r\n        }\r\n        if (needEsign === transactionStatus.YES) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_SPECIFICATION\", operation: \"approve\", selectedRecord: {}\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\", {});\r\n        }\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName, caseNo, optional) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        switch (caseNo) {\r\n            case 1:\r\n                if (fieldName === \"ntestcode\") {\r\n                    selectedRecord[fieldName] = comboData;\r\n                    this.setState({ selectedRecord });\r\n                } else {\r\n                    selectedRecord[fieldName] = comboData;\r\n                    this.setState({ selectedRecord });\r\n                }\r\n                break;\r\n\r\n            case 2:\r\n                selectedRecord[\"parameterTypeCode\"] = comboData.value;\r\n                selectedRecord[fieldName] = comboData;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            case 3:\r\n                selectedRecord[\"schecklistversionname\"] = comboData.item.schecklistversionname;\r\n                selectedRecord[fieldName] = comboData;\r\n                this.setState({ selectedRecord });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n   \r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    generateBreadCrumData(filterData) {\r\n        if (filterData && Object.values(filterData).length > 0 && filterData.nsampletypecode && filterData.nsampletypecode.item) {\r\n            // if (filterData.nsampletypecode && filterData.nproductcatcode \r\n            //     && filterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES \r\n            //     && filterData.nsampletypecode.item.ncategorybasedflowrequired == transactionStatus.NO) \r\n            if (filterData.nsampletypecode && filterData.nsampletypecode.item.ncategorybasedflowrequired == transactionStatus.YES ? true : filterData.nproductcatcode \r\n                && filterData.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES ? true:false) \r\n                {\r\n                this.breadCrumbData = [\r\n                    {\r\n                        \"label\": \"IDS_SAMPLETYPE\",\r\n                        \"value\": filterData.nsampletypecode ? filterData.nsampletypecode.label : \"\"\r\n                    },\r\n                    {\r\n                        \"label\": filterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY ?this.props.Login.genericLabel && this.props.Login.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]  :\r\n                            filterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY ? \"IDS_INSTRUMENTCATEGORY\" :\r\n                                filterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY ? \"IDS_MATERIALCATEGORY\" : \"\",\r\n                        \"value\": filterData.nproductcatcode ? filterData.nproductcatcode.label : \"\"\r\n                    },\r\n                    {\r\n                        \"label\": \"IDS_TREETEMPLATEVERSION\",\r\n                        \"value\": filterData.ntreeversiontempcode ? filterData.ntreeversiontempcode.label : \"\"\r\n                    }\r\n                ]\r\n                if (filterData.nsampletypecode.value === SampleType.PROJECTSAMPLETYPE)\r\n                {\r\n                 if ( filterData.nsampletypecode.item.nprojectspecrequired === transactionStatus.YES) {\r\n                    this.breadCrumbData.push(  {\r\n                        \"label\": \"IDS_PROJECTTYPE\",\r\n                        \"value\": filterData.nprojecttypecode ? filterData.nprojecttypecode.label : \"\"\r\n                    },\r\n                    {\r\n                        \"label\": \"IDS_PROJECT\",\r\n                        \"value\": filterData.nprojectmastercode ? filterData.nprojectmastercode.label : \"\"\r\n                    })\r\n                }\r\n                }\r\n            } else {\r\n                this.breadCrumbData = [\r\n                    {\r\n                        \"label\": \"IDS_SAMPLETYPE\",\r\n                        \"value\": filterData.nsampletypecode ? filterData.nsampletypecode.label : \"\"\r\n                    },\r\n                    {\r\n                        \"label\": filterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY ?this.props.Login.genericLabel && this.props.Login.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] :\r\n                            filterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY ? \"IDS_INSTRUMENTCATEGORY\" :\r\n                                filterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY ? \"IDS_MATERIALCATEGORY\" : \"\",\r\n                        \"value\": filterData.nproductcatcode ? filterData.nproductcatcode.label : \"\"\r\n                    },\r\n\r\n                    {\r\n                        \"label\": filterData.nsampletypecode.item.nformcode === formCode.PRODUCTCATEGORY ? this.props.Login.genericLabel && this.props.Login.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]  :\r\n                            filterData.nsampletypecode.item.nformcode === formCode.INSTRUMENTCATEGORY ? \"IDS_INSTRUMENT\" :\r\n                                filterData.nsampletypecode.item.nformcode === formCode.MATERIALCATEGORY ? \"IDS_MATERIAL\" : \"\",\r\n                        \"value\": filterData.nproductcode ? filterData.nproductcode.label : \"\"\r\n                    },\r\n                    {\r\n                        \"label\": \"IDS_TREETEMPLATEVERSION\",\r\n                        \"value\": filterData.ntreeversiontempcode ? filterData.ntreeversiontempcode.label : \"\"\r\n                    }\r\n                ];\r\n                if (filterData.nsampletypecode.value === SampleType.PROJECTSAMPLETYPE)\r\n                {\r\n                    if ( filterData.nsampletypecode.item.nprojectspecrequired === transactionStatus.YES) {\r\n                    this.breadCrumbData.push(  {\r\n                        \"label\": \"IDS_PROJECTTYPE\",\r\n                        \"value\": filterData.nprojecttypecode ? filterData.nprojecttypecode.label : \"\"\r\n                    },\r\n                    {\r\n                        \"label\": \"IDS_PROJECT\",\r\n                        \"value\": filterData.nprojectmastercode ? filterData.nprojectmastercode.label : \"\"\r\n                    })\r\n                }\r\n                }\r\n            }\r\n\r\n        }else{\r\n            this.breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\":filterData && filterData.nsampletypecode ? filterData.nsampletypecode.label : \"\"\r\n                },\r\n            ]\r\n        }\r\n    }\r\n\r\n    updateSpiltterLayout() {\r\n        if (this.myRef && this.myRef.current && this.myRef.current.clientHeight + 20 !== this.state.fixefScrollHeight) {\r\n\r\n            this.setState({\r\n                fixefScrollHeight: this.myRef.current.clientHeight + 20,\r\n                disableSplit: true\r\n            })\r\n            //console.log(this.myRef.current.clientHeight)\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    disableSplit: false\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let selectedsubcodedresult = this.state.selectedsubcodedresult;\r\n        let selectsubcodedelete = this.state.selectsubcodedelete;\r\n        let filterData = this.state.filterData || {};\r\n        let isStateChanged = false;\r\n        let activeTabIndex = this.props.Login.activeTabIndex || 0;\r\n        let activeTabId = this.props.Login.activeTabId || false;\r\n        let selectedRecordCopy = this.props.Login.masterData.selectedRecordCopy;\r\n        //let CopyActiveKey = this.state.selectedRecord && this.state.selectedRecord.CopyActiveKey ? this.state.selectedRecord.CopyActiveKey:\"\";\r\n        //let CopyFocusKey =  this.state.selectedRecord && this.state.selectedRecord.CopyFocusKey ? this.state.selectedRecord.CopyFocusKey:\"\";\r\n        this.updateSpiltterLayout()\r\n        let tempFilterData = this.state.tempFilterData || {};\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n            // if(CopyActiveKey!==\"\")\r\n            // {\r\n            // selectedRecord.CopyActiveKey=CopyActiveKey;\r\n            // selectedRecord.CopyFocusKey=CopyFocusKey;\r\n            // }\r\n            isStateChanged = true;\r\n        }\r\n        if (this.props.Login.selectedsubcodedresult !== previousProps.Login.selectedsubcodedresult) {\r\n           selectedsubcodedresult = this.props.Login.selectedsubcodedresult;\r\n            //selectedsubcodedresult = this.state.selectedsubcodedresult;\r\n            isStateChanged = true;\r\n        }\r\n        if (this.props.Login.selectsubcodedelete !== previousProps.Login.selectsubcodedelete) {\r\n            selectsubcodedelete = this.props.Login.selectsubcodedelete;\r\n             //selectedsubcodedresult = this.state.selectedsubcodedresult;\r\n             isStateChanged = true;\r\n         }\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex || this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n                activeTabIndex = this.props.Login.activeTabIndex;\r\n                activeTabId = this.props.Login.activeTabId;\r\n                isStateChanged = true;\r\n                // this.setState({\r\n                //     activeTabIndex,\r\n                //     activeTabId\r\n                // });\r\n            }\r\n        }\r\n        if (this.props.Login.tempFilterData !== previousProps.Login.tempFilterData) {\r\n            tempFilterData = this.props.Login.tempFilterData || {};\r\n            isStateChanged = true;\r\n        }\r\n        let sampleType = this.state.sampleType || [];\r\n        if (this.props.Login.masterData.SampleType !== previousProps.Login.masterData.SampleType) {\r\n            const sampleTypeMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", \"nsorter\", \"ascending\", false);\r\n            sampleType = sampleTypeMap.get(\"OptionList\");\r\n            tempFilterData[\"nsampletypecode\"] = sampleType.length ? sampleType[0] : \"\";\r\n            isStateChanged = true;\r\n        }\r\n        let productCategory = this.state.productCategory || [];\r\n        if (this.props.Login.masterData.ProductCategory !== previousProps.Login.masterData.ProductCategory) {\r\n            const productCatMap = constructOptionList(this.props.Login.masterData.ProductCategory || [], \"nproductcatcode\", \"sproductcatname\", \"nproductcatcode\", \"ascending\", false);\r\n            productCategory = productCatMap.get(\"OptionList\");\r\n            tempFilterData[\"nproductcatcode\"] = productCategory.length > 0 ? productCategory[0] : \"\";\r\n            isStateChanged = true;\r\n        }\r\n        let product = this.state.product || [];\r\n        if (this.props.Login.masterData.Product !== previousProps.Login.masterData.Product) {\r\n            const productMap = constructOptionList(this.props.Login.masterData.Product || [], \"nproductcode\", \"sproductname\", \"nproductcode\", \"ascending\", false);\r\n            product = productMap.get(\"OptionList\");\r\n            tempFilterData[\"nproductcode\"] = product.length > 0 ? product[0] : undefined;\r\n            isStateChanged = true;\r\n        }\r\n        let projectType = this.state.projectType || [];\r\n        if (this.props.Login.masterData.ProjectTypeList !== previousProps.Login.masterData.ProjectTypeList) {\r\n            const projectTypeMap = constructOptionList(this.props.Login.masterData.ProjectTypeList || [], \"nprojecttypecode\", \r\n                        \"sprojecttypename\", \"nprojecttypecode\", \"ascending\", false);\r\n            projectType = projectTypeMap.get(\"OptionList\");\r\n            tempFilterData[\"nprojecttypecode\"] = projectType.length > 0 ? projectType[0] : undefined;\r\n            isStateChanged = true;\r\n        }\r\n        let project = this.state.project || [];\r\n        if (this.props.Login.masterData.ProjectMasterList !== previousProps.Login.masterData.ProjectMasterList) {\r\n            const projectMasterMap = constructOptionList(this.props.Login.masterData.ProjectMasterList || [], \"nprojectmastercode\", \r\n                        \"sprojectcode\", \"nprojectmastercode\", \"ascending\", false);\r\n            project = projectMasterMap.get(\"OptionList\");\r\n            tempFilterData[\"nprojectmastercode\"] = project.length > 0 ? project[0] : undefined;\r\n            isStateChanged = true;\r\n        }\r\n        let treeVersionTemplate = this.state.treeVersionTemplate || [];\r\n        if (this.props.Login.masterData.TreeVersionTemplate !== previousProps.Login.masterData.TreeVersionTemplate) {\r\n            const templateMap = constructOptionList(this.props.Login.masterData.TreeVersionTemplate || [], \"ntreeversiontempcode\", \"sversiondescription\", \"ntreeversiontempcode\", \"ascending\", false);\r\n            treeVersionTemplate = templateMap.get(\"OptionList\");\r\n            tempFilterData[\"ntreeversiontempcode\"] = treeVersionTemplate.length > 0 ? treeVersionTemplate[treeVersionTemplate.length - 1] : \"\";\r\n            isStateChanged = true;\r\n        }\r\n\r\n        // if (this.props.Login.masterData.TestGroupTestParameter && this.props.Login.masterData.TestGroupTestParameter !== previousProps.Login.masterData.TestGroupTestParameter) {\r\n        //     sortData(this.props.Login.masterData.TestGroupTestParameter, \"ascending\", \"nsorter\");\r\n        // }\r\n\r\n        // if (this.props.Login.masterData.TestGroupTesT && this.props.Login.masterData.TestGroupTesT !== previousProps.Login.masterData.TestGroupTesT) {\r\n        //     sortData(this.props.Login.masterData.TestGroupTesTest, \"ascending\", \"nsorter\");\r\n        // }\r\n\r\n        let userRoleControlRights = this.state.userRoleControlRights || [];\r\n        let controlMap = this.state.controlMap || [];\r\n        if (this.props.Login.userInfo && this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const nformCode = this.props.Login.userInfo.nformcode;\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[nformCode] && Object.values(this.props.Login.userRoleControlRights[nformCode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode));\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, nformCode);\r\n            filterData = { ...tempFilterData };\r\n            this.generateBreadCrumData(filterData);\r\n        }\r\n\t//ALPD-5529--Vignesh R(06-03-2025)-->Test group screen -> Profile showing wrongly in specific scenario.\r\n        if (this.props.Login.masterData.filterData !== previousProps.Login.masterData.filterData) {\r\n            filterData = { ...this.props.Login.masterData.filterData };\r\n            this.generateBreadCrumData(filterData);\r\n            isStateChanged = true;\r\n        }\r\n        else{\r\n             this.generateBreadCrumData(filterData);\r\n        }\r\n        // else if (filterData !== previousState.filterData) {\r\n        //     filterData = { ...tempFilterData };\r\n        //     this.generateBreadCrumData(filterData);\r\n        // }\r\n\r\n        let historyDataState = this.state.historyDataState;\r\n        if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n            historyDataState = this.props.Login.historyDataState;\r\n            isStateChanged = true;\r\n        }\r\n\r\n        let { testskip, testtake } = this.state;\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = testtake ? testtake : this.props.Login.testtake\r\n            isStateChanged = true;\r\n        } \r\n        let { skipRulesEngine, takeRulesEngine } = this.state;\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            skipRulesEngine = this.props.Login.skipRulesEngine === undefined ? skipRulesEngine : this.props.Login.skipRulesEngine\r\n            takeRulesEngine = takeRulesEngine ? takeRulesEngine : this.props.Login.takeRulesEngine\r\n            isStateChanged = true;\r\n        }\r\n        if (isStateChanged) {\r\n            this.setState({\r\n                selectedRecord,selectedRecordCopy, tempFilterData, filterData, userRoleControlRights, controlMap,\r\n                sampleType, productCategory, product, treeVersionTemplate, historyDataState,\r\n                testskip, testtake, projectType, project,activeTabIndex, activeTabId, skipRulesEngine, takeRulesEngine,selectedsubcodedresult,selectsubcodedelete\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, filterTestGroup, createTree, editTree, sampleTypeOnChange,\r\n    getTestGroupDetails, validateEsignCredential, updateStore, addSpecification, getSpecification, addComponent,\r\n    changeTestCategory, addTestGroupTest, editTestGroupTest, getTestGroupParameter, editTestGroupParameter,\r\n    addTestFile, editSpecFile, getSpecificationDetails, addTestGroupCodedResult, getComponentBySpecId, filterColumnData,\r\n    viewAttachment, viewTestGroupCheckList, getTestGroupComponentDetails, filterTransactionList, reportSpecification, retireSpecification, getDataForTestMaterial, getEditTestGroupRulesEngine,\r\n    getMaterialCategoryBasedMaterialType, getMaterialBasedMaterialCategory, getTestGroupMaterial, getDataForEditTestMaterial, addTestGroupNumericTab, getTestGroupRulesEngineAdd,\r\n    getSelectedTestGroupRulesEngine, getParameterforEnforce, getParameterRulesEngine, getParameterResultValue, subCodedResultView, saveExecutionOrder, getPredefinedDataRulesEngine,getCopyValues,\r\n    generateControlBasedReport,getSpecDetailsForCopy,getSpecificationComboServices,getComponentComboServices,getRulesTestComboServices,getProductComboServices,getProfileRootComboServices\r\n})(injectIntl(TestGroup));"]},"metadata":{},"sourceType":"module"}