{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{process}from'@progress/kendo-data-query';import{toast}from'react-toastify';import DataGrid from'../../components/data-grid/data-grid.component';import{ListWrapper,PrimaryHeader}from'../../components/client-group.styles';import{callService,updateStore,crudMaster}from'../../actions';import{getControlMap}from'../../components/CommonScript';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import DateTimePicker from'../../../src/components/date-time-picker/date-time-picker.component';import{getStartOfDay,getEndOfDay,convertDateValuetoString,rearrangeDateFormat}from'../../../src/components/CommonScript';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var JsonExceptionLogs=/*#__PURE__*/function(_React$Component){_inherits(JsonExceptionLogs,_React$Component);var _super=_createSuper(JsonExceptionLogs);function JsonExceptionLogs(props){var _this;_classCallCheck(this,JsonExceptionLogs);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data.JsonExceptionLogs,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.reloadData=function(){var fromDate=_this.props.Login.masterData.FromDate;var toDate=_this.props.Login.masterData.ToDate;var obj=convertDateValuetoString(fromDate,toDate,_this.props.Login.userInfo,true);var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:obj.fromDate,toDate:obj.toDate},classUrl:\"jsonexceptionlogs\",methodUrl:\"JsonExceptionLogs\",displayName:\"IDS_JSONEXCEPTIONLOGS\",userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;// this.setState({ selectedRecord });\n// this.reloadData(selectedRecord, true);\nvar dateObj={};if(dateName===\"fromdate\"){dateObj=convertDateValuetoString(dateValue,_this.props.Login.masterData.toDate,_this.props.Login.userInfo,true);}else{dateObj=convertDateValuetoString(_this.props.Login.masterData.toDate,dateValue,_this.props.Login.userInfo,true);}var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:dateObj.fromDate,toDate:dateObj.toDate},classUrl:'jsonexceptionlogs',methodUrl:\"JsonExceptionLogs\",userInfo:_this.props.Login.userInfo,displayName:\"IDS_JSONEXCEPTIONLOGS\"};_this.props.callService(inputParam);};_this.formRef=React.createRef();_this.extractedColumnList=[];var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,isOpen:false,userRoleControlRights:[],controlMap:new Map()};return _this;}_createClass(JsonExceptionLogs,[{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";var fromDate=\"\";var toDate=\"\";if(this.props.Login.masterData&&this.props.Login.masterData.FromDate){fromDate=this.state.selectedRecord[\"fromdate\"]&&getStartOfDay(this.state.selectedRecord[\"fromdate\"])||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.FromDate);toDate=this.state.selectedRecord[\"todate\"]&&getEndOfDay(this.state.selectedRecord[\"todate\"])||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate);}if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"idsName\":\"IDS_STACKTRACE\",\"dataField\":\"sstacktrace\",\"width\":\"200px\"},{\"idsName\":\"IDS_MESSAGE\",\"dataField\":\"smessage\",\"width\":\"200px\"},{\"idsName\":\"IDS_MODULENAME\",\"dataField\":\"smodulename\",\"width\":\"200px\"},{\"idsName\":\"IDS_FORMNAME\",\"dataField\":\"sformname\",\"width\":\"200px\"},{\"idsName\":\"IDS_USER\",\"dataField\":\"susername\",\"width\":\"200px\"},{\"idsName\":\"IDS_USERROLE\",\"dataField\":\"suserrolename\",\"width\":\"200px\"},{\"idsName\":\"IDS_EXCEPTIONDATE\",\"dataField\":\"sexceptiondate\",\"width\":\"200px\",\"componentName\":\"date\"},{\"idsName\":\"IDS_SITENAME\",\"dataField\":\"ssitename\",\"width\":\"200px\"}];primaryKeyField=\"njsonexceptioncode\";}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(PrimaryHeader,{className:\"d-flex justify-content-between mb-3\"}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecord[\"fromdate\"]||fromDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this2.handleDateChange(\"fromdate\",date);},value:this.state.selectedRecord[\"fromdate\"]||fromDate})),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"todate\",label:this.props.intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecord[\"todate\"]||toDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this2.handleDateChange(\"todate\",date);},value:this.state.selectedRecord[\"todate\"]||toDate}))),this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"njsonexceptioncode\",selectedId:this.props.Login.selectedId,data:this.state.data.JsonExceptionLogs,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,reloadData:this.reloadData,scrollable:\"scrollable\",gridHeight:\"600px\",isActionRequired:false,isToolBarRequired:true,pageable:true,isAddRequired:false,isDownloadPDFRequired:false}):\"\"))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData.JsonExceptionLogs,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,isOpen:false,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData.JsonExceptionLogs?this.props.Login.masterData.JsonExceptionLogs:[],dataState),//dataResult: process(this.props.Login.masterData, dataState),\ndataState:dataState});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return JsonExceptionLogs;}(React.Component);export default connect(mapStateToProps,{callService:callService,updateStore:updateStore,crudMaster:crudMaster})(injectIntl(JsonExceptionLogs));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/credentialmanagement/JsonExceptionLogs.jsx"],"names":["React","connect","injectIntl","Row","Col","process","toast","DataGrid","ListWrapper","PrimaryHeader","callService","updateStore","crudMaster","getControlMap","DEFAULT_RETURN","DateTimePicker","getStartOfDay","getEndOfDay","convertDateValuetoString","rearrangeDateFormat","mapStateToProps","state","Login","JsonExceptionLogs","props","dataStateChange","event","setState","dataResult","data","dataState","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","reloadData","fromDate","masterData","FromDate","toDate","ToDate","obj","userInfo","inputParam","inputData","classUrl","methodUrl","displayName","handleDateChange","dateName","dateValue","Date","dateObj","formRef","createRef","extractedColumnList","skip","take","settings","parseInt","masterStatus","error","isOpen","userRoleControlRights","controlMap","Map","primaryKeyField","undefined","intl","formatMessage","id","ssitedate","date","selectedId","previousProps","nformcode","Object","values","map","item","push","ncontrolcode","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { ListWrapper, PrimaryHeader } from '../../components/client-group.styles';\r\nimport { callService, updateStore, crudMaster } from '../../actions';\r\nimport { getControlMap } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport DateTimePicker from '../../../src/components/date-time-picker/date-time-picker.component';\r\nimport { getStartOfDay, getEndOfDay, convertDateValuetoString, rearrangeDateFormat } from '../../../src/components/CommonScript';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass JsonExceptionLogs extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            isOpen: false,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data.JsonExceptionLogs, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    reloadData = () => {\r\n        let fromDate = this.props.Login.masterData.FromDate;\r\n        let toDate = this.props.Login.masterData.ToDate;\r\n        let obj = convertDateValuetoString(fromDate,toDate, this.props.Login.userInfo, true);\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo,\r\n            fromDate:obj.fromDate, \r\n            toDate:obj.toDate, },\r\n\r\n            classUrl: \"jsonexceptionlogs\",\r\n            methodUrl: \"JsonExceptionLogs\",\r\n            displayName: \"IDS_JSONEXCEPTIONLOGS\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n       // this.setState({ selectedRecord });\r\n       // this.reloadData(selectedRecord, true);\r\n\r\n       let dateObj = {};\r\n       if (dateName === \"fromdate\") {\r\n            dateObj = convertDateValuetoString(dateValue, this.props.Login.masterData.toDate, this.props.Login.userInfo, true);\r\n       }\r\n       else{\r\n            dateObj = convertDateValuetoString(this.props.Login.masterData.toDate, dateValue, this.props.Login.userInfo, true);\r\n       }\r\n\r\n       const inputParam = {\r\n                                inputData: {\r\n                                    \"userinfo\": this.props.Login.userInfo,\r\n                                    fromDate:dateObj.fromDate, \r\n                                    toDate:dateObj.toDate,\r\n                                },\r\n                                classUrl: 'jsonexceptionlogs',\r\n                                methodUrl: \"JsonExceptionLogs\",\r\n                                userInfo: this.props.Login.userInfo,\r\n                                displayName: \"IDS_JSONEXCEPTIONLOGS\"\r\n                            };\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    render() {\r\n        let primaryKeyField = \"\";\r\n\r\n        let fromDate = \"\";\r\n        let toDate = \"\";\r\n\r\n        if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\r\n            fromDate = (this.state.selectedRecord[\"fromdate\"] && getStartOfDay(this.state.selectedRecord[\"fromdate\"])) || rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n            toDate = (this.state.selectedRecord[\"todate\"] && getEndOfDay(this.state.selectedRecord[\"todate\"])) || rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate);\r\n        }\r\n\r\n        if (this.props.Login.inputParam !== undefined) {\r\n\r\n            this.extractedColumnList = [\r\n                { \"idsName\": \"IDS_STACKTRACE\", \"dataField\": \"sstacktrace\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_MESSAGE\", \"dataField\": \"smessage\", \"width\": \"200px\"},\r\n                { \"idsName\": \"IDS_MODULENAME\", \"dataField\": \"smodulename\", \"width\": \"200px\"},\r\n                { \"idsName\": \"IDS_FORMNAME\", \"dataField\": \"sformname\", \"width\": \"200px\"},\r\n                { \"idsName\": \"IDS_USER\", \"dataField\": \"susername\", \"width\": \"200px\"},\r\n                { \"idsName\": \"IDS_USERROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\"},\r\n                { \"idsName\": \"IDS_EXCEPTIONDATE\", \"dataField\": \"sexceptiondate\", \"width\": \"200px\", \"componentName\": \"date\"},\r\n                { \"idsName\": \"IDS_SITENAME\", \"dataField\": \"ssitename\", \"width\": \"200px\"}\r\n            ]\r\n            primaryKeyField = \"njsonexceptioncode\";\r\n        }\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <PrimaryHeader className=\"d-flex justify-content-between mb-3\">\r\n                                {/* <HeaderName className=\"header-primary-md\">\r\n                                {this.props.Login.inputParam && this.props.Login.inputParam.displayName ?\r\n                                    <FormattedMessage id={this.props.Login.inputParam.displayName} /> : \"\"}\r\n                            </HeaderName> */}\r\n                                {/* <Button className=\"btn btn-user btn-primary-blue\"\r\n                                 hidden={this.props.Login.inputParam && this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                onClick={() => this.props.getMaterialTypeComboService(addParam)}>\r\n                                <FontAwesomeIcon icon={faPlus} /> {}\r\n                                <FormattedMessage id=\"IDS_ADD\" defaultMessage='Add' />\r\n                            </Button> */}\r\n                            </PrimaryHeader>\r\n\r\n                            <Row>\r\n                                <Col md={3}>\r\n                                    <DateTimePicker\r\n                                        name={\"fromdate\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"fromdate\"] || fromDate}\r\n                                        dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"fromdate\", date)}\r\n                                        value={this.state.selectedRecord[\"fromdate\"] || fromDate}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <DateTimePicker\r\n                                        name={\"todate\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"todate\"] || toDate}\r\n                                        dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"todate\", date)}\r\n                                        value={this.state.selectedRecord[\"todate\"] || toDate}\r\n\r\n                                    />\r\n                                </Col>\r\n                                {/* <Col></Col> */}\r\n                            </Row>\r\n\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={\"njsonexceptioncode\"}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    data={this.state.data.JsonExceptionLogs}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    controlMap={this.state.controlMap}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    reloadData={this.reloadData}\r\n                                    scrollable={\"scrollable\"}\r\n                                    gridHeight={\"600px\"}\r\n                                    isActionRequired={false}\r\n                                    isToolBarRequired={true}\r\n                                    pageable={true}\r\n                                    isAddRequired={false}\r\n                                    isDownloadPDFRequired={false}\r\n                                />\r\n                                : \"\"}\r\n\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData.JsonExceptionLogs, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    isOpen: false,\r\n                    selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData.JsonExceptionLogs ? this.props.Login.masterData.JsonExceptionLogs : [], dataState),\r\n                    //dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { callService, updateStore, crudMaster })(injectIntl(JsonExceptionLogs));"]},"metadata":{},"sourceType":"module"}