{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\calenderproperties\\\\CalenderProperties.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../../pages/audittrail/Esign';\nimport { callService, crudMaster, updateStore, validateEsignCredential, editCalenderProperties } from '../../actions';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { showEsign, getControlMap } from '../../components/CommonScript';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport AddCalenderProperties from './AddCalenderProperties';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass CalenderProperties extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.state.data, event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.openModal = ncontrolCode => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          selectedRecord: {},\n          operation: \"create\",\n          ncontrolCode,\n          selectedId: null,\n          openModal: true,\n          screenName: this.props.Login.inputParam.displayName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedId = this.props.Login.selectedId;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n        selectedId = null;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          //selectedId:null\n          selectedId\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[event.target.name] = event.target.value;\n\n      if (event.target.type === 'checkbox') {\n        // if (event.target.name === \"agree\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? '3' : '4'; // }\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (value, column) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord[column] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.reloadData = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: this.props.Login.inputParam.methodUrl,\n        userInfo: this.props.Login.userInfo,\n        displayName: this.props.Login.inputParam.displayName\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let dataState = undefined;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let selectedId = null;\n\n      if (this.props.Login.operation === \"update\") {\n        // edit\n        dataState = this.state.dataState;\n        inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = { ...this.state.selectedRecord\n        };\n        this.extractedColumnList.map(item => {\n          return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item.dataField] = this.state.selectedRecord[item.dataField] ? this.state.selectedRecord[item.dataField] : \"\";\n        });\n        inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"scalendersettingvalue\"] = this.state.selectedRecord[\"scalendersettingvalue\"] ? this.state.selectedRecord[\"scalendersettingvalue\"] : \"\";\n        selectedId = this.props.Login.selectedId;\n      } else {\n        //add                          \n        inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = {\n          \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n        };\n        this.extractedColumnList.map(item => {\n          return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item.dataField] = this.state.selectedRecord[item.dataField] ? this.state.selectedRecord[item.dataField] : \"\";\n        });\n      }\n\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: this.props.Login.inputParam.methodUrl,\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: inputData,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        selectedId,\n        dataState,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n\n      if (esignNeeded) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: this.props.Login.inputParam.displayName\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.formRef = React.createRef();\n    this.extractedColumnList = [//{ \"fieldLength\": \"NA\", \"dataField\": \"ncalendersettingcode\", \"mandatory\": false, \"controlType\": \"NA\" },\n    {\n      \"fieldLength\": \"100\",\n      \"mandatory\": true,\n      \"controlType\": \"textbox\",\n      \"idsName\": \"IDS_CALENDERSETTINGNAME\",\n      \"dataField\": \"scalendersettingname\",\n      \"width\": \"200px\",\n      \"mandatoryLabel\": \"IDS_ENTER\"\n    }, {\n      \"fieldLength\": \"100\",\n      \"mandatory\": true,\n      \"controlType\": \"textbox\",\n      \"idsName\": \"IDS_CALENDERSETTINGVALUE\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"400px\",\n      \"mandatoryLabel\": \"IDS_ENTER\"\n    }];\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      dataState: _dataState,\n      userRoleControlRights: [],\n      controlMap: new Map()\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    console.log(\"Calender Properties:\", this.props, this.state.data);\n    const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl)) && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\n    const editParam = {\n      screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({\n        id: this.props.Login.inputParam.displayName\n      }),\n      operation: \"update\",\n      primaryKeyField: \"ncalendersettingcode\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editId\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-list-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, this.state.data ? /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"ncalendersettingcode\",\n      data: this.state.data,\n      dataResult: this.state.dataResult,\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: this.extractedColumnList,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      fetchRecord: this.props.editCalenderProperties,\n      editParam: editParam,\n      reloadData: this.reloadData,\n      pageable: true,\n      scrollable: 'scrollable' // isComponent={true}\n      ,\n      gridHeight: '1000px',\n      isActionRequired: true,\n      isToolBarRequired: true,\n      selectedId: this.props.Login.selectedId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }) : \"\"))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: [],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(AddCalenderProperties, {\n        selectedRecord: this.state.selectedRecord || {},\n        userInfo: this.props.Login.userInfo,\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        masterData: this.props.Login.masterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData,\n          dataResult: process(this.props.Login.masterData || [], this.state.dataState)\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.props.Login.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.state.dataState.take\n          };\n        }\n\n        if (this.state.dataResult.data) {\n          if (this.state.dataResult.data.length === 1) {\n            let skipcount = this.state.dataState.skip > 0 ? this.state.dataState.skip - this.state.dataState.take : this.state.dataState.skip;\n            dataState = {\n              skip: skipcount,\n              take: this.state.dataState.take\n            };\n          }\n        }\n\n        this.setState({\n          data: this.props.Login.masterData,\n          selectedRecord: this.props.Login.selectedRecord,\n          dataResult: process(this.props.Login.masterData, dataState),\n          dataState\n        });\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  editCalenderProperties\n})(injectIntl(CalenderProperties));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/calenderproperties/CalenderProperties.jsx"],"names":["React","connect","injectIntl","Row","Col","toast","process","DataGrid","SlideOutModal","Esign","callService","crudMaster","updateStore","validateEsignCredential","editCalenderProperties","DEFAULT_RETURN","showEsign","getControlMap","ListWrapper","AddCalenderProperties","mapStateToProps","state","Login","CalenderProperties","Component","constructor","props","dataStateChange","event","setState","dataResult","data","dataState","openModal","ncontrolCode","updateInfo","typeName","selectedRecord","operation","selectedId","screenName","inputParam","displayName","closeModal","loadEsign","onInputOnChange","target","name","value","type","checked","onComboChange","column","reloadData","inputData","userInfo","classUrl","methodUrl","onSaveClick","saveType","formRef","undefined","toLowerCase","extractedColumnList","map","item","dataField","nmastersitecode","esignNeeded","userRoleControlRights","nformcode","screenData","masterData","intl","formatMessage","id","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","createRef","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","getDerivedStateFromProps","warn","render","console","log","editId","has","concat","get","ncontrolcode","editParam","primaryKeyField","componentDidUpdate","previousProps","Object","values","push","length","skipcount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport { callService, crudMaster, updateStore, validateEsignCredential, editCalenderProperties } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, getControlMap } from '../../components/CommonScript';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport AddCalenderProperties from './AddCalenderProperties'\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass CalenderProperties extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [\r\n            //{ \"fieldLength\": \"NA\", \"dataField\": \"ncalendersettingcode\", \"mandatory\": false, \"controlType\": \"NA\" },\r\n            { \"fieldLength\": \"100\", \"mandatory\": true, \"controlType\": \"textbox\", \"idsName\": \"IDS_CALENDERSETTINGNAME\", \"dataField\": \"scalendersettingname\", \"width\": \"200px\", \"mandatoryLabel\": \"IDS_ENTER\" },\r\n            { \"fieldLength\": \"100\", \"mandatory\": true, \"controlType\": \"textbox\", \"idsName\": \"IDS_CALENDERSETTINGVALUE\", \"dataField\": \"stransdisplaystatus\", \"width\": \"400px\", \"mandatoryLabel\": \"IDS_ENTER\" }\r\n        ];\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [],\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n        };\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    openModal = (ncontrolCode) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: {}, operation: \"create\", ncontrolCode, selectedId: null,\r\n                openModal: true, screenName: this.props.Login.inputParam.displayName\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    // oncomboChange = (value, column) => {\r\n    //     const selectedRecord = this.state.selectedRecord;\r\n    //     selectedRecord[column] = value\r\n    //     this.setState({ selectedRecord })\r\n    // }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            selectedId = null;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, //selectedId:null\r\n                selectedId\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"Calender Properties:\", this.props, this.state.data);\r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))\r\n            && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName\r\n                && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation: \"update\", primaryKeyField: \"ncalendersettingcode\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        };\r\n\r\n\r\n        return (<>\r\n            <Row>\r\n                <Col>\r\n                    <ListWrapper className=\"client-list-content\">\r\n                        {this.state.data ?\r\n                            <DataGrid\r\n                                primaryKeyField={\"ncalendersettingcode\"}\r\n                                data={this.state.data}\r\n                                dataResult={this.state.dataResult}\r\n                                dataState={this.state.dataState}\r\n                                dataStateChange={this.dataStateChange}\r\n                                extractedColumnList={this.extractedColumnList}\r\n                                controlMap={this.state.controlMap}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                fetchRecord={this.props.editCalenderProperties}\r\n                                editParam={editParam}\r\n                                reloadData={this.reloadData}\r\n                                pageable={true}\r\n                                scrollable={'scrollable'}\r\n                                // isComponent={true}\r\n                                gridHeight={'1000px'}\r\n                                isActionRequired={true}\r\n                                isToolBarRequired={true}\r\n                                selectedId={this.props.Login.selectedId}\r\n                            />\r\n                            : \"\"}\r\n                    </ListWrapper>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n            {this.props.Login.openModal ?\r\n                <SlideOutModal show={this.props.Login.openModal}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName}\r\n                    onSaveClick={this.onSaveClick}\r\n                    esign={this.props.Login.loadEsign}\r\n                    validateEsign={this.validateEsign}\r\n                    masterStatus={this.props.Login.masterStatus}\r\n                    updateStore={this.props.updateStore}\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    mandatoryFields={[]}\r\n                    addComponent={this.props.Login.loadEsign ?\r\n                        <Esign operation={this.props.Login.operation}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        />\r\n                        : <AddCalenderProperties\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            userInfo={this.props.Login.userInfo}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            onComboChange={this.onComboChange}\r\n                            masterData={this.props.Login.masterData}\r\n\r\n                        />}\r\n                /> : \"\"}\r\n        </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData||[], this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.state.dataState.take }\r\n                }\r\n                if (this.state.dataResult.data) {\r\n                    if (this.state.dataResult.data.length === 1) {\r\n                        let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n                            this.state.dataState.skip\r\n                        dataState = { skip: skipcount, take: this.state.dataState.take }\r\n                    }\r\n                }\r\n                this.setState({\r\n                    data: this.props.Login.masterData, selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[event.target.name] = event.target.value;\r\n        if (event.target.type === 'checkbox') {\r\n            // if (event.target.name === \"agree\") {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? '3' : '4';\r\n            // }\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (value, column) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord[column] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: this.props.Login.inputParam.displayName\r\n        };\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let dataState = undefined;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let selectedId = null;\r\n        if (this.props.Login.operation === \"update\") {    // edit\r\n            dataState = this.state.dataState\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = { ...this.state.selectedRecord };\r\n            this.extractedColumnList.map(item => {\r\n                return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item.dataField] = this.state.selectedRecord[item.dataField] ? this.state.selectedRecord[item.dataField] : \"\";\r\n            })\r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][\"scalendersettingvalue\"] = this.state.selectedRecord[\"scalendersettingvalue\"] ? this.state.selectedRecord[\"scalendersettingvalue\"] : \"\";\r\n            selectedId = this.props.Login.selectedId;\r\n        }\r\n        else {\r\n            //add                          \r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n            this.extractedColumnList.map(item => {\r\n                return inputData[this.props.Login.inputParam.methodUrl.toLowerCase()][item.dataField] = this.state.selectedRecord[item.dataField] ? this.state.selectedRecord[item.dataField] : \"\"\r\n            })\r\n        }\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData, operation: this.props.Login.operation,\r\n            saveType, formRef, selectedId, dataState,\r\n            selectedRecord: { ...this.state.selectedRecord }\r\n\r\n        }\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    editCalenderProperties\r\n})(injectIntl(CalenderProperties));\r\n"]},"metadata":{},"sourceType":"module"}