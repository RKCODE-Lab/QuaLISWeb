{"ast":null,"code":"import _defineProperty from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import React from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';var AddInstrumentCalibration=function AddInstrumentCalibration(props){var _React$createElement,_React$createElement2,_React$createElement3;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_INSTRUMENTID\"}),name:\"ninstrumentcode\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},value:props.instrumentid,isDisabled:true,required:true,maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,(_React$createElement={name:\"dlastcalibrationdate\",label:props.intl.formatMessage({id:\"IDS_LASTCALIBRATIONDATE\"}),className:\"form-control\",selected:props.selectedRecord[\"dlastcalibrationdate\"]?props.selectedRecord[\"dlastcalibrationdate\"]:new Date(),dateFormat:props.userInfo.ssitedate,isClearable:false,isMandatory:false,required:true},_defineProperty(_React$createElement,\"isMandatory\",true),_defineProperty(_React$createElement,\"maxTime\",props.currentTime),_defineProperty(_React$createElement,\"onChange\",function onChange(date){return props.handleDateChange(\"dlastcalibrationdate\",date);}),_defineProperty(_React$createElement,\"value\",props.selectedRecord[\"dlastcalibrationdate\"]),_React$createElement))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntzlastcalibrationdate\",formLabel:props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.TimeZoneList// optionId=\"ntimezonecode\"\n// optionValue=\"stimezoneid\"\n,value:props.selectedRecord[\"ntzlastcalibrationdate\"],defaultValue:props.selectedRecord[\"ntzlastcalibrationdate\"],isMandatory:false,isMulti:false,isSearchable:true// isClearable={false}                               \n,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntzlastcalibrationdate',1);}})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,(_React$createElement2={name:\"dduedate\",label:props.intl.formatMessage({id:\"IDS_DUEDATE\"}),className:\"form-control\",selected:props.selectedRecord[\"dduedate\"]?props.selectedRecord[\"dduedate\"]:new Date(),dateFormat:props.userInfo.ssitedate,isClearable:false,isMandatory:false,required:true},_defineProperty(_React$createElement2,\"isMandatory\",true),_defineProperty(_React$createElement2,\"maxTime\",props.currentTime),_defineProperty(_React$createElement2,\"onChange\",function onChange(date){return props.handleDateChange(\"dduedate\",date);}),_defineProperty(_React$createElement2,\"value\",props.selectedRecord[\"dduedate\"]),_React$createElement2))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntzduedate\",formLabel:props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.TimeZoneList// optionId=\"ntimezonecode\"\n// optionValue=\"stimezoneid\"\n,value:props.selectedRecord[\"ntzduedate\"],defaultValue:props.selectedRecord[\"ntzduedate\"],isMandatory:false,isMulti:false,isSearchable:true// isClearable={false}                               \n,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntzduedate',1);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,(_React$createElement3={name:\"ntranscode\",formLabel:props.intl.formatMessage({id:\"IDS_STATUS\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.CalibrationStatus,value:props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\",defaultValue:props.selectedRecord[\"ntranscode\"],isMandatory:false,isMulti:false,isSearchable:true},_defineProperty(_React$createElement3,\"isMandatory\",true),_defineProperty(_React$createElement3,\"isDisabled\",false),_defineProperty(_React$createElement3,\"closeMenuOnSelect\",true),_defineProperty(_React$createElement3,\"alphabeticalSort\",true),_defineProperty(_React$createElement3,\"onChange\",function onChange(event){return props.onComboChange(event,'ntranscode',1);}),_React$createElement3))));};export default injectIntl(AddInstrumentCalibration);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/AddInstrumentCalibration.jsx"],"names":["React","FormSelectSearch","injectIntl","Row","Col","FormInput","DateTimePicker","AddInstrumentCalibration","props","intl","formatMessage","id","event","onInputOnChange","instrumentid","selectedRecord","Date","userInfo","ssitedate","currentTime","date","handleDateChange","TimeZoneList","onComboChange","CalibrationStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\n\r\n\r\n\r\nconst AddInstrumentCalibration = (props) => {\r\n    return (\r\n        <Row>\r\n\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                name={\"ninstrumentcode\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                value={props.instrumentid}                   \r\n                isDisabled={true}\r\n                required={true}\r\n                maxLength={\"100\"}\r\n            />\r\n        </Col>\r\n        <Col md={6}>\r\n        <DateTimePicker\r\n                             name={\"dlastcalibrationdate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_LASTCALIBRATIONDATE\"})}                     \r\n                             className='form-control'\r\n                             selected={props.selectedRecord[\"dlastcalibrationdate\"]?props.selectedRecord[\"dlastcalibrationdate\"]:new Date()}\r\n                             dateFormat  ={props.userInfo.ssitedate}\r\n                             isClearable={false}\r\n                             isMandatory={false}                       \r\n                             required={true}\r\n                             isMandatory={true}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dlastcalibrationdate\", date)}\r\n                             value={props.selectedRecord[\"dlastcalibrationdate\"]}\r\n\r\n                            />\r\n        </Col>\r\n        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                   name={\"ntzlastcalibrationdate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                  // optionId=\"ntimezonecode\"\r\n                                  // optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzlastcalibrationdate\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzlastcalibrationdate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzlastcalibrationdate',1)}                               \r\n                              />                    \r\n\r\n        </Col>\r\n        <Col md={6}>\r\n        <DateTimePicker\r\n                             name={\"dduedate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_DUEDATE\"})}                     \r\n                             className='form-control'\r\n                             selected={props.selectedRecord[\"dduedate\"]?props.selectedRecord[\"dduedate\"]:new Date()}\r\n                             dateFormat  ={props.userInfo.ssitedate}\r\n                             isClearable={false}\r\n                             isMandatory={false}                       \r\n                             required={true}\r\n                             isMandatory={true}\r\n                             maxTime={props.currentTime}\r\n                             onChange={date => props.handleDateChange(\"dduedate\", date)}\r\n                             value={props.selectedRecord[\"dduedate\"]}\r\n\r\n                            />\r\n        </Col>\r\n        <Col md={6}>\r\n                            <FormSelectSearch\r\n                                   name={\"ntzduedate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                  // optionId=\"ntimezonecode\"\r\n                                  // optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzduedate\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzduedate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzduedate',1)}                               \r\n                              />                    \r\n\r\n        </Col>\r\n        \r\n                <Col md={12}>\r\n                          <FormSelectSearch\r\n                               name={\"ntranscode\"}\r\n                               formLabel={ props.intl.formatMessage({ id:\"IDS_STATUS\"})}                                \r\n                               placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                               options={ props.CalibrationStatus}\r\n                         \r\n                               value = { props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\" }\r\n                               defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                               isMandatory={false}\r\n                               isMulti={false}\r\n                               isSearchable={true}\r\n                               isMandatory={true}\r\n                               isDisabled={false}\r\n                               closeMenuOnSelect={true}\r\n                               alphabeticalSort={true}\r\n                               onChange = {(event)=> props.onComboChange(event, 'ntranscode',1)}                               \r\n                          />\r\n            </Col>\r\n\r\n    </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddInstrumentCalibration);"]},"metadata":{},"sourceType":"module"}