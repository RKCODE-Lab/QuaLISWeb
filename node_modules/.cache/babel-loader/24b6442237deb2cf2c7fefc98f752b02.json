{"ast":null,"code":"import { initRequest } from \"./LoginAction\";\nimport rsapi from \"../rsapi\";\nimport { sortData, getComboLabelValue } from \"../components/CommonScript\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nimport { toast } from 'react-toastify';\nimport Axios from \"axios\";\nimport { constructOptionList } from \"../components/CommonScript\";\nimport { intl } from '../components/App';\nimport { transactionStatus } from \"../components/Enumeration\";\nexport function getSubmitterDetail(submitter, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"submitter/getSelectedSubmitterDetail\", {\n      ssubmittercode: submitter.ssubmittercode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          operation: null,\n          modalName: undefined,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getSubmitterCombo(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\n  return function (dispatch) {\n    if (masterData.selectedInstitutionCategory !== null) {\n      if (masterData.selectedInstitution !== null) {\n        if (masterData.selectedInstitutionSite !== null) {\n          let urlArray = [];\n          const InstitutionDepartment = rsapi.post(\"/submitter/getInstitutionDepartment\", {\n            \"userinfo\": userInfo\n          });\n\n          if (operation === \"create\") {\n            urlArray = [InstitutionDepartment];\n          } else {\n            const Submitter = rsapi.post(\"/submitter/getActiveSubmitterById\", {\n              [primaryKeyName]: masterData.selectedSubmitter[primaryKeyName],\n              \"userinfo\": userInfo\n            });\n            urlArray = [InstitutionDepartment, Submitter];\n          }\n\n          dispatch(initRequest(true));\n          Axios.all(urlArray).then(response => {\n            let selectedRecord = {};\n            const institutionDepartmentMap = constructOptionList(response[0].data.InstitutionDepartment || [], \"ninstitutiondeptcode\", \"sinstitutiondeptname\", undefined, undefined, false);\n            const InstitutionDepartment = institutionDepartmentMap.get(\"OptionList\");\n            selectedRecord[\"ntransactionstatus\"] = transactionStatus.ACTIVE;\n\n            if (operation === \"update\") {\n              selectedRecord = response[1].data;\n              selectedRecord[\"ninstitutiondeptcode\"] = getComboLabelValue(selectedRecord, response[0].data.InstitutionDepartment, \"ninstitutiondeptcode\", \"sinstitutiondeptname\");\n            }\n\n            dispatch({\n              type: DEFAULT_RETURN,\n              payload: {\n                InstitutionDepartment,\n                isOpen: true,\n                masterData: masterData,\n                selectedRecord,\n                operation: operation,\n                screenName: screenName,\n                openModal: true,\n                ncontrolCode: ncontrolCode,\n                loading: false\n              }\n            });\n          }).catch(error => {\n            dispatch({\n              type: DEFAULT_RETURN,\n              payload: {\n                loading: false\n              }\n            });\n\n            if (error.response.status === 500) {\n              toast.error(intl.formatMessage({\n                id: error.message\n              }));\n            } else {\n              toast.warn(intl.formatMessage({\n                id: error.response.data\n              }));\n            }\n          });\n        } else {\n          toast.warn(intl.formatMessage({\n            id: \"IDS_CONFIGINSTITUTIONSITE\"\n          }));\n        }\n      } else {\n        toast.warn(intl.formatMessage({\n          id: \"IDS_CONFIGINSTITUTION\"\n        }));\n      }\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_CONFIGINSTITUTIONCATEGORY\"\n      }));\n    }\n  };\n}\nexport function getInstitution(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"submitter/getInstitutionByCategory\", inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData: { ...inputData.masterData,\n            ...responseData,\n            defaultInstitutionCategory: inputData.defaultInstitutionCategory\n          },\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getInstitutionSite(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"submitter/getInstitutionSiteByInstitution\", inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData: { ...inputData.masterData,\n            ...responseData,\n            defaultInstitution: inputData.defaultInstitution\n          },\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport const changeInstitutionCategoryFilterSubmit = (inputParam, FilterInstitutionCategory, defaultInstitutionCategory, FilterInstitution, defaultInstitution, FilterInstitutionSite, defaultInstitutionSite) => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    rsapi.post(\"/submitter/get\" + inputParam.methodUrl, inputParam.inputData).then(response => {\n      const masterData = response.data;\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData: { ...masterData,\n            FilterInstitutionCategory,\n            defaultInstitutionCategory,\n            selectedInstitutionCategory: defaultInstitutionCategory,\n            FilterInstitution,\n            defaultInstitution,\n            selectedInstitution: defaultInstitution,\n            FilterInstitutionSite,\n            defaultInstitutionSite,\n            selectedInstitutionSite: defaultInstitutionSite\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error.message);\n    });\n  };\n};\nexport function updateSubmitter(inputParam, masterDataInput) {\n  return dispatch => {\n    dispatch(initRequest(true));\n    rsapi.post(\"/submitter/update\" + inputParam.methodUrl, { ...inputParam.inputData\n    }).then(response => {\n      masterDataInput && masterDataInput[\"Submitter\"].map((oldmasterData, index) => {\n        if (oldmasterData.ssubmitterid === response.data.selectedSubmitter.ssubmitterid) {\n          masterDataInput[\"Submitter\"].splice(index, 1, response.data.selectedSubmitter);\n        }\n      });\n      const masterData = { ...masterDataInput,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData: { ...masterData\n          },\n          selectedRecord: undefined,\n          openModal: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 417) {\n        toast.warn(error.response.data);\n      } else {\n        toast.error(error.message);\n      }\n    });\n  };\n}\nexport const getInstitutionCategory = (instItem, url, key, screenName, userInfo, ncontrolCode, selectedRecord, masterData) => {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    let url = '';\n    const FilterInstitution = [];\n    const FilterInstitutionSite = [];\n    url = \"/submitter/getSubmitterInstitutionCategoryCombo\";\n    return rsapi.post(url, {\n      \"userinfo\": userInfo,\n      \"ssubmittercode\": instItem.ssubmittercode\n    }).then(response => {\n      const institutionCategoryMap = constructOptionList(response.data.FilterInstitutionCategory || [], \"ninstitutioncatcode\", \"sinstitutioncatname\", undefined, undefined, false);\n      const institutionCategory = institutionCategoryMap.get(\"OptionList\");\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          institutionCategory,\n          FilterInstitution,\n          FilterInstitutionSite: [],\n          //Users,\n          isOpen: true,\n          selectedRecord,\n          operation: \"create\",\n          screenName: screenName,\n          // openModal: true,\n          openModal: true,\n          ncontrolCode: ncontrolCode,\n          instItem: instItem,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 417) {\n        toast.info(error.response.data);\n      } else {\n        toast.error(error.message);\n      }\n    });\n  };\n};\nexport function getSubmitterInstitution(ninstitutioncatcode, userInfo, selectedRecord, screenName) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"submitter/getSubmitterInstitutionCombo\", {\n      \"ninstitutioncatcode\": ninstitutioncatcode,\n      userinfo: userInfo,\n      nflag: 0\n    }).then(response => {\n      const FilterInstitutionMap = constructOptionList(response.data.FilterInstitution || [], \"ninstitutioncode\", \"sinstitutionname\", undefined, undefined, false);\n      const FilterInstitution = FilterInstitutionMap.get(\"OptionList\");\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          selectedSupplierCategory: undefined,\n          selectedInstitutionSite: undefined,\n          FilterInstitution,\n          FilterInstitutionSite: undefined,\n          selectedRecord,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getSubmitterSite(ninstitutioncode, selectedSubmitter, userInfo, selectedRecord, screenName) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"submitter/getSubmitterInstitutionSiteCombo\", {\n      \"ninstitutioncode\": ninstitutioncode,\n      ssubmittercode: selectedSubmitter.ssubmittercode,\n      userinfo: userInfo,\n      nflag: 0\n    }).then(response => {\n      const FilterInstitutionSiteMap = constructOptionList(response.data.FilterInstitutionSite || [], \"ninstitutionsitecode\", \"sinstitutionsitename\", undefined, undefined, false);\n      const FilterInstitutionSite = FilterInstitutionSiteMap.get(\"OptionList\");\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          FilterInstitutionSite,\n          selectedRecord,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/actions/SubmitterAction.js"],"names":["initRequest","rsapi","sortData","getComboLabelValue","DEFAULT_RETURN","toast","Axios","constructOptionList","intl","transactionStatus","getSubmitterDetail","submitter","userInfo","masterData","dispatch","post","ssubmittercode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","getSubmitterCombo","screenName","primaryKeyName","ncontrolCode","selectedInstitutionCategory","selectedInstitution","selectedInstitutionSite","urlArray","InstitutionDepartment","Submitter","selectedSubmitter","all","selectedRecord","institutionDepartmentMap","get","ACTIVE","isOpen","openModal","formatMessage","id","getInstitution","inputData","responseData","defaultInstitutionCategory","getInstitutionSite","defaultInstitution","changeInstitutionCategoryFilterSubmit","inputParam","FilterInstitutionCategory","FilterInstitution","FilterInstitutionSite","defaultInstitutionSite","methodUrl","updateSubmitter","masterDataInput","map","oldmasterData","index","ssubmitterid","splice","getInstitutionCategory","instItem","url","key","institutionCategoryMap","institutionCategory","info","getSubmitterInstitution","ninstitutioncatcode","nflag","FilterInstitutionMap","selectedSupplierCategory","getSubmitterSite","ninstitutioncode","FilterInstitutionSiteMap"],"mappings":"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","sourcesContent":["import { initRequest } from \"./LoginAction\";\r\nimport rsapi from \"../rsapi\";\r\nimport { sortData,getComboLabelValue } from \"../components/CommonScript\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport { toast } from 'react-toastify';\r\nimport Axios from \"axios\";\r\nimport { constructOptionList } from \"../components/CommonScript\";\r\nimport { intl} from '../components/App';\r\nimport { transactionStatus } from \"../components/Enumeration\";\r\n\r\nexport function getSubmitterDetail (submitter, userInfo, masterData) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"submitter/getSelectedSubmitterDetail\", {ssubmittercode:submitter.ssubmittercode, userinfo:userInfo})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}}  \r\n\r\nexport function getSubmitterCombo(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if(masterData.selectedInstitutionCategory!==null){\r\n            if(masterData.selectedInstitution!==null){\r\n                if(masterData.selectedInstitutionSite!==null){\r\n                    let urlArray = [];\r\n                    const InstitutionDepartment = rsapi.post(\"/submitter/getInstitutionDepartment\", {\"userinfo\": userInfo});\r\n                    if (operation === \"create\") {\r\n                        urlArray = [InstitutionDepartment];\r\n\r\n                    } else {\r\n                        const Submitter = rsapi.post(\"/submitter/getActiveSubmitterById\", {\r\n                                          [primaryKeyName]: masterData.selectedSubmitter[primaryKeyName],\r\n                                          \"userinfo\": userInfo\r\n                        });\r\n                        urlArray = [InstitutionDepartment,Submitter];\r\n                    }\r\n                    dispatch(initRequest(true));\r\n                    Axios.all(urlArray)\r\n                    .then(response => {\r\n                        let selectedRecord ={};\r\n                        const institutionDepartmentMap = constructOptionList(response[0].data.InstitutionDepartment || [], \"ninstitutiondeptcode\",\r\n                             \"sinstitutiondeptname\", undefined, undefined, false);        \r\n\r\n                        const InstitutionDepartment = institutionDepartmentMap.get(\"OptionList\");              \r\n                        selectedRecord[\"ntransactionstatus\"]  = transactionStatus.ACTIVE;\r\n\r\n                 \r\n                        if (operation === \"update\") {\r\n                            selectedRecord = response[1].data;\r\n                            selectedRecord[\"ninstitutiondeptcode\"] = getComboLabelValue(selectedRecord, response[0].data.InstitutionDepartment, \r\n                                \"ninstitutiondeptcode\", \"sinstitutiondeptname\");      \r\n                        }\r\n\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                InstitutionDepartment,                       \r\n                                isOpen: true,\r\n                                masterData:masterData,\r\n                                selectedRecord,\r\n                                operation: operation,\r\n                                screenName: screenName,\r\n                                openModal: true,\r\n                                ncontrolCode: ncontrolCode,\r\n                                loading: false,\r\n                       \r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(intl.formatMessage({ id: error.message  }));\r\n                        } else {\r\n                        toast.warn(intl.formatMessage({id: error.response.data }));\r\n                        }\r\n                    })\r\n\r\n                }else{\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_CONFIGINSTITUTIONSITE\" }));\r\n                }\r\n            }else{\r\n                toast.warn(intl.formatMessage({ id: \"IDS_CONFIGINSTITUTION\" }));\r\n            }\r\n        }else{\r\n            toast.warn(intl.formatMessage({ id: \"IDS_CONFIGINSTITUTIONCATEGORY\" }));\r\n        }\r\n    }\r\n\r\n}\r\nexport function getInstitution(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"submitter/getInstitutionByCategory\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            defaultInstitutionCategory: inputData.defaultInstitutionCategory,\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getInstitutionSite(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"submitter/getInstitutionSiteByInstitution\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            defaultInstitution: inputData.defaultInstitution,\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const changeInstitutionCategoryFilterSubmit = (inputParam,FilterInstitutionCategory,defaultInstitutionCategory,FilterInstitution,defaultInstitution,FilterInstitutionSite,defaultInstitutionSite) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/submitter/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            FilterInstitutionCategory,\r\n                            defaultInstitutionCategory,\r\n                            selectedInstitutionCategory:defaultInstitutionCategory,\r\n                            FilterInstitution,\r\n                            defaultInstitution,\r\n                            selectedInstitution:defaultInstitution,\r\n                            FilterInstitutionSite,\r\n                            defaultInstitutionSite,\r\n                            selectedInstitutionSite:defaultInstitutionSite\r\n\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function updateSubmitter (inputParam,masterDataInput){\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/submitter/update\" + inputParam.methodUrl, {...inputParam.inputData})\r\n        .then(response => {\r\n\r\n            \r\n            masterDataInput && masterDataInput[\"Submitter\"].map((oldmasterData,index)=>{\r\n              if(oldmasterData.ssubmitterid === response.data.selectedSubmitter.ssubmitterid){\r\n                masterDataInput[\"Submitter\"].splice(index, 1, response.data.selectedSubmitter)\r\n              }\r\n            })\r\n\r\n            const masterData = {...masterDataInput,...response.data}\r\n            sortData(masterData);\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    loading: false,\r\n                    masterData: {\r\n                        ...masterData,\r\n                    },selectedRecord:undefined,\r\n                    openModal:false\r\n                }\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    loading: false\r\n                }\r\n            });\r\n            if (error.response.status === 417) {\r\n                toast.warn(error.response.data)\r\n            } else {\r\n                toast.error(error.message)\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getInstitutionCategory = (instItem, url, key, screenName, userInfo, ncontrolCode, selectedRecord,masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let url = ''\r\n        const  FilterInstitution=[];\r\n        const FilterInstitutionSite=[];\r\n        url = \"/submitter/getSubmitterInstitutionCategoryCombo\";\r\n\r\n        return rsapi.post(url, {\r\n                \"userinfo\": userInfo,\r\n                \"ssubmittercode\":instItem.ssubmittercode\r\n            })\r\n            .then(response => {\r\n\r\n            const institutionCategoryMap = constructOptionList(response.data.FilterInstitutionCategory || [], \"ninstitutioncatcode\",\r\n                    \"sinstitutioncatname\", undefined, undefined, false);\r\n           \r\n                const institutionCategory= institutionCategoryMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n\r\n                        \r\n                        institutionCategory,\r\n                        FilterInstitution,\r\n                        FilterInstitutionSite:[],\r\n                        //Users,\r\n                        isOpen: true,\r\n                        selectedRecord,\r\n                        operation: \"create\",\r\n                        screenName: screenName,\r\n                        // openModal: true,\r\n                        openModal: true,\r\n                        ncontrolCode: ncontrolCode,\r\n                        instItem: instItem,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 417) {\r\n                    toast.info(error.response.data)\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport function getSubmitterInstitution(ninstitutioncatcode,userInfo, selectedRecord, screenName) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"submitter/getSubmitterInstitutionCombo\", {\r\n                \"ninstitutioncatcode\": ninstitutioncatcode,userinfo: userInfo,nflag:0})\r\n            .then(response => {\r\n         \r\n\r\n                const FilterInstitutionMap = constructOptionList(response.data.FilterInstitution || [], \"ninstitutioncode\",\r\n                \"sinstitutionname\", undefined, undefined, false);\r\n       \r\n            const FilterInstitution= FilterInstitutionMap.get(\"OptionList\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedSupplierCategory:undefined,selectedInstitutionSite:undefined,\r\n                        FilterInstitution,\r\n                        FilterInstitutionSite:undefined,\r\n                        selectedRecord,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n            \r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getSubmitterSite(ninstitutioncode,selectedSubmitter,userInfo, selectedRecord, screenName) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"submitter/getSubmitterInstitutionSiteCombo\", {\r\n                \"ninstitutioncode\": ninstitutioncode,ssubmittercode:selectedSubmitter.ssubmittercode,userinfo: userInfo,nflag:0})\r\n            .then(response => {\r\n         \r\n\r\n                const FilterInstitutionSiteMap = constructOptionList(response.data.FilterInstitutionSite || [], \"ninstitutionsitecode\",\r\n                \"sinstitutionsitename\", undefined, undefined, false);\r\n       \r\n            const FilterInstitutionSite= FilterInstitutionSiteMap.get(\"OptionList\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        FilterInstitutionSite,\r\n                        selectedRecord,\r\n                        loading: false\r\n\r\n                    }\r\n                });\r\n\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n            \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}