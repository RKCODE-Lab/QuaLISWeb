{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\AddInstrumentMaintenance.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst AddInstrumentMaintenance = props => {\n  console.log(\"123\", props);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_INSTRUMENTID\"\n    }),\n    name: \"ninstrumentcode\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    value: props.instrumentid,\n    isDisabled: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dlastmaintenancedate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LASTMAINTENANCEDATE\"\n    }),\n    className: \"form-control\",\n    selected: props.selectedRecord[\"dlastmaintenancedate\"] ? props.selectedRecord[\"dlastmaintenancedate\"] : new Date(),\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: false,\n    required: true,\n    isMandatory: true,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dlastmaintenancedate\", date),\n    value: props.selectedRecord[\"dlastmaintenancedate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzlastmaintenancedate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList // optionId=\"ntimezonecode\"\n    // optionValue=\"stimezoneid\"\n    ,\n    value: props.selectedRecord[\"ntzlastmaintenancedate\"],\n    defaultValue: props.selectedRecord[\"ntzlastmaintenancedate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzlastmaintenancedate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dduedate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DUEDATE\"\n    }),\n    className: \"form-control\",\n    selected: props.selectedRecord[\"dduedate\"] ? props.selectedRecord[\"dduedate\"] : new Date(),\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: false,\n    required: true,\n    isMandatory: true,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dduedate\", date),\n    value: props.selectedRecord[\"dduedate\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzduedate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList,\n    value: props.selectedRecord[\"ntzduedate\"],\n    defaultValue: props.selectedRecord[\"ntzduedate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzduedate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntranscode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_STATUS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.MaintenanceStatus,\n    value: props.selectedRecord[\"ntranscode\"] ? props.selectedRecord[\"ntranscode\"] : \"\",\n    defaultValue: props.selectedRecord[\"ntranscode\"],\n    isMulti: false,\n    isSearchable: true,\n    isMandatory: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntranscode', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddInstrumentMaintenance);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/instrumentmanagement/AddInstrumentMaintenance.jsx"],"names":["React","FormSelectSearch","injectIntl","Row","Col","FormInput","DateTimePicker","transactionStatus","AddInstrumentMaintenance","props","console","log","intl","formatMessage","id","event","onInputOnChange","instrumentid","userInfo","istimezoneshow","YES","selectedRecord","Date","ssitedate","currentTime","date","handleDateChange","TimeZoneList","onComboChange","MaintenanceStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\n\r\n\r\n\r\n\r\nconst AddInstrumentMaintenance = (props) => {\r\n    console.log(\"123\", props)\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTID\" })}\r\n                    name={\"ninstrumentcode\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    value={props.instrumentid}\r\n                    isDisabled={true}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n            <Col md={props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12}>\r\n                <DateTimePicker\r\n                    name={\"dlastmaintenancedate\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_LASTMAINTENANCEDATE\" })}\r\n                    className='form-control'\r\n                    selected={props.selectedRecord[\"dlastmaintenancedate\"] ? props.selectedRecord[\"dlastmaintenancedate\"] : new Date()}\r\n                    dateFormat={props.userInfo.ssitedate}\r\n                    isClearable={false}\r\n                    required={true}\r\n                    isMandatory={true}\r\n                    maxTime={props.currentTime}\r\n                    onChange={date => props.handleDateChange(\"dlastmaintenancedate\", date)}\r\n                    value={props.selectedRecord[\"dlastmaintenancedate\"]}\r\n\r\n                />\r\n            </Col>\r\n            {props.userInfo.istimezoneshow === transactionStatus.YES &&\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntzlastmaintenancedate\"}\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.TimeZoneList}\r\n                        // optionId=\"ntimezonecode\"\r\n                        // optionValue=\"stimezoneid\"\r\n                        value={props.selectedRecord[\"ntzlastmaintenancedate\"]}\r\n                        defaultValue={props.selectedRecord[\"ntzlastmaintenancedate\"]}\r\n                        isMandatory={false}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        // isClearable={false}                               \r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntzlastmaintenancedate', 1)}\r\n                    />\r\n\r\n                </Col>\r\n            }\r\n            <Col md={props.userInfo.istimezoneshow  === transactionStatus.YES ? 6 : 12}>\r\n                <DateTimePicker\r\n                    name={\"dduedate\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DUEDATE\" })}\r\n                    className='form-control'\r\n                    selected={props.selectedRecord[\"dduedate\"] ? props.selectedRecord[\"dduedate\"] : new Date()}\r\n                    dateFormat={props.userInfo.ssitedate}\r\n                    isClearable={false}\r\n                    required={true}\r\n                    isMandatory={true}\r\n                    maxTime={props.currentTime}\r\n                    onChange={date => props.handleDateChange(\"dduedate\", date)}\r\n                    value={props.selectedRecord[\"dduedate\"]}\r\n\r\n                />\r\n            </Col>\r\n            {props.userInfo.istimezoneshow === transactionStatus.YES &&\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntzduedate\"}\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.TimeZoneList}\r\n                        value={props.selectedRecord[\"ntzduedate\"]}\r\n                        defaultValue={props.selectedRecord[\"ntzduedate\"]}\r\n                        isMandatory={false}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntzduedate', 1)}\r\n                    />\r\n\r\n                </Col>\r\n            }\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"ntranscode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.MaintenanceStatus}\r\n                    value={props.selectedRecord[\"ntranscode\"] ? props.selectedRecord[\"ntranscode\"] : \"\"}\r\n                    defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isMandatory={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    onChange={(event) => props.onComboChange(event, 'ntranscode', 1)}\r\n                />\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddInstrumentMaintenance);"]},"metadata":{},"sourceType":"module"}