{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\project\\\\ProjectMaster.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faPencilAlt, faThumbsUp, faUserTimes, faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons';\nimport { ReactComponent as ReportEdit } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/report-edit.svg\";\nimport { injectIntl } from \"react-intl\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, changeProjectTypeFilter, filterColumnData, viewAttachment, addProjectMaster, ReportInfo, getProjectMaster, getProjectmasterAddMemberService, addProjectMasterFile, getuserComboServices } from \"../../actions\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { transactionStatus } from \"../../components/Enumeration\";\nimport AddProjectMaster from \"../../pages/project/AddProjectMaster\";\nimport ReportInfoProject from \"../../pages/project/ReportInfoProject\";\nimport ProjectMasterTab from \"../../pages/project/ProjectMasterTab\";\nimport ProjectMasterClosure from \"../../pages/project/ProjectMasterClosure\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport Esign from \"../audittrail/Esign\";\nimport { showEsign, getControlMap, constructOptionList, formatInputDate, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, rearrangeDateFormatDateOnly, Lims_JSON_stringify, replaceBackSlash } from \"../../components/CommonScript\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport { process } from \"@progress/kendo-data-query\";\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\nimport { Affix } from \"rsuite\";\nimport ProjectMasterFilter from './ProjectMasterFilter';\nimport { ReactComponent as Closure } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/cancel-close-svgrepo-com.svg\";\nimport { intl } from \"../../components/App\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass ProjectMaster extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleProjectMasterClosure = selectedProjectMaster => {\n      const closureId = this.state.controlMap.has(\"ClosureProjectMaster\") && this.state.controlMap.get(\"ClosureProjectMaster\").ncontrolcode; //  const editId = this.state.controlMap.has(\"EditProjectMaster\") && this.state.controlMap.get(\"EditProjectMaster\").ncontrolcode;\n\n      if (selectedProjectMaster.ntransactionstatus === transactionStatus.APPROVED) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            screenName: \"IDS_CLOSUREFILE\",\n            openModal: true,\n            operation: \"create\",\n            ncontrolCode: closureId\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        toast.warn(intl.formatMessage({\n          id: \"IDS_SELECTAPPROVEVERSION\"\n        }));\n      }\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let projectMasterData = [];\n      let inputParam = {};\n      projectMasterData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = {\n        inputListName: \"ProjectMaster\",\n        selectedObject: \"SelectedProjectMaster\",\n        primaryKeyField: \"nprojectmastercode\"\n      };\n\n      if (this.props.Login.operation === \"update\" && this.props.Login.screenName === \"IDS_PROJECTMASTER\") {\n        postParam[\"primaryKeyValue\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\n        projectMasterData[\"projectMaster\"] = {\n          nprojectmastercode: this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode,\n          //     nprojecttypecode:this.state.selectedRecord.nprojecttypecode.value,\n          sprojecttitle: this.state.selectedRecord.sprojecttitle,\n          sprojectcode: this.state.selectedRecord.sprojectcode,\n          sprojectname: this.state.selectedRecord.sprojectname,\n          sprojectdescription: this.state.selectedRecord.sprojectdescription,\n          // drfwdate: formatInputDate(this.state.selectedRecord[\"drfwdate\"],false),\n          // dprojectstartdate: formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"],false),\n          //     nstudydirectorcode:this.state.selectedRecord.nstudydirectorcode.value,\n          //     nteammembercode: this.state.selectedRecord.nteammembercode.value,\n          //     nperiodcode: this.state.selectedRecord.nperiodcode.value,\n          nprojectduration: this.state.selectedRecord.nprojectduration,\n          ntransactionstatus: this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus\n        };\n      } else if (this.props.Login.operation === \"create\" && this.props.Login.screenName === \"IDS_PROJECTMASTER\") {\n        projectMasterData[\"projectMaster\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode,\n          sprojecttitle: this.state.selectedRecord.sprojecttitle,\n          sprojectname: this.state.selectedRecord.sprojectname,\n          sprojectcode: this.state.selectedRecord.sprojectcode,\n          sprojectdescription: this.state.selectedRecord.sprojectdescription === undefined ? \"\" : this.state.selectedRecord.sprojectdescription,\n          nprojectduration: parseInt(this.state.selectedRecord.nprojectduration),\n          //  ntransactionstatus: this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus\n          ntransactionstatus: transactionStatus.DRAFT,\n          sfilename: this.state.selectedRecord.sfilename === undefined ? \"\" : this.state.selectedRecord.sfilename,\n          sclosureremarks: this.state.selectedRecord.sclosureremarks === undefined ? \"\" : this.state.selectedRecord.sclosureremarks\n        };\n        /*     this.projectMasterFieldList.map((item) => {\r\n               return (projectMasterData[\"projectMaster\"][item] = this.state.selectedRecord[item] == \"\" || this.state.selectedRecord[item] == undefined ?\r\n               undefined :this.state.selectedRecord[item]);\r\n             }); */\n      }\n\n      if ((this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") && this.props.Login.screenName === \"IDS_PROJECTMASTER\") {\n        projectMasterData[\"projectMaster\"][\"nprojecttypecode\"] = this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value : transactionStatus.NA;\n        projectMasterData[\"projectMaster\"][\"nuserrolecode\"] = this.state.selectedRecord[\"nuserrolecode\"] ? this.state.selectedRecord[\"nuserrolecode\"].value : transactionStatus.NA;\n        projectMasterData[\"projectMaster\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : transactionStatus.NA; // projectMasterData[\"projectMaster\"][\"nteammembercode\"] = this.state.selectedRecord[\"nteammembercode\"] ? this.state.selectedRecord[\"nteammembercode\"].value\n        //   : transactionStatus.NA;\n\n        projectMasterData[\"projectMaster\"][\"nperiodcode\"] = this.state.selectedRecord[\"nperiodcode\"] ? this.state.selectedRecord[\"nperiodcode\"].value : transactionStatus.NA; // if (this.state.selectedRecord[\"drfwdate\"] || this.state.selectedRecord[\"dprojectstartdate\"]) {\n        //   if (this.props.Login.operation === \"create\") {\n\n        if (this.state.selectedRecord[\"drfwdate\"]) {\n          projectMasterData[\"projectMaster\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"drfwdate\"], false);\n        } //projectMasterData[\"projectMaster\"][\"drfwdate\"] = this.state.selectedRecord[\"drfwdate\"]? formatInputDate(this.state.selectedRecord[\"drfwdate\"], false):\"\";\n\n\n        projectMasterData[\"projectMaster\"][\"dprojectstartdate\"] = formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"], false);\n        projectMasterData[\"projectMaster\"][\"ntzrfwdate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\n        projectMasterData[\"projectMaster\"][\"ntzprojectstartdate\"] = projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\"; //   }\n        //   else {\n        //     projectMasterData[\"projectMaster\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"drfwdate\"],false);\n        //     projectMasterData[\"projectMaster\"][\"dprojectstartdate\"] = formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"],false);\n        //   }\n        // }\n      }\n\n      if (this.props.Login.operation === \"create\" && this.props.Login.screenName === \"IDS_ADDMEMBERS\") {\n        projectMasterData[\"ProjectMember\"] = {};\n        projectMasterData[\"ProjectMember\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"][0] ? this.state.selectedRecord[\"nusercode\"][0].value : transactionStatus.NA;\n        projectMasterData[\"ProjectMember\"][\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\n      }\n\n      if ((this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") && this.props.Login.screenName === \"IDS_PROJECTMASTER\") {\n        inputParam = {\n          classUrl: \"projectmaster\",\n          methodUrl: \"ProjectMaster\",\n          inputData: projectMasterData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n      }\n      /* else if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n         inputParam = {\r\n         classUrl: \"projectmaster\",\r\n         methodUrl: \"ProjectMember\",\r\n         inputData: projectMasterData,\r\n         operation: this.props.Login.operation,\r\n         saveType,\r\n         formRef,\r\n         postParam,\r\n         searchRef: this.searchRef,\r\n         isClearSearch: this.props.Login.isClearSearch,\r\n       }\r\n      } */\n\n\n      if (this.props.Login.operation === \"create\" && this.props.Login.screenName === \"IDS_CLOSUREFILE\") {\n        inputParam = this.onSaveProjectMasterClosureFile(saveType, formRef);\n      }\n\n      if (this.props.Login.screenName === \"IDS_REPORTINFOPROJECT\") {\n        inputParam = this.onSaveReportInfoProject(saveType, formRef);\n      }\n\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.onSaveProjectMasterClosureFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      let projectmasterclosureFile = {};\n      let projectmasterclosureFileArray = [];\n      const formData = new FormData();\n      const tempData = Object.assign({}, projectmasterclosureFile);\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        acceptedFiles.forEach((file, index) => {\n          const splittedFileName = file.name.split('.');\n          const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n          const uniquefilename = create_UUID() + '.' + fileExtension;\n          tempData[\"sclosureremarks\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.sclosureremarks ? selectedRecord.sclosureremarks.trim() : \"\"), false);\n          tempData[\"ssystemfilename\"] = uniquefilename;\n          tempData[\"sfilename\"] = Lims_JSON_stringify(file.name, false);\n          tempData[\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\n          tempData[\"ntransactionstatus\"] = this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus;\n          tempData[\"nprojecttypecode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojecttypecode;\n          tempData[\"sprojecttitle\"] = Lims_JSON_stringify(this.props.Login.masterData.SelectedProjectMaster.sprojecttitle, false);\n          tempData[\"sprojectcode\"] = Lims_JSON_stringify(this.props.Login.masterData.SelectedProjectMaster.sprojectcode, false);\n          formData.append(\"uploadedFile\" + index, file);\n          formData.append(\"uniquefilename\" + index, uniquefilename);\n          projectmasterclosureFileArray.push(tempData);\n        });\n      }\n\n      formData.append(\"projectmaster\", JSON.stringify(projectmasterclosureFileArray[0]));\n      formData.append(\"filecount\", acceptedFiles.length);\n      let selectedId = null;\n      let postParam = undefined;\n\n      if (this.props.Login.operation === \"create\") {\n        // edit\n        postParam = {\n          inputListName: \"ProjectMaster\",\n          selectedObject: \"SelectedProjectMaster\",\n          primaryKeyField: \"nprojectmastercode\"\n        };\n        selectedId = selectedRecord[\"nprojectmastercode\"];\n      }\n\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n            smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\n            //ALPD-1826(while saving the file and link,audit trail is not captured the respective language)\n            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n          }\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"projectmaster\",\n        saveType,\n        formRef,\n        methodUrl: \"ProjectMasterClosureFile\",\n        postParam,\n        searchRef: this.searchRef\n      };\n      return inputParam;\n    };\n\n    this.DeleteProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\n      const postParam = {\n        inputListName: \"ProjectMasterList\",\n        selectedObject: \"SelectedProjectMaster\",\n        primaryKeyField: \"nprojectmastercode\",\n        primaryKeyValue: selectedProjectMaster.nprojectmastercode,\n        fetchUrl: \"projectmaster/getActiveProjectMasterById\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl,\n        postParam,\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          projectmaster: selectedProjectMaster\n        },\n        operation,\n        isClearSearch: this.props.Login.isClearSearch,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_PROJECTMASTER\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.onSaveReportInfoProject = (saveType, formRef) => {\n      let postParam = undefined;\n      let inputData = [];\n      const selectedRecord = this.state.selectedRecord;\n      postParam = {\n        inputListName: \"ProjectMaster\",\n        selectedObject: \"SelectedProjectMaster\",\n        primaryKeyField: \"nprojectmastercode\"\n      };\n      inputData[\"reportinfoproject\"] = {};\n      inputData[\"reportinfoproject\"][\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\n      inputData[\"reportinfoproject\"][\"nprojecttypecode\"] = this.props.Login.masterData.SelectedProjectType.nprojecttypecode;\n      inputData[\"reportinfoproject\"][\"sreporttemplateversion\"] = selectedRecord.sreporttemplateversion;\n      inputData[\"reportinfoproject\"][\"srevision\"] = selectedRecord.srevision;\n      inputData[\"reportinfoproject\"][\"srevisionauthor\"] = selectedRecord.srevisionauthor;\n      inputData[\"reportinfoproject\"][\"sintroduction\"] = selectedRecord.sintroduction;\n      inputData[\"reportinfoproject\"][\"stestproductheadercomments\"] = selectedRecord.stestproductheadercomments;\n      inputData[\"reportinfoproject\"][\"stestproductfootercomments1\"] = selectedRecord.stestproductfootercomments1;\n      inputData[\"reportinfoproject\"][\"stestproductfootercomments2\"] = selectedRecord.stestproductfootercomments2;\n      inputData[\"reportinfoproject\"][\"stestproductfootercomments3\"] = selectedRecord.stestproductfootercomments3;\n      inputData[\"reportinfoproject\"][\"stestproductfootercomments4\"] = selectedRecord.stestproductfootercomments4;\n      inputData[\"reportinfoproject\"][\"ssamplingdetails\"] = selectedRecord.ssamplingdetails;\n      inputData[\"reportinfoproject\"][\"suncertainitymeasurement\"] = selectedRecord.suncertainitymeasurement;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let dataState = this.state.dataState;\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"ReportInfoProject\",\n        displayName: this.props.Login.screenName,\n        inputData: inputData,\n        selectedId: this.state.selectedRecord[\"nprojectmastercode\"],\n        operation: \"update\",\n        saveType,\n        formRef,\n        dataState,\n        searchRef: this.searchRef,\n        postParam: postParam\n      };\n      return inputParam; // this.fieldprojectreportinfoList.map(item => {\n      //     return inputData[\"projectreportinfo\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\n      // })\n    };\n\n    this.viewProjectMasterClosureFile = (selectedProjectMaster, userInfo) => {\n      const inputParam = {\n        inputData: {\n          projectmasterclosurefile: selectedProjectMaster,\n          userinfo: userInfo\n        },\n        classUrl: \"projectmaster\",\n        operation: \"view\",\n        methodUrl: \"AttachedProjectMasterClosureFile\",\n        screenName: \"ProjectMaster Closure File\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.onComboChange = (comboData, fieldName, caseNo) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      switch (caseNo) {\n        case 1:\n          // const selectedRecord = this.state.selectedRecord || {};\n          if (selectedRecord.nuserrolecode) {\n            if (parseInt(comboData.value) !== parseInt(selectedRecord.nuserrolecode.value)) {\n              // selectedRecord.nusercode={};\n              delete selectedRecord.nusercode;\n            }\n          }\n\n          selectedRecord[fieldName] = comboData;\n          selectedRecord[\"suserrolename\"] = comboData.item[\"suserrolename\"];\n          this.props.getuserComboServices({\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              sdisplayname: selectedRecord.nuserrolecode.label,\n              primarykey: selectedRecord.nuserrolecode.value\n            }\n          }, selectedRecord); // this.setState({ selectedRecord });\n\n          break;\n\n        case 2:\n          // let nfilterProjectType = this.state.nfilterProjectType || {}\n          // nfilterProjectType = comboData;\n          const selectedRecordfilter = this.state.selectedRecordfilter || {};\n          selectedRecordfilter[fieldName] = comboData;\n          this.setState({\n            selectedRecordfilter\n          });\n          break;\n\n        case 3:\n          selectedRecord[fieldName] = comboData;\n          this.setState({\n            selectedRecord\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.onDropProjectMasterFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE; // else if (event.target.name === \"nlockmode\")\n        //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\n        else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.deleteProjectMember = deleteParam => {\n      const inputParam = {\n        classUrl: \"projectmaster\",\n        methodUrl: \"ProjectMember\",\n        //displayName: ,\n        inputData: {\n          \"projectmember\": deleteParam.selectedRecord,\n          //.dataItem,\n          \"nprojectmembercode\": deleteParam.selectedRecord.nprojectmembercode,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        operation: \"delete\",\n        selectedRecord: { ...this.state.selectedRecord\n        } // priceDataState:this.state.priceDataState\n\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openChildModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_MEMBERS\"\n            }),\n            operation: deleteParam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.onDropProjectMasterclosureFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      console.log(\"value:\", value, name);\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (name === \"nprojectduration\") {\n        if (/^[0-9]+$/.test(value.target.value) || value.target.value === \"\") {\n          selectedRecord[name] = value.target.value;\n        } else {\n          selectedRecord[name] = \"\";\n        }\n      } else {\n        selectedRecord[name] = value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.approveProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\n      if (selectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT) {\n        const postParam = {\n          inputListName: \"ProjectMaster\",\n          selectedObject: \"SelectedProjectMaster\",\n          primaryKeyField: \"nprojectmastercode\",\n          primaryKeyValue: selectedProjectMaster.nprojectmastercode,\n          fetchUrl: \"projectmaster/getProjectMaster\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl,\n          postParam,\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo,\n            \"projectmaster\": selectedProjectMaster\n          },\n          operation,\n          isClearSearch: this.props.Login.isClearSearch,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"IDS_PROJECTMASTER\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTVERSION\"\n        }));\n      }\n    };\n\n    this.RetireProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\n      if (selectedProjectMaster.ntransactionstatus === transactionStatus.CLOSED) {\n        const postParam = {\n          inputListName: \"ProjectMaster\",\n          selectedObject: \"SelectedProjectMaster\",\n          primaryKeyField: \"nprojectmastercode\",\n          primaryKeyValue: selectedProjectMaster.nprojectmastercode,\n          fetchUrl: \"projectmaster/getProjectMaster\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl,\n          postParam,\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo,\n            \"projectmaster\": selectedProjectMaster\n          },\n          operation,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"IDS_PROJECTMASTER\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTCLOSEDVERSION\"\n        }));\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropTestFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.state.data, event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.ConfirmDelete = (selectedProjectMaster, operation, deleteId, screenName) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteProjectMaster(screenName, selectedProjectMaster, operation, deleteId));\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\"; // if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\n\n      if (this.props.Login.masterData.SelectedProjectType !== undefined) {\n        if (Object.values(this.props.Login.masterData.SelectedProjectType).length && this.props.Login.masterData.SelectedProjectType !== undefined) {\n          let inputParam = {\n            inputData: {\n              // nprojecttypecode: this.state.selectedRecord.nprojecttypecode.value,\n              nprojecttypecode: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\n              userinfo: this.props.Login.userInfo,\n              // nfilterProjectType: this.state.selectedRecord.nprojecttypecode,\n              nfilterProjectType: this.props.Login.masterData.SelectedProjectType\n            },\n            classUrl: \"projectmaster\",\n            methodUrl: \"ProjectMasterByProjectType\"\n          };\n          this.props.changeProjectTypeFilter(inputParam, this.props.Login.masterData.filterProjectType);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_PROJECTTYPENOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.state.selectedRecord; //    let selectedRecord = this.state.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\" || this.props.Login.operation === \"retire\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = '';\n          selectedRecord['esigncomments'] = '';\n          selectedRecord['esignreason'] = '';\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\"; // if (this.state.nfilterProjectType.value) {\n      // if (this.state.selectedRecord.nprojecttypecodevalue.value) {\n      //if ((this.state.selectedRecord).length>0) {\n      // if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\n\n      if (this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\n        if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\n          let inputParam = {\n            inputData: {\n              nprojecttypecode: this.state.selectedRecordfilter.nprojecttypecodevalue.value,\n              userinfo: this.props.Login.userInfo,\n              // nfilterProjectType: this.state.nfilterProjectType,\n              nfilterProjectType: this.state.selectedRecordfilter.nprojecttypecodevalue\n            },\n            classUrl: \"projectmaster\",\n            methodUrl: \"ProjectMasterByProjectType\"\n          };\n          this.props.changeProjectTypeFilter(inputParam, this.props.Login.masterData.filterProjectType);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_PROJECTTYPENOTAVAILABLE\"\n        }));\n      }\n    };\n\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      selectedRecord: {},\n      error: \"\",\n      userRoleControlRights: [],\n      selectedProjectMaster: undefined,\n      controlMap: new Map(),\n      Instrument: [],\n      dataState: _dataState,\n      sidebarview: false\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sprojectcode\", \"sprojectname\", \"sprojecttitle\", \"suserrolename\", \"susername\", \"srfwdate\", \"sprojectstartdate\", \"sprojectdescription\", \"sversionstatus\", \"sfilename\", \"sclosureremarks\", \"sprojectduration\"];\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n        toast.warn(props.Login.masterStatus);\n        props.Login.masterStatus = \"\";\n      }\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let versionStatusCSS = \"outline-secondary\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.APPROVED) {\n      versionStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.SelectedProjectMaster && (this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.RETIRED || this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.CLOSED)) {\n      versionStatusCSS = \"outline-danger\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT) {\n      activeIconCSS = \"\";\n    }\n\n    if (this.props.Login.openModal) {\n      this.mandatoryFields = this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord, this.props.Login.operation);\n    } //console.log(\"master main\", this.props.Login.masterData);\n    // let mandatoryFields = [];\n\n\n    const {\n      userInfo\n    } = this.props.Login;\n    const addId = this.state.controlMap.has(\"AddProjectMaster\") && this.state.controlMap.get(\"AddProjectMaster\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditProjectMaster\") && this.state.controlMap.get(\"EditProjectMaster\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteProjectMaster\") && this.state.controlMap.get(\"DeleteProjectMaster\").ncontrolcode;\n    const approveId = this.state.controlMap.has(\"ApproveProjectMaster\") && this.state.controlMap.get(\"ApproveProjectMaster\").ncontrolcode; // const addteammembersId = this.state.controlMap.has(\"AddTeamMembers\") && this.state.controlMap.get(\"AddTeamMembers\").ncontrolcode;\n\n    const retireId = this.state.controlMap.has(\"RetireProjectMaster\") && this.state.controlMap.get(\"RetireProjectMaster\").ncontrolcode;\n    const closureId = this.state.controlMap.has(\"ClosureProjectMaster\") && this.state.controlMap.get(\"ClosureProjectMaster\").ncontrolcode; // const deleteteammembersId = this.state.controlMap.has(\"DeleteTeammembers\") && this.state.controlMap.get(\"DeleteTeammembers\").ncontrolcode;\n\n    const viewClosureFileId = this.state.controlMap.has(\"ViewProjectMasterClosureFile\") && this.state.controlMap.get(\"ViewProjectMasterClosureFile\").ncontrolcode;\n    const reportdetailId = this.state.controlMap.has(\"ReportInfoProject\") && this.state.controlMap.get(\"ReportInfoProject\").ncontrolcode;\n    const fieldsForGrid = [{\n      \"idsName\": \"IDS_LOGINID\",\n      \"dataField\": \"sloginid\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_USER\",\n      \"dataField\": \"steammembername\",\n      \"width\": \"200px\"\n    }];\n    const {\n      SelectedProjectMaster\n    } = this.props.Login.masterData;\n    const selectedMaster = this.props.Login.masterData.SelectedProjectMaster;\n    const selectedProjectMaster = this.props.Login.masterData.SelectedProjectMaster;\n    const filterParam = {\n      inputListName: \"ProjectMaster\",\n      selectedObject: \"SelectedProjectMaster\",\n      primaryKeyField: \"nprojectmastercode\",\n      fetchUrl: \"projectmaster/getActiveProjectMasterById\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 15\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.setState({\n        sidebarview: !this.state.sidebarview\n      }),\n      className: \"sidebar-view-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 17\n      }\n    }, !this.state.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_PROJECTMASTER\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ProjectMaster,\n      getMasterDetail: ProjectMasterdata => this.props.getProjectMaster(ProjectMasterdata, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: selectedProjectMaster,\n      primaryKeyField: \"nprojectmastercode\",\n      mainField: \"sprojecttitle\",\n      firstField: \"sprojectcode\",\n      secondField: \"sversionstatus\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData //     openModal={() => this.props.addProjectMaster(\"create\", SelectedProjectMaster, userInfo, addId, this.state.ProjectMasterList)}\n      ,\n      openModal: () => this.props.addProjectMaster(\"create\", SelectedProjectMaster, userInfo, addId, this.state.selectedRecordfilter, this.props.Login.masterData.SelectedProjectType),\n      isMultiSelecct: false,\n      hidePaging: false,\n      isClearSearch: this.props.Login.isClearSearch,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_PROJECTMASTERFILTER\": /*#__PURE__*/React.createElement(ProjectMasterFilter, {\n          filterProjectType: this.state.ProjectMasterList || [],\n          nfilterProjectType: this.props.Login.masterData.SelectedProjectType || {},\n          onComboChange: this.onComboChange,\n          selectedRecord: this.state.selectedRecordfilter || {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 23\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '8' : \"10\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 13\n      }\n    }, selectedProjectMaster ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 23\n      }\n    }, selectedProjectMaster.sprojecttitle), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${versionStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: activeIconCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 31\n      }\n    }), selectedProjectMaster.sversionstatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      name: \"reportdetailstestname\",\n      hidden: this.state.userRoleControlRights.indexOf(reportdetailId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REPORTINFOPROJECT\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: e => this.props.ReportInfo(\"IDS_REPORTINFOPROJECT\", \"\", \"nprojectmastercode\", this.props.Login.masterData, this.props.Login.userInfo, reportdetailId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ReportEdit, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      name: \"edittestname\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.addProjectMaster(\"update\", selectedProjectMaster, userInfo, editId, this.state.selectedRecordfilter, addProjectMaster),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      name: \"deletetestname\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(selectedProjectMaster, \"delete\", deleteId, \"ProjectMaster\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"approveProjectMaster\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.approveProjectMaster(\"ProjectMaster\", selectedProjectMaster, \"approve\", approveId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"ClosureProjectMaster\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(closureId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_CLOSE\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.handleProjectMasterClosure(selectedProjectMaster),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Closure, {\n      className: \"custom_icons\",\n      width: \"17\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"retireProjectMaster\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(retireId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RETIRE\"\n      }) //data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.RetireProjectMaster(\"ProjectMaster\", selectedProjectMaster, \"retire\", retireId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUserTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 31\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_PROJECTCODE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 29\n      }\n    }, selectedProjectMaster.sprojectcode))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_PROJECTNAME\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 29\n      }\n    }, selectedProjectMaster.sprojectname))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ROLE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 29\n      }\n    }, selectedProjectMaster.suserrolename))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_USER\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 29\n      }\n    }, selectedProjectMaster.susername))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_RFWDATE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 29\n      }\n    }, rearrangeDateFormatDateOnly(this.props.Login.userInfo, selectedProjectMaster.srfwdate), \" \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_STARTDATE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 29\n      }\n    }, rearrangeDateFormatDateOnly(this.props.Login.userInfo, selectedProjectMaster.sprojectstartdate), \" \"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_PROJECTDURATION\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 29\n      }\n    }, selectedProjectMaster.sprojectduration))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_PROJECTDESCRIPTION\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 29\n      }\n    }, selectedProjectMaster.sprojectdescription)))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"horizontal-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_CLOSUREFILENAME\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 29\n      }\n    }, selectedProjectMaster.sfilename))), /*#__PURE__*/React.createElement(Col, {\n      md: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"ClosureProjectMasterFile\",\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(viewClosureFileId) === -1 ? true : selectedProjectMaster.sfilename === '-' ? true : false,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DOWNLOAD\"\n      }),\n      onClick: () => this.viewProjectMasterClosureFile(selectedProjectMaster, userInfo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCloudDownloadAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_REASONFORCLOSURE\"\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 29\n      }\n    }, selectedProjectMaster.sclosureremarks)))), /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ProjectMasterTab, {\n      primaryKeyField: \"nprojectmembercode\" // data={this.props.Login.masterData.ProjectMember}\n      ,\n      data: this.state.data // dataResult={this.props.Login.masterData.ProjectMember}\n      ,\n      dataResult: this.state.dataResult,\n      masterData: this.props.Login.masterData,\n      screenName: this.props.Login.screenName,\n      operation: this.props.Login.operation,\n      openChildModal: this.props.Login.openChildModal,\n      crudMaster: this.props.crudMaster,\n      errorCode: this.props.Login.errorCode,\n      validateEsignCredential: this.props.validateEsignCredential,\n      loadEsign: this.props.Login.loadEsign,\n      showAccordian: this.state.showAccordian,\n      selectedRecord: this.state.selectedRecord || {} // dataState={{skip: 0, take: 10}}\n      // dataState={this.props.Login.dataState}\n      ,\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: fieldsForGrid,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo //    getProjectmasterAddMemberService={(this.props.Login.screenName,this.props.Login.operation,this.props.getProjectmasterAddMemberService,this.props.Login.userInfo,this.props.Login.ncontrolCode)}\n      ,\n      getProjectmasterAddMemberService: this.props.getProjectmasterAddMemberService // --   fetchRecord={this.props.getPricingEditService}\n      //--       editParam={{...editTestPriceParam, \"updateType\":\"Single\", priceDataState:this.state.priceDataState}}\n      ,\n      deleteRecord: this.deleteProjectMember //  deleteParam={{operation:\"delete\"}}\n      ,\n      methodUrl: \"Teammembers\" // reloadData={this.reloadData}\n      // --      addRecord = {() => this.openModal(addId)}\n      ,\n      pageable: true,\n      onTabChange: this.onTabChange,\n      updateStore: this.props.updateStore,\n      scrollable: 'scrollable' // gridHeight = {'600px'}\n      ,\n      isActionRequired: true,\n      isToolBarRequired: false,\n      selectedId: this.props.Login.selectedId,\n      viewAttachment: this.props.viewAttachment,\n      MembersList: this.props.Login.MembersList,\n      onComboChange: this.onComboChange // File\n      ,\n      addProjectMasterFile: this.props.addProjectMasterFile,\n      esignRights: this.props.Login.userRoleControlRights,\n      ntransactionstatus: selectedProjectMaster.ntransactionstatus //  selectedRecord={this.props.Login.selectedRecord}\n      ,\n      onDropProjectMasterFile: this.onDropProjectMasterFile,\n      onInputOnChange: this.onInputOnChange,\n      screenData: this.props.Login.screenData,\n      deleteAttachment: this.deleteAttachment,\n      ncontrolCode: this.props.Login.ncontrolCode,\n      linkMaster: this.props.Login.linkMaster,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 29\n      }\n    }))))))) : \"\"))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal //size={this.props.Login.operation===\"create\" ? \"xl\" : \"lg\" }\n      ,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.mandatoryFields || [],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 15\n        }\n      }) : this.props.Login.screenName === \"IDS_PROJECTMASTER\" ? /*#__PURE__*/React.createElement(AddProjectMaster, {\n        userInfo: this.props.Login.userInfo,\n        selectedRecord: this.state.selectedRecord || {},\n        ProjectType: this.props.Login.ProjectType,\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange // onNumericInputOnChange={this.onNumericInputOnChange}\n        ,\n        onNumericInputChange: this.onNumericInputChange,\n        handleDateChange: this.handleDateChange,\n        Userrole: this.props.Login.Userrole,\n        Users: this.props.Login.userList,\n        TeamMembers: this.props.Login.TeamMembers,\n        PeriodByControl: this.props.Login.PeriodByControl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_REPORTINFOPROJECT\" ? /*#__PURE__*/React.createElement(ReportInfoProject, {\n        userInfo: this.props.Login.userInfo,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputChange: this.onNumericInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 21\n        }\n      }) : this.props.Login.screenName === \"IDS_CLOSUREFILE\" ? /*#__PURE__*/React.createElement(ProjectMasterClosure, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropProjectMasterclosureFile,\n        onDropAccepted: this.onDropAccepted,\n        deleteAttachment: this.deleteAttachment,\n        actionType: this.state.actionType,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.linkMaster,\n        editFiles: this.props.editFiles,\n        maxSize: 20,\n        maxFiles: 1,\n        multiple: false,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        name: \"projectmasterclosurefilename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 19\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  findMandatoryFields(screenName, selectedRecord, operation) {\n    let mandatoryFields = [];\n\n    if (screenName === \"IDS_PROJECTMASTER\") {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_PROJECTTYPE\",\n        \"dataField\": \"nprojecttypecode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_PROJECTTITLE\",\n        \"dataField\": \"sprojecttitle\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_PROJECTCODE\",\n        \"dataField\": \"sprojectcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_PROJECTNAME\",\n        \"dataField\": \"sprojectname\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_ROLE\",\n        \"dataField\": \"nuserrolecode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_INCHARGE\",\n        \"dataField\": \"nusercode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, //{ \"idsName\": \"IDS_RFWDATE\", \"dataField\": \"drfwdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\n      {\n        \"idsName\": \"IDS_STARTDATE\",\n        \"dataField\": \"dprojectstartdate\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_PROJECTDURATION\",\n        \"dataField\": \"nprojectduration\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_DURATIONPERIOD\",\n        \"dataField\": \"nperiodcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }];\n      mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\n      return mandatoryFields;\n    } else if (screenName === \"IDS_CLOSUREFILE\") {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_FILENAME\",\n        \"dataField\": \"sfilename\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_REASONFORCLOSURE\",\n        \"dataField\": \"sclosureremarks\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textarea\"\n      }];\n      mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\n      return mandatoryFields;\n    } else if (screenName === \"IDS_REPORTINFOPROJECT\") {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_REPORTTEMPLATEVERSION\",\n        \"dataField\": \"sreporttemplateversion\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REVISION\",\n        \"dataField\": \"srevision\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REVISIONAUTHOR\",\n        \"dataField\": \"srevisionauthor\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_INTRODUCTION\",\n        \"dataField\": \"sintroduction\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TESTPRODUCTHEADERCOMMENTS\",\n        \"dataField\": \"stestproductheadercomments\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS1\",\n        \"dataField\": \"stestproductfootercomments1\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS2\",\n        \"dataField\": \"stestproductfootercomments2\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS3\",\n        \"dataField\": \"stestproductfootercomments3\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS4\",\n        \"dataField\": \"stestproductfootercomments4\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_SAMPLINGDETAILS\",\n        \"dataField\": \"ssamplingdetails\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_UNCERTAINITYOFMEASUREMENT\",\n        \"dataField\": \"suncertainitymeasurement\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }]; //mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\n\n      return mandatoryFields;\n    } else {\n      return [];\n    }\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      selectedRecord,\n      selectedRecordfilter,\n      userRoleControlRights,\n      controlMap,\n      filterData,\n      nfilterProjectType,\n      filterProjectType\n    } = this.state;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      updateState = true;\n      this.setState({\n        selectedRecord,\n        selectedRecordfilter\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        controlMap,\n        userRoleControlRights,\n        data: this.props.Login.masterData.ProjectMember,\n        dataResult: process(this.props.Login.masterData.ProjectMember || [], this.state.dataState)\n      }); //   updateState = true;\n    }\n\n    let nprojecttypecode = this.state.nfilterProjectType || {};\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      nfilterProjectType = this.state.nfilterProjectType || {};\n      const filterProjectType = constructOptionList(this.props.Login.masterData.filterProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", undefined, undefined, undefined);\n      let ProjectMasterList = filterProjectType.get(\"OptionList\");\n      nprojecttypecode = ProjectMasterList[0];\n      selectedRecordfilter = {\n        nprojecttypecodevalue: nprojecttypecode\n      };\n      selectedRecord = {\n        nprojecttypecodevalue: nprojecttypecode\n      }; // nfilterProjectType = this.props.Login.masterData.nfilterProjectType;\n\n      this.setState({\n        ProjectMasterList,\n        selectedRecordfilter,\n        selectedRecord,\n        data: this.props.Login.masterData.ProjectMember,\n        dataState: {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n        },\n        dataResult: process(this.props.Login.masterData.ProjectMember || [], {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n        })\n      });\n\n      if (this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\n        nfilterProjectType = {\n          label: this.props.Login.masterData.SelectedProjectType.sprojecttypename,\n          value: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\n          item: this.props.Login.masterData.SelectedProjectType\n        };\n      } //  selectedRecordfilter = {nprojecttypecodevalue:nfilterProjectType}\n\n\n      filterData = this.generateBreadCrumData();\n      updateState = true;\n      this.setState({\n        filterData,\n        selectedRecordfilter\n      });\n    }\n\n    if (this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\n      let nprojecttypecodevalue = this.props.Login.masterData.SelectedProjectType ? {\n        label: this.props.Login.masterData.SelectedProjectType.sprojecttypename,\n        value: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\n        item: this.props.Login.masterData.SelectedProjectType\n      } : \"\"; //  nprojecttypecode=ProjectMasterList[ProjectMasterList.length-1];\n\n      selectedRecordfilter = {\n        nprojecttypecodevalue\n      };\n      selectedRecord = {\n        nprojecttypecodevalue: nprojecttypecode\n      }; // nfilterProjectType = this.props.Login.masterData.nfilterProjectType;\n\n      this.setState({\n        selectedRecordfilter,\n        selectedRecord\n      });\n    } // if (this.props.Login.masterData.nfilterProjectType !== previousProps.Login.masterData.nfilterProjectType) {\n    // }\n\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.SelectedProjectType) {\n      breadCrumbData.push({\n        label: \"IDS_PROJECTTYPE\",\n        value: this.props.Login.masterData.SelectedProjectType ? this.props.Login.masterData.SelectedProjectType.sprojecttypename : \"NA\"\n      });\n    } else if (this.props.Login.masterData && this.props.Login.masterData.SelectedProjectMaster) {\n      /*    breadCrumbData.push({\r\n            label: \"IDS_PROJECTTYPE\",\r\n            value: this.state.selectedRecord.nprojecttypecode\r\n              ? this.state.selectedRecord.nprojecttypecode.label\r\n              : \"NA\",\r\n          }); */\n      breadCrumbData.push({\n        label: \"IDS_PROJECTTYPE\",\n        value: this.props.Login.masterData.SelectedProjectMaster ? this.props.Login.masterData.SelectedProjectMaster.sprojecttypename : \"NA\"\n      });\n    } else {\n      /*       breadCrumbData.push({\r\n             label: \"IDS_PROJECTTYPE\",\r\n             value:  this.state.selectedRecord.nprojecttypecodevalue\r\n               ? this.state.selectedRecord.nprojecttypecodevalue.label\r\n               : \"NA\",\r\n           }); */\n      breadCrumbData.push({\n        label: \"IDS_PROJECTTYPE\",\n        value: this.props.Login.masterData.nfilterProjectType ? this.props.Login.masterData.nfilterProjectType.label : \"NA\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  filterColumnData,\n  updateStore,\n  validateEsignCredential,\n  changeProjectTypeFilter,\n  viewAttachment,\n  addProjectMaster,\n  ReportInfo,\n  getProjectMaster,\n  getProjectmasterAddMemberService,\n  addProjectMasterFile,\n  getuserComboServices\n})(injectIntl(ProjectMaster));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/project/ProjectMaster.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","connect","toast","FontAwesomeIcon","faTrashAlt","faPencilAlt","faThumbsUp","faUserTimes","faCloudDownloadAlt","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","changeProjectTypeFilter","filterColumnData","viewAttachment","addProjectMaster","ReportInfo","getProjectMaster","getProjectmasterAddMemberService","addProjectMasterFile","getuserComboServices","ListMaster","transactionStatus","AddProjectMaster","ReportInfoProject","ProjectMasterTab","ProjectMasterClosure","DEFAULT_RETURN","SlideOutModal","Esign","showEsign","getControlMap","constructOptionList","formatInputDate","onDropAttachFileList","deleteAttachmentDropZone","create_UUID","rearrangeDateFormatDateOnly","Lims_JSON_stringify","replaceBackSlash","ReadOnlyText","ContentPanel","process","ConfirmMessage","BreadcrumbComponent","Affix","ProjectMasterFilter","intl","mapStateToProps","state","Login","ProjectMaster","constructor","props","sidebarExpandCollapse","setState","sidebarview","handleDateChange","dateName","dateValue","selectedRecord","handleProjectMasterClosure","selectedProjectMaster","closureId","controlMap","has","get","ncontrolcode","ntransactionstatus","APPROVED","updateInfo","typeName","data","screenName","openModal","operation","ncontrolCode","warn","formatMessage","id","onInputOnChange","event","optional","target","type","name","checked","value","onSaveClick","saveType","formRef","projectMasterData","inputParam","userInfo","postParam","inputListName","selectedObject","primaryKeyField","masterData","SelectedProjectMaster","nprojectmastercode","sprojecttitle","sprojectcode","sprojectname","sprojectdescription","nprojectduration","nsitecode","nmastersitecode","undefined","parseInt","DRAFT","sfilename","sclosureremarks","NA","userinfo","ntimezonecode","classUrl","methodUrl","inputData","searchRef","isClearSearch","onSaveProjectMasterClosureFile","onSaveReportInfoProject","userRoleControlRights","nformcode","loadEsign","screenData","onNumericInputOnChange","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","acceptedFiles","projectmasterclosureFile","projectmasterclosureFileArray","formData","FormData","tempData","Object","assign","Array","isArray","length","forEach","file","index","splittedFileName","split","fileExtension","uniquefilename","trim","nprojecttypecode","append","push","JSON","stringify","selectedId","sformname","smodulename","slanguagename","isFileupload","DeleteProjectMaster","primaryKeyValue","fetchUrl","fecthInputObject","projectmaster","deleteAttachment","fieldName","actionType","SelectedProjectType","sreporttemplateversion","srevision","srevisionauthor","sintroduction","stestproductheadercomments","stestproductfootercomments1","stestproductfootercomments2","stestproductfootercomments3","stestproductfootercomments4","ssamplingdetails","suncertainitymeasurement","dataState","displayName","viewProjectMasterClosureFile","projectmasterclosurefile","onComboChange","comboData","caseNo","nuserrolecode","nusercode","item","sdisplayname","primarykey","selectedRecordfilter","onDropProjectMasterFile","attachedFiles","maxSize","ACTIVE","DEACTIVE","YES","NO","deleteProjectMember","deleteParam","nprojectmembercode","openChildModal","onDropProjectMasterclosureFile","onNumericInputChange","console","log","test","approveProjectMaster","RetireProjectMaster","CLOSED","onTabChange","tabProps","onDropTestFile","dataStateChange","dataResult","ConfirmDelete","deleteId","confirmMessage","confirm","reloadData","current","values","nfilterProjectType","filterProjectType","closeModal","openFilter","showFilter","closeFilter","onFilterSubmit","nprojecttypecodevalue","skip","take","settings","error","Map","Instrument","createRef","searchFieldList","getDerivedStateFromProps","masterStatus","errorCode","render","versionStatusCSS","activeIconCSS","RETIRED","mandatoryFields","findMandatoryFields","addId","editId","approveId","retireId","viewClosureFileId","reportdetailId","fieldsForGrid","selectedMaster","filterParam","breadCrumbData","filterData","searchedData","ProjectMasterdata","ProjectMasterList","sversionstatus","indexOf","e","suserrolename","susername","srfwdate","sprojectstartdate","sprojectduration","showAccordian","MembersList","linkMaster","ProjectType","Userrole","userList","TeamMembers","PeriodByControl","onDropAccepted","editFiles","mandatory","componentDidUpdate","previousProps","updateState","map","ProjectMember","sprojecttypename","generateBreadCrumData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPencilAlt, faThumbsUp, faUserTimes,faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ReactComponent as ReportEdit } from '../../assets/image/report-edit.svg';\r\n\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  callService, crudMaster, validateEsignCredential, updateStore, changeProjectTypeFilter, filterColumnData,\r\n  viewAttachment, addProjectMaster, ReportInfo,getProjectMaster, getProjectmasterAddMemberService, addProjectMasterFile, getuserComboServices\r\n} from \"../../actions\";\r\n\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { transactionStatus } from \"../../components/Enumeration\";\r\nimport AddProjectMaster from \"../../pages/project/AddProjectMaster\";\r\nimport ReportInfoProject from \"../../pages/project/ReportInfoProject\";\r\nimport ProjectMasterTab from \"../../pages/project/ProjectMasterTab\";\r\nimport ProjectMasterClosure from \"../../pages/project/ProjectMasterClosure\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\n\r\nimport Esign from \"../audittrail/Esign\";\r\nimport { showEsign, getControlMap, constructOptionList, formatInputDate, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, rearrangeDateFormatDateOnly, Lims_JSON_stringify,replaceBackSlash }\r\n  from \"../../components/CommonScript\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\r\nimport { Affix } from \"rsuite\";\r\nimport ProjectMasterFilter from './ProjectMasterFilter';\r\nimport { ReactComponent as Closure } from '../../assets/image/cancel-close-svgrepo-com.svg';\r\nimport { intl } from \"../../components/App\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass ProjectMaster extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const dataState = {\r\n      skip: 0,\r\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n  };\r\n    this.state = {\r\n      selectedRecord: {},\r\n      error: \"\",\r\n      userRoleControlRights: [],\r\n      selectedProjectMaster: undefined,\r\n      controlMap: new Map(),\r\n      Instrument: [],\r\n      dataState,\r\n      sidebarview: false\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.searchFieldList = [\"sprojectcode\",\"sprojectname\", \"sprojecttitle\",\"suserrolename\", \"susername\", \"srfwdate\", \"sprojectstartdate\", \"sprojectdescription\", \"sversionstatus\", \"sfilename\", \"sclosureremarks\", \"sprojectduration\"]\r\n    this.confirmMessage = new ConfirmMessage();\r\n  }\r\n  sidebarExpandCollapse = () => {\r\n      this.setState({\r\n          sidebarview: true\r\n      })          \r\n  }\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  handleProjectMasterClosure = (selectedProjectMaster) => {\r\n\r\n    const closureId = this.state.controlMap.has(\"ClosureProjectMaster\") && this.state.controlMap.get(\"ClosureProjectMaster\").ncontrolcode;\r\n  //  const editId = this.state.controlMap.has(\"EditProjectMaster\") && this.state.controlMap.get(\"EditProjectMaster\").ncontrolcode;\r\n\r\n    if (selectedProjectMaster.ntransactionstatus === transactionStatus.APPROVED) {\r\n\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          screenName: \"IDS_CLOSUREFILE\",\r\n          openModal: true,\r\n          operation: \"create\",\r\n          ncontrolCode :closureId\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n\r\n      toast.warn(intl.formatMessage({ id: \"IDS_SELECTAPPROVEVERSION\" }));\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  onInputOnChange = (event, optional) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n    } else if (event.target.type === 'radio') {\r\n      selectedRecord[event.target.name] = optional;\r\n    } else {\r\n      selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n\r\n    let projectMasterData = [];\r\n    let inputParam = {};\r\n    projectMasterData[\"userinfo\"] = this.props.Login.userInfo;\r\n    \r\n  \r\n    let postParam = {\r\n      inputListName: \"ProjectMaster\",\r\n      selectedObject: \"SelectedProjectMaster\",\r\n      primaryKeyField: \"nprojectmastercode\",\r\n      \r\n    };\r\n\r\n    if ((this.props.Login.operation === \"update\") && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n\r\n      postParam[\"primaryKeyValue\"] =\r\n        this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\r\n\r\n      projectMasterData[\"projectMaster\"] = {\r\n        nprojectmastercode: this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode,\r\n        //     nprojecttypecode:this.state.selectedRecord.nprojecttypecode.value,\r\n        sprojecttitle: this.state.selectedRecord.sprojecttitle,\r\n        sprojectcode: this.state.selectedRecord.sprojectcode,\r\n        sprojectname: this.state.selectedRecord.sprojectname,\r\n        sprojectdescription: this.state.selectedRecord.sprojectdescription,\r\n        // drfwdate: formatInputDate(this.state.selectedRecord[\"drfwdate\"],false),\r\n        // dprojectstartdate: formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"],false),\r\n        //     nstudydirectorcode:this.state.selectedRecord.nstudydirectorcode.value,\r\n        //     nteammembercode: this.state.selectedRecord.nteammembercode.value,\r\n        //     nperiodcode: this.state.selectedRecord.nperiodcode.value,\r\n        nprojectduration: this.state.selectedRecord.nprojectduration,\r\n        ntransactionstatus: this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus\r\n\r\n      };\r\n\r\n    } else if ((this.props.Login.operation === \"create\") && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n\r\n      projectMasterData[\"projectMaster\"] = {\r\n\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n        sprojecttitle: this.state.selectedRecord.sprojecttitle,\r\n        sprojectname: this.state.selectedRecord.sprojectname,\r\n        sprojectcode: this.state.selectedRecord.sprojectcode,\r\n        sprojectdescription: this.state.selectedRecord.sprojectdescription === undefined ? \"\" : this.state.selectedRecord.sprojectdescription,\r\n        nprojectduration: parseInt(this.state.selectedRecord.nprojectduration),\r\n        //  ntransactionstatus: this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus\r\n        ntransactionstatus: transactionStatus.DRAFT,\r\n        sfilename: this.state.selectedRecord.sfilename === undefined ? \"\" : this.state.selectedRecord.sfilename,\r\n        sclosureremarks: this.state.selectedRecord.sclosureremarks === undefined ? \"\" : this.state.selectedRecord.sclosureremarks\r\n      };\r\n\r\n      /*     this.projectMasterFieldList.map((item) => {\r\n             return (projectMasterData[\"projectMaster\"][item] = this.state.selectedRecord[item] == \"\" || this.state.selectedRecord[item] == undefined ?\r\n             undefined :this.state.selectedRecord[item]);\r\n           }); */\r\n    }\r\n\r\n    if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n\r\n      projectMasterData[\"projectMaster\"][\"nprojecttypecode\"] = this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      projectMasterData[\"projectMaster\"][\"nuserrolecode\"] = this.state.selectedRecord[\"nuserrolecode\"] ? this.state.selectedRecord[\"nuserrolecode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      projectMasterData[\"projectMaster\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      // projectMasterData[\"projectMaster\"][\"nteammembercode\"] = this.state.selectedRecord[\"nteammembercode\"] ? this.state.selectedRecord[\"nteammembercode\"].value\r\n      //   : transactionStatus.NA;\r\n\r\n      projectMasterData[\"projectMaster\"][\"nperiodcode\"] = this.state.selectedRecord[\"nperiodcode\"] ? this.state.selectedRecord[\"nperiodcode\"].value\r\n        : transactionStatus.NA;\r\n\r\n      // if (this.state.selectedRecord[\"drfwdate\"] || this.state.selectedRecord[\"dprojectstartdate\"]) {\r\n      //   if (this.props.Login.operation === \"create\") {\r\n\r\n      if(this.state.selectedRecord[\"drfwdate\"]){\r\n          projectMasterData[\"projectMaster\"][\"drfwdate\"] =  formatInputDate(this.state.selectedRecord[\"drfwdate\"], false);\r\n\r\n      }\r\n\r\n      //projectMasterData[\"projectMaster\"][\"drfwdate\"] = this.state.selectedRecord[\"drfwdate\"]? formatInputDate(this.state.selectedRecord[\"drfwdate\"], false):\"\";\r\n      projectMasterData[\"projectMaster\"][\"dprojectstartdate\"] = formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"], false);\r\n      projectMasterData[\"projectMaster\"][\"ntzrfwdate\"] =  projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\r\n      projectMasterData[\"projectMaster\"][\"ntzprojectstartdate\"] =  projectMasterData.userinfo.ntimezonecode ? projectMasterData.userinfo.ntimezonecode : \"-1\";\r\n\r\n      //   }\r\n      //   else {\r\n\r\n      //     projectMasterData[\"projectMaster\"][\"drfwdate\"] = formatInputDate(this.state.selectedRecord[\"drfwdate\"],false);\r\n      //     projectMasterData[\"projectMaster\"][\"dprojectstartdate\"] = formatInputDate(this.state.selectedRecord[\"dprojectstartdate\"],false);\r\n\r\n      //   }\r\n      // }\r\n    }\r\n\r\n    if ((this.props.Login.operation === \"create\") && (this.props.Login.screenName === \"IDS_ADDMEMBERS\")) {\r\n      projectMasterData[\"ProjectMember\"] = {};\r\n      projectMasterData[\"ProjectMember\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"][0] ? this.state.selectedRecord[\"nusercode\"][0].value\r\n        : transactionStatus.NA;\r\n      projectMasterData[\"ProjectMember\"][\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\r\n    }\r\n\r\n\r\n\r\n    if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n\r\n      inputParam = {\r\n        classUrl: \"projectmaster\",\r\n        methodUrl: \"ProjectMaster\",\r\n        inputData: projectMasterData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n        isClearSearch: this.props.Login.isClearSearch,\r\n        selectedRecord:{...this.state.selectedRecord}\r\n\r\n      };\r\n    }/* else if (((this.props.Login.operation === \"create\") || (this.props.Login.operation === \"update\")) && (this.props.Login.screenName === \"IDS_PROJECTMASTER\")) {\r\n\r\n      inputParam = {\r\n        classUrl: \"projectmaster\",\r\n        methodUrl: \"ProjectMember\",\r\n        inputData: projectMasterData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n        isClearSearch: this.props.Login.isClearSearch,\r\n      }\r\n    } */\r\n\r\n    if ((this.props.Login.operation === \"create\") && (this.props.Login.screenName === \"IDS_CLOSUREFILE\")) {\r\n\r\n      inputParam = this.onSaveProjectMasterClosureFile(saveType, formRef);\r\n\r\n    }\r\n\r\n    if(\r\n      //(this.props.Login.operation === \"update\") &&\r\n       (this.props.Login.screenName === \"IDS_REPORTINFOPROJECT\")){\r\n      inputParam = this.onSaveReportInfoProject(saveType, formRef);\r\n\r\n    }\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          saveType,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n\r\n  };\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.Login.masterStatus !== \"\") {\r\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n        toast.warn(props.Login.masterStatus);\r\n        props.Login.masterStatus = \"\";\r\n      }\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateEsign = () => {\r\n    const inputParam = {\r\n        inputData: {\r\n            \"userinfo\": {\r\n                ...this.props.Login.userInfo,\r\n                sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n            },\r\n            password: this.state.selectedRecord[\"esignpassword\"]\r\n        },\r\n        screenData: this.props.Login.screenData\r\n    }\r\n    this.props.validateEsignCredential(inputParam, \"openModal\");\r\n}\r\n\r\n\r\n  onSaveProjectMasterClosureFile = (saveType, formRef) => {\r\n\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n\r\n    let projectmasterclosureFile = {};\r\n    let projectmasterclosureFileArray = [];\r\n    const formData = new FormData();\r\n    const tempData = Object.assign({}, projectmasterclosureFile);\r\n\r\n\r\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n      acceptedFiles.forEach((file, index) => {\r\n\r\n        const splittedFileName = file.name.split('.');\r\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n        const uniquefilename = create_UUID() + '.' + fileExtension;\r\n        tempData[\"sclosureremarks\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.sclosureremarks ? selectedRecord.sclosureremarks.trim() : \"\"),false)  ;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        \r\n        tempData[\"sfilename\"] =Lims_JSON_stringify(file.name,false) ;\r\n        tempData[\"nprojectmastercode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\r\n        tempData[\"ntransactionstatus\"] = this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus;\r\n        tempData[\"nprojecttypecode\"] = this.props.Login.masterData.SelectedProjectMaster.nprojecttypecode;\r\n        tempData[\"sprojecttitle\"] =Lims_JSON_stringify(this.props.Login.masterData.SelectedProjectMaster.sprojecttitle,false)  ;\r\n        tempData[\"sprojectcode\"] =Lims_JSON_stringify(this.props.Login.masterData.SelectedProjectMaster.sprojectcode,false)  ;\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        projectmasterclosureFileArray.push(tempData);\r\n\r\n      });\r\n    }\r\n\r\n    formData.append(\"projectmaster\", JSON.stringify(projectmasterclosureFileArray[0]));\r\n    formData.append(\"filecount\", acceptedFiles.length);\r\n    \r\n\r\n    let selectedId = null;\r\n    let postParam = undefined;\r\n\r\n    if (this.props.Login.operation === \"create\") {\r\n      // edit\r\n      postParam = { inputListName: \"ProjectMaster\", selectedObject: \"SelectedProjectMaster\", primaryKeyField: \"nprojectmastercode\" };\r\n      selectedId = selectedRecord[\"nprojectmastercode\"];\r\n    }\r\n    const inputParam = {\r\n      inputData: { \"userinfo\":{...this.props.Login.userInfo,\r\n        sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n        smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n         //ALPD-1826(while saving the file and link,audit trail is not captured the respective language)\r\n        slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)} },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n      classUrl: \"projectmaster\",\r\n      saveType, formRef, methodUrl: \"ProjectMasterClosureFile\", postParam,\r\n      searchRef: this.searchRef\r\n    }\r\n\r\n    return inputParam;\r\n  }\r\n\r\n  DeleteProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\r\n    const postParam = {\r\n      inputListName: \"ProjectMasterList\",\r\n      selectedObject: \"SelectedProjectMaster\",\r\n      primaryKeyField: \"nprojectmastercode\",\r\n      primaryKeyValue: selectedProjectMaster.nprojectmastercode,\r\n      fetchUrl: \"projectmaster/getActiveProjectMasterById\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n    };\r\n\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl,\r\n      postParam,\r\n      inputData: {\r\n        userinfo: this.props.Login.userInfo,\r\n        projectmaster: selectedProjectMaster,\r\n      },\r\n      operation,\r\n      isClearSearch: this.props.Login.isClearSearch,\r\n    selectedRecord:{...this.state.selectedRecord}\r\n\r\n    };\r\n\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openModal: true,\r\n          screenName: \"IDS_PROJECTMASTER\",\r\n          operation,\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n    }\r\n  };\r\n\r\n  deleteAttachment = (event, file, fieldName) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = deleteAttachmentDropZone(\r\n      selectedRecord[fieldName],\r\n      file\r\n    );\r\n\r\n    this.setState({\r\n      selectedRecord,\r\n      actionType: \"delete\",\r\n    });\r\n  };\r\n\r\n  onSaveReportInfoProject = (saveType, formRef) => {\r\n    let postParam = undefined;\r\n    let inputData =[];\r\n    const selectedRecord = this.state.selectedRecord;\r\n    postParam = {\r\n        inputListName: \"ProjectMaster\",\r\n        selectedObject: \"SelectedProjectMaster\",\r\n        primaryKeyField: \"nprojectmastercode\",\r\n    };\r\n    inputData[\"reportinfoproject\"] = {};\r\n    inputData[\"reportinfoproject\"][\"nprojectmastercode\"] =this.props.Login.masterData.SelectedProjectMaster.nprojectmastercode;\r\n    inputData[\"reportinfoproject\"][\"nprojecttypecode\"] =this.props.Login.masterData.SelectedProjectType.nprojecttypecode;\r\n    inputData[\"reportinfoproject\"][\"sreporttemplateversion\"] =selectedRecord.sreporttemplateversion;\r\n    inputData[\"reportinfoproject\"][\"srevision\"] =selectedRecord.srevision;\r\n    inputData[\"reportinfoproject\"][\"srevisionauthor\"] =selectedRecord.srevisionauthor;\r\n    inputData[\"reportinfoproject\"][\"sintroduction\"] =selectedRecord.sintroduction;\r\n    inputData[\"reportinfoproject\"][\"stestproductheadercomments\"] =selectedRecord.stestproductheadercomments;\r\n    inputData[\"reportinfoproject\"][\"stestproductfootercomments1\"] =selectedRecord.stestproductfootercomments1;\r\n    inputData[\"reportinfoproject\"][\"stestproductfootercomments2\"] =selectedRecord.stestproductfootercomments2;\r\n    inputData[\"reportinfoproject\"][\"stestproductfootercomments3\"] =selectedRecord.stestproductfootercomments3;\r\n    inputData[\"reportinfoproject\"][\"stestproductfootercomments4\"] =selectedRecord.stestproductfootercomments4;\r\n    inputData[\"reportinfoproject\"][\"ssamplingdetails\"]=selectedRecord.ssamplingdetails;\r\n    inputData[\"reportinfoproject\"][\"suncertainitymeasurement\"] =selectedRecord.suncertainitymeasurement;\r\n\r\n    inputData[\"userinfo\"]=  this.props.Login.userInfo;\r\n    let dataState = this.state.dataState;\r\n\r\n\r\n    const inputParam = {\r\n      classUrl: this.props.Login.inputParam.classUrl,\r\n      methodUrl: \"ReportInfoProject\",\r\n      displayName: this.props.Login.screenName,\r\n      inputData: inputData,\r\n      selectedId: this.state.selectedRecord[\"nprojectmastercode\"],\r\n      operation: \"update\", saveType, formRef, dataState,\r\n      searchRef: this.searchRef,\r\n      postParam: postParam\r\n  }\r\n    return inputParam;\r\n\r\n\r\n    // this.fieldprojectreportinfoList.map(item => {\r\n    //     return inputData[\"projectreportinfo\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\r\n    // })\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    let versionStatusCSS = \"outline-secondary\";\r\n    let activeIconCSS = \"fa fa-check\"\r\n\r\n\r\n    if (this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.APPROVED) {\r\n      versionStatusCSS = \"outline-success\";\r\n    }\r\n    else if (this.props.Login.masterData.SelectedProjectMaster && ((this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.RETIRED) || (this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.CLOSED))) {\r\n      versionStatusCSS = \"outline-danger\";\r\n      activeIconCSS = \"\";\r\n    }\r\n    else if (this.props.Login.masterData.SelectedProjectMaster && this.props.Login.masterData.SelectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT) {\r\n      activeIconCSS = \"\";\r\n\r\n    }\r\n\r\n    if (this.props.Login.openModal) {\r\n      this.mandatoryFields = this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord, this.props.Login.operation)\r\n    }\r\n\r\n    //console.log(\"master main\", this.props.Login.masterData);\r\n    // let mandatoryFields = [];\r\n    const { userInfo } = this.props.Login;\r\n    const addId = this.state.controlMap.has(\"AddProjectMaster\") && this.state.controlMap.get(\"AddProjectMaster\").ncontrolcode;\r\n    const editId = this.state.controlMap.has(\"EditProjectMaster\") && this.state.controlMap.get(\"EditProjectMaster\").ncontrolcode;\r\n    const deleteId = this.state.controlMap.has(\"DeleteProjectMaster\") && this.state.controlMap.get(\"DeleteProjectMaster\").ncontrolcode;\r\n    const approveId = this.state.controlMap.has(\"ApproveProjectMaster\") && this.state.controlMap.get(\"ApproveProjectMaster\").ncontrolcode;\r\n    // const addteammembersId = this.state.controlMap.has(\"AddTeamMembers\") && this.state.controlMap.get(\"AddTeamMembers\").ncontrolcode;\r\n    const retireId = this.state.controlMap.has(\"RetireProjectMaster\") && this.state.controlMap.get(\"RetireProjectMaster\").ncontrolcode;\r\n    const closureId = this.state.controlMap.has(\"ClosureProjectMaster\") && this.state.controlMap.get(\"ClosureProjectMaster\").ncontrolcode;\r\n    // const deleteteammembersId = this.state.controlMap.has(\"DeleteTeammembers\") && this.state.controlMap.get(\"DeleteTeammembers\").ncontrolcode;\r\n\r\n    const viewClosureFileId = this.state.controlMap.has(\"ViewProjectMasterClosureFile\") && this.state.controlMap.get(\"ViewProjectMasterClosureFile\").ncontrolcode;\r\n    const reportdetailId= this.state.controlMap.has(\"ReportInfoProject\")  && this.state.controlMap.get(\"ReportInfoProject\").ncontrolcode;\r\n\r\n    const fieldsForGrid = [\r\n\r\n      { \"idsName\": \"IDS_LOGINID\", \"dataField\": \"sloginid\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_USER\", \"dataField\": \"steammembername\", \"width\": \"200px\" }\r\n\r\n    ]\r\n\r\n\r\n    const { SelectedProjectMaster } = this.props.Login.masterData;\r\n    const selectedMaster = this.props.Login.masterData.SelectedProjectMaster;\r\n    const selectedProjectMaster = this.props.Login.masterData.SelectedProjectMaster;\r\n\r\n    const filterParam = {\r\n      inputListName: \"ProjectMaster\",\r\n      selectedObject: \"SelectedProjectMaster\",\r\n      primaryKeyField: \"nprojectmastercode\",\r\n      fetchUrl: \"projectmaster/getActiveProjectMasterById\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n    const breadCrumbData = this.state.filterData || [];\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n          {breadCrumbData.length > 0 ? (\r\n            <Affix top={53}>\r\n              <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n            </Affix>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Row noGutters={true}>\r\n            <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                    {!this.state.sidebarview ?\r\n                        <i class=\"fa fa-less-than\"></i> :\r\n                        <i class=\"fa fa-greater-than\"></i> \r\n                    }\r\n                </span>\r\n              <ListMaster\r\n                screenName={this.props.intl.formatMessage({ id: \"IDS_PROJECTMASTER\" })}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ProjectMaster}\r\n                getMasterDetail={(ProjectMasterdata) => this.props.getProjectMaster(ProjectMasterdata, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                selectedMaster={selectedProjectMaster}\r\n                primaryKeyField=\"nprojectmastercode\"\r\n                mainField=\"sprojecttitle\"\r\n                firstField=\"sprojectcode\"\r\n                secondField=\"sversionstatus\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                addId={addId}\r\n                searchRef={this.searchRef}\r\n                reloadData={this.reloadData}\r\n                //     openModal={() => this.props.addProjectMaster(\"create\", SelectedProjectMaster, userInfo, addId, this.state.ProjectMasterList)}\r\n                openModal={() => this.props.addProjectMaster(\"create\", SelectedProjectMaster, userInfo, addId, this.state.selectedRecordfilter, this.props.Login.masterData.SelectedProjectType)}\r\n                isMultiSelecct={false}\r\n                hidePaging={false}\r\n                isClearSearch={this.props.Login.isClearSearch}\r\n\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}\r\n                showFilterIcon={true}\r\n                showFilter={this.props.Login.showFilter}\r\n                filterComponent={[\r\n                  {\r\n                    \"IDS_PROJECTMASTERFILTER\":\r\n                      <ProjectMasterFilter\r\n                        filterProjectType={this.state.ProjectMasterList || []}\r\n                        nfilterProjectType={this.props.Login.masterData.SelectedProjectType || {}}\r\n                        onComboChange={this.onComboChange}\r\n                        selectedRecord={this.state.selectedRecordfilter || {}}\r\n                      />\r\n                  }\r\n                ]}\r\n\r\n              />\r\n            </Col>\r\n            <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n              {selectedProjectMaster ?\r\n                <ContentPanel className=\"panel-main-content\">\r\n                  <Card className=\"border-0\">\r\n                    <Card.Header>\r\n                      {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                      <Card.Title className=\"product-title-main\">\r\n                        {selectedProjectMaster.sprojecttitle}\r\n                      </Card.Title>\r\n                      <Card.Subtitle>\r\n                        <div className=\"d-flex product-category\">\r\n                          <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                            <span className={`btn btn-outlined ${versionStatusCSS} btn-sm ml-3`}>\r\n                              <i class={activeIconCSS}></i>\r\n                              {selectedProjectMaster.sversionstatus}\r\n\r\n                            </span>\r\n                          </h2>\r\n                          {/* </Col>\r\n                                                <Col md=\"4\"> */}\r\n                          {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                          <div className=\"d-inline\">\r\n                            {/* Don't delete these commented lines because additional info feature is needed for Agaram LIMS */}\r\n                            {/* Start Here */}\r\n                            {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\" >  \r\n                                                            <FontAwesomeIcon icon={faEye} className=\"ActionIconColor\" onClick={(e)=>this.viewAdditionalInfo(e)} />\r\n                                                        </Nav.Link> */}\r\n                            {/* End Here */}\r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" name=\"reportdetailstestname\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(reportdetailId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_REPORTINFOPROJECT\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={(e) => this.props.ReportInfo(\"IDS_REPORTINFOPROJECT\", \"\", \"nprojectmastercode\", this.props.Login.masterData, this.props.Login.userInfo, reportdetailId)}>\r\n                              <ReportEdit className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                            </Nav.Link>                            \r\n\r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" name=\"edittestname\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.props.addProjectMaster(\"update\", selectedProjectMaster, userInfo, editId, this.state.selectedRecordfilter, addProjectMaster)}>\r\n                              <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </Nav.Link>\r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"deletetestname\"\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                              //   data-for=\"tooltip_list_wrap\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                              onClick={() => this.ConfirmDelete(selectedProjectMaster, \"delete\", deleteId, \"ProjectMaster\")}\r\n                            >\r\n                              <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                            </Nav.Link>\r\n                            <Nav.Link name=\"approveProjectMaster\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.approveProjectMaster(\"ProjectMaster\", selectedProjectMaster, \"approve\", approveId)}>\r\n                              <FontAwesomeIcon icon={faThumbsUp} />\r\n                            </Nav.Link>\r\n                            <Nav.Link name=\"ClosureProjectMaster\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(closureId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_CLOSE\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.handleProjectMasterClosure(selectedProjectMaster)}>\r\n                              {/* <FontAwesomeIcon icon={faWindowClose} /> */}\r\n                              <Closure className=\"custom_icons\" width=\"17\" height=\"20\" />\r\n                            </Nav.Link>\r\n\r\n                            <Nav.Link name=\"retireProjectMaster\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={this.state.userRoleControlRights.indexOf(retireId) === -1}\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                              //data-for=\"tooltip_list_wrap\"\r\n                              onClick={() => this.RetireProjectMaster(\"ProjectMaster\", selectedProjectMaster, \"retire\", retireId)}\r\n                            >\r\n                              <FontAwesomeIcon icon={faUserTimes} />\r\n                            </Nav.Link>\r\n\r\n                          </div>\r\n                          {/* </Tooltip> */}\r\n                        </div>\r\n                        {/* </Col>\r\n                                            </Row> */}\r\n                      </Card.Subtitle>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"form-static-wrap\">\r\n                      <Row>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sprojectcode}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTNAME\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sprojectname}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_ROLE\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.suserrolename}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_USER\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.susername}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        {/* <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_TEAMMEMBERS\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.steammembername}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col> */}\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_RFWDATE\" })}</FormLabel>\r\n                            <ReadOnlyText>{rearrangeDateFormatDateOnly(this.props.Login.userInfo,selectedProjectMaster.srfwdate)} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_STARTDATE\" })}</FormLabel>\r\n                            <ReadOnlyText>{rearrangeDateFormatDateOnly(this.props.Login.userInfo,selectedProjectMaster.sprojectstartdate)} </ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTDURATION\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sprojectduration}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n                        {/* <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DURATIONPERIOD\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.speriodname}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>  */}\r\n\r\n                        <Col md=\"4\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_PROJECTDESCRIPTION\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sprojectdescription}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                      </Row>\r\n                      <Col md={12}>\r\n                        <div className=\"horizontal-line\"></div>\r\n                      </Col>\r\n\r\n                      <Row>\r\n\r\n                        <Col md=\"6\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_CLOSUREFILENAME\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sfilename}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md=\"1\"> \r\n                          <Nav.Link name=\"ClosureProjectMasterFile\" className=\"btn btn-circle outline-grey mr-2\"\r\n                              hidden={(this.state.userRoleControlRights.indexOf(viewClosureFileId) === -1) ? true : selectedProjectMaster.sfilename === '-' ? true : false }\r\n                              data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                              onClick={() => this.viewProjectMasterClosureFile(selectedProjectMaster, userInfo)}>\r\n                              <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                            </Nav.Link> \r\n                       </Col> \r\n\r\n                        <Col md=\"5\">\r\n                          <FormGroup>\r\n                            <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REASONFORCLOSURE\" })}</FormLabel>\r\n                            <ReadOnlyText>{selectedProjectMaster.sclosureremarks}</ReadOnlyText>\r\n                          </FormGroup>\r\n                        </Col>\r\n\r\n                      </Row>\r\n                      <Card className=\"at-tabs border-0\">\r\n                        <Row noGutters>\r\n                          <Col md={12}>\r\n                            <ProjectMasterTab\r\n                              primaryKeyField={\"nprojectmembercode\"}\r\n                              // data={this.props.Login.masterData.ProjectMember}\r\n                              data={this.state.data}\r\n                              // dataResult={this.props.Login.masterData.ProjectMember}\r\n                              dataResult={this.state.dataResult}\r\n                              masterData={this.props.Login.masterData}\r\n                              screenName={this.props.Login.screenName}\r\n                              operation={this.props.Login.operation}\r\n                              openChildModal={this.props.Login.openChildModal}\r\n                              crudMaster={this.props.crudMaster}\r\n                              errorCode={this.props.Login.errorCode}\r\n                              validateEsignCredential={this.props.validateEsignCredential}\r\n                              loadEsign={this.props.Login.loadEsign}\r\n                              showAccordian={this.state.showAccordian}\r\n                              selectedRecord={this.state.selectedRecord || {}}\r\n                              // dataState={{skip: 0, take: 10}}\r\n                              // dataState={this.props.Login.dataState}\r\n                              dataState={this.state.dataState}\r\n                              dataStateChange={this.dataStateChange}\r\n                              extractedColumnList={fieldsForGrid}\r\n                              controlMap={this.state.controlMap}\r\n                              userRoleControlRights={this.state.userRoleControlRights}\r\n                              inputParam={this.props.Login.inputParam}\r\n                              userInfo={this.props.Login.userInfo}\r\n                              //    getProjectmasterAddMemberService={(this.props.Login.screenName,this.props.Login.operation,this.props.getProjectmasterAddMemberService,this.props.Login.userInfo,this.props.Login.ncontrolCode)}\r\n                              getProjectmasterAddMemberService={this.props.getProjectmasterAddMemberService}\r\n                              // --   fetchRecord={this.props.getPricingEditService}\r\n                              //--       editParam={{...editTestPriceParam, \"updateType\":\"Single\", priceDataState:this.state.priceDataState}}\r\n                              deleteRecord={this.deleteProjectMember}\r\n                              //  deleteParam={{operation:\"delete\"}}\r\n                              methodUrl={\"Teammembers\"}\r\n                              // reloadData={this.reloadData}\r\n                              // --      addRecord = {() => this.openModal(addId)}\r\n                              pageable={true}\r\n                              onTabChange={this.onTabChange}\r\n                              updateStore={this.props.updateStore}\r\n                              scrollable={'scrollable'}\r\n                              // gridHeight = {'600px'}\r\n                              isActionRequired={true}\r\n                              isToolBarRequired={false}\r\n                              selectedId={this.props.Login.selectedId}\r\n                              viewAttachment={this.props.viewAttachment}\r\n                              MembersList={this.props.Login.MembersList}\r\n                              onComboChange={this.onComboChange}\r\n                              // File\r\n                              addProjectMasterFile={this.props.addProjectMasterFile}\r\n                              esignRights={this.props.Login.userRoleControlRights}\r\n                              ntransactionstatus={selectedProjectMaster.ntransactionstatus}\r\n                              //  selectedRecord={this.props.Login.selectedRecord}\r\n                              onDropProjectMasterFile={this.onDropProjectMasterFile}\r\n                              onInputOnChange={this.onInputOnChange}\r\n                              screenData={this.props.Login.screenData}\r\n                              deleteAttachment={this.deleteAttachment}\r\n                              ncontrolCode={this.props.Login.ncontrolCode}\r\n                              linkMaster= {this.props.Login.linkMaster}\r\n                            />\r\n                          </Col>\r\n                        </Row>\r\n                      </Card>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </ContentPanel>\r\n                : \"\"\r\n              }\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n        </div>\r\n        {/* End of get display */}\r\n\r\n        {/* Start of Modal Sideout for Test Creation */}\r\n        {this.props.Login.openModal &&\r\n          <SlideOutModal\r\n            show={this.props.Login.openModal}\r\n            //size={this.props.Login.operation===\"create\" ? \"xl\" : \"lg\" }\r\n            closeModal={this.closeModal}\r\n            operation={this.props.Login.operation}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            onSaveClick={this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            mandatoryFields={this.mandatoryFields || []}\r\n            addComponent={this.props.Login.loadEsign ?\r\n              <Esign\r\n                operation={this.props.Login.operation}\r\n                onInputOnChange={this.onInputOnChange}\r\n                inputParam={this.props.Login.inputParam}\r\n                selectedRecord={this.state.selectedRecord || {}}\r\n              />\r\n              : (this.props.Login.screenName === \"IDS_PROJECTMASTER\") ?\r\n\r\n                <AddProjectMaster\r\n\r\n                  userInfo={this.props.Login.userInfo}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  ProjectType={this.props.Login.ProjectType}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onComboChange={this.onComboChange}\r\n                  // onNumericInputOnChange={this.onNumericInputOnChange}\r\n                  onNumericInputChange={this.onNumericInputChange}\r\n\r\n                  handleDateChange={this.handleDateChange}\r\n                  Userrole={this.props.Login.Userrole}\r\n                  Users={this.props.Login.userList}\r\n                  TeamMembers={this.props.Login.TeamMembers}\r\n                  PeriodByControl={this.props.Login.PeriodByControl}\r\n                /> \r\n                : this.props.Login.screenName ===\"IDS_REPORTINFOPROJECT\" ?\r\n                    <ReportInfoProject\r\n                      userInfo={this.props.Login.userInfo}\r\n                      selectedRecord={this.state.selectedRecord || {}}\r\n                      onInputOnChange={this.onInputOnChange}\r\n                      onNumericInputChange={this.onNumericInputChange}\r\n                    /> :\r\n\r\n\r\n                this.props.Login.screenName === \"IDS_CLOSUREFILE\" ?\r\n\r\n                  <ProjectMasterClosure\r\n\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    onInputOnChange={this.onInputOnChange}\r\n                    onDrop={this.onDropProjectMasterclosureFile}\r\n                    onDropAccepted={this.onDropAccepted}\r\n                    deleteAttachment={this.deleteAttachment}\r\n                    actionType={this.state.actionType}\r\n                    onComboChange={this.onComboChange}\r\n                    linkMaster={this.props.linkMaster}\r\n                    editFiles={this.props.editFiles}\r\n                    maxSize={20}\r\n                    maxFiles={1}\r\n                    multiple={false}\r\n                    label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                    name=\"projectmasterclosurefilename\"\r\n\r\n                  ></ProjectMasterClosure> : \"\"\r\n\r\n            }\r\n          />\r\n        }\r\n        {/* End of Modal Sideout for Test Creation */}\r\n      </>\r\n    );\r\n  }\r\n\r\n  viewProjectMasterClosureFile = (selectedProjectMaster, userInfo) => {\r\n    const inputParam = {\r\n        inputData: {\r\n            projectmasterclosurefile: selectedProjectMaster,\r\n            userinfo: userInfo\r\n        },\r\n        classUrl: \"projectmaster\",\r\n        operation: \"view\",\r\n        methodUrl: \"AttachedProjectMasterClosureFile\",\r\n        screenName: \"ProjectMaster Closure File\"\r\n    }\r\n    this.props.viewAttachment(inputParam);\r\n}\r\n\r\n  findMandatoryFields(screenName, selectedRecord, operation) {\r\n    let mandatoryFields = [];\r\n    if (screenName === \"IDS_PROJECTMASTER\") {\r\n\r\n      mandatoryFields = [\r\n        { \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"nprojecttypecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_PROJECTTITLE\", \"dataField\": \"sprojecttitle\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_PROJECTCODE\", \"dataField\": \"sprojectcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_PROJECTNAME\", \"dataField\": \"sprojectname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_ROLE\", \"dataField\": \"nuserrolecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_INCHARGE\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        //{ \"idsName\": \"IDS_RFWDATE\", \"dataField\": \"drfwdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_STARTDATE\", \"dataField\": \"dprojectstartdate\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_PROJECTDURATION\", \"dataField\": \"nprojectduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_DURATIONPERIOD\", \"dataField\": \"nperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n      ]\r\n\r\n      mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\r\n      return mandatoryFields;\r\n\r\n    } else if (screenName === \"IDS_CLOSUREFILE\") {\r\n\r\n      mandatoryFields = [\r\n        { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n        { \"idsName\": \"IDS_REASONFORCLOSURE\", \"dataField\": \"sclosureremarks\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textarea\" },\r\n\r\n      ]\r\n\r\n      mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\r\n      return mandatoryFields;\r\n    }else if(screenName === \"IDS_REPORTINFOPROJECT\"){\r\n      mandatoryFields = [\r\n        { \"idsName\": \"IDS_REPORTTEMPLATEVERSION\", \"dataField\": \"sreporttemplateversion\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_REVISION\", \"dataField\": \"srevision\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_REVISIONAUTHOR\", \"dataField\": \"srevisionauthor\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_INTRODUCTION\", \"dataField\": \"sintroduction\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_TESTPRODUCTHEADERCOMMENTS\", \"dataField\": \"stestproductheadercomments\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS1\", \"dataField\": \"stestproductfootercomments1\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS2\", \"dataField\": \"stestproductfootercomments2\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS3\", \"dataField\": \"stestproductfootercomments3\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_TESTPRODUCTFOOTERCOMMENTS4\", \"dataField\": \"stestproductfootercomments4\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_SAMPLINGDETAILS\", \"dataField\": \"ssamplingdetails\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_UNCERTAINITYOFMEASUREMENT\", \"dataField\": \"suncertainitymeasurement\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n\r\n      ] \r\n      //mandatoryFields.forEach(item => item.mandatory === true && mandatoryFields.push(item));\r\n      return mandatoryFields; \r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  onComboChange = (comboData, fieldName, caseNo) => {\r\n\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    switch (caseNo) {\r\n      case 1:\r\n        // const selectedRecord = this.state.selectedRecord || {};\r\n        if (selectedRecord.nuserrolecode) {\r\n          if (parseInt(comboData.value) !== parseInt(selectedRecord.nuserrolecode.value)) {\r\n            // selectedRecord.nusercode={};\r\n            delete (selectedRecord.nusercode);\r\n          }\r\n        }\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        selectedRecord[\"suserrolename\"] = comboData.item[\"suserrolename\"];\r\n        this.props.getuserComboServices({\r\n\r\n          inputData: {\r\n            userinfo: this.props.Login.userInfo,\r\n            sdisplayname: selectedRecord.nuserrolecode.label,\r\n            primarykey: selectedRecord.nuserrolecode.value,\r\n          }\r\n\r\n        }, selectedRecord);\r\n\r\n\r\n        // this.setState({ selectedRecord });\r\n\r\n        break;\r\n\r\n      case 2:\r\n        // let nfilterProjectType = this.state.nfilterProjectType || {}\r\n        // nfilterProjectType = comboData;\r\n        const selectedRecordfilter = this.state.selectedRecordfilter || {};\r\n        selectedRecordfilter[fieldName] = comboData;\r\n        this.setState({ selectedRecordfilter });\r\n        break;\r\n\r\n      case 3:\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  onDropProjectMasterFile = (attachedFiles, fieldName, maxSize) => {\r\n\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  }\r\n\r\n  onInputOnChange = (event, optional) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (event.target.type === 'checkbox') {\r\n      if (event.target.name === \"ntransactionstatus\")\r\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n      // else if (event.target.name === \"nlockmode\")\r\n      //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n      else\r\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n    }\r\n    else if (event.target.type === 'radio') {\r\n      selectedRecord[event.target.name] = optional;\r\n    }\r\n    else {\r\n      selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n  }\r\n\r\n  deleteProjectMember = (deleteParam) => {\r\n    const inputParam = {\r\n      classUrl: \"projectmaster\",\r\n      methodUrl: \"ProjectMember\",\r\n      //displayName: ,\r\n      inputData: {\r\n        \"projectmember\": deleteParam.selectedRecord,//.dataItem,\r\n        \"nprojectmembercode\": deleteParam.selectedRecord.nprojectmembercode,\r\n        \"userinfo\": this.props.Login.userInfo\r\n      },\r\n      operation: \"delete\",\r\n      selectedRecord:{...this.state.selectedRecord}\r\n\r\n      // priceDataState:this.state.priceDataState\r\n    }\r\n\r\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n          openChildModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_MEMBERS\" }),\r\n          operation: deleteParam.operation\r\n        }\r\n      }\r\n      this.props.updateStore(updateInfo);\r\n    }\r\n    else {\r\n      this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n  }\r\n\r\n  onDropProjectMasterclosureFile = (attachedFiles, fieldName, maxSize) => {\r\n\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  }\r\n\r\n  /* onNumericInputChange = (value, name) => {\r\n    console.log(\"value:\", value, name);\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if (name === \"nroundingdigits\") {\r\n        \r\n        if (/^-?\\d*?$/.test(value.target.value) || value.target.value === \"\") {\r\n            console.log(\"val:\", value.target.value);\r\n            selectedRecord[name] = value.target.value;\r\n        }\r\n    }\r\n    else {\r\n        selectedRecord[name] = value;\r\n    }\r\n  \r\n    this.setState({ selectedRecord });\r\n  } */\r\n\r\n  onNumericInputChange = (value, name) => {\r\n\r\n    console.log(\"value:\", value, name);\r\n\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n\r\n    if (name === \"nprojectduration\") {\r\n\r\n      if (/^[0-9]+$/.test(value.target.value) || value.target.value === \"\") {\r\n\r\n        selectedRecord[name] = value.target.value;\r\n      } else {\r\n\r\n        selectedRecord[name] = \"\";\r\n      }\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      selectedRecord[name] = value;\r\n    }\r\n    this.setState({ selectedRecord });\r\n\r\n  }\r\n\r\n  approveProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\r\n    if (selectedProjectMaster.ntransactionstatus === transactionStatus.DRAFT) {\r\n\r\n      const postParam = {\r\n        inputListName: \"ProjectMaster\",\r\n        selectedObject: \"SelectedProjectMaster\",\r\n        primaryKeyField: \"nprojectmastercode\",\r\n        primaryKeyValue: selectedProjectMaster.nprojectmastercode,\r\n        fetchUrl: \"projectmaster/getProjectMaster\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      };\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl, postParam,\r\n        inputData: {\r\n          \"userinfo\": this.props.Login.userInfo,\r\n          \"projectmaster\": selectedProjectMaster\r\n        },\r\n        operation,\r\n        isClearSearch: this.props.Login.isClearSearch,\r\n        selectedRecord:{...this.state.selectedRecord}\r\n\r\n      }\r\n\r\n      const masterData = this.props.Login.masterData;\r\n\r\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true, screenData: { inputParam, masterData },\r\n            openModal: true, screenName: \"IDS_PROJECTMASTER\", operation\r\n          }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n      }\r\n      else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n    else {\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }));\r\n    }\r\n\r\n  }\r\n\r\n  RetireProjectMaster = (methodUrl, selectedProjectMaster, operation, ncontrolCode) => {\r\n    if (selectedProjectMaster.ntransactionstatus === transactionStatus.CLOSED) {\r\n\r\n      const postParam = {\r\n        inputListName: \"ProjectMaster\",\r\n        selectedObject: \"SelectedProjectMaster\",\r\n        primaryKeyField: \"nprojectmastercode\",\r\n        primaryKeyValue: selectedProjectMaster.nprojectmastercode,\r\n        fetchUrl: \"projectmaster/getProjectMaster\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      };\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl, postParam,\r\n        inputData: {\r\n          \"userinfo\": this.props.Login.userInfo,\r\n          \"projectmaster\": selectedProjectMaster\r\n        },\r\n        operation,\r\n        isClearSearch: this.props.Login.isClearSearch\r\n      }\r\n\r\n      const masterData = this.props.Login.masterData;\r\n\r\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true, screenData: { inputParam, masterData },\r\n            openModal: true, screenName: \"IDS_PROJECTMASTER\", operation\r\n          }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n      }\r\n      else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n    else {\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTCLOSEDVERSION\" }));\r\n    }\r\n\r\n  }\r\n  onTabChange = (tabProps) => {\r\n    const screenName = tabProps.screenName;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { screenName },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onDropTestFile = (attachedFiles, fieldName, maxSize) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(\r\n      selectedRecord[fieldName],\r\n      attachedFiles,\r\n      maxSize\r\n    );\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  };\r\n  /*\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(\r\n        this.props.Login.masterData[\"selectedSection\"],\r\n        event.dataState\r\n      ),\r\n      sectionDataState: event.dataState,\r\n    });\r\n  };\r\n*/\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(this.state.data, event.dataState),\r\n      dataState: event.dataState\r\n    });\r\n  }\r\n\r\n\r\n  /*\r\n    tabDetail = () => {\r\n      const tabMap = new Map();\r\n      const deleteSecId =\r\n        this.state.controlMap.has(\"DeleteSection\") &&\r\n        this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\r\n      const defaultSecId =\r\n        this.state.controlMap.has(\"DefaultSection\") &&\r\n        this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\r\n      tabMap.set(\r\n        \"IDS_SECTION\",\r\n        <InstrumentSectionTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          dataState={this.props.Login.dataState}\r\n          masterData={this.props.Login.masterData[\"selectedSection\"] || []}\r\n          selectedProjectMaster={this.props.Login.masterData.selectedProjectMaster}\r\n          userInfo={this.props.Login.userInfo}\r\n          inputParam={this.props.Login.inputParam}\r\n          deleteRecord={this.DeleteInstrument}\r\n          deleteSecId={deleteSecId}\r\n          defaultSecId={defaultSecId}\r\n          defaultRecord={this.defaultRecord}\r\n          getAvailableInstData={this.props.getAvailableInstData}\r\n          InstrumentSection={this.props.Login.masterData.selectedSection || []}\r\n          screenName=\"IDS_SECTION\"\r\n          selectedRecord={this.state.selectedRecord}\r\n          settings={this.props.Login.settings}\r\n        />\r\n      );\r\n      tabMap.set(\r\n        \"IDS_INSTRUMENTVALIDATION\",\r\n        <InstrumentValidationTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          selectedProjectMaster={this.props.Login.masterData.selectedProjectMaster}\r\n          FileData={this.props.Login.masterData.ValidationFileData}\r\n          InstrumentValidation={this.props.Login.masterData.InstrumentValidation}\r\n          masterData={this.props.Login.masterData}\r\n          userInfo={this.props.Login.userInfo}\r\n          getDataForAddEditValidation={this.props.getDataForAddEditValidation}\r\n          inputParam={this.props.inputParam}\r\n          selectedRecord={this.state.selectedRecord}\r\n          deleteRecord={this.DeleteInstrument}\r\n          deleteTabFileRecord={this.deleteTabFileRecord}\r\n          getTabDetails={this.props.getTabDetails}\r\n          addInstrumentFile={this.props.addInstrumentFile}\r\n          deleteAction={this.props.deleteAction}\r\n          ConfirmDelete={this.ConfirmDelete}\r\n          getDataForEdit={this.props.getDataForEdit}\r\n          addfilecllick={this.addInstrumentFile}\r\n          viewInstrumentFile={this.viewInstrumentFile}\r\n          screenName=\"IDS_INSTRUMENTVALIDATION\"\r\n        />\r\n      );\r\n      tabMap.set(\r\n        \"IDS_INSTRUMENTCALIBRATION\",\r\n        <InstrumentCalibrationTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          selectedProjectMaster={this.props.Login.masterData.selectedProjectMaster}\r\n          FileData={this.props.Login.masterData.CalibrationFileData}\r\n          InstrumentCalibration={\r\n            this.props.Login.masterData.InstrumentCalibration\r\n          }\r\n          masterData={this.props.Login.masterData}\r\n          userInfo={this.props.Login.userInfo}\r\n          getDataForAddEditCalibration={this.props.getDataForAddEditCalibration}\r\n          inputParam={this.props.inputParam}\r\n          selectedRecord={this.state.selectedRecord}\r\n          deleteRecord={this.DeleteInstrument}\r\n          deleteTabFileRecord={this.deleteTabFileRecord}\r\n          getTabDetails={this.props.getTabDetails}\r\n          viewInstrumentFile={this.viewInstrumentFile}\r\n          addInstrumentFile={this.props.addInstrumentFile}\r\n          addfilecllick={this.addInstrumentCalibrationFile}\r\n          deleteAction={this.props.deleteAction}\r\n          ConfirmDelete={this.ConfirmDelete}\r\n          addOpenDate={this.props.addOpenDate}\r\n          OpenDate={this.props.OpenDate}\r\n          CloseDate={this.props.CloseDate}\r\n          screenName=\"IDS_INSTRUMENTCALIBRATION\"\r\n        />\r\n      );\r\n      tabMap.set(\r\n        \"IDS_INSTRUMENTMAINTENANCE\",\r\n        <InstrumentMaintenanceTab\r\n          controlMap={this.state.controlMap}\r\n          userRoleControlRights={this.state.userRoleControlRights}\r\n          selectedProjectMaster={this.props.Login.masterData.selectedProjectMaster}\r\n          FileData={this.props.Login.masterData.MaintenanceFileData}\r\n          InstrumentMaintenance={\r\n            this.props.Login.masterData.InstrumentMaintenance\r\n          }\r\n          masterData={this.props.Login.masterData}\r\n          userInfo={this.props.Login.userInfo}\r\n          getDataForAddEditMaintenance={this.props.getDataForAddEditMaintenance}\r\n          inputParam={this.props.inputParam}\r\n          selectedRecord={this.state.selectedRecord}\r\n          viewInstrumentFile={this.viewInstrumentFile}\r\n          deleteRecord={this.DeleteInstrument}\r\n          deleteTabFileRecord={this.deleteTabFileRecord}\r\n          getTabDetails={this.props.getTabDetails}\r\n          addInstrumentFile={this.props.addInstrumentFile}\r\n          addfilecllick={this.addInstrumentMaintenanceFile}\r\n          deleteAction={this.props.deleteAction}\r\n          ConfirmDelete={this.ConfirmDelete}\r\n          addOpenDate={this.props.addOpenDate}\r\n          OpenDate={this.props.OpenDate}\r\n          CloseDate={this.props.CloseDate}\r\n          screenName=\"IDS_INSTRUMENTMAINTENANCE\"\r\n        />\r\n      );\r\n  \r\n      return tabMap;\r\n    }; */\r\n\r\n  ConfirmDelete = (selectedProjectMaster, operation, deleteId, screenName) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.DeleteProjectMaster(\r\n          screenName,\r\n          selectedProjectMaster,\r\n          operation,\r\n          deleteId\r\n\r\n        )\r\n    );\r\n  };\r\n\r\n\r\n\r\n  reloadData = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    // if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\r\n      if ( this.props.Login.masterData.SelectedProjectType !== undefined) {\r\n    if (Object.values(this.props.Login.masterData.SelectedProjectType).length && this.props.Login.masterData.SelectedProjectType !== undefined) {\r\n      let inputParam = {\r\n        inputData: {\r\n          // nprojecttypecode: this.state.selectedRecord.nprojecttypecode.value,\r\n          nprojecttypecode: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n          userinfo: this.props.Login.userInfo,\r\n          // nfilterProjectType: this.state.selectedRecord.nprojecttypecode,\r\n          nfilterProjectType: this.props.Login.masterData.SelectedProjectType,\r\n        },\r\n        classUrl: \"projectmaster\",\r\n        methodUrl: \"ProjectMasterByProjectType\",\r\n      };\r\n\r\n      this.props.changeProjectTypeFilter(inputParam, this.props.Login.masterData.filterProjectType);\r\n    }\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_PROJECTTYPENOTAVAILABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n\r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let selectedRecord = this.state.selectedRecord;\r\n//    let selectedRecord = this.state.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\" || this.props.Login.operation === \"retire\") {\r\n            loadEsign = false;\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        else {\r\n            loadEsign = false;\r\n            selectedRecord['esignpassword'] = '';\r\n            selectedRecord['esigncomments'] = '';\r\n            selectedRecord['esignreason'] = '';\r\n        } \r\n    }\r\n    else {\r\n        openModal = false;\r\n        selectedRecord = {};\r\n    }\r\n\r\n    const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { openModal, loadEsign, selectedRecord }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n\r\n}\r\n\r\n  componentDidUpdate(previousProps) {\r\n    let updateState = false;\r\n    let {\r\n      selectedRecord,\r\n      selectedRecordfilter,\r\n      userRoleControlRights,\r\n      controlMap,\r\n      filterData,\r\n      nfilterProjectType,\r\n      filterProjectType,\r\n\r\n    } = this.state;\r\n\r\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n      selectedRecord = this.props.Login.selectedRecord;\r\n      updateState = true;\r\n      this.setState({ selectedRecord, selectedRecordfilter });\r\n    }\r\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n      userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      this.setState({ controlMap, userRoleControlRights, data: this.props.Login.masterData.ProjectMember,\r\n        dataResult: process(this.props.Login.masterData.ProjectMember || [], this.state.dataState) });\r\n      //   updateState = true;\r\n    }\r\n\r\n    let nprojecttypecode = this.state.nfilterProjectType || {};\r\n\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n      nfilterProjectType = this.state.nfilterProjectType || {};\r\n\r\n      const filterProjectType = constructOptionList(this.props.Login.masterData.filterProjectType || [], \"nprojecttypecode\",\r\n        \"sprojecttypename\", undefined, undefined, undefined);\r\n\r\n      let ProjectMasterList = filterProjectType.get(\"OptionList\");\r\n      nprojecttypecode = ProjectMasterList[0];\r\n      selectedRecordfilter = { nprojecttypecodevalue: nprojecttypecode }\r\n      selectedRecord = { nprojecttypecodevalue: nprojecttypecode }\r\n      // nfilterProjectType = this.props.Login.masterData.nfilterProjectType;\r\n      this.setState({\r\n        ProjectMasterList,\r\n        selectedRecordfilter, selectedRecord , data: this.props.Login.masterData.ProjectMember, dataState :{skip : 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5},\r\n        dataResult: process(this.props.Login.masterData.ProjectMember || [], {skip : 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5})\r\n      });\r\n\r\n      if (this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\r\n        nfilterProjectType = {\r\n          label: this.props.Login.masterData.SelectedProjectType.sprojecttypename,\r\n          value: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n          item: this.props.Login.masterData.SelectedProjectType,\r\n        };\r\n      }\r\n      //  selectedRecordfilter = {nprojecttypecodevalue:nfilterProjectType}\r\n      filterData = this.generateBreadCrumData();\r\n      updateState = true;\r\n      this.setState({ filterData, selectedRecordfilter });\r\n    }\r\n\r\n    if (this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\r\n\r\n      let nprojecttypecodevalue = this.props.Login.masterData.SelectedProjectType ?\r\n        {\r\n          label: this.props.Login.masterData.SelectedProjectType.sprojecttypename,\r\n          value: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n          item: this.props.Login.masterData.SelectedProjectType\r\n        } : \"\"\r\n      //  nprojecttypecode=ProjectMasterList[ProjectMasterList.length-1];\r\n      selectedRecordfilter = { nprojecttypecodevalue }\r\n      selectedRecord = { nprojecttypecodevalue: nprojecttypecode }\r\n      // nfilterProjectType = this.props.Login.masterData.nfilterProjectType;\r\n      this.setState({\r\n        selectedRecordfilter, selectedRecord\r\n\r\n      });\r\n\r\n    }\r\n\r\n    // if (this.props.Login.masterData.nfilterProjectType !== previousProps.Login.masterData.nfilterProjectType) {\r\n\r\n    // }\r\n\r\n  }\r\n  generateBreadCrumData() {\r\n    const breadCrumbData = [];\r\n    if (this.props.Login.masterData && this.props.Login.masterData.SelectedProjectType) {\r\n\r\n      breadCrumbData.push({\r\n        label: \"IDS_PROJECTTYPE\",\r\n        value: this.props.Login.masterData.SelectedProjectType\r\n          ? this.props.Login.masterData.SelectedProjectType.sprojecttypename\r\n          : \"NA\",\r\n      });\r\n\r\n    } else if (this.props.Login.masterData && this.props.Login.masterData.SelectedProjectMaster) {\r\n\r\n      /*    breadCrumbData.push({\r\n            label: \"IDS_PROJECTTYPE\",\r\n            value: this.state.selectedRecord.nprojecttypecode\r\n              ? this.state.selectedRecord.nprojecttypecode.label\r\n              : \"NA\",\r\n          }); */\r\n\r\n      breadCrumbData.push({\r\n        label: \"IDS_PROJECTTYPE\",\r\n        value: this.props.Login.masterData.SelectedProjectMaster\r\n          ? this.props.Login.masterData.SelectedProjectMaster.sprojecttypename\r\n          : \"NA\",\r\n      });\r\n\r\n    } else {\r\n\r\n      /*       breadCrumbData.push({\r\n             label: \"IDS_PROJECTTYPE\",\r\n             value:  this.state.selectedRecord.nprojecttypecodevalue\r\n               ? this.state.selectedRecord.nprojecttypecodevalue.label\r\n               : \"NA\",\r\n           }); */\r\n\r\n      breadCrumbData.push({\r\n        label: \"IDS_PROJECTTYPE\",\r\n        value: this.props.Login.masterData.nfilterProjectType\r\n          ? this.props.Login.masterData.nfilterProjectType.label\r\n          : \"NA\",\r\n      });\r\n\r\n    }\r\n    return breadCrumbData;\r\n  }\r\n\r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  closeFilter = () => {\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter: false },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onFilterSubmit = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    // if (this.state.nfilterProjectType.value) {\r\n    // if (this.state.selectedRecord.nprojecttypecodevalue.value) {\r\n    //if ((this.state.selectedRecord).length>0) {\r\n\r\n   // if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\r\n     \r\n      if ( this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\r\n        if (Object.values(this.state.selectedRecordfilter.nprojecttypecodevalue).length && this.state.selectedRecordfilter.nprojecttypecodevalue !== undefined) {\r\n        let inputParam = {\r\n        inputData: {\r\n          nprojecttypecode: this.state.selectedRecordfilter.nprojecttypecodevalue.value,\r\n          userinfo: this.props.Login.userInfo,\r\n          // nfilterProjectType: this.state.nfilterProjectType,\r\n          nfilterProjectType: this.state.selectedRecordfilter.nprojecttypecodevalue,\r\n        },\r\n        classUrl: \"projectmaster\",\r\n        methodUrl: \"ProjectMasterByProjectType\",\r\n      };\r\n      this.props.changeProjectTypeFilter(\r\n        inputParam,\r\n        this.props.Login.masterData.filterProjectType\r\n      );\r\n     }\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_PROJECTTYPENOTAVAILABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  filterColumnData,\r\n  updateStore,\r\n  validateEsignCredential,\r\n  changeProjectTypeFilter,\r\n  viewAttachment, addProjectMaster,ReportInfo, getProjectMaster, getProjectmasterAddMemberService, addProjectMasterFile, getuserComboServices\r\n})(injectIntl(ProjectMaster));\r\n"]},"metadata":{},"sourceType":"module"}