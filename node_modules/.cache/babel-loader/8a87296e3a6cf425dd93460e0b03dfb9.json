{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{ListWrapper}from'../components/client-group.styles';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,updateStore,validateEsignCredential,getSubSampleBySample}from'../actions';import Esign from'../pages/audittrail/Esign';import{DEFAULT_RETURN}from'../actions/LoginTypes';//import SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\n//import AddMethod from './AddMethod';\nimport{showEsign,getControlMap}from'../components/CommonScript';import{transactionStatus}from'../components/Enumeration';import DataGridWithMultipleGrid from'../components/data-grid/DataGridWithMultipleGrid';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var COARelease=/*#__PURE__*/function(_React$Component){_inherits(COARelease,_React$Component);var _super=_createSuper(COARelease);function COARelease(props){var _this;_classCallCheck(this,COARelease);_this=_super.call(this,props);_this.handleExpandChange=function(row,dataState){var viewParam={nsitecode:-1,userInfo:_this.props.Login.userInfo,primaryKeyField:\"npreregno\",masterData:_this.props.Login.masterData};_this.props.getSubSampleBySample(_objectSpread(_objectSpread({},viewParam),{},{dataState:dataState,primaryKeyValue:row[\"dataItem\"][viewParam.primaryKeyField],viewRow:row[\"dataItem\"]}));};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.reloadData=function(){var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"coarelease\",methodUrl:\"COARelease\",displayName:_this.props.Login.inputParam.displayName,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:_dataState,userRoleControlRights:[],controlMap:new Map()};_this.extractedColumnList=[{\"idsName\":\"IDS_ARNO\",\"dataField\":\"sarno\",\"width\":\"200px\"},{\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"Specimen Type\",\"width\":\"200px\"},{\"idsName\":\"IDS_PRODUCTCATEGORY\",\"dataField\":\"Specimen Category\",\"width\":\"200px\"},{\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"200px\"}];_this.roleColumnList=[{\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_SAMPLENAME\",\"dataField\":\"Sample Name\",\"width\":\"100px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_CONTAINERTYPE\",\"dataField\":\"Container Type\",\"width\":\"100px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];return _this;}_createClass(COARelease,[{key:\"render\",value:function render(){console.log(\"child\",this.props.Login.releaseSubSample);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGridWithMultipleGrid,{data:this.state.data,dataResult:this.state.dataResult,dataResult1:this.props.Login.releaseSubSample,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,expandField:\"expanded\",handleExpandChange:this.handleExpandChange,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,pageable:true,scrollable:'scrollable',gridHeight:'600px',isActionRequired:true,isToolBarRequired:true,selectedId:this.props.Login.selectedId,hasChild:true,hasSubChild:true,childColumnList:this.roleColumnList,childMappingField:\"npreregno\",childList:this.props.Login.releaseSubSample||new Map()}):\"\"))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.data||this.props.Login.masterData.releaseSubSample||[],this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,selectedRecord:this.props.Login.selectedRecord,dataResult:process(this.props.Login.masterData,this.props.Login.dataState||dataState),//  dataResult1: process(this.props.Login.releaseSubSample, this.props.Login.dataState || dataState),\ndataState:dataState});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return COARelease;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential,getSubSampleBySample:getSubSampleBySample})(injectIntl(COARelease));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/COARelease.jsx"],"names":["React","ListWrapper","Row","Col","toast","process","connect","injectIntl","callService","crudMaster","updateStore","validateEsignCredential","getSubSampleBySample","Esign","DEFAULT_RETURN","showEsign","getControlMap","transactionStatus","DataGridWithMultipleGrid","mapStateToProps","state","Login","COARelease","props","handleExpandChange","row","dataState","viewParam","nsitecode","userInfo","primaryKeyField","masterData","primaryKeyValue","viewRow","dataStateChange","event","setState","dataResult","data","closeModal","loadEsign","openModal","selectedRecord","operation","updateInfo","typeName","selectedId","reloadData","inputParam","inputData","classUrl","methodUrl","displayName","validateEsign","sreason","password","screenData","formRef","createRef","skip","take","settings","parseInt","masterStatus","error","userRoleControlRights","controlMap","Map","extractedColumnList","roleColumnList","console","log","releaseSubSample","previousProps","nformcode","Object","values","map","item","push","ncontrolcode","undefined","warn","Component"],"mappings":"yxBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,WAAR,KAA0B,mCAA1B,CACA,OAAQC,GAAR,CAAaC,GAAb,KAAuB,iBAAvB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,OAAT,KAAwB,4BAAxB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,WAAT,CAAsBC,UAAtB,CAAiCC,WAAjC,CAA8CC,uBAA9C,CAAsEC,oBAAtE,KAAkG,YAAlG,CAGA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA;AACA;AAEA,OAAQC,SAAR,CAAmBC,aAAnB,KAAuC,4BAAvC,CACA,OAAQC,iBAAR,KAAgC,2BAAhC,CACA,MAAOC,CAAAA,wBAAP,KAAqC,kDAArC,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAQ,CAAEC,KAAK,CAAED,KAAK,CAACC,KAAf,CAAR,CACH,CAFD,C,GAIMC,CAAAA,U,oHAEF,oBAAYC,KAAZ,CAAkB,4CACd,uBAAMA,KAAN,EADc,MA+BlBC,kBA/BkB,CA+BG,SAACC,GAAD,CAAMC,SAAN,CAAoB,CACrC,GAAMC,CAAAA,SAAS,CAAG,CACdC,SAAS,CAAE,CAAC,CADE,CAEdC,QAAQ,CAAE,MAAKN,KAAL,CAAWF,KAAX,CAAiBQ,QAFb,CAEuBC,eAAe,CAAE,WAFxC,CAGdC,UAAU,CAAE,MAAKR,KAAL,CAAWF,KAAX,CAAiBU,UAHf,CAAlB,CAMA,MAAKR,KAAL,CAAWX,oBAAX,gCACOe,SADP,MACkBD,SAAS,CAATA,SADlB,CAEIM,eAAe,CAAEP,GAAG,CAAC,UAAD,CAAH,CAAgBE,SAAS,CAACG,eAA1B,CAFrB,CAEiEG,OAAO,CAAER,GAAG,CAAC,UAAD,CAF7E,IAKH,CA3CiB,OA4ClBS,eA5CkB,CA4CA,SAACC,KAAD,CAAW,CACzB,MAAKC,QAAL,CAAc,CACVC,UAAU,CAAEhC,OAAO,CAAC,MAAKe,KAAL,CAAWkB,IAAZ,CAAkBH,KAAK,CAACT,SAAxB,CADT,CAEVA,SAAS,CAAES,KAAK,CAACT,SAFP,CAAd,EAIH,CAjDiB,OAmDlBa,UAnDkB,CAmDL,UAAM,CACf,GAAIC,CAAAA,SAAS,CAAG,MAAKjB,KAAL,CAAWF,KAAX,CAAiBmB,SAAjC,CACA,GAAIC,CAAAA,SAAS,CAAG,MAAKlB,KAAL,CAAWF,KAAX,CAAiBoB,SAAjC,CACA,GAAIC,CAAAA,cAAc,CAAG,MAAKnB,KAAL,CAAWF,KAAX,CAAiBqB,cAAtC,CACA,GAAI,MAAKnB,KAAL,CAAWF,KAAX,CAAiBmB,SAArB,CAA+B,CAC3B,GAAI,MAAKjB,KAAL,CAAWF,KAAX,CAAiBsB,SAAjB,GAA+B,QAAnC,CAA4C,CACxCH,SAAS,CAAG,KAAZ,CACAC,SAAS,CAAI,KAAb,CACAC,cAAc,CAAG,EAAjB,CACH,CAJD,IAKI,CACAF,SAAS,CAAG,KAAZ,CACH,CACJ,CATD,IAUI,CACAC,SAAS,CAAI,KAAb,CACAC,cAAc,CAAE,EAAhB,CACH,CAED,GAAME,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE/B,cADK,CAEfwB,IAAI,CAAE,CAACG,SAAS,CAATA,SAAD,CAAYD,SAAS,CAATA,SAAZ,CAAuBE,cAAc,CAAdA,cAAvB,CAAuCI,UAAU,CAAC,IAAlD,CAFS,CAAnB,CAIA,MAAKvB,KAAL,CAAWb,WAAX,CAAuBkC,UAAvB,EAEH,CA5EiB,OA6KlBG,UA7KkB,CA6KL,UAAK,CACd,GAAMC,CAAAA,UAAU,CAAG,CACHC,SAAS,CAAG,CAAC,WAAW,MAAK1B,KAAL,CAAWF,KAAX,CAAiBQ,QAA7B,CADT,CAEHqB,QAAQ,CAAE,YAFP,CAGHC,SAAS,CAAE,YAHR,CAIHC,WAAW,CAAC,MAAK7B,KAAL,CAAWF,KAAX,CAAiB2B,UAAjB,CAA4BI,WAJrC,CAKHvB,QAAQ,CAAE,MAAKN,KAAL,CAAWF,KAAX,CAAiBQ,QALxB,CAAnB,CAOA,MAAKN,KAAL,CAAWf,WAAX,CAAuBwC,UAAvB,EACH,CAtLiB,OAyLlBK,aAzLkB,CAyLF,UAAK,CACjB,GAAML,CAAAA,UAAU,CAAG,CACKC,SAAS,CAAE,CAAC,0CAAgB,MAAK1B,KAAL,CAAWF,KAAX,CAAiBQ,QAAjC,MACYyB,OAAO,CAAE,MAAKlC,KAAL,CAAWsB,cAAX,CAA0B,eAA1B,CADrB,EAAD,CAEEa,QAAQ,CAAG,MAAKnC,KAAL,CAAWsB,cAAX,CAA0B,eAA1B,CAFb,CADhB,CAKKc,UAAU,CAAG,MAAKjC,KAAL,CAAWF,KAAX,CAAiBmC,UALnC,CAAnB,CAOA,MAAKjC,KAAL,CAAWZ,uBAAX,CAAmCqC,UAAnC,CAA+C,WAA/C,EACH,CAlMiB,CAEd,MAAKS,OAAL,CAAezD,KAAK,CAAC0D,SAAN,EAAf,CAEA,GAAMhC,CAAAA,UAAS,CAAG,CACdiC,IAAI,CAAE,CADQ,CAEdC,IAAI,CAAE,MAAKrC,KAAL,CAAWF,KAAX,CAAiBwC,QAAjB,CAA4BC,QAAQ,CAAC,MAAKvC,KAAL,CAAWF,KAAX,CAAiBwC,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CAF9D,CAAlB,CAIA,MAAKzC,KAAL,CAAa,CACTkB,IAAI,CAAC,EADI,CACAyB,YAAY,CAAC,EADb,CACiBC,KAAK,CAAC,EADvB,CAC2BtB,cAAc,CAAC,EAD1C,CAETL,UAAU,CAAE,EAFH,CAGTX,SAAS,CAAEA,UAHF,CAITuC,qBAAqB,CAAC,EAJb,CAKTC,UAAU,CAAE,GAAIC,CAAAA,GAAJ,EALH,CAAb,CAQA,MAAKC,mBAAL,CAA0B,CAClB,CAAC,UAAU,UAAX,CAAsB,YAAY,OAAlC,CAA0C,QAAQ,OAAlD,CADkB,CAEE,CAAC,UAAU,aAAX,CAAyB,YAAY,eAArC,CAAqD,QAAQ,OAA7D,CAFF,CAIE,CAAC,UAAU,qBAAX,CAAiC,YAAY,mBAA7C,CAAiE,QAAQ,OAAzE,CAJF,CAKE,CAAC,UAAU,YAAX,CAAwB,YAAY,qBAApC,CAA0D,QAAQ,OAAlE,CALF,CAA1B,CAQA,MAAKC,cAAL,CAAsB,CAAC,CAAE,UAAW,gBAAb,CAA+B,YAAa,aAA5C,CAA2D,QAAS,OAApE,CAA6E,iBAAiB,YAA9F,CAA4G,cAAe,WAA3H,CAAD,CACM,CAAE,UAAW,gBAAb,CAA+B,YAAa,aAA5C,CAA2D,QAAS,OAApE,CAA8E,iBAAiB,YAA/F,CAA6G,cAAe,WAA5H,CADN,CAEM,CAAE,UAAW,mBAAb,CAAkC,YAAa,gBAA/C,CAAiE,QAAS,OAA1E,CAAoF,iBAAiB,YAArG,CAAmH,cAAe,WAAlI,CAFN,CAAtB,CAxBc,aA8BjB,C,6CA+DD,iBAAQ,CACZC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAoB,KAAKhD,KAAL,CAAWF,KAAX,CAAiBmD,gBAArC,EACI,mBACI,qDACA,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,WAAD,EAAa,SAAS,CAAC,qBAAvB,EAGK,KAAKpD,KAAL,CAAWkB,IAAX,cACG,oBAAC,wBAAD,EACI,IAAI,CAAI,KAAKlB,KAAL,CAAWkB,IADvB,CAEI,UAAU,CAAI,KAAKlB,KAAL,CAAWiB,UAF7B,CAGI,WAAW,CAAI,KAAKd,KAAL,CAAWF,KAAX,CAAiBmD,gBAHpC,CAII,SAAS,CAAI,KAAKpD,KAAL,CAAWM,SAJ5B,CAKI,eAAe,CAAI,KAAKQ,eAL5B,CAMI,mBAAmB,CAAI,KAAKkC,mBANhC,CAOE,WAAW,CAAC,UAPd,CAQE,kBAAkB,CAAE,KAAK5C,kBAR3B,CASI,UAAU,CAAI,KAAKuB,UATvB,CAUI,UAAU,CAAI,KAAK3B,KAAL,CAAW8C,UAV7B,CAWI,qBAAqB,CAAE,KAAK9C,KAAL,CAAW6C,qBAXtC,CAYI,UAAU,CAAE,KAAK1C,KAAL,CAAWF,KAAX,CAAiB2B,UAZjC,CAaI,QAAQ,CAAI,KAAKzB,KAAL,CAAWF,KAAX,CAAiBQ,QAbjC,CAcI,QAAQ,CAAE,IAdd,CAeI,UAAU,CAAE,YAfhB,CAgBI,UAAU,CAAI,OAhBlB,CAiBI,gBAAgB,CAAE,IAjBtB,CAkBI,iBAAiB,CAAE,IAlBvB,CAmBI,UAAU,CAAE,KAAKN,KAAL,CAAWF,KAAX,CAAiByB,UAnBjC,CAoBI,QAAQ,CAAE,IApBd,CAqBI,WAAW,CAAE,IArBjB,CAsBI,eAAe,CAAE,KAAKuB,cAtB1B,CAuBI,iBAAiB,CAAE,WAvBvB,CAwBI,SAAS,CAAE,KAAK9C,KAAL,CAAWF,KAAX,CAAiBmD,gBAAjB,EAAqC,GAAIL,CAAAA,GAAJ,EAxBpD,EADH,CA2BA,EA9BL,CADJ,CADJ,CADA,CADJ,CAyCC,C,kCAED,4BAAmBM,aAAnB,CAAiC,CAC7B,GAAI,KAAKlD,KAAL,CAAWF,KAAX,CAAiBU,UAAjB,GAAgC0C,aAAa,CAACpD,KAAd,CAAoBU,UAAxD,CAAmE,CAC/D,GAAI,KAAKR,KAAL,CAAWF,KAAX,CAAiBQ,QAAjB,CAA0B6C,SAA1B,GAAwCD,aAAa,CAACpD,KAAd,CAAoBQ,QAApB,CAA6B6C,SAAzE,CAAmF,CAC/E,GAAMT,CAAAA,qBAAqB,CAAG,EAA9B,CACA,GAAI,KAAK1C,KAAL,CAAWF,KAAX,CAAiB4C,qBAArB,CAA2C,CACvC,KAAK1C,KAAL,CAAWF,KAAX,CAAiB4C,qBAAjB,CAAuC,KAAK1C,KAAL,CAAWF,KAAX,CAAiBQ,QAAjB,CAA0B6C,SAAjE,GAA+EC,MAAM,CAACC,MAAP,CAAc,KAAKrD,KAAL,CAAWF,KAAX,CAAiB4C,qBAAjB,CAAuC,KAAK1C,KAAL,CAAWF,KAAX,CAAiBQ,QAAjB,CAA0B6C,SAAjE,CAAd,EAA2FG,GAA3F,CAA+F,SAAAC,IAAI,QAC9Kb,CAAAA,qBAAqB,CAACc,IAAtB,CAA2BD,IAAI,CAACE,YAAhC,CAD8K,EAAnG,CAA/E,CAEH,CACD,GAAMd,CAAAA,UAAU,CAAGlD,aAAa,CAAC,KAAKO,KAAL,CAAWF,KAAX,CAAiB4C,qBAAlB,CAAyC,KAAK1C,KAAL,CAAWF,KAAX,CAAiBQ,QAAjB,CAA0B6C,SAAnE,CAAhC,CACA,KAAKtC,QAAL,CAAc,CAAC6B,qBAAqB,CAArBA,qBAAD,CAAwBC,UAAU,CAAVA,UAAxB,CAAoC5B,IAAI,CAAC,KAAKf,KAAL,CAAWF,KAAX,CAAiBU,UAA1D,CACVM,UAAU,CAAEhC,OAAO,CAAC,KAAKkB,KAAL,CAAWF,KAAX,CAAiBiB,IAAjB,EAAyB,KAAKf,KAAL,CAAWF,KAAX,CAAiBU,UAAjB,CAA4ByC,gBAArD,EAAyE,EAA1E,CAA8E,KAAKpD,KAAL,CAAWM,SAAzF,CADT,CAAd,EAIH,CAXD,IAYK,CACD,GAAKA,CAAAA,SAAL,CAAkB,KAAKN,KAAvB,CAAKM,SAAL,CACA,GAAG,KAAKH,KAAL,CAAWF,KAAX,CAAiBK,SAAjB,GAA+BuD,SAAlC,CAA4C,CACxCvD,SAAS,CAAG,CAACiC,IAAI,CAAC,CAAN,CAAQC,IAAI,CAAC,KAAKrC,KAAL,CAAWF,KAAX,CAAiBwC,QAAjB,CAA4BC,QAAQ,CAAC,KAAKvC,KAAL,CAAWF,KAAX,CAAiBwC,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CAAnF,CAAZ,CACH,CAGD,KAAKzB,QAAL,CAAc,CAACE,IAAI,CAAE,KAAKf,KAAL,CAAWF,KAAX,CAAiBU,UAAxB,CAAoCW,cAAc,CAAE,KAAKnB,KAAL,CAAWF,KAAX,CAAiBqB,cAArE,CACVL,UAAU,CAAEhC,OAAO,CAAC,KAAKkB,KAAL,CAAWF,KAAX,CAAiBU,UAAlB,CAA8B,KAAKR,KAAL,CAAWF,KAAX,CAAiBK,SAAjB,EAA8BA,SAA5D,CADT,CAET;AAGAA,SAAS,CAATA,SALS,CAAd,EAOH,CACH,CA5BF,IA6BM,IAAI,KAAKH,KAAL,CAAWF,KAAX,CAAiBqB,cAAjB,GAAoC+B,aAAa,CAACpD,KAAd,CAAoBqB,cAA5D,CAA4E,CAC9E,KAAKN,QAAL,CAAc,CAACM,cAAc,CAAC,KAAKnB,KAAL,CAAWF,KAAX,CAAiBqB,cAAjC,CAAd,EACF,CACL,C,0CA7FD,kCAAgCnB,KAAhC,CAAuCH,KAAvC,CAA6C,CAEzC,GAAIG,KAAK,CAACF,KAAN,CAAY0C,YAAZ,GAA6B,EAA7B,EAAoCxC,KAAK,CAACF,KAAN,CAAY0C,YAAZ,GAA6B3C,KAAK,CAAC2C,YAA3E,CAAyF,CACrF3D,KAAK,CAAC8E,IAAN,CAAW3D,KAAK,CAACF,KAAN,CAAY0C,YAAvB,EACAxC,KAAK,CAACF,KAAN,CAAY0C,YAAZ,CAA2B,EAA3B,CACH,CAED,GAAIxC,KAAK,CAACF,KAAN,CAAY2C,KAAZ,GAAsB5C,KAAK,CAAC4C,KAAhC,CAAsC,CAClC5D,KAAK,CAAC4D,KAAN,CAAYzC,KAAK,CAACF,KAAN,CAAY2C,KAAxB,EACAzC,KAAK,CAACF,KAAN,CAAY2C,KAAZ,CAAoB,EAApB,CACH,CACD,MAAO,KAAP,CACF,C,wBA5FmBhE,KAAK,CAACmF,S,EAuM9B,cAAe7E,CAAAA,OAAO,CAACa,eAAD,CAAkB,CAACX,WAAW,CAAXA,WAAD,CAAcC,UAAU,CAAVA,UAAd,CAA0BC,WAAW,CAAXA,WAA1B,CAAuCC,uBAAuB,CAAvBA,uBAAvC,CAA+DC,oBAAoB,CAApBA,oBAA/D,CAAlB,CAAP,CAA+GL,UAAU,CAACe,UAAD,CAAzH,CAAf","sourcesContent":["import React from 'react';\r\nimport {ListWrapper} from '../components/client-group.styles';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { callService, crudMaster,updateStore, validateEsignCredential,getSubSampleBySample } from '../actions';\r\n\r\n\r\nimport Esign from '../pages/audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../actions/LoginTypes';\r\n//import SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\n//import AddMethod from './AddMethod';\r\n\r\nimport {showEsign, getControlMap} from '../components/CommonScript';\r\nimport {transactionStatus} from '../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../components/data-grid/DataGridWithMultipleGrid';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass COARelease extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props);        \r\n        this.formRef = React.createRef();\r\n     \r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {        \r\n            data:[], masterStatus:\"\", error:\"\", selectedRecord:{},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights:[],\r\n            controlMap :new Map()\r\n        };\r\n\r\n        this.extractedColumnList =[\r\n                {\"idsName\":\"IDS_ARNO\",\"dataField\":\"sarno\",\"width\":\"200px\"},\r\n                                    {\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"Specimen Type\",\"width\":\"200px\"\r\n                                },\r\n                                    {\"idsName\":\"IDS_PRODUCTCATEGORY\",\"dataField\":\"Specimen Category\",\"width\":\"200px\"},\r\n                                    {\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"200px\"}\r\n                                    ];\r\n\r\n        this.roleColumnList = [{ \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"150px\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                                    { \"idsName\": \"IDS_SAMPLENAME\", \"dataField\": \"Sample Name\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n                                    { \"idsName\": \"IDS_CONTAINERTYPE\", \"dataField\": \"Container Type\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\r\n                          ];\r\n\r\n\r\n    }\r\n    handleExpandChange = (row, dataState) => {\r\n        const viewParam = {\r\n            nsitecode: -1,\r\n            userInfo: this.props.Login.userInfo, primaryKeyField: \"npreregno\",\r\n            masterData: this.props.Login.masterData\r\n        };\r\n\r\n        this.props.getSubSampleBySample({\r\n            ...viewParam, dataState,\r\n            primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField], viewRow: row[\"dataItem\"]\r\n        });\r\n\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign){          \r\n            if (this.props.Login.operation === \"delete\"){\r\n                loadEsign = false;\r\n                openModal =  false;\r\n                selectedRecord = {};\r\n            }\r\n            else{\r\n                loadEsign = false;                \r\n            }\r\n        }\r\n        else{\r\n            openModal =  false;\r\n            selectedRecord ={};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {openModal, loadEsign, selectedRecord, selectedId:null}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n        \r\n    }\r\n    \r\n    static getDerivedStateFromProps(props, state){\r\n    \r\n        if (props.Login.masterStatus !== \"\"  && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";           \r\n        } \r\n         \r\n        if (props.Login.error !== state.error){\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }   \r\n        return null;\r\n     }    \r\n\r\n\r\n    render(){\r\nconsole.log(\"child\",this.props.Login.releaseSubSample)\r\n    return (\r\n        <>\r\n        <Row>\r\n            <Col>\r\n                <ListWrapper className=\"client-list-content\">\r\n                    \r\n                   \r\n                    {this.state.data ? \r\n                        <DataGridWithMultipleGrid\r\n                            data = {this.state.data}\r\n                            dataResult = {this.state.dataResult}\r\n                            dataResult1 = {this.props.Login.releaseSubSample}\r\n                            dataState = {this.state.dataState}\r\n                            dataStateChange = {this.dataStateChange}\r\n                            extractedColumnList = {this.extractedColumnList}\r\n                          expandField=\"expanded\"\r\n                          handleExpandChange={this.handleExpandChange}\r\n                            reloadData = {this.reloadData}\r\n                            controlMap = {this.state.controlMap}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            userInfo = {this.props.Login.userInfo}\r\n                            pageable={true}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight = {'600px'}\r\n                            isActionRequired={true}\r\n                            isToolBarRequired={true} \r\n                            selectedId={this.props.Login.selectedId} \r\n                            hasChild={true}\r\n                            hasSubChild={true}\r\n                            childColumnList={this.roleColumnList}\r\n                            childMappingField={\"npreregno\"}\r\n                            childList={this.props.Login.releaseSubSample || new Map()}\r\n                        />\r\n                    :\"\"}    \r\n                </ListWrapper>\r\n            </Col>\r\n        </Row>\r\n    \r\n        </>\r\n      );\r\n    }\r\n\r\n    componentDidUpdate(previousProps){\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData){            \r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode){\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights){\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item=>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({userRoleControlRights, controlMap, data:this.props.Login.masterData, \r\n                    dataResult: process(this.props.Login.data || this.props.Login.masterData.releaseSubSample || [], this.state.dataState),\r\n\r\n                });\r\n            }\r\n            else {        \r\n                let {dataState} = this.state;\r\n                if(this.props.Login.dataState === undefined){\r\n                    dataState = {skip:0,take:this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                }    \r\n\r\n     \r\n                this.setState({data: this.props.Login.masterData, selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(this.props.Login.masterData, this.props.Login.dataState || dataState),                 \r\n                     //  dataResult1: process(this.props.Login.releaseSubSample, this.props.Login.dataState || dataState),\r\n\r\n\r\n                     dataState\r\n                });\r\n            } \r\n         }\r\n         else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord ){    \r\n            this.setState({selectedRecord:this.props.Login.selectedRecord});\r\n         }       \r\n    }    \r\n   \r\n    reloadData = () =>{\r\n        const inputParam = {\r\n                        inputData : {\"userinfo\":this.props.Login.userInfo},                        \r\n                        classUrl: \"coarelease\",\r\n                        methodUrl: \"COARelease\",\r\n                        displayName:this.props.Login.inputParam.displayName,\r\n                        userInfo: this.props.Login.userInfo\r\n                    };     \r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    \r\n    validateEsign = () =>{\r\n        const inputParam = {\r\n                                inputData: {\"userinfo\": {...this.props.Login.userInfo, \r\n                                                        sreason: this.state.selectedRecord[\"esigncomments\"] },\r\n                                             password : this.state.selectedRecord[\"esignpassword\"]\r\n                                            },\r\n                                screenData : this.props.Login.screenData\r\n                            }        \r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }    \r\n   \r\n }\r\n export default connect(mapStateToProps, {callService, crudMaster, updateStore, validateEsignCredential,getSubSampleBySample})(injectIntl(COARelease));"]},"metadata":{},"sourceType":"module"}