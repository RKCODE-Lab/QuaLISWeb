{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col,Nav}from'react-bootstrap';import{faLanguage}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';import ReactSelectAddEdit from'../../components/react-select-add-edit/react-select-add-edit-component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{transactionStatus}from'../../components/Enumeration';var AddDesignTemplateMapping=function AddDesignTemplateMapping(props){//console.log(\"props.selectedRecord:\", props);\nreturn/*#__PURE__*/React.createElement(Row,null,props.nformcode===-2&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_FORMNAME\"}),name:\"sformname\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,'sformname');},placeholder:props.formatMessage({id:\"IDS_FORMNAME\"}),value:props.selectedRecord?props.selectedRecord.sformname:\"\",isMandatory:true,required:true,maxLength:\"30\"}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_MODULETYPE\"}),isSearchable:true,name:\"nnewmodule\",isDisabled:false,placeholder:props.formatMessage({id:\"IDS_MODULETYPE\"}),isMandatory:true,options:props.moduleTypeArray,value:props.selectedRecord[\"nnewmodule\"],onChange:function onChange(event){return props.onComboChange(event,'nnewmodule');},closeMenuOnSelect:true,alphabeticalSort:true}),props.selectedRecord[\"nnewmodule\"]&&props.selectedRecord[\"nnewmodule\"].value===transactionStatus.YES?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormInput//name={props.language}\n,{name:\"nmodulecode\",placeholder:props.formatMessage({id:\"IDS_MODULENAME\"}),onChange:function onChange(event){return props.onInputOnChange(event,'nmodulecode');},className:\"\",isMandatory:true,label:props.formatMessage({id:\"IDS_MODULENAME\"}),required:true,value:props.selectedRecord.nmodulecode?props.selectedRecord.nmodulecode:\"\",maxLength:\"100\"})):/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_MODULENAME\"}),isSearchable:true,name:\"nmodulecode\",isDisabled:false,placeholder:props.formatMessage({id:\"IDS_MODULENAME\"}),isMandatory:true,options:props.designTemplateQualisModule,value:props.selectedRecord[\"nmodulecode\"],onChange:function onChange(event){return props.onComboChange(event,'nmodulecode');},closeMenuOnSelect:true,alphabeticalSort:true})),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_TEMPLATE\"}),isSearchable:true,name:\"nreactregtemplatecode\",isDisabled:false,placeholder:props.formatMessage({id:\"IDS_TEMPLATE\"}),isMandatory:true,options:props.designtemplatemappingList,optionId:\"nreactregtemplatecode\",optionValue:\"sregtemplatename\",value:props.selectedRecord[\"nreactregtemplatecode\"],onChange:function onChange(event){return props.onComboChange(event,'nreactregtemplatecode');},closeMenuOnSelect:true,alphabeticalSort:true}),props.needSubSample?/*#__PURE__*/ //&& props.subSampleTemplateList.length > 0 ?\nReact.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_SUBSAMPLETEMPLATE\"}),isSearchable:true,name:\"nsubsampletemplatecode\",isDisabled:false,placeholder:props.formatMessage({id:\"IDS_SUBSAMPLETEMPLATE\"}),isMandatory:true,options:props.subSampleTemplateList,optionId:\"nsubsampletemplatecode\",optionValue:\"sregtemplatename\",value:props.selectedRecord[\"nsubsampletemplatecode\"],onChange:function onChange(event){return props.onComboChange(event,'nsubsampletemplatecode');},closeMenuOnSelect:true,alphabeticalSort:true})):\"\");};export default injectIntl(AddDesignTemplateMapping);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/designtemplatemapping/AddDesignTemplateMapping.jsx"],"names":["React","injectIntl","Row","Col","Nav","faLanguage","FontAwesomeIcon","FormSelectSearch","FormInput","ReactSelectAddEdit","CustomSwitch","transactionStatus","AddDesignTemplateMapping","props","nformcode","formatMessage","id","event","onInputOnChange","selectedRecord","sformname","moduleTypeArray","onComboChange","value","YES","nmodulecode","designTemplateQualisModule","designtemplatemappingList","needSubSample","subSampleTemplateList"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col,Nav } from 'react-bootstrap';\r\n\r\nimport { faLanguage } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport ReactSelectAddEdit from '../../components/react-select-add-edit/react-select-add-edit-component'\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst AddDesignTemplateMapping = (props) => {\r\n    //console.log(\"props.selectedRecord:\", props);\r\n    return (\r\n        <Row>\r\n            {props.nformcode === -2 &&\r\n                <>\r\n                \r\n                    <FormInput\r\n                        label={props.formatMessage({ id: \"IDS_FORMNAME\" })}\r\n                        name={\"sformname\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event, 'sformname')}\r\n                        placeholder={props.formatMessage({ id: \"IDS_FORMNAME\" })}\r\n                        value={props.selectedRecord ? props.selectedRecord.sformname : \"\"}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={\"30\"}\r\n                    />\r\n               \r\n                    {/* <CustomSwitch\r\n                            label={props.formatMessage({ id: \"IDS_ISNEWMODULE\" })}\r\n                            type=\"switch\"\r\n                            name={\"nnewmodule\"}\r\n                            onChange={(event) => props.onInputOnChange(event, \"nnewmodule\")}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            //checked={props.selectedRecord[\"nnewmodule\"]}\r\n                            checked={props.selectedRecord[\"nnewmodule\"] && props.selectedRecord[\"nnewmodule\"] === 3 ? true : false}\r\n                        /> */}\r\n                    <FormSelectSearch\r\n                        formLabel={props.formatMessage({ id: \"IDS_MODULETYPE\" })}\r\n                        isSearchable={true}\r\n                        name={\"nnewmodule\"}\r\n                        isDisabled={false}\r\n                        placeholder={props.formatMessage({ id: \"IDS_MODULETYPE\" })}\r\n                        isMandatory={true}\r\n                        options={props.moduleTypeArray}                       \r\n                        value={props.selectedRecord[\"nnewmodule\"]}\r\n                        onChange={(event) => props.onComboChange(event, 'nnewmodule')}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                    />\r\n                {/* </Col> */}\r\n                    {props.selectedRecord[\"nnewmodule\"] && props.selectedRecord[\"nnewmodule\"].value === transactionStatus.YES ?\r\n                    <>\r\n                        {/* <Col md={10}> */}\r\n                            <FormInput\r\n                                //name={props.language}\r\n                                name={\"nmodulecode\"}\r\n                                placeholder={props.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                                onChange={(event) => props.onInputOnChange(event, 'nmodulecode')}\r\n                                className=\"\"\r\n                                isMandatory={true}\r\n                                label={props.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                                required={true}\r\n                                value={props.selectedRecord.nmodulecode ? props.selectedRecord.nmodulecode : \"\"}\r\n                                maxLength={\"100\"}\r\n                            />\r\n                       \r\n                    </>                  \r\n                    :\r\n                  \r\n                        <FormSelectSearch\r\n                            formLabel={props.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                            isSearchable={true}\r\n                            name={\"nmodulecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                            isMandatory={true}\r\n                            options={props.designTemplateQualisModule}                       \r\n                            value={props.selectedRecord[\"nmodulecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, 'nmodulecode')}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                        />\r\n               \r\n                    }\r\n                     {/* <ReactSelectAddEdit\r\n                            name=\"nmodulecode\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                            className=\"color-select\"\r\n                            classNamePrefix=\"react-select\"\r\n                            optionId=\"nmodulecode\"\r\n                            optionValue=\"sdisplayname\"\r\n                            options={props.designTemplateQualisModule || []}\r\n                            isMandatory={true}\r\n                            getValue={value => props.onComboChange(value, \"nmodulecode\")}\r\n                            value={props.selectedRecord[\"nmodulecode\"]? props.selectedRecord[\"nmodulecode\"]: \"\" }\r\n                            // defaultValue={props.selectedRecord? props.selectedRecord[\"sparametername\"]:\"\"}\r\n                    />  */}\r\n                \r\n                </>\r\n            }\r\n            {/* <Col md={12}> */}\r\n                <FormSelectSearch\r\n                    formLabel={props.formatMessage({ id: \"IDS_TEMPLATE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nreactregtemplatecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.formatMessage({ id: \"IDS_TEMPLATE\" })}\r\n                    isMandatory={true}\r\n                    options={props.designtemplatemappingList}\r\n                    optionId='nreactregtemplatecode'\r\n                    optionValue='sregtemplatename'\r\n                    value={props.selectedRecord[\"nreactregtemplatecode\"]}\r\n                    onChange={(event) => props.onComboChange(event, 'nreactregtemplatecode')}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n            {/* </Col> */}\r\n            {props.needSubSample ?\r\n            //&& props.subSampleTemplateList.length > 0 ?\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={props.formatMessage({ id: \"IDS_SUBSAMPLETEMPLATE\" })}\r\n                        isSearchable={true}\r\n                        name={\"nsubsampletemplatecode\"}\r\n                        isDisabled={false}\r\n                        placeholder={props.formatMessage({ id: \"IDS_SUBSAMPLETEMPLATE\" })}\r\n                        isMandatory={true}\r\n                        options={props.subSampleTemplateList}\r\n                        optionId='nsubsampletemplatecode'\r\n                        optionValue='sregtemplatename'\r\n                        value={props.selectedRecord[\"nsubsampletemplatecode\"]}\r\n                        onChange={(event) => props.onComboChange(event, 'nsubsampletemplatecode')}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n                : \"\"}\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddDesignTemplateMapping);\r\n"]},"metadata":{},"sourceType":"module"}