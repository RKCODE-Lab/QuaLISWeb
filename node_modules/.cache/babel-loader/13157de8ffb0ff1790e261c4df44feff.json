{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{injectIntl}from'react-intl';import{transactionStatus}from'../../components/Enumeration';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var AddTestGroupSpecification=function AddTestGroupSpecification(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"sproductname\",label:props.intl.formatMessage({id:\"IDS_PRODUCTNAME\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_PRODUCTNAME\"}),value:props.selectedRecord?props.selectedRecord[\"sproductname\"]:\"\",readOnly:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"sspecname\",label:props.intl.formatMessage({id:\"IDS_SPECNAME\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_SPECNAME\"}),value:props.selectedRecord?props.selectedRecord[\"sspecname\"]:\"\",isMandatory:\"*\",required:true,maxLength:100}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dexpirydate\",label:props.intl.formatMessage({id:\"IDS_EXPIRYDATEWOTIME\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[\"dexpirydate\"]//dateFormat={\"dd/MM/yyyy\"}\n,dateFormat:props.userInfo.ssitedate,timeInputLabel:props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:false,isClearable:false,onChange:function onChange(date){return props.handleDateChange(\"dexpirydate\",date);},value:props.selectedRecord[\"dexpirydate\"],isMandatory:true,required:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntzexpirydate\",formLabel:props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.timeZoneList,optionId:\"ntimezonecode\",optionValue:\"stimezoneid\",value:props.selectedRecord[\"ntzexpirydate\"],defaultValue:props.selectedRecord[\"ntzexpirydate\"],isMandatory:true,isSearchable:true,isClearable:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(value){return props.onComboChange(value,'ntzexpirydate',1);}}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ntransactionstatus\",label:props.intl.formatMessage({id:\"IDS_ACTIVE\"}),type:\"switch\",onChange:function onChange(event){return props.onInputOnChange(event,1,[transactionStatus.ACTIVE,transactionStatus.DEACTIVE]);},placeholder:props.intl.formatMessage({id:\"IDS_ACTIVE\"}),defaultValue:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false,checked:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ncomponentrequired\",label:props.intl.formatMessage({id:\"IDS_COMPONENTREQUIRED\"}),type:\"switch\",onChange:function onChange(event){return props.onInputOnChange(event,1,[transactionStatus.YES,transactionStatus.NO]);},placeholder:props.intl.formatMessage({id:\"IDS_COMPONENTREQUIRED\"}),defaultValue:props.selectedRecord[\"ncomponentrequired\"]===transactionStatus.YES?true:false,checked:props.selectedRecord[\"ncomponentrequired\"]===transactionStatus.YES?true:false// disabled={true}//{props.operation===\"copy\"?true:false}\n}))));};export default injectIntl(AddTestGroupSpecification);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testgroup/AddTestGroupSpecification.jsx"],"names":["React","Row","Col","FormInput","DateTimePicker","CustomSwitch","injectIntl","transactionStatus","FormSelectSearch","AddTestGroupSpecification","props","intl","formatMessage","id","event","onInputOnChange","selectedRecord","userInfo","ssitedate","date","handleDateChange","timeZoneList","value","onComboChange","ACTIVE","DEACTIVE","YES","NO"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,8DAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,iBAAT,KAAkC,8BAAlC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CAEA,GAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAAAC,KAAK,CAAI,CACvC,mBACI,qDACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,SAAD,EACI,IAAI,CAAE,cADV,CAEI,KAAK,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,iBAAN,CAAzB,CAFX,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAACC,KAAD,QAAWJ,CAAAA,KAAK,CAACK,eAAN,CAAsBD,KAAtB,CAA6B,CAA7B,CAAX,EAJd,CAKI,WAAW,CAAEJ,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,iBAAN,CAAzB,CALjB,CAMI,KAAK,CAAEH,KAAK,CAACM,cAAN,CAAuBN,KAAK,CAACM,cAAN,CAAqB,cAArB,CAAvB,CAA8D,EANzE,CAOI,QAAQ,CAAE,IAPd,EADJ,cAUI,oBAAC,SAAD,EACI,IAAI,CAAE,WADV,CAEI,KAAK,CAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,cAAN,CAAzB,CAFX,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAACC,KAAD,QAAWJ,CAAAA,KAAK,CAACK,eAAN,CAAsBD,KAAtB,CAA6B,CAA7B,CAAX,EAJd,CAKI,WAAW,CAAEJ,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,cAAN,CAAzB,CALjB,CAMI,KAAK,CAAEH,KAAK,CAACM,cAAN,CAAuBN,KAAK,CAACM,cAAN,CAAqB,WAArB,CAAvB,CAA2D,EANtE,CAOI,WAAW,CAAC,GAPhB,CAQI,QAAQ,CAAE,IARd,CASI,SAAS,CAAE,GATf,EAVJ,CADJ,CADJ,cAyBI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eAKY,oBAAC,cAAD,EACI,IAAI,CAAE,aADV,CAEI,KAAK,CAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,sBAAN,CAAzB,CAFX,CAGI,SAAS,CAAC,cAHd,CAII,eAAe,CAAC,eAJpB,CAKI,QAAQ,CAAEH,KAAK,CAACM,cAAN,CAAqB,aAArB,CACV;AANJ,CAOI,UAAU,CAAEN,KAAK,CAACO,QAAN,CAAeC,SAP/B,CAQI,cAAc,CAAIR,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,UAAL,CAAzB,CARtB,CASI,aAAa,CAAE,KATnB,CAUI,WAAW,CAAE,KAVjB,CAWI,QAAQ,CAAE,kBAAAM,IAAI,QAAIT,CAAAA,KAAK,CAACU,gBAAN,CAAuB,aAAvB,CAAsCD,IAAtC,CAAJ,EAXlB,CAYI,KAAK,CAAET,KAAK,CAACM,cAAN,CAAqB,aAArB,CAZX,CAaI,WAAW,CAAE,IAbjB,CAcI,QAAQ,CAAE,IAdd,EALZ,cAuBY,oBAAC,gBAAD,EACI,IAAI,CAAE,eADV,CAEI,SAAS,CAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,cAAN,CAAzB,CAFf,CAGI,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CAHjB,CAII,OAAO,CAAEH,KAAK,CAACW,YAJnB,CAKI,QAAQ,CAAC,eALb,CAMI,WAAW,CAAC,aANhB,CAOI,KAAK,CAAEX,KAAK,CAACM,cAAN,CAAqB,eAArB,CAPX,CAQI,YAAY,CAAEN,KAAK,CAACM,cAAN,CAAqB,eAArB,CARlB,CASI,WAAW,CAAE,IATjB,CAUI,YAAY,CAAE,IAVlB,CAWI,WAAW,CAAE,KAXjB,CAYI,iBAAiB,CAAE,IAZvB,CAaI,gBAAgB,CAAE,IAbtB,CAcI,QAAQ,CAAE,kBAACM,KAAD,QAAWZ,CAAAA,KAAK,CAACa,aAAN,CAAoBD,KAApB,CAA2B,eAA3B,CAA4C,CAA5C,CAAX,EAdd,EAvBZ,CADJ,CAzBJ,cAqEI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACI,IAAI,CAAE,oBADV,CAEI,KAAK,CAAEZ,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,YAAN,CAAzB,CAFX,CAGI,IAAI,CAAC,QAHT,CAII,QAAQ,CAAE,kBAACC,KAAD,QAAWJ,CAAAA,KAAK,CAACK,eAAN,CAAsBD,KAAtB,CAA6B,CAA7B,CAAgC,CAACP,iBAAiB,CAACiB,MAAnB,CAA2BjB,iBAAiB,CAACkB,QAA7C,CAAhC,CAAX,EAJd,CAKI,WAAW,CAAEf,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,YAAN,CAAzB,CALjB,CAMI,YAAY,CAAEH,KAAK,CAACM,cAAN,CAAqB,oBAArB,IAA+CT,iBAAiB,CAACiB,MAAjE,CAA0E,IAA1E,CAAiF,KANnG,CAOI,OAAO,CAAEd,KAAK,CAACM,cAAN,CAAqB,oBAArB,IAA+CT,iBAAiB,CAACiB,MAAjE,CAA0E,IAA1E,CAAiF,KAP9F,EADJ,CADJ,cAaI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACI,IAAI,CAAE,oBADV,CAEI,KAAK,CAAEd,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,uBAAN,CAAzB,CAFX,CAGI,IAAI,CAAC,QAHT,CAII,QAAQ,CAAE,kBAACC,KAAD,QAAWJ,CAAAA,KAAK,CAACK,eAAN,CAAsBD,KAAtB,CAA6B,CAA7B,CAAgC,CAACP,iBAAiB,CAACmB,GAAnB,CAAwBnB,iBAAiB,CAACoB,EAA1C,CAAhC,CAAX,EAJd,CAKI,WAAW,CAAEjB,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,uBAAN,CAAzB,CALjB,CAMI,YAAY,CAAEH,KAAK,CAACM,cAAN,CAAqB,oBAArB,IAA+CT,iBAAiB,CAACmB,GAAjE,CAAuE,IAAvE,CAA8E,KANhG,CAOI,OAAO,CAAEhB,KAAK,CAACM,cAAN,CAAqB,oBAArB,IAA+CT,iBAAiB,CAACmB,GAAjE,CAAuE,IAAvE,CAA8E,KACvF;AARJ,EADJ,CAbJ,CArEJ,CADJ,CAmGH,CApGD,CAsGA,cAAepB,CAAAA,UAAU,CAACG,yBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst AddTestGroupSpecification = props => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        name={\"sproductname\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_PRODUCTNAME\" })}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_PRODUCTNAME\" })}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"sproductname\"] : \"\"}\r\n                        readOnly={true}\r\n                    />\r\n                    <FormInput\r\n                        name={\"sspecname\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_SPECNAME\" })}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SPECNAME\" })}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"sspecname\"] : \"\"}\r\n                        isMandatory=\"*\"\r\n                        required={true}\r\n                        maxLength={100}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    {/* <Row>\r\n                        <Col md={6}> */}\r\n                       \r\n\r\n                            <DateTimePicker\r\n                                name={\"dexpirydate\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_EXPIRYDATEWOTIME\" })}\r\n                                className='form-control'\r\n                                placeholderText=\"Select date..\"\r\n                                selected={props.selectedRecord[\"dexpirydate\"]}\r\n                                //dateFormat={\"dd/MM/yyyy\"}\r\n                                dateFormat={props.userInfo.ssitedate}\r\n                                timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                                showTimeInput={false}\r\n                                isClearable={false}\r\n                                onChange={date => props.handleDateChange(\"dexpirydate\", date)}\r\n                                value={props.selectedRecord[\"dexpirydate\"]}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                            />\r\n                        {/* </Col>\r\n                        <Col md={6}> */}\r\n                            <FormSelectSearch\r\n                                name={\"ntzexpirydate\"}\r\n                                formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={props.timeZoneList}\r\n                                optionId=\"ntimezonecode\"\r\n                                optionValue=\"stimezoneid\"\r\n                                value={props.selectedRecord[\"ntzexpirydate\"]}\r\n                                defaultValue={props.selectedRecord[\"ntzexpirydate\"]}\r\n                                isMandatory={true}\r\n                                isSearchable={true}\r\n                                isClearable={false}\r\n                                closeMenuOnSelect={true}\r\n                                alphabeticalSort={true}\r\n                                onChange={(value) => props.onComboChange(value, 'ntzexpirydate', 1)}\r\n                            />\r\n                        {/* </Col>\r\n                    </Row> */}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <CustomSwitch\r\n                        name={\"ntransactionstatus\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_ACTIVE\" })}\r\n                        type=\"switch\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1, [transactionStatus.ACTIVE, transactionStatus.DEACTIVE])}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_ACTIVE\" })}\r\n                        defaultValue={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                        checked={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                    >\r\n                    </CustomSwitch>\r\n                </Col>\r\n                <Col md={12} >\r\n                    <CustomSwitch\r\n                        name={\"ncomponentrequired\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_COMPONENTREQUIRED\" })}\r\n                        type=\"switch\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1, [transactionStatus.YES, transactionStatus.NO])}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_COMPONENTREQUIRED\" })}\r\n                        defaultValue={props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false}\r\n                        checked={props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false}\r\n                        // disabled={true}//{props.operation===\"copy\"?true:false}\r\n                    >\r\n                    </CustomSwitch>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddTestGroupSpecification);"]},"metadata":{},"sourceType":"module"}