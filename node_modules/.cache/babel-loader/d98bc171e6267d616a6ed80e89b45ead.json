{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import{connect}from'react-redux';import{FormattedMessage,injectIntl}from'react-intl';import PerfectScrollbar from'react-perfect-scrollbar';import{Affix}from'rsuite';import Tree from'react-tree-graph';import'../../../../node_modules/react-simple-tree-menu/dist/main.css';import{faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus,faSync}from'@fortawesome/free-solid-svg-icons';import{Row,Col,Button,Card,Nav}from'react-bootstrap';import'react-perfect-scrollbar/dist/css/styles.css';import'react-tree-graph/dist/style.css';import{callService,crudMaster,updateStore,validateEsignCredential,organisationService,getSectionUserRole,getOrganisationComboService}from'../../../actions';import AddChild from'./AddChild';import Esign from'../../../pages/audittrail/Esign';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import ConfirmMessage from'../../../components/confirm-alert/confirm-message.component';import{transactionStatus}from'../../../components/Enumeration';import{showEsign,getControlMap,constructOptionList}from'../../../components/CommonScript';import DataGrid from'../../../components/data-grid/data-grid.component';import FormTreeMenu from'../../../components/form-tree-menu/form-tree-menu.component';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import'./treegraph.css';import{SearchAdd}from'../../../components/App.styles';import{ReactComponent as Graph}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/image/organisational-graph.svg\";// import ReactTooltip from 'react-tooltip';\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Organisation=/*#__PURE__*/function(_React$Component){_inherits(Organisation,_React$Component);var _super=_createSuper(Organisation);function Organisation(props){var _this;_classCallCheck(this,Organisation);_this=_super.call(this,props);_this.dataStateChange=function(event){// const viewParam = {\n//     nsitecode: this.props.Login.masterData.SelectedOrgSite && this.props.Login.masterData.SelectedOrgSite.nsitecode,\n//     userInfo: this.props.Login.userInfo, primaryKeyField: \"nusercode\",\n//     masterData: this.props.Login.masterData\n// };\n_this.setState({dataState:event.dataState,dataResult:process(_this.state.data,event.dataState)});// const row = process(this.state.data, event.dataState);\n// if (row.data.length > 0) {\n//     this.props.getSectionUserRole({\n//         ...viewParam,\n//         primaryKeyValue: row.data[0][viewParam.primaryKeyField],\n//         viewRow: row.data[0], data: this.state.data, dataResult: row, dataState: event.dataState\n//     });\n// }\n};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.resetView=function(){var inputParam={inputData:{nsitecode:_this.props.Login.masterData.SelectedOrgSite&&_this.props.Login.masterData.SelectedOrgSite.nsitecode,userinfo:_this.props.Login.userInfo,graphview:true,completetreepath:\"\",primarykey:0},masterData:_this.props.Login.masterData,selectedNode:\"Site\",url:\"organisation/getSiteDepartment\"};_this.props.organisationService(inputParam);};_this.handleExpandChange=function(row,dataState){var viewParam={nsitecode:_this.props.Login.masterData.SelectedOrgSite&&_this.props.Login.masterData.SelectedOrgSite.nsitecode,userInfo:_this.props.Login.userInfo,primaryKeyField:\"nusercode\",masterData:_this.props.Login.masterData};_this.props.getSectionUserRole(_objectSpread(_objectSpread({},viewParam),{},{dataState:dataState,primaryKeyValue:row[\"dataItem\"][viewParam.primaryKeyField],viewRow:row[\"dataItem\"]}));};_this.confirmDelete=function(deleteParam){var deleteConfirmMsg=\"IDS_CONFIRMDELETE\".concat(_this.props.Login.organisation&&_this.props.Login.organisation.selectedNode&&_this.props.Login.organisation.selectedNode.toUpperCase());_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"\".concat(deleteConfirmMsg)}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteRecord(deleteParam);});};_this.onTreeClick=function(event){if(event){if(event.item.selectedNode===\"Section\"){var masterData=_objectSpread({},_this.props.Login.masterData);var inputData=_defineProperty({userinfo:_this.props.Login.userInfo,selectedtreepath:event.key,graphview:false},event.item.primaryKeyField,event.item.selectedNodeDetail[event.item.primaryKeyField]);masterData[\"CompleteTreePath\"]=event.key;_this.props.organisationService({inputData:inputData,//url:event.getParam.url,\nurl:event.serviceUrl,masterData:masterData,organisation:_objectSpread({},event.item)});}else{var updateInfo={typeName:DEFAULT_RETURN,data:{organisation:_objectSpread({},event.item),data:undefined,dataState:undefined,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{\"CompleteTreePath\":event.key,SectionUsers:[]})}};_this.props.updateStore(updateInfo);}}};_this.openModal=function(){var inputParam={};//const primaryKey = this.props.Login.masterData.AddedChildPrimaryKey;\n// console.log(\"master data in open modal:\", this.props.Login.masterData);\nif(_this.props.Login.masterData.SiteDepartment.length===0){var completeTreePath=_this.props.Login.masterData.CompleteTreePath;if(completeTreePath===\"\"){completeTreePath=_this.props.Login.masterData.SelectedOrgSite.ssitename;}inputParam={operation:\"create\",screenName:\"Department\",selectedRecord:{ssitename:_this.props.Login.masterData.SelectedOrgSite.ssitename,nsitecode:_this.props.Login.masterData.SelectedOrgSite.nsitecode},url:\"organisation/getSiteDepartmentComboData\",listName:\"siteDepartmentList\",columnList:_this.siteDepartmentColumnList,inputData:{nsitecode:_this.props.Login.masterData.SelectedOrgSite.nsitecode,userinfo:_this.props.Login.userInfo,completetreepath:completeTreePath},organisation:{selectedNode:\"Site\"}};_this.props.getOrganisationComboService(inputParam);}else{if(_this.props.Login.organisation&&_this.props.Login.organisation.selectedNode!==\"Section\"){if(_this.props.Login.organisation.selectedNode===\"Site\")inputParam={operation:\"create\",screenName:\"Department\",selectedRecord:{ssitename:_this.props.Login.masterData.SelectedOrgSite.ssitename,//this.props.Login.organisation.selectedNodeName, \nnsitecode:_this.props.Login.masterData.SelectedOrgSite.nsitecode//this.props.Login.organisation.primaryKeyValue\n},url:\"organisation/getSiteDepartmentComboData\",listName:\"siteDepartmentList\",columnList:_this.siteDepartmentColumnList,inputData:{nsitecode:_this.props.Login.masterData.SelectedOrgSite.nsitecode,//this.props.Login.organisation.primaryKeyValue, \nuserinfo:_this.props.Login.userInfo,completetreepath:_this.props.Login.masterData.CompleteTreePath}};else if(_this.props.Login.organisation.selectedNode===\"Department\")inputParam={operation:\"create\",screenName:\"Lab\",selectedRecord:{sdeptname:_this.props.Login.organisation.selectedNodeName,nsitedeptcode:_this.props.Login.organisation.primaryKeyValue},url:\"organisation/getDepartmentLabComboData\",listName:\"departmentLabList\",columnList:_this.deptLabColumnList,inputData:{nsitedeptcode:_this.props.Login.organisation.primaryKeyValue,userinfo:_this.props.Login.userInfo,completetreepath:_this.props.Login.masterData.CompleteTreePath}};else if(_this.props.Login.organisation.selectedNode===\"Lab\")inputParam={operation:\"create\",screenName:\"Section\",selectedRecord:{slabname:_this.props.Login.organisation.selectedNodeName,ndeptlabcode:_this.props.Login.organisation.primaryKeyValue},url:\"organisation/getLabSectionComboData\",listName:\"labSectionList\",columnList:_this.labSectionColumnList,inputData:{ndeptlabcode:_this.props.Login.organisation.primaryKeyValue,userinfo:_this.props.Login.userInfo,completetreepath:_this.props.Login.masterData.CompleteTreePath}};_this.props.getOrganisationComboService(inputParam);}else if(_this.props.Login.organisation&&_this.props.Login.organisation.selectedNode===\"Section\"){toast.warn(_this.props.intl.formatMessage({id:\"IDS_CLICKADDUSER\"}));}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTNODE\"}));}}};_this.addUser=function(){var inputParam={};if(_this.props.Login.organisation&&_this.props.Login.organisation.selectedNode===\"Section\"){inputParam={operation:\"create\",screenName:\"Users\",selectedRecord:{ssectionname:_this.props.Login.organisation.selectedNodeName,nlabsectioncode:_this.props.Login.organisation.primaryKeyValue},url:\"organisation/getSectionUsersComboData\",listName:\"sectionUsersList\",columnList:_this.sectionUserColumnList,inputData:{nlabsectioncode:_this.props.Login.organisation.primaryKeyValue,userinfo:_this.props.Login.userInfo,completetreepath:_this.props.Login.masterData.CompleteTreePath,nsitecode:_this.props.Login.masterData.SelectedOrgSite.nsitecode}};_this.props.getOrganisationComboService(inputParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSECTIONTOADD\"}));}};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var operation=_this.props.Login.operation;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']='';selectedRecord['esigncomments']='';}}else{openModal=false;selectedRecord={};//operation = undefined;\n}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,operation:operation}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;if(fieldName===\"nsitecode\"){_this.props.organisationService({inputData:{nsitecode:selectedRecord.nsitecode.value,userinfo:_this.props.Login.userInfo,graphview:false,completetreepath:selectedRecord.nsitecode.label,primarykey:selectedRecord.nsitecode.value},masterData:_this.props.Login.masterData,url:\"organisation/getSiteDepartment\"});}else{_this.setState({selectedRecord:selectedRecord});}};_this.reloadData=function(){var inputParam={inputData:{userinfo:_this.props.Login.userInfo},classUrl:\"organisation\",methodUrl:\"Organisation\",displayName:\"IDS_ORGANISATION\",userInfo:_this.props.Login.userInfo};//this.props.reloadTreeData(inputParam);  \n_this.props.callService(inputParam);};_this.onSaveClick=function(saveType,formRef){var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var methodUrl=\"\";var nextNode=\"\";if(_this.props.Login.organisation.selectedNode===\"Site\"){methodUrl=\"SiteDepartment\";var siteDepartment=[];_this.state.selectedRecord[\"ndeptcode\"]&&_this.state.selectedRecord[\"ndeptcode\"].map(function(item){return siteDepartment.push({nsitecode:_this.state.selectedRecord.nsitecode,ndeptcode:item.value});});inputData[\"sitedepartmentlist\"]=siteDepartment;nextNode=\"Department\";}else if(_this.props.Login.organisation.selectedNode===\"Department\"){methodUrl=\"DepartmentLab\";var departmentLab=[];_this.state.selectedRecord[\"nlabcode\"]&&_this.state.selectedRecord[\"nlabcode\"].map(function(item){return departmentLab.push({nsitedeptcode:_this.state.selectedRecord.nsitedeptcode,nlabcode:item.value});});inputData[\"nsitecode\"]=_this.props.Login.masterData.SelectedOrgSite.nsitecode;inputData[\"departmentlablist\"]=departmentLab;nextNode=\"Lab\";}else if(_this.props.Login.organisation.selectedNode===\"Lab\"){methodUrl=\"LabSection\";var labSection=[];_this.state.selectedRecord[\"nsectioncode\"]&&_this.state.selectedRecord[\"nsectioncode\"].map(function(item){return labSection.push({ndeptlabcode:_this.state.selectedRecord.ndeptlabcode,nsectioncode:item.value});});inputData[\"nsitecode\"]=_this.props.Login.masterData.SelectedOrgSite.nsitecode;inputData[\"labsectionlist\"]=labSection;nextNode=\"Section\";}else if(_this.props.Login.organisation.selectedNode===\"Section\"){methodUrl=\"SectionUsers\";var sectionUsers=[];_this.state.selectedRecord[\"nusercode\"]&&_this.state.selectedRecord[\"nusercode\"].map(function(item){return sectionUsers.push({nlabsectioncode:_this.state.selectedRecord.nlabsectioncode,nusercode:item.value,nsitecode:_this.props.Login.masterData.SelectedOrgSite.nsitecode});});inputData[\"nsitecode\"]=_this.props.Login.masterData.SelectedOrgSite.nsitecode;inputData[\"sectionuserslist\"]=sectionUsers;nextNode=\"Section\";}var masterData=_this.props.Login.masterData;inputData[\"completetreepath\"]=masterData.CompleteTreePath;var inputParam={classUrl:\"organisation\",methodUrl:methodUrl,inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,nextNode:nextNode};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteRecord=function(deleteParam){var validateDelete=false;if(deleteParam.methodUrl===\"SectionUsers\"){deleteParam[\"inputData\"]=_objectSpread(_objectSpread({},deleteParam[\"inputData\"]),{},{//sectionusers:deleteParam.selectedRecord,\ndeleteid:deleteParam.selectedRecord.nsectionusercode});validateDelete=true;}else{if(_this.props.Login.organisation){if(_this.props.Login.organisation.selectedNode!==\"Site\"){deleteParam[\"inputData\"]=_objectSpread({},deleteParam[\"inputData\"]);validateDelete=true;}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_CANNOTDELETESITE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTNODETODELETE\"}));}}if(validateDelete){if(deleteParam.inputData.sectionusers&&deleteParam.inputData.sectionusers.expanded!==undefined){delete deleteParam.inputData.sectionusers.expanded;}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,displayName:\"IDS_ORGANISATION\",methodUrl:deleteParam.methodUrl,inputData:_objectSpread(_objectSpread({},deleteParam.inputData),{},{completetreepath:_this.props.Login.masterData.CompleteTreePath}),operation:deleteParam.operation,nextNode:deleteParam.nextNode};var deleteId=_this.state.controlMap.has(\"Delete\")&&_this.state.controlMap.get(\"Delete\").ncontrolcode;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"Organisation\",operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();_this.childRef=React.createRef();var _dataState={skip:0};_this.confirmMessage=new ConfirmMessage();_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:_dataState,userRoleControlRights:[],controlMap:new Map(),selectedClass:'selectedClass',siteClass:'siteClass',deptClass:'deptClass',labClass:'labClass',sectionClass:'sectionClass',userClass:'userClass'};_this.usersColumnList=[{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"300px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_DESIGNATION\",\"dataField\":\"sdesignationname\",\"width\":\"200px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];_this.roleColumnList=[{\"idsName\":\"IDS_ROLE\",\"dataField\":\"suserrolename\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_DEFAULTROLE\",\"dataField\":\"sdefaultstatus\",\"width\":\"100px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];_this.siteDepartmentColumnList=[{\"mandatory\":false,\"controlType\":\"textbox\",\"idsName\":\"IDS_SITE\",\"dataField\":\"ssitename\",\"mandatoryLabel\":\"IDS_ENTER\"},{\"mandatory\":true,\"idsName\":\"IDS_DEPARTMENT\",\"dataField\":\"ndeptcode\",\"optionId\":\"ndeptcode\",\"optionValue\":\"sdeptname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];_this.deptLabColumnList=[{\"mandatory\":false,\"controlType\":\"textbox\",\"idsName\":\"IDS_DEPTNAME\",\"dataField\":\"sdeptname\",\"mandatoryLabel\":\"IDS_ENTER\"},{\"mandatory\":true,\"idsName\":\"IDS_LAB\",\"dataField\":\"nlabcode\",\"optionId\":\"nlabcode\",\"optionValue\":\"slabname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];_this.labSectionColumnList=[{\"mandatory\":false,\"controlType\":\"textbox\",\"idsName\":\"IDS_LAB\",\"dataField\":\"slabname\",\"mandatoryLabel\":\"IDS_ENTER\"},{\"mandatory\":true,\"idsName\":\"IDS_SECTION\",\"dataField\":\"nsectioncode\",\"optionId\":\"nsectioncode\",\"optionValue\":\"ssectionname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];_this.sectionUserColumnList=[{\"mandatory\":false,\"controlType\":\"textbox\",\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",\"mandatoryLabel\":\"IDS_ENTER\"},{\"mandatory\":true,\"idsName\":\"IDS_USERS\",\"dataField\":\"nusercode\",\"optionId\":\"nusercode\",\"optionValue\":\"susername\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];return _this;}_createClass(Organisation,[{key:\"render\",value:function render(){var _this2=this;var addId=this.state.controlMap.has(\"Add\")&&this.state.controlMap.get(\"Add\").ncontrolcode;var deleteId=this.state.controlMap.has(\"Delete\")&&this.state.controlMap.get(\"Delete\").ncontrolcode;var addUserId=this.state.controlMap.has(\"AddSectionUsers\")&&this.state.controlMap.get(\"AddSectionUsers\").ncontrolcode;var usersDeleteParam={operation:\"delete\",methodUrl:\"SectionUsers\",nextNode:\"Section\",inputData:{userinfo:this.props.Login.userInfo,nsitecode:this.props.Login.masterData.SelectedOrgSite&&this.props.Login.masterData.SelectedOrgSite.nsitecode}};var selectedOrgSite=this.props.Login.masterData.SelectedOrgSite||{};var deleteParam={};var comboDataList=[];var columnList=[];if(this.props.Login.organisation&&this.props.Login.organisation.selectedNode===\"Site\"){comboDataList=this.props.Login.siteDepartmentList||[];columnList=this.siteDepartmentColumnList;}else if(this.props.Login.organisation&&this.props.Login.organisation.selectedNode===\"Department\"){comboDataList=this.props.Login.departmentLabList||[];columnList=this.deptLabColumnList;deleteParam={screenName:\"SiteDepartment\",methodUrl:\"SiteDepartment\",operation:\"delete\",nextNode:\"Site\",inputData:{//sitedepartment:this.props.Login.organisation.selectedNodeDetail,\nnsitedeptcode:this.props.Login.organisation.primaryKeyValue,userinfo:this.props.Login.userInfo}};}else if(this.props.Login.organisation&&this.props.Login.organisation.selectedNode===\"Lab\"){comboDataList=this.props.Login.labSectionList||[];columnList=this.labSectionColumnList;deleteParam={screenName:\"DepartmentLab\",methodUrl:\"DepartmentLab\",operation:\"delete\",nextNode:\"Department\",inputData:{//departmentlab:this.props.Login.organisation.selectedNodeDetail,\nndeptlabcode:this.props.Login.organisation.primaryKeyValue,userinfo:this.props.Login.userInfo,nsitecode:this.props.Login.masterData.SelectedOrgSite&&this.props.Login.masterData.SelectedOrgSite.nsitecode}};}else if(this.props.Login.organisation&&this.props.Login.organisation.selectedNode===\"Section\"){comboDataList=this.props.Login.sectionUsersList||[];columnList=this.sectionUserColumnList;deleteParam={screenName:\"LabSection\",methodUrl:\"LabSection\",operation:\"delete\",nextNode:\"Lab\",inputData:{//labsection:this.props.Login.organisation.selectedNodeDetail, \nnlabsectioncode:this.props.Login.organisation.primaryKeyValue,userinfo:this.props.Login.userInfo,nsitecode:this.props.Login.masterData.SelectedOrgSite&&this.props.Login.masterData.SelectedOrgSite.nsitecode}};}// const deleteConfirmMsg = `IDS_CONFIRMDELETE${this.props.Login.organisation && this.props.Login.organisation.selectedNode && this.props.Login.organisation.selectedNode.toUpperCase()}`;\nvar selectedPath=this.props.Login.masterData&&this.props.Login.masterData.CompleteTreePath&&this.props.Login.masterData.CompleteTreePath.replaceAll(\"/\",\" / \");//  const confirmMessage = new ConfirmMessage();\nvar mandatoryFields=[];columnList.forEach(function(item){return item.mandatory===true?mandatoryFields.push(item):\"\";});var defaultHeight=600;var graphHeight=this.props.Login.graphHeight?this.props.Login.graphHeight:defaultHeight;if(graphHeight<defaultHeight){graphHeight=defaultHeight;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-5\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:5},/*#__PURE__*/React.createElement(Affix,{top:65},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(SearchAdd,{className:\"org-tree-search\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:5},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsitecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SITE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.siteList||[],value:this.props.Login.masterData&&this.props.Login.masterData.SelectedOrgSite&&{value:this.props.Login.masterData.SelectedOrgSite.nsitecode,label:this.props.Login.masterData.SelectedOrgSite.ssitename},isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'nsitecode');}})),/*#__PURE__*/React.createElement(Col,{md:7},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),hidden:this.state.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this2.openModal();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteLink\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,className:\"btn btn-circle outline-grey ml-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"})//  data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.props.Login.organisation?_this2.confirmDelete(_objectSpread({},deleteParam)):toast.warn(_this2.props.intl.formatMessage({id:\"IDS_SELECTNODETODELETE\"}));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",onClick:function onClick(){return _this2.reloadData();}//data-for=\"tooltip_list_wrap\"\n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_GRAPH\"})// data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.props.organisationService({inputData:{nsitecode:_this2.props.Login.masterData.SelectedOrgSite&&_this2.props.Login.masterData.SelectedOrgSite.nsitecode,userinfo:_this2.props.Login.userInfo,graphview:true,completetreepath:\"\",primarykey:0},masterData:_this2.props.Login.masterData,selectedNode:\"Site\",url:\"organisation/getSiteDepartment\"});}},/*#__PURE__*/React.createElement(Graph,{className:\"custom_icons\",width:\"20\",height:\"20\"}),\" \")))))),selectedOrgSite&&selectedOrgSite.ssitename&&this.props.Login.masterData.SiteDepartment.length>0?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(PerfectScrollbar,{className:\"org-tree-scroll\"},/*#__PURE__*/React.createElement(FormTreeMenu//data ={treeMap.get(\"data\")}\n,{placeholder:this.props.intl.formatMessage({id:\"IDS_FILTER\"}),data:this.props.Login.masterData.TreeData,handleTreeClick:this.onTreeClick,activeKey:this.props.Login.masterData.CompleteTreePath||\"\",focusKey:this.props.Login.masterData.CompleteTreePath||\"\",initialOpenNodes:this.props.Login.masterData.TreeInitialOpenNodes,hasSearch:true})))):\"\")),/*#__PURE__*/React.createElement(Col,{md:7},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"p-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addrole\",className:\"add-txt-btn\"// data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDUSERS\" })}\n,hidden:this.props.Login.inputParam&&this.state.userRoleControlRights.indexOf(addUserId)===-1,onClick:function onClick(){return _this2.addUser();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_USER\",defaultMessage:\"User\"}))),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,selectedPath),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nusercode\",data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.usersColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.inputParam,userInfo:this.props.userInfo,methodUrl:\"SectionUsers\",deleteRecord:this.deleteRecord,deleteParam:usersDeleteParam,pageable:false,scrollable:\"scrollable\"//isComponent={false}\n,isActionRequired:true,isToolBarRequired:false,selectedId:this.props.Login.selectedId,expandField:\"expanded\",handleExpandChange:this.handleExpandChange,hasChild:true,childColumnList:this.roleColumnList,childMappingField:\"nusercode\",childList:this.props.Login.userRoleMap||new Map()/**Uncomment below handleRowClick when row click is needed */ //handleRowClick={this.handleRowClick}  \n}):\"\")))))))))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,size:this.props.Login.graphView?'xl':'lg',closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,graphView:this.props.Login.graphView,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,resetView:this.resetView// addComponentParam={{comboDataList, columnList}}                   \n// addComponent={this.addComponent}\n,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.graphView?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,style:{backgroundColor:'#ffffff'}},/*#__PURE__*/React.createElement(Tree// data={this.graphView()[\"initialNode\"]}\n,{data:this.props.Login.graphData,height:graphHeight// height={900}\n,width:1000,animated:true,duration:800,svgProps:{// transform: 'rotate(90)',\nclassName:'custom'}})))):/*#__PURE__*/React.createElement(AddChild,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,comboDataList:comboDataList,extractedColumnList:columnList,handleDateChange:this.handleDateChange})}):\"\");}/**Uncomment below handleRowClick event handler function when row click is needed */ // handleRowClick = (event) =>{\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             selectedId: event.dataItem[\"nusercode\"]\n//         }\n//     }\n//     this.props.updateStore(updateInfo)\n// }\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);var siteMap=constructOptionList(this.props.Login.masterData.OrganisationSite||[],\"nsitecode\",\"ssitename\",undefined,undefined,true);var siteList=siteMap.get(\"OptionList\");this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,siteList:siteList,data:this.props.Login.data||this.props.Login.masterData.SectionUsers||[],dataResult:process(this.props.Login.data||this.props.Login.masterData.SectionUsers||[],this.state.dataState)//roleData: this.props.Login.masterData.SectionUserRoleList || [],\n//roleDataResult:process(this.props.Login.masterData.SectionUserRoleList||[], this.state.roleDataState),\n});}else{var dataState=this.props.Login.dataState||this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0};}var userData=this.props.Login.data||this.props.Login.masterData.SectionUsers||[];this.setState({selectedRecord:this.props.Login.selectedRecord,data:userData,dataResult:process(userData,this.props.Login.dataState||dataState),dataState:dataState//organisation:{...this.props.Login.organisation, primaryKeyValue: this.props.Login.masterData.AddedChildPrimaryKey }\n});}}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return Organisation;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,getOrganisationComboService:getOrganisationComboService,getSectionUserRole:getSectionUserRole,organisationService:organisationService,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(Organisation));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/organisation/organisationmapping/Organisation.jsx"],"names":["React","toast","process","connect","FormattedMessage","injectIntl","PerfectScrollbar","Affix","Tree","faTrashAlt","FontAwesomeIcon","faPlus","faSync","Row","Col","Button","Card","Nav","callService","crudMaster","updateStore","validateEsignCredential","organisationService","getSectionUserRole","getOrganisationComboService","AddChild","Esign","SlideOutModal","FormSelectSearch","ConfirmMessage","transactionStatus","showEsign","getControlMap","constructOptionList","DataGrid","FormTreeMenu","DEFAULT_RETURN","SearchAdd","mapStateToProps","state","Login","Organisation","props","dataStateChange","event","setState","dataState","dataResult","data","handleDateChange","dateName","dateValue","selectedRecord","resetView","inputParam","inputData","nsitecode","masterData","SelectedOrgSite","userinfo","userInfo","graphview","completetreepath","primarykey","selectedNode","url","handleExpandChange","row","viewParam","primaryKeyField","primaryKeyValue","viewRow","confirmDelete","deleteParam","deleteConfirmMsg","organisation","toUpperCase","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","onTreeClick","item","selectedtreepath","key","selectedNodeDetail","serviceUrl","updateInfo","typeName","undefined","SectionUsers","openModal","SiteDepartment","length","completeTreePath","CompleteTreePath","ssitename","operation","screenName","listName","columnList","siteDepartmentColumnList","sdeptname","selectedNodeName","nsitedeptcode","deptLabColumnList","slabname","ndeptlabcode","labSectionColumnList","warn","addUser","ssectionname","nlabsectioncode","sectionUserColumnList","closeModal","loadEsign","onInputOnChange","target","type","name","checked","YES","NO","value","onComboChange","comboData","fieldName","label","reloadData","classUrl","methodUrl","displayName","onSaveClick","saveType","formRef","nextNode","siteDepartment","map","push","ndeptcode","departmentLab","nlabcode","labSection","nsectioncode","sectionUsers","nusercode","userRoleControlRights","nformcode","ncontrolCode","screenData","validateDelete","deleteid","nsectionusercode","sectionusers","expanded","deleteId","controlMap","has","get","ncontrolcode","validateEsign","sreason","password","createRef","childRef","skip","masterStatus","error","Map","selectedClass","siteClass","deptClass","labClass","sectionClass","userClass","usersColumnList","roleColumnList","addId","addUserId","usersDeleteParam","selectedOrgSite","comboDataList","siteDepartmentList","departmentLabList","labSectionList","sectionUsersList","selectedPath","replaceAll","mandatoryFields","forEach","mandatory","defaultHeight","graphHeight","siteList","indexOf","TreeData","TreeInitialOpenNodes","selectedId","userRoleMap","graphView","backgroundColor","graphData","className","previousProps","Object","values","siteMap","OrganisationSite","userData","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Affix } from 'rsuite';\r\nimport Tree from 'react-tree-graph';\r\n\r\nimport '../../../../node_modules/react-simple-tree-menu/dist/main.css';\r\n\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { Row, Col, Button, Card, Nav } from 'react-bootstrap';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'react-tree-graph/dist/style.css';\r\n\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential, organisationService,\r\n    getSectionUserRole, getOrganisationComboService\r\n} from '../../../actions';\r\n\r\nimport AddChild from './AddChild';\r\nimport Esign from '../../../pages/audittrail/Esign';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\nimport { showEsign, getControlMap, constructOptionList } from '../../../components/CommonScript';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\n\r\nimport FormTreeMenu from '../../../components/form-tree-menu/form-tree-menu.component';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\n\r\nimport './treegraph.css';\r\nimport { SearchAdd } from '../../../components/App.styles';\r\nimport { ReactComponent as Graph } from '../../../assets/image/organisational-graph.svg';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Organisation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.childRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0\r\n        };\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [], dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n\r\n            selectedClass: 'selectedClass',\r\n            siteClass: 'siteClass',\r\n            deptClass: 'deptClass',\r\n            labClass: 'labClass',\r\n            sectionClass: 'sectionClass',\r\n            userClass: 'userClass',\r\n\r\n        };\r\n\r\n        this.usersColumnList = [{ \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"300px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_DESIGNATION\", \"dataField\": \"sdesignationname\", \"width\": \"200px\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        ];\r\n\r\n        this.roleColumnList = [{ \"idsName\": \"IDS_ROLE\", \"dataField\": \"suserrolename\", \"width\": \"150px\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_DEFAULTROLE\", \"dataField\": \"sdefaultstatus\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        ];\r\n        this.siteDepartmentColumnList = [{ \"mandatory\": false, \"controlType\": \"textbox\", \"idsName\": \"IDS_SITE\", \"dataField\": \"ssitename\", \"mandatoryLabel\":\"IDS_ENTER\" },\r\n        {\r\n            \"mandatory\": true, \"idsName\": \"IDS_DEPARTMENT\",\r\n            \"dataField\": \"ndeptcode\", \"optionId\": \"ndeptcode\", \"optionValue\": \"sdeptname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n        }];\r\n\r\n        this.deptLabColumnList = [{ \"mandatory\": false, \"controlType\": \"textbox\", \"idsName\": \"IDS_DEPTNAME\", \"dataField\": \"sdeptname\", \"mandatoryLabel\":\"IDS_ENTER\" },\r\n        {\r\n            \"mandatory\": true, \"idsName\": \"IDS_LAB\",\r\n            \"dataField\": \"nlabcode\", \"optionId\": \"nlabcode\", \"optionValue\": \"slabname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n        }];\r\n\r\n        this.labSectionColumnList = [{ \"mandatory\": false, \"controlType\": \"textbox\", \"idsName\": \"IDS_LAB\", \"dataField\": \"slabname\", \"mandatoryLabel\":\"IDS_ENTER\"},\r\n        {\r\n            \"mandatory\": true, \"idsName\": \"IDS_SECTION\",\r\n            \"dataField\": \"nsectioncode\", \"optionId\": \"nsectioncode\", \"optionValue\": \"ssectionname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n        }];\r\n\r\n        this.sectionUserColumnList = [{ \"mandatory\": false, \"controlType\": \"textbox\", \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\" , \"mandatoryLabel\":\"IDS_ENTER\"},\r\n        {\r\n            \"mandatory\": true, \"idsName\": \"IDS_USERS\",\r\n            \"dataField\": \"nusercode\", \"optionId\": \"nusercode\", \"optionValue\": \"susername\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n        }];\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n\r\n        // const viewParam = {\r\n        //     nsitecode: this.props.Login.masterData.SelectedOrgSite && this.props.Login.masterData.SelectedOrgSite.nsitecode,\r\n        //     userInfo: this.props.Login.userInfo, primaryKeyField: \"nusercode\",\r\n        //     masterData: this.props.Login.masterData\r\n        // };\r\n\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // const row = process(this.state.data, event.dataState);\r\n        // if (row.data.length > 0) {\r\n        //     this.props.getSectionUserRole({\r\n        //         ...viewParam,\r\n        //         primaryKeyValue: row.data[0][viewParam.primaryKeyField],\r\n        //         viewRow: row.data[0], data: this.state.data, dataResult: row, dataState: event.dataState\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    render() {\r\n\r\n        const addId = this.state.controlMap.has(\"Add\") && this.state.controlMap.get(\"Add\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"Delete\") && this.state.controlMap.get(\"Delete\").ncontrolcode;\r\n        const addUserId = this.state.controlMap.has(\"AddSectionUsers\") && this.state.controlMap.get(\"AddSectionUsers\").ncontrolcode;\r\n\r\n        const usersDeleteParam = {\r\n            operation: \"delete\", methodUrl: \"SectionUsers\",\r\n            nextNode: \"Section\",\r\n            inputData: {\r\n                userinfo: this.props.Login.userInfo,\r\n                nsitecode: this.props.Login.masterData.SelectedOrgSite && this.props.Login.masterData.SelectedOrgSite.nsitecode\r\n            }\r\n        };\r\n\r\n        const selectedOrgSite = this.props.Login.masterData.SelectedOrgSite || {};\r\n\r\n        let deleteParam = {};\r\n        let comboDataList = [];\r\n        let columnList = [];\r\n        if (this.props.Login.organisation && this.props.Login.organisation.selectedNode === \"Site\") {\r\n            comboDataList = this.props.Login.siteDepartmentList || [];\r\n            columnList = this.siteDepartmentColumnList;\r\n        }\r\n        else if (this.props.Login.organisation && this.props.Login.organisation.selectedNode === \"Department\") {\r\n            comboDataList = this.props.Login.departmentLabList || [];\r\n            columnList = this.deptLabColumnList;\r\n            deleteParam = {\r\n                screenName: \"SiteDepartment\", methodUrl: \"SiteDepartment\",\r\n                operation: \"delete\",\r\n                nextNode: \"Site\",\r\n                inputData: {//sitedepartment:this.props.Login.organisation.selectedNodeDetail,\r\n                    nsitedeptcode: this.props.Login.organisation.primaryKeyValue,\r\n                    userinfo: this.props.Login.userInfo\r\n                }\r\n            };\r\n        }\r\n        else if (this.props.Login.organisation && this.props.Login.organisation.selectedNode === \"Lab\") {\r\n            comboDataList = this.props.Login.labSectionList || [];\r\n            columnList = this.labSectionColumnList;\r\n            deleteParam = {\r\n                screenName: \"DepartmentLab\",\r\n                methodUrl: \"DepartmentLab\",\r\n                operation: \"delete\",\r\n                nextNode: \"Department\",\r\n                inputData: {//departmentlab:this.props.Login.organisation.selectedNodeDetail,\r\n                    ndeptlabcode: this.props.Login.organisation.primaryKeyValue,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsitecode: this.props.Login.masterData.SelectedOrgSite && this.props.Login.masterData.SelectedOrgSite.nsitecode\r\n                }\r\n            };\r\n        }\r\n        else if (this.props.Login.organisation && this.props.Login.organisation.selectedNode === \"Section\") {\r\n            comboDataList = this.props.Login.sectionUsersList || [];\r\n            columnList = this.sectionUserColumnList;\r\n\r\n            deleteParam = {\r\n                screenName: \"LabSection\",\r\n                methodUrl: \"LabSection\",\r\n                operation: \"delete\",\r\n                nextNode: \"Lab\",\r\n                inputData: {//labsection:this.props.Login.organisation.selectedNodeDetail, \r\n                    nlabsectioncode: this.props.Login.organisation.primaryKeyValue,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nsitecode: this.props.Login.masterData.SelectedOrgSite && this.props.Login.masterData.SelectedOrgSite.nsitecode\r\n                }\r\n            };\r\n        }\r\n        // const deleteConfirmMsg = `IDS_CONFIRMDELETE${this.props.Login.organisation && this.props.Login.organisation.selectedNode && this.props.Login.organisation.selectedNode.toUpperCase()}`;\r\n\r\n        const selectedPath = this.props.Login.masterData && this.props.Login.masterData.CompleteTreePath\r\n            && this.props.Login.masterData.CompleteTreePath.replaceAll(\"/\", \" / \");\r\n\r\n        //  const confirmMessage = new ConfirmMessage();\r\n\r\n        const mandatoryFields = [];\r\n        columnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n\r\n        const defaultHeight = 600;\r\n        let graphHeight = this.props.Login.graphHeight ? this.props.Login.graphHeight : defaultHeight;\r\n        if (graphHeight < defaultHeight) {\r\n            graphHeight = defaultHeight;\r\n        }\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                <div className=\"client-listing-wrap mtop-5\">\r\n\r\n                    {/* Start of get display*/}\r\n                    <Row noGutters>\r\n                        <Col md={5}>\r\n                            <Affix top={65}>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <SearchAdd className=\"org-tree-search\">\r\n                                            <Row>\r\n                                                <Col md={5}>\r\n                                                    <FormSelectSearch\r\n                                                        name={\"nsitecode\"}\r\n                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SITE\" })}\r\n                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                        options={this.state.siteList || []}\r\n                                                        value={this.props.Login.masterData && this.props.Login.masterData.SelectedOrgSite\r\n                                                            && {\r\n                                                            value: this.props.Login.masterData.SelectedOrgSite.nsitecode,\r\n                                                            label: this.props.Login.masterData.SelectedOrgSite.ssitename\r\n                                                        }}\r\n                                                        isMandatory={true}\r\n                                                        isMulti={false}\r\n                                                        isClearable={false}\r\n                                                        isSearchable={true}\r\n                                                        isDisabled={false}\r\n                                                        closeMenuOnSelect={true}\r\n                                                        className=\"mb-2\"\r\n                                                        onChange={(event) => this.onComboChange(event, 'nsitecode')}\r\n                                                    />\r\n                                                </Col>\r\n\r\n                                                <Col md={7}>\r\n                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click'/> */}\r\n                                                    <Button\r\n                                                        className=\"btn btn-icon-rounded btn-circle solid-blue\"\r\n                                                        role=\"button\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                                        onClick={() => this.openModal()}>\r\n                                                        <FontAwesomeIcon icon={faPlus} />\r\n                                                    </Button>\r\n\r\n                                                    <Nav.Link\r\n                                                        name=\"deleteLink\"\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                      //  data-for=\"tooltip_list_wrap\"\r\n                                                        onClick={() => this.props.Login.organisation ? this.confirmDelete({ ...deleteParam }) : toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTNODETODELETE\" }))}\r\n                                                    >\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                                        {/* <ConfirmDialog\r\n                                                            name=\"deleteMessage\"\r\n                                                            message={this.props.intl.formatMessage({ id: `${deleteConfirmMsg}`})}\r\n                                                            doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                            doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                            icon={faTrashAlt}\r\n                                                            title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            handleClickDelete={() => this.deleteRecord({ ...deleteParam })}\r\n                                                        /> */}\r\n\r\n                                                        {/* <FontAwesomeIcon\r\n                                                            icon={faTrashAlt}\r\n                                                            title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            onClick={() => this.props.Login.organisation ? confirmMessage.confirm(\r\n                                                                \"deleteMessage\",\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                                this.props.intl.formatMessage({ id: `${deleteConfirmMsg}` }),\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                                                this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                                                () => this.deleteRecord({ ...deleteParam })) : toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTNODETODELETE\" }))\r\n                                                            }\r\n                                                        /> */}\r\n                                                    </Nav.Link>\r\n\r\n                                                    <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                        onClick={() => this.reloadData()} \r\n                                                        //data-for=\"tooltip_list_wrap\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                        <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                    </Button>\r\n                                                    {/* <ContentPanel className=\"d-flex justify-content-end dropdown badget_menu icon-group-wrap\"> */}\r\n                                                    <Nav.Link\r\n                                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                                        variant=\"link\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_GRAPH\" })}\r\n                                                       // data-for=\"tooltip_list_wrap\"\r\n                                                        onClick={() => this.props.organisationService({\r\n                                                            inputData: {\r\n                                                                nsitecode: this.props.Login.masterData.SelectedOrgSite && this.props.Login.masterData.SelectedOrgSite.nsitecode,\r\n                                                                userinfo: this.props.Login.userInfo,\r\n                                                                graphview: true, completetreepath: \"\", primarykey: 0\r\n                                                            },\r\n                                                            masterData: this.props.Login.masterData, selectedNode: \"Site\",\r\n                                                            url: \"organisation/getSiteDepartment\"\r\n                                                        })}>\r\n                                                        <Graph className=\"custom_icons\" width=\"20\" height=\"20\" /> { }\r\n                                                        {/* <FontAwesomeIcon icon={faBars} title={this.props.intl.formatMessage({id:'IDS_GRAPH'})}/>  */}\r\n                                                    </Nav.Link  >\r\n                                                    {/* </ContentPanel> */}\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </SearchAdd>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                {selectedOrgSite && selectedOrgSite.ssitename &&\r\n                                    this.props.Login.masterData.SiteDepartment.length > 0 ?\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <PerfectScrollbar className=\"org-tree-scroll\">\r\n                                                <FormTreeMenu //data ={treeMap.get(\"data\")}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_FILTER\" })}\r\n                                                    data={this.props.Login.masterData.TreeData}\r\n                                                    handleTreeClick={this.onTreeClick}\r\n                                                    activeKey={this.props.Login.masterData.CompleteTreePath || \"\"}\r\n                                                    focusKey={this.props.Login.masterData.CompleteTreePath || \"\"}\r\n                                                    initialOpenNodes={this.props.Login.masterData.TreeInitialOpenNodes}\r\n                                                    hasSearch={true}\r\n                                                />\r\n                                            </PerfectScrollbar>\r\n                                        </Col>\r\n                                    </Row> : \"\"}\r\n                            </Affix>\r\n                        </Col>\r\n\r\n                        <Col md={7}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <div className=\"p-3\">\r\n                                        {/* <Button className=\"btn btn-user btn-primary-blue mb-3\"\r\n                                            hidden={this.props.Login.inputParam && this.state.userRoleControlRights.indexOf(addUserId) === -1}\r\n                                            onClick={() => this.addUser()}\r\n                                            role=\"button\">\r\n                                            <FormattedMessage id={\"IDS_ADDUSER\"} defaultMessage='Add User' />\r\n                                        </Button> */}\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                            <Nav.Link name=\"addrole\" className=\"add-txt-btn\"\r\n                                                // data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDUSERS\" })}\r\n                                                hidden={this.props.Login.inputParam && this.state.userRoleControlRights.indexOf(addUserId) === -1}\r\n                                                onClick={() => this.addUser()}>\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                <FormattedMessage id='IDS_USER' defaultMessage='User' />\r\n                                            </Nav.Link>\r\n                                        </div>\r\n                                        <Card>\r\n                                            <Card.Header>\r\n                                                {selectedPath}\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        {this.state.data ?\r\n                                                            <DataGrid\r\n                                                                primaryKeyField={\"nusercode\"}\r\n                                                                data={this.state.data}\r\n                                                                dataResult={this.state.dataResult}\r\n                                                                dataState={this.state.dataState}\r\n                                                                dataStateChange={this.dataStateChange}\r\n                                                                extractedColumnList={this.usersColumnList}\r\n                                                                controlMap={this.state.controlMap}\r\n                                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                inputParam={this.props.inputParam}\r\n                                                                userInfo={this.props.userInfo}\r\n                                                                methodUrl=\"SectionUsers\"\r\n                                                                deleteRecord={this.deleteRecord}\r\n                                                                deleteParam={usersDeleteParam}\r\n                                                                pageable={false}\r\n                                                                scrollable={\"scrollable\"}\r\n                                                                //isComponent={false}\r\n                                                                isActionRequired={true}\r\n                                                                isToolBarRequired={false}\r\n                                                                selectedId={this.props.Login.selectedId}\r\n                                                                expandField=\"expanded\"\r\n                                                                handleExpandChange={this.handleExpandChange}\r\n                                                                hasChild={true}\r\n                                                                childColumnList={this.roleColumnList}\r\n                                                                childMappingField={\"nusercode\"}\r\n                                                                childList={this.props.Login.userRoleMap || new Map()}\r\n                                                            /**Uncomment below handleRowClick when row click is needed */\r\n                                                            //handleRowClick={this.handleRowClick}  \r\n                                                            />\r\n                                                            : \"\"}\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </div>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n                {/* Start of Modal Slideout*/}\r\n                {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        size={this.props.Login.graphView ? 'xl' : 'lg'}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        graphView={this.props.Login.graphView}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        resetView={this.resetView}\r\n                        // addComponentParam={{comboDataList, columnList}}                   \r\n                        // addComponent={this.addComponent}\r\n\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.graphView ?\r\n                                <>\r\n                                    {/* <Row>                                  \r\n                                    <Col md={12} style={{backgroundColor:'#ffffff', paddingTop:'20px', paddingBottom:'20px'}}>\r\n                                         <Button  className=\"btn btn-user btn-primary-blue\" role=\"button\"   \r\n                                          onClick={()=> this.props.organisationService({\r\n                                                        inputData: {\r\n                                                            nsitecode: this.props.Login.masterData.SelectedOrgSite && this.props.Login.masterData.SelectedOrgSite.nsitecode,\r\n                                                            userinfo: this.props.Login.userInfo,\r\n                                                            graphview: true, completetreepath: \"\", primarykey: 0\r\n                                                        },\r\n                                                        masterData: this.props.Login.masterData, selectedNode: \"Site\",\r\n                                                        url: \"organisation/getSiteDepartment\"\r\n                                                    })   }                              \r\n                                            >\r\n                                          <FormattedMessage id={\"IDS_RESET\"} defaultMessage='Reset' />\r\n                                    </Button>\r\n                                    </Col>\r\n                                </Row> */}\r\n                                    <Row>\r\n                                        <Col md={12} style={{ backgroundColor: '#ffffff' }}>\r\n                                            <Tree\r\n                                                // data={this.graphView()[\"initialNode\"]}\r\n                                                data={this.props.Login.graphData}\r\n                                                height={graphHeight}\r\n                                                // height={900}\r\n                                                width={1000}\r\n                                                animated\r\n                                                duration={800}\r\n                                                svgProps={{\r\n                                                    // transform: 'rotate(90)',\r\n                                                    className: 'custom'\r\n                                                }}\r\n                                            />\r\n                                            {/* <TreeGraph/> */}\r\n                                        </Col>\r\n                                    </Row></>\r\n                                : <AddChild\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    operation={this.props.Login.operation}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    comboDataList={comboDataList}\r\n                                    extractedColumnList={columnList}\r\n                                    handleDateChange={this.handleDateChange}\r\n\r\n                                />\r\n                        }\r\n                    /> : \"\"}\r\n                {/* End of Modal Sideout for GoodsIn Creation */}\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    /**Uncomment below handleRowClick event handler function when row click is needed */\r\n    // handleRowClick = (event) =>{\r\n    //     const updateInfo = {\r\n    //         typeName: DEFAULT_RETURN,\r\n    //         data: {\r\n    //             selectedId: event.dataItem[\"nusercode\"]\r\n    //         }\r\n    //     }\r\n    //     this.props.updateStore(updateInfo)\r\n    // }\r\n\r\n    resetView = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                nsitecode: this.props.Login.masterData.SelectedOrgSite\r\n                    && this.props.Login.masterData.SelectedOrgSite.nsitecode,\r\n                userinfo: this.props.Login.userInfo,\r\n                graphview: true, completetreepath: \"\", primarykey: 0\r\n            },\r\n            masterData: this.props.Login.masterData, selectedNode: \"Site\",\r\n            url: \"organisation/getSiteDepartment\"\r\n        }\r\n\r\n        this.props.organisationService(inputParam);\r\n    }\r\n\r\n    handleExpandChange = (row, dataState) => {\r\n        const viewParam = {\r\n            nsitecode: this.props.Login.masterData.SelectedOrgSite && this.props.Login.masterData.SelectedOrgSite.nsitecode,\r\n            userInfo: this.props.Login.userInfo, primaryKeyField: \"nusercode\",\r\n            masterData: this.props.Login.masterData\r\n        };\r\n\r\n        this.props.getSectionUserRole({\r\n            ...viewParam, dataState,\r\n            primaryKeyValue: row[\"dataItem\"][viewParam.primaryKeyField], viewRow: row[\"dataItem\"]\r\n        });\r\n\r\n    }\r\n\r\n    confirmDelete = (deleteParam) => {\r\n\r\n        const deleteConfirmMsg = `IDS_CONFIRMDELETE${this.props.Login.organisation && this.props.Login.organisation.selectedNode && this.props.Login.organisation.selectedNode.toUpperCase()}`;\r\n\r\n        this.confirmMessage.confirm(\"deleteMessage\",\r\n            this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n            this.props.intl.formatMessage({ id: `${deleteConfirmMsg}` }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(deleteParam)\r\n        );\r\n    }\r\n\r\n    onTreeClick = (event) => {\r\n        if (event) {\r\n            if (event.item.selectedNode === \"Section\") {\r\n                let masterData = { ...this.props.Login.masterData }\r\n                let inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    selectedtreepath: event.key, graphview: false,\r\n                    [event.item.primaryKeyField]: event.item.selectedNodeDetail[event.item.primaryKeyField]\r\n                }\r\n                masterData[\"CompleteTreePath\"] = event.key;\r\n                this.props.organisationService({\r\n                    inputData,\r\n                    //url:event.getParam.url,\r\n                    url: event.serviceUrl,\r\n                    masterData,\r\n                    organisation: { ...event.item }\r\n                })\r\n            }\r\n            else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        organisation: { ...event.item },\r\n                        data: undefined, dataState: undefined,\r\n                        masterData: { ...this.props.Login.masterData, \"CompleteTreePath\": event.key, SectionUsers: [] }\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                const siteMap = constructOptionList(this.props.Login.masterData.OrganisationSite || [], \"nsitecode\",\r\n                    \"ssitename\", undefined, undefined, true);\r\n                const siteList = siteMap.get(\"OptionList\");\r\n\r\n\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, siteList: siteList,\r\n                    data: this.props.Login.data || this.props.Login.masterData.SectionUsers || [],\r\n                    dataResult: process(this.props.Login.data || this.props.Login.masterData.SectionUsers || [], this.state.dataState),\r\n                    //roleData: this.props.Login.masterData.SectionUserRoleList || [],\r\n                    //roleDataResult:process(this.props.Login.masterData.SectionUserRoleList||[], this.state.roleDataState),\r\n\r\n                });\r\n            }\r\n            else {\r\n                let dataState = this.props.Login.dataState || this.state.dataState;\r\n\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0 };\r\n                }\r\n                const userData = this.props.Login.data || this.props.Login.masterData.SectionUsers || [];\r\n\r\n                this.setState({\r\n                    selectedRecord: this.props.Login.selectedRecord,\r\n                    data: userData,\r\n                    dataResult: process(userData, this.props.Login.dataState || dataState),\r\n                    dataState: dataState,\r\n                    //organisation:{...this.props.Login.organisation, primaryKeyValue: this.props.Login.masterData.AddedChildPrimaryKey }\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    openModal = () => {\r\n        let inputParam = {};\r\n        //const primaryKey = this.props.Login.masterData.AddedChildPrimaryKey;\r\n        // console.log(\"master data in open modal:\", this.props.Login.masterData);\r\n        if (this.props.Login.masterData.SiteDepartment.length === 0) {\r\n            let completeTreePath = this.props.Login.masterData.CompleteTreePath;\r\n            if (completeTreePath === \"\") {\r\n                completeTreePath = this.props.Login.masterData.SelectedOrgSite.ssitename;\r\n            }\r\n            inputParam = {\r\n                operation: \"create\", screenName: \"Department\",\r\n                selectedRecord: {\r\n                    ssitename: this.props.Login.masterData.SelectedOrgSite.ssitename,\r\n                    nsitecode: this.props.Login.masterData.SelectedOrgSite.nsitecode,\r\n                },\r\n                url: \"organisation/getSiteDepartmentComboData\",\r\n                listName: \"siteDepartmentList\",\r\n                columnList: this.siteDepartmentColumnList,\r\n                inputData: {\r\n                    nsitecode: this.props.Login.masterData.SelectedOrgSite.nsitecode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    completetreepath: completeTreePath,\r\n                },\r\n                organisation: { selectedNode: \"Site\", }\r\n            };\r\n            this.props.getOrganisationComboService(inputParam);\r\n        }\r\n        else {\r\n            if (this.props.Login.organisation && this.props.Login.organisation.selectedNode !== \"Section\") {\r\n                if (this.props.Login.organisation.selectedNode === \"Site\")\r\n                    inputParam = {\r\n                        operation: \"create\", screenName: \"Department\",\r\n                        selectedRecord: {\r\n                            ssitename: this.props.Login.masterData.SelectedOrgSite.ssitename,//this.props.Login.organisation.selectedNodeName, \r\n                            nsitecode: this.props.Login.masterData.SelectedOrgSite.nsitecode,\r\n                            //this.props.Login.organisation.primaryKeyValue\r\n                        },\r\n                        url: \"organisation/getSiteDepartmentComboData\",\r\n                        listName: \"siteDepartmentList\",\r\n                        columnList: this.siteDepartmentColumnList,\r\n                        inputData: {\r\n                            nsitecode: this.props.Login.masterData.SelectedOrgSite.nsitecode,//this.props.Login.organisation.primaryKeyValue, \r\n                            userinfo: this.props.Login.userInfo,\r\n                            completetreepath: this.props.Login.masterData.CompleteTreePath\r\n                        }\r\n                    };\r\n                else if (this.props.Login.organisation.selectedNode === \"Department\")\r\n                    inputParam = {\r\n                        operation: \"create\", screenName: \"Lab\",\r\n                        selectedRecord: {\r\n                            sdeptname: this.props.Login.organisation.selectedNodeName,\r\n                            nsitedeptcode: this.props.Login.organisation.primaryKeyValue\r\n                        },\r\n                        url: \"organisation/getDepartmentLabComboData\",\r\n                        listName: \"departmentLabList\",\r\n                        columnList: this.deptLabColumnList,\r\n                        inputData: {\r\n                            nsitedeptcode: this.props.Login.organisation.primaryKeyValue,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            completetreepath: this.props.Login.masterData.CompleteTreePath\r\n                        }\r\n                    };\r\n                else if (this.props.Login.organisation.selectedNode === \"Lab\")\r\n                    inputParam = {\r\n                        operation: \"create\", screenName: \"Section\",\r\n                        selectedRecord: {\r\n                            slabname: this.props.Login.organisation.selectedNodeName,\r\n                            ndeptlabcode: this.props.Login.organisation.primaryKeyValue\r\n                        },\r\n                        url: \"organisation/getLabSectionComboData\",\r\n                        listName: \"labSectionList\",\r\n                        columnList: this.labSectionColumnList,\r\n                        inputData: {\r\n                            ndeptlabcode: this.props.Login.organisation.primaryKeyValue,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            completetreepath: this.props.Login.masterData.CompleteTreePath\r\n                        }\r\n                    };\r\n                this.props.getOrganisationComboService(inputParam);\r\n            }\r\n            else if (this.props.Login.organisation && this.props.Login.organisation.selectedNode === \"Section\") {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_CLICKADDUSER\" }));\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTNODE\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    addUser = () => {\r\n        let inputParam = {};\r\n        if (this.props.Login.organisation &&\r\n            this.props.Login.organisation.selectedNode === \"Section\") {\r\n            inputParam = {\r\n                operation: \"create\", screenName: \"Users\",\r\n                selectedRecord: {\r\n                    ssectionname: this.props.Login.organisation.selectedNodeName,\r\n                    nlabsectioncode: this.props.Login.organisation.primaryKeyValue\r\n                },\r\n                url: \"organisation/getSectionUsersComboData\",\r\n                listName: \"sectionUsersList\",\r\n                columnList: this.sectionUserColumnList,\r\n                inputData: {\r\n                    nlabsectioncode: this.props.Login.organisation.primaryKeyValue,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    completetreepath: this.props.Login.masterData.CompleteTreePath,\r\n                    nsitecode: this.props.Login.masterData.SelectedOrgSite.nsitecode\r\n                }\r\n            };\r\n            this.props.getOrganisationComboService(inputParam);\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSECTIONTOADD\" }));\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n\r\n        let operation = this.props.Login.operation;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = '';\r\n                selectedRecord['esigncomments'] = '';\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            //operation = undefined;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, operation: operation }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n\r\n        if (fieldName === \"nsitecode\") {\r\n            this.props.organisationService({\r\n                inputData: {\r\n                    nsitecode: selectedRecord.nsitecode.value,\r\n                    userinfo: this.props.Login.userInfo, graphview: false,\r\n                    completetreepath: selectedRecord.nsitecode.label,\r\n                    primarykey: selectedRecord.nsitecode.value\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                url: \"organisation/getSiteDepartment\"\r\n            });\r\n        }\r\n        else {\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    reloadData = () => {\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"organisation\",\r\n            methodUrl: \"Organisation\",\r\n            displayName: \"IDS_ORGANISATION\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        //this.props.reloadTreeData(inputParam);  \r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        let methodUrl = \"\";\r\n        let nextNode = \"\";\r\n        if (this.props.Login.organisation.selectedNode === \"Site\") {\r\n            methodUrl = \"SiteDepartment\";\r\n            let siteDepartment = [];\r\n            this.state.selectedRecord[\"ndeptcode\"] &&\r\n                this.state.selectedRecord[\"ndeptcode\"].map(item => {\r\n                    return siteDepartment.push({\r\n                        nsitecode: this.state.selectedRecord.nsitecode,\r\n                        ndeptcode: item.value\r\n                    })\r\n                })\r\n            inputData[\"sitedepartmentlist\"] = siteDepartment;\r\n            nextNode = \"Department\";\r\n        }\r\n        else if (this.props.Login.organisation.selectedNode === \"Department\") {\r\n            methodUrl = \"DepartmentLab\";\r\n            let departmentLab = [];\r\n            this.state.selectedRecord[\"nlabcode\"] &&\r\n                this.state.selectedRecord[\"nlabcode\"].map(item => {\r\n                    return departmentLab.push({\r\n                        nsitedeptcode: this.state.selectedRecord.nsitedeptcode,\r\n                        nlabcode: item.value\r\n                    })\r\n                })\r\n            inputData[\"nsitecode\"] = this.props.Login.masterData.SelectedOrgSite.nsitecode;\r\n            inputData[\"departmentlablist\"] = departmentLab;\r\n            nextNode = \"Lab\";\r\n        }\r\n        else if (this.props.Login.organisation.selectedNode === \"Lab\") {\r\n            methodUrl = \"LabSection\";\r\n            let labSection = [];\r\n            this.state.selectedRecord[\"nsectioncode\"] &&\r\n                this.state.selectedRecord[\"nsectioncode\"].map(item => {\r\n                    return labSection.push({\r\n                        ndeptlabcode: this.state.selectedRecord.ndeptlabcode,\r\n                        nsectioncode: item.value\r\n                    })\r\n                })\r\n            inputData[\"nsitecode\"] = this.props.Login.masterData.SelectedOrgSite.nsitecode;\r\n            inputData[\"labsectionlist\"] = labSection;\r\n            nextNode = \"Section\";\r\n        }\r\n        else if (this.props.Login.organisation.selectedNode === \"Section\") {\r\n            methodUrl = \"SectionUsers\";\r\n            let sectionUsers = [];\r\n            this.state.selectedRecord[\"nusercode\"] &&\r\n                this.state.selectedRecord[\"nusercode\"].map(item => {\r\n                    return sectionUsers.push({\r\n                        nlabsectioncode: this.state.selectedRecord.nlabsectioncode,\r\n                        nusercode: item.value,\r\n                        nsitecode: this.props.Login.masterData.SelectedOrgSite.nsitecode\r\n                    })\r\n                })\r\n            inputData[\"nsitecode\"] = this.props.Login.masterData.SelectedOrgSite.nsitecode;\r\n            inputData[\"sectionuserslist\"] = sectionUsers;\r\n            nextNode = \"Section\";\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        inputData[\"completetreepath\"] = masterData.CompleteTreePath;\r\n        const inputParam = {\r\n            classUrl: \"organisation\",\r\n            methodUrl,\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef,\r\n            nextNode\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    deleteRecord = (deleteParam) => {\r\n\r\n        let validateDelete = false;\r\n        if (deleteParam.methodUrl === \"SectionUsers\") {\r\n            deleteParam[\"inputData\"] = {\r\n                ...deleteParam[\"inputData\"],\r\n                //sectionusers:deleteParam.selectedRecord,\r\n                deleteid: deleteParam.selectedRecord.nsectionusercode\r\n            }\r\n            validateDelete = true;\r\n        }\r\n        else {\r\n            if (this.props.Login.organisation) {\r\n                if (this.props.Login.organisation.selectedNode !== \"Site\") {\r\n                    deleteParam[\"inputData\"] = {\r\n                        ...deleteParam[\"inputData\"],\r\n                        //sectionusers:deleteParam.selectedRecord,\r\n                        //deleteid:deleteParam.selectedRecord.nsectionusercode\r\n                    }\r\n                    validateDelete = true;\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTDELETESITE\" }));\r\n                }\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTNODETODELETE\" }));\r\n            }\r\n        }\r\n        if (validateDelete) {\r\n            if (deleteParam.inputData.sectionusers &&\r\n                deleteParam.inputData.sectionusers.expanded !== undefined) {\r\n                delete deleteParam.inputData.sectionusers.expanded\r\n            }\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                displayName: \"IDS_ORGANISATION\",\r\n                methodUrl: deleteParam.methodUrl,\r\n                inputData: { ...deleteParam.inputData, completetreepath: this.props.Login.masterData.CompleteTreePath },\r\n                operation: deleteParam.operation, nextNode: deleteParam.nextNode\r\n            }\r\n            const deleteId = this.state.controlMap.has(\"Delete\") && this.state.controlMap.get(\"Delete\").ncontrolcode;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName: \"Organisation\",\r\n                        operation: deleteParam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, getOrganisationComboService,\r\n    getSectionUserRole, organisationService, updateStore, validateEsignCredential\r\n})(injectIntl(Organisation));\r\n\r\n"]},"metadata":{},"sourceType":"module"}