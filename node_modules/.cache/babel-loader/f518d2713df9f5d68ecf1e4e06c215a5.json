{"ast":null,"code":"import React from'react';import{Col}from'react-bootstrap';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';var AddTestMethod=function AddTestMethod(props){return/*#__PURE__*/ (//<Col md=\"12\">\nReact.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_METHOD\"}),name:\"nmethodcode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,options:props.testMethodList,optionId:\"nmethodcode\",optionValue:\"smethodname\",onChange:function onChange(value){return props.onComboChange(value,\"nmethodcode\");},value:props.selectedRecord&&props.selectedRecord[\"nmethodcode\"]?props.selectedRecord[\"nmethodcode\"]:[],isSearchable:true,alphabeticalSort:true,isClearable:true})//</Col>\n);};export default injectIntl(AddTestMethod);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/registration/AddTestMethod.jsx"],"names":["React","Col","FormSelectSearch","injectIntl","AddTestMethod","props","intl","formatMessage","id","testMethodList","value","onComboChange","selectedRecord"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,iBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,OAASC,UAAT,KAA2B,YAA3B,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC7B,oBACI;AACI,oBAAC,gBAAD,EACI,SAAS,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,YAAN,CAAzB,CADf,CAEI,IAAI,CAAE,aAFV,CAGI,UAAU,CAAE,KAHhB,CAII,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CAJjB,CAKI,WAAW,CAAE,KALjB,CAMI,OAAO,CAAEH,KAAK,CAACI,cANnB,CAOI,QAAQ,CAAC,aAPb,CAQI,WAAW,CAAC,aARhB,CASI,QAAQ,CAAE,kBAAAC,KAAK,QAAIL,CAAAA,KAAK,CAACM,aAAN,CAAoBD,KAApB,CAA2B,aAA3B,CAAJ,EATnB,CAUI,KAAK,CAAEL,KAAK,CAACO,cAAN,EAAwBP,KAAK,CAACO,cAAN,CAAqB,aAArB,CAAxB,CACPP,KAAK,CAACO,cAAN,CAAqB,aAArB,CADO,CAC+B,EAX1C,CAYI,YAAY,CAAE,IAZlB,CAaI,gBAAgB,CAAE,IAbtB,CAcI,WAAW,CAAE,IAdjB,EAiBJ;AAnBJ,EAqBH,CAtBD,CAwBA,cAAeT,CAAAA,UAAU,CAACC,aAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst AddTestMethod = (props) => {\r\n    return (\r\n        //<Col md=\"12\">\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_METHOD\" })}\r\n                name={\"nmethodcode\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={false}\r\n                options={props.testMethodList}\r\n                optionId='nmethodcode'\r\n                optionValue='smethodname'\r\n                onChange={value => props.onComboChange(value, \"nmethodcode\")}\r\n                value={props.selectedRecord && props.selectedRecord[\"nmethodcode\"] ?\r\n                props.selectedRecord[\"nmethodcode\"] : []}    \r\n                isSearchable={true}\r\n                alphabeticalSort={true}\r\n                isClearable={true}\r\n            >\r\n            </FormSelectSearch>\r\n        //</Col>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddTestMethod);"]},"metadata":{},"sourceType":"module"}