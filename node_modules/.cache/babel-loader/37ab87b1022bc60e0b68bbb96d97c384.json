{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{ListWrapper}from'../../components/client-group.styles';import{Row,Col,Button}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,showRegTypeAddScreen,fetchById,comboService,updateStore,validateEsignCredential}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import DataGrid from'../../components/data-grid/data-grid.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{showEsign,getControlMap,constructOptionList}from'../../components/CommonScript';import Esign from'../audittrail/Esign';import AddLanguageSynonym from'../../components/AddLanguages';// import ReactTooltip from 'react-tooltip';\nimport{Affix}from'rsuite';import{faSync,faLanguage,faFilePdf}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Languages=/*#__PURE__*/function(_React$Component){_inherits(Languages,_React$Component);var _super=_createSuper(Languages);function Languages(props){var _this;_classCallCheck(this,Languages);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data.listofItem,event.dataState),dataState:event.dataState});};_this.reloadData=function(){var inputParam={inputData:{userinfo:_this.props.Login.userInfo},methodUrl:\"Language\",classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onInputOnChange=function(event,name,item,fieldName){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{if(name=='English'){if(_this.props.Login.masterData.headername===\"Query Builder Views Columns\"){selectedRecord['sjsondata'][fieldName]=_objectSpread(_objectSpread({},selectedRecord['sjsondata'][fieldName]),{},_defineProperty({},event.target.name,event.target.value));selectedRecord[fieldName]=_objectSpread(_objectSpread({},selectedRecord[fieldName]),{},_defineProperty({},event.target.name,event.target.value));selectedRecord[\"sdefaultname\"]=event.target.value==\"\"?undefined:event.target.value;}else if(item=='sactiondisplaystatus'){selectedRecord['sactiondisplaystatus']=_objectSpread(_objectSpread({},selectedRecord['sactiondisplaystatus']),{},_defineProperty({},event.target.name,event.target.value));}else if(item==='stransdisplaystatus'){selectedRecord['stransdisplaystatus']=_objectSpread(_objectSpread({},selectedRecord['stransdisplaystatus']),{},_defineProperty({},event.target.name,event.target.value));}else{selectedRecord[fieldName]=_objectSpread(_objectSpread({},selectedRecord[fieldName]),{},_defineProperty({},event.target.name,event.target.value));selectedRecord['sdefaultname']=event.target.value==\"\"?undefined:event.target.value;}}else{if(_this.props.Login.masterData.headername===\"Query Builder Views Columns\"){selectedRecord['sjsondata'][fieldName]=_objectSpread(_objectSpread({},selectedRecord['sjsondata'][fieldName]),{},_defineProperty({},event.target.name,event.target.value));selectedRecord[fieldName]=_objectSpread(_objectSpread({},selectedRecord[fieldName]),{},_defineProperty({},event.target.name,event.target.value));}else if(item=='sactiondisplaystatus'){selectedRecord['sactiondisplaystatus']=_objectSpread(_objectSpread({},selectedRecord['sactiondisplaystatus']),{},_defineProperty({},event.target.name,event.target.value));}else if(item=='stransdisplaystatus'){selectedRecord['stransdisplaystatus']=_objectSpread(_objectSpread({},selectedRecord['stransdisplaystatus']),{},_defineProperty({},event.target.name,event.target.value));}else{selectedRecord[fieldName]=_objectSpread(_objectSpread({},selectedRecord[fieldName]),{},_defineProperty({},event.target.name,event.target.value));selectedRecord[event.target.name]=event.target.value;}}}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});if(fieldName===\"nquerybuilderviewscode\"){_this.props.comboService({inputData:{userinfo:_this.props.Login.userInfo,sdisplayname:selectedRecord.nquerybuilderviewscode.item.sviewname,primarykey:selectedRecord.nquerybuilderviewscode.value,item:selectedRecord.nquerybuilderviewscode.item,displayname:_this.props.Login.masterData},masterData:_this.props.Login.masterData,userinfo:_this.props.Login.userInfo,item:selectedRecord.nquerybuilderviewscode.item,sdisplayname:selectedRecord.nquerybuilderviewscode.label,displayname:_this.props.Login.masterData});}else if(fieldName===\"nquerybuildertablecode\"||fieldName===\"scolumnname\"){_this.props.comboService({inputData:{userinfo:_this.props.Login.userInfo,sdisplayname:fieldName===\"nquerybuildertablecode\"?selectedRecord.nquerybuildertablecode.item.stablename:selectedRecord.scolumnname.item.scolumnname,primarykey:fieldName===\"nquerybuildertablecode\"?selectedRecord.nquerybuildertablecode.value:selectedRecord.scolumnname.value,item:fieldName===\"nquerybuildertablecode\"?selectedRecord.nquerybuildertablecode.item:selectedRecord.scolumnname.item,displayname:_this.props.Login.masterData,selectedvalues:fieldName===\"nquerybuildertablecode\"?_this.state.SelectedQueryBuilderScolumnList:_this.state.SelectedQueryBuilderStableName,fieldName:fieldName},masterData:_this.props.Login.masterData,userinfo:_this.props.Login.userInfo,item:fieldName===\"nquerybuildertablecode\"?selectedRecord.nquerybuildertablecode.item:selectedRecord.scolumnname.item,sdisplayname:fieldName===\"nquerybuildertablecode\"?selectedRecord.nquerybuildertablecode.label:selectedRecord.scolumnname.label,displayname:_this.props.Login.masterData});}else if(fieldName===\"dynamicaudittableformcode\"||fieldName===\"ndynamicaudittablecode\"){_this.props.comboService({inputData:{userinfo:_this.props.Login.userInfo,sdisplayname:fieldName===\"dynamicaudittableformcode\"?selectedRecord.dynamicaudittableformcode.item.sformname:selectedRecord.ndynamicaudittablecode.item.stablename,primarykey:fieldName===\"ndynamicaudittablecode\"?selectedRecord.ndynamicaudittablecode.value:null,formPrimayKey:fieldName===\"dynamicaudittableformcode\"?selectedRecord.dynamicaudittableformcode.value:_this.state.selectedLstFormName[0].value,item:fieldName===\"dynamicaudittableformcode\"?selectedRecord.dynamicaudittableformcode.item:selectedRecord.ndynamicaudittablecode.item,displayname:_this.props.Login.masterData,fieldName:fieldName},masterData:_this.props.Login.masterData,userinfo:_this.props.Login.userInfo,item:fieldName===\"dynamicaudittableformcode\"?selectedRecord.dynamicaudittableformcode.item:selectedRecord.ndynamicaudittablecode.item,sdisplayname:fieldName===\"dynamicaudittableformcode\"?selectedRecord.dynamicaudittableformcode.label:selectedRecord.ndynamicaudittablecode.label,displayname:_this.props.Login.masterData});}else if(fieldName===\"nmappedtemplatefieldpropcode\"||fieldName===\"indexQualisforms\"||fieldName===\"indexPropertiesKey\"||fieldName===\"indexFieldKey\"){_this.props.comboService({inputData:{userinfo:_this.props.Login.userInfo,sdisplayname:fieldName===\"nmappedtemplatefieldpropcode\"?selectedRecord.nmappedtemplatefieldpropcode.item.sregtemplatename:fieldName===\"indexQualisforms\"?selectedRecord.indexQualisforms.item.sformname:fieldName===\"indexQualisforms\"?selectedRecord.indexFieldKey.item.indexFieldValue:selectedRecord.indexPropertiesKey.item.indexValue,primarykey:fieldName===\"nmappedtemplatefieldpropcode\"?selectedRecord.nmappedtemplatefieldpropcode.value:fieldName===\"indexQualisforms\"?selectedRecord.indexQualisforms.value:fieldName===\"indexFieldKey\"?selectedRecord.indexFieldKey.value:selectedRecord.indexPropertiesKey.value,item:fieldName===\"nmappedtemplatefieldpropcode\"?selectedRecord.nmappedtemplatefieldpropcode.item:fieldName===\"indexQualisforms\"?selectedRecord.indexQualisforms.item:fieldName===\"indexFieldKey\"?selectedRecord.indexFieldKey.item:selectedRecord.indexPropertiesKey.item,displayname:_this.props.Login.masterData,fieldName:fieldName},masterData:_this.props.Login.masterData,userinfo:_this.props.Login.userInfo,item:fieldName===\"nmappedtemplatefieldpropcode\"?selectedRecord.nmappedtemplatefieldpropcode.item:fieldName===\"indexQualisforms\"?selectedRecord.indexQualisforms.item:fieldName===\"indexFieldKey\"?selectedRecord.indexFieldKey.item:selectedRecord.indexPropertiesKey.item,sdisplayname:fieldName===\"nmappedtemplatefieldpropcode\"?selectedRecord.nmappedtemplatefieldpropcode.label:fieldName===\"indexQualisforms\"?selectedRecord.indexQualisforms.label:fieldName===\"indexFieldKey\"?selectedRecord.indexFieldKey.label:selectedRecord.indexPropertiesKey.label,displayname:_this.props.Login.masterData});}else{if(fieldName===\"nmultilingualmasterscode\"){_this.props.comboService({inputData:{userinfo:_this.props.Login.userInfo,sdisplayname:selectedRecord.nmultilingualmasterscode.label,primarykey:selectedRecord.nmultilingualmasterscode.value,item:selectedRecord.nmultilingualmasterscode.item,displayname:_this.props.Login.masterData},masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{headername:{}}),userinfo:_this.props.Login.userInfo,displayname:_this.props.Login.masterData,item:selectedRecord.nmultilingualmasterscode.item,sdisplayname:selectedRecord.nmultilingualmasterscode.label});}}};_this.onSaveClick=function(saveType,formRef){var inputData={};var selectedId=null;var methodUrl=\"\";inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;if(_this.state.showSynonym){_this.setState({showSynonym:false});return null;}if(_this.props.Login.operation===\"update\"){// edit\nif(_this.props.Login.masterData.headername===\"Menu\"){selectedId=_this.props.Login.selectedId;dataState=_this.state.dataState;inputData[\"language\"]={\"nmenucode\":_this.state.selectedRecord.nmenucode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"MenuLanguage\";}else if(_this.props.Login.masterData.headername===\"Module\"){selectedId=_this.props.Login.selectedId;dataState=_this.state.dataState;inputData[\"language\"]={\"nmodulecode\":_this.state.selectedRecord.nmodulecode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"ModuleLanguage\";}else if(_this.props.Login.masterData.headername===\"Forms\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nformcode\":_this.state.selectedRecord.nformcode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"FormLanguage\";}else if(_this.props.Login.masterData.headername===\"Transaction Status\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"ntranscode\":_this.state.selectedRecord.ntranscode,\"jsondata\":{\"salertdisplaystatus\":_this.state.selectedRecord.salertdisplaystatus,\"stransdisplaystatus\":_this.state.selectedRecord.stransdisplaystatus,\"sactiondisplaystatus\":_this.state.selectedRecord.sactiondisplaystatus}};methodUrl=\"TransactionStatusLanguage\";}else if(_this.props.Login.masterData.headername===\"Control Master\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"ncontrolcode\":_this.state.selectedRecord.ncontrolcode,\"jsondata\":{\"scontrolids\":_this.state.selectedRecord.scontrolids}};methodUrl=\"ControlMasterLanguage\";}else if(_this.props.Login.masterData.headername===\"Approval Sub Type\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"napprovalsubtypecode\":_this.state.selectedRecord.napprovalsubtypecode,\"jsondata\":{\"approvalsubtypename\":_this.state.selectedRecord.approvalsubtypename}};methodUrl=\"ApprovalSubTypeLanguage\";}else if(_this.props.Login.masterData.headername===\"Sample Type\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nsampletypecode\":_this.state.selectedRecord.nsampletypecode,\"jsondata\":{\"sampletypename\":_this.state.selectedRecord.sampletypename}};methodUrl=\"SampleTypeLanguage\";}// else if (this.props.Login.masterData.headername === \"Template Design\") {\n//     dataState = this.state.dataState\n//     selectedId = this.props.Login.selectedId;\n//     inputData[\"language\"] = {\n//         \"ntemplatetypecode\": this.state.selectedRecord.ntemplatetypecode,\n//         \"jsondata\": {\n//             \"stemplatetypename\": this.state.selectedRecord.stemplatetypename\n//         }\n//     }\n//     methodUrl = \"TemplateTypeLanguage\"\n// } \nelse if(_this.props.Login.masterData.headername===\"Period\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nperiodcode\":_this.state.selectedRecord.nperiodcode,\"jsondata\":{\"speriodname\":_this.state.selectedRecord.speriodname}};methodUrl=\"PeriodLanguage\";}else if(_this.props.Login.masterData.headername===\"Gender\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"ngendercode\":_this.state.selectedRecord.ngendercode,\"jsondata\":{\"sgendername\":_this.state.selectedRecord.sgendername}};methodUrl=\"GenderLanguage\";}else if(_this.props.Login.masterData.headername===\"Grade\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"ngradecode\":_this.state.selectedRecord.ngradecode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"GradeLanguage\";}else if(_this.props.Login.masterData.headername===\"Scheduler Type\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nschedulertypecode\":_this.state.selectedRecord.nschedulertypecode,\"jsondata\":{\"sschedulertypename\":_this.state.selectedRecord.sschedulertypename}};methodUrl=\"SchedulerTypeLanguage\";}else if(_this.props.Login.masterData.headername===\"Query Builder Tables\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nquerybuildertablecode\":_this.state.selectedRecord.nquerybuildertablecode,\"jsondata\":{\"tablename\":_this.state.selectedRecord.tablename}};methodUrl=\"QueryBuilderTablesLanguage\";}else if(_this.props.Login.masterData.headername===\"Query Builder Views\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nquerybuilderviewscode\":_this.state.selectedRecord.nquerybuilderviewscode,\"jsondata\":{\"displayname\":_this.state.selectedRecord.displayname}};methodUrl=\"QueryBuilderViewsLanguage\";}else if(_this.props.Login.masterData.headername===\"Multilingual Masters\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nmultilingualmasterscode\":_this.state.selectedRecord.nmultilingualmasterscode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"MultilingualMastersLanguage\";}else if(_this.props.Login.masterData.headername===\"Query Builder Views Columns\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;var replaceValue=_this.state.selectedRecord.sjsondata.displayname;delete _this.state.selectedRecord.sdefaultname;inputData[\"findIndex\"]=_this.props.Login.selectedRecord.findIndex;inputData[\"keyvalue\"]=_this.props.Login.selectedRecord.keys;inputData[\"jsondata\"]={// \"sjsondata\":\n//     { ...this.state.selectedRecord.sjsondata },\n// \"sviewname\": this.props.Login.selectedRecord.sviewname\n\"sjsondata\":_objectSpread(_objectSpread({},_this.props.Login.selectedRecord.jsondata),_this.props.Login.selectedRecord.jsondata[_this.props.Login.selectedRecord.keys][_this.props.Login.selectedRecord.findIndex].displayname=replaceValue),\"sviewname\":_this.props.Login.selectedRecord.sviewname};delete inputData[\"jsondata\"].sjsondata[\"en-US\"];delete inputData[\"jsondata\"].sjsondata[\"ru-RU\"];delete inputData[\"jsondata\"].sjsondata[\"tg-TG\"];methodUrl=\"QueryBuilderViewsColumnsLanguage\";}else if(_this.props.Login.masterData.headername===\"Material Type\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nmaterialtypecode\":_this.state.selectedRecord.nmaterialtypecode,\"jsondata\":{\"smaterialtypename\":_this.state.selectedRecord.smaterialtypename}};methodUrl=\"MaterialTypeLanguage\";}else if(_this.props.Login.masterData.headername===\"Interface Type\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"ninterfacetypecode\":_this.state.selectedRecord.ninterfacetypecode,\"jsondata\":{\"sinterfacetypename\":_this.state.selectedRecord.sinterfacetypename}};methodUrl=\"InterfaceTypeLanguage\";}else if(_this.props.Login.masterData.headername===\"Audit Action Filter\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nauditactionfiltercode\":_this.state.selectedRecord.nauditactionfiltercode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"AuditActionFilterLanguage\";}else if(_this.props.Login.masterData.headername===\"Attachment Type\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nattachmenttypecode\":_this.state.selectedRecord.nattachmenttypecode,\"jsondata\":{\"sattachmenttype\":_this.state.selectedRecord.sattachmenttype}};methodUrl=\"AttachmentTypeLanguage\";}else if(_this.props.Login.masterData.headername===\"FTP Type\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nftptypecode\":_this.state.selectedRecord.nftptypecode,\"jsondata\":{\"sftptypename\":_this.state.selectedRecord.sftptypename}};methodUrl=\"FTPTypeLanguage\";}else if(_this.props.Login.masterData.headername===\"Report Type\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nreporttypecode\":_this.state.selectedRecord.nreporttypecode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"ReportTypeLanguage\";}else if(_this.props.Login.masterData.headername===\"COAReport Type\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"ncoareporttypecode\":_this.state.selectedRecord.ncoareporttypecode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"COAReportTypeLanguage\";}else if(_this.props.Login.masterData.headername===\"React Components\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nreactcomponentcode\":_this.state.selectedRecord.nreactcomponentcode,\"jsondata\":{\"componentname\":_this.state.selectedRecord.componentname}};methodUrl=\"ReactComponentsLanguage\";}else if(_this.props.Login.masterData.headername===\"Functions\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nfunctioncode\":_this.state.selectedRecord.nfunctioncode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"FunctionsLanguage\";}else if(_this.props.Login.masterData.headername===\"Dynamic Formula Fields\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"ndynamicformulafieldcode\":_this.state.selectedRecord.ndynamicformulafieldcode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"DynamicFormulaFieldLanguage\";}else if(_this.props.Login.masterData.headername===\"Chart Type\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"ncharttypecode\":_this.state.selectedRecord.ncharttypecode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"ChartTypeLanguage\";}else if(_this.props.Login.masterData.headername===\"Design Components\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"ndesigncomponentcode\":_this.state.selectedRecord.ndesigncomponentcode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"DesignComponentLanguage\";}else if(_this.props.Login.masterData.headername===\"CheckList Component\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"nchecklistcomponentcode\":_this.state.selectedRecord.nchecklistcomponentcode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"CheckListComponentLanguage\";}else if(_this.props.Login.masterData.headername===\"Generic Label\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;inputData[\"language\"]={\"ngenericlabelcode\":_this.state.selectedRecord.ngenericlabelcode,\"jsondata\":{\"sdisplayname\":_this.state.selectedRecord.sdisplayname}};methodUrl=\"GenericLabelLanguage\";}else if(_this.props.Login.masterData.headername===\"Query Builder Table Columns\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;var jsondata=JSON.parse(_this.state.SelectedQueryBuilderStableName[0].item[_this.state.SelectedQueryBuilderScolumnList[0].label].value);if(_this.state.selectedRecord.columnname===jsondata[_this.state.selectedRecord.index].columnname){jsondata[_this.state.selectedRecord.index].displayname=_this.state.selectedRecord.displayname;}inputData[\"language\"]={\"nquerybuildertablecode\":_this.state.SelectedQueryBuilderStableName[0].value,\"tablecolumnname\":_this.state.SelectedQueryBuilderScolumnList[0].label,\"scolumnname\":_this.state.selectedRecord.sjsondata.columnname,\"displayname\":_this.state.selectedRecord.displayname,\"jsondata\":JSON.stringify(jsondata)};methodUrl=\"QueryBuilderTableColumnsLanguage\";}else if(_this.props.Login.masterData.headername===\"Dynamic Audit Table\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;var subsampleenabledisable=_this.state.selectedRecord.sfieldname;var _jsondata=_this.state.selectedRecord.jsondata;var index=_this.state.selectedRecord.index;_jsondata[subsampleenabledisable].multilingualfields[index][_this.state.selectedRecord.fieldName]=_this.state.selectedRecord[_this.state.selectedRecord.fieldName];inputData[\"language\"]={\"ndynamicaudittablecode\":_this.state.selectedLstDynamicAuditTableStableName[0].value,\"subsampleenabledisable\":subsampleenabledisable,\"keyname\":_this.state.selectedRecord.fieldName,\"jsondata\":JSON.stringify(_jsondata),\"conditioncheck\":JSON.stringify(_this.state.selectedRecord.sjsondata),\"nformcode\":_this.state.selectedRecord.nformcode};methodUrl=\"DynamicAuditTableLanguage\";}else if(_this.props.Login.masterData.headername===\"Mapped Template Field Props\"){dataState=_this.state.dataState;selectedId=_this.props.Login.selectedId;var fieldName=_this.state.selectedRecord.fieldName;var _jsondata2=_this.state.selectedRecord.jsondata&&_this.state.selectedRecord.jsondata.value&&JSON.parse(_this.state.selectedRecord.jsondata.value);var _index=_this.state.selectedRecord.index;if(_this.props.Login.masterData.selectedLstSampleField===undefined&&_this.props.Login.masterData.selectedLstQualisforms&&_this.props.Login.masterData.selectedLstQualisforms[0].nformcode){_jsondata2[_this.props.Login.masterData.selectedLstQualisforms[0].nformcode][_this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue][_index][fieldName]=_this.state.selectedRecord[fieldName];}else if(_this.props.Login.masterData.selectedLstSampleField===undefined&&_this.props.Login.masterData.selectedLstQualisforms&&_this.props.Login.masterData.selectedLstQualisforms[0].nformcode===undefined){_jsondata2[_this.props.Login.masterData.selectedLstQualisforms[0].sformname][_index][fieldName]=_this.state.selectedRecord[fieldName];}else{_jsondata2[_this.props.Login.masterData.selectedLstQualisforms[0].nformcode][_this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue][_this.props.Login.masterData.selectedLstSampleField[0].indexFieldValue]!==undefined?_jsondata2[_this.props.Login.masterData.selectedLstQualisforms[0].nformcode][_this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue][_this.props.Login.masterData.selectedLstSampleField[0].indexFieldValue][_index][fieldName]=_this.state.selectedRecord[fieldName]:_jsondata2[_this.props.Login.masterData.selectedLstQualisforms[0].nformcode][_this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue][_index][fieldName]=_this.state.selectedRecord[fieldName];}inputData[\"language\"]={\"nmappedtemplatefieldpropcode\":_this.state.selectedRecord.nmappedtemplatefieldpropcode,\"jsondata\":JSON.stringify(_jsondata2),\"indexQualisforms\":_this.props.Login.masterData.selectedLstQualisforms?_this.props.Login.masterData.selectedLstQualisforms[0].indexQualisforms:null,\"indexPropertiesKey\":_this.props.Login.masterData.selectedLstSampleItems?_this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesKey:null,\"indexFieldKey\":_this.props.Login.masterData.selectedLstSampleField?_this.props.Login.masterData.selectedLstSampleField[0].indexFieldKey:null,\"index\":_index,\"indexPropertiesValue\":_this.props.Login.masterData.selectedLstSampleItems?_this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue:null,\"indexFieldValue\":_this.props.Login.masterData.selectedLstSampleField?_this.props.Login.masterData.selectedLstSampleField[0].indexFieldValue:null,\"sformname\":_this.props.Login.masterData.selectedLstQualisforms&&_this.props.Login.masterData.selectedLstQualisforms[0].sformname?_this.props.Login.masterData.selectedLstQualisforms[0].sformname:null,\"nformcode\":_this.props.Login.masterData.selectedLstQualisforms&&_this.props.Login.masterData.selectedLstQualisforms[0].nformcode?_this.props.Login.masterData.selectedLstQualisforms[0].nformcode:null};methodUrl=\"MappedTemplateFieldPropsLanguage\";}}var inputParam={methodUrl:methodUrl,classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,dataState:dataState,selectedId:selectedId,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,operation:_this.props.Login.operation,openModal:true,screenName:_this.props.Login.inputParam.displayName}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.handleClose=_this.handleClose.bind(_assertThisInitialized(_this));var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},userRoleControlRights:[],controlMap:new Map(),dataResult:[],dataState:_dataState,mandatoryFields:[]};return _this;}_createClass(Languages,[{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";if(this.props.Login.inputParam!==undefined){this.mandatoryFields=[{\"idsName\":\"IDS_DEFAULTLANGUAGE\",\"dataField\":this.props.Login.languageList[0].value==\"en-US\"?\"sdefaultname\":\" \",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"text\"}];if(this.props.Login.masterData.headername==\"Menu\"){this.extractedColumnList=[{\"idsName\":\"IDS_MENUID\",\"dataField\":\"smenuname\",\"width\":\"250px\"},{\"idsName\":\"IDS_MENUNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nmenucode\";}else if(this.props.Login.masterData.headername==\"Module\"){this.extractedColumnList=[{\"idsName\":\"IDS_MODULEID\",\"dataField\":\"smodulename\",\"width\":\"250px\"},{\"idsName\":\"IDS_MODULENAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nmodulecode\";}else if(this.props.Login.masterData.headername==\"Forms\"){this.extractedColumnList=[{\"idsName\":\"IDS_FORMID\",\"dataField\":\"sformname\",\"width\":\"250px\"},{\"idsName\":\"IDS_FORMNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nformcode\";}else if(this.props.Login.masterData.headername==\"Transaction Status\"){this.extractedColumnList=[{\"idsName\":\"IDS_TRANSACTIONSTATUSID\",\"dataField\":\"stransstatus\",\"width\":\"250px\"},{\"idsName\":\"IDS_ACTIONDISPLAYSTATUS\",\"dataField\":\"sactiondisplaystatus\",\"width\":\"250px\"},{\"idsName\":\"IDS_TRANSDISPLAYSTATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"250px\"}];primaryKeyField=\"ntranscode\";}else if(this.props.Login.masterData.headername==\"Control Master\"){this.extractedColumnList=[{\"idsName\":\"IDS_CONTROLMASTERID\",\"dataField\":\"scontrolname\",\"width\":\"250px\"},{\"idsName\":\"IDS_CONTROLMASTER\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"ncontrolcode\";}else if(this.props.Login.masterData.headername==\"Approval Sub Type\"){this.extractedColumnList=[{\"idsName\":\"IDS_APPROVALSUBTYPEID\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"},{\"idsName\":\"IDS_APPROVALSUBTYPENAME\",\"dataField\":\"sapprovalsubtypename\",\"width\":\"250px\"}];primaryKeyField=\"napprovalsubtypecode\";}else if(this.props.Login.masterData.headername==\"Sample Type\"){this.extractedColumnList=[{\"idsName\":\"IDS_SAMPLETYPEID\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"},{\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"ssampletypename\",\"width\":\"250px\"}];primaryKeyField=\"nsampletypecode\";}// else if (this.props.Login.masterData.headername == \"Template Design\") {\n//     this.extractedColumnList = [\n//         { \"idsName\": \"IDS_TEMPLATETYPEID\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\n//         { \"idsName\": \"IDS_TEMPLATETYPENAME\", \"dataField\": \"stemplatetypename\", \"width\": \"250px\" }\n//     ]\n//     primaryKeyField = \"ntemplatetypecode\";\n// }\nelse if(this.props.Login.masterData.headername==\"Period\"){this.extractedColumnList=[{\"idsName\":\"IDS_PERIODID\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"},{\"idsName\":\"IDS_PERIODNAME\",\"dataField\":\"speriodname\",\"width\":\"250px\"}];primaryKeyField=\"nperiodcode\";}else if(this.props.Login.masterData.headername==\"Gender\"){this.extractedColumnList=[{\"idsName\":\"IDS_GENDERID\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"},{\"idsName\":\"IDS_GENDERNAME\",\"dataField\":\"sgendername\",\"width\":\"250px\"}];primaryKeyField=\"ngendercode\";}else if(this.props.Login.masterData.headername==\"Grade\"){this.extractedColumnList=[{\"idsName\":\"IDS_GRADEID\",\"dataField\":\"sgradename\",\"width\":\"250px\"},{\"idsName\":\"IDS_GRADENAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"ngradecode\";}else if(this.props.Login.masterData.headername==\"Scheduler Type\"){this.extractedColumnList=[{\"idsName\":\"IDS_SCHEDULERTYPEID\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"},{\"idsName\":\"IDS_SCHEDULERTYPENAME\",\"dataField\":\"sschedulertypename\",\"width\":\"250px\"}];primaryKeyField=\"nschedulertypecode\";}else if(this.props.Login.masterData.headername==\"Query Builder Tables\"){this.extractedColumnList=[{\"idsName\":\"IDS_FORMS\",\"dataField\":\"sformname\",\"width\":\"250px\"},{\"idsName\":\"IDS_SQLQUERYBUILDERID\",\"dataField\":\"stablename\",\"width\":\"250px\"},{\"idsName\":\"IDS_SQLQUERYBUILDERNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nquerybuildertablecode\";}else if(this.props.Login.masterData.headername==\"Query Builder Views\"){this.extractedColumnList=[{\"idsName\":\"IDS_VIEWSQUERYBUILDERID\",\"dataField\":\"sviewname\",\"width\":\"250px\"},{\"idsName\":\"IDS_VIEWSQUERYBUILDERNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nquerybuilderviewscode\";}else if(this.props.Login.masterData.headername==\"Query Builder Views Columns\"){this.extractedColumnList=[// { \"idsName\": \"IDS_QUERYBUILDERVIEWSCOLUMNSNAME\", \"dataField\": \"sviewname\", \"width\": \"250px\" },\n{\"idsName\":\"IDS_QUERYBUILDERVIEWSCOLUMNSID\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField='index';}else if(this.props.Login.masterData.headername==\"Multilingual Masters\"){this.extractedColumnList=[{\"idsName\":\"IDS_MULTILINGUALMASTERSID\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"},{\"idsName\":\"IDS_MULTILINGUALMASTERSAME\",\"dataField\":\"sdefaultname\",\"width\":\"250px\"}];primaryKeyField=\"nmultilingualmasterscode\";}else if(this.props.Login.masterData.headername==\"Material Type\"){this.extractedColumnList=[{\"idsName\":\"IDS_MATERIALTYPEID\",\"dataField\":\"smaterialtypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_MATERIALTYPENAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nmaterialtypecode\";}else if(this.props.Login.masterData.headername==\"Interface Type\"){this.extractedColumnList=[{\"idsName\":\"IDS_INTERFACETYPEID\",\"dataField\":\"sinterfacetypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_INTERFACETYPENAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"ninterfacetypecode\";}else if(this.props.Login.masterData.headername==\"Audit Action Filter\"){this.extractedColumnList=[{\"idsName\":\"IDS_AUDITACTIONFILTERID\",\"dataField\":\"sauditactionfiltername\",\"width\":\"250px\"},{\"idsName\":\"IDS_AUDITACTIONFILTERNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nauditactionfiltercode\";}else if(this.props.Login.masterData.headername==\"Attachment Type\"){this.extractedColumnList=[{\"idsName\":\"IDS_ATTACHMENTTYPEID\",\"dataField\":\"sdefaultname\",\"width\":\"250px\"},{\"idsName\":\"IDS_ATTACHMENTTYPENAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nattachmenttypecode\";}else if(this.props.Login.masterData.headername==\"FTP Type\"){this.extractedColumnList=[{\"idsName\":\"IDS_FTPTYPEID\",\"dataField\":\"sdefaultname\",\"width\":\"250px\"},{\"idsName\":\"IDS_FTPTYPENAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nftptypecode\";}else if(this.props.Login.masterData.headername==\"Report Type\"){this.extractedColumnList=[{\"idsName\":\"IDS_REPORTTYPEID\",\"dataField\":\"sreporttypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_REPORTTYPENAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nreporttypecode\";}else if(this.props.Login.masterData.headername==\"COAReport Type\"){this.extractedColumnList=[{\"idsName\":\"IDS_COAREPORTTYPEID\",\"dataField\":\"scoareporttypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_COAREPORTTYPENAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"ncoareporttypecode\";}else if(this.props.Login.masterData.headername==\"React Components\"){this.extractedColumnList=[{\"idsName\":\"IDS_REACTCOMPONENTID\",\"dataField\":\"componentname\",\"width\":\"250px\"},{\"idsName\":\"IDS_REACTCOMPONENTNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nreactcomponentcode\";}else if(this.props.Login.masterData.headername==\"Functions\"){this.extractedColumnList=[{\"idsName\":\"IDS_FUNCTIONSID\",\"dataField\":\"sfunctionname\",\"width\":\"250px\"},{\"idsName\":\"IDS_FUNCTIONSNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nfunctioncode\";}else if(this.props.Login.masterData.headername==\"Dynamic Formula Fields\"){this.extractedColumnList=[{\"idsName\":\"IDS_DYNAMICFORMULAFIELDSID\",\"dataField\":\"sdefaultname\",\"width\":\"250px\"},{\"idsName\":\"IDS_DYNAMICFORMULAFIELDSNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"ndynamicformulafieldcode\";}else if(this.props.Login.masterData.headername==\"Chart Type\"){this.extractedColumnList=[{\"idsName\":\"IDS_CHARTTYPEID\",\"dataField\":\"sdefaultname\",\"width\":\"250px\"},{\"idsName\":\"IDS_CHARTTYPENAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"ncharttypecode\";}else if(this.props.Login.masterData.headername==\"Design Components\"){this.extractedColumnList=[{\"idsName\":\"IDS_DESIGNCOMPONENTSID\",\"dataField\":\"sdefaultname\",\"width\":\"250px\"},{\"idsName\":\"IDS_DESIGNCOMPONENTSNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"ndesigncomponentcode\";}else if(this.props.Login.masterData.headername==\"CheckList Component\"){this.extractedColumnList=[{\"idsName\":\"IDS_CHECKLISTCOMPONENTID\",\"dataField\":\"scomponentname\",\"width\":\"250px\"},{\"idsName\":\"IDS_CHECKLISTCOMPONENTNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"nchecklistcomponentcode\";}else if(this.props.Login.masterData.headername==\"Generic Label\"){this.extractedColumnList=[{\"idsName\":\"IDS_GENERICLABELID\",\"dataField\":\"sgenericlabel\",\"width\":\"250px\"},{\"idsName\":\"IDS_GENERICLABELNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"ngenericlabelcode\";}else if(this.props.Login.masterData.headername==\"Query Builder Table Columns\"){this.extractedColumnList=[// { \"idsName\": \"IDS_QUERYBUILDERTABLECOLUMNSID\", \"dataField\": \"stablename\", \"width\": \"250px\" },\n{\"idsName\":\"IDS_QUERYBUILDERTABLECOLUMNSNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"index\";}else if(this.props.Login.masterData.headername==\"Dynamic Audit Table\"){this.extractedColumnList=[// { \"idsName\": \"IDS_TABLE_NAME\", \"dataField\": \"stablename\", \"width\": \"250px\" },\n{\"idsName\":\"IDS_FIELDNAME\",\"dataField\":\"sfieldname\",\"width\":\"250px\"},{\"idsName\":\"IDS_MULTILINGUALFIELDS\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"index\";}else if(this.props.Login.masterData.headername==\"Mapped Template Field Props\"){this.extractedColumnList=[// { \"idsName\": \"samplegriditems\", \"dataField\": \"sfieldname\", \"width\": \"250px\" },\n{\"idsName\":\"IDS_MAPPEDTEMPLATEFIELDPROPSNAME\",\"dataField\":\"sdisplayname\",\"width\":\"250px\"}];primaryKeyField=\"index\";}}var languagesId=this.props.Login.inputParam&&this.state.controlMap.has(\"UpdateLanguage\")&&this.state.controlMap.get('UpdateLanguage').ncontrolcode;var languagesParam={screenName:\"Language\",operation:\"update\",primaryKeyField:primaryKeyField,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolCode:languagesId,selectedRecord:this.state.selectedRecord};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(Affix,{top:85},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nmultilingualmasterscode\",formLabel:this.props.intl.formatMessage({id:\"IDS_MULTILINGUALMASTERS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.multilingualmasters||[],value:this.props.Login.masterData&&this.props.Login.masterData.selectedmultilingualmasters&&{value:this.props.Login.masterData.selectedmultilingualmasters.nmultilingualmasterscode?this.props.Login.masterData.selectedmultilingualmasters.nmultilingualmasterscode:this.state.selectedRecord.nmultilingualmasterscode.value,label:this.props.Login.masterData.selectedmultilingualmasters.sdisplayname?this.props.Login.masterData.selectedmultilingualmasters.sdisplayname:this.state.selectedRecord.nmultilingualmasterscode.label},isMandatory:false,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'nmultilingualmasterscode');}})),this.props.Login.masterData.headername==\"Query Builder Views Columns\"?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nquerybuilderviewscode\",formLabel:this.props.intl.formatMessage({id:\"IDS_VIEWNAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.QueryBuilderViewsName||[],value:this.props.Login.masterData&&this.props.Login.masterData.selectedQueryBuilderViewsName&&{value:this.state.selectedRecord.nquerybuilderviewscode!==undefined?this.state.selectedRecord.nquerybuilderviewscode.value:this.props.Login.masterData.selectedQueryBuilderViewsName.nquerybuilderviewscode,label:this.state.selectedRecord.nquerybuilderviewscode!==undefined?this.state.selectedRecord.nquerybuilderviewscode.label:this.props.Login.masterData.selectedQueryBuilderViewsName.sdisplayname},isMandatory:false,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'nquerybuilderviewscode');}})):this.props.Login.masterData.headername==\"Query Builder Table Columns\"?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nquerybuilderviewscode\",formLabel:this.props.intl.formatMessage({id:\"IDS_TABLE_NAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.QueryBuilderStableName||[]// value={this.props.Login.masterData && this.props.Login.masterData.SelectedQueryBuilderStableName\n//     && {\n//     value: this.state.selectedRecord.nquerybuildertablecode !== undefined\n//         ? this.state.selectedRecord.nquerybuildertablecode.value : this.props.Login.masterData.SelectedQueryBuilderStableName[0].nquerybuildertablecode,\n//     label: this.state.selectedRecord.nquerybuildertablecode !== undefined ?\n//         this.state.selectedRecord.nquerybuildertablecode.label : this.props.Login.masterData.SelectedQueryBuilderStableName[0].stablename\n// }}\n,value:this.state&&this.state.SelectedQueryBuilderStableName&&this.state.SelectedQueryBuilderStableName,isMandatory:false,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'nquerybuildertablecode');}})):this.props.Login.masterData.headername==\"Dynamic Audit Table\"?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nformcode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SCREENNAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.lstFormName||[]// value={this.props.Login.masterData && this.props.Login.masterData.SelectedQueryBuilderStableName\n//     && {\n//     value: this.state.selectedRecord.nquerybuildertablecode !== undefined\n//         ? this.state.selectedRecord.nquerybuildertablecode.value : this.props.Login.masterData.SelectedQueryBuilderStableName[0].nquerybuildertablecode,\n//     label: this.state.selectedRecord.nquerybuildertablecode !== undefined ?\n//         this.state.selectedRecord.nquerybuildertablecode.label : this.props.Login.masterData.SelectedQueryBuilderStableName[0].stablename\n// }}\n,value:this.state&&this.state.selectedLstFormName&&this.state.selectedLstFormName,isMandatory:false,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'dynamicaudittableformcode');}})):this.props.Login.masterData.headername==\"Mapped Template Field Props\"?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nquerybuilderviewscode\",formLabel:this.props.intl.formatMessage({id:\"IDS_REACTREGISTRATIONTEMPLATENAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.lstMappedTemplateFieldProps||[]// value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList\n//     && {\n//     value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\n//         ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname,\n//     label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\n//         this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname\n// }}\n,value:this.state&&this.state.selectedLstMappedTemplateFieldProps&&this.state.selectedLstMappedTemplateFieldProps,isMandatory:false,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'nmappedtemplatefieldpropcode');}})):\"\",this.props.Login.masterData.headername==\"Query Builder Table Columns\"?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nquerybuilderviewscode\",formLabel:this.props.intl.formatMessage({id:\"IDS_COLUMNNAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.QueryBuilderScolumnList||[]// value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList\n//     && {\n//     value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\n//         ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname,\n//     label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\n//         this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname\n// }}\n,value:this.state&&this.state.SelectedQueryBuilderScolumnList&&this.state.SelectedQueryBuilderScolumnList,isMandatory:false,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'scolumnname');}})):this.props.Login.masterData.headername==\"Dynamic Audit Table\"?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ndynamicaudittablecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_TABLE_NAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.lstDynamicAuditTableStableName||[]// value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList\n//     && {\n//     value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\n//         ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname,\n//     label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\n//         this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname\n// }}\n,value:this.state&&this.state.selectedLstDynamicAuditTableStableName&&this.state.selectedLstDynamicAuditTableStableName,isMandatory:false,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'ndynamicaudittablecode');}})):this.props.Login.masterData.headername==\"Mapped Template Field Props\"?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nformcode\",formLabel:this.props.intl.formatMessage({id:\"IDS_FORMNAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.lstQualisForms||[],lstQualisForms:true// value={this.props.Login.masterData && this.props.Login.masterData.SelectedQueryBuilderStableName\n//     && {\n//     value: this.state.selectedRecord.nquerybuildertablecode !== undefined\n//         ? this.state.selectedRecord.nquerybuildertablecode.value : this.props.Login.masterData.SelectedQueryBuilderStableName[0].nquerybuildertablecode,\n//     label: this.state.selectedRecord.nquerybuildertablecode !== undefined ?\n//         this.state.selectedRecord.nquerybuildertablecode.label : this.props.Login.masterData.SelectedQueryBuilderStableName[0].stablename\n// }}\n,value:this.state&&this.state.selectedLstQualisForms&&this.state.selectedLstQualisForms,isMandatory:false,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'indexQualisforms');}})):\"\",this.props.Login.masterData.headername==\"Mapped Template Field Props\"&&this.props.Login.masterData.selectedLstQualisforms&&this.props.Login.masterData.selectedLstQualisforms[0].nformcode?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ndynamicaudittablecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_PROPERTIES\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.lstSampleItems||[]// value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList\n//     && {\n//     value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\n//         ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname,\n//     label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\n//         this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname\n// }}\n,value:this.state&&this.state.selectedLstSampleItems&&this.state.selectedLstSampleItems,isMandatory:false,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'indexPropertiesKey');}})):\"\",this.props.Login.masterData.headername==\"Mapped Template Field Props\"&&this.props.Login.masterData.selectedLstSampleItems&&this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue===\"testListFields\"?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ndynamicaudittablecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_FIELDNAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.lstSampleField||[]// value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList\n//     && {\n//     value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\n//         ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname,\n//     label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\n//         this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname\n// }}\n,value:this.state&&this.state.selectedLstSampleField&&this.state.selectedLstSampleField,isMandatory:false,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,className:\"mb-2\",onChange:function onChange(event){return _this2.onComboChange(event,'indexFieldKey');}})):\"\")))))),this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,data:this.state.data.listofItem,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,languagesRecord:this.props.fetchById,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,languagesParam:languagesParam,methodUrl:\"Language\",pageable:true,isActionRequired:true,isToolBarRequired:true,isDownloadPDFRequired:true,isDownloadExcelRequired:true,gridHeight:'465px',scrollable:\"scrollable\",selectedId:this.props.Login.selectedId}):\"\"))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{onSaveClick:this.onSaveClick,operation:this.props.Login.operation,screenName:this.props.Login.inputParam.displayName,closeModal:this.handleClose,show:this.props.Login.openModal,showSaveContinue:false,hideSave:this.state.showSynonym,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord,mandatoryFields:this.mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation?this.props.Login.operation:'',onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddLanguageSynonym,{selectedFieldRecord:this.state.selectedRecord,needheader:this.props.Login.masterData.selectedmultilingualmasters||this.props.Login.masterData.sneedheader,onInputOnChange:this.onInputOnChange,selectedJsondata:this.props.Login.masterData.headername===\"Query Builder Views Columns\"||this.props.Login.masterData.headername===\"Query Builder Table Columns\"||this.props.Login.masterData.headername===\"Dynamic Audit Table\"||this.props.Login.masterData.headername===\"Mapped Template Field Props\"?this.props.Login.selectedRecord.sjsondata:this.props.Login.selectedRecord&&this.props.Login.selectedRecord.jsondata// selectedJsondata={this.props.Login.selectedRecord && this.props.Login.selectedRecord.jsondata}\n,languages:this.props.Login.languageList||[],fieldName:this.props.Login.selectedRecord.fieldName})}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);var multilingualmastersMap=constructOptionList(this.props.Login.masterData.multilingualmasters||[],\"nmultilingualmasterscode\",\"sdisplayname\",\"nsorter\",'ascending',undefined,true);var multilingualmasters=multilingualmastersMap.get(\"OptionList\");this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,multilingualmasters:multilingualmasters,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData.listofItem?this.props.Login.masterData.listofItem:[],this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}var FilterQueryMap=constructOptionList(this.props.Login.masterData.QueryBuilderViewsName||[],\"nquerybuilderviewscode\",\"sdisplayname\",'nquerybuilderviewscode','descending',true);var QueryBuilderViewsName=FilterQueryMap.get(\"OptionList\");var formNameQueryMap=constructOptionList(this.props.Login.filterValue||[],\"nformcode\",\"sformname\",undefined,undefined,true);var MaterialConfig=formNameQueryMap.get(\"OptionList\");var FilterQueryColumnMap,QueryBuilderStableName,FilterColumnNameMap,QueryBuilderScolumnList,SelectedQueryBuilderStableName,SelectedQueryBuilderScolumnList;if(this.props.Login.masterData.headername===\"Query Builder Table Columns\"){if(this.props.Login.masterData&&this.props.Login.masterData.QueryBuilderStableName){FilterQueryColumnMap=constructOptionList(this.props.Login.masterData.QueryBuilderStableName||[],\"nquerybuildertablecode\",\"stablename\",'nquerybuildertablecode','ascending',true);QueryBuilderStableName=FilterQueryColumnMap.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.SelectedQueryBuilderStableName){var FilterSelectedQueryColumnMap=constructOptionList(this.props.Login.masterData.SelectedQueryBuilderStableName||[],\"nquerybuildertablecode\",\"stablename\",undefined,undefined,true);SelectedQueryBuilderStableName=FilterSelectedQueryColumnMap.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.QueryBuilderScolumnList){FilterColumnNameMap=constructOptionList(this.props.Login.masterData.QueryBuilderScolumnList||[],\"scolumnname\",\"scolumnname\",'ordinal_position','descending',true);QueryBuilderScolumnList=FilterColumnNameMap.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.selectedQueryBuilderScolumnList){var FilterSelectedColumnNameMap=constructOptionList(this.props.Login.masterData.selectedQueryBuilderScolumnList||[],\"scolumnname\",\"scolumnname\",undefined,undefined,true);SelectedQueryBuilderScolumnList=FilterSelectedColumnNameMap.get(\"OptionList\");}}var formName,lstFormName,DynamicAuditTableStableName,lstDynamicAuditTableStableName,selectedFormName,selectedLstFormName,selectedDynamicAuditTableStableName,selectedLstDynamicAuditTableStableName;if(this.props.Login.masterData.headername===\"Dynamic Audit Table\"){if(this.props.Login.masterData&&this.props.Login.masterData.lstFormName){formName=constructOptionList(this.props.Login.masterData.lstFormName||[],\"nformcode\",\"sformname\",'nformcode','ascending',true);lstFormName=formName.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.lstDynamicAuditTable){DynamicAuditTableStableName=constructOptionList(this.props.Login.masterData.lstDynamicAuditTable||[],\"ndynamicaudittablecode\",\"stablename\",'ndynamicaudittablecode','descending',true);lstDynamicAuditTableStableName=DynamicAuditTableStableName.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.SelectedFormName){selectedFormName=constructOptionList(this.props.Login.masterData.SelectedFormName||[],\"nformcode\",\"sformname\",undefined,undefined,true);selectedLstFormName=selectedFormName.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.selectedDynamicAuditTable){selectedDynamicAuditTableStableName=constructOptionList(this.props.Login.masterData.selectedDynamicAuditTable||[],\"ndynamicaudittablecode\",\"stablename\",undefined,undefined,true);selectedLstDynamicAuditTableStableName=selectedDynamicAuditTableStableName.get(\"OptionList\");}}var lstQualisForms,selectedLstQualisForms,qualisForms,selectedQualisForms,lstSampleItems,selectedLstSampleItems,sampleItems,selectedSampleItems,mappedTemplateFieldProps,selectedMappedTemplateFieldProps,lstMappedTemplateFieldProps,selectedLstMappedTemplateFieldProps,lstSampleField,selectedLstSampleField,sampleField,selectedSampleField;if(this.props.Login.masterData.headername===\"Mapped Template Field Props\"){if(this.props.Login.masterData&&this.props.Login.masterData.lstMappedTemplateFieldProps){mappedTemplateFieldProps=constructOptionList(this.props.Login.masterData.lstMappedTemplateFieldProps||[],\"nmappedtemplatefieldpropcode\",\"sregtemplatename\",undefined,undefined,true);lstMappedTemplateFieldProps=mappedTemplateFieldProps.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.selectedLstMappedTemplateFieldProps){selectedMappedTemplateFieldProps=constructOptionList(this.props.Login.masterData.selectedLstMappedTemplateFieldProps||[],\"nmappedtemplatefieldpropcode\",\"sregtemplatename\",undefined,undefined,true);selectedLstMappedTemplateFieldProps=selectedMappedTemplateFieldProps.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.lstQualisforms){qualisForms=constructOptionList(this.props.Login.masterData.lstQualisforms||[],\"indexQualisforms\",\"sformname\",undefined,undefined,true);lstQualisForms=qualisForms.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.selectedLstQualisforms){selectedQualisForms=constructOptionList(this.props.Login.masterData.selectedLstQualisforms||[],\"indexQualisforms\",\"sformname\",undefined,undefined,true);selectedLstQualisForms=selectedQualisForms.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.lstSampleItems){sampleItems=constructOptionList(this.props.Login.masterData.lstSampleItems||[],\"indexPropertiesKey\",\"indexPropertiesValue\",undefined,undefined,true);lstSampleItems=sampleItems.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.selectedLstSampleItems){selectedSampleItems=constructOptionList(this.props.Login.masterData.selectedLstSampleItems||[],\"indexPropertiesKey\",\"indexPropertiesValue\",undefined,undefined,true);selectedLstSampleItems=selectedSampleItems.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.lstSampleField){sampleField=constructOptionList(this.props.Login.masterData.lstSampleField||[],\"indexFieldKey\",\"indexFieldValue\",undefined,undefined,true);lstSampleField=sampleField.get(\"OptionList\");}if(this.props.Login.masterData&&this.props.Login.masterData.selectedLstSampleField){selectedSampleField=constructOptionList(this.props.Login.masterData.selectedLstSampleField||[],\"indexFieldKey\",\"indexFieldValue\",undefined,undefined,true);selectedLstSampleField=selectedSampleField.get(\"OptionList\");}}this.setState({data:this.props.Login.masterData,QueryBuilderViewsName:QueryBuilderViewsName,QueryBuilderStableName:QueryBuilderStableName?QueryBuilderStableName:this.state.QueryBuilderStableName,SelectedQueryBuilderStableName:SelectedQueryBuilderStableName?SelectedQueryBuilderStableName:this.state.SelectedQueryBuilderStableName,QueryBuilderScolumnList:QueryBuilderScolumnList?QueryBuilderScolumnList:this.state.QueryBuilderScolumnList,SelectedQueryBuilderScolumnList:SelectedQueryBuilderScolumnList?SelectedQueryBuilderScolumnList:this.state.SelectedQueryBuilderScolumnList,lstFormName:lstFormName?lstFormName:this.state.lstFormName,lstDynamicAuditTableStableName:lstDynamicAuditTableStableName?lstDynamicAuditTableStableName:this.state.lstDynamicAuditTableStableName,selectedLstFormName:selectedLstFormName?selectedLstFormName:this.state.selectedLstFormName,selectedLstDynamicAuditTableStableName:selectedLstDynamicAuditTableStableName?selectedLstDynamicAuditTableStableName:this.state.selectedLstDynamicAuditTableStableName,lstQualisForms:lstQualisForms?lstQualisForms:this.state.lstQualisForms,selectedLstQualisForms:selectedLstQualisForms?selectedLstQualisForms:this.state.selectedLstQualisForms,lstSampleItems:lstSampleItems?lstSampleItems:this.state.lstSampleItems,selectedLstSampleItems:selectedLstSampleItems?selectedLstSampleItems:this.state.selectedLstSampleItems,lstMappedTemplateFieldProps:lstMappedTemplateFieldProps?lstMappedTemplateFieldProps:this.state.lstMappedTemplateFieldProps,selectedLstMappedTemplateFieldProps:selectedLstMappedTemplateFieldProps?selectedLstMappedTemplateFieldProps:this.state.selectedLstMappedTemplateFieldProps,lstSampleField:lstSampleField?lstSampleField:this.state.lstSampleField,selectedLstSampleField:selectedLstSampleField?selectedLstSampleField:this.state.selectedLstSampleField,MaterialConfig:MaterialConfig,dataResult:process(this.props.Login.masterData.listofItem?this.props.Login.masterData.listofItem:[],dataState),dataState:dataState});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){var selectedRecord;if(this.props.Login.masterData.headername===\"Query Builder Views Columns\"){selectedRecord=_objectSpread(_objectSpread({},this.props.Login.selectedRecord),{},{sdefaultname:this.props.Login.selectedRecord.sdefaultname});}else if(this.props.Login.masterData.headername===\"Query Builder Table Columns\"){selectedRecord=_objectSpread(_objectSpread({},this.props.Login.selectedRecord),{},{sdefaultname:this.props.Login.selectedRecord.sdefaultname});}else{selectedRecord=_objectSpread({},this.props.Login.selectedRecord);}this.setState({selectedRecord:selectedRecord});}}},{key:\"handleClose\",value:function handleClose(){var loadEsign=this.props.Login.loadEsign;var openModal=this.props.Login.openModal;var selectedRecord=this.props.Login.selectedRecord;var selectedId=this.props.Login.selectedId;if(this.state.showSynonym){this.setState({showSynonym:false});return null;}if(this.props.Login.loadEsign){loadEsign=false;//openModal = false;\n}else{openModal=false;selectedRecord=_objectSpread({},this.props.Login.selectedRecord);selectedId=null;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:selectedId}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return Languages;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,showRegTypeAddScreen:showRegTypeAddScreen,fetchById:fetchById,comboService:comboService,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(Languages));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/Languages.jsx"],"names":["React","ListWrapper","Row","Col","Button","toast","process","connect","injectIntl","callService","crudMaster","showRegTypeAddScreen","fetchById","comboService","updateStore","validateEsignCredential","DEFAULT_RETURN","DataGrid","FormSelectSearch","SlideOutModal","showEsign","getControlMap","constructOptionList","Esign","AddLanguageSynonym","Affix","faSync","faLanguage","faFilePdf","FontAwesomeIcon","mapStateToProps","state","Login","Languages","props","dataStateChange","event","setState","dataResult","data","listofItem","dataState","reloadData","inputParam","inputData","userinfo","userInfo","methodUrl","classUrl","displayName","validateEsign","sreason","selectedRecord","nreasoncode","value","spredefinedreason","label","password","screenData","onInputOnChange","name","item","fieldName","target","type","checked","masterData","headername","undefined","onComboChange","comboData","sdisplayname","nquerybuilderviewscode","sviewname","primarykey","displayname","nquerybuildertablecode","stablename","scolumnname","selectedvalues","SelectedQueryBuilderScolumnList","SelectedQueryBuilderStableName","dynamicaudittableformcode","sformname","ndynamicaudittablecode","formPrimayKey","selectedLstFormName","nmappedtemplatefieldpropcode","sregtemplatename","indexQualisforms","indexFieldKey","indexFieldValue","indexPropertiesKey","indexValue","nmultilingualmasterscode","onSaveClick","saveType","formRef","selectedId","showSynonym","operation","nmenucode","nmodulecode","nformcode","ntranscode","salertdisplaystatus","stransdisplaystatus","sactiondisplaystatus","ncontrolcode","scontrolids","napprovalsubtypecode","approvalsubtypename","nsampletypecode","sampletypename","nperiodcode","speriodname","ngendercode","sgendername","ngradecode","nschedulertypecode","sschedulertypename","tablename","replaceValue","sjsondata","sdefaultname","findIndex","keys","jsondata","nmaterialtypecode","smaterialtypename","ninterfacetypecode","sinterfacetypename","nauditactionfiltercode","nattachmenttypecode","sattachmenttype","nftptypecode","sftptypename","nreporttypecode","ncoareporttypecode","nreactcomponentcode","componentname","nfunctioncode","ndynamicformulafieldcode","ncharttypecode","ndesigncomponentcode","nchecklistcomponentcode","ngenericlabelcode","JSON","parse","columnname","index","stringify","subsampleenabledisable","sfieldname","multilingualfields","selectedLstDynamicAuditTableStableName","selectedLstSampleField","selectedLstQualisforms","selectedLstSampleItems","indexPropertiesValue","userRoleControlRights","updateInfo","typeName","loadEsign","openModal","screenName","createRef","extractedColumnList","handleClose","bind","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","mandatoryFields","primaryKeyField","languageList","languagesId","has","get","languagesParam","ncontrolCode","intl","formatMessage","id","multilingualmasters","selectedmultilingualmasters","QueryBuilderViewsName","selectedQueryBuilderViewsName","QueryBuilderStableName","lstFormName","lstMappedTemplateFieldProps","selectedLstMappedTemplateFieldProps","QueryBuilderScolumnList","lstDynamicAuditTableStableName","lstQualisForms","selectedLstQualisForms","lstSampleItems","lstSampleField","sneedheader","previousProps","Object","values","map","push","multilingualmastersMap","FilterQueryMap","formNameQueryMap","filterValue","MaterialConfig","FilterQueryColumnMap","FilterColumnNameMap","FilterSelectedQueryColumnMap","selectedQueryBuilderScolumnList","FilterSelectedColumnNameMap","formName","DynamicAuditTableStableName","selectedFormName","selectedDynamicAuditTableStableName","lstDynamicAuditTable","SelectedFormName","selectedDynamicAuditTable","qualisForms","selectedQualisForms","sampleItems","selectedSampleItems","mappedTemplateFieldProps","selectedMappedTemplateFieldProps","sampleField","selectedSampleField","lstQualisforms","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListWrapper } from '../../components/client-group.styles'\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { callService, crudMaster, showRegTypeAddScreen, fetchById, comboService, updateStore, validateEsignCredential } from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { showEsign, getControlMap, constructOptionList } from '../../components/CommonScript';\r\nimport Esign from '../audittrail/Esign';\r\nimport AddLanguageSynonym from '../../components/AddLanguages';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport { Affix } from 'rsuite';\r\nimport { faSync, faLanguage, faFilePdf } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Languages extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.handleClose = this.handleClose.bind(this);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {}, userRoleControlRights: [], controlMap: new Map(),\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            mandatoryFields: []\r\n\r\n        };\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data.listofItem, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { userinfo: this.props.Login.userInfo },\r\n            methodUrl: \"Language\",\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let primaryKeyField = \"\";\r\n        if (this.props.Login.inputParam !== undefined) {\r\n            this.mandatoryFields = [\r\n                { \"idsName\": \"IDS_DEFAULTLANGUAGE\", \"dataField\": this.props.Login.languageList[0].value == \"en-US\" ? \"sdefaultname\" : \" \", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"text\" }\r\n            ]\r\n            if (this.props.Login.masterData.headername == \"Menu\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_MENUID\", \"dataField\": \"smenuname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_MENUNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nmenucode\";\r\n            } else if (this.props.Login.masterData.headername == \"Module\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_MODULEID\", \"dataField\": \"smodulename\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_MODULENAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n                ]\r\n                primaryKeyField = \"nmodulecode\";\r\n            } else if (this.props.Login.masterData.headername == \"Forms\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_FORMID\", \"dataField\": \"sformname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_FORMNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n                ]\r\n                primaryKeyField = \"nformcode\";\r\n            } else if (this.props.Login.masterData.headername == \"Transaction Status\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_TRANSACTIONSTATUSID\", \"dataField\": \"stransstatus\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_ACTIONDISPLAYSTATUS\", \"dataField\": \"sactiondisplaystatus\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_TRANSDISPLAYSTATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"250px\" },\r\n                ]\r\n                primaryKeyField = \"ntranscode\";\r\n            } else if (this.props.Login.masterData.headername == \"Control Master\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_CONTROLMASTERID\", \"dataField\": \"scontrolname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_CONTROLMASTER\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n                ]\r\n                primaryKeyField = \"ncontrolcode\";\r\n            } else if (this.props.Login.masterData.headername == \"Approval Sub Type\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_APPROVALSUBTYPEID\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_APPROVALSUBTYPENAME\", \"dataField\": \"sapprovalsubtypename\", \"width\": \"250px\" },\r\n                ]\r\n                primaryKeyField = \"napprovalsubtypecode\";\r\n            } else if (this.props.Login.masterData.headername == \"Sample Type\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_SAMPLETYPEID\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_SAMPLETYPENAME\", \"dataField\": \"ssampletypename\", \"width\": \"250px\" },\r\n                ]\r\n                primaryKeyField = \"nsampletypecode\";\r\n            }\r\n            // else if (this.props.Login.masterData.headername == \"Template Design\") {\r\n            //     this.extractedColumnList = [\r\n            //         { \"idsName\": \"IDS_TEMPLATETYPEID\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n            //         { \"idsName\": \"IDS_TEMPLATETYPENAME\", \"dataField\": \"stemplatetypename\", \"width\": \"250px\" }\r\n            //     ]\r\n            //     primaryKeyField = \"ntemplatetypecode\";\r\n            // }\r\n            else if (this.props.Login.masterData.headername == \"Period\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_PERIODID\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_PERIODNAME\", \"dataField\": \"speriodname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nperiodcode\";\r\n            } else if (this.props.Login.masterData.headername == \"Gender\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_GENDERID\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_GENDERNAME\", \"dataField\": \"sgendername\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"ngendercode\";\r\n            } else if (this.props.Login.masterData.headername == \"Grade\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_GRADEID\", \"dataField\": \"sgradename\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_GRADENAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"ngradecode\";\r\n            } else if (this.props.Login.masterData.headername == \"Scheduler Type\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_SCHEDULERTYPEID\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_SCHEDULERTYPENAME\", \"dataField\": \"sschedulertypename\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nschedulertypecode\";\r\n            } else if (this.props.Login.masterData.headername == \"Query Builder Tables\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_FORMS\", \"dataField\": \"sformname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_SQLQUERYBUILDERID\", \"dataField\": \"stablename\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_SQLQUERYBUILDERNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nquerybuildertablecode\";\r\n            } else if (this.props.Login.masterData.headername == \"Query Builder Views\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_VIEWSQUERYBUILDERID\", \"dataField\": \"sviewname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_VIEWSQUERYBUILDERNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nquerybuilderviewscode\";\r\n            } else if (this.props.Login.masterData.headername == \"Query Builder Views Columns\") {\r\n                this.extractedColumnList = [\r\n                    // { \"idsName\": \"IDS_QUERYBUILDERVIEWSCOLUMNSNAME\", \"dataField\": \"sviewname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_QUERYBUILDERVIEWSCOLUMNSID\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = 'index';\r\n            } else if (this.props.Login.masterData.headername == \"Multilingual Masters\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_MULTILINGUALMASTERSID\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_MULTILINGUALMASTERSAME\", \"dataField\": \"sdefaultname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nmultilingualmasterscode\";\r\n            } else if (this.props.Login.masterData.headername == \"Material Type\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_MATERIALTYPEID\", \"dataField\": \"smaterialtypename\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_MATERIALTYPENAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nmaterialtypecode\";\r\n            } else if (this.props.Login.masterData.headername == \"Interface Type\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_INTERFACETYPEID\", \"dataField\": \"sinterfacetypename\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_INTERFACETYPENAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"ninterfacetypecode\";\r\n            } else if (this.props.Login.masterData.headername == \"Audit Action Filter\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_AUDITACTIONFILTERID\", \"dataField\": \"sauditactionfiltername\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_AUDITACTIONFILTERNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nauditactionfiltercode\";\r\n            } else if (this.props.Login.masterData.headername == \"Attachment Type\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_ATTACHMENTTYPEID\", \"dataField\": \"sdefaultname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_ATTACHMENTTYPENAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nattachmenttypecode\";\r\n            } else if (this.props.Login.masterData.headername == \"FTP Type\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_FTPTYPEID\", \"dataField\": \"sdefaultname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_FTPTYPENAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nftptypecode\";\r\n            } else if (this.props.Login.masterData.headername == \"Report Type\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_REPORTTYPEID\", \"dataField\": \"sreporttypename\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_REPORTTYPENAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nreporttypecode\";\r\n            } else if (this.props.Login.masterData.headername == \"COAReport Type\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_COAREPORTTYPEID\", \"dataField\": \"scoareporttypename\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_COAREPORTTYPENAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"ncoareporttypecode\";\r\n            } else if (this.props.Login.masterData.headername == \"React Components\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_REACTCOMPONENTID\", \"dataField\": \"componentname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_REACTCOMPONENTNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nreactcomponentcode\";\r\n            }\r\n            else if (this.props.Login.masterData.headername == \"Functions\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_FUNCTIONSID\", \"dataField\": \"sfunctionname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_FUNCTIONSNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nfunctioncode\";\r\n            }\r\n            else if (this.props.Login.masterData.headername == \"Dynamic Formula Fields\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_DYNAMICFORMULAFIELDSID\", \"dataField\": \"sdefaultname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_DYNAMICFORMULAFIELDSNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"ndynamicformulafieldcode\";\r\n            }\r\n            else if (this.props.Login.masterData.headername == \"Chart Type\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_CHARTTYPEID\", \"dataField\": \"sdefaultname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_CHARTTYPENAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"ncharttypecode\";\r\n            }\r\n            else if (this.props.Login.masterData.headername == \"Design Components\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_DESIGNCOMPONENTSID\", \"dataField\": \"sdefaultname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_DESIGNCOMPONENTSNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"ndesigncomponentcode\";\r\n            }\r\n            else if (this.props.Login.masterData.headername == \"CheckList Component\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_CHECKLISTCOMPONENTID\", \"dataField\": \"scomponentname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_CHECKLISTCOMPONENTNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"nchecklistcomponentcode\";\r\n            }\r\n            else if (this.props.Login.masterData.headername == \"Generic Label\") {\r\n                this.extractedColumnList = [\r\n                    { \"idsName\": \"IDS_GENERICLABELID\", \"dataField\": \"sgenericlabel\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_GENERICLABELNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"ngenericlabelcode\";\r\n            }\r\n            else if (this.props.Login.masterData.headername == \"Query Builder Table Columns\") {\r\n                this.extractedColumnList = [\r\n                    // { \"idsName\": \"IDS_QUERYBUILDERTABLECOLUMNSID\", \"dataField\": \"stablename\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_QUERYBUILDERTABLECOLUMNSNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"index\";\r\n            }\r\n            else if (this.props.Login.masterData.headername == \"Dynamic Audit Table\") {\r\n                this.extractedColumnList = [\r\n                    // { \"idsName\": \"IDS_TABLE_NAME\", \"dataField\": \"stablename\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_FIELDNAME\", \"dataField\": \"sfieldname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_MULTILINGUALFIELDS\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"index\";\r\n            }\r\n            else if (this.props.Login.masterData.headername == \"Mapped Template Field Props\") {\r\n                this.extractedColumnList = [\r\n                    // { \"idsName\": \"samplegriditems\", \"dataField\": \"sfieldname\", \"width\": \"250px\" },\r\n                    { \"idsName\": \"IDS_MAPPEDTEMPLATEFIELDPROPSNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\" }\r\n                ]\r\n                primaryKeyField = \"index\";\r\n            }\r\n        }\r\n\r\n        const languagesId = this.props.Login.inputParam && this.state.controlMap.has(\"UpdateLanguage\")\r\n            && this.state.controlMap.get('UpdateLanguage').ncontrolcode;\r\n        const languagesParam = {\r\n            screenName: \"Language\", operation: \"update\", primaryKeyField: primaryKeyField,\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, ncontrolCode: languagesId, selectedRecord: this.state.selectedRecord\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <Row noGutters>\r\n                                <Col md={8}>\r\n                                    <Affix top={85}>\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <Row>\r\n                                                    <Col md={4}>\r\n                                                        <FormSelectSearch\r\n                                                            name={\"nmultilingualmasterscode\"}\r\n                                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_MULTILINGUALMASTERS\" })}\r\n                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                            options={this.state.multilingualmasters || []}\r\n                                                            value={this.props.Login.masterData && this.props.Login.masterData.selectedmultilingualmasters\r\n                                                                && {\r\n                                                                value:\r\n                                                                    this.props.Login.masterData.selectedmultilingualmasters.nmultilingualmasterscode ? this.props.Login.masterData.selectedmultilingualmasters.nmultilingualmasterscode :\r\n                                                                        this.state.selectedRecord.nmultilingualmasterscode.value,\r\n                                                                label: this.props.Login.masterData.selectedmultilingualmasters.sdisplayname ? this.props.Login.masterData.selectedmultilingualmasters.sdisplayname :\r\n                                                                    this.state.selectedRecord.nmultilingualmasterscode.label\r\n                                                            }}\r\n                                                            isMandatory={false}\r\n                                                            isMulti={false}\r\n                                                            isClearable={false}\r\n                                                            isSearchable={true}\r\n                                                            isDisabled={false}\r\n                                                            closeMenuOnSelect={true}\r\n                                                            className=\"mb-2\"\r\n                                                            onChange={(event) => this.onComboChange(event, 'nmultilingualmasterscode')}\r\n                                                        />\r\n                                                    </Col>\r\n                                                    {this.props.Login.masterData.headername == \"Query Builder Views Columns\" ?\r\n                                                        <Col md={4} >\r\n                                                            <FormSelectSearch\r\n                                                                name={\"nquerybuilderviewscode\"}\r\n                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_VIEWNAME\" })}\r\n                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={this.state.QueryBuilderViewsName || []}\r\n                                                                value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderViewsName\r\n                                                                    && {\r\n                                                                    value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\r\n                                                                        ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderViewsName.nquerybuilderviewscode,\r\n                                                                    label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\r\n                                                                        this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderViewsName.sdisplayname\r\n                                                                }}\r\n                                                                isMandatory={false}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={false}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                className=\"mb-2\"\r\n                                                                onChange={(event) => this.onComboChange(event, 'nquerybuilderviewscode')}\r\n                                                            />\r\n                                                        </Col> : this.props.Login.masterData.headername == \"Query Builder Table Columns\" ?\r\n                                                            <Col md={4} >\r\n                                                                <FormSelectSearch\r\n                                                                    name={\"nquerybuilderviewscode\"}\r\n                                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_TABLE_NAME\" })}\r\n                                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                    options={this.state.QueryBuilderStableName || []}\r\n                                                                    // value={this.props.Login.masterData && this.props.Login.masterData.SelectedQueryBuilderStableName\r\n                                                                    //     && {\r\n                                                                    //     value: this.state.selectedRecord.nquerybuildertablecode !== undefined\r\n                                                                    //         ? this.state.selectedRecord.nquerybuildertablecode.value : this.props.Login.masterData.SelectedQueryBuilderStableName[0].nquerybuildertablecode,\r\n                                                                    //     label: this.state.selectedRecord.nquerybuildertablecode !== undefined ?\r\n                                                                    //         this.state.selectedRecord.nquerybuildertablecode.label : this.props.Login.masterData.SelectedQueryBuilderStableName[0].stablename\r\n                                                                    // }}\r\n                                                                    value={this.state && this.state.SelectedQueryBuilderStableName && this.state.SelectedQueryBuilderStableName}\r\n                                                                    isMandatory={false}\r\n                                                                    isMulti={false}\r\n                                                                    isClearable={false}\r\n                                                                    isSearchable={true}\r\n                                                                    isDisabled={false}\r\n                                                                    closeMenuOnSelect={true}\r\n                                                                    className=\"mb-2\"\r\n                                                                    onChange={(event) => this.onComboChange(event, 'nquerybuildertablecode')}\r\n                                                                />\r\n                                                            </Col> : this.props.Login.masterData.headername == \"Dynamic Audit Table\" ?\r\n                                                                <Col md={4} >\r\n                                                                    <FormSelectSearch\r\n                                                                        name={\"nformcode\"}\r\n                                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SCREENNAME\" })}\r\n                                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                        options={this.state.lstFormName || []}\r\n                                                                        // value={this.props.Login.masterData && this.props.Login.masterData.SelectedQueryBuilderStableName\r\n                                                                        //     && {\r\n                                                                        //     value: this.state.selectedRecord.nquerybuildertablecode !== undefined\r\n                                                                        //         ? this.state.selectedRecord.nquerybuildertablecode.value : this.props.Login.masterData.SelectedQueryBuilderStableName[0].nquerybuildertablecode,\r\n                                                                        //     label: this.state.selectedRecord.nquerybuildertablecode !== undefined ?\r\n                                                                        //         this.state.selectedRecord.nquerybuildertablecode.label : this.props.Login.masterData.SelectedQueryBuilderStableName[0].stablename\r\n                                                                        // }}\r\n                                                                        value={this.state && this.state.selectedLstFormName && this.state.selectedLstFormName}\r\n                                                                        isMandatory={false}\r\n                                                                        isMulti={false}\r\n                                                                        isClearable={false}\r\n                                                                        isSearchable={true}\r\n                                                                        isDisabled={false}\r\n                                                                        closeMenuOnSelect={true}\r\n                                                                        className=\"mb-2\"\r\n                                                                        onChange={(event) => this.onComboChange(event, 'dynamicaudittableformcode')}\r\n                                                                    />\r\n                                                                </Col> : this.props.Login.masterData.headername == \"Mapped Template Field Props\" ?\r\n                                                                    <Col md={4} >\r\n                                                                        <FormSelectSearch\r\n                                                                            name={\"nquerybuilderviewscode\"}\r\n                                                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REACTREGISTRATIONTEMPLATENAME\" })}\r\n                                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                            options={this.state.lstMappedTemplateFieldProps || []}\r\n                                                                            // value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList\r\n                                                                            //     && {\r\n                                                                            //     value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\r\n                                                                            //         ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname,\r\n                                                                            //     label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\r\n                                                                            //         this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname\r\n                                                                            // }}\r\n                                                                            value={this.state && this.state.selectedLstMappedTemplateFieldProps && this.state.selectedLstMappedTemplateFieldProps}\r\n                                                                            isMandatory={false}\r\n                                                                            isMulti={false}\r\n                                                                            isClearable={false}\r\n                                                                            isSearchable={true}\r\n                                                                            isDisabled={false}\r\n                                                                            closeMenuOnSelect={true}\r\n                                                                            className=\"mb-2\"\r\n                                                                            onChange={(event) => this.onComboChange(event, 'nmappedtemplatefieldpropcode')}\r\n                                                                        />\r\n                                                                    </Col> : \"\"\r\n                                                    }\r\n                                                    {this.props.Login.masterData.headername == \"Query Builder Table Columns\" ?\r\n                                                        <Col md={4} >\r\n                                                            <FormSelectSearch\r\n                                                                name={\"nquerybuilderviewscode\"}\r\n                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_COLUMNNAME\" })}\r\n                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={this.state.QueryBuilderScolumnList || []}\r\n                                                                // value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList\r\n                                                                //     && {\r\n                                                                //     value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\r\n                                                                //         ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname,\r\n                                                                //     label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\r\n                                                                //         this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname\r\n                                                                // }}\r\n                                                                value={this.state && this.state.SelectedQueryBuilderScolumnList && this.state.SelectedQueryBuilderScolumnList}\r\n                                                                isMandatory={false}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={false}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                className=\"mb-2\"\r\n                                                                onChange={(event) => this.onComboChange(event, 'scolumnname')}\r\n                                                            />\r\n                                                        </Col> : this.props.Login.masterData.headername == \"Dynamic Audit Table\" ?\r\n                                                            <Col md={4} >\r\n                                                                <FormSelectSearch\r\n                                                                    name={\"ndynamicaudittablecode\"}\r\n                                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_TABLE_NAME\" })}\r\n                                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                    options={this.state.lstDynamicAuditTableStableName || []}\r\n                                                                    // value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList\r\n                                                                    //     && {\r\n                                                                    //     value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\r\n                                                                    //         ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname,\r\n                                                                    //     label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\r\n                                                                    //         this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname\r\n                                                                    // }}\r\n                                                                    value={this.state && this.state.selectedLstDynamicAuditTableStableName && this.state.selectedLstDynamicAuditTableStableName}\r\n                                                                    isMandatory={false}\r\n                                                                    isMulti={false}\r\n                                                                    isClearable={false}\r\n                                                                    isSearchable={true}\r\n                                                                    isDisabled={false}\r\n                                                                    closeMenuOnSelect={true}\r\n                                                                    className=\"mb-2\"\r\n                                                                    onChange={(event) => this.onComboChange(event, 'ndynamicaudittablecode')}\r\n                                                                />\r\n                                                            </Col> : this.props.Login.masterData.headername == \"Mapped Template Field Props\" ?\r\n                                                                <Col md={4} >\r\n                                                                    <FormSelectSearch\r\n                                                                        name={\"nformcode\"}\r\n                                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_FORMNAME\" })}\r\n                                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                        options={this.state.lstQualisForms || []} lstQualisForms\r\n                                                                        // value={this.props.Login.masterData && this.props.Login.masterData.SelectedQueryBuilderStableName\r\n                                                                        //     && {\r\n                                                                        //     value: this.state.selectedRecord.nquerybuildertablecode !== undefined\r\n                                                                        //         ? this.state.selectedRecord.nquerybuildertablecode.value : this.props.Login.masterData.SelectedQueryBuilderStableName[0].nquerybuildertablecode,\r\n                                                                        //     label: this.state.selectedRecord.nquerybuildertablecode !== undefined ?\r\n                                                                        //         this.state.selectedRecord.nquerybuildertablecode.label : this.props.Login.masterData.SelectedQueryBuilderStableName[0].stablename\r\n                                                                        // }}\r\n                                                                        value={this.state && this.state.selectedLstQualisForms && this.state.selectedLstQualisForms}\r\n                                                                        isMandatory={false}\r\n                                                                        isMulti={false}\r\n                                                                        isClearable={false}\r\n                                                                        isSearchable={true}\r\n                                                                        isDisabled={false}\r\n                                                                        closeMenuOnSelect={true}\r\n                                                                        className=\"mb-2\"\r\n                                                                        onChange={(event) => this.onComboChange(event, 'indexQualisforms')}\r\n                                                                    />\r\n                                                                </Col> : \"\"\r\n                                                    }\r\n                                                    {this.props.Login.masterData.headername == \"Mapped Template Field Props\" && this.props.Login.masterData.selectedLstQualisforms && this.props.Login.masterData.selectedLstQualisforms[0].nformcode ?\r\n                                                        <Col md={4} >\r\n                                                            <FormSelectSearch\r\n                                                                name={\"ndynamicaudittablecode\"}\r\n                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PROPERTIES\" })}\r\n                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={this.state.lstSampleItems || []}\r\n                                                                // value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList\r\n                                                                //     && {\r\n                                                                //     value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\r\n                                                                //         ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname,\r\n                                                                //     label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\r\n                                                                //         this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname\r\n                                                                // }}\r\n                                                                value={this.state && this.state.selectedLstSampleItems && this.state.selectedLstSampleItems}\r\n                                                                isMandatory={false}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={false}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                className=\"mb-2\"\r\n                                                                onChange={(event) => this.onComboChange(event, 'indexPropertiesKey')}\r\n                                                            />\r\n                                                        </Col> : \"\"}\r\n                                                    {this.props.Login.masterData.headername == \"Mapped Template Field Props\" && this.props.Login.masterData.selectedLstSampleItems && this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue === \"testListFields\" ?\r\n                                                        <Col md={4} >\r\n                                                            <FormSelectSearch\r\n                                                                name={\"ndynamicaudittablecode\"}\r\n                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_FIELDNAME\" })}\r\n                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                options={this.state.lstSampleField || []}\r\n                                                                // value={this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList\r\n                                                                //     && {\r\n                                                                //     value: this.state.selectedRecord.nquerybuilderviewscode !== undefined\r\n                                                                //         ? this.state.selectedRecord.nquerybuilderviewscode.value : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname,\r\n                                                                //     label: this.state.selectedRecord.nquerybuilderviewscode !== undefined ?\r\n                                                                //         this.state.selectedRecord.nquerybuilderviewscode.label : this.props.Login.masterData.selectedQueryBuilderScolumnList.scolumnname\r\n                                                                // }}\r\n                                                                value={this.state && this.state.selectedLstSampleField && this.state.selectedLstSampleField}\r\n                                                                isMandatory={false}\r\n                                                                isMulti={false}\r\n                                                                isClearable={false}\r\n                                                                isSearchable={true}\r\n                                                                isDisabled={false}\r\n                                                                closeMenuOnSelect={true}\r\n                                                                className=\"mb-2\"\r\n                                                                onChange={(event) => this.onComboChange(event, 'indexFieldKey')}\r\n                                                            />\r\n                                                        </Col> : \"\"}\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Affix>\r\n                                </Col>\r\n                            </Row>\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={primaryKeyField}\r\n                                    data={this.state.data.listofItem}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    languagesRecord={this.props.fetchById}\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    languagesParam={languagesParam}\r\n                                    methodUrl=\"Language\"\r\n                                    pageable={true}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    isDownloadPDFRequired={true}\r\n                                    isDownloadExcelRequired={true}\r\n                                    gridHeight={'465px'}\r\n                                    scrollable={\"scrollable\"}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.inputParam.displayName}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openModal}\r\n                        showSaveContinue={false}\r\n                        hideSave={this.state.showSynonym}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord}\r\n                        mandatoryFields={this.mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation ? this.props.Login.operation : ''}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            <AddLanguageSynonym\r\n                                selectedFieldRecord={this.state.selectedRecord}\r\n                                needheader={(this.props.Login.masterData.selectedmultilingualmasters || this.props.Login.masterData.sneedheader)}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                selectedJsondata={(this.props.Login.masterData.headername === \"Query Builder Views Columns\" || this.props.Login.masterData.headername === \"Query Builder Table Columns\" || this.props.Login.masterData.headername === \"Dynamic Audit Table\" || this.props.Login.masterData.headername === \"Mapped Template Field Props\") ? this.props.Login.selectedRecord.sjsondata : this.props.Login.selectedRecord && this.props.Login.selectedRecord.jsondata}\r\n                                // selectedJsondata={this.props.Login.selectedRecord && this.props.Login.selectedRecord.jsondata}\r\n                                languages={this.props.Login.languageList || []}\r\n                                fieldName={this.props.Login.selectedRecord.fieldName}\r\n                            />\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                const multilingualmastersMap = constructOptionList(this.props.Login.masterData.multilingualmasters || [], \"nmultilingualmasterscode\",\r\n                    \"sdisplayname\", \"nsorter\", 'ascending', undefined, true);\r\n                const multilingualmasters = multilingualmastersMap.get(\"OptionList\");\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, multilingualmasters: multilingualmasters, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData.listofItem ? this.props.Login.masterData.listofItem : [], this.state.dataState)\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n                const FilterQueryMap = constructOptionList(this.props.Login.masterData.QueryBuilderViewsName || [], \"nquerybuilderviewscode\",\r\n                    \"sdisplayname\", 'nquerybuilderviewscode', 'descending', true);\r\n                const QueryBuilderViewsName = FilterQueryMap.get(\"OptionList\");\r\n                const formNameQueryMap = constructOptionList(this.props.Login.filterValue || [], \"nformcode\",\r\n                    \"sformname\", undefined, undefined, true);\r\n                const MaterialConfig = formNameQueryMap.get(\"OptionList\");\r\n\r\n                let FilterQueryColumnMap, QueryBuilderStableName, FilterColumnNameMap, QueryBuilderScolumnList, SelectedQueryBuilderStableName, SelectedQueryBuilderScolumnList;\r\n\r\n                if (this.props.Login.masterData.headername === \"Query Builder Table Columns\") {\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.QueryBuilderStableName) {\r\n                        FilterQueryColumnMap = constructOptionList(this.props.Login.masterData.QueryBuilderStableName || [], \"nquerybuildertablecode\",\r\n                            \"stablename\", 'nquerybuildertablecode', 'ascending', true);\r\n                        QueryBuilderStableName = FilterQueryColumnMap.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.SelectedQueryBuilderStableName) {\r\n                        const FilterSelectedQueryColumnMap = constructOptionList(this.props.Login.masterData.SelectedQueryBuilderStableName || [], \"nquerybuildertablecode\",\r\n                            \"stablename\", undefined, undefined, true);\r\n                        SelectedQueryBuilderStableName = FilterSelectedQueryColumnMap.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.QueryBuilderScolumnList) {\r\n                        FilterColumnNameMap = constructOptionList(this.props.Login.masterData.QueryBuilderScolumnList || [], \"scolumnname\",\r\n                            \"scolumnname\", 'ordinal_position', 'descending', true);\r\n                        QueryBuilderScolumnList = FilterColumnNameMap.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.selectedQueryBuilderScolumnList) {\r\n                        const FilterSelectedColumnNameMap = constructOptionList(this.props.Login.masterData.selectedQueryBuilderScolumnList || [], \"scolumnname\",\r\n                            \"scolumnname\", undefined, undefined, true);\r\n                        SelectedQueryBuilderScolumnList = FilterSelectedColumnNameMap.get(\"OptionList\");\r\n                    }\r\n                }\r\n\r\n                let formName, lstFormName, DynamicAuditTableStableName, lstDynamicAuditTableStableName, selectedFormName, selectedLstFormName, selectedDynamicAuditTableStableName, selectedLstDynamicAuditTableStableName;\r\n\r\n                if (this.props.Login.masterData.headername === \"Dynamic Audit Table\") {\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.lstFormName) {\r\n                        formName = constructOptionList(this.props.Login.masterData.lstFormName || [], \"nformcode\",\r\n                            \"sformname\", 'nformcode', 'ascending', true);\r\n                        lstFormName = formName.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.lstDynamicAuditTable) {\r\n                        DynamicAuditTableStableName = constructOptionList(this.props.Login.masterData.lstDynamicAuditTable || [], \"ndynamicaudittablecode\",\r\n                            \"stablename\", 'ndynamicaudittablecode', 'descending', true);\r\n                        lstDynamicAuditTableStableName = DynamicAuditTableStableName.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.SelectedFormName) {\r\n                        selectedFormName = constructOptionList(this.props.Login.masterData.SelectedFormName || [], \"nformcode\",\r\n                            \"sformname\", undefined, undefined, true);\r\n                        selectedLstFormName = selectedFormName.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.selectedDynamicAuditTable) {\r\n                        selectedDynamicAuditTableStableName = constructOptionList(this.props.Login.masterData.selectedDynamicAuditTable || [], \"ndynamicaudittablecode\",\r\n                            \"stablename\", undefined, undefined, true);\r\n                        selectedLstDynamicAuditTableStableName = selectedDynamicAuditTableStableName.get(\"OptionList\");\r\n                    }\r\n                }\r\n\r\n                let lstQualisForms, selectedLstQualisForms, qualisForms, selectedQualisForms, lstSampleItems, selectedLstSampleItems,\r\n                    sampleItems, selectedSampleItems, mappedTemplateFieldProps, selectedMappedTemplateFieldProps, lstMappedTemplateFieldProps,\r\n                    selectedLstMappedTemplateFieldProps, lstSampleField, selectedLstSampleField, sampleField, selectedSampleField;\r\n\r\n                if (this.props.Login.masterData.headername === \"Mapped Template Field Props\") {\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.lstMappedTemplateFieldProps) {\r\n                        mappedTemplateFieldProps = constructOptionList(this.props.Login.masterData.lstMappedTemplateFieldProps || [], \"nmappedtemplatefieldpropcode\",\r\n                            \"sregtemplatename\", undefined, undefined, true);\r\n                        lstMappedTemplateFieldProps = mappedTemplateFieldProps.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.selectedLstMappedTemplateFieldProps) {\r\n                        selectedMappedTemplateFieldProps = constructOptionList(this.props.Login.masterData.selectedLstMappedTemplateFieldProps || [], \"nmappedtemplatefieldpropcode\",\r\n                            \"sregtemplatename\", undefined, undefined, true);\r\n                        selectedLstMappedTemplateFieldProps = selectedMappedTemplateFieldProps.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.lstQualisforms) {\r\n                        qualisForms = constructOptionList(this.props.Login.masterData.lstQualisforms || [], \"indexQualisforms\",\r\n                            \"sformname\", undefined, undefined, true);\r\n                        lstQualisForms = qualisForms.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.selectedLstQualisforms) {\r\n                        selectedQualisForms = constructOptionList(this.props.Login.masterData.selectedLstQualisforms || [], \"indexQualisforms\",\r\n                            \"sformname\", undefined, undefined, true);\r\n                        selectedLstQualisForms = selectedQualisForms.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.lstSampleItems) {\r\n                        sampleItems = constructOptionList(this.props.Login.masterData.lstSampleItems || [], \"indexPropertiesKey\",\r\n                            \"indexPropertiesValue\", undefined, undefined, true);\r\n                        lstSampleItems = sampleItems.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.selectedLstSampleItems) {\r\n                        selectedSampleItems = constructOptionList(this.props.Login.masterData.selectedLstSampleItems || [], \"indexPropertiesKey\",\r\n                            \"indexPropertiesValue\", undefined, undefined, true);\r\n                        selectedLstSampleItems = selectedSampleItems.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.lstSampleField) {\r\n                        sampleField = constructOptionList(this.props.Login.masterData.lstSampleField || [], \"indexFieldKey\",\r\n                            \"indexFieldValue\", undefined, undefined, true);\r\n                        lstSampleField = sampleField.get(\"OptionList\");\r\n                    }\r\n                    if (this.props.Login.masterData && this.props.Login.masterData.selectedLstSampleField) {\r\n                        selectedSampleField = constructOptionList(this.props.Login.masterData.selectedLstSampleField || [], \"indexFieldKey\",\r\n                            \"indexFieldValue\", undefined, undefined, true);\r\n                        selectedLstSampleField = selectedSampleField.get(\"OptionList\");\r\n                    }\r\n                }\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    QueryBuilderViewsName: QueryBuilderViewsName,\r\n                    QueryBuilderStableName: QueryBuilderStableName ? QueryBuilderStableName : this.state.QueryBuilderStableName,\r\n                    SelectedQueryBuilderStableName: SelectedQueryBuilderStableName ? SelectedQueryBuilderStableName : this.state.SelectedQueryBuilderStableName,\r\n                    QueryBuilderScolumnList: QueryBuilderScolumnList ? QueryBuilderScolumnList : this.state.QueryBuilderScolumnList,\r\n                    SelectedQueryBuilderScolumnList: SelectedQueryBuilderScolumnList ? SelectedQueryBuilderScolumnList : this.state.SelectedQueryBuilderScolumnList,\r\n                    lstFormName: lstFormName ? lstFormName : this.state.lstFormName,\r\n                    lstDynamicAuditTableStableName: lstDynamicAuditTableStableName ? lstDynamicAuditTableStableName : this.state.lstDynamicAuditTableStableName,\r\n                    selectedLstFormName: selectedLstFormName ? selectedLstFormName : this.state.selectedLstFormName,\r\n                    selectedLstDynamicAuditTableStableName: selectedLstDynamicAuditTableStableName ? selectedLstDynamicAuditTableStableName : this.state.selectedLstDynamicAuditTableStableName,\r\n                    lstQualisForms: lstQualisForms ? lstQualisForms : this.state.lstQualisForms,\r\n                    selectedLstQualisForms: selectedLstQualisForms ? selectedLstQualisForms : this.state.selectedLstQualisForms,\r\n                    lstSampleItems: lstSampleItems ? lstSampleItems : this.state.lstSampleItems,\r\n                    selectedLstSampleItems: selectedLstSampleItems ? selectedLstSampleItems : this.state.selectedLstSampleItems,\r\n                    lstMappedTemplateFieldProps: lstMappedTemplateFieldProps ? lstMappedTemplateFieldProps : this.state.lstMappedTemplateFieldProps,\r\n                    selectedLstMappedTemplateFieldProps: selectedLstMappedTemplateFieldProps ? selectedLstMappedTemplateFieldProps : this.state.selectedLstMappedTemplateFieldProps,\r\n                    lstSampleField: lstSampleField ? lstSampleField : this.state.lstSampleField,\r\n                    selectedLstSampleField: selectedLstSampleField ? selectedLstSampleField : this.state.selectedLstSampleField,\r\n                    MaterialConfig: MaterialConfig,\r\n                    dataResult: process(this.props.Login.masterData.listofItem ? this.props.Login.masterData.listofItem : [], dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            let selectedRecord;\r\n            if (this.props.Login.masterData.headername === \"Query Builder Views Columns\") {\r\n                selectedRecord = {\r\n                    ...this.props.Login.selectedRecord,\r\n                    sdefaultname: this.props.Login.selectedRecord.sdefaultname,\r\n                }\r\n            } else if (this.props.Login.masterData.headername === \"Query Builder Table Columns\") {\r\n                selectedRecord = {\r\n                    ...this.props.Login.selectedRecord,\r\n                    sdefaultname: this.props.Login.selectedRecord.sdefaultname,\r\n                }\r\n            }\r\n            else {\r\n                selectedRecord = {\r\n                    ...this.props.Login.selectedRecord\r\n                }\r\n            }\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n\r\n    onInputOnChange = (event, name, item, fieldName) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            if (name == 'English') {\r\n                if (this.props.Login.masterData.headername === \"Query Builder Views Columns\") {\r\n                    selectedRecord['sjsondata'][fieldName] = { ...selectedRecord['sjsondata'][fieldName], [event.target.name]: event.target.value };\r\n                    selectedRecord[fieldName] = { ...selectedRecord[fieldName], [event.target.name]: event.target.value };\r\n                    selectedRecord[\"sdefaultname\"] = event.target.value == \"\" ? undefined : event.target.value;\r\n                }\r\n                else if (item == 'sactiondisplaystatus') {\r\n                    selectedRecord['sactiondisplaystatus'] = { ...selectedRecord['sactiondisplaystatus'], [event.target.name]: event.target.value };\r\n                } else if (item === 'stransdisplaystatus') {\r\n                    selectedRecord['stransdisplaystatus'] = { ...selectedRecord['stransdisplaystatus'], [event.target.name]: event.target.value }\r\n                } else {\r\n                    selectedRecord[fieldName] = { ...selectedRecord[fieldName], [event.target.name]: event.target.value };\r\n                    selectedRecord['sdefaultname'] = event.target.value == \"\" ? undefined : event.target.value;\r\n                }\r\n            } else {\r\n                if (this.props.Login.masterData.headername === \"Query Builder Views Columns\") {\r\n                    selectedRecord['sjsondata'][fieldName] = { ...selectedRecord['sjsondata'][fieldName], [event.target.name]: event.target.value };\r\n                    selectedRecord[fieldName] = { ...selectedRecord[fieldName], [event.target.name]: event.target.value };\r\n                }\r\n                else if (item == 'sactiondisplaystatus') {\r\n                    selectedRecord['sactiondisplaystatus'] = { ...selectedRecord['sactiondisplaystatus'], [event.target.name]: event.target.value };\r\n                } else if (item == 'stransdisplaystatus') {\r\n                    selectedRecord['stransdisplaystatus'] = { ...selectedRecord['stransdisplaystatus'], [event.target.name]: event.target.value }\r\n                } else {\r\n                    selectedRecord[fieldName] = { ...selectedRecord[fieldName], [event.target.name]: event.target.value };\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n        if (fieldName === \"nquerybuilderviewscode\") {\r\n            this.props.comboService({\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    sdisplayname: selectedRecord.nquerybuilderviewscode.item.sviewname,\r\n                    primarykey: selectedRecord.nquerybuilderviewscode.value,\r\n                    item: selectedRecord.nquerybuilderviewscode.item,\r\n                    displayname: this.props.Login.masterData,\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                item: selectedRecord.nquerybuilderviewscode.item,\r\n                sdisplayname: selectedRecord.nquerybuilderviewscode.label,\r\n                displayname: this.props.Login.masterData,\r\n            });\r\n        } else if (fieldName === \"nquerybuildertablecode\" || fieldName === \"scolumnname\") {\r\n            this.props.comboService({\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    sdisplayname: (fieldName === \"nquerybuildertablecode\" ? selectedRecord.nquerybuildertablecode.item.stablename :\r\n                        selectedRecord.scolumnname.item.scolumnname),\r\n                    primarykey: (fieldName === \"nquerybuildertablecode\" ? selectedRecord.nquerybuildertablecode.value :\r\n                        selectedRecord.scolumnname.value),\r\n                    item: (fieldName === \"nquerybuildertablecode\" ? selectedRecord.nquerybuildertablecode.item :\r\n                        selectedRecord.scolumnname.item),\r\n                    displayname: this.props.Login.masterData,\r\n                    selectedvalues: (fieldName === \"nquerybuildertablecode\" ? this.state.SelectedQueryBuilderScolumnList :\r\n                        this.state.SelectedQueryBuilderStableName),\r\n                    fieldName: fieldName\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                item: (fieldName === \"nquerybuildertablecode\" ? selectedRecord.nquerybuildertablecode.item :\r\n                    selectedRecord.scolumnname.item),\r\n                sdisplayname: (fieldName === \"nquerybuildertablecode\" ? selectedRecord.nquerybuildertablecode.label :\r\n                    selectedRecord.scolumnname.label),\r\n                displayname: this.props.Login.masterData,\r\n            })\r\n        } else if (fieldName === \"dynamicaudittableformcode\" || fieldName === \"ndynamicaudittablecode\") {\r\n            this.props.comboService({\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    sdisplayname: fieldName === \"dynamicaudittableformcode\" ? selectedRecord.dynamicaudittableformcode.item.sformname :\r\n                        selectedRecord.ndynamicaudittablecode.item.stablename,\r\n                    primarykey: fieldName === \"ndynamicaudittablecode\" ? selectedRecord.ndynamicaudittablecode.value :\r\n                        null,\r\n                    formPrimayKey: fieldName === \"dynamicaudittableformcode\" ? selectedRecord.dynamicaudittableformcode.value :\r\n                        this.state.selectedLstFormName[0].value,\r\n                    item: fieldName === \"dynamicaudittableformcode\" ? selectedRecord.dynamicaudittableformcode.item :\r\n                        selectedRecord.ndynamicaudittablecode.item,\r\n                    displayname: this.props.Login.masterData,\r\n                    fieldName: fieldName\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                item: fieldName === \"dynamicaudittableformcode\" ? selectedRecord.dynamicaudittableformcode.item :\r\n                    selectedRecord.ndynamicaudittablecode.item,\r\n                sdisplayname: fieldName === \"dynamicaudittableformcode\" ? selectedRecord.dynamicaudittableformcode.label :\r\n                    selectedRecord.ndynamicaudittablecode.label,\r\n                displayname: this.props.Login.masterData,\r\n            });\r\n        } else if (fieldName === \"nmappedtemplatefieldpropcode\" || fieldName === \"indexQualisforms\" || fieldName === \"indexPropertiesKey\" || fieldName === \"indexFieldKey\") {\r\n            this.props.comboService({\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    sdisplayname: fieldName === \"nmappedtemplatefieldpropcode\" ? selectedRecord.nmappedtemplatefieldpropcode.item.sregtemplatename : fieldName === \"indexQualisforms\" ? selectedRecord.indexQualisforms.item.sformname : fieldName === \"indexQualisforms\" ? selectedRecord.indexFieldKey.item.indexFieldValue : selectedRecord.indexPropertiesKey.item.indexValue,\r\n                    primarykey: fieldName === \"nmappedtemplatefieldpropcode\" ? selectedRecord.nmappedtemplatefieldpropcode.value : fieldName === \"indexQualisforms\" ? selectedRecord.indexQualisforms.value : fieldName === \"indexFieldKey\" ? selectedRecord.indexFieldKey.value : selectedRecord.indexPropertiesKey.value,\r\n                    item: fieldName === \"nmappedtemplatefieldpropcode\" ? selectedRecord.nmappedtemplatefieldpropcode.item : fieldName === \"indexQualisforms\" ? selectedRecord.indexQualisforms.item : fieldName === \"indexFieldKey\" ? selectedRecord.indexFieldKey.item : selectedRecord.indexPropertiesKey.item,\r\n                    displayname: this.props.Login.masterData,\r\n                    fieldName: fieldName\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                item: fieldName === \"nmappedtemplatefieldpropcode\" ? selectedRecord.nmappedtemplatefieldpropcode.item : fieldName === \"indexQualisforms\" ? selectedRecord.indexQualisforms.item : fieldName === \"indexFieldKey\" ? selectedRecord.indexFieldKey.item : selectedRecord.indexPropertiesKey.item,\r\n                sdisplayname: fieldName === \"nmappedtemplatefieldpropcode\" ? selectedRecord.nmappedtemplatefieldpropcode.label : fieldName === \"indexQualisforms\" ? selectedRecord.indexQualisforms.label : fieldName === \"indexFieldKey\" ? selectedRecord.indexFieldKey.label : selectedRecord.indexPropertiesKey.label,\r\n                displayname: this.props.Login.masterData,\r\n            });\r\n        }\r\n        else {\r\n            if (fieldName === \"nmultilingualmasterscode\") {\r\n                this.props.comboService({\r\n                    inputData: {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        sdisplayname: selectedRecord.nmultilingualmasterscode.label,\r\n                        primarykey: selectedRecord.nmultilingualmasterscode.value,\r\n                        item: selectedRecord.nmultilingualmasterscode.item,\r\n                        displayname: this.props.Login.masterData\r\n                    },\r\n                    masterData: {\r\n                        ...this.props.Login.masterData,\r\n                        headername: {}\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    displayname: this.props.Login.masterData,\r\n                    item: selectedRecord.nmultilingualmasterscode.item,\r\n                    sdisplayname: selectedRecord.nmultilingualmasterscode.label,\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleClose() {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.state.showSynonym) {\r\n            this.setState({ showSynonym: false })\r\n            return null;\r\n        }\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n            //openModal = false;\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = { ...this.props.Login.selectedRecord };\r\n            selectedId = null;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    //to open side out\r\n    //to perform save action for both add and edit\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = {};\r\n        let selectedId = null;\r\n        let methodUrl = \"\";\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState = undefined;\r\n        if (this.state.showSynonym) {\r\n            this.setState({ showSynonym: false })\r\n            return null;\r\n        }\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            if (this.props.Login.masterData.headername === \"Menu\") {\r\n                selectedId = this.props.Login.selectedId;\r\n                dataState = this.state.dataState\r\n                inputData[\"language\"] = {\r\n                    \"nmenucode\": this.state.selectedRecord.nmenucode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"MenuLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Module\") {\r\n                selectedId = this.props.Login.selectedId;\r\n                dataState = this.state.dataState\r\n                inputData[\"language\"] = {\r\n                    \"nmodulecode\": this.state.selectedRecord.nmodulecode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"ModuleLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Forms\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nformcode\": this.state.selectedRecord.nformcode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"FormLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Transaction Status\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"ntranscode\": this.state.selectedRecord.ntranscode,\r\n                    \"jsondata\": {\r\n                        \"salertdisplaystatus\": this.state.selectedRecord.salertdisplaystatus,\r\n                        \"stransdisplaystatus\": this.state.selectedRecord.stransdisplaystatus,\r\n                        \"sactiondisplaystatus\": this.state.selectedRecord.sactiondisplaystatus\r\n                    }\r\n                }\r\n                methodUrl = \"TransactionStatusLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Control Master\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"ncontrolcode\": this.state.selectedRecord.ncontrolcode,\r\n                    \"jsondata\": {\r\n                        \"scontrolids\": this.state.selectedRecord.scontrolids\r\n                    }\r\n                }\r\n                methodUrl = \"ControlMasterLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Approval Sub Type\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"napprovalsubtypecode\": this.state.selectedRecord.napprovalsubtypecode,\r\n                    \"jsondata\": {\r\n                        \"approvalsubtypename\": this.state.selectedRecord.approvalsubtypename\r\n                    }\r\n                }\r\n                methodUrl = \"ApprovalSubTypeLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Sample Type\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nsampletypecode\": this.state.selectedRecord.nsampletypecode,\r\n                    \"jsondata\": {\r\n                        \"sampletypename\": this.state.selectedRecord.sampletypename\r\n                    }\r\n                }\r\n                methodUrl = \"SampleTypeLanguage\"\r\n            }\r\n            // else if (this.props.Login.masterData.headername === \"Template Design\") {\r\n            //     dataState = this.state.dataState\r\n            //     selectedId = this.props.Login.selectedId;\r\n            //     inputData[\"language\"] = {\r\n            //         \"ntemplatetypecode\": this.state.selectedRecord.ntemplatetypecode,\r\n            //         \"jsondata\": {\r\n            //             \"stemplatetypename\": this.state.selectedRecord.stemplatetypename\r\n            //         }\r\n            //     }\r\n            //     methodUrl = \"TemplateTypeLanguage\"\r\n            // } \r\n            else if (this.props.Login.masterData.headername === \"Period\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nperiodcode\": this.state.selectedRecord.nperiodcode,\r\n                    \"jsondata\": {\r\n                        \"speriodname\": this.state.selectedRecord.speriodname\r\n                    }\r\n                }\r\n                methodUrl = \"PeriodLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Gender\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"ngendercode\": this.state.selectedRecord.ngendercode,\r\n                    \"jsondata\": {\r\n                        \"sgendername\": this.state.selectedRecord.sgendername\r\n                    }\r\n                }\r\n                methodUrl = \"GenderLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Grade\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"ngradecode\": this.state.selectedRecord.ngradecode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"GradeLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Scheduler Type\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nschedulertypecode\": this.state.selectedRecord.nschedulertypecode,\r\n                    \"jsondata\": {\r\n                        \"sschedulertypename\": this.state.selectedRecord.sschedulertypename\r\n                    }\r\n                }\r\n                methodUrl = \"SchedulerTypeLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Query Builder Tables\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nquerybuildertablecode\": this.state.selectedRecord.nquerybuildertablecode,\r\n                    \"jsondata\": {\r\n                        \"tablename\": this.state.selectedRecord.tablename\r\n                    }\r\n                }\r\n                methodUrl = \"QueryBuilderTablesLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Query Builder Views\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nquerybuilderviewscode\": this.state.selectedRecord.nquerybuilderviewscode,\r\n                    \"jsondata\": {\r\n                        \"displayname\": this.state.selectedRecord.displayname\r\n                    }\r\n                }\r\n                methodUrl = \"QueryBuilderViewsLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Multilingual Masters\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nmultilingualmasterscode\": this.state.selectedRecord.nmultilingualmasterscode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"MultilingualMastersLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Query Builder Views Columns\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                let replaceValue = this.state.selectedRecord.sjsondata.displayname;\r\n                delete (this.state.selectedRecord.sdefaultname);\r\n                inputData[\"findIndex\"] = this.props.Login.selectedRecord.findIndex;\r\n                inputData[\"keyvalue\"] = this.props.Login.selectedRecord.keys;\r\n                inputData[\"jsondata\"] = {\r\n                    // \"sjsondata\":\r\n                    //     { ...this.state.selectedRecord.sjsondata },\r\n                    // \"sviewname\": this.props.Login.selectedRecord.sviewname\r\n                    \"sjsondata\": {\r\n                        ...this.props.Login.selectedRecord.jsondata,\r\n                        ...this.props.Login.selectedRecord.jsondata[this.props.Login.selectedRecord.keys][this.props.Login.selectedRecord.findIndex].displayname = replaceValue\r\n                    },\r\n                    \"sviewname\": this.props.Login.selectedRecord.sviewname\r\n                }\r\n                delete (inputData[\"jsondata\"].sjsondata[\"en-US\"]);\r\n                delete (inputData[\"jsondata\"].sjsondata[\"ru-RU\"]);\r\n                delete (inputData[\"jsondata\"].sjsondata[\"tg-TG\"])\r\n                methodUrl = \"QueryBuilderViewsColumnsLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Material Type\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nmaterialtypecode\": this.state.selectedRecord.nmaterialtypecode,\r\n                    \"jsondata\": {\r\n                        \"smaterialtypename\": this.state.selectedRecord.smaterialtypename\r\n                    }\r\n                }\r\n                methodUrl = \"MaterialTypeLanguage\"\r\n            }\r\n            else if (this.props.Login.masterData.headername === \"Interface Type\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"ninterfacetypecode\": this.state.selectedRecord.ninterfacetypecode,\r\n                    \"jsondata\": {\r\n                        \"sinterfacetypename\": this.state.selectedRecord.sinterfacetypename\r\n                    }\r\n                }\r\n                methodUrl = \"InterfaceTypeLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Audit Action Filter\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nauditactionfiltercode\": this.state.selectedRecord.nauditactionfiltercode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"AuditActionFilterLanguage\"\r\n            }\r\n            else if (this.props.Login.masterData.headername === \"Attachment Type\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nattachmenttypecode\": this.state.selectedRecord.nattachmenttypecode,\r\n                    \"jsondata\": {\r\n                        \"sattachmenttype\": this.state.selectedRecord.sattachmenttype\r\n                    }\r\n                }\r\n                methodUrl = \"AttachmentTypeLanguage\"\r\n            }\r\n            else if (this.props.Login.masterData.headername === \"FTP Type\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nftptypecode\": this.state.selectedRecord.nftptypecode,\r\n                    \"jsondata\": {\r\n                        \"sftptypename\": this.state.selectedRecord.sftptypename\r\n                    }\r\n                }\r\n                methodUrl = \"FTPTypeLanguage\"\r\n            }\r\n            else if (this.props.Login.masterData.headername === \"Report Type\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nreporttypecode\": this.state.selectedRecord.nreporttypecode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"ReportTypeLanguage\"\r\n            }\r\n            else if (this.props.Login.masterData.headername === \"COAReport Type\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"ncoareporttypecode\": this.state.selectedRecord.ncoareporttypecode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"COAReportTypeLanguage\"\r\n            }\r\n            else if (this.props.Login.masterData.headername === \"React Components\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nreactcomponentcode\": this.state.selectedRecord.nreactcomponentcode,\r\n                    \"jsondata\": {\r\n                        \"componentname\": this.state.selectedRecord.componentname\r\n                    }\r\n                }\r\n                methodUrl = \"ReactComponentsLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Functions\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nfunctioncode\": this.state.selectedRecord.nfunctioncode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"FunctionsLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Dynamic Formula Fields\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"ndynamicformulafieldcode\": this.state.selectedRecord.ndynamicformulafieldcode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"DynamicFormulaFieldLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Chart Type\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"ncharttypecode\": this.state.selectedRecord.ncharttypecode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"ChartTypeLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Design Components\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"ndesigncomponentcode\": this.state.selectedRecord.ndesigncomponentcode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"DesignComponentLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"CheckList Component\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"nchecklistcomponentcode\": this.state.selectedRecord.nchecklistcomponentcode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"CheckListComponentLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Generic Label\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                inputData[\"language\"] = {\r\n                    \"ngenericlabelcode\": this.state.selectedRecord.ngenericlabelcode,\r\n                    \"jsondata\": {\r\n                        \"sdisplayname\": this.state.selectedRecord.sdisplayname\r\n                    }\r\n                }\r\n                methodUrl = \"GenericLabelLanguage\"\r\n            }\r\n            else if (this.props.Login.masterData.headername === \"Query Builder Table Columns\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                let jsondata = JSON.parse(this.state.SelectedQueryBuilderStableName[0].item[this.state.SelectedQueryBuilderScolumnList[0].label].value);\r\n                if (this.state.selectedRecord.columnname === jsondata[this.state.selectedRecord.index].columnname) {\r\n                    jsondata[this.state.selectedRecord.index].displayname = this.state.selectedRecord.displayname;\r\n                }\r\n                inputData[\"language\"] = {\r\n                    \"nquerybuildertablecode\": this.state.SelectedQueryBuilderStableName[0].value,\r\n                    \"tablecolumnname\": this.state.SelectedQueryBuilderScolumnList[0].label,\r\n                    \"scolumnname\": this.state.selectedRecord.sjsondata.columnname,\r\n                    \"displayname\": this.state.selectedRecord.displayname,\r\n                    \"jsondata\": JSON.stringify(jsondata)\r\n                }\r\n                methodUrl = \"QueryBuilderTableColumnsLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Dynamic Audit Table\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                let subsampleenabledisable = this.state.selectedRecord.sfieldname;\r\n                let jsondata = this.state.selectedRecord.jsondata;\r\n                let index = this.state.selectedRecord.index;\r\n                jsondata[subsampleenabledisable].multilingualfields[index][this.state.selectedRecord.fieldName] = this.state.selectedRecord[this.state.selectedRecord.fieldName];\r\n                inputData[\"language\"] = {\r\n                    \"ndynamicaudittablecode\": this.state.selectedLstDynamicAuditTableStableName[0].value,\r\n                    \"subsampleenabledisable\": subsampleenabledisable,\r\n                    \"keyname\": this.state.selectedRecord.fieldName,\r\n                    \"jsondata\": JSON.stringify(jsondata),\r\n                    \"conditioncheck\": JSON.stringify(this.state.selectedRecord.sjsondata),\r\n                    \"nformcode\": this.state.selectedRecord.nformcode\r\n                }\r\n                methodUrl = \"DynamicAuditTableLanguage\"\r\n            } else if (this.props.Login.masterData.headername === \"Mapped Template Field Props\") {\r\n                dataState = this.state.dataState\r\n                selectedId = this.props.Login.selectedId;\r\n                let fieldName = this.state.selectedRecord.fieldName;\r\n                let jsondata = this.state.selectedRecord.jsondata && this.state.selectedRecord.jsondata.value && JSON.parse(this.state.selectedRecord.jsondata.value);\r\n                let index = this.state.selectedRecord.index;\r\n                if (this.props.Login.masterData.selectedLstSampleField === undefined && this.props.Login.masterData.selectedLstQualisforms && this.props.Login.masterData.selectedLstQualisforms[0].nformcode) {\r\n                    jsondata[this.props.Login.masterData.selectedLstQualisforms[0].nformcode][this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue][index][fieldName] = this.state.selectedRecord[fieldName];\r\n                } else if (this.props.Login.masterData.selectedLstSampleField === undefined && this.props.Login.masterData.selectedLstQualisforms && this.props.Login.masterData.selectedLstQualisforms[0].nformcode === undefined) {\r\n                    jsondata[this.props.Login.masterData.selectedLstQualisforms[0].sformname][index][fieldName] = this.state.selectedRecord[fieldName];\r\n                } else {\r\n                    jsondata[this.props.Login.masterData.selectedLstQualisforms[0].nformcode][this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue][this.props.Login.masterData.selectedLstSampleField[0].indexFieldValue] !== undefined ?\r\n                    jsondata[this.props.Login.masterData.selectedLstQualisforms[0].nformcode][this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue][this.props.Login.masterData.selectedLstSampleField[0].indexFieldValue][index][fieldName] =  this.state.selectedRecord[fieldName] : \r\n                    jsondata[this.props.Login.masterData.selectedLstQualisforms[0].nformcode][this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue][index][fieldName] =  this.state.selectedRecord[fieldName];\r\n                }\r\n                inputData[\"language\"] = {\r\n                    \"nmappedtemplatefieldpropcode\": this.state.selectedRecord.nmappedtemplatefieldpropcode,\r\n                    \"jsondata\": JSON.stringify(jsondata),\r\n                    \"indexQualisforms\": this.props.Login.masterData.selectedLstQualisforms ? this.props.Login.masterData.selectedLstQualisforms[0].indexQualisforms : null,\r\n                    \"indexPropertiesKey\": this.props.Login.masterData.selectedLstSampleItems ? this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesKey : null,\r\n                    \"indexFieldKey\": this.props.Login.masterData.selectedLstSampleField ? this.props.Login.masterData.selectedLstSampleField[0].indexFieldKey : null,\r\n                    \"index\": index,\r\n                    \"indexPropertiesValue\": this.props.Login.masterData.selectedLstSampleItems ? this.props.Login.masterData.selectedLstSampleItems[0].indexPropertiesValue : null,\r\n                    \"indexFieldValue\": this.props.Login.masterData.selectedLstSampleField ? this.props.Login.masterData.selectedLstSampleField[0].indexFieldValue : null,\r\n                    \"sformname\": this.props.Login.masterData.selectedLstQualisforms && this.props.Login.masterData.selectedLstQualisforms[0].sformname ? this.props.Login.masterData.selectedLstQualisforms[0].sformname : null,\r\n                    \"nformcode\": this.props.Login.masterData.selectedLstQualisforms && this.props.Login.masterData.selectedLstQualisforms[0].nformcode ? this.props.Login.masterData.selectedLstQualisforms[0].nformcode : null\r\n                }\r\n                methodUrl = \"MappedTemplateFieldPropsLanguage\"\r\n            }\r\n        }\r\n        const inputParam = {\r\n            methodUrl: methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, dataState, selectedId,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType,\r\n                    operation: this.props.Login.operation, openModal: true,\r\n                    screenName: this.props.Login.inputParam.displayName\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, showRegTypeAddScreen, fetchById, comboService,\r\n    updateStore, validateEsignCredential\r\n})(injectIntl(Languages));"]},"metadata":{},"sourceType":"module"}