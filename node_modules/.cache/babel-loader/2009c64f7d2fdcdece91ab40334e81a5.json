{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{Grid,GridColumn}from'@progress/kendo-react-grid';import{LocalizationProvider}from'@progress/kendo-react-intl';import React from'react';import{injectIntl}from'react-intl';import'rc-tabs/assets/index.css';import{AtTabs}from'../../components/custom-tabs/custom-tabs.styles';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import PerfectScrollbar from'react-perfect-scrollbar';import Tabs,{TabPane}from\"rc-tabs\";import{AtTableWrap}from'../../components/data-grid/data-grid.styles';import{formCode,SampleType}from'../../components/Enumeration';var ConfigureScreenFields=/*#__PURE__*/function(_React$Component){_inherits(ConfigureScreenFields,_React$Component);var _super=_createSuper(ConfigureScreenFields);function ConfigureScreenFields(props){var _this;_classCallCheck(this,ConfigureScreenFields);_this=_super.call(this,props);_this.onTabChange=function(tab){_this.setState({selectedScreen:_this.state.screens.find(function(screen){return screen.eventKey===tab;})});};if(_this.props.selectedSampleType!==SampleType.STABILITY){var screens=[{eventKey:'registration',name:\"IDS_SAMPLEREGISTRATION\",formcode:formCode.SAMPLEREGISTRATION}];if(_this.props.approvedRegSubTypeVersion&&_this.props.approvedRegSubTypeVersion.jsondata.nneedjoballocation===true){screens.push({eventKey:'joballocation',name:\"IDS_JOBALLOCATION\",formcode:formCode.JOBALLOCATION});}if(_this.props.approvedRegSubTypeVersion&&_this.props.approvedRegSubTypeVersion.jsondata.nneedmyjob===true){//screens.push({ eventKey: 'myjobs', name: \"IDS_MYJOBS\", formcode: formCode.MYJOBS });\nscreens.push({eventKey:'testwisemyjobs',name:\"IDS_MYJOBS\",formcode:formCode.TESTWISEMYJOBS});}if(_this.props.approvedRegSubTypeVersion&&_this.props.approvedRegSubTypeVersion.jsondata.nneedworklist===true){screens.push({eventKey:'worklist',name:\"IDS_WORKLIST\",formcode:formCode.WORKLIST});}if(_this.props.approvedRegSubTypeVersion&&_this.props.approvedRegSubTypeVersion.jsondata.nneedbatch===true){screens.push({eventKey:'batchcreation',name:\"IDS_BATCHCREATION\",formcode:formCode.BATCHCREATION});}screens.push({eventKey:'resultentry',name:\"IDS_RESULTENTRY\",formcode:formCode.RESULTENTRY},{eventKey:'approval',name:\"IDS_APPROVAL\",formcode:formCode.APPROVAL},{eventKey:'release',name:\"IDS_RELEASE\",formcode:formCode.RELEASE});// let extractedColumnList =[];\n// if (this.props.selectedSampleType === SampleType.Masters || this.props.selectedSampleType === SampleType.GOODSIN){\n//     extractedColumnList.push(              \n//         { \"title\": \"IDS_GRIDITEM\", \"field\": \"griditem\", \"width\": \"600px\" },\n//         { \"title\": \"IDS_GRIDMOREITEM\", \"field\": \"gridmoreitem\", \"width\": \"600px\" }\n//     );\n// }\n// else{\n//     if(this.props.operation === 'configuresubsample'){\n//     //if (this.props.approvedRegSubTypeVersion && this.props.approvedRegSubTypeVersion.jsondata.nneedsubsample === true) {\n//         extractedColumnList.push(\n//             { \"title\": \"IDS_LISTITEM\", \"field\": \"subsamplelistitem\", \"width\": \"600px\" },\n//         );\n//     }\n//     else\n//     {\n//         extractedColumnList.push(\n//             { \"title\": \"IDS_DISPLAYFIELDS\", \"field\": \"sampledisplayfields\", \"width\": \"600px\" },\n//             { \"title\": \"IDS_LISTITEM\", \"field\": \"samplelistitem\", \"width\": \"600px\" },\n//             // { \"title\": \"IDS_LISTMOREITEM\", \"field\": \"samplelistmoreitems\", \"width\": \"600px\" },\n//             { \"title\": \"IDS_GRIDITEM\", \"field\": \"samplegriditem\", \"width\": \"600px\" },\n//             { \"title\": \"IDS_GRIDMOREITEM\", \"field\": \"samplegridmoreitem\", \"width\": \"600px\" },\n//             { \"title\": \"IDS_FILTERITEM\", \"field\": \"samplefilteritem\", \"width\": \"600px\" }\n//         );\n//     }\n// }\n_this.state={screens:screens,//extractedColumnList,\nselectedScreen:{eventKey:'registration',name:\"IDS_SAMPLEREGISTRATION\",formcode:formCode.SAMPLEREGISTRATION}};}else{var _screens=[{eventKey:'stability',name:\"IDS_STABILITYSTUDYPLAN\",formcode:formCode.STUDYALLOCATION}];_this.state={screens:_screens,selectedScreen:{eventKey:'stability',name:\"IDS_STABILITYSTUDYPLAN\",formcode:formCode.STUDYALLOCATION}};}return _this;}_createClass(ConfigureScreenFields,[{key:\"render\",value:function render(){var _this2=this;//console.log(\"props:\",this.props, this.state.screens, this.state.selectedScreen);\nvar extractedColumnList=[];if(this.props.selectedSampleType===SampleType.Masters||this.props.selectedSampleType===SampleType.GOODSIN){extractedColumnList.push({\"title\":\"IDS_GRIDITEM\",\"field\":\"griditem\",\"width\":\"600px\"},{\"title\":\"IDS_GRIDMOREITEM\",\"field\":\"gridmoreitem\",\"width\":\"600px\"});}//Added by sonia on 11th NOV 2024 for jira id:ALPD-5025\nif(this.props.selectedSampleType===SampleType.PROTOCOL){extractedColumnList.push({\"title\":\"IDS_LISTITEM\",\"field\":\"listItem\",\"width\":\"600px\"},{\"title\":\"IDS_DISPLAYFIELDS\",\"field\":\"displayFields\",\"width\":\"600px\"});}else{if(this.props.operation==='configuresubsample'){//if (this.props.approvedRegSubTypeVersion && this.props.approvedRegSubTypeVersion.jsondata.nneedsubsample === true) {\nextractedColumnList.push({\"title\":\"IDS_LISTITEM\",\"field\":\"subsamplelistitem\",\"width\":\"600px\"});}else{extractedColumnList.push({\"title\":\"IDS_DISPLAYFIELDS\",\"field\":\"sampledisplayfields\",\"width\":\"600px\"},{\"title\":\"IDS_LISTITEM\",\"field\":\"samplelistitem\",\"width\":\"600px\"},// { \"title\": \"IDS_LISTMOREITEM\", \"field\": \"samplelistmoreitems\", \"width\": \"600px\" },\n{\"title\":\"IDS_GRIDITEM\",\"field\":\"samplegriditem\",\"width\":\"600px\"},{\"title\":\"IDS_GRIDMOREITEM\",\"field\":\"samplegridmoreitem\",\"width\":\"600px\"});if(this.state.selectedScreen.formcode!==formCode.RELEASE){extractedColumnList.push({\"title\":\"IDS_FILTERITEM\",\"field\":\"samplefilteritem\",\"width\":\"600px\"});}}}return/*#__PURE__*/React.createElement(React.Fragment,null,this.props.selectedSampleType===SampleType.Masters||this.props.selectedSampleType===SampleType.GOODSIN||this.props.selectedSampleType===SampleType.PROTOCOL?/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:\"lang\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,Object.assign({className:\"active-paging\",style:{height:'550px'},resizable:true,reorderable:true,scrollable:\"scrollable\"// pageable={{ buttonCount: 5, pageSizes: 4, previousNext: false }}\n,data:this.props.dataResult},this.state.dataState,{onDataStateChange:this.dataStateChange}),/*#__PURE__*/React.createElement(GridColumn,{field:\"label\"// columnMenu={ColumnMenu}\n,title:this.props.intl.formatMessage({id:\"IDS_FIELDS\"}),cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"]['label']//data-for=\"tooltip-grid-wrap\"\n},row[\"dataItem\"]['label']);}}),//this.state.\nextractedColumnList.map(function(column){return/*#__PURE__*/React.createElement(GridColumn,{field:column.field,title:_this2.props.intl.formatMessage({id:column.title}),headerClassName:\"text-center\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"},\"data-tip\":_this2.props.intl.formatMessage({id:column.title})//data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][column.field],onChange:function onChange(event){return _this2.props.onChangeToggle(event,row[\"dataItem\"],column.field,row.dataIndex);},checked:row[\"dataItem\"][column.field]||false,name:row[\"dataItem\"][\"label\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex}));}});})))))):/*#__PURE__*/React.createElement(AtTabs,null,/*#__PURE__*/React.createElement(Tabs,{activeKey:this.state.selectedScreen.eventKey,moreIcon:\"...\",onChange:this.onTabChange},this.state.screens.map(function(screen){return/*#__PURE__*/React.createElement(TabPane,{name:screen.eventKey,tab:_this2.props.intl.formatMessage({id:screen.name}),key:screen.eventKey},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:\"lang\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,Object.assign({className:\"active-paging\"//style={{ height: '550px' }}\n,resizable:true,reorderable:true,scrollable:\"scrollable\"// pageable={{ buttonCount: 5, pageSizes: 4, previousNext: false }}\n,data:_this2.props.dataResult[_this2.state.selectedScreen.formcode]},_this2.state.dataState,{onDataStateChange:_this2.dataStateChange}),/*#__PURE__*/React.createElement(GridColumn,{field:\"label\"// columnMenu={ColumnMenu}\n,title:_this2.props.intl.formatMessage({id:\"IDS_FIELDS\"}),cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"]['label']// data-for=\"tooltip-grid-wrap\"\n},row[\"dataItem\"]['label']);}}),//this.state.\nextractedColumnList.map(function(column){return/*#__PURE__*/React.createElement(GridColumn,{field:column.field,title:_this2.props.intl.formatMessage({id:column.title}),headerClassName:\"text-center\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"},\"data-tip\":_this2.props.intl.formatMessage({id:column.title}),\"data-for\":\"tooltip-grid-wrap\"},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][column.field],onChange:function onChange(event){return _this2.props.onChangeToggle(event,row[\"dataItem\"],column.field,row.dataIndex,_this2.state.selectedScreen.formcode,_this2.props.operation);},checked:row[\"dataItem\"][column.field]||false//checked={column.field === \"samplelistitem\" ? (row[\"dataItem\"][column.field] === \"none\" ? false :row[\"dataItem\"][column.field]) : (row[\"dataItem\"][column.field] || false)}\n//disabled={column.field === \"samplelistitem\" ? (row[\"dataItem\"][column.field] === \"none\" ? true : false):false}\n,name:row[\"dataItem\"][\"label\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex}));}});})))))));}))));}}]);return ConfigureScreenFields;}(React.Component);export default injectIntl(ConfigureScreenFields);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/designtemplatemapping/ConfigureScreenFields.jsx"],"names":["Grid","GridColumn","LocalizationProvider","React","injectIntl","AtTabs","CustomSwitch","PerfectScrollbar","Tabs","TabPane","AtTableWrap","formCode","SampleType","ConfigureScreenFields","props","onTabChange","tab","setState","selectedScreen","state","screens","find","screen","eventKey","selectedSampleType","STABILITY","name","formcode","SAMPLEREGISTRATION","approvedRegSubTypeVersion","jsondata","nneedjoballocation","push","JOBALLOCATION","nneedmyjob","TESTWISEMYJOBS","nneedworklist","WORKLIST","nneedbatch","BATCHCREATION","RESULTENTRY","APPROVAL","RELEASE","STUDYALLOCATION","extractedColumnList","Masters","GOODSIN","PROTOCOL","operation","height","dataResult","dataState","dataStateChange","intl","formatMessage","id","row","map","column","field","title","textAlign","event","onChangeToggle","dataIndex","columnIndex","Component"],"mappings":"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","sourcesContent":["import { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport React from 'react'\r\nimport { injectIntl } from 'react-intl'\r\nimport 'rc-tabs/assets/index.css';\r\nimport { AtTabs } from '../../components/custom-tabs/custom-tabs.styles';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\n\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport Tabs, { TabPane } from \"rc-tabs\";\r\nimport { AtTableWrap } from '../../components/data-grid/data-grid.styles';\r\nimport { formCode, SampleType } from '../../components/Enumeration';\r\n\r\nclass ConfigureScreenFields extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        if(this.props.selectedSampleType !== SampleType.STABILITY){\r\n        const  screens = [{ eventKey: 'registration', name: \"IDS_SAMPLEREGISTRATION\", formcode: formCode.SAMPLEREGISTRATION }];\r\n        if (this.props.approvedRegSubTypeVersion && this.props.approvedRegSubTypeVersion.jsondata.nneedjoballocation === true)  {\r\n            screens.push({ eventKey: 'joballocation', name: \"IDS_JOBALLOCATION\", formcode: formCode.JOBALLOCATION });\r\n        }\r\n\r\n        if (this.props.approvedRegSubTypeVersion && this.props.approvedRegSubTypeVersion.jsondata.nneedmyjob === true) {\r\n            //screens.push({ eventKey: 'myjobs', name: \"IDS_MYJOBS\", formcode: formCode.MYJOBS });\r\n            screens.push({ eventKey: 'testwisemyjobs', name: \"IDS_MYJOBS\", formcode: formCode.TESTWISEMYJOBS });\r\n        }\r\n\r\n        if (this.props.approvedRegSubTypeVersion && this.props.approvedRegSubTypeVersion.jsondata.nneedworklist === true)  {\r\n            screens.push({ eventKey: 'worklist', name: \"IDS_WORKLIST\", formcode: formCode.WORKLIST });\r\n        }\r\n        if (this.props.approvedRegSubTypeVersion && this.props.approvedRegSubTypeVersion.jsondata.nneedbatch === true)  {\r\n            screens.push({ eventKey: 'batchcreation', name: \"IDS_BATCHCREATION\", formcode: formCode.BATCHCREATION });\r\n        }\r\n\r\n        screens.push({ eventKey: 'resultentry', name: \"IDS_RESULTENTRY\", formcode: formCode.RESULTENTRY },\r\n                    { eventKey: 'approval', name: \"IDS_APPROVAL\", formcode: formCode.APPROVAL },\r\n                    { eventKey: 'release', name: \"IDS_RELEASE\", formcode: formCode.RELEASE },\r\n                    );\r\n\r\n        // let extractedColumnList =[];\r\n        // if (this.props.selectedSampleType === SampleType.Masters || this.props.selectedSampleType === SampleType.GOODSIN){\r\n        //     extractedColumnList.push(              \r\n        //         { \"title\": \"IDS_GRIDITEM\", \"field\": \"griditem\", \"width\": \"600px\" },\r\n        //         { \"title\": \"IDS_GRIDMOREITEM\", \"field\": \"gridmoreitem\", \"width\": \"600px\" }\r\n        //     );\r\n        // }\r\n        // else{\r\n        //     if(this.props.operation === 'configuresubsample'){\r\n        //     //if (this.props.approvedRegSubTypeVersion && this.props.approvedRegSubTypeVersion.jsondata.nneedsubsample === true) {\r\n        //         extractedColumnList.push(\r\n        //             { \"title\": \"IDS_LISTITEM\", \"field\": \"subsamplelistitem\", \"width\": \"600px\" },\r\n        //         );\r\n        //     }\r\n        //     else\r\n        //     {\r\n        //         extractedColumnList.push(\r\n        //             { \"title\": \"IDS_DISPLAYFIELDS\", \"field\": \"sampledisplayfields\", \"width\": \"600px\" },\r\n        //             { \"title\": \"IDS_LISTITEM\", \"field\": \"samplelistitem\", \"width\": \"600px\" },\r\n        //             // { \"title\": \"IDS_LISTMOREITEM\", \"field\": \"samplelistmoreitems\", \"width\": \"600px\" },\r\n        //             { \"title\": \"IDS_GRIDITEM\", \"field\": \"samplegriditem\", \"width\": \"600px\" },\r\n        //             { \"title\": \"IDS_GRIDMOREITEM\", \"field\": \"samplegridmoreitem\", \"width\": \"600px\" },\r\n        //             { \"title\": \"IDS_FILTERITEM\", \"field\": \"samplefilteritem\", \"width\": \"600px\" }\r\n        //         );\r\n        //     }\r\n        // }\r\n        this.state = {\r\n            screens,\r\n            //extractedColumnList,\r\n            selectedScreen: { eventKey: 'registration', name: \"IDS_SAMPLEREGISTRATION\", formcode: formCode.SAMPLEREGISTRATION }\r\n        }\r\n    }else{\r\n        const  screens = [{ eventKey: 'stability', name: \"IDS_STABILITYSTUDYPLAN\", formcode: formCode.STUDYALLOCATION }];\r\n        this.state = {\r\n            screens,\r\n            selectedScreen: { eventKey: 'stability', name: \"IDS_STABILITYSTUDYPLAN\", formcode: formCode.STUDYALLOCATION }\r\n    }\r\n    }\r\n    }\r\n    onTabChange = (tab) => {\r\n        this.setState({\r\n            selectedScreen: this.state.screens.find(screen => screen.eventKey === tab)\r\n        })\r\n    }\r\n    render() {\r\n        //console.log(\"props:\",this.props, this.state.screens, this.state.selectedScreen);\r\n        let extractedColumnList =[];\r\n        if (this.props.selectedSampleType === SampleType.Masters || this.props.selectedSampleType === SampleType.GOODSIN){\r\n            extractedColumnList.push(              \r\n                { \"title\": \"IDS_GRIDITEM\", \"field\": \"griditem\", \"width\": \"600px\" },\r\n                { \"title\": \"IDS_GRIDMOREITEM\", \"field\": \"gridmoreitem\", \"width\": \"600px\" }\r\n            );\r\n        }\r\n        //Added by sonia on 11th NOV 2024 for jira id:ALPD-5025\r\n        if (this.props.selectedSampleType === SampleType.PROTOCOL){\r\n            extractedColumnList.push(              \r\n                { \"title\": \"IDS_LISTITEM\", \"field\": \"listItem\", \"width\": \"600px\" },\r\n                { \"title\": \"IDS_DISPLAYFIELDS\", \"field\": \"displayFields\", \"width\": \"600px\" }\r\n            );\r\n        }\r\n        else{\r\n            if(this.props.operation === 'configuresubsample'){\r\n            //if (this.props.approvedRegSubTypeVersion && this.props.approvedRegSubTypeVersion.jsondata.nneedsubsample === true) {\r\n                extractedColumnList.push(\r\n                    { \"title\": \"IDS_LISTITEM\", \"field\": \"subsamplelistitem\", \"width\": \"600px\" },\r\n                );\r\n            }\r\n            else\r\n            {\r\n                extractedColumnList.push(\r\n                    { \"title\": \"IDS_DISPLAYFIELDS\", \"field\": \"sampledisplayfields\", \"width\": \"600px\" },\r\n                    { \"title\": \"IDS_LISTITEM\", \"field\": \"samplelistitem\", \"width\": \"600px\" },\r\n                    // { \"title\": \"IDS_LISTMOREITEM\", \"field\": \"samplelistmoreitems\", \"width\": \"600px\" },\r\n                    { \"title\": \"IDS_GRIDITEM\", \"field\": \"samplegriditem\", \"width\": \"600px\" },\r\n                    { \"title\": \"IDS_GRIDMOREITEM\", \"field\": \"samplegridmoreitem\", \"width\": \"600px\" },\r\n                );\r\n                if(this.state.selectedScreen.formcode !== formCode.RELEASE ){\r\n                    extractedColumnList.push({ \"title\": \"IDS_FILTERITEM\", \"field\": \"samplefilteritem\", \"width\": \"600px\" })\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n            {/* Added by sonia on 11th NOV 2024 for jira id:ALPD-5025 */}\r\n            {this.props.selectedSampleType === SampleType.Masters || this.props.selectedSampleType === SampleType.GOODSIN \r\n            || this.props.selectedSampleType === SampleType.PROTOCOL ?\r\n                    <PerfectScrollbar>\r\n                        {/* <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' /> */}\r\n                        <AtTableWrap className=\"at-list-table\">\r\n                            <LocalizationProvider language=\"lang\">\r\n                                <>\r\n                                    <Grid\r\n                                        className={\"active-paging\"}\r\n                                        style={{ height: '550px' }}\r\n                                        resizable\r\n                                        reorderable\r\n                                        scrollable={\"scrollable\"}\r\n                                        // pageable={{ buttonCount: 5, pageSizes: 4, previousNext: false }}\r\n                                        data={this.props.dataResult}\r\n                                        {...this.state.dataState}\r\n                                        onDataStateChange={this.dataStateChange}>\r\n                                        <GridColumn\r\n                                            field=\"label\"\r\n                                            // columnMenu={ColumnMenu}\r\n                                            title={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                            cell={(row) => (\r\n                                                <td data-tip={row[\"dataItem\"]['label']} \r\n                                                //data-for=\"tooltip-grid-wrap\"\r\n                                                >\r\n                                                    {row[\"dataItem\"]['label']}\r\n                                                </td>\r\n                                            )}\r\n                                        />\r\n                                        {//this.state.\r\n                                        extractedColumnList.map(column =>\r\n                                            <GridColumn\r\n                                                field={column.field}\r\n                                                title={this.props.intl.formatMessage({ id: column.title })}\r\n                                                headerClassName=\"text-center\"\r\n                                                cell={(row) => (\r\n                                                    <td style={{ textAlign: \"center\" }} data-tip={this.props.intl.formatMessage({ id: column.title })} \r\n                                                    //data-for=\"tooltip-grid-wrap\"\r\n                                                    >\r\n                                                        <CustomSwitch type=\"switch\" id={row[\"dataItem\"][column.field]}\r\n                                                            onChange={(event) => this.props.onChangeToggle(event, row[\"dataItem\"], column.field, row.dataIndex)}\r\n                                                            checked={row[\"dataItem\"][column.field] || false}\r\n                                                            name={row[\"dataItem\"][\"label\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                    </td>)}\r\n                                            />\r\n                                        )}\r\n\r\n                                    </Grid>\r\n                                </>\r\n                            </LocalizationProvider>\r\n                        </AtTableWrap>\r\n                        {/* <ReactTooltip /> */}\r\n                    </PerfectScrollbar>        \r\n\r\n                :\r\n                <AtTabs>\r\n                    <Tabs activeKey={this.state.selectedScreen.eventKey} moreIcon=\"...\" onChange={this.onTabChange}>\r\n                        {this.state.screens.map(screen =>\r\n                            <TabPane name={screen.eventKey} tab={this.props.intl.formatMessage({ id: screen.name })} key={screen.eventKey}>\r\n                                <PerfectScrollbar>\r\n                                    {/* <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' /> */}\r\n                                    <AtTableWrap className=\"at-list-table\">\r\n                                        <LocalizationProvider language=\"lang\">\r\n                                            <>\r\n                                                <Grid\r\n                                                    className={\"active-paging\"}\r\n                                                    //style={{ height: '550px' }}\r\n                                                    resizable\r\n                                                    reorderable\r\n                                                    scrollable={\"scrollable\"}\r\n                                                    // pageable={{ buttonCount: 5, pageSizes: 4, previousNext: false }}\r\n                                                    data={this.props.dataResult[this.state.selectedScreen.formcode]}\r\n                                                    {...this.state.dataState}\r\n                                                    onDataStateChange={this.dataStateChange}>\r\n                                                    <GridColumn\r\n                                                        field=\"label\"\r\n                                                        // columnMenu={ColumnMenu}\r\n                                                        title={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                        cell={(row) => (\r\n                                                            <td data-tip={row[\"dataItem\"]['label']}\r\n                                                            // data-for=\"tooltip-grid-wrap\"\r\n                                                            >\r\n                                                                {row[\"dataItem\"]['label']}\r\n                                                            </td>\r\n                                                        )}\r\n                                                    />\r\n                                                    {//this.state.\r\n                                                    extractedColumnList.map(column =>\r\n                                                        <GridColumn\r\n                                                            field={column.field}\r\n                                                            title={this.props.intl.formatMessage({ id: column.title })}\r\n                                                            headerClassName=\"text-center\"\r\n                                                            cell={(row) => (\r\n                                                                <td style={{ textAlign: \"center\" }} data-tip={this.props.intl.formatMessage({ id: column.title })} data-for=\"tooltip-grid-wrap\">\r\n                                                                   <CustomSwitch type=\"switch\" id={row[\"dataItem\"][column.field]}\r\n                                                                        onChange={(event) => this.props.onChangeToggle(event, row[\"dataItem\"], column.field, row.dataIndex, this.state.selectedScreen.formcode,this.props.operation)}\r\n                                                                        checked={row[\"dataItem\"][column.field] || false}\r\n                                                                        //checked={column.field === \"samplelistitem\" ? (row[\"dataItem\"][column.field] === \"none\" ? false :row[\"dataItem\"][column.field]) : (row[\"dataItem\"][column.field] || false)}\r\n                                                                        //disabled={column.field === \"samplelistitem\" ? (row[\"dataItem\"][column.field] === \"none\" ? true : false):false}\r\n                                                                        name={row[\"dataItem\"][\"label\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                                       \r\n                                                                </td>)}\r\n                                                        />\r\n                                                    )}\r\n\r\n                                                </Grid>\r\n                                            </>\r\n                                        </LocalizationProvider>\r\n                                    </AtTableWrap>\r\n                                    {/* <ReactTooltip /> */}\r\n                                </PerfectScrollbar>\r\n                            </TabPane>\r\n                        )}\r\n                    </Tabs>\r\n                </AtTabs>\r\n            }\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(ConfigureScreenFields)"]},"metadata":{},"sourceType":"module"}