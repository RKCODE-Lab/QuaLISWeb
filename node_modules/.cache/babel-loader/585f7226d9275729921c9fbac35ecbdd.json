{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\pages\\\\edqmmaster\\\\AddSafetyMarker.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { transactionStatus } from '../../components/Enumeration';\nimport { injectIntl } from 'react-intl';\n\nconst AddSafetyMarker = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SAFETYMARKERNAME\"\n    }),\n    name: \"ssafetymarkername\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SAFETYMARKERNAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"ssafetymarkername\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    name: \"ssafetymarkerdesc\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"ssafetymarkerdesc\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TESTCATEGORY\"\n    }),\n    isSearchable: true,\n    name: \"ntestcategorycode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.testCategory // optionId='ntestcategorycode'\n    // optionValue='stestcategoryname'\n    // value={this.state.ntestcategorycode}\n    // defaultValue={props.ntestcategorycode || []}\n    ,\n    value: props.selectedRecord[\"ntestcategorycode\"] ? props.selectedRecord[\"ntestcategorycode\"] : \"\",\n    onChange: value => props.handleChange(value, \"ntestcategorycode\", \"TestCategory\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TESTNAME\"\n    }),\n    isSearchable: true,\n    name: \"ntestcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.testMaster || [] // optionId='ntestcode'\n    // optionValue='stestname'\n    // value={props.selectedRecord.ntestcode ?  props.selectedRecord.ntestcode : \"\"}\n    ,\n    value: props.selectedRecord[\"ntestcode\"] ? props.selectedRecord[\"ntestcode\"] : \"\",\n    onChange: value => props.handleChange(value, \"ntestcode\", \"\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_UPLOADTOEDQM\"\n    }),\n    type: \"switch\",\n    name: \"ntransactionstatus\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_UPLOADTOEDQM\"\n    }),\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.YES ? true : false : \"\",\n    isMandatory: false,\n    rows: \"3\",\n    required: false,\n    checked: props.selectedRecord ? props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.YES ? true : false : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddSafetyMarker);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/edqmmaster/AddSafetyMarker.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","transactionStatus","injectIntl","AddSafetyMarker","props","intl","formatMessage","id","event","onInputOnChange","selectedRecord","testCategory","value","handleChange","testMaster","YES"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport {transactionStatus} from '../../components/Enumeration';\r\nimport {injectIntl } from 'react-intl';\r\n\r\nconst AddSafetyMarker = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_SAFETYMARKERNAME\" })}\r\n                    name={\"ssafetymarkername\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id:\"IDS_SAFETYMARKERNAME\"})}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"ssafetymarkername\"] : \"\"}\r\n\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"50\"}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    name={\"ssafetymarkerdesc\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"ssafetymarkerdesc\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}                   \r\n                    maxLength={\"100\"}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_TESTCATEGORY\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntestcategorycode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.testCategory}\r\n                    // optionId='ntestcategorycode'\r\n                    // optionValue='stestcategoryname'\r\n                    // value={this.state.ntestcategorycode}\r\n                    // defaultValue={props.ntestcategorycode || []}\r\n                    value={props.selectedRecord[\"ntestcategorycode\"] ?  props.selectedRecord[\"ntestcategorycode\"] : \"\"}\r\n                    onChange={value => props.handleChange(value, \"ntestcategorycode\", \"TestCategory\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntestcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.testMaster || []}\r\n                    // optionId='ntestcode'\r\n                    // optionValue='stestname'\r\n                    // value={props.selectedRecord.ntestcode ?  props.selectedRecord.ntestcode : \"\"}\r\n                    value={props.selectedRecord[\"ntestcode\"] ?  props.selectedRecord[\"ntestcode\"] : \"\"}\r\n                    onChange={value => props.handleChange(value, \"ntestcode\", \"\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_UPLOADTOEDQM\" })}\r\n                    type=\"switch\"\r\n                    name={\"ntransactionstatus\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_UPLOADTOEDQM\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.YES ? true : false : \"\"}\r\n                    isMandatory={false}\r\n                    rows=\"3\"\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.YES ? true : false : false}\r\n\r\n                >\r\n\r\n                </CustomSwitch>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddSafetyMarker);"]},"metadata":{},"sourceType":"module"}