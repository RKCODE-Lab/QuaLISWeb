{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\testgroup\\\\SampleFilter.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { formCode, transactionStatus } from '../../components/Enumeration';\n\nconst SampleFilter = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SAMPLETYPE\"\n    }),\n    isSearchable: true,\n    name: \"nsampletypecode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PLEASESELECT\"\n    }),\n    isMandatory: false,\n    showOption: true,\n    options: props.sampleType || [],\n    optionId: \"nsampletypecode\",\n    optionValue: \"ssampletypename\",\n    value: props.tempFilterData[\"nsampletypecode\"] ? props.tempFilterData[\"nsampletypecode\"] : \"\",\n    onChange: value => props.onFilterComboChange(value, \"nsampletypecode\", 1) //, \"getProductCategory\", \"sampletype\"\n    ,\n    sortOrder: \"ascending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.PRODUCTCATEGORY ? \"IDS_PRODUCTCATEGORY\" : props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.INSTRUMENTCATEGORY ? \"IDS_INSTRUMENTCATEGORY\" : props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.MATERIALCATEGORY ? \"IDS_MATERIALCATEGORY\" : \"IDS_PRODUCTCATEGORY\"\n    }),\n    name: \"nproductcatcode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PLEASESELECT\"\n    }),\n    optionId: \"nproductcatcode\",\n    optionValue: \"sproductcatname\",\n    options: props.productCategory || [],\n    showOption: true,\n    value: props.tempFilterData[\"nproductcatcode\"] ? props.tempFilterData[\"nproductcatcode\"] : \"\",\n    isSearchable: true,\n    onChange: event => props.onFilterComboChange(event, \"nproductcatcode\", 2) //, \"getProduct\", \"productcategory\"\n    ,\n    sortOrder: \"ascending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), props.tempFilterData[\"nproductcatcode\"] && props.tempFilterData[\"nproductcatcode\"].item.ncategorybasedflow === transactionStatus.NO && /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.PRODUCTCATEGORY ? \"IDS_PRODUCT\" : props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.INSTRUMENTCATEGORY ? \"IDS_INSTRUMENT\" : props.tempFilterData[\"nsampletypecode\"].item.nformcode === formCode.MATERIALCATEGORY ? \"IDS_MATERIAL\" : \"IDS_PRODUCT\"\n    }),\n    name: \"nproductcode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PLEASESELECT\"\n    }),\n    optionId: \"nproductcode\",\n    optionValue: \"sproductname\",\n    options: props.product || [],\n    showOption: true,\n    value: props.tempFilterData[\"nproductcode\"] ? props.tempFilterData[\"nproductcode\"] : \"\",\n    isSearchable: true,\n    onChange: event => props.onFilterComboChange(event, \"nproductcode\", 4) //, \"getTreeVersionTemplate\", \"product\"\n    ,\n    sortOrder: \"ascending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TREETEMPLATEVERSION\"\n    }),\n    name: \"ntreeversiontempcode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PLEASESELECT\"\n    }),\n    optionId: \"ntreeversiontempcode\",\n    optionValue: \"sversiondescription\",\n    options: props.treeVersionTemplate || [],\n    showOption: true,\n    value: props.tempFilterData[\"ntreeversiontempcode\"] ? props.tempFilterData[\"ntreeversiontempcode\"] : \"\",\n    isSearchable: true,\n    onChange: event => props.onFilterComboChange(event, \"ntreeversiontempcode\", 4) //, \"getTreeVersionTemplate\", \"product\"\n    ,\n    sortOrder: \"ascending\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(SampleFilter);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testgroup/SampleFilter.jsx"],"names":["React","FormSelectSearch","Col","Row","injectIntl","formCode","transactionStatus","SampleFilter","props","intl","formatMessage","id","sampleType","tempFilterData","value","onFilterComboChange","item","nformcode","PRODUCTCATEGORY","INSTRUMENTCATEGORY","MATERIALCATEGORY","productCategory","event","ncategorybasedflow","NO","product","treeVersionTemplate"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { formCode, transactionStatus } from '../../components/Enumeration';\r\n\r\nconst SampleFilter = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nsampletypecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    isMandatory={false}\r\n                    showOption={true}\r\n                    options={props.sampleType || []}\r\n                    optionId='nsampletypecode'\r\n                    optionValue='ssampletypename'\r\n                    value={props.tempFilterData[\"nsampletypecode\"] ? props.tempFilterData[\"nsampletypecode\"] : \"\"}\r\n                    onChange={value => props.onFilterComboChange(value, \"nsampletypecode\", 1)}//, \"getProductCategory\", \"sampletype\"\r\n                    sortOrder=\"ascending\"\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.PRODUCTCATEGORY? \"IDS_PRODUCTCATEGORY\":\r\n                    props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.INSTRUMENTCATEGORY?\"IDS_INSTRUMENTCATEGORY\":\r\n                    props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.MATERIALCATEGORY?\"IDS_MATERIALCATEGORY\":\"IDS_PRODUCTCATEGORY\" })}\r\n                    name={\"nproductcatcode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    optionId={\"nproductcatcode\"}\r\n                    optionValue={\"sproductcatname\"}\r\n                    options={props.productCategory || []}\r\n                    showOption={true}\r\n                    value={props.tempFilterData[\"nproductcatcode\"] ? props.tempFilterData[\"nproductcatcode\"] : \"\"}\r\n                    isSearchable={true}\r\n                    onChange={(event) => props.onFilterComboChange(event, \"nproductcatcode\", 2)}//, \"getProduct\", \"productcategory\"\r\n                    sortOrder=\"ascending\"\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            {\r\n                props.tempFilterData[\"nproductcatcode\"] &&\r\n                props.tempFilterData[\"nproductcatcode\"].item.ncategorybasedflow === transactionStatus.NO &&\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.PRODUCTCATEGORY? \"IDS_PRODUCT\":\r\n                        props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.INSTRUMENTCATEGORY?\"IDS_INSTRUMENT\":\r\n                        props.tempFilterData[\"nsampletypecode\"].item.nformcode===formCode.MATERIALCATEGORY?\"IDS_MATERIAL\":\"IDS_PRODUCT\" })}\r\n                        name={\"nproductcode\"}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                        optionId={\"nproductcode\"}\r\n                        optionValue={\"sproductname\"}\r\n                        options={props.product || []}\r\n                        showOption={true}\r\n                        value={props.tempFilterData[\"nproductcode\"] ? props.tempFilterData[\"nproductcode\"] : \"\"}\r\n                        isSearchable={true}\r\n                        onChange={(event) => props.onFilterComboChange(event, \"nproductcode\", 4)}//, \"getTreeVersionTemplate\", \"product\"\r\n                        sortOrder=\"ascending\"\r\n                    >\r\n                    </FormSelectSearch>\r\n                </Col>\r\n            }\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_TREETEMPLATEVERSION\" })}\r\n                    name={\"ntreeversiontempcode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    optionId={\"ntreeversiontempcode\"}\r\n                    optionValue={\"sversiondescription\"}\r\n                    options={props.treeVersionTemplate || []}\r\n                    showOption={true}\r\n                    value={props.tempFilterData[\"ntreeversiontempcode\"] ? props.tempFilterData[\"ntreeversiontempcode\"] : \"\"}\r\n                    isSearchable={true}\r\n                    onChange={(event) => props.onFilterComboChange(event, \"ntreeversiontempcode\", 4)}//, \"getTreeVersionTemplate\", \"product\"\r\n                    sortOrder=\"ascending\"\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(SampleFilter);"]},"metadata":{},"sourceType":"module"}