{"ast":null,"code":"import{faEye,faPencilAlt,faPlus,faSort,faThumbsUp,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{ReactComponent as Reject}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\";import{Button,Card,Nav}from'react-bootstrap';import{injectIntl}from'react-intl';import TransactionListMasterJsonView from'../../components/TransactionListMasterJsonView';import{ProductList}from'../product/product.styled';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import{rulesEngineMoreFields,rulesEngineSubFields}from'./TestGroupFields';import{sortData}from'../../components/CommonScript';import PerfectScrollbar from'react-perfect-scrollbar';import ListBoxDraggable from'../../components/ListBoxDraggable';var TestGroupRulesEngineTab=function TestGroupRulesEngineTab(props){function insertSelectedField(array){array[0]['selected']={};array[0]['selected']=true;return array;}console.log('props--->>>',props);var addId=props.controlMap.has(\"Add Rules Engine\")&&props.controlMap.get(\"Add Rules Engine\").ncontrolcode;var editId=props.controlMap.has(\"Edit Rules Engine\")&&props.controlMap.get(\"Edit Rules Engine\").ncontrolcode;var deleteId=props.controlMap.has(\"Delete Rules Engine\")&&props.controlMap.get(\"Delete Rules Engine\").ncontrolcode;var ApproveId=props.controlMap.has(\"Approve Rules Engine\")&&props.controlMap.get(\"Approve Rules Engine\").ncontrolcode;var RetireId=props.controlMap.has(\"Retire Rules Engine\")&&props.controlMap.get(\"Retire Rules Engine\").ncontrolcode;var saveExecutionOrderId=props.controlMap.has(\"Save Execution Order\")&&props.controlMap.get(\"Save Execution Order\").ncontrolcode;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"grouped-tab-inner rules-engine-tab-list\"},/*#__PURE__*/React.createElement(ListBoxDraggable,{masterList:props.masterData.searchedDataRulesEngine||sortData(props.masterData.RulesEngine,'ascending','nruleexecorder')||[],isSearchedDataPresent:props.masterData.searchedDataRulesEngine&&props.masterData.searchedDataRulesEngine.length>0?true:false,selectedListName:\"SelectedRulesEngine\",clickIconGroup:true,filterColumnData:props.filterTransactionList,searchListName:\"searchedDataRulesEngine\",mainField:\"srulename\",filterParam:props.filterParamRulesEngine,selectedMaster:props.masterData.SelectedRulesEngine,selectedTestGroupTestCode:props.masterData.SelectedRulesEngine&&props.masterData.SelectedRulesEngine['ntestgrouptestcode'],openflowview:props.openflowview,viewOutcome:props.viewOutcome,primaryKeyField:\"ntestgrouprulesenginecode\",sortableField:'nruleexecorder',getMasterDetail:function getMasterDetail(param){return props.getSelectedTestGroupRulesEngine(param,props.userInfo,props.masterData);},userInfo:props.userInfo,subFieldsLabel:true,hideSearch:true,subFields:rulesEngineSubFields,masterData:props.masterData,saveExecutionOrder:props.saveExecutionOrder,actionIcons:[{title:props.intl.formatMessage({id:\"IDS_VIEWRULE\"}),controlname:\"faEye\",objectName:\"SelectedRulesEngine\",// hidden: props.userRoleControlRights.indexOf(editId) === -1,\nhidden:false,inputData:{masterData:props.masterData,userInfo:props.userInfo},onClick:props.openflowview},{title:props.intl.formatMessage({id:\"IDS_VIEWOUTCOME\"}),controlname:\"faGift\",objectName:\"SelectedRulesEngine\",// hidden: props.userRoleControlRights.indexOf(editId) === -1,\nhidden:false,inputData:{masterData:props.masterData,userInfo:props.userInfo},onClick:props.viewOutcome}],commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-icon-rounded btn-circle solid-blue mr-1\",role:\"button\",hidden:props.userRoleControlRights.indexOf(addId)===-1,\"data-tip\":props.intl.formatMessage({id:\"IDS_ADD\"})// data-for=\"tooltip-list-wrap\"\n,onClick:function onClick(){return props.getTestGroupRulesEngineAdd();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,title:props.intl.formatMessage({id:\"IDS_EDIT\"})})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr0 mr-1\",href:\"#\",\"data-tip\":props.intl.formatMessage({id:\"IDS_EDIT\"}),hidden:props.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(e){return props.getEditTestGroupRulesEngine(\"update\",props.masterData,props.userInfo);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt,title:props.intl.formatMessage({id:\"IDS_EDIT\"})})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey \",href:\"\",\"data-tip\":props.intl.formatMessage({id:\"IDS_DELETE\"}),hidden:props.userRoleControlRights.indexOf(deleteId)===-1,onClick:props.ConfirmDeleteRule},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-1\",\"data-tip\":props.intl.formatMessage({id:\"IDS_APPROVE\"}),hidden:props.userRoleControlRights.indexOf(ApproveId)===-1,onClick:function onClick(e){return props.approveVersion(props.masterData,1);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-1\",\"data-tip\":props.intl.formatMessage({id:\"IDS_RETIRE\"}),hidden:props.userRoleControlRights.indexOf(RetireId)===-1,onClick:function onClick(e){return props.approveVersion(props.masterData,2);}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"20\",height:\"20\"}))))}))));};export default injectIntl(TestGroupRulesEngineTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/testgroup/TestGroupRulesEngineTab.jsx"],"names":["faEye","faPencilAlt","faPlus","faSort","faThumbsUp","faTrashAlt","FontAwesomeIcon","React","Button","Card","Nav","injectIntl","TransactionListMasterJsonView","ProductList","ConfirmMessage","rulesEngineMoreFields","rulesEngineSubFields","sortData","PerfectScrollbar","ListBoxDraggable","TestGroupRulesEngineTab","props","insertSelectedField","array","console","log","addId","controlMap","has","get","ncontrolcode","editId","deleteId","ApproveId","RetireId","saveExecutionOrderId","masterData","searchedDataRulesEngine","RulesEngine","length","filterTransactionList","filterParamRulesEngine","SelectedRulesEngine","openflowview","viewOutcome","param","getSelectedTestGroupRulesEngine","userInfo","saveExecutionOrder","title","intl","formatMessage","id","controlname","objectName","hidden","inputData","onClick","userRoleControlRights","indexOf","getTestGroupRulesEngineAdd","e","getEditTestGroupRulesEngine","ConfirmDeleteRule","approveVersion"],"mappings":"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","sourcesContent":["import { faEye, faPencilAlt, faPlus, faSort, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg'\r\nimport { Button, Card, Nav } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport { ProductList } from '../product/product.styled';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { rulesEngineMoreFields, rulesEngineSubFields } from './TestGroupFields';\r\nimport { sortData } from '../../components/CommonScript';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'; \r\nimport ListBoxDraggable from '../../components/ListBoxDraggable';\r\n\r\nconst TestGroupRulesEngineTab = (props) => {\r\n\r\n    function insertSelectedField(array) {\r\n        array[0]['selected'] = {}\r\n        array[0]['selected'] = true;\r\n        return array\r\n    }\r\n    console.log('props--->>>', props)\r\n    const addId = props.controlMap.has(\"Add Rules Engine\") && props.controlMap.get(\"Add Rules Engine\").ncontrolcode;\r\n    const editId = props.controlMap.has(\"Edit Rules Engine\") && props.controlMap.get(\"Edit Rules Engine\").ncontrolcode;\r\n    const deleteId = props.controlMap.has(\"Delete Rules Engine\") && props.controlMap.get(\"Delete Rules Engine\").ncontrolcode;\r\n    const ApproveId = props.controlMap.has(\"Approve Rules Engine\") && props.controlMap.get(\"Approve Rules Engine\").ncontrolcode;\r\n    const RetireId = props.controlMap.has(\"Retire Rules Engine\") && props.controlMap.get(\"Retire Rules Engine\").ncontrolcode;\r\n    const saveExecutionOrderId = props.controlMap.has(\"Save Execution Order\") && props.controlMap.get(\"Save Execution Order\").ncontrolcode;\r\n\r\n    return (\r\n        <>\r\n            <PerfectScrollbar>\r\n                <div className='grouped-tab-inner rules-engine-tab-list'>\r\n                    {/* <div className='grouped-tab-inner'> */}\r\n                    <ListBoxDraggable\r\n                        masterList={props.masterData.searchedDataRulesEngine || sortData(props.masterData.RulesEngine, 'ascending', 'nruleexecorder') || []}\r\n                        isSearchedDataPresent={props.masterData.searchedDataRulesEngine &&\r\n                            props.masterData.searchedDataRulesEngine.length > 0 ? true : false}\r\n                        selectedListName=\"SelectedRulesEngine\"\r\n                        clickIconGroup={true}\r\n                        filterColumnData={props.filterTransactionList}\r\n                        searchListName=\"searchedDataRulesEngine\"\r\n                        mainField=\"srulename\"\r\n                        filterParam={props.filterParamRulesEngine}\r\n                        selectedMaster={props.masterData.SelectedRulesEngine}\r\n                        selectedTestGroupTestCode={props.masterData.SelectedRulesEngine && props.masterData.SelectedRulesEngine['ntestgrouptestcode']}\r\n                        openflowview={props.openflowview}\r\n                        viewOutcome={props.viewOutcome}\r\n                        primaryKeyField=\"ntestgrouprulesenginecode\"\r\n                        sortableField={'nruleexecorder'}\r\n                        getMasterDetail={(param) => props.getSelectedTestGroupRulesEngine(param, props.userInfo, props.masterData)}\r\n                        userInfo={props.userInfo}\r\n                        subFieldsLabel={true}\r\n                        hideSearch={true}\r\n                        subFields={rulesEngineSubFields}\r\n                        masterData={props.masterData}\r\n                        saveExecutionOrder={props.saveExecutionOrder}\r\n                        actionIcons={\r\n                            [\r\n                                {\r\n                                    title: props.intl.formatMessage({ id: \"IDS_VIEWRULE\" }),\r\n                                    controlname: \"faEye\",\r\n                                    objectName: \"SelectedRulesEngine\",\r\n                                    // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                    hidden: false,\r\n                                    inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                    onClick: props.openflowview\r\n                                }, {\r\n                                    title: props.intl.formatMessage({ id: \"IDS_VIEWOUTCOME\" }),\r\n                                    controlname: \"faGift\",\r\n                                    objectName: \"SelectedRulesEngine\",\r\n                                    // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                    hidden: false,\r\n                                    inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                    onClick: props.viewOutcome\r\n                                }\r\n                            ]}\r\n                        commonActions={\r\n                            <>\r\n                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                    <Nav.Link className=\"btn btn-icon-rounded btn-circle solid-blue mr-1\" role=\"button\"\r\n                                        hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        // data-for=\"tooltip-list-wrap\"\r\n                                        onClick={() => props.getTestGroupRulesEngineAdd()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey mr0 mr-1\" href=\"#\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(editId) === -1}\r\n\r\n                                        onClick={(e) =>\r\n                                            props.getEditTestGroupRulesEngine(\r\n                                                \"update\", props.masterData, props.userInfo\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPencilAlt}\r\n                                            title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey \" href=\"\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(deleteId) === -1}\r\n\r\n                                        onClick={props.ConfirmDeleteRule}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey ml-1\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(ApproveId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 1)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faThumbsUp} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey ml-1\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(RetireId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 2)}\r\n                                    >\r\n                                        <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                    </Nav.Link>\r\n                                </ProductList>\r\n\r\n                            </>\r\n                        }>\r\n                    </ListBoxDraggable>\r\n                </div>\r\n            </PerfectScrollbar>\r\n            {/* </div> */}\r\n            {/* \r\n            <PerfectScrollbar>\r\n                <div className='grouped-tab-inner'>\r\n\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={167}\r\n                        // componentBreadcrumbs={this.breadCrumbData ? this.breadCrumbData.length > 0 ? true : false : false}\r\n                        // notSearchable={false}\r\n                        masterList={props.masterData.searchedDataRulesEngine || sortData(props.masterData.RulesEngine, 'descending', 'ntestgrouprulesenginecode') || []}\r\n                        selectedMaster={[props.masterData.SelectedRulesEngine]}\r\n                        clickIconGroup={true}\r\n                        // selectedMaster={SelectedTest !== undefined ? [SelectedTest] : undefined}\r\n                        primaryKeyField=\"ntestgrouprulesenginecode\"\r\n                        getMasterDetail={(param) => props.getSelectedTestGroupRulesEngine(param, props.userInfo, props.masterData)}\r\n                        //  inputParam={getTest}\r\n                        // additionalParam={[]}\r\n                        mainField=\"srulename\"\r\n                        selectedListName=\"SelectedRulesEngine\"\r\n                        objectName=\"RulesEngine\"\r\n                        listName=\"IDS_RULESENGINE\"\r\n                        showStatusLink={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        subFields={rulesEngineSubFields}\r\n                        //   moreField={rulesEngineMoreFields}\r\n                        needValidation={false}\r\n                        needFilter={false}\r\n                        subFieldsLabel={true}\r\n                        filterColumnData={props.filterTransactionList}\r\n                        searchListName=\"searchedDataRulesEngine\"\r\n                        //searchRef={this.searchRef}\r\n                        hidePaging={false}\r\n                        filterParam={props.filterParamRulesEngine}\r\n                        handlePageChange={props.handlePageChangeRuleEngine}\r\n                        skip={props.skipRulesEngine}\r\n                        take={props.takeRulesEngine}\r\n                        pageSize={props.settings && props.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        actionIcons={\r\n                            [\r\n                                // {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                //     controlname: \"faPencilAlt\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     onClick:   props.getEditTestGroupRulesEngine(\r\n                                //         \"update\",  props.Login.masterData,    props.Login.userInfo\r\n                                //     ),\r\n                                //   //s  needConditionalIcon: true,\r\n                                //   //  conditionalIconFunction: this.fileViewIcon\r\n                                // }, \r\n                                // {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                //     controlname: \"faTrashAlt\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     //  onClick: (props) => this.getEditRulesEngine(props), \r\n                                // }, {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_APPROVE\" }),\r\n                                //     controlname: \"faThumbsUp\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     //  onClick: (props) => this.getEditRulesEngine(props), \r\n                                // },  \r\n                                {\r\n                                    title: props.intl.formatMessage({ id: \"IDS_VIEWRULE\" }),\r\n                                    controlname: \"faEye\",\r\n                                    objectName: \"SelectedRulesEngine\",\r\n                                    // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                    hidden: false,\r\n                                    inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                    onClick: props.openflowview\r\n                                }, {\r\n                                    title: props.intl.formatMessage({ id: \"IDS_VIEWOUTCOME\" }),\r\n                                    controlname: \"faGift\",\r\n                                    objectName: \"SelectedRulesEngine\",\r\n                                    // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                    hidden: false,\r\n                                    inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                    onClick: props.viewOutcome\r\n                                }\r\n                            ]\r\n                        }\r\n                        commonActions={\r\n                            <>\r\n                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                    <Nav.Link className=\"btn btn-icon-rounded btn-circle solid-blue mr-1\" role=\"button\"\r\n                                        hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        // data-for=\"tooltip-list-wrap\"\r\n                                        onClick={() => props.getTestGroupRulesEngineAdd()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey mr0 mr-1\" href=\"#\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(editId) === -1}\r\n\r\n                                        onClick={(e) =>\r\n                                            props.getEditTestGroupRulesEngine(\r\n                                                \"update\", props.masterData, props.userInfo\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPencilAlt}\r\n                                            title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey \" href=\"\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(deleteId) === -1}\r\n\r\n                                        onClick={props.ConfirmDeleteRule}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey ml-1\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(ApproveId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 1)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faThumbsUp} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey ml-1\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(RetireId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 2)}\r\n                                    >\r\n                                        <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                    </Nav.Link> \r\n                                </ProductList>\r\n\r\n                            </>\r\n                        }\r\n                    />\r\n                </div>\r\n            </PerfectScrollbar> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestGroupRulesEngineTab);"]},"metadata":{},"sourceType":"module"}