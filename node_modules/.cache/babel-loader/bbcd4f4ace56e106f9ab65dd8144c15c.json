{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { getter, clone } from '@progress/kendo-react-common';\nimport { parseRule, expand } from '@progress/kendo-recurrence';\nimport { ZonedDate } from '@progress/kendo-date-math';\nimport { setField, isMaster } from '../utils';\n/** @hidden */\n\nexport var toOccurrences = function (data, _a) {\n  var dateRange = _a.dateRange,\n      fields = _a.fields,\n      timezone = _a.timezone;\n  var result = data.map(readItem(fields)).reduce(occurrenceReducer(dateRange, timezone, fields), []).filter(function (occurrence) {\n    return !isMaster(occurrence.dataItem, fields);\n  });\n  return result;\n};\n\nvar readItem = function (fields) {\n  return function (dataItem) {\n    var result = {\n      uid: getter(fields.id || 'id')(dataItem),\n      start: getter(fields.start || 'start')(dataItem),\n      startTimezone: getter(fields.startTimezone || 'startTimezone')(dataItem),\n      originalStart: getter(fields.originalStart || 'originalStart')(dataItem),\n      end: getter(fields.end || 'end')(dataItem),\n      endTimezone: getter(fields.endTimezone || 'endTimezone')(dataItem),\n      isAllDay: getter(fields.isAllDay || 'isAllDay')(dataItem),\n      title: getter(fields.title || 'title')(dataItem),\n      description: getter(fields.description || 'description')(dataItem),\n      occurrenceId: getter('occurrenceId')(dataItem),\n      recurrenceRule: getter(fields.recurrenceRule || 'recurrenceRule')(dataItem),\n      recurrenceExceptions: getter(fields.recurrenceExceptions || 'recurrenceExceptions')(dataItem),\n      recurrenceId: getter(fields.recurrenceId || 'recurrenceId')(dataItem),\n      dataItem: clone(dataItem)\n    };\n    return result;\n  };\n};\n\nvar occurrenceReducer = function (dateRange, timezone, fields) {\n  return function (acc, current) {\n    return __spreadArray(__spreadArray([], acc, true), Boolean(current.recurrenceRule) && Boolean(current.recurrenceId === null || current.recurrenceId === undefined) && isMaster(current.dataItem, fields) ? __spreadArray([], occurrences(current, {\n      dateRange: dateRange,\n      timezone: timezone,\n      fields: fields\n    }), true) : [current], true);\n  };\n};\n\nvar occurrences = function (item, _a) {\n  var dateRange = _a.dateRange,\n      timezone = _a.timezone,\n      fields = _a.fields;\n  var rrule = item.recurrenceRule;\n  var rule = parseRule({\n    recurrenceRule: rrule\n  }); // changed as for display purposes timezone of the scheduler is the correct one\n\n  if (!rule.start) {\n    rule.start = ZonedDate.fromLocalDate(item.start, timezone);\n  }\n\n  if (!rule.end) {\n    rule.end = ZonedDate.fromLocalDate(item.end, timezone);\n  }\n\n  var exceptionRule = item.recurrenceExceptions;\n\n  if (exceptionRule) {\n    rule.exceptionDates = exceptionRule.map(function (exDate) {\n      return ZonedDate.fromLocalDate(exDate, timezone);\n    });\n  }\n\n  var utcRangeStart = dateRange.zonedStart;\n  var utcRangeEnd = dateRange.zonedEnd;\n  var series = expand(rule, {\n    rangeStart: utcRangeStart,\n    rangeEnd: utcRangeEnd\n  });\n\n  if (!series.events.length) {\n    return [];\n  }\n\n  var expanded = series.events.map(function (occurrence, idx) {\n    var occurrenceItem = clone(item);\n    var occurrenceDataItem = clone(item.dataItem);\n    occurrenceItem.recurrenceId = occurrenceItem.uid;\n    setField(occurrenceDataItem, fields.recurrenceId, item.uid);\n    occurrenceItem.originalStart = occurrence.start.toLocalDate();\n    setField(occurrenceDataItem, fields.originalStart, occurrence.start.toLocalDate());\n    occurrenceItem.start = occurrence.start.toLocalDate();\n    setField(occurrenceDataItem, fields.start, occurrence.start.toLocalDate());\n    occurrenceItem.end = occurrence.end.toLocalDate();\n    setField(occurrenceDataItem, fields.end, occurrence.end.toLocalDate());\n    occurrenceItem.occurrenceId = String(idx);\n    setField(occurrenceDataItem, 'occurrenceId', String(idx));\n    occurrenceItem.dataItem = occurrenceDataItem;\n    return occurrenceItem;\n  });\n  return expanded;\n};","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/node_modules/@progress/kendo-react-scheduler/dist/es/services/occurrenceService.js"],"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","getter","clone","parseRule","expand","ZonedDate","setField","isMaster","toOccurrences","data","_a","dateRange","fields","timezone","result","map","readItem","reduce","occurrenceReducer","filter","occurrence","dataItem","uid","id","start","startTimezone","originalStart","end","endTimezone","isAllDay","title","description","occurrenceId","recurrenceRule","recurrenceExceptions","recurrenceId","acc","current","Boolean","undefined","occurrences","item","rrule","rule","fromLocalDate","exceptionRule","exceptionDates","exDate","utcRangeStart","zonedStart","utcRangeEnd","zonedEnd","series","rangeStart","rangeEnd","events","expanded","idx","occurrenceItem","occurrenceDataItem","toLocalDate","String"],"mappings":"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","sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { getter, clone } from '@progress/kendo-react-common';\nimport { parseRule, expand } from '@progress/kendo-recurrence';\nimport { ZonedDate } from '@progress/kendo-date-math';\nimport { setField, isMaster } from '../utils';\n/** @hidden */\nexport var toOccurrences = function (data, _a) {\n    var dateRange = _a.dateRange, fields = _a.fields, timezone = _a.timezone;\n    var result = data\n        .map(readItem(fields))\n        .reduce(occurrenceReducer(dateRange, timezone, fields), [])\n        .filter(function (occurrence) { return !isMaster(occurrence.dataItem, fields); });\n    return result;\n};\nvar readItem = function (fields) { return function (dataItem) {\n    var result = {\n        uid: getter(fields.id || 'id')(dataItem),\n        start: getter(fields.start || 'start')(dataItem),\n        startTimezone: getter(fields.startTimezone || 'startTimezone')(dataItem),\n        originalStart: getter(fields.originalStart || 'originalStart')(dataItem),\n        end: getter(fields.end || 'end')(dataItem),\n        endTimezone: getter(fields.endTimezone || 'endTimezone')(dataItem),\n        isAllDay: getter(fields.isAllDay || 'isAllDay')(dataItem),\n        title: getter(fields.title || 'title')(dataItem),\n        description: getter(fields.description || 'description')(dataItem),\n        occurrenceId: getter('occurrenceId')(dataItem),\n        recurrenceRule: getter(fields.recurrenceRule || 'recurrenceRule')(dataItem),\n        recurrenceExceptions: getter(fields.recurrenceExceptions || 'recurrenceExceptions')(dataItem),\n        recurrenceId: getter(fields.recurrenceId || 'recurrenceId')(dataItem),\n        dataItem: clone(dataItem)\n    };\n    return result;\n}; };\nvar occurrenceReducer = function (dateRange, timezone, fields) { return function (acc, current) {\n    return __spreadArray(__spreadArray([], acc, true), ((Boolean(current.recurrenceRule)\n        && Boolean(current.recurrenceId === null || current.recurrenceId === undefined)\n        && isMaster(current.dataItem, fields))\n        ? __spreadArray([], occurrences(current, { dateRange: dateRange, timezone: timezone, fields: fields }), true) : [current]), true);\n}; };\nvar occurrences = function (item, _a) {\n    var dateRange = _a.dateRange, timezone = _a.timezone, fields = _a.fields;\n    var rrule = item.recurrenceRule;\n    var rule = parseRule({ recurrenceRule: rrule });\n    // changed as for display purposes timezone of the scheduler is the correct one\n    if (!rule.start) {\n        rule.start = ZonedDate.fromLocalDate(item.start, timezone);\n    }\n    if (!rule.end) {\n        rule.end = ZonedDate.fromLocalDate(item.end, timezone);\n    }\n    var exceptionRule = item.recurrenceExceptions;\n    if (exceptionRule) {\n        rule.exceptionDates = exceptionRule\n            .map(function (exDate) {\n            return ZonedDate.fromLocalDate(exDate, timezone);\n        });\n    }\n    var utcRangeStart = dateRange.zonedStart;\n    var utcRangeEnd = dateRange.zonedEnd;\n    var series = expand(rule, {\n        rangeStart: utcRangeStart,\n        rangeEnd: utcRangeEnd\n    });\n    if (!series.events.length) {\n        return [];\n    }\n    var expanded = series.events.map(function (occurrence, idx) {\n        var occurrenceItem = clone(item);\n        var occurrenceDataItem = clone(item.dataItem);\n        occurrenceItem.recurrenceId = occurrenceItem.uid;\n        setField(occurrenceDataItem, fields.recurrenceId, item.uid);\n        occurrenceItem.originalStart = occurrence.start.toLocalDate();\n        setField(occurrenceDataItem, fields.originalStart, occurrence.start.toLocalDate());\n        occurrenceItem.start = occurrence.start.toLocalDate();\n        setField(occurrenceDataItem, fields.start, occurrence.start.toLocalDate());\n        occurrenceItem.end = occurrence.end.toLocalDate();\n        setField(occurrenceDataItem, fields.end, occurrence.end.toLocalDate());\n        occurrenceItem.occurrenceId = String(idx);\n        setField(occurrenceDataItem, 'occurrenceId', String(idx));\n        occurrenceItem.dataItem = occurrenceDataItem;\n        return occurrenceItem;\n    });\n    return expanded;\n};\n"]},"metadata":{},"sourceType":"module"}