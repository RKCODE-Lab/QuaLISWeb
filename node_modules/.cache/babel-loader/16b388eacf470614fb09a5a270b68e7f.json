{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\myjobs\\\\TestWiseMyJobsFilter.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDoubleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass TesWiseMyJobsFilter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showMoreToggle = () => {\n      this.setState({\n        showMore: !this.state.showMore\n      });\n    };\n\n    this.state = {\n      showMore: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"side_more_filter_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"fromdate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_FROM\"\n      }),\n      className: \"form-control\",\n      placeholderText: this.props.intl.formatMessage({\n        id: \"IDS_FROM\"\n      }),\n      selected: this.props.fromDate,\n      value: this.props.fromDate,\n      dateFormat: this.props.userInfo.ssitedate,\n      onChange: date => this.props.handleDateChange(\"fromDate\", date),\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DateTimePicker, {\n      name: \"todate\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_TO\"\n      }),\n      className: \"form-control\",\n      placeholderText: this.props.intl.formatMessage({\n        id: \"IDS_TO\"\n      }),\n      selected: this.props.toDate,\n      value: this.props.toDate,\n      dateFormat: this.props.userInfo.ssitedate,\n      onChange: date => this.props.handleDateChange(\"toDate\", date),\n      isClearable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLETYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SAMPLETYPE\"\n      }),\n      name: \"nsampletypecode\",\n      optionId: \"nsampletypecode\",\n      optionValue: \"ssampletypename\",\n      className: \"form-control\",\n      options: this.props.SampleType,\n      value: this.props.SampleTypeValue ? {\n        \"label\": this.props.SampleTypeValue.ssampletypename,\n        \"value\": this.props.SampleTypeValue.nsampletypecode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nsampletypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONTYPE\"\n      }),\n      name: \"nregtypecode\",\n      className: \"form-control\",\n      options: this.props.RegType,\n      value: this.props.RegTypeValue ? {\n        \"label\": this.props.RegTypeValue.sregtypename,\n        \"value\": this.props.RegTypeValue.nregtypecode\n      } : \"\",\n      optionId: \"nregtypecode\",\n      optionValue: \"sregtypename\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nregtypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONSUBTYPE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_REGISTRATIONSUBTYPE\"\n      }),\n      name: \"nregsubtypecode\",\n      optionId: \"nregsubtypecode\",\n      optionValue: \"sregsubtypename\",\n      className: \"form-control\",\n      options: this.props.RegSubType,\n      value: this.props.RegSubTypeValue ? {\n        \"label\": this.props.RegSubTypeValue.sregsubtypename,\n        \"value\": this.props.RegSubTypeValue.nregsubtypecode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nregsubtypecode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TESTSTATUS\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_TESTSTATUS\"\n      }),\n      name: \"ntransactionstatus\",\n      optionId: \"ntransactionstatus\",\n      optionValue: \"stransdisplaystatus\",\n      className: \"form-control\",\n      options: this.props.FilterStatus,\n      value: this.props.FilterStatusValue ? {\n        \"label\": this.props.FilterStatusValue.stransdisplaystatus,\n        \"value\": this.props.FilterStatusValue.ntransactionstatus\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"ntransactionstatus\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }))), !this.state.showMore ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn_sidebar_open\",\n      onClick: this.showMoreToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 41\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faAngleDoubleRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 109\n      }\n    }), \" \") : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: `side_more_filter ${this.state.showMore ? 'active' : ''} `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn_sidebar_close\",\n      onClick: this.showMoreToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 39\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 108\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_CONFIGVERSION\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_CONFIGVERSION\"\n      }),\n      name: \"napprovalconfigversioncode\",\n      optionId: \"napprovalconfigversioncode\",\n      optionValue: \"sversionname\",\n      className: \"form-control\",\n      options: this.props.ApprovalVersion,\n      value: this.props.ApprovalVersionValue ? {\n        \"label\": this.props.ApprovalVersionValue.sversionname,\n        \"value\": this.props.ApprovalVersionValue.napprovalconfigversioncode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"napprovalconfigversioncode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_DESIGNTEMPLATE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_DESIGNTEMPLATE\"\n      }),\n      name: \"ndesigntemplatemappingcode\",\n      optionId: \"ndesigntemplatemappingcode\",\n      optionValue: \"sregtemplatename\",\n      className: \"form-control\",\n      options: this.props.DynamicDesignMapping,\n      value: this.props.DesignTemplateMappingValue ? {\n        \"label\": this.props.DesignTemplateMappingValue.sregtemplatename,\n        \"value\": this.props.DesignTemplateMappingValue.ndesigntemplatemappingcode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: false,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"ndesigntemplatemappingcode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SECTION\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SECTION\"\n      }),\n      name: \"nsectioncode\",\n      optionId: \"nsectioncode\",\n      optionValue: \"ssectionname\",\n      className: \"form-control\",\n      options: this.props.UserSection || [],\n      value: this.props.UserSectionValue ? {\n        \"label\": this.props.UserSectionValue.ssectionname,\n        \"value\": this.props.UserSectionValue.nsectioncode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"nsectioncode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_TEST\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      name: \"ntestcode\",\n      optionId: \"ntestcode\",\n      optionValue: \"stestsynonym\",\n      className: \"form-control\",\n      options: this.props.Test || [],\n      value: this.props.TestValue ? {\n        \"label\": this.props.TestValue.stestsynonym,\n        \"value\": this.props.TestValue.ntestcode\n      } : \"\",\n      isMandatory: false,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: false,\n      alphabeticalSort: false,\n      isClearable: false,\n      onChange: event => this.props.onFilterComboChange(event, \"ntestcode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 48\n      }\n    })))));\n  }\n\n}\n\nexport default injectIntl(TesWiseMyJobsFilter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/myjobs/TestWiseMyJobsFilter.jsx"],"names":["React","Col","Row","injectIntl","DateTimePicker","FormSelectSearch","FontAwesomeIcon","faAngleDoubleRight","faTimes","TesWiseMyJobsFilter","Component","constructor","props","showMoreToggle","setState","showMore","state","render","intl","formatMessage","id","fromDate","userInfo","ssitedate","date","handleDateChange","toDate","SampleType","SampleTypeValue","ssampletypename","nsampletypecode","event","onFilterComboChange","RegType","RegTypeValue","sregtypename","nregtypecode","RegSubType","RegSubTypeValue","sregsubtypename","nregsubtypecode","FilterStatus","FilterStatusValue","stransdisplaystatus","ntransactionstatus","ApprovalVersion","ApprovalVersionValue","sversionname","napprovalconfigversioncode","DynamicDesignMapping","DesignTemplateMappingValue","sregtemplatename","ndesigntemplatemappingcode","UserSection","UserSectionValue","ssectionname","nsectioncode","Test","TestValue","stestsynonym","ntestcode"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleRight , faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass TesWiseMyJobsFilter extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore:false\r\n        }\r\n    }\r\n    showMoreToggle =() =>{\r\n        this.setState({\r\n            showMore : !this.state.showMore\r\n           \r\n        })\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"side_more_filter_wrap\">\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"fromdate\"}\r\n                            label={this.props.intl.formatMessage({ id:\"IDS_FROM\"})}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id:\"IDS_FROM\"})}\r\n                            selected={this.props.fromDate}\r\n                            value={this.props.fromDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.handleDateChange(\"fromDate\", date)}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"todate\"}\r\n                            label={this.props.intl.formatMessage({ id:\"IDS_TO\"})}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id:\"IDS_TO\"})}\r\n                            selected={this.props.toDate}\r\n                            value={this.props.toDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.handleDateChange(\"toDate\", date)}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id:\"IDS_SAMPLETYPE\"})}\r\n                            placeholder={this.props.intl.formatMessage({ id:\"IDS_SAMPLETYPE\"})}\r\n                            name=\"nsampletypecode\"\r\n                            optionId=\"nsampletypecode\"\r\n                            optionValue=\"ssampletypename\"\r\n                            className='form-control'\r\n                            options={this.props.SampleType}\r\n                            value={this.props.SampleTypeValue? { \"label\": this.props.SampleTypeValue.ssampletypename, \"value\": this.props.SampleTypeValue.nsampletypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event)=>this.props.onFilterComboChange(event,\"nsampletypecode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id:\"IDS_REGISTRATIONTYPE\"})}\r\n                            placeholder={this.props.intl.formatMessage({ id:\"IDS_REGISTRATIONTYPE\"})}\r\n                            name=\"nregtypecode\"\r\n                            className='form-control'\r\n                            options={this.props.RegType}\r\n                            value={this.props.RegTypeValue? { \"label\": this.props.RegTypeValue.sregtypename, \"value\": this.props.RegTypeValue.nregtypecode } : \"\"}\r\n                            optionId=\"nregtypecode\"\r\n                            optionValue=\"sregtypename\"\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event)=>this.props.onFilterComboChange(event,\"nregtypecode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id:\"IDS_REGISTRATIONSUBTYPE\"})}\r\n                            placeholder={this.props.intl.formatMessage({ id:\"IDS_REGISTRATIONSUBTYPE\"})}\r\n                            name=\"nregsubtypecode\"\r\n                            optionId=\"nregsubtypecode\"\r\n                            optionValue=\"sregsubtypename\"\r\n                            className='form-control'\r\n                            options={this.props.RegSubType}\r\n                            value={this.props.RegSubTypeValue? { \"label\": this.props.RegSubTypeValue.sregsubtypename, \"value\": this.props.RegSubTypeValue.nregsubtypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event)=>this.props.onFilterComboChange(event,\"nregsubtypecode\")}\r\n                        />\r\n                    </Col>                   \r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id:\"IDS_TESTSTATUS\"})}\r\n                            placeholder={this.props.intl.formatMessage({ id:\"IDS_TESTSTATUS\"})}\r\n                            name=\"ntransactionstatus\"\r\n                            optionId=\"ntransactionstatus\"\r\n                            optionValue=\"stransdisplaystatus\"\r\n                            className='form-control'\r\n                            options={this.props.FilterStatus}\r\n                            value={this.props.FilterStatusValue? { \"label\": this.props.FilterStatusValue.stransdisplaystatus, \"value\": this.props.FilterStatusValue.ntransactionstatus } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event)=>this.props.onFilterComboChange(event,\"ntransactionstatus\")}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                {!this.state.showMore ? <button className=\"btn_sidebar_open\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faAngleDoubleRight} /> </button> : ''}    \r\n                       <div className={`side_more_filter ${this.state.showMore ? 'active' : ''} `} >\r\n                                      <button className=\"btn_sidebar_close\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faTimes} /> </button>    \r\n                                      <Row>\r\n                                          <Col md={12}>\r\n                                              <FormSelectSearch\r\n                                                  formLabel={this.props.intl.formatMessage({ id:\"IDS_CONFIGVERSION\"})}\r\n                                                  placeholder={this.props.intl.formatMessage({ id:\"IDS_CONFIGVERSION\"})}\r\n                                                  name=\"napprovalconfigversioncode\"\r\n                                                  optionId=\"napprovalconfigversioncode\"\r\n                                                  optionValue=\"sversionname\"\r\n                                                  className='form-control'\r\n                                                  options={this.props.ApprovalVersion}\r\n                                                  value={this.props.ApprovalVersionValue? { \"label\": this.props.ApprovalVersionValue.sversionname, \"value\": this.props.ApprovalVersionValue.napprovalconfigversioncode } : \"\"}\r\n                                                  isMandatory={false}\r\n                                                  isMulti={false}\r\n                                                  isSearchable={false}\r\n                                                  isDisabled={false}\r\n                                                  alphabeticalSort={false}\r\n                                                  isClearable={false}\r\n                                                  onChange={(event)=>this.props.onFilterComboChange(event,\"napprovalconfigversioncode\")}\r\n                                              />\r\n                                               {/* {this.props.RegSubTypeValue.nneedtemplatebasedflow? */}\r\n                                                <FormSelectSearch\r\n                                                    formLabel={this.props.intl.formatMessage({ id:\"IDS_DESIGNTEMPLATE\"})}\r\n                                                    placeholder={this.props.intl.formatMessage({ id:\"IDS_DESIGNTEMPLATE\"})}\r\n                                                    name=\"ndesigntemplatemappingcode\"\r\n                                                    optionId=\"ndesigntemplatemappingcode\"\r\n                                                    optionValue=\"sregtemplatename\"\r\n                                                    className='form-control'\r\n                                                    options={this.props.DynamicDesignMapping}\r\n                                                    value={this.props.DesignTemplateMappingValue? { \"label\": this.props.DesignTemplateMappingValue.sregtemplatename, \"value\": this.props.DesignTemplateMappingValue.ndesigntemplatemappingcode } : \"\"}\r\n                                                    isMandatory={false}\r\n                                                    isMulti={false}\r\n                                                    isSearchable={false}\r\n                                                    isDisabled={false}\r\n                                                    alphabeticalSort={false}\r\n                                                    isClearable={false}\r\n                                                    onChange={(event)=>this.props.onFilterComboChange(event,\"ndesigntemplatemappingcode\")}\r\n                                                />\r\n                                            {/*:\"\"} */}\r\n                                              <FormSelectSearch\r\n                                                  formLabel={this.props.intl.formatMessage({ id:\"IDS_SECTION\"})}\r\n                                                  placeholder={this.props.intl.formatMessage({ id:\"IDS_SECTION\"})}\r\n                                                  name=\"nsectioncode\"\r\n                                                  optionId=\"nsectioncode\"\r\n                                                  optionValue=\"ssectionname\"\r\n                                                  className='form-control'\r\n                                                  options={this.props.UserSection||[]}\r\n                                                  value={this.props.UserSectionValue? { \"label\": this.props.UserSectionValue.ssectionname, \"value\": this.props.UserSectionValue.nsectioncode } : \"\"}\r\n                                                  isMandatory={false}\r\n                                                  isMulti={false}\r\n                                                  isSearchable={true}\r\n                                                  isDisabled={false}\r\n                                                  alphabeticalSort={false}\r\n                                                  isClearable={false}\r\n                                                  onChange={(event)=>this.props.onFilterComboChange(event,\"nsectioncode\")}\r\n                                              />\r\n                                               <FormSelectSearch\r\n                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                    name=\"ntestcode\"\r\n                                                    optionId=\"ntestcode\"\r\n                                                    optionValue=\"stestsynonym\"\r\n                                                    className='form-control'\r\n                                                    options={this.props.Test||[]}\r\n                                                    value={this.props.TestValue ? { \"label\": this.props.TestValue.stestsynonym, \"value\": this.props.TestValue.ntestcode } : \"\"}\r\n                                                    isMandatory={false}\r\n                                                    isMulti={false}\r\n                                                    isSearchable={true}\r\n                                                    isDisabled={false}\r\n                                                    alphabeticalSort={false}\r\n                                                    isClearable={false}\r\n                                                    onChange={(event) => this.props.onFilterComboChange(event, \"ntestcode\")}\r\n                                                />\r\n                                              \r\n                                               \r\n                                          </Col>\r\n                                      </Row>\r\n                                  </div>  \r\n            </div> \r\n        );\r\n    }\r\n}\r\nexport default injectIntl(TesWiseMyJobsFilter)"]},"metadata":{},"sourceType":"module"}