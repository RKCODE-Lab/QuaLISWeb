{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\AddSubSample.jsx\";\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport { Col, Nav, Row } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\nimport { HeaderSpan } from './registration.styled';\n\nclass AddSubSample extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_COMPONENT\"\n      }),\n      isSearchable: true,\n      name: \"ncomponentcode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      options: this.props.Component,\n      alphabeticalSort: \"true\",\n      optionId: \"ncomponentcode\",\n      optionValue: \"scomponentname\",\n      value: this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\",\n      defaultValue: this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\",\n      closeMenuOnSelect: true //isDisabled={true}\n      ,\n      onChange: event => this.props.onComponentChange(event, 'ncomponentcode'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DynamicSlideout, {\n      editfield: this.props.childoperation === \"update\" ? this.props.editfield ? this.props.editfield['subsampleeditable'] : undefined : undefined,\n      selectedRecord: this.props.selectComponent,\n      templateData: this.props.templateData,\n      handleChange: this.props.handleChange,\n      handleDateChange: this.props.handleDateChange,\n      onInputOnChange: this.props.onInputOnChange,\n      onNumericInputChange: this.props.onNumericInputChange,\n      comboData: this.props.comboData,\n      onComboChange: this.props.onComboChange,\n      userInfo: this.props.userInfo,\n      timeZoneList: this.props.timeZoneList,\n      defaultTimeZone: this.props.defaultTimeZone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    })), this.props.childoperation === \"create\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      style: {\n        \"bottom\": \"18px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDTEST\",\n      defaultMessage: \"Add Test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-left\" //onClick={(e) => this.props.AddSpec(e)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(FormMultiSelect, {\n      name: \"ntestgrouptestcode\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_TESTNAME\"\n      }),\n      options: this.props.TestCombined || [],\n      optionId: \"ntestgrouptestcode\",\n      optionValue: \"stestsynonym\",\n      value: this.props.selectedTestData && this.props.selectedTestData[\"ntestgrouptestcode\"] ? this.props.selectedTestData[\"ntestgrouptestcode\"] : [],\n      isMandatory: false,\n      isClearable: true,\n      disableSearch: false,\n      disabled: false,\n      closeMenuOnSelect: false,\n      alphabeticalSort: true,\n      onChange: event => this.props.TestChange(event, \"ntestgrouptestcode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    })) : \"\");\n  }\n\n}\n\nexport default injectIntl(AddSubSample);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/AddSubSample.jsx"],"names":["faPlus","FontAwesomeIcon","React","Component","Col","Nav","Row","FormattedMessage","injectIntl","FormInput","FormMultiSelect","FormSelectSearch","DynamicSlideout","HeaderSpan","AddSubSample","render","props","intl","formatMessage","id","selectComponent","event","onComponentChange","childoperation","editfield","undefined","templateData","handleChange","handleDateChange","onInputOnChange","onNumericInputChange","comboData","onComboChange","userInfo","timeZoneList","defaultTimeZone","TestCombined","selectedTestData","TestChange"],"mappings":"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","sourcesContent":["import { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { Component } from 'react';\r\nimport { Col, Nav, Row } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\r\nimport { HeaderSpan } from './registration.styled';\r\n\r\nclass AddSubSample extends Component {\r\n  \r\n    render() {\r\n        return (\r\n            <Row>\r\n                 <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={this.props.intl.formatMessage({ id: \"IDS_COMPONENT\" })}\r\n                        isSearchable={true}\r\n                        name={\"ncomponentcode\"}\r\n                        isDisabled={false}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isMandatory={false}\r\n                        options={this.props.Component}\r\n                        alphabeticalSort=\"true\"\r\n                        optionId=\"ncomponentcode\"\r\n                        optionValue=\"scomponentname\"\r\n                        value={this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\"}\r\n                        defaultValue={this.props.selectComponent ? this.props.selectComponent[\"ncomponentcode\"] : \"\"}\r\n                        closeMenuOnSelect={true}\r\n                        //isDisabled={true}\r\n                        onChange={(event) => this.props.onComponentChange(event, 'ncomponentcode')}>\r\n                            \r\n                    </FormSelectSearch> \r\n                    </Col>\r\n                {/* </Col>  */}\r\n                <Col md={12}>\r\n                <DynamicSlideout\r\n                    editfield={this.props.childoperation===\"update\"?\r\n                    this.props.editfield?this.props.editfield['subsampleeditable']:undefined:undefined}\r\n                    selectedRecord={this.props.selectComponent}\r\n                    templateData={this.props.templateData}\r\n                    handleChange={this.props.handleChange}\r\n                    handleDateChange={this.props.handleDateChange}\r\n                    onInputOnChange={this.props.onInputOnChange}\r\n                    onNumericInputChange={this.props.onNumericInputChange}\r\n                    comboData={this.props.comboData}\r\n                    onComboChange={this.props.onComboChange}\r\n                    userInfo={this.props.userInfo}\r\n                    timeZoneList={this.props.timeZoneList}\r\n                    defaultTimeZone={this.props.defaultTimeZone}\r\n                />\r\n                </Col>\r\n              \r\n              {/* <Col md={12}> */}\r\n              {this.props.childoperation===\"create\"?\r\n                <Col md={12}>\r\n               \r\n                    <Row noGutters={true}>\r\n                        {/* <Row noGutters={true}> */}\r\n                        <Col md={12} className=\"p-0\">\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                        <HeaderSpan style={{ \"bottom\": \"18px\" }}>\r\n                                            <FormattedMessage id='IDS_ADDTEST' defaultMessage='Add Test' />\r\n                                        </HeaderSpan>\r\n                                    <Nav.Link className=\"add-txt-btn text-left\"\r\n                                    //onClick={(e) => this.props.AddSpec(e)}\r\n                                    >\r\n                                        {/* <FontAwesomeIcon icon={faPlus} /> { }{ } */}\r\n                                        {/* <FormattedMessage id='IDS_TEST' defaultMessage='Test' /> */}\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                 {/* </Col> */}\r\n                 {/* <Col md={12}> */}\r\n                    <FormMultiSelect\r\n                        name={\"ntestgrouptestcode\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                        options={this.props.TestCombined || []}\r\n                        optionId={\"ntestgrouptestcode\"}\r\n                        optionValue=\"stestsynonym\"\r\n                        value={this.props.selectedTestData && this.props.selectedTestData[\"ntestgrouptestcode\"] ?\r\n                            this.props.selectedTestData[\"ntestgrouptestcode\"] : []}\r\n                        isMandatory={false}\r\n                        isClearable={true}\r\n                        disableSearch={false}\r\n                        disabled={false}\r\n                        closeMenuOnSelect={false}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => this.props.TestChange(event, \"ntestgrouptestcode\")}\r\n\r\n                    />  \r\n                </Col>\r\n                :\"\"}\r\n                  {/* </Col> */}\r\n                  \r\n\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(AddSubSample);"]},"metadata":{},"sourceType":"module"}