{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';//import { sortData, getComboLabelValue, searchData } from '../components/CommonScript'\nimport{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{intl}from'../components/App';export function getKpiBandComboService(kpibandparam){return function(dispatch){if(kpibandparam.operation===\"create\"||kpibandparam.operation===\"update\"){var productService=rsapi.post(\"kpiband/getProduct\",{userinfo:kpibandparam.userInfo});var periodService=rsapi.post(\"kpiband/getPeriod\",{ncontrolcode:kpibandparam.ncontrolCode,userinfo:kpibandparam.userInfo});// const periodService =  rsapi.post(\"period/getPeriodByControl\", {\n//     \"ncontrolcode\": kpibandparam.ncontrolCode,\n//     \"userinfo\": kpibandparam.userInfo\n// })\nvar urlArray=[];var selectedId=null;if(kpibandparam.operation===\"create\"){urlArray=[productService,periodService];}else{var _rsapi$post;var kpiBandById=rsapi.post(\"kpiband/getActiveKpiBandById\",(_rsapi$post={},_defineProperty(_rsapi$post,kpibandparam.primaryKeyField,kpibandparam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",kpibandparam.userInfo),_rsapi$post));urlArray=[productService,periodService,kpiBandById];selectedId=kpibandparam.primaryKeyValue;}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var product=[];var periodBefore=[];var periodAfter=[];var selectedRecord={};if(kpibandparam.operation===\"update\"){selectedRecord=response[2].data;product.push({\"value\":response[2].data[\"nproductcode\"],\"label\":response[2].data[\"sproductname\"]});periodBefore.push({\"value\":response[2].data[\"nbeforeperiodcode\"],\"label\":response[2].data[\"sbeforeperiodname\"]});periodAfter.push({\"value\":response[2].data[\"nafterperiodcode\"],\"label\":response[2].data[\"safterperiodname\"]});selectedRecord[\"nproductcode\"]=product[0];selectedRecord[\"nbeforeperiodcode\"]=periodBefore[0];selectedRecord[\"nafterperiodcode\"]=periodAfter[0];}// else {\n//     selectedRecord[\"ntransactionstatus\"] = 1;\n// }\ndispatch({type:DEFAULT_RETURN,payload:{productList:response[0].data||[],periodList:response[1].data||[],selectedRecord:selectedRecord,openModal:true,operation:kpibandparam.operation,screenName:kpibandparam.screenName,ncontrolCode:kpibandparam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}// else {\n//     toast.warn(this.props.formatMessage({ id: masterData.SelectedMAHolder.stranstatus }));\n// }\n};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/KpiBandAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","intl","getKpiBandComboService","kpibandparam","dispatch","operation","productService","post","userinfo","userInfo","periodService","ncontrolcode","ncontrolCode","urlArray","selectedId","kpiBandById","primaryKeyField","primaryKeyValue","all","then","response","product","periodBefore","periodAfter","selectedRecord","data","push","type","payload","productList","periodList","openModal","screenName","loading","catch","error","status","formatMessage","id","message","warn"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\n//import { sortData, getComboLabelValue, searchData } from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\n\r\n\r\nexport function getKpiBandComboService(kpibandparam) {\r\n    return function (dispatch) {\r\n\r\n        if (kpibandparam.operation === \"create\" || kpibandparam.operation === \"update\") {\r\n\r\n            const productService = rsapi.post(\"kpiband/getProduct\", { userinfo: kpibandparam.userInfo });\r\n            const periodService = rsapi.post(\"kpiband/getPeriod\", \r\n            { ncontrolcode:kpibandparam.ncontrolCode,userinfo: kpibandparam.userInfo });\r\n            // const periodService =  rsapi.post(\"period/getPeriodByControl\", {\r\n            //     \"ncontrolcode\": kpibandparam.ncontrolCode,\r\n            //     \"userinfo\": kpibandparam.userInfo\r\n            // })\r\n\r\n            let urlArray = [];\r\n            let selectedId = null;\r\n            if (kpibandparam.operation === \"create\") {\r\n\r\n                urlArray = [productService, periodService];\r\n            }\r\n            else {\r\n                const kpiBandById = rsapi.post(\"kpiband/getActiveKpiBandById\", { [kpibandparam.primaryKeyField]: kpibandparam.primaryKeyValue, \"userinfo\": kpibandparam.userInfo });\r\n\r\n                urlArray = [productService, periodService, kpiBandById];\r\n                selectedId = kpibandparam.primaryKeyValue;\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    let product = [];\r\n                    let periodBefore = [];\r\n                    let periodAfter = [];\r\n\r\n                    let selectedRecord = {};\r\n\r\n                    if (kpibandparam.operation === \"update\") {\r\n                        selectedRecord = response[2].data;\r\n\r\n                        product.push({ \"value\": response[2].data[\"nproductcode\"], \"label\": response[2].data[\"sproductname\"] });\r\n                        periodBefore.push({ \"value\": response[2].data[\"nbeforeperiodcode\"], \"label\": response[2].data[\"sbeforeperiodname\"] });\r\n                        periodAfter.push({ \"value\": response[2].data[\"nafterperiodcode\"], \"label\": response[2].data[\"safterperiodname\"] });\r\n\r\n\r\n                        selectedRecord[\"nproductcode\"] = product[0];\r\n                        selectedRecord[\"nbeforeperiodcode\"] = periodBefore[0];\r\n                        selectedRecord[\"nafterperiodcode\"] = periodAfter[0];\r\n\r\n\r\n                    }\r\n                    // else {\r\n                    //     selectedRecord[\"ntransactionstatus\"] = 1;\r\n\r\n\r\n                    // }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            productList: response[0].data || [],\r\n                            periodList: response[1].data || [],\r\n                            selectedRecord, openModal: true,\r\n                            operation: kpibandparam.operation, screenName: kpibandparam.screenName,\r\n                            ncontrolCode: kpibandparam.ncontrolCode, loading: false, selectedId\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        // else {\r\n        //     toast.warn(this.props.formatMessage({ id: masterData.SelectedMAHolder.stranstatus }));\r\n        // }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}