{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\ParameterTabAccordion.jsx\";\nimport React from 'react';\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport TestFormulaTab from './TestFormulaTab';\nimport TestSpecificationTab from './TestSpecificationTab';\nimport PredefinedParameterTab from './PredefinedParameterTab';\nimport { parameterType, transactionStatus } from '../../components/Enumeration'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n//import ReactTooltip from 'react-tooltip';\n\nconst ParameterTabAccordion = props => {\n  let dataFieldName = \"\";\n\n  if (props.testParameter[\"nparametertypecode\"] === parameterType.NUMERIC) {\n    dataFieldName = [{\n      \"sparametersynonym\": \"IDS_PARAMETERSYNONYM\"\n    }, {\n      \"sdisplaystatus\": \"IDS_PARAMETERTYPE\"\n    }, {\n      \"nroundingdigits\": \"IDS_ROUNDINGDIGITS\"\n    }, {\n      \"sunitname\": \"IDS_UNIT\"\n    }, {\n      \"sunitname1\": \"IDS_CONVERSIONUNIT\"\n    }, //ALPD-3521\n    {\n      \"soperator\": \"IDS_CONVERSIONOPERATOR\"\n    }, {\n      \"nconversionfactor\": \"IDS_CONVERSIONFACTOR\"\n    }, {\n      \"sresultaccuracyname\": \"IDS_RESULTACCURACY\"\n    }, {\n      \"stransdisplaystatus\": \"IDS_DELTACHECK\"\n    }];\n  } else {\n    dataFieldName = [{\n      \"sparametersynonym\": \"IDS_PARAMETERSYNONYM\"\n    }, {\n      \"sdisplaystatus\": \"IDS_PARAMETERTYPE\"\n    }];\n  }\n\n  const editParameterId = props.controlMap.has(\"EditParameter\") && props.controlMap.get(\"EditParameter\").ncontrolcode;\n  const deleteParameterId = props.controlMap.has(\"DeleteParameter\") && props.controlMap.get(\"DeleteParameter\").ncontrolcode;\n  const {\n    testParameter,\n    selectedParameter,\n    userInfo,\n    testFormula,\n    testParameterNumeric,\n    testPredefinedParameter,\n    SelectedTest\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_EDIT\"\n    }) // data-for=\"tooltip_list_wrap\"\n    ,\n    hidden: props.userRoleControlRights.indexOf(editParameterId) === -1,\n    onClick: () => props.addParameter(\"update\", props.selectedParameter, props.userInfo, editParameterId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPencilAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_DELETE\"\n    }) //   data-for=\"tooltip_list_wrap\"\n    ,\n    hidden: props.userRoleControlRights.indexOf(deleteParameterId) === -1,\n    onClick: () => props.ConfirmDelete(testParameter, \"delete\", deleteParameterId, \"TestParameter\", \"openChildModal\", \"openChildModal\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, dataFieldName.map(item => {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, props.intl.formatMessage({\n      id: Object.values(item)[0]\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, selectedParameter[Object.keys(item)[0]])));\n  })), selectedParameter.nparametertypecode === parameterType.NUMERIC && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TestFormulaTab, {\n    primaykeyName: \"ntestformulacode\",\n    formulaList: testFormula,\n    selectedParameter: selectedParameter,\n    userInfo: userInfo,\n    methodUrl: \"TestFormula\",\n    addId: props.controlMap.has(\"AddFormula\") && props.controlMap.get(\"AddFormula\").ncontrolcode,\n    addPreDefinedFormulaId: props.controlMap.has(\"AddPredefinedFormula\") && props.controlMap.get(\"AddPredefinedFormula\").ncontrolcode,\n    deleteId: props.controlMap.has(\"DeleteFormula\") && props.controlMap.get(\"DeleteFormula\").ncontrolcode,\n    defaultFormulaId: props.controlMap.has(\"DefaultTestFormula\") && props.controlMap.get(\"DefaultTestFormula\").ncontrolcode,\n    userRoleControlRights: props.userRoleControlRights,\n    deleteAction: props.deleteAction,\n    onSwitchChange: props.onSwitchChange,\n    openModal: props.addFormula,\n    openPredefinedModal: props.openPredefinedModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TestSpecificationTab, {\n    parameterNumericList: testParameterNumeric,\n    selectedParameter: selectedParameter,\n    userInfo: userInfo,\n    addId: SelectedTest.nclinicaltyperequired === transactionStatus.YES ? props.controlMap.has(\"AddClinicalSpec\") && props.controlMap.get(\"AddClinicalSpec\").ncontrolcode : props.controlMap.has(\"AddSpecification\") && props.controlMap.get(\"AddSpecification\").ncontrolcode,\n    editId: SelectedTest.nclinicaltyperequired === transactionStatus.YES ? props.controlMap.has(\"EditClinicalSpec\") && props.controlMap.get(\"EditClinicalSpec\").ncontrolcode : props.controlMap.has(\"EditSpecification\") && props.controlMap.get(\"EditSpecification\").ncontrolcode,\n    deleteId: SelectedTest.nclinicaltyperequired === transactionStatus.YES ? props.controlMap.has(\"DeleteClinicalSpec\") && props.controlMap.get(\"DeleteClinicalSpec\").ncontrolcode : props.controlMap.has(\"DeleteSpecification\") && props.controlMap.get(\"DeleteSpecification\").ncontrolcode,\n    userRoleControlRights: props.userRoleControlRights,\n    deleteAction: props.deleteAction,\n    onSwitchChange: props.onSwitchChange,\n    openModal: props.addParameterSpecification,\n    openModalSpec: props.addClinicalSpecification,\n    grade: props.grade,\n    SelectedTest: SelectedTest,\n    hasDynamicColSize: true,\n    controlMap: props.controlMap,\n    TestMasterClinicalSpec: props.masterData.TestMasterClinicalSpec,\n    data: props.masterData.TestMasterClinicalSpec,\n    dataState: props.dataState,\n    dataStateChange: props.dataStateChange,\n    EditSpecDetails: props.EditSpecDetails,\n    deleteRecord: props.deleteRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 22\n    }\n  })), selectedParameter.nparametertypecode === parameterType.PREDEFINED && /*#__PURE__*/React.createElement(PredefinedParameterTab, {\n    primaryKeyName: \"ntestpredefinedcode\",\n    predefinedParameterList: testPredefinedParameter,\n    selectedParameter: selectedParameter,\n    userInfo: userInfo,\n    methodUrl: \"TestPredefinedParameter\",\n    addId: props.controlMap.has(\"AddCodedResult\") && props.controlMap.get(\"AddCodedResult\").ncontrolcode,\n    editId: props.controlMap.has(\"EditCodedResult\") && props.controlMap.get(\"EditCodedResult\").ncontrolcode,\n    deleteId: props.controlMap.has(\"DeleteCodedResult\") && props.controlMap.get(\"DeleteCodedResult\").ncontrolcode,\n    viewId: props.controlMap.has(\"ViewSubCodedResult\") && props.controlMap.get(\"ViewSubCodedResult\").ncontrolcode,\n    userRoleControlRights: props.userRoleControlRights,\n    deleteAction: props.deleteAction,\n    onSwitchChange: props.onSwitchChange,\n    openModal: props.addCodedResult,\n    addSubCodedResult: props.addSubCodedResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default injectIntl(ParameterTabAccordion);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/testmanagement/ParameterTabAccordion.jsx"],"names":["React","faPencilAlt","faTrashAlt","injectIntl","Row","Col","Nav","FormGroup","FormLabel","FontAwesomeIcon","ReadOnlyText","TestFormulaTab","TestSpecificationTab","PredefinedParameterTab","parameterType","transactionStatus","ParameterTabAccordion","props","dataFieldName","testParameter","NUMERIC","editParameterId","controlMap","has","get","ncontrolcode","deleteParameterId","selectedParameter","userInfo","testFormula","testParameterNumeric","testPredefinedParameter","SelectedTest","intl","formatMessage","id","userRoleControlRights","indexOf","addParameter","ConfirmDelete","map","item","Object","values","keys","nparametertypecode","deleteAction","onSwitchChange","addFormula","openPredefinedModal","nclinicaltyperequired","YES","addParameterSpecification","addClinicalSpecification","grade","masterData","TestMasterClinicalSpec","dataState","dataStateChange","EditSpecDetails","deleteRecord","PREDEFINED","addCodedResult","addSubCodedResult"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { faPencilAlt, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport TestFormulaTab from './TestFormulaTab';\r\nimport TestSpecificationTab from './TestSpecificationTab';\r\nimport PredefinedParameterTab from './PredefinedParameterTab';\r\nimport { parameterType, transactionStatus } from '../../components/Enumeration';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\n//import ReactTooltip from 'react-tooltip';\r\n\r\nconst ParameterTabAccordion = (props) => {\r\n    let dataFieldName = \"\";\r\n    if (props.testParameter[\"nparametertypecode\"] === parameterType.NUMERIC) {\r\n        dataFieldName = [{ \"sparametersynonym\": \"IDS_PARAMETERSYNONYM\" }, { \"sdisplaystatus\": \"IDS_PARAMETERTYPE\" },\r\n        { \"nroundingdigits\": \"IDS_ROUNDINGDIGITS\" }, { \"sunitname\": \"IDS_UNIT\" },{\"sunitname1\": \"IDS_CONVERSIONUNIT\"},\r\n        //ALPD-3521\r\n\t\t{\"soperator\":\"IDS_CONVERSIONOPERATOR\"},\r\n        { \"nconversionfactor\": \"IDS_CONVERSIONFACTOR\" },{\"sresultaccuracyname\":\"IDS_RESULTACCURACY\"},\r\n        { \"stransdisplaystatus\": \"IDS_DELTACHECK\" }];\r\n    } else {\r\n        dataFieldName = [{ \"sparametersynonym\": \"IDS_PARAMETERSYNONYM\" }, { \"sdisplaystatus\": \"IDS_PARAMETERTYPE\" }];\r\n    }\r\n    const editParameterId = props.controlMap.has(\"EditParameter\") && props.controlMap.get(\"EditParameter\").ncontrolcode;\r\n    const deleteParameterId = props.controlMap.has(\"DeleteParameter\") && props.controlMap.get(\"DeleteParameter\").ncontrolcode;\r\n    const { testParameter, selectedParameter, userInfo, testFormula, testParameterNumeric, testPredefinedParameter,SelectedTest } = props;\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12} className=\"d-flex justify-content-end\">\r\n                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                    <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                       // data-for=\"tooltip_list_wrap\"\r\n                        hidden={props.userRoleControlRights.indexOf(editParameterId) === -1}\r\n                        onClick={() => props.addParameter(\"update\", props.selectedParameter, props.userInfo, editParameterId)}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </Nav.Link>\r\n                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                        data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                     //   data-for=\"tooltip_list_wrap\"\r\n                        hidden={props.userRoleControlRights.indexOf(deleteParameterId) === -1}\r\n                        onClick={() => props.ConfirmDelete(testParameter, \"delete\", deleteParameterId, \"TestParameter\", \"openChildModal\", \"openChildModal\")}\r\n                    >\r\n                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                        {/* <ConfirmDialog\r\n                                name=\"deleteMessage\"\r\n                                message={props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                doLabel={props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                doNotLabel={props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                icon={faTrashAlt}\r\n                                // title={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                hidden={props.userRoleControlRights && props.userRoleControlRights.indexOf(deleteParameterId) === -1}\r\n                                handleClickDelete={() => props.deleteAction(testParameter, \"delete\", deleteParameterId, \"TestParameter\", \"openChildModal\", \"openChildModal\")}\r\n                            /> */}\r\n                    </Nav.Link>\r\n                    {/* </Tooltip> */}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {dataFieldName.map(item => {\r\n                    return (\r\n                        <Col md=\"6\">\r\n                            <FormGroup>\r\n                                <FormLabel>{props.intl.formatMessage({ id: Object.values(item)[0] })}</FormLabel>\r\n                                <ReadOnlyText>{selectedParameter[Object.keys(item)[0]]}</ReadOnlyText>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n\r\n            {selectedParameter.nparametertypecode === parameterType.NUMERIC &&\r\n                <>\r\n                    <TestFormulaTab\r\n                        primaykeyName=\"ntestformulacode\"\r\n                        formulaList={testFormula}\r\n                        selectedParameter={selectedParameter}\r\n                        userInfo={userInfo}\r\n                        methodUrl=\"TestFormula\"\r\n                        addId={props.controlMap.has(\"AddFormula\") && props.controlMap.get(\"AddFormula\").ncontrolcode}\r\n                        addPreDefinedFormulaId={props.controlMap.has(\"AddPredefinedFormula\") && props.controlMap.get(\"AddPredefinedFormula\").ncontrolcode}\r\n                        deleteId={props.controlMap.has(\"DeleteFormula\") && props.controlMap.get(\"DeleteFormula\").ncontrolcode}\r\n                        defaultFormulaId={props.controlMap.has(\"DefaultTestFormula\") && props.controlMap.get(\"DefaultTestFormula\").ncontrolcode}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        deleteAction={props.deleteAction}\r\n                        onSwitchChange={props.onSwitchChange}\r\n                        openModal={props.addFormula}\r\n                        openPredefinedModal={props.openPredefinedModal}\r\n                    />\r\n                     <TestSpecificationTab\r\n                        parameterNumericList={testParameterNumeric}\r\n                        selectedParameter={selectedParameter}\r\n                        userInfo={userInfo}\r\n                        addId={SelectedTest.nclinicaltyperequired===transactionStatus.YES?props.controlMap.has(\"AddClinicalSpec\") && props.controlMap.get(\"AddClinicalSpec\").ncontrolcode:props.controlMap.has(\"AddSpecification\") && props.controlMap.get(\"AddSpecification\").ncontrolcode}\r\n                        editId={SelectedTest.nclinicaltyperequired===transactionStatus.YES?props.controlMap.has(\"EditClinicalSpec\") && props.controlMap.get(\"EditClinicalSpec\").ncontrolcode:props.controlMap.has(\"EditSpecification\") && props.controlMap.get(\"EditSpecification\").ncontrolcode}\r\n                        deleteId={SelectedTest.nclinicaltyperequired===transactionStatus.YES?props.controlMap.has(\"DeleteClinicalSpec\") && props.controlMap.get(\"DeleteClinicalSpec\").ncontrolcode:props.controlMap.has(\"DeleteSpecification\") && props.controlMap.get(\"DeleteSpecification\").ncontrolcode}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        deleteAction={props.deleteAction}\r\n                        onSwitchChange={props.onSwitchChange}\r\n                        openModal={props.addParameterSpecification}\r\n                        openModalSpec={props.addClinicalSpecification}\r\n                        grade={props.grade}\r\n                        SelectedTest={SelectedTest}\r\n                        hasDynamicColSize={true}\r\n                        controlMap={props.controlMap}\r\n                        TestMasterClinicalSpec={props.masterData.TestMasterClinicalSpec}\r\n                        data={props.masterData.TestMasterClinicalSpec}\r\n                        dataState={props.dataState}\r\n                       dataStateChange={props.dataStateChange}\r\n                       EditSpecDetails={props.EditSpecDetails}\r\n                       deleteRecord={props.deleteRecord}\r\n                       \r\n                    /> \r\n                </>\r\n            }\r\n            {selectedParameter.nparametertypecode === parameterType.PREDEFINED &&\r\n                <PredefinedParameterTab\r\n                    primaryKeyName=\"ntestpredefinedcode\"\r\n                    predefinedParameterList={testPredefinedParameter}\r\n                    selectedParameter={selectedParameter}\r\n                    userInfo={userInfo}\r\n                    methodUrl=\"TestPredefinedParameter\"\r\n                    addId={props.controlMap.has(\"AddCodedResult\") && props.controlMap.get(\"AddCodedResult\").ncontrolcode}\r\n                    editId={props.controlMap.has(\"EditCodedResult\") && props.controlMap.get(\"EditCodedResult\").ncontrolcode}\r\n                    deleteId={props.controlMap.has(\"DeleteCodedResult\") && props.controlMap.get(\"DeleteCodedResult\").ncontrolcode}\r\n                    viewId={props.controlMap.has(\"ViewSubCodedResult\") && props.controlMap.get(\"ViewSubCodedResult\").ncontrolcode}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    deleteAction={props.deleteAction}\r\n                    onSwitchChange={props.onSwitchChange}\r\n                    openModal={props.addCodedResult}\r\n                    addSubCodedResult={props.addSubCodedResult}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(ParameterTabAccordion);"]},"metadata":{},"sourceType":"module"}