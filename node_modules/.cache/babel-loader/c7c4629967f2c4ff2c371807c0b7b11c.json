{"ast":null,"code":"import{toast}from\"react-toastify\";import{intl}from\"../../components/App\";export var fnPassMessage=function fnPassMessage(pwdpolicymsg){var msg=\"\";msg=\"\".concat(intl.formatMessage({id:\"IDS_YOURPASSWORDMUSTBE\"}),\" \").concat(pwdpolicymsg[\"nminpasslength\"],\" \").concat(intl.formatMessage({id:\"IDS_CHARACTERS\"}),\" \").concat(intl.formatMessage({id:\"IDS_MAXCHARACTERS\"}),\" \").concat(pwdpolicymsg[\"nmaxpasslength\"],\" \").concat(intl.formatMessage({id:\"IDS_CHARACTERS\"}));if(pwdpolicymsg[\"nminnoofnumberchar\"]>0){msg=\"\".concat(msg,\", \").concat(pwdpolicymsg[\"nminnoofnumberchar\"],\" \").concat(intl.formatMessage({id:\"IDS_NUMERICCHARACTERS\"}));}if(pwdpolicymsg[\"nminnooflowerchar\"]>0){msg=\"\".concat(msg,\", \").concat(pwdpolicymsg[\"nminnooflowerchar\"],\" \").concat(intl.formatMessage({id:\"IDS_LOWERCASECHARACTER\"}));}if(pwdpolicymsg[\"nminnoofupperchar\"]>0){msg=\"\".concat(msg,\", \").concat(pwdpolicymsg[\"nminnoofupperchar\"],\" \").concat(intl.formatMessage({id:\"IDS_UPPERCASECHARACTER\"}));}if(pwdpolicymsg[\"nminnoofspecialchar\"]>0){msg=\"\".concat(msg,\", \").concat(pwdpolicymsg[\"nminnoofspecialchar\"],\" \").concat(intl.formatMessage({id:\"IDS_SPECIALCHARACTERS\"}));}return\"\".concat(msg,\".\");};export var changePasswordValidation=function changePasswordValidation(createPwdRecord,passwordPolicy,sloginid){var snewpassword=createPwdRecord.snewpassword.trim();var sconfirmpassword=createPwdRecord.sconfirmpassword.trim();var soldpassword=createPwdRecord.soldpassword.trim();if(snewpassword===soldpassword){toast.warn(intl.formatMessage({id:\"IDS_NEWANDOLDPASSWORDSHOULDNOTSAME\"}));}else if(sloginid===snewpassword){toast.warn(intl.formatMessage({id:\"IDS_PASSWORDSHOULDNOTSAMEASLOGINID\"}));}else if(sconfirmpassword!==snewpassword){toast.warn(intl.formatMessage({id:\"IDS_PASSWORDNOTMATCHED\"}));}else{return fnValidatePassword(passwordPolicy,snewpassword);}};export var fnValidatePassword=function fnValidatePassword(PasswordPolicy,snewpassword){var passwordPolicy=PasswordPolicy;var passwordletters=snewpassword.split('');var upperCaseCount=0;var lowerCaseCount=0;var specialCharCount=0;var numberCount=0;if(passwordletters.length<passwordPolicy.nminpasslength){toast.info(\"\".concat(intl.formatMessage({id:\"IDS_PASSMINREQUIRED\"}),\" \").concat(passwordPolicy.nminpasslength,\" \").concat(intl.formatMessage({id:\"IDS_CHARACTERS\"})));}else if(passwordletters.length>passwordPolicy.nmaxpasslength){toast.info(\"\".concat(intl.formatMessage({id:\"IDS_PASSWRDLENGTHEXCEED\"}),\" \").concat(passwordPolicy.nmaxpasslength,\" \").concat(intl.formatMessage({id:\"IDS_CHARACTERS\"})));}else if(passwordletters.length>=passwordPolicy.nminpasslength&&passwordletters.length<=passwordPolicy.nmaxpasslength){passwordletters.forEach(function(letters){if(letters.charCodeAt()>=65&&letters.charCodeAt()<=90){upperCaseCount+=1;}else if(letters.charCodeAt()>=97&&letters.charCodeAt()<=122){lowerCaseCount+=1;}else if(letters.charCodeAt()>=48&&letters.charCodeAt()<=57||letters.charCodeAt()>=96&&letters.charCodeAt()<=105){numberCount+=1;}else{specialCharCount+=1;}});if(upperCaseCount<passwordPolicy.nminnoofupperchar){return\"\".concat(intl.formatMessage({id:\"IDS_PASSMINREQUIRED\"}),\" \").concat(passwordPolicy.nminnoofupperchar,\" \").concat(intl.formatMessage({id:\"IDS_UPPERCASECHARACTER\"}));}else if(lowerCaseCount<passwordPolicy.nminnooflowerchar){return\"\".concat(intl.formatMessage({id:\"IDS_PASSMINREQUIRED\"}),\" \").concat(passwordPolicy.nminnooflowerchar,\" \").concat(intl.formatMessage({id:\"IDS_LOWERCASECHARACTER\"}));}else if(specialCharCount<passwordPolicy.nminnoofspecialchar){return\"\".concat(intl.formatMessage({id:\"IDS_PASSMINREQUIRED\"}),\" \").concat(passwordPolicy.nminnoofspecialchar,\" \").concat(intl.formatMessage({id:\"IDS_SPECIALCHARACTERS\"}));}else if(numberCount<passwordPolicy.nminnoofnumberchar){return\"\".concat(intl.formatMessage({id:\"IDS_PASSMINREQUIRED\"}),\" \").concat(passwordPolicy.nminnoofnumberchar,\" \").concat(intl.formatMessage({id:\"IDS_NUMERICCHARACTERS\"}));}else{return 0;}}};","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/Login/LoginCommonFunction.js"],"names":["toast","intl","fnPassMessage","pwdpolicymsg","msg","formatMessage","id","changePasswordValidation","createPwdRecord","passwordPolicy","sloginid","snewpassword","trim","sconfirmpassword","soldpassword","warn","fnValidatePassword","PasswordPolicy","passwordletters","split","upperCaseCount","lowerCaseCount","specialCharCount","numberCount","length","nminpasslength","info","nmaxpasslength","forEach","letters","charCodeAt","nminnoofupperchar","nminnooflowerchar","nminnoofspecialchar","nminnoofnumberchar"],"mappings":"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","sourcesContent":["import {\r\n    toast\r\n} from \"react-toastify\";\r\nimport {\r\n    intl\r\n} from \"../../components/App\";\r\n\r\nexport const fnPassMessage = (pwdpolicymsg) => {\r\n    let msg = ``;\r\n    msg = `${intl.formatMessage({ id: \"IDS_YOURPASSWORDMUSTBE\" })} ${pwdpolicymsg[\"nminpasslength\"]} ${intl.formatMessage({ id: \"IDS_CHARACTERS\" })} ${intl.formatMessage({ id: \"IDS_MAXCHARACTERS\" })} ${pwdpolicymsg[\"nmaxpasslength\"]} ${intl.formatMessage({ id: \"IDS_CHARACTERS\" })}`;\r\n    if (pwdpolicymsg[\"nminnoofnumberchar\"] > 0) {\r\n        msg = `${msg}, ${pwdpolicymsg[\"nminnoofnumberchar\"]} ${intl.formatMessage({ id: \"IDS_NUMERICCHARACTERS\" })}`;\r\n    }\r\n    if (pwdpolicymsg[\"nminnooflowerchar\"] > 0) {\r\n        msg = `${msg}, ${pwdpolicymsg[\"nminnooflowerchar\"]} ${intl.formatMessage({ id: \"IDS_LOWERCASECHARACTER\" })}`;\r\n    }\r\n    if (pwdpolicymsg[\"nminnoofupperchar\"] > 0) {\r\n        msg = `${msg}, ${pwdpolicymsg[\"nminnoofupperchar\"]} ${intl.formatMessage({ id: \"IDS_UPPERCASECHARACTER\" })}`;\r\n    }\r\n    if (pwdpolicymsg[\"nminnoofspecialchar\"] > 0) {\r\n        msg = `${msg}, ${pwdpolicymsg[\"nminnoofspecialchar\"]} ${intl.formatMessage({ id: \"IDS_SPECIALCHARACTERS\" })}`;\r\n    }\r\n    return `${msg}.`;\r\n}\r\n\r\nexport const changePasswordValidation = (createPwdRecord, passwordPolicy, sloginid) => {\r\n    const snewpassword = createPwdRecord.snewpassword.trim();\r\n    const sconfirmpassword = createPwdRecord.sconfirmpassword.trim();\r\n    const soldpassword = createPwdRecord.soldpassword.trim();\r\n    if (snewpassword === soldpassword) {\r\n        toast.warn(intl.formatMessage({\r\n            id: \"IDS_NEWANDOLDPASSWORDSHOULDNOTSAME\"\r\n        }));\r\n    } else if (sloginid === snewpassword) {\r\n        toast.warn(intl.formatMessage({\r\n            id: \"IDS_PASSWORDSHOULDNOTSAMEASLOGINID\"\r\n        }));\r\n    } else if (sconfirmpassword !== snewpassword) {\r\n        toast.warn(intl.formatMessage({\r\n            id: \"IDS_PASSWORDNOTMATCHED\"\r\n        }));\r\n    } else {\r\n        return fnValidatePassword(passwordPolicy, snewpassword);\r\n    }\r\n}\r\n\r\nexport const fnValidatePassword = (PasswordPolicy, snewpassword) => {\r\n    const passwordPolicy = PasswordPolicy;\r\n    const passwordletters = snewpassword.split('');\r\n    let upperCaseCount = 0;\r\n    let lowerCaseCount = 0;\r\n    let specialCharCount = 0;\r\n    let numberCount = 0;\r\n    if (passwordletters.length < passwordPolicy.nminpasslength) {\r\n        toast.info(`${intl.formatMessage({ id: \"IDS_PASSMINREQUIRED\" })} ${passwordPolicy.nminpasslength} ${intl.formatMessage({ id: \"IDS_CHARACTERS\" })}`);\r\n    } else if (passwordletters.length > passwordPolicy.nmaxpasslength) {\r\n        toast.info(`${intl.formatMessage({ id: \"IDS_PASSWRDLENGTHEXCEED\" })} ${passwordPolicy.nmaxpasslength} ${intl.formatMessage({ id: \"IDS_CHARACTERS\" })}`);\r\n    } else if (passwordletters.length >= passwordPolicy.nminpasslength &&\r\n        passwordletters.length <= passwordPolicy.nmaxpasslength) {\r\n        passwordletters.forEach(function (letters) {\r\n            if (letters.charCodeAt() >= 65 && letters.charCodeAt() <= 90) {\r\n                upperCaseCount += 1;\r\n            } else if (letters.charCodeAt() >= 97 && letters.charCodeAt() <= 122) {\r\n                lowerCaseCount += 1;\r\n            } else if ((letters.charCodeAt() >= 48 && letters.charCodeAt() <= 57) ||\r\n                (letters.charCodeAt() >= 96 && letters.charCodeAt() <= 105)) {\r\n                numberCount += 1;\r\n            } else {\r\n                specialCharCount += 1;\r\n            }\r\n        });\r\n        if (upperCaseCount < passwordPolicy.nminnoofupperchar) {\r\n            return `${intl.formatMessage({ id: \"IDS_PASSMINREQUIRED\" })} ${passwordPolicy.nminnoofupperchar} ${intl.formatMessage({ id: \"IDS_UPPERCASECHARACTER\" })}`;\r\n        } else if (lowerCaseCount < passwordPolicy.nminnooflowerchar) {\r\n            return `${intl.formatMessage({ id: \"IDS_PASSMINREQUIRED\" })} ${passwordPolicy.nminnooflowerchar} ${intl.formatMessage({ id: \"IDS_LOWERCASECHARACTER\" })}`;\r\n        } else if (specialCharCount < passwordPolicy.nminnoofspecialchar) {\r\n            return `${intl.formatMessage({ id: \"IDS_PASSMINREQUIRED\" })} ${passwordPolicy.nminnoofspecialchar} ${intl.formatMessage({ id: \"IDS_SPECIALCHARACTERS\" })}`;\r\n        } else if (numberCount < passwordPolicy.nminnoofnumberchar) {\r\n            return `${intl.formatMessage({ id: \"IDS_PASSMINREQUIRED\" })} ${passwordPolicy.nminnoofnumberchar} ${intl.formatMessage({ id: \"IDS_NUMERICCHARACTERS\" })}`;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}