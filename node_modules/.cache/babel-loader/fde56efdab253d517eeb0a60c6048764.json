{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{transactionStatus}from'./../components/Enumeration';export function openEmailTemplateModal(screenName,operation,primaryKeyName,masterData,userInfo,ncontrolcode){return function(dispatch){if(operation===\"create\"||operation===\"update\"){var Tag=rsapi.post(\"/emailtemplate/getEmailTag\",{\"userinfo\":userInfo});var urlArray=[];if(operation===\"create\"){urlArray=[Tag];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};selectedRecord[\"nstatus\"]=transactionStatus.ACTIVE;selectedRecord[\"nemailtemplatecode\"]=0;selectedRecord[\"nemailtagcode\"]='';dispatch({type:DEFAULT_RETURN,payload:{Tag:response[0].data||[],operation:operation,screenName:screenName,selectedRecord:selectedRecord,openModal:true,EmailTagParameter:[],ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch(initRequest(false));if(error.response.status===500){toast.error(error.message);}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}};}export function fetchEmailTemplateById(editParam){return function(dispatch){var _rsapi$post;var URL1=rsapi.post('emailtemplate/getActiveEmailTemplateById',(_rsapi$post={},_defineProperty(_rsapi$post,editParam.primaryKeyField,editParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",editParam.userInfo),_rsapi$post));// const URL2=rsapi.post(\"instrumentcategory/getActiveInstrumentCategoryById\", { [editParam.primaryKeyField] :editParam.primaryKeyValue , \"userinfo\": editParam.userInfo} )\n// const URL3= rsapi.post('instrumentcategory/getInterfacetype',{\"userinfo\":editParam.userInfo})\ndispatch(initRequest(true));Axios.all([URL1]).then(function(response){var selectedRecord={};var selectedId=editParam.primaryKeyValue;selectedRecord=response[0].data[\"EmailTemplate\"][0];var Tag=response[0].data[\"EmailTag\"];selectedRecord[\"nemailtagcode\"]={label:response[0].data[\"EmailTemplate\"][0].stagname,value:response[0].data[\"EmailTemplate\"][0].nemailtagcode};dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,Tag:Tag||[],EmailTagParameter:response[0].data[\"EmailParameter\"]||[],operation:editParam.operation,openModal:true,screenName:editParam.screenName,ncontrolcode:editParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function comboChangeEmailTag(Map,masterData,selectedRecord,value){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/emailtemplate/getEmailTagFilter\",_objectSpread({},Map)).then(function(response){var EmailTagParameter=response.data;dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,EmailTagParameter:EmailTagParameter,selectedRecord:selectedRecord,value:value}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(intl.formatMessage({id:error.message}));});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/EmailTemplateAction.js"],"names":["rsapi","Axios","toast","DEFAULT_RETURN","initRequest","intl","transactionStatus","openEmailTemplateModal","screenName","operation","primaryKeyName","masterData","userInfo","ncontrolcode","dispatch","Tag","post","urlArray","all","then","response","selectedRecord","ACTIVE","type","payload","data","openModal","EmailTagParameter","loading","catch","error","status","message","warn","formatMessage","id","fetchEmailTemplateById","editParam","URL1","primaryKeyField","primaryKeyValue","selectedId","label","stagname","value","nemailtagcode","ncontrolCode","comboChangeEmailTag","Map"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus } from './../components/Enumeration';\r\n\r\n\r\nexport function openEmailTemplateModal(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolcode) {\r\n    return function (dispatch) {\r\n        if (operation === \"create\" || operation === \"update\") {\r\n            const Tag = rsapi.post(\"/emailtemplate/getEmailTag\", {\r\n                \"userinfo\": userInfo\r\n            });\r\n            let urlArray = [];\r\n            if (operation === \"create\") {\r\n\r\n                urlArray = [Tag];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let selectedRecord = {};\r\n                    selectedRecord[\"nstatus\"] = transactionStatus.ACTIVE;\r\n                    selectedRecord[\"nemailtemplatecode\"] = 0;\r\n                    selectedRecord[\"nemailtagcode\"] = '';\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            Tag: response[0].data || [],\r\n                            operation,\r\n                            screenName,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            EmailTagParameter: [],\r\n                            ncontrolcode, loading: false\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch(initRequest(false));\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchEmailTemplateById(editParam) {\r\n    return function (dispatch) {\r\n        const URL1 = rsapi.post('emailtemplate/getActiveEmailTemplateById', { [editParam.primaryKeyField]: editParam.primaryKeyValue, \"userinfo\": editParam.userInfo })\r\n        // const URL2=rsapi.post(\"instrumentcategory/getActiveInstrumentCategoryById\", { [editParam.primaryKeyField] :editParam.primaryKeyValue , \"userinfo\": editParam.userInfo} )\r\n        // const URL3= rsapi.post('instrumentcategory/getInterfacetype',{\"userinfo\":editParam.userInfo})\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL1])\r\n            .then(response => {\r\n                let selectedRecord = {}\r\n                let selectedId = editParam.primaryKeyValue;\r\n                selectedRecord = response[0].data[\"EmailTemplate\"][0]\r\n                let Tag = response[0].data[\"EmailTag\"];\r\n                selectedRecord[\"nemailtagcode\"]={label:response[0].data[\"EmailTemplate\"][0].stagname,value:response[0].data[\"EmailTemplate\"][0].nemailtagcode}\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        selectedRecord,\r\n                        Tag: Tag || [],\r\n                        EmailTagParameter: response[0].data[\"EmailParameter\"] || [],\r\n                        operation: editParam.operation,\r\n                        openModal: true,\r\n                        screenName: editParam.screenName,\r\n                        ncontrolcode: editParam.ncontrolCode,\r\n                        loading: false, selectedId\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function comboChangeEmailTag(Map, masterData, selectedRecord, value) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/emailtemplate/getEmailTagFilter\", { ...Map })\r\n            .then(response => {\r\n                let EmailTagParameter = response.data;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false, EmailTagParameter, selectedRecord, value\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}