{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Button,Form,InputGroup}from'react-bootstrap';import{injectIntl}from'react-intl';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormInput from'../../components/form-input/form-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{transactionStatus}from'../../components/Enumeration';import{toast}from'react-toastify';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormEmail from'../../components/form-email/form-email.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import DropZone from'../../components/dropzone/dropzone.component';import{faSleigh}from'@fortawesome/free-solid-svg-icons';var DynamicSlideoutMaterial=/*#__PURE__*/function(_React$Component){_inherits(DynamicSlideoutMaterial,_React$Component);var _super=_createSuper(DynamicSlideoutMaterial);function DynamicSlideoutMaterial(props){var _this;_classCallCheck(this,DynamicSlideoutMaterial);_this=_super.call(this,props);_this.renderSwitch=function(control,selectedRecord){//console.log(\"control:\", control, selectedRecord);\n//const editfield = this.props.editfield && this.props.editfield\nvar index=_this.props.editfield?_this.props.editfield.findIndex(function(x){return x.label===control.label;}):-1;var checkReadOnly=false;if(index!==-1){var listdata=_this.props.editfield[index]&&_this.props.editfield[index].editableuntill||[];checkReadOnly=listdata?_this.props.selectedSample&&_this.props.selectedSample.ntransactionstatus?!listdata.includes(_this.props.selectedSample.ntransactionstatus):false:false;}switch(control.inputtype){case'combo':{// console.log(control.label)\n// let comboData = control.squestiondata ? control.squestiondata.split(\",\") : []\n// let options = comboData ? comboData.map(option => ({ \"value\": option, \"label\": option })) : []\n//  console.log(control.label, this.props.selectedRecord[control.label])\nreturn control.label==='Section'&&_this.props.ismaterialSectionneed?_this.props.ismaterialSectionneed===transactionStatus.YES?/*#__PURE__*/React.createElement(FormSelectSearch,{name:control.label,as:\"select\",onChange:function onChange(event){return _this.props.onComboChange(event,control);},formLabel:control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,placeholder:_this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:control.mandatory,value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",options:_this.props.comboData&&_this.props.comboData[control.label]?_this.props.comboData[control.label]:[],optionId:\"value\",optionValue:\"label\",isMulti:false,isClearable:control.mandatory?false:true,isDisabled:control.label==='Section'?_this.props.operation==='update'&&_this.props.screenname==='IDS_MATERIAL'&&_this.props.isBreadCrumbCategory===true?true:false:control.label==='Open Expiry Period'?_this.props.enableDisableOpenExpiry===4?true:false:control.label==='Expiry Policy Period'?_this.props.enableDisableExpiryPolicy!=='Expiry policy'?true:false:control.readonly?control.readonly:checkReadOnly//    isDisabled={control.label==='Expiry Policy Period'?\n//        this.props.enableDisableExpiryPolicy===4?true:false:\n//        control.readonly}\n//    isDisabled={control.readonly}\n//   isDisabled={control.readonly?\n//        control.readonly:checkReadOnly}\n,isSearchable:false}):\"\":/*#__PURE__*/React.createElement(FormSelectSearch,{name:control.label,as:\"select\",onChange:function onChange(event){return _this.props.onComboChange(event,control);},formLabel:control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,placeholder:_this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:control.mandatory,value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",options:_this.props.comboData&&_this.props.comboData[control.label]?_this.props.comboData[control.label]:[],optionId:\"value\",optionValue:\"label\",isMulti:false,isClearable:control.mandatory?false:true,isDisabled:control.label==='Open Expiry Period'?_this.props.enableDisableOpenExpiry===4?true:false:control.label==='Expiry Policy Period'?_this.props.enableDisableExpiryPolicy!=='Expiry policy'?true:false:control.readonly?control.readonly:checkReadOnly//    isDisabled={control.label==='Expiry Policy Period'?\n//        this.props.enableDisableExpiryPolicy===4?true:false:\n//        control.readonly}\n//    isDisabled={control.readonly}\n//   isDisabled={control.readonly?\n//        control.readonly:checkReadOnly}\n,isSearchable:true});}case'textinput':{return/*#__PURE__*/React.createElement(FormInput,{name:control.label,label:control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,type:\"text\",value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",isMandatory:control.mandatory,required:control.mandatory,maxLength:control.sfieldlength,isDisabled:control.readonly?control.readonly:checkReadOnly,onChange:function onChange(event){return _this.props.onInputOnChange(event,control.label);}// id={control.nchecklistversionqbcode}\n});}case'email':{return/*#__PURE__*/React.createElement(FormEmail,{name:control.label,label:control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,type:\"email\",value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",isMandatory:control.mandatory,required:control.mandatory,maxLength:control.sfieldlength,isDisabled:control.readonly?control.readonly:checkReadOnly,onChange:function onChange(event){return _this.props.onInputOnChange(event,control.label);}// id={control.nchecklistversionqbcode}\n});}case'textarea':{// console.log(control.label, this.props.selectedRecord[control.label])\nreturn/*#__PURE__*/React.createElement(FormTextarea,{name:control.label,label:control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,type:\"text\",value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",isMandatory:control.mandatory,required:control.mandatory,onChange:function onChange(event){return _this.props.onInputOnChange(event,control.label);},rows:\"2\",maxLength:control.sfieldlength,isDisabled:control.readonly?control.readonly:checkReadOnly});}case'toggle':return/*#__PURE__*/React.createElement(CustomSwitch,{label:control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,type:\"switch\",name:control.label,onChange:function onChange(event){return _this.props.onInputOnChange(event);},placeholder:control.label,defaultValue:_this.props.selectedRecord[control.label]&&_this.props.selectedRecord[control.label]===3?true:false,checked:_this.props.selectedRecord[control.label]&&_this.props.selectedRecord[control.label]===3?true:false//disabled={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false}\n,disabled:control.label==='Need Expiry'?_this.props.enableDisableNeedExpiry===4?true:false:control.readonly?control.readonly:checkReadOnly});case 5:{return/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,control.isMultiLingualLabel?_this.props.intl.formatMessage({id:control.squestion}):control.squestion,control.mandatory&&/*#__PURE__*/React.createElement(\"sup\",null,\"*\")));}case 6:{return/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{htmlFor:control.squestion},control.squestion,control.mandatory&&/*#__PURE__*/React.createElement(\"sup\",null,\"*\")),/*#__PURE__*/React.createElement(Button,{className:\"btn\",name:control.squestion},control.squestion));}case'Numeric':{return/*#__PURE__*/React.createElement(FormNumericInput,{name:control.label,label:control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,className:\"form-control\",type:\"text\",strict:true,value:_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label]:\"\",isMandatory:control.label==='Reorder Level'?_this.props.ismaterialSectionneed===transactionStatus.YES?true:false:control.label==='Expiry Policy Days'?_this.props.enableDisableExpiryPolicy==='Expiry policy'?true:false:control.mandatory,required:control.mandatory,maxLength:control.sfieldlength,isDisabled:control.label==='Reorder Level'?_this.props.ismaterialSectionneed&&_this.props.ismaterialSectionneed===transactionStatus.YES&&_this.props.operation==='update'&&_this.props.isBreadCrumbCategory===true?true:false:control.label==='Open Expiry'?_this.props.enableDisableOpenExpiry===4?true:false:control.label==='Expiry Policy Days'?_this.props.enableDisableExpiryPolicy!=='Expiry policy'?true:false:control.readonly?control.readonly:checkReadOnly// isDisabled={control.readonly}\n// isDisabled={control.readonly?\n//     control.readonly:checkReadOnly}\n,onChange:function onChange(event){return _this.props.onNumericInputChange(event,control.label);},precision:_this.props.screenname==='IDS_QUANTITYTRANSACTION'||_this.props.screenname==='IDS_MATERIALINVENTORY'?control.label==='Received Quantity'?_this.props.nprecision:control.precision||0:control.precision||0,max:control.max,min:control.min,noStyle:true// id={control.nchecklistversionqbcode}\n});}case'date':{return/*#__PURE__*/ (// <DateTimePicker\n//     name={control.squestion}\n//     label={control.squestion}\n//     placeholderText={\"DD/MM/YYYY\"}\n//     showTimeSelect={control.dateonly==true?false:true}\n//     selected={\n//         selectedRecord && this.props.selectedRecord[control.label] ? new Date(this.props.selectedRecord[control.label]) : null\n//     }\n//     isMandatory={control.mandatory}\n//     dateFormat=\"dd/MM/yyyy\"\n//     className='form-control'\n//     onChange={(date) => this.props.handleDateChange(date, control.label)}\n//     isClearable={true}\n// />\nReact.createElement(React.Fragment,null,control.timezone?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:control.label,label:control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,className:\"form-control\",placeholderText:_this.props.intl.formatMessage({id:\"IDS_SELECTDATE\"}),selected:selectedRecord&&_this.props.selectedRecord[control.label]?new Date(_this.props.selectedRecord[control.label]):control.loadcurrentdate?new Date():null,dateFormat:control.dateonly===true?_this.props.userInfo[\"ssitedate\"]:control.timeonly?'HH:mm':_this.props.userInfo[\"ssitedatetime\"],timeInputLabel:_this.props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:control.dateonly===true?false:true,showTimeSelectOnly:control.timeonly,isDisabled:control.label==='Expiry Date & Time'?_this.props.isExpiryNeed?_this.props.isExpiryNeed===4?true:false:control.readonly?control.readonly:checkReadOnly:control.readonly?control.readonly:checkReadOnly// isClearable={false}\n,isMandatory:control.mandatory,maxDate:_this.props.CurrentTime,maxTime:_this.props.CurrentTime,onChange:function onChange(date){return _this.props.handleDateChange(date,control.label);},value:_this.props.selectedRecord?_this.props.selectedRecord[\"dcollectiondate\"]:new Date()})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"tz\".concat(control.label),as:\"select\",onChange:function onChange(event){return _this.props.onComboChange(event,control,\"tz\".concat(control.label));},formLabel:_this.props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:_this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true// defaultValue={this.props.defaultTimeZone}\n,value:_this.props.selectedRecord[\"tz\".concat(control.label)]?_this.props.selectedRecord[\"tz\".concat(control.label)]:_this.props.defaultTimeZone,options:_this.props.timeZoneList,optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:\"tz\".concat(control.label)==='tzExpiry Date & Time'?_this.props.isExpiryNeed?_this.props.isExpiryNeed===4?true:false:control.readonly?control.readonly:checkReadOnly:control.readonly?control.readonly:checkReadOnly// isDisabled={control.readonly}\n// isDisabled={control.readonly?\n//     control.readonly:checkReadOnly}\n,isSearchable:false,isClearable:false}))):/*#__PURE__*/React.createElement(DateTimePicker,{name:control.label,label:control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,className:\"form-control\",placeholderText:_this.props.intl.formatMessage({id:\"IDS_SELECTDATE\"}),selected:selectedRecord&&_this.props.selectedRecord[control.label]?new Date(_this.props.selectedRecord[control.label]):null,dateFormat:control.dateonly===true?_this.props.userInfo[\"ssitedate\"]:control.timeonly?'HH:mm':_this.props.userInfo[\"ssitedatetime\"],timeInputLabel:_this.props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:control.dateonly===true?false:true,showTimeSelectOnly:control.timeonly// isClearable={false}\n,isMandatory:control.mandatory,maxDate:_this.props.CurrentTime,maxTime:_this.props.CurrentTime,onChange:function onChange(date){return _this.props.handleDateChange(date,control.label);},value:_this.props.selectedRecord?_this.props.selectedRecord[\"dcollectiondate\"]:new Date()})));}case'checkbox':{var checkboxes=control.radioOptions?control.radioOptions.tags:[];var data=_this.props.selectedRecord[control.label]?_this.props.selectedRecord[control.label].split(\",\"):[];console.log('checkbox:',checkboxes);return/*#__PURE__*/React.createElement(InputGroup,{size:'lg'},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{as:\"legend\",htmlFor:control.label},control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,control.mandatory?/*#__PURE__*/React.createElement(\"sup\",null,\"*\"):\"\"),checkboxes.map(function(checkbox){return/*#__PURE__*/React.createElement(Form.Check,{inline:true,type:\"checkbox\",name:control.label,label:control.isMultiLingualLabel?_this.props.intl.formatMessage({id:checkbox.text}):checkbox.text// label={checkbox.text}\n,onChange:function onChange(event){return _this.props.onInputOnChange(event,checkbox.text);},id:checkbox.id,checked:_this.props.selectedRecord[control.label]?data.includes(checkbox.text.trim())?true:false:false,defaultChecked:_this.props.selectedRecord[control.label]?data.includes(checkbox.text.trim())?true:false:false// defaultChecked={this.props.selectedRecord[control.label] === 3 ? true : false}\n,isMandatory:control.mandatory,required:control.mandatory,size:'lg'});})));}case'radio':{var radioButtons=control.radioOptions?control.radioOptions.tags:[];return/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,{as:\"legend\",htmlFor:control.label},control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,control.mandatory?/*#__PURE__*/React.createElement(\"sup\",null,\"*\"):\"\"),radioButtons.map(function(radioButton){return/*#__PURE__*/React.createElement(Form.Check,{inline:true,type:\"radio\",name:control.label,label:radioButton.text,onChange:function onChange(event){return _this.props.onInputOnChange(event,radioButton.text);},id:radioButton.id,checked:selectedRecord[control.label]?radioButton.text.trim()===selectedRecord[control.label].trim()?true:false:false,defaultChecked:selectedRecord[control.label]?radioButton.text.trim()===selectedRecord[control.label].trim()?true:false:false,isMandatory:control.mandatory,required:control.mandatory,disabled:control.readonly?control.readonly:checkReadOnly});})));}case'files':{return/*#__PURE__*/React.createElement(DropZone,{name:control.label,label:control.displayname[_this.props.userInfo.slanguagetypecode]||control.label,maxFiles:control.maxFiles||1,accept:control.accept&&control.accept.value,minSize:0,maxSize:1,onDrop:function onDrop(event){return _this.props.onDropFile(event,control.label,1);},multiple:control.maxFiles>1?true:false,editFiles:_this.props.selectedRecord?_this.props.selectedRecord:{}// attachmentTypeCode={this.props.operation === \"update\" ? attachmentType.PRN : \"\"}\n// fileSizeName=\"nfilesize\"\n,fileName:control.label,deleteAttachment:_this.props.deleteAttachment,actionType:_this.props.actionType});}default:return\"\";}};_this.onSaveClick=function(){if(_this.props.needValidation){var failedControls=[];var mandatoryFields=[];_this.props.templateData.map(function(control){return control.nmandatoryfield===transactionStatus.YES?mandatoryFields.push(control):'';});mandatoryFields.forEach(function(item){if(_this.props.selectedRecord&&_this.props.selectedRecord[item.nchecklistversionqbcode]&&_this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue){if(typeof _this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue===\"object\"){//to validate FormSelectSearch component\nif(_this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length===0){var alertMessage=item.squestion;failedControls.push(alertMessage);}}else if(typeof _this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue===\"string\"){if(_this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.trim().length===0){var _alertMessage=item.squestion;failedControls.push(_alertMessage);}}else{if(_this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length===0){var _alertMessage2=item.squestion;failedControls.push(_alertMessage2);}}}else{var _alertMessage3=item.squestion;failedControls.push(_alertMessage3);}});// console.log(\"validationPassed:\", failedControls);\nif(failedControls.length===0){_this.props.onSaveClick(_this.props.selectedRecord,_this.props.Login.userInfo,_this.props.nregtypecode,_this.props.nregsubtypecode);}else{toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_ENTER\"}),\" \").concat(failedControls[0]));}}else{_this.props.onSaveClick(_this.props.selectedRecord,_this.props.Login.userInfo,_this.props.nregtypecode,_this.props.nregsubtypecode);}};_this.formElement=React.createRef();return _this;}_createClass(DynamicSlideoutMaterial,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.props.triggerCallback!==undefined&&this.props.enableCallback)setTimeout(function(){_this2.props.triggerCallback(_this2.formElement.current.clientHeight+30);},200);}},{key:\"render\",value:function render(){var _this3=this;// this.props.templateData && Object.keys(this.props.templateData).map(design =>\n// )\nreturn/*#__PURE__*/React.createElement(\"div\",{ref:this.formElement},this.props.templateData?this.props.templateData.map(function(item){return/*#__PURE__*/React.createElement(Row,null,item.children.length>0?item.children.map(function(column){return/*#__PURE__*/React.createElement(Col,{md:12/item.children.length},column.children.map(function(component){return component.hasOwnProperty(\"children\")?/*#__PURE__*/React.createElement(Row,null,component.children.map(function(componentrow){return/*#__PURE__*/React.createElement(Col,{md:12/componentrow.length},_this3.renderSwitch(componentrow,_this3.props.selectedRecord));})):/*#__PURE__*/React.createElement(React.Fragment,null,_this3.renderSwitch(component,_this3.props.selectedRecord));}));}):\"\");}):\"\");}}]);return DynamicSlideoutMaterial;}(React.Component);export default injectIntl(DynamicSlideoutMaterial);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/Material/DynamicSlideoutMaterial.jsx"],"names":["React","Row","Col","Button","Form","InputGroup","injectIntl","FormTextarea","FormInput","FormSelectSearch","DateTimePicker","transactionStatus","toast","CustomSwitch","FormEmail","FormNumericInput","DropZone","faSleigh","DynamicSlideoutMaterial","props","renderSwitch","control","selectedRecord","index","editfield","findIndex","x","label","checkReadOnly","listdata","editableuntill","selectedSample","ntransactionstatus","includes","inputtype","ismaterialSectionneed","YES","event","onComboChange","displayname","userInfo","slanguagetypecode","intl","formatMessage","id","mandatory","comboData","operation","screenname","isBreadCrumbCategory","enableDisableOpenExpiry","enableDisableExpiryPolicy","readonly","sfieldlength","onInputOnChange","enableDisableNeedExpiry","isMultiLingualLabel","squestion","onNumericInputChange","nprecision","precision","max","min","timezone","Date","loadcurrentdate","dateonly","timeonly","isExpiryNeed","CurrentTime","date","handleDateChange","defaultTimeZone","timeZoneList","checkboxes","radioOptions","tags","data","split","console","log","map","checkbox","text","trim","radioButtons","radioButton","maxFiles","accept","value","onDropFile","deleteAttachment","actionType","onSaveClick","needValidation","failedControls","mandatoryFields","templateData","nmandatoryfield","push","forEach","item","nchecklistversionqbcode","sdefaultvalue","length","alertMessage","Login","nregtypecode","nregsubtypecode","info","formElement","createRef","triggerCallback","undefined","enableCallback","setTimeout","current","clientHeight","children","column","component","hasOwnProperty","componentrow","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Button, Form, InputGroup } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { transactionStatus } from '../../components/Enumeration'\r\nimport { toast } from 'react-toastify';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormEmail from '../../components/form-email/form-email.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport { faSleigh } from '@fortawesome/free-solid-svg-icons';\r\nclass DynamicSlideoutMaterial extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formElement = React.createRef();\r\n    }\r\n    renderSwitch = (control, selectedRecord) => {\r\n        //console.log(\"control:\", control, selectedRecord);\r\n        //const editfield = this.props.editfield && this.props.editfield\r\n        const index = this.props.editfield ? \r\n        this.props.editfield.findIndex(x => x.label === control.label) : -1\r\n        let checkReadOnly =false;\r\n        if(index!==-1){\r\n        const listdata = (this.props.editfield[index] && this.props.editfield[index].editableuntill) || []\r\n        checkReadOnly = listdata ? this.props.selectedSample&&this.props.selectedSample.ntransactionstatus ?\r\n        !listdata.includes(this.props.selectedSample.ntransactionstatus)\r\n        : false : false   \r\n    }\r\n       \r\n\r\n        switch (control.inputtype) {\r\n            case 'combo': {\r\n               // console.log(control.label)\r\n                // let comboData = control.squestiondata ? control.squestiondata.split(\",\") : []\r\n                // let options = comboData ? comboData.map(option => ({ \"value\": option, \"label\": option })) : []\r\n                //  console.log(control.label, this.props.selectedRecord[control.label])\r\n\r\n                return (\r\n                    control.label === 'Section' && this.props.ismaterialSectionneed ?\r\n                        this.props.ismaterialSectionneed === transactionStatus.YES ?\r\n                            <FormSelectSearch\r\n                            \r\n                                name={control.label}\r\n                                as={\"select\"}\r\n                                onChange={(event) => this.props.onComboChange(event, control)}\r\n                                formLabel={control.displayname[this.props.userInfo.slanguagetypecode] || control.label}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={control.mandatory}\r\n                                value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                                options={this.props.comboData && this.props.comboData[control.label] ? this.props.comboData[control.label] : []}\r\n                                optionId={\"value\"}\r\n                                optionValue={\"label\"}\r\n                                isMulti={false}\r\n                                isClearable={control.mandatory?false:true}\r\n                                isDisabled={control.label === 'Section' ?\r\n                                    this.props.operation === 'update' && this.props.screenname === 'IDS_MATERIAL'&& \r\n                                    this.props.isBreadCrumbCategory===true? true : false :\r\n                                    control.label === 'Open Expiry Period' ?\r\n                                        this.props.enableDisableOpenExpiry === 4 ? true : false :\r\n                                        control.label === 'Expiry Policy Period' ?\r\n                                            this.props.enableDisableExpiryPolicy !== 'Expiry policy' ? true : false :\r\n                                            control.readonly ?\r\n                                                control.readonly : checkReadOnly}\r\n                                //    isDisabled={control.label==='Expiry Policy Period'?\r\n                                //        this.props.enableDisableExpiryPolicy===4?true:false:\r\n                                //        control.readonly}\r\n\r\n                                //    isDisabled={control.readonly}\r\n\r\n                                //   isDisabled={control.readonly?\r\n                                //        control.readonly:checkReadOnly}\r\n\r\n                                isSearchable={false}\r\n                            /> : \"\" :\r\n                        <FormSelectSearch\r\n                            name={control.label}\r\n                            as={\"select\"}\r\n                            onChange={(event) => this.props.onComboChange(event, control)}\r\n                            formLabel={control.displayname[this.props.userInfo.slanguagetypecode] || control.label}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={control.mandatory}\r\n                            value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                            options={this.props.comboData && this.props.comboData[control.label] ? this.props.comboData[control.label] : []}\r\n                            optionId={\"value\"}\r\n                            optionValue={\"label\"}\r\n                            isMulti={false}\r\n                            isClearable={control.mandatory?false:true}\r\n                            isDisabled={control.label === 'Open Expiry Period' ?\r\n                                this.props.enableDisableOpenExpiry === 4 ? true : false :\r\n                                control.label === 'Expiry Policy Period' ?\r\n                                    this.props.enableDisableExpiryPolicy !== 'Expiry policy' ? true : false :\r\n                                    control.readonly ?\r\n                                        control.readonly : checkReadOnly}\r\n                            //    isDisabled={control.label==='Expiry Policy Period'?\r\n                            //        this.props.enableDisableExpiryPolicy===4?true:false:\r\n                            //        control.readonly}\r\n\r\n                            //    isDisabled={control.readonly}\r\n\r\n                            //   isDisabled={control.readonly?\r\n                            //        control.readonly:checkReadOnly}\r\n\r\n                            isSearchable={true}\r\n                        />\r\n\r\n                );\r\n            }\r\n            case 'textinput': {\r\n                return (\r\n                    <FormInput\r\n                        name={control.label}\r\n                        label={control.displayname[this.props.userInfo.slanguagetypecode] || control.label}\r\n                        type=\"text\"\r\n                        value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                        isMandatory={control.mandatory}\r\n                        required={control.mandatory}\r\n                        maxLength={control.sfieldlength}\r\n                        isDisabled={control.readonly ?\r\n                            control.readonly : checkReadOnly}\r\n                        onChange={(event) => this.props.onInputOnChange(event, control.label)}\r\n                    // id={control.nchecklistversionqbcode}\r\n                    />\r\n\r\n                );\r\n            }\r\n            case 'email': {\r\n                return (\r\n                    <FormEmail\r\n                        name={control.label}\r\n                        label={control.displayname[this.props.userInfo.slanguagetypecode] || control.label}\r\n                        type=\"email\"\r\n                        value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                        isMandatory={control.mandatory}\r\n                        required={control.mandatory}\r\n                        maxLength={control.sfieldlength}\r\n                        isDisabled={control.readonly ?\r\n                            control.readonly : checkReadOnly}\r\n                        onChange={(event) => this.props.onInputOnChange(event, control.label)}\r\n                    // id={control.nchecklistversionqbcode}\r\n                    />\r\n                );\r\n            }\r\n            case 'textarea': {\r\n                // console.log(control.label, this.props.selectedRecord[control.label])\r\n                return (\r\n                    <FormTextarea\r\n                        name={control.label}\r\n                        label={control.displayname[this.props.userInfo.slanguagetypecode] || control.label}\r\n                        type=\"text\"\r\n                        value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                        isMandatory={control.mandatory}\r\n                        required={control.mandatory}\r\n                        onChange={(event) => this.props.onInputOnChange(event, control.label)}\r\n                        rows=\"2\"\r\n                        maxLength={control.sfieldlength}\r\n                        isDisabled={control.readonly ?\r\n                            control.readonly : checkReadOnly}\r\n                    />\r\n                );\r\n            }\r\n            case 'toggle':\r\n                return (\r\n                    <CustomSwitch\r\n                        label={control.displayname[this.props.userInfo.slanguagetypecode] || control.label}\r\n                        type=\"switch\"\r\n                        name={control.label}\r\n                        onChange={(event) => this.props.onInputOnChange(event)}\r\n                        placeholder={control.label}\r\n                        defaultValue={this.props.selectedRecord[control.label] && this.props.selectedRecord[control.label] === 3 ? true : false}\r\n                        checked={this.props.selectedRecord[control.label] && this.props.selectedRecord[control.label] === 3 ? true : false}\r\n                        //disabled={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false}\r\n                        disabled={\r\n                            control.label === 'Need Expiry' ?\r\n                                this.props.enableDisableNeedExpiry === 4 ? true : false :\r\n                                control.readonly ?\r\n                                    control.readonly : checkReadOnly}\r\n                    />\r\n                );\r\n            case 5: {\r\n                return (\r\n                    <Form.Group>\r\n                        <Form.Label>{control.isMultiLingualLabel ? this.props.intl.formatMessage({\r\n                            id: control.squestion\r\n                        }) : control.squestion}{control.mandatory && <sup>*</sup>}</Form.Label>{ }\r\n                    </Form.Group>\r\n                );\r\n            }\r\n            case 6: {\r\n                return (\r\n                    <Form.Group>\r\n                        <Form.Label htmlFor={control.squestion}>{control.squestion}{control.mandatory && <sup>*</sup>}</Form.Label>\r\n                        <Button className=\"btn\" name={control.squestion}>\r\n                            {control.squestion}\r\n                        </Button>\r\n                    </Form.Group>\r\n                );\r\n            }\r\n            case 'Numeric': {\r\n                return (\r\n                    <FormNumericInput\r\n                        name={control.label}\r\n                        label={control.displayname[this.props.userInfo.slanguagetypecode] || control.label}\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        strict={true}\r\n                        value={this.props.selectedRecord[control.label] ? this.props.selectedRecord[control.label] : \"\"}\r\n                        isMandatory={control.label === 'Reorder Level' ?\r\n                        this.props.ismaterialSectionneed === transactionStatus.YES ? true : false : control.label === 'Expiry Policy Days' ?\r\n                            this.props.enableDisableExpiryPolicy === 'Expiry policy' ? true : false :\r\n                            control.mandatory}\r\n                        required={\r\n                            control.mandatory}\r\n                        maxLength={control.sfieldlength}\r\n\r\n                        isDisabled={control.label === 'Reorder Level' ?\r\n                            this.props.ismaterialSectionneed &&\r\n                            this.props.ismaterialSectionneed === transactionStatus.YES&&\r\n                            this.props.operation === 'update'&& \r\n                            this.props.isBreadCrumbCategory===true? true : false :\r\n                            control.label === 'Open Expiry' ?\r\n                            this.props.enableDisableOpenExpiry === 4 ? true : false :\r\n                            control.label === 'Expiry Policy Days' ?\r\n                                this.props.enableDisableExpiryPolicy !== 'Expiry policy' ? true : false :\r\n                                control.readonly ?\r\n                                    control.readonly : checkReadOnly}\r\n\r\n                        // isDisabled={control.readonly}\r\n\r\n                        // isDisabled={control.readonly?\r\n                        //     control.readonly:checkReadOnly}\r\n\r\n                        onChange={(event) => this.props.onNumericInputChange(event, control.label)}\r\n                        precision={this.props.screenname === 'IDS_QUANTITYTRANSACTION'\r\n                            || this.props.screenname === 'IDS_MATERIALINVENTORY' ? control.label === 'Received Quantity' ?\r\n                            this.props.nprecision : control.precision || 0 :\r\n                            control.precision || 0}\r\n                        max={control.max}\r\n                        min={control.min}\r\n                        noStyle={true}\r\n                    // id={control.nchecklistversionqbcode}\r\n                    />\r\n                )\r\n            }\r\n            case 'date': {\r\n                return (\r\n                    // <DateTimePicker\r\n                    //     name={control.squestion}\r\n                    //     label={control.squestion}\r\n                    //     placeholderText={\"DD/MM/YYYY\"}\r\n                    //     showTimeSelect={control.dateonly==true?false:true}\r\n                    //     selected={\r\n                    //         selectedRecord && this.props.selectedRecord[control.label] ? new Date(this.props.selectedRecord[control.label]) : null\r\n                    //     }\r\n                    //     isMandatory={control.mandatory}\r\n                    //     dateFormat=\"dd/MM/yyyy\"\r\n                    //     className='form-control'\r\n                    //     onChange={(date) => this.props.handleDateChange(date, control.label)}\r\n                    //     isClearable={true}\r\n                    // />\r\n                    <>\r\n                        {control.timezone ?\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <DateTimePicker\r\n                                        name={control.label}\r\n                                        label={control.displayname[this.props.userInfo.slanguagetypecode] || control.label}\r\n                                        className='form-control'\r\n                                        placeholderText={this.props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                                        selected={selectedRecord && this.props.selectedRecord[control.label] ? new Date(this.props.selectedRecord[control.label]) : control.loadcurrentdate ? new Date() : null}\r\n                                        dateFormat={control.dateonly === true ? this.props.userInfo[\"ssitedate\"] : control.timeonly ? 'HH:mm' : this.props.userInfo[\"ssitedatetime\"]}\r\n                                        timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                                        showTimeInput={control.dateonly === true ? false : true}\r\n                                        showTimeSelectOnly={control.timeonly}\r\n                                        isDisabled={control.label === 'Expiry Date & Time' ?\r\n                                            this.props.isExpiryNeed ? this.props.isExpiryNeed === 4 ? true : false : control.readonly ?\r\n                                                control.readonly : checkReadOnly : control.readonly ?\r\n                                                control.readonly : checkReadOnly}\r\n                                        // isClearable={false}\r\n                                        isMandatory={control.mandatory}\r\n                                        maxDate={this.props.CurrentTime}\r\n                                        maxTime={this.props.CurrentTime}\r\n                                        onChange={(date) => this.props.handleDateChange(date, control.label)}\r\n                                        value={this.props.selectedRecord ? this.props.selectedRecord[\"dcollectiondate\"] : new Date()}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <FormSelectSearch\r\n                                        name={`tz${control.label}`}\r\n                                        as={\"select\"}\r\n                                        onChange={(event) => this.props.onComboChange(event, control, `tz${control.label}`)}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        // defaultValue={this.props.defaultTimeZone}\r\n                                        value={this.props.selectedRecord[`tz${control.label}`] ? this.props.selectedRecord[`tz${control.label}`] : this.props.defaultTimeZone}\r\n                                        options={this.props.timeZoneList}\r\n                                        optionId={\"value\"}\r\n                                        optionValue={\"label\"}\r\n                                        isMulti={false}\r\n\r\n                                        isDisabled={`tz${control.label}` === 'tzExpiry Date & Time' ?\r\n                                            this.props.isExpiryNeed ? this.props.isExpiryNeed === 4 ? true : false : control.readonly ?\r\n                                                control.readonly : checkReadOnly : control.readonly ?\r\n                                                control.readonly : checkReadOnly}\r\n\r\n                                        // isDisabled={control.readonly}\r\n\r\n                                        // isDisabled={control.readonly?\r\n                                        //     control.readonly:checkReadOnly}\r\n\r\n                                        isSearchable={false}\r\n                                        isClearable={false}\r\n                                    />\r\n                                </Col>\r\n                            </Row> :\r\n                            <DateTimePicker\r\n                                name={control.label}\r\n                                label={control.displayname[this.props.userInfo.slanguagetypecode] || control.label}\r\n                                className='form-control'\r\n                                placeholderText={this.props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                                selected={selectedRecord && this.props.selectedRecord[control.label] ? new Date(this.props.selectedRecord[control.label]) : null}\r\n                                dateFormat={control.dateonly === true ? this.props.userInfo[\"ssitedate\"] : control.timeonly ? 'HH:mm' : this.props.userInfo[\"ssitedatetime\"]}\r\n                                timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                                showTimeInput={control.dateonly === true ? false : true}\r\n                                showTimeSelectOnly={control.timeonly}\r\n                                // isClearable={false}\r\n                                isMandatory={control.mandatory}\r\n                                maxDate={this.props.CurrentTime}\r\n                                maxTime={this.props.CurrentTime}\r\n                                onChange={(date) => this.props.handleDateChange(date, control.label)}\r\n                                value={this.props.selectedRecord ? this.props.selectedRecord[\"dcollectiondate\"] : new Date()}\r\n                            />\r\n                        }\r\n\r\n                    </>\r\n                );\r\n            }\r\n            case 'checkbox': {\r\n                let checkboxes = control.radioOptions ? control.radioOptions.tags : []\r\n                const data = this.props.selectedRecord[control.label] ?\r\n                    this.props.selectedRecord[control.label].split(\",\") : [];\r\n                console.log('checkbox:', checkboxes)\r\n\r\n                return (\r\n                    <InputGroup size={'lg'}>\r\n                        <Form.Group>\r\n                            <Form.Label as=\"legend\" htmlFor={control.label}>{\r\n                                control.displayname[this.props.userInfo.slanguagetypecode] || control.label}{control.mandatory ? <sup>*</sup> : \"\"}</Form.Label>\r\n                            {checkboxes.map(checkbox =>\r\n\r\n                                <Form.Check\r\n                                    inline={true}\r\n                                    type=\"checkbox\"\r\n                                    name={control.label}\r\n                                    label={control.isMultiLingualLabel ? this.props.intl.formatMessage({ id: checkbox.text }) : checkbox.text}\r\n                                    // label={checkbox.text}\r\n                                    onChange={(event) => this.props.onInputOnChange(event, checkbox.text)}\r\n                                    id={checkbox.id}\r\n\r\n                                    checked={this.props.selectedRecord[control.label] ?\r\n                                        data.includes(checkbox.text.trim()) ? true : false : false}\r\n\r\n                                    defaultChecked={this.props.selectedRecord[control.label] ?\r\n                                        data.includes(checkbox.text.trim()) ? true : false : false}\r\n\r\n                                    // defaultChecked={this.props.selectedRecord[control.label] === 3 ? true : false}\r\n                                    isMandatory={control.mandatory}\r\n                                    required={control.mandatory}\r\n                                    size={'lg'}\r\n                                />\r\n\r\n                            )}\r\n                        </Form.Group>\r\n                    </InputGroup >\r\n\r\n                );\r\n            }\r\n            case 'radio': {\r\n                let radioButtons = control.radioOptions ? control.radioOptions.tags : []\r\n                return (\r\n                    <fieldset>\r\n                        <Form.Group>\r\n                            <Form.Label as=\"legend\" htmlFor={control.label}>{control.displayname[this.props.userInfo.slanguagetypecode] || control.label}{control.mandatory ? <sup>*</sup> : \"\"}</Form.Label>\r\n                            {radioButtons.map(radioButton =>\r\n\r\n                                <Form.Check\r\n                                    inline={true}\r\n                                    type=\"radio\"\r\n                                    name={control.label}\r\n                                    label={radioButton.text}\r\n                                    onChange={(event) => this.props.onInputOnChange(event, radioButton.text)}\r\n                                    id={radioButton.id}\r\n                                    checked={selectedRecord[control.label] ?\r\n                                        radioButton.text.trim() === selectedRecord[control.label].trim() ? true : false : false}\r\n                                    defaultChecked={selectedRecord[control.label] ?\r\n                                        radioButton.text.trim() === selectedRecord[control.label].trim() ? true : false : false}\r\n                                    isMandatory={control.mandatory}\r\n                                    required={control.mandatory}\r\n                                    disabled={control.readonly ?\r\n                                        control.readonly : checkReadOnly}\r\n                                />\r\n\r\n                            )}\r\n                        </Form.Group>\r\n                    </fieldset>\r\n                );\r\n            }\r\n            case 'files': {\r\n                return (\r\n                    <DropZone\r\n                        name={control.label}\r\n                        label={control.displayname[this.props.userInfo.slanguagetypecode] || control.label}\r\n                        maxFiles={control.maxFiles || 1}\r\n                        accept={control.accept && control.accept.value}\r\n                        minSize={0}\r\n                        maxSize={1}\r\n                        onDrop={(event) => this.props.onDropFile(event, control.label, 1)}\r\n                        multiple={control.maxFiles > 1 ? true : false}\r\n                        editFiles={this.props.selectedRecord ? this.props.selectedRecord : {}}\r\n                        // attachmentTypeCode={this.props.operation === \"update\" ? attachmentType.PRN : \"\"}\r\n                        // fileSizeName=\"nfilesize\"\r\n                        fileName={control.label}\r\n                        deleteAttachment={this.props.deleteAttachment}\r\n                        actionType={this.props.actionType}\r\n                    />\r\n                )\r\n            }\r\n            default:\r\n                return (\"\");\r\n        }\r\n    }\r\n    onSaveClick = () => {\r\n        if (this.props.needValidation) {\r\n            const failedControls = [];\r\n            const mandatoryFields = [];\r\n            this.props.templateData.map(control =>\r\n                control.nmandatoryfield === transactionStatus.YES ? mandatoryFields.push(control) : ''\r\n\r\n            )\r\n            mandatoryFields.forEach(item => {\r\n\r\n                if (this.props.selectedRecord && this.props.selectedRecord[item.nchecklistversionqbcode] && this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue) {\r\n                    if (typeof this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"object\") {\r\n                        //to validate FormSelectSearch component\r\n                        if (this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                    else if (typeof this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"string\") {\r\n                        if (this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.trim().length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this.props.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    const alertMessage = item.squestion\r\n                    failedControls.push(alertMessage);\r\n                }\r\n            });\r\n            // console.log(\"validationPassed:\", failedControls);\r\n\r\n            if (failedControls.length === 0) {\r\n                this.props.onSaveClick(this.props.selectedRecord, this.props.Login.userInfo, this.props.nregtypecode, this.props.nregsubtypecode)\r\n            }\r\n            else {\r\n\r\n                toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${failedControls[0]}`);\r\n\r\n\r\n            }\r\n        } else {\r\n            this.props.onSaveClick(this.props.selectedRecord, this.props.Login.userInfo, this.props.nregtypecode, this.props.nregsubtypecode)\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        if (this.props.triggerCallback !== undefined && this.props.enableCallback)\r\n            setTimeout(() => {\r\n                this.props.triggerCallback(this.formElement.current.clientHeight + 30);\r\n            }, 200)\r\n\r\n\r\n    }\r\n    render() {\r\n        // this.props.templateData && Object.keys(this.props.templateData).map(design =>\r\n        // )\r\n        return (\r\n            <div ref={this.formElement}>\r\n                {\r\n                    this.props.templateData ?\r\n                        this.props.templateData.map((item) =>\r\n                            <Row>\r\n                                {item.children.length > 0 ?\r\n                                    item.children.map((column) =>\r\n                                        <Col md={12 / item.children.length}>\r\n                                            {\r\n                                                column.children.map((component) => {\r\n                                                    return (\r\n                                                        component.hasOwnProperty(\"children\") ?\r\n                                                            <Row>\r\n                                                                {component.children.map(componentrow =>\r\n                                                                    <Col md={12 / componentrow.length}>\r\n                                                                        {this.renderSwitch(componentrow, this.props.selectedRecord)}\r\n                                                                    </Col>\r\n                                                                )\r\n                                                                }\r\n                                                            </Row>\r\n                                                            : <>\r\n                                                                {this.renderSwitch(component, this.props.selectedRecord)}\r\n                                                            </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n\r\n                                        </Col>\r\n                                    )\r\n                                    : \"\"}\r\n                            </Row>\r\n                        )\r\n                        :\r\n                        \"\"\r\n                }\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default injectIntl(DynamicSlideoutMaterial);"]},"metadata":{},"sourceType":"module"}