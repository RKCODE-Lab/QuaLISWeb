{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\AddCourier.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\n\nconst AddCourier = props => {\n  const {\n    Country\n  } = props;\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_COURIERNAME\"\n    }),\n    name: \"scouriername\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COURIERNAME\"\n    }),\n    value: props.selectedRecord[\"scouriername\"] ? props.selectedRecord[\"scouriername\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_CONTACTPERSON\"\n    }),\n    name: \"scontactperson\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_CONTACTPERSON\"\n    }),\n    value: props.selectedRecord[\"scontactperson\"] ? props.selectedRecord[\"scontactperson\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS1\"\n    }),\n    name: \"saddress1\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS1\"\n    }),\n    value: props.selectedRecord[\"saddress1\"] ? props.selectedRecord[\"saddress1\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS2\"\n    }),\n    name: \"saddress2\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS2\"\n    }),\n    value: props.selectedRecord[\"saddress2\"] ? props.selectedRecord[\"saddress2\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS3\"\n    }),\n    name: \"saddress3\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS3\"\n    }),\n    value: props.selectedRecord[\"saddress3\"] ? props.selectedRecord[\"saddress3\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_COUNTRY\"\n    }),\n    name: \"ncountrycode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"ncountrycode\"] : \"\",\n    options: Country,\n    optionId: \"ncountrycode\",\n    optionValue: \"scountryname\",\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    as: \"select\",\n    onChange: event => props.onComboChange(event, \"ncountrycode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"semail\",\n    type: \"email\",\n    label: props.intl.formatMessage({\n      id: \"IDS_EMAIL\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_EMAIL\"\n    }),\n    value: props.selectedRecord[\"semail\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"smobileno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MOBILENO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MOBILENO\"\n    }),\n    value: props.selectedRecord[\"smobileno\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 24\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sphoneno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    value: props.selectedRecord[\"sphoneno\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_FAXNO\"\n    }),\n    name: \"sfaxno\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FAXNO\"\n    }),\n    value: props.selectedRecord[\"sfaxno\"] ? props.selectedRecord[\"sfaxno\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default injectIntl(AddCourier);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/contactmaster/AddCourier.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","FormSelectSearch","injectIntl","AddCourier","props","Country","intl","formatMessage","id","event","onInputOnChange","selectedRecord","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,cAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGC,KAAD,IAAWL,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEJ,KAAK,CAACO,cAAN,CAAqB,cAArB,IAAuCP,KAAK,CAACO,cAAN,CAAqB,cAArB,CAAvC,GAA8E,EANzF;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,QAAQ,EAAE,IARd;AASI,IAAA,SAAS,EAAE,GATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAcI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEP,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,gBAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGC,KAAD,IAAWL,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEJ,KAAK,CAACO,cAAN,CAAqB,gBAArB,IAAyCP,KAAK,CAACO,cAAN,CAAqB,gBAArB,CAAzC,GAAkF,EAN7F;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,QAAQ,EAAE,KARd;AASI,IAAA,SAAS,EAAE,GATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdJ,eA2BI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAEP,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CADX;AAEI,IAAA,IAAI,EAAC,WAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGC,KAAD,IAAWL,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEJ,KAAK,CAACO,cAAN,CAAqB,WAArB,IAAoCP,KAAK,CAACO,cAAN,CAAqB,WAArB,CAApC,GAAwE,EANnF;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,QAAQ,EAAE,KARd;AASI,IAAA,SAAS,EAAE,GATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3BJ,eAwCI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAEP,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CADX;AAEI,IAAA,IAAI,EAAC,WAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGC,KAAD,IAAWL,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEJ,KAAK,CAACO,cAAN,CAAqB,WAArB,IAAoCP,KAAK,CAACO,cAAN,CAAqB,WAArB,CAApC,GAAwE,EANnF;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,QAAQ,EAAE,KARd;AASI,IAAA,SAAS,EAAE,GATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAxCJ,eAqDI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAEP,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CADX;AAEI,IAAA,IAAI,EAAC,WAFT;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGC,KAAD,IAAWL,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEJ,KAAK,CAACO,cAAN,CAAqB,WAArB,IAAoCP,KAAK,CAACO,cAAN,CAAqB,WAArB,CAApC,GAAwE,EANnF;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,QAAQ,EAAE,KARd;AASI,IAAA,SAAS,EAAE,GATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CArDJ,CADR,CADJ,eAsES,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEP,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,IAAI,EAAE,cAFV;AAGI,IAAA,WAAW,EAAEJ,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAHjB;AAII,IAAA,KAAK,EAAEJ,KAAK,CAACO,cAAN,GAAuBP,KAAK,CAACO,cAAN,CAAqB,cAArB,CAAvB,GAA8D,EAJzE;AAKI,IAAA,OAAO,EAAEN,OALb;AAMI,IAAA,QAAQ,EAAC,cANb;AAOI,IAAA,WAAW,EAAC,cAPhB;AAQI,IAAA,WAAW,EAAE,IARjB;AASI,IAAA,OAAO,EAAE,KATb;AAUI,IAAA,YAAY,EAAE,KAVlB;AAWI,IAAA,iBAAiB,EAAE,IAXvB;AAYI,IAAA,gBAAgB,EAAE,IAZtB;AAaI,IAAA,EAAE,EAAE,QAbR;AAcI,IAAA,QAAQ,EAAGI,KAAD,IAAWL,KAAK,CAACQ,aAAN,CAAoBH,KAApB,EAA2B,cAA3B,CAdzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAqBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,SAAD;AACK,IAAA,IAAI,EAAE,QADX;AAEK,IAAA,IAAI,EAAC,OAFV;AAGK,IAAA,KAAK,EAAGL,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAHb;AAIK,IAAA,WAAW,EAAGJ,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAJnB;AAKK,IAAA,KAAK,EAAIJ,KAAK,CAACO,cAAN,CAAqB,QAArB,CALd;AAMK,IAAA,WAAW,EAAE,KANlB;AAOK,IAAA,QAAQ,EAAE,KAPf;AAQK,IAAA,SAAS,EAAE,EARhB;AASK,IAAA,QAAQ,EAAGF,KAAD,IAAUL,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CArBJ,eAkCI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,SAAD;AACK,IAAA,IAAI,EAAE,WADX;AAEK,IAAA,IAAI,EAAC,MAFV;AAGK,IAAA,KAAK,EAAGL,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAHb;AAIK,IAAA,WAAW,EAAGJ,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAJnB;AAKK,IAAA,KAAK,EAAIJ,KAAK,CAACO,cAAN,CAAqB,WAArB,CALd;AAMK,IAAA,WAAW,EAAE,KANlB;AAOK,IAAA,QAAQ,EAAE,KAPf;AAQK,IAAA,SAAS,EAAE,EARhB;AASK,IAAA,QAAQ,EAAGF,KAAD,IAAUL,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAlCJ,eA8DI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAE,UADV;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAGL,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAHZ;AAII,IAAA,WAAW,EAAGJ,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CAJlB;AAKI,IAAA,KAAK,EAAIJ,KAAK,CAACO,cAAN,CAAqB,UAArB,CALb;AAMI,IAAA,WAAW,EAAE,KANjB;AAOI,IAAA,QAAQ,EAAE,KAPd;AAQI,IAAA,SAAS,EAAE,EARf;AASI,IAAA,QAAQ,EAAGF,KAAD,IAAUL,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA9DJ,eA4FG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEL,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,QAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGC,KAAD,IAAWL,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CAJzB;AAKI,IAAA,WAAW,EAAEL,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEJ,KAAK,CAACO,cAAN,CAAqB,QAArB,IAAiCP,KAAK,CAACO,cAAN,CAAqB,QAArB,CAAjC,GAAkE,EAN7E;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,QAAQ,EAAE,KARd;AASI,IAAA,SAAS,EAAE,EATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CA5FH,CADC,CAtET,CADJ;AAsLH,CAxLD;;AA0LA,eAAeT,UAAU,CAACC,UAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nconst AddCourier = (props) => {\r\n    const { Country } = props;\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n                    <Row>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_COURIERNAME\" })}\r\n                                name= \"scouriername\"\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_COURIERNAME\" })}\r\n                                value={props.selectedRecord[\"scouriername\"] ? props.selectedRecord[\"scouriername\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={100}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_CONTACTPERSON\" })}\r\n                                name= \"scontactperson\"\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_CONTACTPERSON\" })}\r\n                                value={props.selectedRecord[\"scontactperson\"] ? props.selectedRecord[\"scontactperson\"] : \"\"}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                maxLength={100}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormTextarea\r\n                                label={props.intl.formatMessage({ id:\"IDS_ADDRESS1\" })}\r\n                                name=\"saddress1\"\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS1\" })}\r\n                                value={props.selectedRecord[\"saddress1\"] ? props.selectedRecord[\"saddress1\"] : \"\"}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                maxLength={255}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormTextarea\r\n                                label={props.intl.formatMessage({ id:\"IDS_ADDRESS2\" })}\r\n                                name=\"saddress2\"\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS2\" })}\r\n                                value={props.selectedRecord[\"saddress2\"] ? props.selectedRecord[\"saddress2\"] : \"\"}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                maxLength={255}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormTextarea\r\n                                label={props.intl.formatMessage({ id:\"IDS_ADDRESS3\" })}\r\n                                name=\"saddress3\"\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS3\" })}\r\n                                value={props.selectedRecord[\"saddress3\"] ? props.selectedRecord[\"saddress3\"] : \"\"}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                maxLength={255}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                 <Col md={6}>   \r\n                <Row>  \r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_COUNTRY\" })}\r\n                            name={\"ncountrycode\"} \r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"ncountrycode\"] : \"\"}\r\n                            options={Country}\r\n                            optionId=\"ncountrycode\"\r\n                            optionValue=\"scountryname\"\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                            as={\"select\"}\r\n                            onChange={(event) => props.onComboChange(event, \"ncountrycode\")}\r\n                            \r\n                        />\r\n                     </Col>\r\n          \r\n                    <Col md={12}>\r\n                       <FormInput\r\n                            name={\"semail\"}\r\n                            type=\"email\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_EMAIL\"})}                            \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_EMAIL\"})}\r\n                            value ={ props.selectedRecord[\"semail\"]}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                            onChange={(event)=> props.onInputOnChange(event)}                            \r\n                       />\r\n                   </Col>\r\n                    <Col md={12}>\r\n                       <FormInput\r\n                            name={\"smobileno\"}\r\n                            type=\"text\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_MOBILENO\"})}                   \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_MOBILENO\"})}\r\n                            value ={ props.selectedRecord[\"smobileno\"] }\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                       /> \r\n                       \r\n                        {/* <FormNumericInput\r\n                              name={\"smobileno\"}\r\n                              label={ props.intl.formatMessage({ id:\"IDS_MOBILENO\"})}                   \r\n                              placeholder={ props.intl.formatMessage({ id:\"IDS_MOBILENO\"})}\r\n                              type=\"number\"\r\n                              value ={ props.selectedRecord[\"smobileno\"] }\r\n                              strict={true}\r\n                              maxLength={10}\r\n                              onChange={(event) => props.onNumericInputOnChange(event, \"smobileno\")}\r\n                              precision={0}\r\n                              className=\"form-control\"\r\n                              isMandatory={false}\r\n                              errors=\"Please provide a valid number.\"\r\n                            /> */}\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            name={\"sphoneno\"}\r\n                            type=\"text\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}                  \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}\r\n                            value ={ props.selectedRecord[\"sphoneno\"]}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                       /> \r\n                        {/* <FormNumericInput\r\n                                name={\"sphoneno\"}\r\n                                label={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}                  \r\n                                placeholder={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}\r\n                                type=\"number\"\r\n                                value ={ props.selectedRecord[\"sphoneno\"]}\r\n                                strict={true}\r\n                                maxLength={10}\r\n                                onChange={(event) => props.onNumericInputOnChange(event, \"sphoneno\")}\r\n                                precision={0}\r\n                                className=\"form-control\"\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                errors=\"Please provide a valid number.\"\r\n                            />*/}\r\n                   </Col>\r\n                   \r\n                  \r\n                   <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_FAXNO\" })}\r\n                            name= \"sfaxno\"\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_FAXNO\" })}\r\n                            value={props.selectedRecord[\"sfaxno\"] ? props.selectedRecord[\"sfaxno\"] : \"\"}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                        />\r\n                    </Col>\r\n                 \r\n                   </Row>\r\n                   </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddCourier);"]},"metadata":{},"sourceType":"module"}