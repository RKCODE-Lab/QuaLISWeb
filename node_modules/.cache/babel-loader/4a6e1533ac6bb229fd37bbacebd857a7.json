{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\competencemanagement\\\\trainingcertificate\\\\AddParticipants.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\nimport FormMultiSelect from '../../../components/form-multi-select/form-multi-select.component';\nimport { injectIntl } from 'react-intl';\n\nconst AddParticipants = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SECTION\"\n    }),\n    isSearchable: true,\n    name: \"nsectioncode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.section // optionId='ntestcategorycode'\n    // optionValue='stestcategoryname'\n    // value={this.state.ntestcategorycode}\n    // defaultValue={props.ntestcategorycode || []}\n    ,\n    value: props.selectedRecord[\"nsectioncode\"] ? props.selectedRecord[\"nsectioncode\"] : \"\",\n    onChange: value => props.handleChange(value, \"nsectioncode\", \"Section\"),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormMultiSelect, {\n    label: props.intl.formatMessage({\n      id: \"IDS_PARTICIPANTSNAME\"\n    }),\n    name: \"nusercode\",\n    isSearchable: true,\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    showOption: true,\n    options: props.sectionUsers || [],\n    optionId: \"nusercode\",\n    optionValue: \"sfullname\",\n    onChange: value => props.handleChange(value, \"nusercode\", \"\"),\n    value: props.selectedRecord[\"nusercode\"] ? props.selectedRecord[\"nusercode\"] || [] : [],\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddParticipants);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/competencemanagement/trainingcertificate/AddParticipants.jsx"],"names":["React","Row","Col","FormSelectSearch","FormMultiSelect","injectIntl","AddParticipants","props","intl","formatMessage","id","section","selectedRecord","value","handleChange","sectionUsers"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,gBAAP,MAA6B,qEAA7B;AACA,OAAOC,eAAP,MAA4B,mEAA5B;AAEA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAE/B,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,gBAAD;AACQ,IAAA,SAAS,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADnB;AAEQ,IAAA,YAAY,EAAE,IAFtB;AAGQ,IAAA,IAAI,EAAE,cAHd;AAIQ,IAAA,UAAU,EAAE,KAJpB;AAKQ,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALrB;AAMQ,IAAA,WAAW,EAAE,IANrB;AAOQ,IAAA,WAAW,EAAE,KAPrB;AAQQ,IAAA,OAAO,EAAEH,KAAK,CAACI,OARvB,CASQ;AACA;AACA;AACA;AAZR;AAaQ,IAAA,KAAK,EAAEJ,KAAK,CAACK,cAAN,CAAqB,cAArB,IAAwCL,KAAK,CAACK,cAAN,CAAqB,cAArB,CAAxC,GAA+E,EAb9F;AAcQ,IAAA,QAAQ,EAAEC,KAAK,IAAIN,KAAK,CAACO,YAAN,CAAmBD,KAAnB,EAA0B,cAA1B,EAA0C,SAA1C,CAd3B;AAeQ,IAAA,iBAAiB,EAAE,IAf3B;AAgBQ,IAAA,gBAAgB,EAAE,IAhB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAqBI,oBAAC,eAAD;AACI,IAAA,KAAK,EAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,WAFV;AAGI,IAAA,YAAY,EAAE,IAHlB;AAII,IAAA,UAAU,EAAE,KAJhB;AAKI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,IANjB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,UAAU,EAAE,IARhB;AASI,IAAA,OAAO,EAAEH,KAAK,CAACQ,YAAN,IAAsB,EATnC;AAUI,IAAA,QAAQ,EAAC,WAVb;AAWI,IAAA,WAAW,EAAC,WAXhB;AAYI,IAAA,QAAQ,EAAEF,KAAK,IAAIN,KAAK,CAACO,YAAN,CAAmBD,KAAnB,EAAyB,WAAzB,EAAsC,EAAtC,CAZvB;AAaI,IAAA,KAAK,EAAKN,KAAK,CAACK,cAAN,CAAqB,WAArB,IAAoCL,KAAK,CAACK,cAAN,CAAqB,WAArB,KAAmC,EAAvE,GAA0E,EAbxF;AAcI,IAAA,gBAAgB,EAAE,IAdtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CADJ,CADJ;AA2DH,CA7DD;;AA+DA,eAAeP,UAAU,CAACC,eAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport FormMultiSelect from '../../../components/form-multi-select/form-multi-select.component';\r\n\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst AddParticipants = (props) => {\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n            <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                    isSearchable={true}\r\n                    name={\"nsectioncode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.section}\r\n                    // optionId='ntestcategorycode'\r\n                    // optionValue='stestcategoryname'\r\n                    // value={this.state.ntestcategorycode}\r\n                    // defaultValue={props.ntestcategorycode || []}\r\n                    value={props.selectedRecord[\"nsectioncode\"] ?  props.selectedRecord[\"nsectioncode\"] : \"\"}\r\n                    onChange={value => props.handleChange(value, \"nsectioncode\", \"Section\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            \r\n                <FormMultiSelect\r\n                    label={props.intl.formatMessage({ id: \"IDS_PARTICIPANTSNAME\" })}\r\n                    name={\"nusercode\"}\r\n                    isSearchable={true}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    showOption={true}\r\n                    options={props.sectionUsers || []}\r\n                    optionId='nusercode'\r\n                    optionValue='sfullname'\r\n                    onChange={value => props.handleChange(value,\"nusercode\", \"\")}\r\n                    value = { props.selectedRecord[\"nusercode\"] ? props.selectedRecord[\"nusercode\"]||[]:[]}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormMultiSelect>\r\n                \r\n                {/* <FormMultiSelect\r\n                                        name={props.extractedColumnList[1].dataField}\r\n                                        label={props.intl.formatMessage({ id: props.extractedColumnList[1].idsName })}\r\n                                        options={props.comboDataList || []}\r\n                                        optionId={props.extractedColumnList[1].optionId}\r\n                                        optionValue={props.extractedColumnList[1].optionValue}\r\n                                        value={props.selectedRecord ? props.selectedRecord[props.extractedColumnList[1].dataField]|| [] : []}\r\n                                        isMandatory={true}\r\n                                        isClearable={true}\r\n                                        disableSearch={false}\r\n                                        disabled={false}\r\n                                        closeMenuOnSelect={false}\r\n                                        alphabeticalSort={true}\r\n                                        onChange={(event) => props.onComboChange(event, props.extractedColumnList[1].dataField)} */}\r\n            </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default injectIntl(AddParticipants);"]},"metadata":{},"sourceType":"module"}