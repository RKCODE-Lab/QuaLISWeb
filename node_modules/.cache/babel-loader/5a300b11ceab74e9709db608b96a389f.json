{"ast":null,"code":"import React from'react';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Nav}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';//import { faLink } from '@fortawesome/free-solid-svg-icons';\nimport{faPlus}from'@fortawesome/free-solid-svg-icons';import DataGrid from'../../components/data-grid/data-grid.component';var ParameterMappingTab=function ParameterMappingTab(props){var parameterMapId=props.controlMap.has(\"AddDashBoardParameterMapping\")&&props.controlMap.get(\"AddDashBoardParameterMapping\").ncontrolcode;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(parameterMapId)===-1,onClick:function onClick(){return props.getDashBoardParameterMappingComboService({dashBoardTypes:props.masterData.selectedDashBoardTypes,operation:\"create\",ncontrolCode:parameterMapId,userInfo:props.userInfo,screenName:\"IDS_PARAMETERMAPPING\"});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_PARAMETERMAPPING\",defaultMessage:\"Parameter Mappring\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"ndashboardparametermappingcode\",data:props.masterData[\"DashBoardParameterMapping\"]||[],dataResult:props.dataResult,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:props.extractedColumnList,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,inputParam:props.inputParam,userInfo:props.userInfo,pageable:false,scrollable:\"scrollable\",isComponent:false,isActionRequired:false,isToolBarRequired:false,selectedId:props.selectedId,name:props.name,hideColumnFilter:true}))));};export default injectIntl(ParameterMappingTab);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dashboardtypes/ParameterMappingTab.js"],"names":["React","injectIntl","FormattedMessage","Row","Col","Nav","FontAwesomeIcon","faPlus","DataGrid","ParameterMappingTab","props","parameterMapId","controlMap","has","get","ncontrolcode","userRoleControlRights","indexOf","getDashBoardParameterMappingComboService","dashBoardTypes","masterData","selectedDashBoardTypes","operation","ncontrolCode","userInfo","screenName","dataResult","dataState","dataStateChange","extractedColumnList","inputParam","selectedId","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,YAA7C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,GAAnB,KAA8B,iBAA9B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA;AACA,OAASC,MAAT,KAAuB,mCAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CAEnC,GAAMC,CAAAA,cAAc,CAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,8BAArB,GAAwDH,KAAK,CAACE,UAAN,CAAiBE,GAAjB,CAAqB,8BAArB,EAAqDC,YAApI,CAEA,mBAAQ,qDAmBJ,2BAAK,SAAS,CAAC,gBAAf,eACI,2BAAK,SAAS,CAAC,4BAAf,eACI,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,aAApB,CAAkC,MAAM,CAAEL,KAAK,CAACM,qBAAN,CAA4BC,OAA5B,CAAoCN,cAApC,IAAwD,CAAC,CAAnG,CACG,OAAO,CAAE,yBAAMD,CAAAA,KAAK,CAACQ,wCAAN,CAA+C,CAC7DC,cAAc,CAAET,KAAK,CAACU,UAAN,CAAiBC,sBAD4B,CAE7DC,SAAS,CAAE,QAFkD,CAExCC,YAAY,CAAEZ,cAF0B,CAG7Da,QAAQ,CAAEd,KAAK,CAACc,QAH6C,CAI7DC,UAAU,CAAE,sBAJiD,CAA/C,CAAN,EADZ,eAOI,oBAAC,eAAD,EAAiB,IAAI,CAAElB,MAAvB,EAPJ,kBAQI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,sBAArB,CAA4C,cAAc,CAAC,oBAA3D,EARJ,CADJ,CADJ,CAnBI,cAkCJ,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,QAAD,EAAU,eAAe,CAAE,gCAA3B,CACI,IAAI,CAAEG,KAAK,CAACU,UAAN,CAAiB,2BAAjB,GAAiD,EAD3D,CAEI,UAAU,CAAEV,KAAK,CAACgB,UAFtB,CAGI,SAAS,CAAEhB,KAAK,CAACiB,SAHrB,CAII,eAAe,CAAEjB,KAAK,CAACkB,eAJ3B,CAKI,mBAAmB,CAAElB,KAAK,CAACmB,mBAL/B,CAMI,UAAU,CAAEnB,KAAK,CAACE,UANtB,CAOI,qBAAqB,CAAEF,KAAK,CAACM,qBAPjC,CAQI,UAAU,CAAEN,KAAK,CAACoB,UARtB,CASI,QAAQ,CAAEpB,KAAK,CAACc,QATpB,CAUI,QAAQ,CAAE,KAVd,CAWI,UAAU,CAAE,YAXhB,CAYI,WAAW,CAAE,KAZjB,CAaI,gBAAgB,CAAE,KAbtB,CAcI,iBAAiB,CAAE,KAdvB,CAeI,UAAU,CAAEd,KAAK,CAACqB,UAftB,CAgBI,IAAI,CAAErB,KAAK,CAACsB,IAhBhB,CAiBI,gBAAgB,CAAE,IAjBtB,EADJ,CADJ,CAlCI,CAAR,CA2DH,CA/DD,CAgEA,cAAe/B,CAAAA,UAAU,CAACQ,mBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import { faLink } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n\r\nconst ParameterMappingTab = (props) => {\r\n\r\n    const parameterMapId = props.controlMap.has(\"AddDashBoardParameterMapping\") && props.controlMap.get(\"AddDashBoardParameterMapping\").ncontrolcode;\r\n\r\n    return (<>\r\n        {/* <div className=\"actions-stripe\">\r\n            <div className=\"d-flex justify-content-end\">\r\n                <Nav.Link name=\"parametermappinglink\"\r\n                    hidden={props.userRoleControlRights.indexOf(parameterMapId) === -1}\r\n                    className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                    data-tip={props.intl.formatMessage({ id: \"IDS_PARAMETERMAPPING\" })}\r\n                    onClick={() => props.getDashBoardParameterMappingComboService({\r\n                        dashBoardTypes: props.masterData.selectedDashBoardTypes,\r\n                        operation: \"create\", ncontrolCode: parameterMapId,\r\n                        userInfo: props.userInfo,\r\n                        screenName: \"IDS_PARAMETERMAPPING\"\r\n                    })}>\r\n                    <FontAwesomeIcon icon={faLink} name=\"mappingreporticon\"/>\r\n                </Nav.Link>\r\n            </div>\r\n        </div> */}\r\n\r\n\r\n        <div className=\"actions-stripe\">\r\n            <div className=\"d-flex justify-content-end\">\r\n                <Nav.Link className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(parameterMapId) === -1}\r\n                   onClick={() => props.getDashBoardParameterMappingComboService({\r\n                    dashBoardTypes: props.masterData.selectedDashBoardTypes,\r\n                    operation: \"create\", ncontrolCode: parameterMapId,\r\n                    userInfo: props.userInfo,\r\n                    screenName: \"IDS_PARAMETERMAPPING\"\r\n                })}>\r\n                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                    <FormattedMessage id='IDS_PARAMETERMAPPING' defaultMessage='Parameter Mappring' />\r\n                </Nav.Link>\r\n            </div>\r\n        </div>\r\n\r\n        <Row noGutters={true}>\r\n            <Col md={12}>\r\n                <DataGrid primaryKeyField={\"ndashboardparametermappingcode\"}\r\n                    data={props.masterData[\"DashBoardParameterMapping\"] || []}\r\n                    dataResult={props.dataResult}\r\n                    dataState={props.dataState}\r\n                    dataStateChange={props.dataStateChange}\r\n                    extractedColumnList={props.extractedColumnList}\r\n                    controlMap={props.controlMap}\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    inputParam={props.inputParam}\r\n                    userInfo={props.userInfo}\r\n                    pageable={false}\r\n                    scrollable={\"scrollable\"}\r\n                    isComponent={false}\r\n                    isActionRequired={false}\r\n                    isToolBarRequired={false}\r\n                    selectedId={props.selectedId}\r\n                    name={props.name}\r\n                    hideColumnFilter={true}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    </>\r\n    )\r\n}\r\nexport default injectIntl(ParameterMappingTab);"]},"metadata":{},"sourceType":"module"}