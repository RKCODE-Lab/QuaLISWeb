{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\Scheduler\\\\SchedulerParameterTab.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { process } from '@progress/kendo-data-query';\nimport ResultGrid from '../resultgrid/ResultGrid';\n\nclass SchedulerParameterTab extends React.Component {\n  render() {\n    const extractedColumnList = [];\n    extractedColumnList.push({\n      \"idsName\": \"IDS_PARAMETERNAME\",\n      \"dataField\": \"sparametersynonym\",\n      \"width\": \"175px\"\n    }, {\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"175px\"\n    }, {\n      \"idsName\": \"IDS_PARAMETERTYPE\",\n      \"dataField\": \"sparametertypename\",\n      \"width\": \"175px\"\n    });\n\n    if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample) {\n      extractedColumnList.push({\n        \"idsName\": this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode] : \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"width\": \"155px\"\n      });\n    }\n\n    extractedColumnList.push({\n      \"idsName\": this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode] : \"IDS_ARNUMBER\",\n      \"dataField\": \"sarno\",\n      \"width\": \"155px\"\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ResultGrid, {\n      primaryKeyField: \"nschedulertestparametercode\",\n      data: this.props.masterData.SchedulerConfigurationParameter,\n      dataResult: process(this.props.masterData.SchedulerConfigurationParameter || [], this.props.dataState),\n      dataState: this.props.dataState,\n      dataStateChange: this.props.dataStateChange,\n      expandField: \"\",\n      extractedColumnList: extractedColumnList,\n      userInfo: this.props.userInfo,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      pageable: true,\n      isComponent: true,\n      isActionRequired: false,\n      isToolBarRequired: false,\n      scrollable: \"scrollable\",\n      methodUrl: \"Status\",\n      selectedId: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(SchedulerParameterTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/Scheduler/SchedulerParameterTab.jsx"],"names":["React","Row","Col","injectIntl","process","ResultGrid","SchedulerParameterTab","Component","render","extractedColumnList","push","props","masterData","nneedsubsample","genericLabel","userInfo","slanguagetypecode","SchedulerConfigurationParameter","dataState","dataStateChange","controlMap","userRoleControlRights","inputParam"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ResultGrid from '../resultgrid/ResultGrid';\r\n\r\nclass SchedulerParameterTab extends React.Component {\r\n\r\n    render() {\r\n       \r\n        const extractedColumnList = [];        \r\n\r\n        extractedColumnList.push(\r\n            { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"175px\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"175px\" },\r\n            { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"sparametertypename\", \"width\": \"175px\" });\r\n   \r\n\r\n        if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample) {\r\n            extractedColumnList.push({ \"idsName\":this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]: \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"155px\" });\r\n        }\r\n        extractedColumnList.push({ \"idsName\":this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]: \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"width\": \"155px\" });\r\n      \r\n       \r\n        \r\n        return (\r\n            <>\r\n                <Row noGutters={\"true\"}>\r\n                    <Col md={12}>\r\n                        <ResultGrid\r\n                            primaryKeyField={\"nschedulertestparametercode\"}\r\n                            data={this.props.masterData.SchedulerConfigurationParameter}\r\n                            dataResult={process(this.props.masterData.SchedulerConfigurationParameter || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                             expandField=\"\"\r\n                            extractedColumnList={extractedColumnList}\r\n                            userInfo={this.props.userInfo}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            pageable={true}\r\n                            isComponent={true}\r\n                            isActionRequired={false}\r\n                            isToolBarRequired={false}\r\n                            scrollable={\"scrollable\"}\r\n                            methodUrl={\"Status\"}\r\n                           \r\n                            selectedId={null}\r\n                        \r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(SchedulerParameterTab);"]},"metadata":{},"sourceType":"module"}