{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\OOSMaster.jsx\";\nimport React from 'react';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { Col, Row, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { FormattedMessage } from \"react-intl\";\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\nimport { getControlMap, onSaveMandatoryValidation, showEsign, Lims_JSON_stringify, create_UUID, replaceUpdatedObject, rearrangeDateFormat } from '../../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport { callService, getOOSMasterData, getOosMasterDetail, onSaveOOSWorkFlowTransaction, updateStore, viewAttachment, // onSaveOOSMasterChecklist,\nonSaveOOSChecklistQb, deleteOOSWorkFlowTransaction, getOOSDetailsData, filterColumnData, onUpdateOOSWorkFlowTransaction } from '../../actions';\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\nimport Axios from 'axios';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport rsapi from '../../rsapi';\nimport AddOOSWorkFlowTransaction from './AddOOSWorkFlowTransaction';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport EsignStateHandle from '../audittrail/EsignStateHandle';\nimport { constructOptionList } from '../../components/CommonScript'; // import AddOOSMasterChecklist from './AddOOSMasterChecklist';\n\nimport AddOOSChecklistQb from './AddOOSChecklistQb';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/rectangle-xmark-regular.svg\";\nimport { ReactComponent as Open } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/open.svg\";\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass OOSMaster extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      let masterData = { ...this.props.Login.masterData\n      };\n      let inputData = {\n        userinfo: this.props.Login.userInfo\n      };\n      let inputParam = {\n        masterData,\n        inputData\n      };\n      this.props.getOOSMasterData(inputParam);\n    };\n\n    this.closeModal = () => {\n      let loadEsignStateHandle = this.props.Login.loadEsignStateHandle;\n      let openModal = this.props.Login.openModal;\n      let screenName = this.props.Login.screenName;\n      let operation = this.props.Login.operation;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedId = this.props.Login.selectedId;\n\n      if (this.props.Login.loadEsignStateHandle) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"receive\" || this.props.Login.operation === \"approve\") {\n          loadEsignStateHandle = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsignStateHandle = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n        screenName = \"\";\n        operation = \"\";\n        selectedId = \"\";\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsignStateHandle,\n          selectedRecord,\n          screenName,\n          operation,\n          selectedId\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData.OosWorkFlowTransaction || [], event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.oosDetailsDataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData.OOSMasterDetails || [], event.dataState),\n        oosDetailsDataState: event.dataState\n      });\n    };\n\n    this.openOosMasterStep = controlCode => {\n      const isInitialRender = true;\n      let selectedRecord = {};\n      const url = \"oos/getOOSWorkFlowType\";\n      let urlArray = [];\n      urlArray.push(rsapi.post(url, {\n        userinfo: this.props.Login.userInfo,\n        noosmastercode: this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.noosmastercode\n      }));\n      Axios.all(urlArray).then(response => {\n        let responseData = response[0].data;\n        const OosWorkFlowTypeMap = constructOptionList(responseData.oosWorkFlowType || [], \"noosworkflowtypecode\", \"soosworkflowtypename\", 'noosworkflowtypecode', 'ascending', false);\n        let OosWorkFlowType = OosWorkFlowTypeMap.get(\"OptionList\");\n        let noosworkflowtypecode = [];\n        let ntranscode = [];\n        const OosStepStatusMap = constructOptionList(responseData.OosStepStatus || [], \"ntranscode\", \"stransdisplaystatus\", 'ntranscode', 'ascending', false);\n        let OosStepStatus = OosStepStatusMap.get(\"OptionList\");\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal: true,\n            OosWorkFlowType,\n            OosStepStatus,\n            noosworkflowtypecode,\n            ntranscode,\n            screenName: \"IDS_OOSWORKFLOWSTEP\",\n            operation: \"create\",\n            isInitialRender,\n            selectedRecord,\n            ncontrolCode: controlCode\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      }); // }\n    };\n\n    this.editOosMasterStep = editParam => {\n      const isInitialRender = true;\n      let selectedWorkFlowTransaction = editParam.editRow;\n      const url = \"oos/getActiveOosWorkFlowTransactionById\";\n      let urlArray = [];\n      urlArray.push(rsapi.post(url, {\n        userinfo: this.props.Login.userInfo,\n        noosworkflowtransactioncode: selectedWorkFlowTransaction && selectedWorkFlowTransaction.noosworkflowtransactioncode,\n        noosmastercode: selectedWorkFlowTransaction && selectedWorkFlowTransaction.noosmastercode\n      }));\n      Axios.all(urlArray).then(response => {\n        let responseData = response[0].data;\n\n        if (responseData && responseData.OosWorkFlowTransaction && responseData.OosWorkFlowTransaction !== null && responseData.OosWorkFlowTransaction.length > 0) {\n          const OosStepStatusMap = constructOptionList(responseData.OosStepStatus || [], \"ntranscode\", \"stransdisplaystatus\", 'ntranscode', 'ascending', false);\n          const OosStepStatus = OosStepStatusMap.get(\"OptionList\");\n          const noosworkflowtypecode = {\n            label: responseData.OosWorkFlowTransaction[0].soosworkflowtypename,\n            value: responseData.OosWorkFlowTransaction[0].noosworkflowtypecode\n          };\n          const ntranscode = {\n            label: responseData.OosWorkFlowTransaction[0].stransdisplaystatus,\n            value: responseData.OosWorkFlowTransaction[0].ntransactionstatus\n          };\n          let selectedRecord = {\n            noosworkflowtypecode: noosworkflowtypecode,\n            ntranscode: ntranscode,\n            scomments: responseData.OosWorkFlowTransaction[0].scomments,\n            sadditionalcomments: responseData.OosWorkFlowTransaction[0].sadditionalcomments\n          };\n          const scomments = responseData.OosWorkFlowTransaction[0].scomments;\n          const sadditionalcomments = responseData.OosWorkFlowTransaction[0].sadditionalcomments;\n          const selectedId = responseData.OosWorkFlowTransaction[0].noosworkflowtransactioncode;\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: true,\n              OosStepStatus,\n              noosworkflowtypecode,\n              ntranscode,\n              screenName: \"IDS_OOSWORKFLOWSTEP\",\n              operation: \"update\",\n              isInitialRender,\n              scomments,\n              sadditionalcomments,\n              selectedRecord,\n              ncontrolCode: editParam.ncontrolCode,\n              selectedId\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_ALREADYDELETED\"\n          }));\n        }\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      }); // }\n    };\n\n    this.deleteOOSWorkFlowTransaction = deleteParam => {\n      let selectedRecord = deleteParam.selectedRecord;\n      let inputData = {};\n      inputData[\"noosworkflowtransactioncode\"] = selectedRecord.noosworkflowtransactioncode;\n      inputData[\"noosmastercode\"] = selectedRecord.noosmastercode;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"OOSWorkFlowTransaction\",\n        inputData: inputData,\n        operation: \"delete\",\n        selectedRecord: this.state.selectedRecord,\n        masterData: this.props.Login.masterData\n      };\n      this.props.deleteOOSWorkFlowTransaction(inputParam);\n    };\n\n    this.viewChecklistQb = inputParam => {\n      const isInitialRender = true;\n      let masterData = inputParam.masterData;\n      let selectedRow = inputParam.viewRow;\n      const url = \"oos/viewCheclistQb\";\n      let urlArray = [];\n      urlArray.push(rsapi.post(url, {\n        userinfo: this.props.Login.userInfo,\n        noosworkflowtransactioncode: selectedRow.noosworkflowtransactioncode,\n        noosmastercode: selectedRow.noosmastercode\n      }));\n      Axios.all(urlArray).then(response => {\n        let templateData = response[0].data.ChecklistData;\n        masterData[\"templateData\"] = templateData;\n        let selectedId = selectedRow.noosworkflowtransactioncode;\n        let selectedRecord = {};\n        let lsteditedQB = [];\n        templateData.map(checklist => {\n          selectedRecord[checklist.nchecklistversionqbcode] = {\n            nchecklistqbcode: checklist.nchecklistqbcode,\n            nchecklistversioncode: checklist.nchecklistversioncode,\n            nchecklistversionqbcode: checklist.nchecklistversionqbcode,\n            sdefaultvalue: checklist.nchecklistcomponentcode === 7 ? rearrangeDateFormat(this.props.Login.userInfo, checklist.sdefaultvalue) : checklist.sdefaultvalue,\n            noosworkflowtransactioncode: inputParam.primaryKeyValue\n          };\n          lsteditedQB.push(checklist.nchecklistversionqbcode);\n          return null;\n        });\n        templateData.map(checklist => {\n          selectedRecord['jsondata'] = { ...selectedRecord['jsondata'],\n            [checklist.nchecklistversionqbcode]: checklist.nchecklistcomponentcode === 7 ? rearrangeDateFormat(this.props.Login.userInfo, checklist.sdefaultvalue) : checklist.sdefaultvalue\n          };\n          return null;\n        });\n        selectedRecord[\"editedQB\"] = lsteditedQB;\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal: true,\n            screenName: \"IDS_OOSCHECKLISTQB\",\n            operation: \"view\",\n            isInitialRender,\n            selectedRecord,\n            ncontrolCode: inputParam.ncontrolCode,\n            masterData,\n            selectedId\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.downloadWorkFlowTransactionFile = downloadParam => {\n      let downloadParameterValue = downloadParam.inputData;\n      delete downloadParameterValue.userinfo;\n      const inputParam = {\n        inputData: {\n          oosworkflowtransactionfile: downloadParameterValue,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"oos\",\n        operation: \"download\",\n        methodUrl: \"OOSWorkFlowTransaction\",\n        screenName: \"Step File\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.childDataChange = selectedRecord => {\n      let isInitialRender = false;\n      this.setState({\n        selectedRecord: { ...selectedRecord\n        },\n        isInitialRender\n      });\n    };\n\n    this.onMandatoryCheck = () => {\n      const mandatoryFields = this.props.Login.loadEsignStateHandle ? [{\n        \"idsName\": \"IDS_PASSWORD\",\n        \"dataField\": \"esignpassword\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REASON\",\n        \"dataField\": \"esignreason\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"esigncomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }] : this.props.Login.screenName === \"IDS_OOSWORKFLOWSTEP\" ? [{\n        \"mandatory\": true,\n        \"idsName\": \"IDS_STEPNAME\",\n        \"dataField\": \"noosworkflowtypecode\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"scomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textarea\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_STATUS\",\n        \"dataField\": \"ntranscode\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }] : [];\n      onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields, this.props.Login.loadEsignStateHandle ? this.validateEsign : this.onSaveClick, this.props.Login.loadEsignStateHandle);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      if (this.props.Login.screenName === \"IDS_OOSWORKFLOWSTEP\") {\n        if (this.props.Login.operation === \"create\") {\n          const formData = new FormData();\n          const selectedRecord = this.state.selectedRecord;\n          const acceptedFiles = selectedRecord.sfilename;\n          const userInfo = this.props.Login.userInfo;\n          const masterData = this.props.Login.masterData;\n          let isFileEdited = transactionStatus.NO;\n          let fileArray = [];\n\n          if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n            if (this.props.Login.operation === 'create') {\n              acceptedFiles.forEach((file, index) => {\n                const splittedFileName = file.name.split('.');\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n                const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n                const uniquefilename = fileName + '.' + fileExtension;\n                const tempData = {};\n                tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\n                tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\n                tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\n                tempData[\"scomments\"] = selectedRecord.scomments;\n                tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\n                tempData[\"sfilename\"] = file.name ? Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\n                tempData[\"ssystemfilename\"] = uniquefilename;\n                tempData[\"nfilesize\"] = file.size;\n                formData.append(\"uploadedFile\" + index, file);\n                formData.append(\"uniquefilename\" + index, uniquefilename);\n                fileArray.push(tempData);\n              });\n              formData.append(\"filecount\", acceptedFiles.length);\n              isFileEdited = transactionStatus.YES;\n            } else {\n              acceptedFiles.forEach((file, index) => {\n                const splittedFileName = file.name.split('.');\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n                const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n                const uniquefilename = fileName + '.' + fileExtension;\n                const tempData = {};\n                tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\n                tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\n                tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\n                tempData[\"scomments\"] = selectedRecord.scomments;\n                tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\n                tempData[\"sfilename\"] = file.name ? Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\n                tempData[\"ssystemfilename\"] = uniquefilename;\n                tempData[\"nfilesize\"] = file.size;\n                formData.append(\"uploadedFile\" + index, file);\n                formData.append(\"uniquefilename\" + index, uniquefilename);\n                formData.append(\"filecount\", acceptedFiles.length);\n                isFileEdited = transactionStatus.YES;\n                fileArray.push(tempData);\n              });\n            }\n          } else {\n            let tempData = {};\n            tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\n            tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\n            tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\n            tempData[\"scomments\"] = selectedRecord.scomments;\n            tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\n            tempData[\"sfilename\"] = acceptedFiles ? Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\n            tempData[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n            tempData[\"nfilesize\"] = selectedRecord.size;\n            fileArray.push(tempData);\n          }\n\n          formData.append(\"isFileEdited\", isFileEdited);\n          formData.append(\"oosworkflowtransaction\", JSON.stringify(fileArray));\n          formData.append(\"nattachmenttypecode\", attachmentType.FTP);\n          formData.append(\"noosworkflowtransactioncode\", masterData.selectedOosMaster);\n          formData.append(\"ncontrolcode\", this.props.Login.ncontrolCode);\n          formData.append(\"userinfo\", JSON.stringify({ ...userInfo,\n            sformname: Lims_JSON_stringify(userInfo.sformname),\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n          }));\n          const inputParam = {\n            inputData: {\n              \"userinfo\": { ...userInfo,\n                sformname: Lims_JSON_stringify(userInfo.sformname),\n                smodulename: Lims_JSON_stringify(userInfo.smodulename),\n                slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n              },\n              formData: formData,\n              isFileupload: true,\n              operation: this.props.Login.operation,\n              classUrl: \"oos\",\n              saveType: saveType,\n              formRef: formRef,\n              methodUrl: \"OOSWorkFlowTransaction\",\n              selectedRecord: this.state.selectedRecord,\n              screenName: this.props.Login.screenName,\n              masterData: this.props.Login.masterData\n            }\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                screenData: {\n                  inputParam\n                },\n                loadEsignStateHandle: true,\n                ncontrolcode: this.props.Login.ncontrolCode\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.onSaveOOSWorkFlowTransaction(inputParam);\n          }\n        } else {\n          const selectedRecord = this.state.selectedRecord;\n          const userInfo = this.props.Login.userInfo;\n          const masterData = this.props.Login.masterData;\n          let inputData = {\n            userinfo: this.props.Login.userInfo,\n            noosmastercode: masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1,\n            noosworkflowtransactioncode: this.props.Login.selectedId,\n            ntranscode: selectedRecord.ntranscode.value,\n            scomments: selectedRecord.scomments,\n            sadditionalcomments: selectedRecord.sadditionalcomments\n          };\n          let inputParam = {\n            masterData,\n            inputData,\n            operation: this.props.Login.operation,\n            classUrl: \"oos\",\n            methodUrl: \"OOSWorkFlowTransaction\"\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                screenData: {\n                  inputParam\n                },\n                loadEsignStateHandle: true,\n                ncontrolcode: this.props.Login.ncontrolCode\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.onUpdateOOSWorkFlowTransaction(inputParam);\n          }\n        }\n      } else if (this.props.Login.screenName === \"IDS_OOSCHECKLISTQB\") {\n        const failedControls = [];\n        const mandatoryFields = [];\n        this.props.Login.masterData.templateData.map(control => control.nmandatoryfield === transactionStatus.YES ? mandatoryFields.push(control) : '');\n        mandatoryFields.forEach(item => {\n          if (this.state.selectedRecord && this.state.selectedRecord[item.nchecklistversionqbcode] && this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue) {\n            if (typeof this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"object\") {\n              if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\n                const alertMessage = item.squestion;\n                failedControls.push(alertMessage);\n              }\n            } else if (typeof this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"string\") {\n              if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.trim().length === 0) {\n                const alertMessage = item.squestion;\n                failedControls.push(alertMessage);\n              }\n            } else {\n              if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\n                const alertMessage = item.squestion;\n                failedControls.push(alertMessage);\n              }\n            }\n          } else {\n            const alertMessage = item.squestion;\n            failedControls.push(alertMessage);\n          }\n        });\n\n        if (failedControls.length === 0) {\n          let inputData = [];\n          inputData[\"userinfo\"] = this.props.Login.userInfo;\n          inputData[\"noosworkflowtransactioncode\"] = this.props.Login.selectedId;\n          const inputParam = {\n            classUrl: this.props.Login.inputParam.classUrl,\n            methodUrl: \"OOSChecklistQb\",\n            displayName: this.props.Login.inputParam.displayName,\n            inputData: inputData,\n            operation: this.props.Login.operation,\n            selectedRecord: this.state.selectedRecord,\n            masterData: this.props.Login.masterData\n          }; // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          //     const updateInfo = {\n          //         typeName: DEFAULT_RETURN,\n          //         data: {\n          //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\n          //             openModal: true, openTemplateModal: true, screenName: \"IDS_GOODSINCHECKLIST\",\n          //             operation: this.props.Login.operation\n          //         }\n          //     }\n          //     this.props.updateStore(updateInfo);\n          // }\n          // else {\n\n          this.props.onSaveOOSChecklistQb(inputParam); // }\n        } else {\n          toast.info(`${this.props.intl.formatMessage({\n            id: \"IDS_ENTER\"\n          })} ${failedControls[0]}`);\n        }\n      }\n    };\n\n    this.openCloseOOS = parameter => {\n      let masterData = parameter.masterData;\n      let urlArray = [];\n      const url = \"oos/openCloseOOS\";\n      urlArray.push(rsapi.post(url, {\n        userinfo: this.props.Login.userInfo,\n        noosmastercode: masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode && masterData.selectedOosMaster.noosmastercode,\n        operation: parameter.operation\n      }));\n      Axios.all(urlArray).then(response => {\n        let OosMaster = masterData.OosMaster;\n\n        if (response[0].data && response[0].data.selectedOosMaster && response[0].data.selectedOosMaster != null) {\n          OosMaster = replaceUpdatedObject([response[0].data.selectedOosMaster], OosMaster, \"noosmastercode\");\n        }\n\n        masterData = { ...masterData,\n          ...response[0].data,\n          ...OosMaster\n        };\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            masterData\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.getOOSDetails = oosDetailParam => {\n      const masterData = oosDetailParam.masterData;\n      let inputData = {};\n      inputData[\"noosmastercode\"] = masterData && masterData.selectedOosMaster ? masterData.selectedOosMaster.noosmastercode : -1;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"OOSDetails\",\n        inputData: inputData,\n        operation: \"view\",\n        selectedRecord: this.state.selectedRecord,\n        masterData: masterData,\n        screenName: \"IDS_OOSDETAILS\"\n      };\n      this.props.getOOSDetailsData(inputParam);\n    };\n\n    this.searchRef = React.createRef();\n    this.state = {\n      dataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      oosDetailsDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      data: []\n    };\n  }\n\n  render() {\n    const filterParam = {\n      inputListName: \"OosMaster\",\n      selectedObject: \"selectedOosMaster\",\n      primaryKeyField: \"noosmastercode\",\n      fetchUrl: \"oos/getActiveOosMasterById\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: [\"sarno\", \"soosno\", \"sproductname\", \"ssamplearno\", \"stransdisplaystatus\", \"sopendate\", \"sclosedate\", \"stestname\"]\n    };\n    const editOOSWorkFlowTransactionId = this.state.controlMap.has(\"EditWorkFlowTransaction\") && this.state.controlMap.get(\"EditWorkFlowTransaction\").ncontrolcode;\n    const viewOOSWorkFlowTransactionId = this.state.controlMap.has(\"ViewWorkFlowTransaction\") && this.state.controlMap.get(\"ViewWorkFlowTransaction\").ncontrolcode;\n    const viewParamWorkFlowTransaction = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"noosworkflowtransactioncode\",\n      operation: \"view\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: viewOOSWorkFlowTransactionId,\n      masterData: this.props.Login.masterData\n    };\n    const editParamWorkFlowTransaction = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"noosworkflowtransactioncode\",\n      operation: \"update\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editOOSWorkFlowTransactionId,\n      masterData: this.props.Login.masterData\n    };\n    const openOOSId = this.state.controlMap.has(\"OpenOOS\") && this.state.controlMap.get(\"OpenOOS\").ncontrolcode;\n    const closeOOSId = this.state.controlMap.has(\"CloseOOS\") && this.state.controlMap.get(\"CloseOOS\").ncontrolcode;\n    const viewOOSDetailsId = this.state.controlMap.has(\"ViewOOSDetails\") && this.state.controlMap.get(\"ViewOOSDetails\").ncontrolcode;\n    const openOOSParam = {\n      operation: \"open\",\n      primaryKeyField: \"noosmastercode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: openOOSId,\n      masterData: this.props.Login.masterData\n    };\n    const closeOOSParam = {\n      operation: \"close\",\n      primaryKeyField: \"noosmastercode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: closeOOSId,\n      masterData: this.props.Login.masterData\n    };\n    const oosDetailParam = {\n      operation: \"view\",\n      primaryKeyField: \"noosmastercode\",\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: closeOOSId,\n      masterData: this.props.Login.masterData\n    };\n    let userStatusCSS = \"\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.DRAFT) {\n      userStatusCSS = \"outline-secondary\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.RECEIVED) {\n      userStatusCSS = \"outline-success\";\n    } else {\n      userStatusCSS = \"outline-Final\";\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"IDS_OOSMASTER\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.OosMaster,\n      getMasterDetail: OosMaster => this.props.getOosMasterDetail(OosMaster, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedOosMaster,\n      primaryKeyField: \"noosmastercode\",\n      mainField: \"soosno\",\n      firstField: \"stestname\",\n      secondField: \"sarno\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: undefined,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openModal: undefined,\n      showFilterIcon: false,\n      showFilter: false,\n      filterComponent: [],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '8' : \"10\"}`,\n      className: \"position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn \",\n      onClick: this.props.parentFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }, !this.props.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.OosMaster && this.props.Login.masterData.OosMaster.length > 0 && this.props.Login.masterData.selectedOosMaster ? /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.selectedOosMaster.stestname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: activeIconCSS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 69\n      }\n    }), this.props.Login.masterData.selectedOosMaster.stransdisplaystatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(openOOSId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_GENERATEOOS\"\n      }),\n      onClick: e => this.openCloseOOS(openOOSParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Open, {\n      className: \"custom_icons\",\n      width: \"15\",\n      height: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(closeOOSId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_CLOSE\"\n      }),\n      onClick: e => this.openCloseOOS(closeOOSParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      className: \"custom_icons\",\n      width: \"15\",\n      height: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      hidden: this.state.userRoleControlRights.indexOf(viewOOSDetailsId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_OOSDETAILS\"\n      }),\n      onClick: e => this.getOOSDetails(oosDetailParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 69\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"noosmastercode\",\n      data: this.props.Login.masterData.OosWorkFlowTransaction || [],\n      dataResult: process(this.props.Login.masterData.OosWorkFlowTransaction || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: [{\n        \"idsName\": \"IDS_STEPNAME\",\n        \"dataField\": \"soosworkflowtypename\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"scomments\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_ADDITIONALCOMMENTS\",\n        \"dataField\": \"sadditionalcomments\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_STATUS\",\n        \"dataField\": \"stransdisplaystatus\",\n        \"width\": \"200px\"\n      }, {\n        \"idsName\": \"IDS_FILENAME\",\n        \"dataField\": \"sfilename\",\n        \"width\": \"200px\"\n      }],\n      userInfo: this.props.Login.userInfo,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      deleteRecord: this.deleteOOSWorkFlowTransaction,\n      methodUrl: \"WorkFlowTransaction\",\n      pageable: true,\n      isComponent: false,\n      hasDynamicColSize: true,\n      isActionRequired: true,\n      isToolBarRequired: true,\n      isAddRequired: true,\n      addRecord: this.openOosMasterStep,\n      editParam: editParamWorkFlowTransaction,\n      fetchRecord: this.editOosMasterStep,\n      isRefreshRequired: false,\n      isImportRequired: false,\n      isDownloadPDFRequired: false,\n      isDownloadExcelRequired: false,\n      scrollable: 'scrollable',\n      gridHeight: '600px',\n      expandField: \"expanded\",\n      viewParam: viewParamWorkFlowTransaction,\n      viewRecord: this.viewChecklistQb,\n      viewDownloadFile: this.downloadWorkFlowTransactionFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 53\n      }\n    }))) : \"\")))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      size: this.props.Login.screenName === \"IDS_OOSDETAILS\" ? \"xl\" : \"lg\",\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onMandatoryCheck,\n      esign: this.props.Login.loadEsignStateHandle,\n      validateEsign: this.validateEsign,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: [],\n      hideSave: this.props.Login.screenName === \"IDS_OOSDETAILS\" ? true : this.props.Login.screenName === \"IDS_OOSCHECKLISTQB\" && this.props.Login.masterData && this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.CLOSED ? true : false,\n      addComponent: this.props.Login.loadEsignStateHandle ? /*#__PURE__*/React.createElement(EsignStateHandle, {\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        childDataChange: this.childDataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_OOSWORKFLOWSTEP\" && (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") ? /*#__PURE__*/React.createElement(AddOOSWorkFlowTransaction, {\n        inputParam: this.props.Login.inputParam,\n        operation: this.props.Login.operation,\n        selectedRecord: this.state.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        childDataChange: this.childDataChange,\n        OosWorkFlowType: this.props.Login.OosWorkFlowType || [],\n        OosStepStatus: this.props.Login.OosStepStatus || [],\n        noosworkflowtypecode: this.props.Login.noosworkflowtypecode,\n        ntranscode: this.props.Login.ntranscode,\n        OosMaster: this.props.Login.masterData.OosMaster || [],\n        scomments: this.props.Login.scomments || \"\",\n        sadditionalcomments: this.props.Login.sadditionalcomments || \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_OOSCHECKLISTQB\" && this.props.Login.operation === \"view\" ? /*#__PURE__*/React.createElement(AddOOSChecklistQb, {\n        inputParam: this.props.Login.inputParam,\n        operation: this.props.Login.operation,\n        selectedRecord: this.props.Login.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        childDataChange: this.childDataChange,\n        OosMaster: this.props.Login.masterData.OosMaster || [],\n        needValidation: true,\n        templateData: this.props.Login.masterData.templateData,\n        masterData: this.props.Login.masterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_OOSDETAILS\" && this.props.Login.operation === \"view\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_ARNO\",\n        message: \"Ar. No.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 45\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].sarno : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_SAMPLEARNO\",\n        message: \"Sub Ar. No.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 45\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].ssamplearno : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_PRODUCT\",\n        message: \"Sample Type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 45\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].sproductname : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_OPENDATE\",\n        message: \"Open Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 45\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].sopendate : '-'))), /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_CLOSEDATE\",\n        message: \"Close Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 45\n        }\n      }, this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails && this.props.Login.masterData.OOSMasterDetails.length > 0 ? this.props.Login.masterData.OOSMasterDetails[0].sclosedate : '-')))), /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"noosmastercode\",\n        data: this.props.Login.masterData.OOSMasterDetails || [],\n        dataResult: process(this.props.Login.masterData.OOSMasterDetails || [], this.state.oosDetailsDataState),\n        dataState: this.state.oosDetailsDataState,\n        dataStateChange: this.oosDetailsDataStateChange,\n        extractedColumnList: [{\n          \"idsName\": \"IDS_PARAMETERNAME\",\n          \"dataField\": \"sparametersynonym\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_FINALRESULT\",\n          \"dataField\": \"sfinal\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_RESULTFLAG\",\n          \"dataField\": \"sgradename\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_MINA\",\n          \"dataField\": \"smina\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_MINB\",\n          \"dataField\": \"sminb\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_MAXA\",\n          \"dataField\": \"smaxa\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_MAXB\",\n          \"dataField\": \"smaxb\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_DEFAULTVALUE\",\n          \"dataField\": \"sdefaultvalue\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_ENTERBY\",\n          \"dataField\": \"senteredby\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_ENTERDATE\",\n          \"dataField\": \"sentereddate\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_COMPLETEDBY\",\n          \"dataField\": \"scompletedby\",\n          \"width\": \"200px\"\n        }, {\n          \"idsName\": \"IDS_COMPLETEDDATEANDTIME\",\n          \"dataField\": \"scompleteddate\",\n          \"width\": \"200px\"\n        }],\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        pageable: true,\n        isActionRequired: false,\n        isToolBarRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        scrollable: 'scrollable',\n        gridHeight: '500px',\n        expandField: \"expanded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 33\n        }\n      })) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      selectedRecord,\n      skip,\n      take,\n      masterData\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      bool = true;\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n    }\n\n    if (bool) {\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        selectedRecord,\n        skip,\n        take,\n        masterData\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.isInitialRender === false && nextState.selectedRecord !== this.state.selectedRecord) {\n      return false;\n    } else {\n      return true;\n    }\n  } // Commented due to removed tabs\n  // tabDetail = () => {\n  //     const tabMap = new Map();\n  //     const editOOSWorkFlowTransactionId =\n  //         this.state.controlMap.has(\"EditWorkFlowTransaction\") &&\n  //         this.state.controlMap.get(\"EditWorkFlowTransaction\").ncontrolcode;\n  //     const viewOOSWorkFlowTransactionId =\n  //         this.state.controlMap.has(\"ViewWorkFlowTransaction\") &&\n  //         this.state.controlMap.get(\"ViewWorkFlowTransaction\").ncontrolcode;\n  //     // const extractedColumnList = [\n  //     //     { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\" },\n  //     //     { \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"soosworkflowtypename\", \"width\": \"200px\" },\n  //     //     { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\n  //     //     { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\n  //     //     { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\n  //     //     { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\n  //     // ];\n  //     const editParamWorkFlowTransaction = {\n  //         screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"update\",\n  //         inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\n  //     };\n  //     const viewParamWorkFlowTransaction = {\n  //         screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"view\",\n  //         inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: viewOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\n  //     };\n  //     // const editParamOOSChecklist = {\n  //     //     screenName: this.props.Login.screenName, primaryKeyField: \"noosmasterchecklistcode\", operation: \"update\",\n  //     //     inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\n  //     // }\n  //     tabMap.set(\"IDS_WORKFLOWTRANSACTION\",\n  //         <DataGrid\n  //             primaryKeyField={\"noosmastercode\"}\n  //             data={this.props.Login.masterData.OosWorkFlowTransaction || []}\n  //             dataResult={process(this.props.Login.masterData.OosWorkFlowTransaction || [], this.state.sampleGridDataState)}\n  //             dataState={this.state.sampleGridDataState}\n  //             dataStateChange={this.sampleInfoDataStateChange}\n  //             extractedColumnList={[\n  //                 { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\" },\n  //                 { \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"soosworkflowtypename\", \"width\": \"200px\" },\n  //                 { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\n  //                 { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\n  //                 { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\n  //                 { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\n  //             ]}\n  //             // detailedFieldList={[]}\n  //             // exportFieldList={[]}\n  //             userInfo={this.props.Login.userInfo}\n  //             controlMap={this.state.controlMap}\n  //             userRoleControlRights={this.state.userRoleControlRights}\n  //             inputParam={this.props.Login.inputParam}\n  //             deleteRecord={this.deleteOOSWorkFlowTransaction}\n  //             // deleteParam={goodsinDeleteSampleParam}\n  //             methodUrl={\"WorkFlowTransaction\"}\n  //             pageable={true}\n  //             isComponent={false}\n  //             hasDynamicColSize={true}\n  //             isActionRequired={true}\n  //             isToolBarRequired={true}\n  //             isAddRequired={true}\n  //             addRecord={this.openOosMasterStep}\n  //             // fetchRecord={this.fetchEditOosMasterStep}\n  //             editParam={editParamWorkFlowTransaction}\n  //             isRefreshRequired={false}\n  //             isImportRequired={false}\n  //             isDownloadPDFRequired={false}\n  //             isDownloadExcelRequired={false}\n  //             // import={this.ImportFile}\n  //             scrollable={'scrollable'}\n  //             gridHeight={'600px'}\n  //             expandField=\"expanded\"\n  //             viewParam={viewParamWorkFlowTransaction}\n  //             viewRecord={this.viewChecklistQb}\n  //         // screenName=\"OOS Master\"\n  //         />\n  //     );\n  //     // tabMap.set(\"IDS_OOSCHECKLIST\",\n  //     //     <DataGrid\n  //     //         primaryKeyField={\"noosmastercode\"}\n  //     //         data={this.props.Login.masterData.OosMasterChecklist || []}\n  //     //         dataResult={process(this.props.Login.masterData.OosMasterChecklist || [], this.state.sampleGridDataState)}\n  //     //         dataState={this.state.sampleGridDataState}\n  //     //         dataStateChange={this.sampleInfoDataStateChange}\n  //     //         extractedColumnList={[\n  //     //             { \"idsName\": \"IDS_CHECKLIST\", \"dataField\": \"schecklistname\", \"width\": \"200px\" },\n  //     //             { \"idsName\": \"IDS_CHECKLISTVERSION\", \"dataField\": \"schecklistversionname\", \"width\": \"200px\" },\n  //     //             // { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\n  //     //             // { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\n  //     //             // { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\n  //     //             // { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\n  //     //         ]}\n  //     //         // detailedFieldList={[]}\n  //     //         // exportFieldList={[]}\n  //     //         userInfo={this.props.Login.userInfo}\n  //     //         controlMap={this.state.controlMap}\n  //     //         userRoleControlRights={this.state.userRoleControlRights}\n  //     //         inputParam={this.props.Login.inputParam}\n  //     //         deleteRecord={this.DeleteGoodsInSample}\n  //     //         // deleteParam={goodsinDeleteSampleParam}\n  //     //         methodUrl={\"OOSChecklist\"}\n  //     //         pageable={true}\n  //     //         isComponent={false}\n  //     //         hasDynamicColSize={true}\n  //     //         isActionRequired={true}\n  //     //         isToolBarRequired={true}\n  //     //         isAddRequired={true}\n  //     //         addRecord={this.openOosMasterChecklist}\n  //     //         // fetchRecord={this.fetchEditOosMasterStep}\n  //     //         editParam={editParamOOSChecklist}\n  //     //         isRefreshRequired={false}\n  //     //         isImportRequired={false}\n  //     //         isDownloadPDFRequired={false}\n  //     //         isDownloadExcelRequired={false}\n  //     //         // import={this.ImportFile}\n  //     //         scrollable={'scrollable'}\n  //     //         gridHeight={'600px'}\n  //     //         expandField=\"expanded\"\n  //     //     // screenName=\"OOS Master\"\n  //     //     />\n  //     // );\n  //     return tabMap;\n  // }\n  // onTabChange = (tabProps) => {\n  //     const screenName = tabProps.screenName;\n  //     const updateInfo = {\n  //         typeName: DEFAULT_RETURN,\n  //         data: { screenName }\n  //     }\n  //     this.props.updateStore(updateInfo);\n  // }\n\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  getOOSMasterData,\n  getOosMasterDetail,\n  updateStore,\n  viewAttachment,\n  onSaveOOSWorkFlowTransaction,\n  getOOSDetailsData,\n  filterColumnData,\n  // onSaveOOSMasterChecklist, \n  onSaveOOSChecklistQb,\n  deleteOOSWorkFlowTransaction,\n  onUpdateOOSWorkFlowTransaction\n})(injectIntl(OOSMaster));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/approval/OOSMaster.jsx"],"names":["React","ListWrapper","Col","Row","Card","Nav","FormGroup","FormLabel","ListMaster","connect","injectIntl","FormattedMessage","ReadOnlyText","ContentPanel","getControlMap","onSaveMandatoryValidation","showEsign","Lims_JSON_stringify","create_UUID","replaceUpdatedObject","rearrangeDateFormat","toast","callService","getOOSMasterData","getOosMasterDetail","onSaveOOSWorkFlowTransaction","updateStore","viewAttachment","onSaveOOSChecklistQb","deleteOOSWorkFlowTransaction","getOOSDetailsData","filterColumnData","onUpdateOOSWorkFlowTransaction","transactionStatus","attachmentType","DataGrid","process","Axios","DEFAULT_RETURN","rsapi","AddOOSWorkFlowTransaction","SlideOutModal","EsignStateHandle","constructOptionList","AddOOSChecklistQb","faEye","FontAwesomeIcon","mapStateToProps","state","Login","OOSMaster","Component","constructor","props","reloadData","searchRef","current","value","masterData","inputData","userinfo","userInfo","inputParam","closeModal","loadEsignStateHandle","openModal","screenName","operation","selectedRecord","selectedId","updateInfo","typeName","data","dataStateChange","event","setState","dataResult","OosWorkFlowTransaction","dataState","oosDetailsDataStateChange","OOSMasterDetails","oosDetailsDataState","openOosMasterStep","controlCode","isInitialRender","url","urlArray","push","post","noosmastercode","selectedOosMaster","all","then","response","responseData","OosWorkFlowTypeMap","oosWorkFlowType","OosWorkFlowType","get","noosworkflowtypecode","ntranscode","OosStepStatusMap","OosStepStatus","ncontrolCode","catch","error","status","message","warn","loading","editOosMasterStep","editParam","selectedWorkFlowTransaction","editRow","noosworkflowtransactioncode","length","label","soosworkflowtypename","stransdisplaystatus","ntransactionstatus","scomments","sadditionalcomments","intl","formatMessage","id","deleteParam","classUrl","methodUrl","viewChecklistQb","selectedRow","viewRow","templateData","ChecklistData","lsteditedQB","map","checklist","nchecklistversionqbcode","nchecklistqbcode","nchecklistversioncode","sdefaultvalue","nchecklistcomponentcode","primaryKeyValue","downloadWorkFlowTransactionFile","downloadParam","downloadParameterValue","oosworkflowtransactionfile","childDataChange","onMandatoryCheck","mandatoryFields","validateEsign","onSaveClick","saveType","formRef","formData","FormData","acceptedFiles","sfilename","isFileEdited","NO","fileArray","Array","isArray","forEach","file","index","splittedFileName","name","split","fileExtension","fileName","ssystemfilename","uniquefilename","tempData","replaceAll","trim","size","append","YES","JSON","stringify","FTP","sformname","smodulename","slanguagename","isFileupload","userRoleControlRights","nformcode","screenData","ncontrolcode","failedControls","control","nmandatoryfield","item","alertMessage","squestion","displayName","info","openCloseOOS","parameter","OosMaster","getOOSDetails","oosDetailParam","createRef","skip","take","settings","parseInt","controlMap","Map","masterStatus","render","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","searchFieldList","editOOSWorkFlowTransactionId","has","viewOOSWorkFlowTransactionId","viewParamWorkFlowTransaction","editParamWorkFlowTransaction","openOOSId","closeOOSId","viewOOSDetailsId","openOOSParam","closeOOSParam","userStatusCSS","activeIconCSS","DRAFT","RECEIVED","sidebarview","searchedData","undefined","parentFunction","stestname","indexOf","e","CLOSED","sarno","ssamplearno","sproductname","sopendate","sclosedate","getDerivedStateFromProps","multilingualMsg","componentDidUpdate","previousProps","bool","Object","values","shouldComponentUpdate","nextProps","nextState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { Col, Row, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { ReadOnlyText, ContentPanel } from \"../../components/App.styles\";\r\nimport {\r\n    getControlMap, onSaveMandatoryValidation, showEsign, Lims_JSON_stringify, create_UUID, replaceUpdatedObject,\r\n    rearrangeDateFormat\r\n} from '../../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, getOOSMasterData, getOosMasterDetail, onSaveOOSWorkFlowTransaction, updateStore, viewAttachment,\r\n    // onSaveOOSMasterChecklist,\r\n    onSaveOOSChecklistQb, deleteOOSWorkFlowTransaction, getOOSDetailsData, filterColumnData, onUpdateOOSWorkFlowTransaction\r\n} from '../../actions';\r\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport Axios from 'axios';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport rsapi from '../../rsapi';\r\nimport AddOOSWorkFlowTransaction from './AddOOSWorkFlowTransaction';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport EsignStateHandle from '../audittrail/EsignStateHandle';\r\nimport { constructOptionList } from '../../components/CommonScript';\r\n// import AddOOSMasterChecklist from './AddOOSMasterChecklist';\r\nimport AddOOSChecklistQb from './AddOOSChecklistQb';\r\nimport { ReactComponent as Close } from '../../assets/image/rectangle-xmark-regular.svg';\r\nimport { ReactComponent as Open } from '../../assets/image/open.svg';\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst mapStateToProps = state => { return ({ Login: state.Login }) }\r\n\r\nclass OOSMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchRef = React.createRef();\r\n        this.state = {\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            oosDetailsDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            data: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const filterParam = {\r\n            inputListName: \"OosMaster\", selectedObject: \"selectedOosMaster\", primaryKeyField: \"noosmastercode\",\r\n            fetchUrl: \"oos/getActiveOosMasterById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sarno\", \"soosno\", \"sproductname\", \"ssamplearno\", \"stransdisplaystatus\", \"sopendate\", \"sclosedate\", \"stestname\"]\r\n        };\r\n\r\n        const editOOSWorkFlowTransactionId =\r\n            this.state.controlMap.has(\"EditWorkFlowTransaction\") &&\r\n            this.state.controlMap.get(\"EditWorkFlowTransaction\").ncontrolcode;\r\n\r\n        const viewOOSWorkFlowTransactionId =\r\n            this.state.controlMap.has(\"ViewWorkFlowTransaction\") &&\r\n            this.state.controlMap.get(\"ViewWorkFlowTransaction\").ncontrolcode;\r\n\r\n        const viewParamWorkFlowTransaction = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"view\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: viewOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\r\n        };\r\n\r\n        const editParamWorkFlowTransaction = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\r\n        };\r\n\r\n        const openOOSId =\r\n            this.state.controlMap.has(\"OpenOOS\") &&\r\n            this.state.controlMap.get(\"OpenOOS\").ncontrolcode;\r\n\r\n        const closeOOSId =\r\n            this.state.controlMap.has(\"CloseOOS\") &&\r\n            this.state.controlMap.get(\"CloseOOS\").ncontrolcode;\r\n\r\n        const viewOOSDetailsId =\r\n            this.state.controlMap.has(\"ViewOOSDetails\") &&\r\n            this.state.controlMap.get(\"ViewOOSDetails\").ncontrolcode;\r\n\r\n        const openOOSParam = {\r\n            operation: \"open\", primaryKeyField: \"noosmastercode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: openOOSId, masterData: this.props.Login.masterData\r\n        }\r\n\r\n        const closeOOSParam = {\r\n            operation: \"close\", primaryKeyField: \"noosmastercode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: closeOOSId, masterData: this.props.Login.masterData\r\n        }\r\n\r\n        const oosDetailParam = {\r\n            operation: \"view\", primaryKeyField: \"noosmastercode\",\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: closeOOSId, masterData: this.props.Login.masterData\r\n        }\r\n\r\n        let userStatusCSS = \"\";\r\n        let activeIconCSS = \"fa fa-check\";\r\n        if (this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.DRAFT) {\r\n            userStatusCSS = \"outline-secondary\";\r\n            activeIconCSS = \"\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.RECEIVED) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else {\r\n            userStatusCSS = \"outline-Final\";\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    <Row noGutters={true} >\r\n                        <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"IDS_OOSMASTER\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.OosMaster}\r\n                                getMasterDetail={(OosMaster) => this.props.getOosMasterDetail(OosMaster, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedOosMaster}\r\n                                primaryKeyField=\"noosmastercode\"\r\n                                mainField=\"soosno\"\r\n                                firstField=\"stestname\"\r\n                                secondField=\"sarno\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={undefined}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={undefined}\r\n                                showFilterIcon={false}\r\n                                showFilter={false}\r\n                                filterComponent={[]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?\r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        {this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.OosMaster && this.props.Login.masterData.OosMaster.length > 0 && this.props.Login.masterData.selectedOosMaster ?\r\n                                            <Card className=\"border-0\">\r\n                                                <Card.Header>\r\n                                                    <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedOosMaster.stestname}</Card.Title>\r\n                                                    <Card.Subtitle>\r\n                                                        <div className=\"d-flex product-category\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                <span className={`btn btn-outlined ${userStatusCSS} btn-sm`}>\r\n                                                                    <i className={activeIconCSS}></i>\r\n                                                                    {this.props.Login.masterData.selectedOosMaster.stransdisplaystatus}\r\n                                                                </span>\r\n                                                            </h2>\r\n                                                            <div className=\"d-inline \">\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(openOOSId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEOOS\" })}\r\n                                                                    onClick={(e) => this.openCloseOOS(openOOSParam)} >\r\n                                                                    <Open className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(closeOOSId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_CLOSE\" })}\r\n                                                                    onClick={(e) => this.openCloseOOS(closeOOSParam)} >\r\n                                                                    <Close className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(viewOOSDetailsId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_OOSDETAILS\" })}\r\n                                                                    onClick={(e) => this.getOOSDetails(oosDetailParam)} >\r\n                                                                    <FontAwesomeIcon icon={faEye} />\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Card.Subtitle>\r\n                                                </Card.Header>\r\n                                                <Card.Body>\r\n                                                    {/* <CustomTab tabDetail={this.tabDetail()} onTabChange={this.onTabChange} /> */}\r\n                                                    <DataGrid\r\n                                                        primaryKeyField={\"noosmastercode\"}\r\n                                                        data={this.props.Login.masterData.OosWorkFlowTransaction || []}\r\n                                                        dataResult={process(this.props.Login.masterData.OosWorkFlowTransaction || [], this.state.dataState)}\r\n                                                        dataState={this.state.dataState}\r\n                                                        dataStateChange={this.dataStateChange}\r\n                                                        extractedColumnList={[\r\n                                                            { \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"soosworkflowtypename\", \"width\": \"200px\" },\r\n                                                            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\r\n                                                            { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\r\n                                                            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" },\r\n                                                            { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" }\r\n                                                        ]}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        inputParam={this.props.Login.inputParam}\r\n                                                        deleteRecord={this.deleteOOSWorkFlowTransaction}\r\n                                                        methodUrl={\"WorkFlowTransaction\"}\r\n                                                        pageable={true}\r\n                                                        isComponent={false}\r\n                                                        hasDynamicColSize={true}\r\n                                                        isActionRequired={true}\r\n                                                        isToolBarRequired={true}\r\n                                                        isAddRequired={true}\r\n                                                        addRecord={this.openOosMasterStep}\r\n                                                        editParam={editParamWorkFlowTransaction}\r\n                                                        fetchRecord={this.editOosMasterStep}\r\n                                                        isRefreshRequired={false}\r\n                                                        isImportRequired={false}\r\n                                                        isDownloadPDFRequired={false}\r\n                                                        isDownloadExcelRequired={false}\r\n                                                        scrollable={'scrollable'}\r\n                                                        gridHeight={'600px'}\r\n                                                        expandField=\"expanded\"\r\n                                                        viewParam={viewParamWorkFlowTransaction}\r\n                                                        viewRecord={this.viewChecklistQb}\r\n                                                        viewDownloadFile={this.downloadWorkFlowTransactionFile}\r\n                                                    />\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                            : \"\"}\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        size={this.props.Login.screenName === \"IDS_OOSDETAILS\" ? \"xl\" : \"lg\"}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onMandatoryCheck}\r\n                        esign={this.props.Login.loadEsignStateHandle}\r\n                        validateEsign={this.validateEsign}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={[]}\r\n                        hideSave={this.props.Login.screenName === \"IDS_OOSDETAILS\" ? true :\r\n                            (this.props.Login.screenName === \"IDS_OOSCHECKLISTQB\" && this.props.Login.masterData\r\n                                && this.props.Login.masterData.selectedOosMaster\r\n                                && this.props.Login.masterData.selectedOosMaster.ntransactionstatus === transactionStatus.CLOSED) ? true : false}\r\n                        addComponent={this.props.Login.loadEsignStateHandle ? (\r\n                            <EsignStateHandle\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                childDataChange={this.childDataChange}\r\n                            />\r\n                        ) : this.props.Login.screenName === \"IDS_OOSWORKFLOWSTEP\" && (this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\") ? (\r\n                            <AddOOSWorkFlowTransaction\r\n                                inputParam={this.props.Login.inputParam}\r\n                                operation={this.props.Login.operation}\r\n                                selectedRecord={this.state.selectedRecord}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                childDataChange={this.childDataChange}\r\n                                OosWorkFlowType={this.props.Login.OosWorkFlowType || []}\r\n                                OosStepStatus={this.props.Login.OosStepStatus || []}\r\n                                noosworkflowtypecode={this.props.Login.noosworkflowtypecode}\r\n                                ntranscode={this.props.Login.ntranscode}\r\n                                OosMaster={this.props.Login.masterData.OosMaster || []}\r\n                                scomments={this.props.Login.scomments || \"\"}\r\n                                sadditionalcomments={this.props.Login.sadditionalcomments || \"\"}\r\n                            />\r\n                        ) : this.props.Login.screenName === \"IDS_OOSCHECKLISTQB\" && (this.props.Login.operation === \"view\") ? (\r\n                            <AddOOSChecklistQb\r\n                                inputParam={this.props.Login.inputParam}\r\n                                operation={this.props.Login.operation}\r\n                                selectedRecord={this.props.Login.selectedRecord}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                childDataChange={this.childDataChange}\r\n                                OosMaster={this.props.Login.masterData.OosMaster || []}\r\n                                needValidation={true}\r\n                                templateData={this.props.Login.masterData.templateData}\r\n                                masterData={this.props.Login.masterData}\r\n                            />\r\n                        ) : this.props.Login.screenName === \"IDS_OOSDETAILS\" && (this.props.Login.operation === \"view\") ? (\r\n                            <>\r\n                                <Row>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <FormLabel>\r\n                                                <FormattedMessage\r\n                                                    id=\"IDS_ARNO\"\r\n                                                    message=\"Ar. No.\"\r\n                                                />\r\n                                            </FormLabel>\r\n                                            <ReadOnlyText>\r\n                                                {\r\n                                                    this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                        && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                        this.props.Login.masterData.OOSMasterDetails[0].sarno : '-'\r\n                                                }\r\n                                            </ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <FormLabel>\r\n                                                <FormattedMessage\r\n                                                    id=\"IDS_SAMPLEARNO\"\r\n                                                    message=\"Sub Ar. No.\"\r\n                                                />\r\n                                            </FormLabel>\r\n                                            <ReadOnlyText>\r\n                                                {\r\n                                                    this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                        && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                        this.props.Login.masterData.OOSMasterDetails[0].ssamplearno : '-'\r\n                                                }\r\n                                            </ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <FormLabel>\r\n                                                <FormattedMessage\r\n                                                    id=\"IDS_PRODUCT\"\r\n                                                    message=\"Sample Type\"\r\n                                                />\r\n                                            </FormLabel>\r\n                                            <ReadOnlyText>\r\n                                                {\r\n                                                    this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                        && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                        this.props.Login.masterData.OOSMasterDetails[0].sproductname : '-'\r\n                                                }\r\n                                            </ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <FormLabel>\r\n                                                <FormattedMessage\r\n                                                    id=\"IDS_OPENDATE\"\r\n                                                    message=\"Open Date\"\r\n                                                />\r\n                                            </FormLabel>\r\n                                            <ReadOnlyText>\r\n                                                {\r\n                                                    this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                        && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                        this.props.Login.masterData.OOSMasterDetails[0].sopendate : '-'\r\n                                                }\r\n                                            </ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <FormGroup>\r\n                                            <FormLabel>\r\n                                                <FormattedMessage\r\n                                                    id=\"IDS_CLOSEDATE\"\r\n                                                    message=\"Close Date\"\r\n                                                />\r\n                                            </FormLabel>\r\n                                            <ReadOnlyText>\r\n                                                {\r\n                                                    this.props.Login.masterData && this.props.Login.masterData.OOSMasterDetails\r\n                                                        && this.props.Login.masterData.OOSMasterDetails.length > 0 ?\r\n                                                        this.props.Login.masterData.OOSMasterDetails[0].sclosedate : '-'\r\n                                                }\r\n                                            </ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <DataGrid\r\n                                    primaryKeyField={\"noosmastercode\"}\r\n                                    data={this.props.Login.masterData.OOSMasterDetails || []}\r\n                                    dataResult={process(this.props.Login.masterData.OOSMasterDetails || [], this.state.oosDetailsDataState)}\r\n                                    dataState={this.state.oosDetailsDataState}\r\n                                    dataStateChange={this.oosDetailsDataStateChange}\r\n                                    extractedColumnList={[\r\n                                        { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_FINALRESULT\", \"dataField\": \"sfinal\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_MINA\", \"dataField\": \"smina\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_MINB\", \"dataField\": \"sminb\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_MAXA\", \"dataField\": \"smaxa\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_MAXB\", \"dataField\": \"smaxb\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_DEFAULTVALUE\", \"dataField\": \"sdefaultvalue\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_ENTERBY\", \"dataField\": \"senteredby\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_ENTERDATE\", \"dataField\": \"sentereddate\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_COMPLETEDBY\", \"dataField\": \"scompletedby\", \"width\": \"200px\" },\r\n                                        { \"idsName\": \"IDS_COMPLETEDDATEANDTIME\", \"dataField\": \"scompleteddate\", \"width\": \"200px\" }\r\n                                    ]}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    pageable={true}\r\n                                    isActionRequired={false}\r\n                                    isToolBarRequired={true}\r\n                                    isRefreshRequired={false}\r\n                                    isImportRequired={false}\r\n                                    isDownloadPDFRequired={false}\r\n                                    isDownloadExcelRequired={false}\r\n                                    scrollable={'scrollable'}\r\n                                    gridHeight={'500px'}\r\n                                    expandField=\"expanded\"\r\n                                />\r\n                            </>\r\n                        ) : \"\"}\r\n                    />\r\n                    : \"\"\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap, selectedRecord, skip, take, masterData } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n        }\r\n        if (bool) {\r\n            this.setState({\r\n                userRoleControlRights, controlMap, selectedRecord, skip, take, masterData\r\n            });\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextState.isInitialRender === false && (nextState.selectedRecord !== this.state.selectedRecord)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let masterData = {\r\n            ...this.props.Login.masterData\r\n        };\r\n        let inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n        let inputParam = {\r\n            masterData,\r\n            inputData\r\n        }\r\n        this.props.getOOSMasterData(inputParam);\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsignStateHandle = this.props.Login.loadEsignStateHandle;\r\n        let openModal = this.props.Login.openModal;\r\n        let screenName = this.props.Login.screenName;\r\n        let operation = this.props.Login.operation;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.props.Login.loadEsignStateHandle) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"receive\" || this.props.Login.operation === \"approve\") {\r\n                loadEsignStateHandle = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsignStateHandle = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            screenName = \"\";\r\n            operation = \"\";\r\n            selectedId = \"\";\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsignStateHandle, selectedRecord, screenName, operation, selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.OosWorkFlowTransaction || [], event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    oosDetailsDataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.OOSMasterDetails || [], event.dataState),\r\n            oosDetailsDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    openOosMasterStep = (controlCode) => {\r\n        const isInitialRender = true;\r\n        let selectedRecord = {};\r\n        const url = \"oos/getOOSWorkFlowType\";\r\n        let urlArray = [];\r\n        urlArray.push(rsapi.post(url, {\r\n            userinfo: this.props.Login.userInfo,\r\n            noosmastercode: (this.props.Login.masterData.selectedOosMaster && this.props.Login.masterData.selectedOosMaster.noosmastercode)\r\n        }))\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let responseData = response[0].data;\r\n                const OosWorkFlowTypeMap = constructOptionList(responseData.oosWorkFlowType || [], \"noosworkflowtypecode\", \"soosworkflowtypename\", 'noosworkflowtypecode', 'ascending', false);\r\n                let OosWorkFlowType = OosWorkFlowTypeMap.get(\"OptionList\");\r\n                let noosworkflowtypecode = [];\r\n                let ntranscode = [];\r\n                const OosStepStatusMap = constructOptionList(responseData.OosStepStatus || [], \"ntranscode\", \"stransdisplaystatus\", 'ntranscode', 'ascending', false);\r\n                let OosStepStatus = OosStepStatusMap.get(\"OptionList\");\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openModal: true,\r\n                        OosWorkFlowType,\r\n                        OosStepStatus,\r\n                        noosworkflowtypecode,\r\n                        ntranscode,\r\n                        screenName: \"IDS_OOSWORKFLOWSTEP\",\r\n                        operation: \"create\",\r\n                        isInitialRender,\r\n                        selectedRecord,\r\n                        ncontrolCode: controlCode\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n        // }\r\n    }\r\n\r\n    editOosMasterStep = (editParam) => {\r\n        const isInitialRender = true;\r\n        let selectedWorkFlowTransaction = editParam.editRow;\r\n        const url = \"oos/getActiveOosWorkFlowTransactionById\";\r\n        let urlArray = [];\r\n        urlArray.push(rsapi.post(url, {\r\n            userinfo: this.props.Login.userInfo,\r\n            noosworkflowtransactioncode: (selectedWorkFlowTransaction && selectedWorkFlowTransaction.noosworkflowtransactioncode),\r\n            noosmastercode: (selectedWorkFlowTransaction && selectedWorkFlowTransaction.noosmastercode)\r\n        }))\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let responseData = response[0].data;\r\n                if (responseData && responseData.OosWorkFlowTransaction && responseData.OosWorkFlowTransaction !== null && responseData.OosWorkFlowTransaction.length > 0) {\r\n                    const OosStepStatusMap = constructOptionList(responseData.OosStepStatus || [], \"ntranscode\", \"stransdisplaystatus\", 'ntranscode', 'ascending', false);\r\n                    const OosStepStatus = OosStepStatusMap.get(\"OptionList\");\r\n                    const noosworkflowtypecode = {\r\n                        label: responseData.OosWorkFlowTransaction[0].soosworkflowtypename,\r\n                        value: responseData.OosWorkFlowTransaction[0].noosworkflowtypecode\r\n                    }\r\n                    const ntranscode = {\r\n                        label: responseData.OosWorkFlowTransaction[0].stransdisplaystatus,\r\n                        value: responseData.OosWorkFlowTransaction[0].ntransactionstatus\r\n                    }\r\n                    let selectedRecord = {\r\n                        noosworkflowtypecode: noosworkflowtypecode,\r\n                        ntranscode: ntranscode,\r\n                        scomments: responseData.OosWorkFlowTransaction[0].scomments,\r\n                        sadditionalcomments: responseData.OosWorkFlowTransaction[0].sadditionalcomments\r\n                    }\r\n                    const scomments = responseData.OosWorkFlowTransaction[0].scomments;\r\n                    const sadditionalcomments = responseData.OosWorkFlowTransaction[0].sadditionalcomments;\r\n                    const selectedId = responseData.OosWorkFlowTransaction[0].noosworkflowtransactioncode\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openModal: true,\r\n                            OosStepStatus,\r\n                            noosworkflowtypecode,\r\n                            ntranscode,\r\n                            screenName: \"IDS_OOSWORKFLOWSTEP\",\r\n                            operation: \"update\",\r\n                            isInitialRender,\r\n                            scomments,\r\n                            sadditionalcomments,\r\n                            selectedRecord,\r\n                            ncontrolCode: editParam.ncontrolCode,\r\n                            selectedId\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYDELETED\" }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n        // }\r\n    }\r\n\r\n    deleteOOSWorkFlowTransaction = (deleteParam) => {\r\n        let selectedRecord = deleteParam.selectedRecord;\r\n        let inputData = {};\r\n        inputData[\"noosworkflowtransactioncode\"] = selectedRecord.noosworkflowtransactioncode;\r\n        inputData[\"noosmastercode\"] = selectedRecord.noosmastercode;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"OOSWorkFlowTransaction\",\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            selectedRecord: this.state.selectedRecord,\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        this.props.deleteOOSWorkFlowTransaction(inputParam);\r\n    }\r\n\r\n    viewChecklistQb = (inputParam) => {\r\n        const isInitialRender = true;\r\n        let masterData = inputParam.masterData;\r\n        let selectedRow = inputParam.viewRow;\r\n        const url = \"oos/viewCheclistQb\";\r\n        let urlArray = [];\r\n        urlArray.push(rsapi.post(url, { userinfo: this.props.Login.userInfo, noosworkflowtransactioncode: selectedRow.noosworkflowtransactioncode, noosmastercode: selectedRow.noosmastercode }))\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let templateData = response[0].data.ChecklistData\r\n                masterData[\"templateData\"] = templateData;\r\n                let selectedId = selectedRow.noosworkflowtransactioncode;\r\n                let selectedRecord = {};\r\n                let lsteditedQB = [];\r\n                templateData.map(checklist => {\r\n                    selectedRecord[checklist.nchecklistversionqbcode] = {\r\n                        nchecklistqbcode: checklist.nchecklistqbcode,\r\n                        nchecklistversioncode: checklist.nchecklistversioncode,\r\n                        nchecklistversionqbcode: checklist.nchecklistversionqbcode,\r\n                        sdefaultvalue: checklist.nchecklistcomponentcode === 7 ? rearrangeDateFormat(this.props.Login.userInfo, checklist.sdefaultvalue) : checklist.sdefaultvalue,\r\n                        noosworkflowtransactioncode: inputParam.primaryKeyValue,\r\n                    }\r\n                    lsteditedQB.push(checklist.nchecklistversionqbcode);\r\n                    return null;\r\n                });\r\n                templateData.map(checklist => {\r\n                    selectedRecord['jsondata'] = {\r\n                        ...selectedRecord['jsondata'],\r\n                        [checklist.nchecklistversionqbcode]: checklist.nchecklistcomponentcode === 7 ? rearrangeDateFormat(this.props.Login.userInfo, checklist.sdefaultvalue) : checklist.sdefaultvalue\r\n                    }\r\n                    return null;\r\n                });\r\n                selectedRecord[\"editedQB\"] = lsteditedQB;\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openModal: true,\r\n                        screenName: \"IDS_OOSCHECKLISTQB\",\r\n                        operation: \"view\",\r\n                        isInitialRender,\r\n                        selectedRecord,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        masterData,\r\n                        selectedId\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    downloadWorkFlowTransactionFile = (downloadParam) => {\r\n        let downloadParameterValue = downloadParam.inputData;\r\n        delete(downloadParameterValue.userinfo);\r\n        const inputParam = {\r\n            inputData: {\r\n                oosworkflowtransactionfile: downloadParameterValue,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"oos\",\r\n            operation: \"download\",\r\n            methodUrl: \"OOSWorkFlowTransaction\",\r\n            screenName: \"Step File\"\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n\r\n    }\r\n    // openOosMasterChecklist = (controlCode) => {\r\n    //     const isInitialRender = true;\r\n    //     let selectedRecord = {};\r\n    //     const url = \"oos/getChecklist\";\r\n    //     let urlArray = [];\r\n    //     urlArray.push(rsapi.post(url, { userinfo: this.props.Login.userInfo }))\r\n    //     Axios.all(urlArray)\r\n    //         .then(response => {\r\n    //             let responseData = response[0].data;\r\n    //             const CheckListMap = constructOptionList(responseData.CheckList || [], \"nchecklistcode\", \"schecklistname\", '', 'nchecklistcode', false);\r\n    //             let CheckList = CheckListMap.get(\"OptionList\");\r\n    //             const updateInfo = {\r\n    //                 typeName: DEFAULT_RETURN,\r\n    //                 data: {\r\n    //                     openModal: true,\r\n    //                     CheckList,\r\n    //                     screenName: \"IDS_OOSMASTERCHECKLIST\",\r\n    //                     operation: \"create\",\r\n    //                     isInitialRender,\r\n    //                     selectedRecord,\r\n    //                     ncontrolCode: controlCode\r\n    //                 }\r\n    //             }\r\n    //             this.props.updateStore(updateInfo);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             if (error.response.status === 500) {\r\n    //                 toast.error(error.message);\r\n    //             } else {\r\n    //                 toast.warn(error.response.data);\r\n    //             }\r\n    //             this.setState({\r\n    //                 loading: false\r\n    //             });\r\n    //         });\r\n    // }\r\n\r\n    // fetchEditOosMasterStep = (editParam) => {\r\n    //     const isInitialRender = true;\r\n    //     let editParamValue = editParam;\r\n    //     const url = \"oos/getActiveOOSWorkFlowTransactionById\";\r\n    //         let urlArray = [];\r\n    //         urlArray.push(rsapi.post(url, { userinfo: this.props.Login.userInfo, noosworkflowtransactioncode: editParam.primaryKeyValue }))\r\n    //         Axios.all(urlArray)\r\n    //             .then(response => {\r\n    //                 let responseData = response[0].data;\r\n    //                 const OosWorkFlowTypeMap = constructOptionList(responseData.oosWorkFlowType || [], \"noosworkflowtypecode\", \"soosworkflowtypename\", '', 'noosworkflowtypecode', false);\r\n    //                 let OosWorkFlowType = OosWorkFlowTypeMap.get(\"OptionList\");\r\n    //                 let noosworkflowtypecode = [];\r\n    //                 let ntranscode = [];\r\n    //                 const OosStepStatusMap = constructOptionList(responseData.OosStepStatus || [], \"ntranscode\", \"stransdisplaystatus\", '', 'ntranscode', false);\r\n    //                 let OosStepStatus = OosStepStatusMap.get(\"OptionList\");\r\n    //                 const updateInfo = {\r\n    //                     typeName: DEFAULT_RETURN,\r\n    //                     data: {\r\n    //                         openModal: true,\r\n    //                         OosWorkFlowType,\r\n    //                         OosStepStatus,\r\n    //                         noosworkflowtypecode,\r\n    //                         ntranscode,\r\n    //                         screenName: \"IDS_OOSMASTERSTEP\",\r\n    //                         operation: \"create\",\r\n    //                         isInitialRender,\r\n    //                         // selectedRecord,\r\n    //                         ncontrolCode: editParam.ncontrolCode\r\n    //                     }\r\n    //                 }\r\n    //                 this.props.updateStore(updateInfo);\r\n    //             })\r\n    //             .catch(error => {\r\n    //                 if (error.response.status === 500) {\r\n    //                     toast.error(error.message);\r\n    //                 } else {\r\n    //                     toast.warn(error.response.data);\r\n    //                 }\r\n    //                 this.setState({\r\n    //                     loading: false\r\n    //                 });\r\n    //             });\r\n    // }\r\n\r\n    childDataChange = (selectedRecord) => {\r\n        let isInitialRender = false;\r\n        this.setState({\r\n            selectedRecord: {\r\n                ...selectedRecord\r\n            },\r\n            isInitialRender\r\n        });\r\n    }\r\n\r\n    onMandatoryCheck = () => {\r\n        const mandatoryFields =\r\n            this.props.Login.loadEsignStateHandle ?\r\n                [\r\n                    { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"esignpassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                    { \"idsName\": \"IDS_REASON\", \"dataField\": \"esignreason\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"esigncomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                ]\r\n                :\r\n                this.props.Login.screenName === \"IDS_OOSWORKFLOWSTEP\" ?\r\n                    [\r\n                        { \"mandatory\": true, \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"noosworkflowtypecode\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"mandatory\": true, \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textarea\" },\r\n                        { \"mandatory\": true, \"idsName\": \"IDS_STATUS\", \"dataField\": \"ntranscode\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" }\r\n                    ]\r\n                    :\r\n                    []\r\n            ;\r\n        onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields, this.props.Login.loadEsignStateHandle ? this.validateEsign : this.onSaveClick, this.props.Login.loadEsignStateHandle);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.screenName === \"IDS_OOSWORKFLOWSTEP\") {\r\n            if (this.props.Login.operation === \"create\") {\r\n                const formData = new FormData();\r\n                const selectedRecord = this.state.selectedRecord;\r\n                const acceptedFiles = selectedRecord.sfilename;\r\n                const userInfo = this.props.Login.userInfo;\r\n                const masterData = this.props.Login.masterData;\r\n                let isFileEdited = transactionStatus.NO;\r\n                let fileArray = [];\r\n                if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                    if (this.props.Login.operation === 'create') {\r\n                        acceptedFiles.forEach((file, index) => {\r\n                            const splittedFileName = file.name.split('.');\r\n                            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                                selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                            const uniquefilename = fileName + '.' + fileExtension;\r\n                            const tempData = {};\r\n                            tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\r\n                            tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\r\n                            tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\r\n                            tempData[\"scomments\"] = selectedRecord.scomments;\r\n                            tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\r\n                            tempData[\"sfilename\"] = file.name ? Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\r\n                            tempData[\"ssystemfilename\"] = uniquefilename;\r\n                            tempData[\"nfilesize\"] = file.size;\r\n                            formData.append(\"uploadedFile\" + index, file);\r\n                            formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                            fileArray.push(tempData);\r\n                        });\r\n                        formData.append(\"filecount\", acceptedFiles.length);\r\n                        isFileEdited = transactionStatus.YES;\r\n                    } else {\r\n                        acceptedFiles.forEach((file, index) => {\r\n                            const splittedFileName = file.name.split('.');\r\n                            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                                selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                            const uniquefilename = fileName + '.' + fileExtension;\r\n                            const tempData = {};\r\n                            tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\r\n                            tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\r\n                            tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\r\n                            tempData[\"scomments\"] = selectedRecord.scomments;\r\n                            tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\r\n                            tempData[\"sfilename\"] = file.name ? Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\r\n                            tempData[\"ssystemfilename\"] = uniquefilename;\r\n                            tempData[\"nfilesize\"] = file.size;\r\n                            formData.append(\"uploadedFile\" + index, file);\r\n                            formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                            formData.append(\"filecount\", acceptedFiles.length);\r\n                            isFileEdited = transactionStatus.YES;\r\n                            fileArray.push(tempData);\r\n                        });\r\n                    }\r\n                } else {\r\n                    let tempData = {};\r\n                    tempData[\"noosmastercode\"] = masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1;\r\n                    tempData[\"noosworkflowtypecode\"] = selectedRecord.noosworkflowtypecode.value;\r\n                    tempData[\"ntranscode\"] = selectedRecord.ntranscode.value;\r\n                    tempData[\"scomments\"] = selectedRecord.scomments;\r\n                    tempData[\"sadditionalcomments\"] = selectedRecord.sadditionalcomments;\r\n                    tempData[\"sfilename\"] = acceptedFiles ? Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false) : null;\r\n                    tempData[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                    tempData[\"nfilesize\"] = selectedRecord.size;\r\n                    fileArray.push(tempData);\r\n                }\r\n                formData.append(\"isFileEdited\", isFileEdited);\r\n                formData.append(\"oosworkflowtransaction\", JSON.stringify(fileArray));\r\n                formData.append(\"nattachmenttypecode\", attachmentType.FTP);\r\n                formData.append(\"noosworkflowtransactioncode\", masterData.selectedOosMaster);\r\n                formData.append(\"ncontrolcode\", this.props.Login.ncontrolCode);\r\n                formData.append(\"userinfo\", JSON.stringify({\r\n                    ...userInfo,\r\n                    sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                }));\r\n\r\n                const inputParam = {\r\n                    inputData: {\r\n                        \"userinfo\": {\r\n                            ...userInfo,\r\n                            sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                            smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                        },\r\n                        formData: formData,\r\n                        isFileupload: true,\r\n                        operation: this.props.Login.operation,\r\n                        classUrl: \"oos\",\r\n                        saveType: saveType,\r\n                        formRef: formRef,\r\n                        methodUrl: \"OOSWorkFlowTransaction\",\r\n                        selectedRecord: this.state.selectedRecord,\r\n                        screenName: this.props.Login.screenName,\r\n                        masterData: this.props.Login.masterData\r\n                    }\r\n                };\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            screenData: { inputParam },\r\n                            loadEsignStateHandle: true,\r\n                            ncontrolcode: this.props.Login.ncontrolCode\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.onSaveOOSWorkFlowTransaction(inputParam);\r\n                }\r\n            } else {\r\n                const selectedRecord = this.state.selectedRecord;\r\n                const userInfo = this.props.Login.userInfo;\r\n                const masterData = this.props.Login.masterData;\r\n                let inputData = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    noosmastercode: masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode ? masterData.selectedOosMaster.noosmastercode : -1,\r\n                    noosworkflowtransactioncode: this.props.Login.selectedId,\r\n                    ntranscode: selectedRecord.ntranscode.value,\r\n                    scomments: selectedRecord.scomments,\r\n                    sadditionalcomments: selectedRecord.sadditionalcomments\r\n                }\r\n\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData,\r\n                    operation: this.props.Login.operation,\r\n                    classUrl: \"oos\",\r\n                    methodUrl: \"OOSWorkFlowTransaction\"\r\n                }\r\n\r\n                if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            screenData: { inputParam },\r\n                            loadEsignStateHandle: true,\r\n                            ncontrolcode: this.props.Login.ncontrolCode\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                } else {\r\n                    this.props.onUpdateOOSWorkFlowTransaction(inputParam);\r\n                }\r\n\r\n            }\r\n        } else if (this.props.Login.screenName === \"IDS_OOSCHECKLISTQB\") {\r\n            const failedControls = [];\r\n            const mandatoryFields = [];\r\n            this.props.Login.masterData.templateData.map(control =>\r\n                control.nmandatoryfield === transactionStatus.YES ? mandatoryFields.push(control) : ''\r\n            )\r\n            mandatoryFields.forEach(item => {\r\n                if (this.state.selectedRecord && this.state.selectedRecord[item.nchecklistversionqbcode] && this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue) {\r\n                    if (typeof this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"object\") {\r\n                        if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                    else if (typeof this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue === \"string\") {\r\n                        if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.trim().length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this.state.selectedRecord[item.nchecklistversionqbcode].sdefaultvalue.length === 0) {\r\n                            const alertMessage = item.squestion\r\n                            failedControls.push(alertMessage);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    const alertMessage = item.squestion\r\n                    failedControls.push(alertMessage);\r\n                }\r\n            });\r\n            if (failedControls.length === 0) {\r\n                let inputData = [];\r\n                inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                inputData[\"noosworkflowtransactioncode\"] = this.props.Login.selectedId;\r\n                const inputParam = {\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    methodUrl: \"OOSChecklistQb\",\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    selectedRecord: this.state.selectedRecord,\r\n                    masterData: this.props.Login.masterData\r\n                }\r\n                // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                //     const updateInfo = {\r\n                //         typeName: DEFAULT_RETURN,\r\n                //         data: {\r\n                //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                //             openModal: true, openTemplateModal: true, screenName: \"IDS_GOODSINCHECKLIST\",\r\n                //             operation: this.props.Login.operation\r\n                //         }\r\n                //     }\r\n                //     this.props.updateStore(updateInfo);\r\n                // }\r\n                // else {\r\n                this.props.onSaveOOSChecklistQb(inputParam);\r\n                // }\r\n            }\r\n            else {\r\n                toast.info(`${this.props.intl.formatMessage({ id: \"IDS_ENTER\" })} ${failedControls[0]}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    openCloseOOS = (parameter) => {\r\n        let masterData = parameter.masterData;\r\n        let urlArray = [];\r\n        const url = \"oos/openCloseOOS\";\r\n        urlArray.push(rsapi.post(url, {\r\n            userinfo: this.props.Login.userInfo,\r\n            noosmastercode: masterData.selectedOosMaster && masterData.selectedOosMaster.noosmastercode\r\n                && masterData.selectedOosMaster.noosmastercode,\r\n            operation: parameter.operation\r\n        }))\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let OosMaster = masterData.OosMaster;\r\n                if (response[0].data && response[0].data.selectedOosMaster && response[0].data.selectedOosMaster != null) {\r\n                    OosMaster = replaceUpdatedObject([response[0].data.selectedOosMaster], OosMaster, \"noosmastercode\");\r\n                }\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response[0].data,\r\n                    ...OosMaster\r\n                }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        masterData,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    getOOSDetails = (oosDetailParam) => {\r\n        const masterData = oosDetailParam.masterData;\r\n        let inputData = {};\r\n        inputData[\"noosmastercode\"] = masterData && masterData.selectedOosMaster ? masterData.selectedOosMaster.noosmastercode : -1;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"OOSDetails\",\r\n            inputData: inputData,\r\n            operation: \"view\",\r\n            selectedRecord: this.state.selectedRecord,\r\n            masterData: masterData,\r\n            screenName: \"IDS_OOSDETAILS\"\r\n        }\r\n        this.props.getOOSDetailsData(inputParam);\r\n    }\r\n\r\n    // Commented due to removed tabs\r\n    // tabDetail = () => {\r\n    //     const tabMap = new Map();\r\n\r\n    //     const editOOSWorkFlowTransactionId =\r\n    //         this.state.controlMap.has(\"EditWorkFlowTransaction\") &&\r\n    //         this.state.controlMap.get(\"EditWorkFlowTransaction\").ncontrolcode;\r\n\r\n    //     const viewOOSWorkFlowTransactionId =\r\n    //         this.state.controlMap.has(\"ViewWorkFlowTransaction\") &&\r\n    //         this.state.controlMap.get(\"ViewWorkFlowTransaction\").ncontrolcode;\r\n    //     // const extractedColumnList = [\r\n    //     //     { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\" },\r\n    //     //     { \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"soosworkflowtypename\", \"width\": \"200px\" },\r\n    //     //     { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\r\n    //     //     { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\r\n    //     //     { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\r\n    //     //     { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\r\n    //     // ];\r\n\r\n    //     const editParamWorkFlowTransaction = {\r\n    //         screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"update\",\r\n    //         inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\r\n    //     };\r\n\r\n    //     const viewParamWorkFlowTransaction = {\r\n    //         screenName: this.props.Login.screenName, primaryKeyField: \"noosworkflowtransactioncode\", operation: \"view\",\r\n    //         inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: viewOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\r\n    //     };\r\n\r\n    //     // const editParamOOSChecklist = {\r\n    //     //     screenName: this.props.Login.screenName, primaryKeyField: \"noosmasterchecklistcode\", operation: \"update\",\r\n    //     //     inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editOOSWorkFlowTransactionId, masterData: this.props.Login.masterData\r\n    //     // }\r\n\r\n    //     tabMap.set(\"IDS_WORKFLOWTRANSACTION\",\r\n    //         <DataGrid\r\n    //             primaryKeyField={\"noosmastercode\"}\r\n    //             data={this.props.Login.masterData.OosWorkFlowTransaction || []}\r\n    //             dataResult={process(this.props.Login.masterData.OosWorkFlowTransaction || [], this.state.sampleGridDataState)}\r\n    //             dataState={this.state.sampleGridDataState}\r\n    //             dataStateChange={this.sampleInfoDataStateChange}\r\n    //             extractedColumnList={[\r\n    //                 { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestname\", \"width\": \"200px\" },\r\n    //                 { \"idsName\": \"IDS_STEPNAME\", \"dataField\": \"soosworkflowtypename\", \"width\": \"200px\" },\r\n    //                 { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\r\n    //                 { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\r\n    //                 { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\r\n    //                 { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\r\n    //             ]}\r\n    //             // detailedFieldList={[]}\r\n    //             // exportFieldList={[]}\r\n    //             userInfo={this.props.Login.userInfo}\r\n    //             controlMap={this.state.controlMap}\r\n    //             userRoleControlRights={this.state.userRoleControlRights}\r\n    //             inputParam={this.props.Login.inputParam}\r\n    //             deleteRecord={this.deleteOOSWorkFlowTransaction}\r\n    //             // deleteParam={goodsinDeleteSampleParam}\r\n    //             methodUrl={\"WorkFlowTransaction\"}\r\n    //             pageable={true}\r\n    //             isComponent={false}\r\n    //             hasDynamicColSize={true}\r\n    //             isActionRequired={true}\r\n    //             isToolBarRequired={true}\r\n    //             isAddRequired={true}\r\n    //             addRecord={this.openOosMasterStep}\r\n    //             // fetchRecord={this.fetchEditOosMasterStep}\r\n    //             editParam={editParamWorkFlowTransaction}\r\n    //             isRefreshRequired={false}\r\n    //             isImportRequired={false}\r\n    //             isDownloadPDFRequired={false}\r\n    //             isDownloadExcelRequired={false}\r\n    //             // import={this.ImportFile}\r\n    //             scrollable={'scrollable'}\r\n    //             gridHeight={'600px'}\r\n    //             expandField=\"expanded\"\r\n    //             viewParam={viewParamWorkFlowTransaction}\r\n    //             viewRecord={this.viewChecklistQb}\r\n    //         // screenName=\"OOS Master\"\r\n    //         />\r\n    //     );\r\n\r\n    //     // tabMap.set(\"IDS_OOSCHECKLIST\",\r\n    //     //     <DataGrid\r\n    //     //         primaryKeyField={\"noosmastercode\"}\r\n    //     //         data={this.props.Login.masterData.OosMasterChecklist || []}\r\n    //     //         dataResult={process(this.props.Login.masterData.OosMasterChecklist || [], this.state.sampleGridDataState)}\r\n    //     //         dataState={this.state.sampleGridDataState}\r\n    //     //         dataStateChange={this.sampleInfoDataStateChange}\r\n    //     //         extractedColumnList={[\r\n    //     //             { \"idsName\": \"IDS_CHECKLIST\", \"dataField\": \"schecklistname\", \"width\": \"200px\" },\r\n    //     //             { \"idsName\": \"IDS_CHECKLISTVERSION\", \"dataField\": \"schecklistversionname\", \"width\": \"200px\" },\r\n    //     //             // { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\r\n    //     //             // { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" },\r\n    //     //             // { \"idsName\": \"IDS_ADDITIONALCOMMENTS\", \"dataField\": \"sadditionalcomments\", \"width\": \"200px\" },\r\n    //     //             // { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" }\r\n    //     //         ]}\r\n    //     //         // detailedFieldList={[]}\r\n    //     //         // exportFieldList={[]}\r\n    //     //         userInfo={this.props.Login.userInfo}\r\n    //     //         controlMap={this.state.controlMap}\r\n    //     //         userRoleControlRights={this.state.userRoleControlRights}\r\n    //     //         inputParam={this.props.Login.inputParam}\r\n    //     //         deleteRecord={this.DeleteGoodsInSample}\r\n    //     //         // deleteParam={goodsinDeleteSampleParam}\r\n    //     //         methodUrl={\"OOSChecklist\"}\r\n    //     //         pageable={true}\r\n    //     //         isComponent={false}\r\n    //     //         hasDynamicColSize={true}\r\n    //     //         isActionRequired={true}\r\n    //     //         isToolBarRequired={true}\r\n    //     //         isAddRequired={true}\r\n    //     //         addRecord={this.openOosMasterChecklist}\r\n    //     //         // fetchRecord={this.fetchEditOosMasterStep}\r\n    //     //         editParam={editParamOOSChecklist}\r\n    //     //         isRefreshRequired={false}\r\n    //     //         isImportRequired={false}\r\n    //     //         isDownloadPDFRequired={false}\r\n    //     //         isDownloadExcelRequired={false}\r\n    //     //         // import={this.ImportFile}\r\n    //     //         scrollable={'scrollable'}\r\n    //     //         gridHeight={'600px'}\r\n    //     //         expandField=\"expanded\"\r\n    //     //     // screenName=\"OOS Master\"\r\n    //     //     />\r\n    //     // );\r\n    //     return tabMap;\r\n    // }\r\n\r\n    // onTabChange = (tabProps) => {\r\n    //     const screenName = tabProps.screenName;\r\n    //     const updateInfo = {\r\n    //         typeName: DEFAULT_RETURN,\r\n    //         data: { screenName }\r\n    //     }\r\n    //     this.props.updateStore(updateInfo);\r\n    // }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, getOOSMasterData, getOosMasterDetail, updateStore, viewAttachment,\r\n    onSaveOOSWorkFlowTransaction, getOOSDetailsData, filterColumnData,\r\n    // onSaveOOSMasterChecklist, \r\n    onSaveOOSChecklistQb, deleteOOSWorkFlowTransaction, onUpdateOOSWorkFlowTransaction\r\n})(injectIntl(OOSMaster));"]},"metadata":{},"sourceType":"module"}