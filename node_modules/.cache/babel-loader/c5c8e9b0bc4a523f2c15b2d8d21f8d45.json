{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\BarcodeTemplate\\\\AddBarcodeConfiguration.jsx\";\nimport React from \"react\";\nimport { Card, Col, Row } from \"react-bootstrap\";\nimport { injectIntl } from \"react-intl\";\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\n\nclass AddBarcodeConfiguration extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"nbarcode\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SELECTBARCODE\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.masterData.Barcode || [],\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nbarcode\"] : \"\",\n      isMandatory: true,\n      required: true,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: this.props.operation === 'update' ? true : false,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboBarcodeChange(event, \"nbarcode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, this.props.masterData.BarcodeParameter && this.props.masterData.BarcodeParameter.length > 0 && /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_BARCODEPARAMETERMAPPING\"\n    })), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, this.props.masterData.BarcodeParameter && this.props.masterData.BarcodeParameter.map((x, i) => {\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_PARAMETER\"\n        }),\n        name: \"sparametername\",\n        type: \"text\" //onChange={(event) => this.props.onInputOnChange(event)}\n        ,\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_PARAMETER\"\n        }),\n        value: x,\n        isMandatory: true,\n        required: true,\n        isDisabled: true,\n        maxLength: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"columnname\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_SELECTMATERIALCOLUMN\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.masterData.MappingFileds || [],\n        value: this.props.selectedRecord && this.props.selectedRecord[x] ? this.props.selectedRecord[x] : \"\",\n        isMandatory: true,\n        required: true,\n        isMulti: false,\n        isSearchable: true,\n        isDisabled: false,\n        closeMenuOnSelect: true,\n        onChange: event => this.props.onComboChangeModal(event, \"columnname\", x, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 49\n        }\n      })));\n    })))), this.props.masterData.SelecetedControl && this.props.masterData.SelecetedControl.nfiltersqlqueryneed && /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"nsqlquerycode\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SELECTQUERY\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.masterData.SqlQuery || [],\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nsqlquerycode\"] : \"\",\n      isMandatory: true,\n      required: true,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: false,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboBarcodeChange(event, \"nsqlquerycode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: 'mt-4',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, this.props.masterData.SelecetedControl && this.props.masterData.SelecetedControl.nsqlqueryneed && this.props.masterData.SqlQueryParam.length > 0 && /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 36\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SQLQUERYPARAMPARAMETERMAPPING\"\n    })), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, this.props.masterData.SelecetedControl && this.props.masterData.SelecetedControl.nsqlqueryneed && this.props.masterData.SqlQueryParam.map(x => {\n      return /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 52\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_SQLQUERYPARAM\"\n        }),\n        name: \"sparametername\",\n        type: \"text\" //onChange={(event) => this.props.onInputOnChange(event)}\n        ,\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_PARAMETER\"\n        }),\n        value: x,\n        isMandatory: true,\n        required: true,\n        isDisabled: true,\n        maxLength: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 53\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"ssqlqueryparammapping\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_SQLQUERYPARAMMAPPINGFIELDS\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.masterData.SqlQueryParamMappingFileds || [],\n        value: this.props.selectedRecord[x] ? this.props.selectedRecord[x] : \"\",\n        isMandatory: true,\n        required: true,\n        isMulti: false,\n        isSearchable: true,\n        isDisabled: false,\n        closeMenuOnSelect: true,\n        onChange: event => this.props.onComboBarcodeChange(event, x),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 53\n        }\n      })));\n    }))))));\n  }\n\n}\n\nexport default injectIntl(AddBarcodeConfiguration);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/BarcodeTemplate/AddBarcodeConfiguration.jsx"],"names":["React","Card","Col","Row","injectIntl","FormSelectSearch","FormInput","AddBarcodeConfiguration","Component","constructor","render","props","intl","formatMessage","id","masterData","Barcode","selectedRecord","operation","event","onComboBarcodeChange","BarcodeParameter","length","map","x","i","MappingFileds","onComboChangeModal","SelecetedControl","nfiltersqlqueryneed","SqlQuery","nsqlqueryneed","SqlQueryParam","SqlQueryParamMappingFileds"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\nclass AddBarcodeConfiguration extends React.Component {\r\n    constructor() {\r\n        super()\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            name={\"nbarcode\"}\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTBARCODE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props.masterData.Barcode || []}\r\n                            value={this.props.selectedRecord ? this.props.selectedRecord[\"nbarcode\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isDisabled={this.props.operation === 'update' ? true : false}\r\n                            closeMenuOnSelect={true}\r\n                            onChange={(event) => this.props.onComboBarcodeChange(event, \"nbarcode\")}\r\n                        />\r\n                    </Col>\r\n\r\n                    <Col md={12} >\r\n\r\n                        {this.props.masterData.BarcodeParameter && this.props.masterData.BarcodeParameter.length > 0 &&\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_BARCODEPARAMETERMAPPING\" })}\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    {this.props.masterData.BarcodeParameter && this.props.masterData.BarcodeParameter.map((x, i) => {\r\n                                        return <Row>\r\n                                            <Col md={6}>\r\n                                                <FormInput\r\n                                                    label={this.props.intl.formatMessage({ id: \"IDS_PARAMETER\" })}\r\n                                                    name=\"sparametername\"\r\n                                                    type=\"text\"\r\n                                                    //onChange={(event) => this.props.onInputOnChange(event)}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_PARAMETER\" })}\r\n                                                    value={x}\r\n                                                    isMandatory={true}\r\n                                                    required={true}\r\n                                                    isDisabled={true}\r\n                                                    maxLength={100}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col md={6}>\r\n                                                <FormSelectSearch\r\n                                                    name={\"columnname\"}\r\n                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTMATERIALCOLUMN\" })}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                    options={this.props.masterData.MappingFileds || []}\r\n                                                    value={this.props.selectedRecord && this.props.selectedRecord[x] ? this.props.selectedRecord[x] : \"\"}\r\n                                                    isMandatory={true}\r\n                                                    required={true}\r\n                                                    isMulti={false}\r\n                                                    isSearchable={true}\r\n                                                    isDisabled={false}\r\n                                                    closeMenuOnSelect={true}\r\n                                                    onChange={(event) => this.props.onComboChangeModal(event, \"columnname\", x, i)}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    })}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        }\r\n                    </Col>\r\n\r\n\r\n                    {\r\n                        this.props.masterData.SelecetedControl && this.props.masterData.SelecetedControl.nfiltersqlqueryneed &&\r\n\r\n                        <Col md={12} className='mt-4'>\r\n                            <FormSelectSearch\r\n                                name={\"nsqlquerycode\"}\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTQUERY\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                options={this.props.masterData.SqlQuery || []}\r\n                                value={this.props.selectedRecord ? this.props.selectedRecord[\"nsqlquerycode\"] : \"\"}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                isMulti={false}\r\n                                isSearchable={true}\r\n                                isDisabled={false}\r\n                                closeMenuOnSelect={true}\r\n                                onChange={(event) => this.props.onComboBarcodeChange(event, \"nsqlquerycode\")}\r\n                            />\r\n                        </Col>\r\n                    }\r\n\r\n\r\n                    <Col md={12} className={'mt-4'}>\r\n\r\n                        {this.props.masterData.SelecetedControl && this.props.masterData.SelecetedControl.nsqlqueryneed &&\r\n                            this.props.masterData.SqlQueryParam.length > 0 &&\r\n                            <Card> <Card.Header>\r\n                                {this.props.intl.formatMessage({ id: \"IDS_SQLQUERYPARAMPARAMETERMAPPING\" })}\r\n                            </Card.Header>\r\n\r\n                                <Card.Body>\r\n                                    {this.props.masterData.SelecetedControl &&\r\n                                        this.props.masterData.SelecetedControl.nsqlqueryneed &&\r\n                                        this.props.masterData.SqlQueryParam.map(x => {\r\n                                            return <Row>\r\n                                                {/* <Col md={6}> */}\r\n                                                {/* <FormSelectSearch\r\n                                            name={\"ssqlqueryparam\"}\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SQLQUERYPARAM\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                            options={this.props.masterData.SqlQueryParam || []}\r\n                                            value={x ? x : \"\"}\r\n                                            isMandatory={true}\r\n                                            required={true}\r\n                                            isMulti={false}\r\n                                            isSearchable={true}\r\n                                            isDisabled={true}\r\n                                            closeMenuOnSelect={true}\r\n                                            onChange={(event) => this.props.onComboBarcodeChange(event, \"ssqlqueryparam\")}\r\n                                        />\r\n                                    </Col> */}\r\n                                                <Col md={6}>\r\n\r\n                                                    <FormInput\r\n                                                        label={this.props.intl.formatMessage({ id: \"IDS_SQLQUERYPARAM\" })}\r\n                                                        name=\"sparametername\"\r\n                                                        type=\"text\"\r\n                                                        //onChange={(event) => this.props.onInputOnChange(event)}\r\n                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_PARAMETER\" })}\r\n                                                        value={x}\r\n                                                        isMandatory={true}\r\n                                                        required={true}\r\n                                                        isDisabled={true}\r\n                                                        maxLength={100}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col md={6}>\r\n                                                    <FormSelectSearch\r\n                                                        name={\"ssqlqueryparammapping\"}\r\n                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SQLQUERYPARAMMAPPINGFIELDS\" })}\r\n                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                        options={this.props.masterData.SqlQueryParamMappingFileds || []}\r\n                                                        value={this.props.selectedRecord[x]  ? this.props.selectedRecord[x] : \"\"}\r\n                                                        isMandatory={true}\r\n                                                        required={true}\r\n                                                        isMulti={false}\r\n                                                        isSearchable={true}\r\n                                                        isDisabled={false}\r\n                                                        closeMenuOnSelect={true}\r\n                                                        onChange={(event) => this.props.onComboBarcodeChange(event, x)}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                        })\r\n\r\n\r\n                                    }\r\n                                </Card.Body>\r\n                            </Card>\r\n                        }\r\n                    </Col>\r\n                </Row >\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(AddBarcodeConfiguration);"]},"metadata":{},"sourceType":"module"}