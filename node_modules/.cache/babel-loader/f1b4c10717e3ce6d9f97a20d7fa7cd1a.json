{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport { truncateString } from \"../../utils/stuff\";\nimport { useOnPropsChanged } from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nvar clone = Utils.clone;\nvar _Utils$ConfigUtils = Utils.ConfigUtils,\n    getFieldConfig = _Utils$ConfigUtils.getFieldConfig,\n    getFuncConfig = _Utils$ConfigUtils.getFuncConfig;\nvar _Utils$RuleUtils = Utils.RuleUtils,\n    getFieldPath = _Utils$RuleUtils.getFieldPath,\n    getFuncPathLabels = _Utils$RuleUtils.getFuncPathLabels,\n    getWidgetForFieldOp = _Utils$RuleUtils.getWidgetForFieldOp; //tip: this.props.value - right value, this.props.field - left value\n\nvar FuncSelect = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FuncSelect, _PureComponent);\n\n  var _super = _createSuper(FuncSelect);\n\n  function FuncSelect(props) {\n    var _this;\n\n    _classCallCheck(this, FuncSelect);\n\n    _this = _super.call(this, props);\n    useOnPropsChanged(_assertThisInitialized(_this));\n\n    _this.onPropsChanged(props);\n\n    return _this;\n  }\n\n  _createClass(FuncSelect, [{\n    key: \"onPropsChanged\",\n    value: function onPropsChanged(nextProps) {\n      var prevProps = this.props;\n      var keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\"];\n      var keysForMeta = [\"config\", \"field\", \"value\"];\n      var needUpdateItems = !this.items || keysForItems.map(function (k) {\n        return nextProps[k] !== prevProps[k];\n      }).filter(function (ch) {\n        return ch;\n      }).length > 0;\n      var needUpdateMeta = !this.meta || keysForMeta.map(function (k) {\n        return nextProps[k] !== prevProps[k];\n      }).filter(function (ch) {\n        return ch;\n      }).length > 0;\n\n      if (needUpdateMeta) {\n        this.meta = this.getMeta(nextProps);\n      }\n\n      if (needUpdateItems) {\n        this.items = this.getItems(nextProps);\n      }\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems(_ref) {\n      var config = _ref.config,\n          field = _ref.field,\n          operator = _ref.operator,\n          parentFuncs = _ref.parentFuncs,\n          fieldDefinition = _ref.fieldDefinition,\n          isFuncArg = _ref.isFuncArg;\n      var canUseFuncForField = config.settings.canUseFuncForField;\n      var filteredFuncs = this.filterFuncs(config, config.funcs, field, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition);\n      var items = this.buildOptions(config, filteredFuncs);\n      return items;\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta(_ref2) {\n      var config = _ref2.config,\n          field = _ref2.field,\n          value = _ref2.value;\n      var _config$settings = config.settings,\n          funcPlaceholder = _config$settings.funcPlaceholder,\n          fieldSeparatorDisplay = _config$settings.fieldSeparatorDisplay;\n      var selectedFuncKey = value;\n      var isFuncSelected = !!value;\n      var leftFieldConfig = getFieldConfig(config, field);\n      var leftFieldWidgetField = leftFieldConfig.widgets.field;\n      var leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n      var placeholder = !isFuncSelected ? funcPlaceholder : null;\n      var currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n      var selectedOpts = currFunc || {};\n      var selectedKeys = getFieldPath(selectedFuncKey, config);\n      var selectedPath = getFieldPath(selectedFuncKey, config, true);\n      var selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n      var partsLabels = getFuncPathLabels(selectedFuncKey, config);\n      var selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n      if (selectedFullLabel == selectedLabel) selectedFullLabel = null;\n      return {\n        placeholder: placeholder,\n        selectedKey: selectedFuncKey,\n        selectedKeys: selectedKeys,\n        selectedPath: selectedPath,\n        selectedLabel: selectedLabel,\n        selectedOpts: selectedOpts,\n        selectedFullLabel: selectedFullLabel\n      };\n    }\n  }, {\n    key: \"filterFuncs\",\n    value: function filterFuncs(config, funcs, leftFieldFullkey, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n      funcs = clone(funcs);\n      var fieldSeparator = config.settings.fieldSeparator;\n      var leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n      var expectedType;\n      var targetDefinition = leftFieldConfig;\n      var widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n\n      if (isFuncArg && fieldDefinition) {\n        targetDefinition = fieldDefinition;\n        expectedType = fieldDefinition.type;\n      } else if (widget) {\n        var widgetConfig = config.widgets[widget];\n        var widgetType = widgetConfig.type; //expectedType = leftFieldConfig.type;\n\n        expectedType = widgetType;\n      } else {\n        expectedType = leftFieldConfig.type;\n      }\n\n      function _filter(list, path) {\n        for (var funcKey in list) {\n          var subfields = list[funcKey].subfields;\n          var subpath = (path ? path : []).concat(funcKey);\n          var funcFullkey = subpath.join(fieldSeparator);\n          var funcConfig = getFuncConfig(config, funcFullkey);\n\n          if (funcConfig.type == \"!struct\") {\n            if (_filter(subfields, subpath) == 0) delete list[funcKey];\n          } else {\n            var canUse = funcConfig.returnType == expectedType;\n            if (targetDefinition.funcs) canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n            if (canUseFuncForField) canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator); // don't use func in func (can be configurable, but usually users don't need this)\n\n            if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(function (_ref3) {\n              var _ref4 = _slicedToArray(_ref3, 2),\n                  func = _ref4[0],\n                  _arg = _ref4[1];\n\n              return func;\n            }).includes(funcFullkey)) canUse = false;\n            if (!canUse) delete list[funcKey];\n          }\n        }\n\n        return keys(list).length;\n      }\n\n      _filter(funcs, []);\n\n      return funcs;\n    }\n  }, {\n    key: \"buildOptions\",\n    value: function buildOptions(config, funcs) {\n      var _this2 = this;\n\n      var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var optGroupLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      if (!funcs) return null;\n      var _config$settings2 = config.settings,\n          fieldSeparator = _config$settings2.fieldSeparator,\n          fieldSeparatorDisplay = _config$settings2.fieldSeparatorDisplay;\n      var prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n      return keys(funcs).map(function (funcKey) {\n        var func = funcs[funcKey];\n\n        var label = _this2.getFuncLabel(func, funcKey, config);\n\n        var partsLabels = getFuncPathLabels(funcKey, config);\n        var fullLabel = partsLabels.join(fieldSeparatorDisplay);\n        if (fullLabel == label) fullLabel = null;\n        var tooltip = func.tooltip;\n        var subpath = (path ? path : []).concat(funcKey);\n\n        if (func.type == \"!struct\") {\n          return {\n            key: funcKey,\n            path: prefix + funcKey,\n            label: label,\n            fullLabel: fullLabel,\n            tooltip: tooltip,\n            items: _this2.buildOptions(config, func.subfields, subpath, label)\n          };\n        } else {\n          return {\n            key: funcKey,\n            path: prefix + funcKey,\n            label: label,\n            fullLabel: fullLabel,\n            tooltip: tooltip,\n            grouplabel: optGroupLabel\n          };\n        }\n      });\n    }\n  }, {\n    key: \"getFuncLabel\",\n    value: function getFuncLabel(funcOpts, funcKey, config) {\n      if (!funcKey) return null;\n      var fieldSeparator = config.settings.fieldSeparator;\n      var maxLabelsLength = config.settings.maxLabelsLength;\n      var funcParts = Array.isArray(funcKey) ? funcKey : funcKey.split(fieldSeparator);\n      var label = funcOpts.label || last(funcParts);\n      label = truncateString(label, maxLabelsLength);\n      return label;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          config = _this$props.config,\n          customProps = _this$props.customProps,\n          setValue = _this$props.setValue,\n          readonly = _this$props.readonly,\n          id = _this$props.id,\n          groupId = _this$props.groupId;\n      var renderFunc = config.settings.renderFunc;\n\n      var renderProps = _objectSpread({\n        config: config,\n        customProps: customProps,\n        readonly: readonly,\n        setField: setValue,\n        items: this.items,\n        id: id,\n        groupId: groupId\n      }, this.meta);\n\n      return renderFunc(renderProps);\n    }\n  }]);\n\n  return FuncSelect;\n}(PureComponent);\n\nFuncSelect.propTypes = {\n  id: PropTypes.string,\n  groupId: PropTypes.string,\n  config: PropTypes.object.isRequired,\n  field: PropTypes.string.isRequired,\n  operator: PropTypes.string,\n  customProps: PropTypes.object,\n  value: PropTypes.string,\n  setValue: PropTypes.func.isRequired,\n  readonly: PropTypes.bool,\n  parentFuncs: PropTypes.array,\n  fieldDefinition: PropTypes.object,\n  isFuncArg: PropTypes.bool\n};\nexport { FuncSelect as default };","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/node_modules/@react-awesome-query-builder/ui/esm/components/rule/FuncSelect.js"],"names":["_defineProperty","_slicedToArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","React","PureComponent","Utils","PropTypes","truncateString","useOnPropsChanged","last","clone","_Utils$ConfigUtils","ConfigUtils","getFieldConfig","getFuncConfig","_Utils$RuleUtils","RuleUtils","getFieldPath","getFuncPathLabels","getWidgetForFieldOp","FuncSelect","_PureComponent","_super","props","_this","onPropsChanged","value","nextProps","prevProps","keysForItems","keysForMeta","needUpdateItems","items","map","k","ch","needUpdateMeta","meta","getMeta","getItems","_ref","config","field","operator","parentFuncs","fieldDefinition","isFuncArg","canUseFuncForField","settings","filteredFuncs","filterFuncs","funcs","buildOptions","_ref2","_config$settings","funcPlaceholder","fieldSeparatorDisplay","selectedFuncKey","isFuncSelected","leftFieldConfig","leftFieldWidgetField","widgets","leftFieldWidgetFieldProps","widgetProps","placeholder","currFunc","selectedOpts","selectedKeys","selectedPath","selectedLabel","getFuncLabel","partsLabels","selectedFullLabel","join","selectedKey","leftFieldFullkey","fieldSeparator","expectedType","targetDefinition","widget","type","widgetConfig","widgetType","_filter","list","path","funcKey","subfields","subpath","concat","funcFullkey","funcConfig","canUse","returnType","includes","allowSelfNesting","_ref3","_ref4","func","_arg","_this2","undefined","optGroupLabel","_config$settings2","prefix","label","fullLabel","tooltip","grouplabel","funcOpts","maxLabelsLength","funcParts","Array","isArray","split","render","_this$props","customProps","setValue","readonly","id","groupId","renderFunc","renderProps","setField","propTypes","string","isRequired","bool","array","default"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,uCAA5B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,sBAAP,MAAmC,8CAAnC;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,0BAAP,MAAuC,kDAAvC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;;AACA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoDC,IAAAA,cAAc,KAAKI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAf,CAAd,EAAkIP,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB,CAAlI;AAAmK;;AAAC,SAAOH,IAAP;AAAc;;AACrV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAG,QAAQF,SAAS,CAACD,CAAD,CAAjB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;AAAuDA,IAAAA,CAAC,GAAG,CAAJ,GAAQf,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,CAAC,CAAlB,CAAP,CAA4BC,OAA5B,CAAoC,UAAUC,GAAV,EAAe;AAAE5B,MAAAA,eAAe,CAACsB,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,KAAjG,CAAR,GAA6GhB,MAAM,CAACiB,yBAAP,GAAmCjB,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC,CAAnC,GAA+GlB,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,MAAAA,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,KAApI,CAA5N;AAAoW;;AAAC,SAAON,MAAP;AAAgB;;AAC1f,SAASU,YAAT,CAAsBC,OAAtB,EAA+B;AAAE,MAAIC,yBAAyB,GAAGC,yBAAyB,EAAzD;;AAA6D,SAAO,SAASC,oBAAT,GAAgC;AAAE,QAAIC,KAAK,GAAG9B,eAAe,CAAC0B,OAAD,CAA3B;AAAA,QAAsCK,MAAtC;;AAA8C,QAAIJ,yBAAJ,EAA+B;AAAE,UAAIK,SAAS,GAAGhC,eAAe,CAAC,IAAD,CAAf,CAAsBiC,WAAtC;;AAAmDF,MAAAA,MAAM,GAAGG,OAAO,CAACC,SAAR,CAAkBL,KAAlB,EAAyBb,SAAzB,EAAoCe,SAApC,CAAT;AAA0D,KAA9I,MAAoJ;AAAED,MAAAA,MAAM,GAAGD,KAAK,CAACjB,KAAN,CAAY,IAAZ,EAAkBI,SAAlB,CAAT;AAAwC;;AAAC,WAAOlB,0BAA0B,CAAC,IAAD,EAAOgC,MAAP,CAAjC;AAAkD,GAAxU;AAA2U;;AACza,SAASH,yBAAT,GAAqC;AAAE,MAAI,OAAOM,OAAP,KAAmB,WAAnB,IAAkC,CAACA,OAAO,CAACC,SAA/C,EAA0D,OAAO,KAAP;AAAc,MAAID,OAAO,CAACC,SAAR,CAAkBC,IAAtB,EAA4B,OAAO,KAAP;AAAc,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC,OAAO,IAAP;;AAAa,MAAI;AAAEC,IAAAA,OAAO,CAACC,SAAR,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BP,OAAO,CAACC,SAAR,CAAkBG,OAAlB,EAA2B,EAA3B,EAA+B,YAAY,CAAE,CAA7C,CAA/B;AAAgF,WAAO,IAAP;AAAc,GAApG,CAAqG,OAAOI,CAAP,EAAU;AAAE,WAAO,KAAP;AAAe;AAAE;;AACzU,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,KAAT,QAAsB,mCAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO7C,IAAP,MAAiB,aAAjB;AACA,IAAI8C,KAAK,GAAGL,KAAK,CAACK,KAAlB;AACA,IAAIC,kBAAkB,GAAGN,KAAK,CAACO,WAA/B;AAAA,IACEC,cAAc,GAAGF,kBAAkB,CAACE,cADtC;AAAA,IAEEC,aAAa,GAAGH,kBAAkB,CAACG,aAFrC;AAGA,IAAIC,gBAAgB,GAAGV,KAAK,CAACW,SAA7B;AAAA,IACEC,YAAY,GAAGF,gBAAgB,CAACE,YADlC;AAAA,IAEEC,iBAAiB,GAAGH,gBAAgB,CAACG,iBAFvC;AAAA,IAGEC,mBAAmB,GAAGJ,gBAAgB,CAACI,mBAHzC,C,CAKA;;AACA,IAAIC,UAAU,GAAG,aAAa,UAAUC,cAAV,EAA0B;AACtD/D,EAAAA,SAAS,CAAC8D,UAAD,EAAaC,cAAb,CAAT;;AACA,MAAIC,MAAM,GAAGrC,YAAY,CAACmC,UAAD,CAAzB;;AACA,WAASA,UAAT,CAAoBG,KAApB,EAA2B;AACzB,QAAIC,KAAJ;;AACArE,IAAAA,eAAe,CAAC,IAAD,EAAOiE,UAAP,CAAf;;AACAI,IAAAA,KAAK,GAAGF,MAAM,CAACrB,IAAP,CAAY,IAAZ,EAAkBsB,KAAlB,CAAR;AACAf,IAAAA,iBAAiB,CAACnD,sBAAsB,CAACmE,KAAD,CAAvB,CAAjB;;AACAA,IAAAA,KAAK,CAACC,cAAN,CAAqBF,KAArB;;AACA,WAAOC,KAAP;AACD;;AACDpE,EAAAA,YAAY,CAACgE,UAAD,EAAa,CAAC;AACxBvC,IAAAA,GAAG,EAAE,gBADmB;AAExB6C,IAAAA,KAAK,EAAE,SAASD,cAAT,CAAwBE,SAAxB,EAAmC;AACxC,UAAIC,SAAS,GAAG,KAAKL,KAArB;AACA,UAAIM,YAAY,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,UAApB,EAAgC,WAAhC,CAAnB;AACA,UAAIC,WAAW,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,CAAlB;AACA,UAAIC,eAAe,GAAG,CAAC,KAAKC,KAAN,IAAeH,YAAY,CAACI,GAAb,CAAiB,UAAUC,CAAV,EAAa;AACjE,eAAOP,SAAS,CAACO,CAAD,CAAT,KAAiBN,SAAS,CAACM,CAAD,CAAjC;AACD,OAFoC,EAElClE,MAFkC,CAE3B,UAAUmE,EAAV,EAAc;AACtB,eAAOA,EAAP;AACD,OAJoC,EAIlCzD,MAJkC,GAIzB,CAJZ;AAKA,UAAI0D,cAAc,GAAG,CAAC,KAAKC,IAAN,IAAcP,WAAW,CAACG,GAAZ,CAAgB,UAAUC,CAAV,EAAa;AAC9D,eAAOP,SAAS,CAACO,CAAD,CAAT,KAAiBN,SAAS,CAACM,CAAD,CAAjC;AACD,OAFkC,EAEhClE,MAFgC,CAEzB,UAAUmE,EAAV,EAAc;AACtB,eAAOA,EAAP;AACD,OAJkC,EAIhCzD,MAJgC,GAIvB,CAJZ;;AAKA,UAAI0D,cAAJ,EAAoB;AAClB,aAAKC,IAAL,GAAY,KAAKC,OAAL,CAAaX,SAAb,CAAZ;AACD;;AACD,UAAII,eAAJ,EAAqB;AACnB,aAAKC,KAAL,GAAa,KAAKO,QAAL,CAAcZ,SAAd,CAAb;AACD;AACF;AAtBuB,GAAD,EAuBtB;AACD9C,IAAAA,GAAG,EAAE,UADJ;AAED6C,IAAAA,KAAK,EAAE,SAASa,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,UAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAAA,UACEC,KAAK,GAAGF,IAAI,CAACE,KADf;AAAA,UAEEC,QAAQ,GAAGH,IAAI,CAACG,QAFlB;AAAA,UAGEC,WAAW,GAAGJ,IAAI,CAACI,WAHrB;AAAA,UAIEC,eAAe,GAAGL,IAAI,CAACK,eAJzB;AAAA,UAKEC,SAAS,GAAGN,IAAI,CAACM,SALnB;AAMA,UAAIC,kBAAkB,GAAGN,MAAM,CAACO,QAAP,CAAgBD,kBAAzC;AACA,UAAIE,aAAa,GAAG,KAAKC,WAAL,CAAiBT,MAAjB,EAAyBA,MAAM,CAACU,KAAhC,EAAuCT,KAAvC,EAA8CC,QAA9C,EAAwDI,kBAAxD,EAA4EH,WAA5E,EAAyFE,SAAzF,EAAoGD,eAApG,CAApB;AACA,UAAIb,KAAK,GAAG,KAAKoB,YAAL,CAAkBX,MAAlB,EAA0BQ,aAA1B,CAAZ;AACA,aAAOjB,KAAP;AACD;AAbA,GAvBsB,EAqCtB;AACDnD,IAAAA,GAAG,EAAE,SADJ;AAED6C,IAAAA,KAAK,EAAE,SAASY,OAAT,CAAiBe,KAAjB,EAAwB;AAC7B,UAAIZ,MAAM,GAAGY,KAAK,CAACZ,MAAnB;AAAA,UACEC,KAAK,GAAGW,KAAK,CAACX,KADhB;AAAA,UAEEhB,KAAK,GAAG2B,KAAK,CAAC3B,KAFhB;AAGA,UAAI4B,gBAAgB,GAAGb,MAAM,CAACO,QAA9B;AAAA,UACEO,eAAe,GAAGD,gBAAgB,CAACC,eADrC;AAAA,UAEEC,qBAAqB,GAAGF,gBAAgB,CAACE,qBAF3C;AAGA,UAAIC,eAAe,GAAG/B,KAAtB;AACA,UAAIgC,cAAc,GAAG,CAAC,CAAChC,KAAvB;AACA,UAAIiC,eAAe,GAAG9C,cAAc,CAAC4B,MAAD,EAASC,KAAT,CAApC;AACA,UAAIkB,oBAAoB,GAAGD,eAAe,CAACE,OAAhB,CAAwBnB,KAAnD;AACA,UAAIoB,yBAAyB,GAAGF,oBAAoB,IAAIA,oBAAoB,CAACG,WAA7C,IAA4D,EAA5F;AACA,UAAIC,WAAW,GAAG,CAACN,cAAD,GAAkBH,eAAlB,GAAoC,IAAtD;AACA,UAAIU,QAAQ,GAAGP,cAAc,GAAG5C,aAAa,CAAC2B,MAAD,EAASgB,eAAT,CAAhB,GAA4C,IAAzE;AACA,UAAIS,YAAY,GAAGD,QAAQ,IAAI,EAA/B;AACA,UAAIE,YAAY,GAAGlD,YAAY,CAACwC,eAAD,EAAkBhB,MAAlB,CAA/B;AACA,UAAI2B,YAAY,GAAGnD,YAAY,CAACwC,eAAD,EAAkBhB,MAAlB,EAA0B,IAA1B,CAA/B;AACA,UAAI4B,aAAa,GAAG,KAAKC,YAAL,CAAkBL,QAAlB,EAA4BR,eAA5B,EAA6ChB,MAA7C,CAApB;AACA,UAAI8B,WAAW,GAAGrD,iBAAiB,CAACuC,eAAD,EAAkBhB,MAAlB,CAAnC;AACA,UAAI+B,iBAAiB,GAAGD,WAAW,GAAGA,WAAW,CAACE,IAAZ,CAAiBjB,qBAAjB,CAAH,GAA6C,IAAhF;AACA,UAAIgB,iBAAiB,IAAIH,aAAzB,EAAwCG,iBAAiB,GAAG,IAApB;AACxC,aAAO;AACLR,QAAAA,WAAW,EAAEA,WADR;AAELU,QAAAA,WAAW,EAAEjB,eAFR;AAGLU,QAAAA,YAAY,EAAEA,YAHT;AAILC,QAAAA,YAAY,EAAEA,YAJT;AAKLC,QAAAA,aAAa,EAAEA,aALV;AAMLH,QAAAA,YAAY,EAAEA,YANT;AAOLM,QAAAA,iBAAiB,EAAEA;AAPd,OAAP;AASD;AAhCA,GArCsB,EAsEtB;AACD3F,IAAAA,GAAG,EAAE,aADJ;AAED6C,IAAAA,KAAK,EAAE,SAASwB,WAAT,CAAqBT,MAArB,EAA6BU,KAA7B,EAAoCwB,gBAApC,EAAsDhC,QAAtD,EAAgEI,kBAAhE,EAAoFH,WAApF,EAAiGE,SAAjG,EAA4GD,eAA5G,EAA6H;AAClIM,MAAAA,KAAK,GAAGzC,KAAK,CAACyC,KAAD,CAAb;AACA,UAAIyB,cAAc,GAAGnC,MAAM,CAACO,QAAP,CAAgB4B,cAArC;AACA,UAAIjB,eAAe,GAAG9C,cAAc,CAAC4B,MAAD,EAASkC,gBAAT,CAApC;AACA,UAAIE,YAAJ;AACA,UAAIC,gBAAgB,GAAGnB,eAAvB;AACA,UAAIoB,MAAM,GAAG5D,mBAAmB,CAACsB,MAAD,EAASkC,gBAAT,EAA2BhC,QAA3B,EAAqC,OAArC,CAAhC;;AACA,UAAIG,SAAS,IAAID,eAAjB,EAAkC;AAChCiC,QAAAA,gBAAgB,GAAGjC,eAAnB;AACAgC,QAAAA,YAAY,GAAGhC,eAAe,CAACmC,IAA/B;AACD,OAHD,MAGO,IAAID,MAAJ,EAAY;AACjB,YAAIE,YAAY,GAAGxC,MAAM,CAACoB,OAAP,CAAekB,MAAf,CAAnB;AACA,YAAIG,UAAU,GAAGD,YAAY,CAACD,IAA9B,CAFiB,CAGjB;;AACAH,QAAAA,YAAY,GAAGK,UAAf;AACD,OALM,MAKA;AACLL,QAAAA,YAAY,GAAGlB,eAAe,CAACqB,IAA/B;AACD;;AACD,eAASG,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AAC3B,aAAK,IAAIC,OAAT,IAAoBF,IAApB,EAA0B;AACxB,cAAIG,SAAS,GAAGH,IAAI,CAACE,OAAD,CAAJ,CAAcC,SAA9B;AACA,cAAIC,OAAO,GAAG,CAACH,IAAI,GAAGA,IAAH,GAAU,EAAf,EAAmBI,MAAnB,CAA0BH,OAA1B,CAAd;AACA,cAAII,WAAW,GAAGF,OAAO,CAACf,IAAR,CAAaG,cAAb,CAAlB;AACA,cAAIe,UAAU,GAAG7E,aAAa,CAAC2B,MAAD,EAASiD,WAAT,CAA9B;;AACA,cAAIC,UAAU,CAACX,IAAX,IAAmB,SAAvB,EAAkC;AAChC,gBAAIG,OAAO,CAACI,SAAD,EAAYC,OAAZ,CAAP,IAA+B,CAAnC,EAAsC,OAAOJ,IAAI,CAACE,OAAD,CAAX;AACvC,WAFD,MAEO;AACL,gBAAIM,MAAM,GAAGD,UAAU,CAACE,UAAX,IAAyBhB,YAAtC;AACA,gBAAIC,gBAAgB,CAAC3B,KAArB,EAA4ByC,MAAM,GAAGA,MAAM,IAAId,gBAAgB,CAAC3B,KAAjB,CAAuB2C,QAAvB,CAAgCJ,WAAhC,CAAnB;AAC5B,gBAAI3C,kBAAJ,EAAwB6C,MAAM,GAAGA,MAAM,IAAI7C,kBAAkB,CAAC4B,gBAAD,EAAmBhB,eAAnB,EAAoC+B,WAApC,EAAiDC,UAAjD,EAA6DhD,QAA7D,CAArC,CAHnB,CAIL;;AACA,gBAAI,CAACgD,UAAU,CAACI,gBAAZ,IAAgCnD,WAAhC,IAA+CA,WAAW,CAACX,GAAZ,CAAgB,UAAU+D,KAAV,EAAiB;AAClF,kBAAIC,KAAK,GAAG/I,cAAc,CAAC8I,KAAD,EAAQ,CAAR,CAA1B;AAAA,kBACEE,IAAI,GAAGD,KAAK,CAAC,CAAD,CADd;AAAA,kBAEEE,IAAI,GAAGF,KAAK,CAAC,CAAD,CAFd;;AAGA,qBAAOC,IAAP;AACD,aALkD,EAKhDJ,QALgD,CAKvCJ,WALuC,CAAnD,EAK0BE,MAAM,GAAG,KAAT;AAC1B,gBAAI,CAACA,MAAL,EAAa,OAAOR,IAAI,CAACE,OAAD,CAAX;AACd;AACF;;AACD,eAAO1H,IAAI,CAACwH,IAAD,CAAJ,CAAW1G,MAAlB;AACD;;AACDyG,MAAAA,OAAO,CAAChC,KAAD,EAAQ,EAAR,CAAP;;AACA,aAAOA,KAAP;AACD;AA9CA,GAtEsB,EAqHtB;AACDtE,IAAAA,GAAG,EAAE,cADJ;AAED6C,IAAAA,KAAK,EAAE,SAAS0B,YAAT,CAAsBX,MAAtB,EAA8BU,KAA9B,EAAqC;AAC1C,UAAIiD,MAAM,GAAG,IAAb;;AACA,UAAIf,IAAI,GAAG5G,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB4H,SAAzC,GAAqD5H,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAA/E;AACA,UAAI6H,aAAa,GAAG7H,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB4H,SAAzC,GAAqD5H,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAxF;AACA,UAAI,CAAC0E,KAAL,EAAY,OAAO,IAAP;AACZ,UAAIoD,iBAAiB,GAAG9D,MAAM,CAACO,QAA/B;AAAA,UACE4B,cAAc,GAAG2B,iBAAiB,CAAC3B,cADrC;AAAA,UAEEpB,qBAAqB,GAAG+C,iBAAiB,CAAC/C,qBAF5C;AAGA,UAAIgD,MAAM,GAAGnB,IAAI,GAAGA,IAAI,CAACZ,IAAL,CAAUG,cAAV,IAA4BA,cAA/B,GAAgD,EAAjE;AACA,aAAOhH,IAAI,CAACuF,KAAD,CAAJ,CAAYlB,GAAZ,CAAgB,UAAUqD,OAAV,EAAmB;AACxC,YAAIY,IAAI,GAAG/C,KAAK,CAACmC,OAAD,CAAhB;;AACA,YAAImB,KAAK,GAAGL,MAAM,CAAC9B,YAAP,CAAoB4B,IAApB,EAA0BZ,OAA1B,EAAmC7C,MAAnC,CAAZ;;AACA,YAAI8B,WAAW,GAAGrD,iBAAiB,CAACoE,OAAD,EAAU7C,MAAV,CAAnC;AACA,YAAIiE,SAAS,GAAGnC,WAAW,CAACE,IAAZ,CAAiBjB,qBAAjB,CAAhB;AACA,YAAIkD,SAAS,IAAID,KAAjB,EAAwBC,SAAS,GAAG,IAAZ;AACxB,YAAIC,OAAO,GAAGT,IAAI,CAACS,OAAnB;AACA,YAAInB,OAAO,GAAG,CAACH,IAAI,GAAGA,IAAH,GAAU,EAAf,EAAmBI,MAAnB,CAA0BH,OAA1B,CAAd;;AACA,YAAIY,IAAI,CAAClB,IAAL,IAAa,SAAjB,EAA4B;AAC1B,iBAAO;AACLnG,YAAAA,GAAG,EAAEyG,OADA;AAELD,YAAAA,IAAI,EAAEmB,MAAM,GAAGlB,OAFV;AAGLmB,YAAAA,KAAK,EAAEA,KAHF;AAILC,YAAAA,SAAS,EAAEA,SAJN;AAKLC,YAAAA,OAAO,EAAEA,OALJ;AAML3E,YAAAA,KAAK,EAAEoE,MAAM,CAAChD,YAAP,CAAoBX,MAApB,EAA4ByD,IAAI,CAACX,SAAjC,EAA4CC,OAA5C,EAAqDiB,KAArD;AANF,WAAP;AAQD,SATD,MASO;AACL,iBAAO;AACL5H,YAAAA,GAAG,EAAEyG,OADA;AAELD,YAAAA,IAAI,EAAEmB,MAAM,GAAGlB,OAFV;AAGLmB,YAAAA,KAAK,EAAEA,KAHF;AAILC,YAAAA,SAAS,EAAEA,SAJN;AAKLC,YAAAA,OAAO,EAAEA,OALJ;AAMLC,YAAAA,UAAU,EAAEN;AANP,WAAP;AAQD;AACF,OA3BM,CAAP;AA4BD;AAvCA,GArHsB,EA6JtB;AACDzH,IAAAA,GAAG,EAAE,cADJ;AAED6C,IAAAA,KAAK,EAAE,SAAS4C,YAAT,CAAsBuC,QAAtB,EAAgCvB,OAAhC,EAAyC7C,MAAzC,EAAiD;AACtD,UAAI,CAAC6C,OAAL,EAAc,OAAO,IAAP;AACd,UAAIV,cAAc,GAAGnC,MAAM,CAACO,QAAP,CAAgB4B,cAArC;AACA,UAAIkC,eAAe,GAAGrE,MAAM,CAACO,QAAP,CAAgB8D,eAAtC;AACA,UAAIC,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAc3B,OAAd,IAAyBA,OAAzB,GAAmCA,OAAO,CAAC4B,KAAR,CAActC,cAAd,CAAnD;AACA,UAAI6B,KAAK,GAAGI,QAAQ,CAACJ,KAAT,IAAkBhG,IAAI,CAACsG,SAAD,CAAlC;AACAN,MAAAA,KAAK,GAAGlG,cAAc,CAACkG,KAAD,EAAQK,eAAR,CAAtB;AACA,aAAOL,KAAP;AACD;AAVA,GA7JsB,EAwKtB;AACD5H,IAAAA,GAAG,EAAE,QADJ;AAED6C,IAAAA,KAAK,EAAE,SAASyF,MAAT,GAAkB;AACvB,UAAIC,WAAW,GAAG,KAAK7F,KAAvB;AAAA,UACEkB,MAAM,GAAG2E,WAAW,CAAC3E,MADvB;AAAA,UAEE4E,WAAW,GAAGD,WAAW,CAACC,WAF5B;AAAA,UAGEC,QAAQ,GAAGF,WAAW,CAACE,QAHzB;AAAA,UAIEC,QAAQ,GAAGH,WAAW,CAACG,QAJzB;AAAA,UAKEC,EAAE,GAAGJ,WAAW,CAACI,EALnB;AAAA,UAMEC,OAAO,GAAGL,WAAW,CAACK,OANxB;AAOA,UAAIC,UAAU,GAAGjF,MAAM,CAACO,QAAP,CAAgB0E,UAAjC;;AACA,UAAIC,WAAW,GAAGrJ,aAAa,CAAC;AAC9BmE,QAAAA,MAAM,EAAEA,MADsB;AAE9B4E,QAAAA,WAAW,EAAEA,WAFiB;AAG9BE,QAAAA,QAAQ,EAAEA,QAHoB;AAI9BK,QAAAA,QAAQ,EAAEN,QAJoB;AAK9BtF,QAAAA,KAAK,EAAE,KAAKA,KALkB;AAM9BwF,QAAAA,EAAE,EAAEA,EAN0B;AAO9BC,QAAAA,OAAO,EAAEA;AAPqB,OAAD,EAQ5B,KAAKpF,IARuB,CAA/B;;AASA,aAAOqF,UAAU,CAACC,WAAD,CAAjB;AACD;AArBA,GAxKsB,CAAb,CAAZ;;AA+LA,SAAOvG,UAAP;AACD,CA3M6B,CA2M5BhB,aA3M4B,CAA9B;;AA4MAgB,UAAU,CAACyG,SAAX,GAAuB;AACrBL,EAAAA,EAAE,EAAElH,SAAS,CAACwH,MADO;AAErBL,EAAAA,OAAO,EAAEnH,SAAS,CAACwH,MAFE;AAGrBrF,EAAAA,MAAM,EAAEnC,SAAS,CAAC5C,MAAV,CAAiBqK,UAHJ;AAIrBrF,EAAAA,KAAK,EAAEpC,SAAS,CAACwH,MAAV,CAAiBC,UAJH;AAKrBpF,EAAAA,QAAQ,EAAErC,SAAS,CAACwH,MALC;AAMrBT,EAAAA,WAAW,EAAE/G,SAAS,CAAC5C,MANF;AAOrBgE,EAAAA,KAAK,EAAEpB,SAAS,CAACwH,MAPI;AAQrBR,EAAAA,QAAQ,EAAEhH,SAAS,CAAC4F,IAAV,CAAe6B,UARJ;AASrBR,EAAAA,QAAQ,EAAEjH,SAAS,CAAC0H,IATC;AAUrBpF,EAAAA,WAAW,EAAEtC,SAAS,CAAC2H,KAVF;AAWrBpF,EAAAA,eAAe,EAAEvC,SAAS,CAAC5C,MAXN;AAYrBoF,EAAAA,SAAS,EAAExC,SAAS,CAAC0H;AAZA,CAAvB;AAcA,SAAS5G,UAAU,IAAI8G,OAAvB","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport { truncateString } from \"../../utils/stuff\";\nimport { useOnPropsChanged } from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nvar clone = Utils.clone;\nvar _Utils$ConfigUtils = Utils.ConfigUtils,\n  getFieldConfig = _Utils$ConfigUtils.getFieldConfig,\n  getFuncConfig = _Utils$ConfigUtils.getFuncConfig;\nvar _Utils$RuleUtils = Utils.RuleUtils,\n  getFieldPath = _Utils$RuleUtils.getFieldPath,\n  getFuncPathLabels = _Utils$RuleUtils.getFuncPathLabels,\n  getWidgetForFieldOp = _Utils$RuleUtils.getWidgetForFieldOp;\n\n//tip: this.props.value - right value, this.props.field - left value\nvar FuncSelect = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FuncSelect, _PureComponent);\n  var _super = _createSuper(FuncSelect);\n  function FuncSelect(props) {\n    var _this;\n    _classCallCheck(this, FuncSelect);\n    _this = _super.call(this, props);\n    useOnPropsChanged(_assertThisInitialized(_this));\n    _this.onPropsChanged(props);\n    return _this;\n  }\n  _createClass(FuncSelect, [{\n    key: \"onPropsChanged\",\n    value: function onPropsChanged(nextProps) {\n      var prevProps = this.props;\n      var keysForItems = [\"config\", \"field\", \"operator\", \"isFuncArg\"];\n      var keysForMeta = [\"config\", \"field\", \"value\"];\n      var needUpdateItems = !this.items || keysForItems.map(function (k) {\n        return nextProps[k] !== prevProps[k];\n      }).filter(function (ch) {\n        return ch;\n      }).length > 0;\n      var needUpdateMeta = !this.meta || keysForMeta.map(function (k) {\n        return nextProps[k] !== prevProps[k];\n      }).filter(function (ch) {\n        return ch;\n      }).length > 0;\n      if (needUpdateMeta) {\n        this.meta = this.getMeta(nextProps);\n      }\n      if (needUpdateItems) {\n        this.items = this.getItems(nextProps);\n      }\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems(_ref) {\n      var config = _ref.config,\n        field = _ref.field,\n        operator = _ref.operator,\n        parentFuncs = _ref.parentFuncs,\n        fieldDefinition = _ref.fieldDefinition,\n        isFuncArg = _ref.isFuncArg;\n      var canUseFuncForField = config.settings.canUseFuncForField;\n      var filteredFuncs = this.filterFuncs(config, config.funcs, field, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition);\n      var items = this.buildOptions(config, filteredFuncs);\n      return items;\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta(_ref2) {\n      var config = _ref2.config,\n        field = _ref2.field,\n        value = _ref2.value;\n      var _config$settings = config.settings,\n        funcPlaceholder = _config$settings.funcPlaceholder,\n        fieldSeparatorDisplay = _config$settings.fieldSeparatorDisplay;\n      var selectedFuncKey = value;\n      var isFuncSelected = !!value;\n      var leftFieldConfig = getFieldConfig(config, field);\n      var leftFieldWidgetField = leftFieldConfig.widgets.field;\n      var leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n      var placeholder = !isFuncSelected ? funcPlaceholder : null;\n      var currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n      var selectedOpts = currFunc || {};\n      var selectedKeys = getFieldPath(selectedFuncKey, config);\n      var selectedPath = getFieldPath(selectedFuncKey, config, true);\n      var selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n      var partsLabels = getFuncPathLabels(selectedFuncKey, config);\n      var selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n      if (selectedFullLabel == selectedLabel) selectedFullLabel = null;\n      return {\n        placeholder: placeholder,\n        selectedKey: selectedFuncKey,\n        selectedKeys: selectedKeys,\n        selectedPath: selectedPath,\n        selectedLabel: selectedLabel,\n        selectedOpts: selectedOpts,\n        selectedFullLabel: selectedFullLabel\n      };\n    }\n  }, {\n    key: \"filterFuncs\",\n    value: function filterFuncs(config, funcs, leftFieldFullkey, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n      funcs = clone(funcs);\n      var fieldSeparator = config.settings.fieldSeparator;\n      var leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n      var expectedType;\n      var targetDefinition = leftFieldConfig;\n      var widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n      if (isFuncArg && fieldDefinition) {\n        targetDefinition = fieldDefinition;\n        expectedType = fieldDefinition.type;\n      } else if (widget) {\n        var widgetConfig = config.widgets[widget];\n        var widgetType = widgetConfig.type;\n        //expectedType = leftFieldConfig.type;\n        expectedType = widgetType;\n      } else {\n        expectedType = leftFieldConfig.type;\n      }\n      function _filter(list, path) {\n        for (var funcKey in list) {\n          var subfields = list[funcKey].subfields;\n          var subpath = (path ? path : []).concat(funcKey);\n          var funcFullkey = subpath.join(fieldSeparator);\n          var funcConfig = getFuncConfig(config, funcFullkey);\n          if (funcConfig.type == \"!struct\") {\n            if (_filter(subfields, subpath) == 0) delete list[funcKey];\n          } else {\n            var canUse = funcConfig.returnType == expectedType;\n            if (targetDefinition.funcs) canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n            if (canUseFuncForField) canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n            // don't use func in func (can be configurable, but usually users don't need this)\n            if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(function (_ref3) {\n              var _ref4 = _slicedToArray(_ref3, 2),\n                func = _ref4[0],\n                _arg = _ref4[1];\n              return func;\n            }).includes(funcFullkey)) canUse = false;\n            if (!canUse) delete list[funcKey];\n          }\n        }\n        return keys(list).length;\n      }\n      _filter(funcs, []);\n      return funcs;\n    }\n  }, {\n    key: \"buildOptions\",\n    value: function buildOptions(config, funcs) {\n      var _this2 = this;\n      var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var optGroupLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      if (!funcs) return null;\n      var _config$settings2 = config.settings,\n        fieldSeparator = _config$settings2.fieldSeparator,\n        fieldSeparatorDisplay = _config$settings2.fieldSeparatorDisplay;\n      var prefix = path ? path.join(fieldSeparator) + fieldSeparator : \"\";\n      return keys(funcs).map(function (funcKey) {\n        var func = funcs[funcKey];\n        var label = _this2.getFuncLabel(func, funcKey, config);\n        var partsLabels = getFuncPathLabels(funcKey, config);\n        var fullLabel = partsLabels.join(fieldSeparatorDisplay);\n        if (fullLabel == label) fullLabel = null;\n        var tooltip = func.tooltip;\n        var subpath = (path ? path : []).concat(funcKey);\n        if (func.type == \"!struct\") {\n          return {\n            key: funcKey,\n            path: prefix + funcKey,\n            label: label,\n            fullLabel: fullLabel,\n            tooltip: tooltip,\n            items: _this2.buildOptions(config, func.subfields, subpath, label)\n          };\n        } else {\n          return {\n            key: funcKey,\n            path: prefix + funcKey,\n            label: label,\n            fullLabel: fullLabel,\n            tooltip: tooltip,\n            grouplabel: optGroupLabel\n          };\n        }\n      });\n    }\n  }, {\n    key: \"getFuncLabel\",\n    value: function getFuncLabel(funcOpts, funcKey, config) {\n      if (!funcKey) return null;\n      var fieldSeparator = config.settings.fieldSeparator;\n      var maxLabelsLength = config.settings.maxLabelsLength;\n      var funcParts = Array.isArray(funcKey) ? funcKey : funcKey.split(fieldSeparator);\n      var label = funcOpts.label || last(funcParts);\n      label = truncateString(label, maxLabelsLength);\n      return label;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        config = _this$props.config,\n        customProps = _this$props.customProps,\n        setValue = _this$props.setValue,\n        readonly = _this$props.readonly,\n        id = _this$props.id,\n        groupId = _this$props.groupId;\n      var renderFunc = config.settings.renderFunc;\n      var renderProps = _objectSpread({\n        config: config,\n        customProps: customProps,\n        readonly: readonly,\n        setField: setValue,\n        items: this.items,\n        id: id,\n        groupId: groupId\n      }, this.meta);\n      return renderFunc(renderProps);\n    }\n  }]);\n  return FuncSelect;\n}(PureComponent);\nFuncSelect.propTypes = {\n  id: PropTypes.string,\n  groupId: PropTypes.string,\n  config: PropTypes.object.isRequired,\n  field: PropTypes.string.isRequired,\n  operator: PropTypes.string,\n  customProps: PropTypes.object,\n  value: PropTypes.string,\n  setValue: PropTypes.func.isRequired,\n  readonly: PropTypes.bool,\n  parentFuncs: PropTypes.array,\n  fieldDefinition: PropTypes.object,\n  isFuncArg: PropTypes.bool\n};\nexport { FuncSelect as default };"]},"metadata":{},"sourceType":"module"}