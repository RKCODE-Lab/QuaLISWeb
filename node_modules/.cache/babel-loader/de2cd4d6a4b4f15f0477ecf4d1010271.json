{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\PreRegisterSlideOutModal.jsx\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Button, Card, Col, Form, FormGroup, FormLabel, Modal, Nav, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\nimport { toast } from 'react-toastify';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { ModalInner, ReadOnlyText } from '../../components/App.styles';\nimport { transactionStatus } from '../../components/Enumeration';\nimport { faCalculator, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { comboChild, getSameRecordFromTwoArrays } from '../../components/CommonScript';\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\nimport { HeaderSpan } from './registration.styled';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\nimport AdvFilter from '../../components/AdvFilter';\nimport SpecFilter from './SpecFilter';\nimport RegistrationAdvanceFilter from './RegistrationAdvanceFilter';\nimport RegisterSlideOut from './RegisterSlideOut';\nimport AddSpecification from './AddSpecification';\nimport AddTest from './AddTest';\nimport { connect } from 'react-redux';\nimport { getPreviewTemplate, getChildValues, getNewRegSpecification } from '../../actions';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass PreRegisterSlideOutModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n    this.state = {\n      masterStatus: \"\",\n      failedControls: [],\n      selectedRecord: this.props.selectedRecord,\n      seletedSpec: {},\n      popUptestDataState: {\n        skip: 0,\n        take: 10\n      },\n      showFilter: false\n    };\n\n    this.handleSaveClick = saveType => {\n      const failedControls = [];\n      const startLabel = [];\n      let label = \"IDS_ENTER\";\n      let mandatoryFields = [];\n\n      if (!this.state.loadSpec) {\n        this.props.templateData.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\n                if (componentrow.mandatory === true) {\n                  mandatoryFields.push({\n                    \"mandatory\": true,\n                    \"idsName\": componentrow.label,\n                    \"dataField\": componentrow.label,\n                    \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                    \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                  });\n                }\n              }) : component.mandatory === true ? mandatoryFields.push({\n                \"mandatory\": true,\n                \"idsName\": component.label,\n                \"dataField\": component.label,\n                \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n              }) : \"\";\n            });\n          });\n        });\n      }\n\n      if (this.state.loadSpec) {\n        mandatoryFields = [{\n          \"idsName\": \"IDS_SPECIFICATION\",\n          \"dataField\": \"nallottedspeccode\",\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"combo\"\n        }];\n      }\n\n      if (this.props.esign) {\n        mandatoryFields = [{\n          \"idsName\": \"IDS_PASSWORD\",\n          \"dataField\": \"esignpassword\",\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_COMMENTS\",\n          \"dataField\": \"esigncomments\",\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }];\n      }\n\n      mandatoryFields.forEach(item => {\n        if (this.props.selectedRecord[item.dataField] === undefined || this.props.selectedRecord[item.dataField] === null) {\n          const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n            id: item.idsName\n          }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n          failedControls.push(alertMessage);\n          startLabel.push(item.mandatoryLabel); //\"IDS_PROVIDE\";\n        } else {\n          if (item.validateFunction) {\n            const validateData = item.validateFunction;\n\n            if (validateData(this.props.selectedRecord[item.dataField]) === false) {\n              const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                id: item.idsName\n              }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n              failedControls.push(alertMessage);\n              startLabel.push(item.mandatoryLabel);\n            }\n          } else {\n            if (typeof this.props.selectedRecord[item.dataField] === \"object\") {\n              //to validate FormSelectSearch component\n              if (this.props.selectedRecord[item.dataField].length === 0) {\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                  id: item.idsName\n                }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n                failedControls.push(alertMessage);\n                startLabel.push(item.mandatoryLabel); //\"IDS_SELECT\";\n              }\n            } else if (typeof this.props.selectedRecord[item.dataField] === \"string\") {\n              //to handle string field -- added trim function\n              if (this.props.selectedRecord[item.dataField].trim().length === 0) {\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                  id: item.idsName\n                }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n                failedControls.push(alertMessage);\n                startLabel.push(item.mandatoryLabel);\n              }\n            } else {\n              //number field\n              if (this.props.selectedRecord[item.dataField].length === 0) {\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                  id: item.idsName\n                }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n                failedControls.push(alertMessage);\n                startLabel.push(item.mandatoryLabel);\n              }\n            }\n          }\n        } // else{\n        //     const alertMessage=(item.alertPreFix?item.alertPreFix:'')+this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'')\n        //     failedControls.push(alertMessage);\n        // }\n\n      }); // console.log(\"validationPassed:\", failedControls);\n\n      if (failedControls.length === 0) {\n        if (saveType === 4) {\n          this.props.onExecuteClick(this.formRef);\n        } else if (saveType === 3) {\n          if (this.props.selectedRecord.agree && this.props.selectedRecord.agree === transactionStatus.NO) {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_CHECKAGREE\"\n            }));\n          } else {\n            this.props.validateEsign();\n          }\n        } else {\n          if (this.state.loadSpec = true) {\n            let selectedSpec = { ...this.state.selectedRecord[\"nalloctedspeccode\"]\n            };\n            this.setState({\n              selectedSpec,\n              loadSpec: false\n            });\n          } else {}\n\n          this.props.onSaveClick(saveType, this.formRef);\n        }\n      } else {\n        //toast.info(`${this.props.intl.formatMessage({id:\"IDS_ENTER\"})} ${failedControls.join(\",\")}`);\n        label = startLabel[0] === undefined ? label : startLabel[0];\n        toast.info(`${this.props.intl.formatMessage({\n          id: label\n        })} ${failedControls[0]}`);\n      }\n    };\n\n    this.onComboChange = (comboData, control, customName) => {\n      let parentList = [];\n      let childComboList = [];\n      let childColumnList = {};\n      let inputParem = {};\n      let comboName = customName || control.label;\n      const selectedRecord = this.state.selectedRecord || {};\n      let product = false;\n      let productCategory = false;\n      let nproductcatcode = -1;\n\n      if (comboData) {\n        selectedRecord[comboName] = comboData;\n      } else {\n        selectedRecord[comboName] = [];\n      }\n\n      if (control.name === 'Product') {\n        const ProductCategory = this.props.comboComponents.filter(x => x.name === \"Product Category\");\n        const ncategorybasedflow = selectedRecord[ProductCategory[0].label] && selectedRecord[ProductCategory[0].label]['item']['ncategorybasedflow'];\n        nproductcatcode = selectedRecord[ProductCategory[0].label] && selectedRecord[ProductCategory[0].label].value;\n\n        if (ncategorybasedflow !== 3) {\n          product = true;\n        }\n      } else if (control.name === 'Product Category') {\n        // const ProductCategory=comboComponents.filetr(x=>x.name===\"Product Category\");\n        const ncategorybasedflow = comboData && comboData['item']['ncategorybasedflow'];\n\n        if (ncategorybasedflow === 3) {\n          productCategory = true;\n        }\n      }\n\n      if (control.child && control.child.length > 0) {\n        childComboList = getSameRecordFromTwoArrays(this.props.comboComponents, control.child, \"label\");\n        childColumnList = {};\n        childComboList.map(columnList => {\n          const val = comboChild(this.props.comboComponents, columnList, childColumnList, false);\n          childColumnList = val.childColumnList;\n        });\n        parentList = getSameRecordFromTwoArrays(this.props.withoutCombocomponent, control.child, \"label\");\n        inputParem = {\n          child: control.child,\n          source: control.source,\n          primarykeyField: control.valuemember,\n          value: comboData.value,\n          item: comboData.item,\n          label: comboName\n        };\n        let nproductcode = -1;\n\n        if (product) {\n          nproductcode = selectedRecord[comboName] && selectedRecord[comboName].value;\n        }\n\n        const mapOfFilter = {\n          nproductcode,\n          nproductcatcode,\n          nsampletypecode: this.props.nsampletypecode\n        };\n        this.props.getChildValues(inputParem, this.props.userInfo, selectedRecord, this.props.comboData, childComboList, childColumnList, this.props.withoutCombocomponent, [...childComboList, ...parentList], productCategory, product, mapOfFilter);\n      } else {\n        if (productCategory) {\n          const ncategorybasedflow = selectedRecord[comboName] && selectedRecord[comboName].value;\n        } else if (product) {\n          const nproductcode = selectedRecord[comboName] && selectedRecord[comboName].value;\n          const mapOfFilter = {\n            nproductcode,\n            nproductcatcode,\n            nsampletypecode: this.props.nsampletypecode\n          };\n          this.props.getChildValues(inputParem, this.props.userInfo, selectedRecord, this.props.comboData, childComboList, childColumnList, this.props.withoutCombocomponent, [...childComboList, ...parentList], productCategory, product, mapOfFilter);\n        } else {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === 'timeonly') {\n          selectedRecord['dateonly'] = false;\n        }\n\n        if (event.target.name === 'dateonly') {\n          selectedRecord['timeonly'] = false;\n        }\n\n        selectedRecord[event.target.name] = event.target.checked;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.testdataStateChange = event => {\n      this.setState({\n        popUptestDataState: event.dataState\n      });\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.state.showFilter;\n      this.setState({\n        showFilter\n      });\n    };\n\n    this.closeFilter = () => {\n      this.setState({\n        showFilter: false\n      });\n    };\n\n    this.AddSpec = e => {\n      this.setState({\n        loadSpec: true\n      });\n    };\n\n    this.addTestslide = e => {\n      this.setState({\n        loadTest: true\n      });\n    };\n\n    this.closeSpec = e => {\n      this.setState({\n        loadSpec: false,\n        loadTest: false\n      });\n    };\n\n    this.onspecChange = (event, fieldName) => {\n      if (event !== null) {\n        const selectedRecord = this.state.selectedRecord;\n        const oldpromarycode = this.state.selectedRecord[\"nallottedspeccode\"] !== undefined ? this.state.selectedRecord[\"nallottedspeccode\"].value : undefined;\n        selectedRecord[\"sversion\"] = parseInt(event.item.sversion);\n        selectedRecord[\"nallottedspeccode\"] = event; //  if(this.props.Login.Component.length=== 0 ){\n\n        this.setState({\n          selectedRecord\n        }); // }else{\n        //     if(event.value!== oldpromarycode ){\n        //     this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\n        //     \"ok\", \"cancel\", () => this.setState({ selectedRecord }));\n        //     }\n        // }\n      }\n    };\n\n    this.onTreeClick = event => {\n      const inputParam = {\n        methodUrl: \"TestGroupSpecification\",\n        screenName: \"IDS_REGISTRATION\",\n        operation: \"get\",\n        activeKey: event.key,\n        focusKey: event.key,\n        keyName: \"treetemplatemanipulation\",\n        userinfo: this.props.Login.userInfo,\n        selectedNode: event.item,\n        selectedRecord: this.state.selectedRecord,\n        primaryKey: event.primaryKey\n      };\n      this.props.getNewRegSpecification(inputParam, this.props.Login.masterData); // if (this.props.Login.Component === undefined || this.props.Login.Component.length === 0) {\n      //     //   this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents);\n      // } else {\n      //     // if(event.key!== this.props.Login.ActiveKey ){\n      //     // this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\n      //     // \"ok\", \"cancel\", () =>  this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents));\n      //     // }\n      // }\n    };\n\n    this.myRef = React.createRef();\n  }\n\n  componentDidUpdate(previousProps) {\n    let masterStatus = this.props.masterStatus;\n\n    if (masterStatus !== \"\" && masterStatus !== undefined) {\n      toast.warn(masterStatus);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterStatus: \"\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n      masterStatus = \"\";\n    }\n\n    if (this.props.innerPopup !== this.state.innerTop) {\n      setTimeout(() => {\n        let scrollDoc = this.props.modalEvent && this.props.modalEvent.id ? document.getElementById(this.props.modalEvent.id) : null;\n\n        if (this.myRef && this.myRef.current) {\n          this.myRef.current.scrollIntoView({\n            behavior: 'smooth'\n          });\n        }\n\n        if (scrollDoc) {\n          scrollDoc.scrollIntoView({\n            behavior: 'smooth'\n          });\n        }\n      }, 100);\n      this.setState({\n        innerTop: this.props.innerPopup\n      });\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord,\n        seletedSpec: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n  render() {\n    let saveType = 1;\n\n    if (this.props.ignoreFormValidation) {\n      saveType = 5;\n    }\n\n    let buttonLabel = \"Save\";\n    let idsLabel = \"IDS_SAVE\";\n\n    if (this.props.buttonLabel) {\n      buttonLabel = this.props.buttonLabel;\n      idsLabel = 'IDS_'.concat(buttonLabel.toUpperCase());\n    }\n\n    const testColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      width: \"200px\"\n    }, {\n      \"idsName\": \"IDS_SECTION\",\n      \"dataField\": \"ssectionname\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_SOURCE\",\n      \"dataField\": \"ssourcename\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_METHOD\",\n      \"dataField\": \"smethodname\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_INSTRUMENTCATEGORY\",\n      \"dataField\": \"sinstrumentcatname\",\n      width: \"200px\"\n    }];\n    const filterComponent = [{\n      \"specFIlter\": /*#__PURE__*/React.createElement(SpecFilter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 27\n        }\n      })\n    }];\n    return /*#__PURE__*/React.createElement(Modal, {\n      size: this.props.templateData[0] ? this.props.templateData[0].children ? this.props.templateData[0].children.length >= 2 ? 'xl' : 'lg' : 'lg' : 'lg',\n      backdrop: \"static\",\n      className: this.props.className || \"\",\n      show: this.props.show,\n      onHide: this.props.closeModal,\n      enforceFocus: false,\n      dialogClassName: \"modal-dialog-slideout freakerstop\",\n      \"aria-labelledby\": \"add-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"add-user\",\n      className: \"header-primary flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 21\n      }\n    }, this.props.graphView === true ? \"\" : this.props.inputParam ? this.props.esign === true ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ESIGN\",\n      defaultMessage: \"Esign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 33\n      }\n    }) : this.props.loginoperation ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.screenName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, this.props.operation ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.operation && \"IDS_\".concat(this.props.operation.toUpperCase()),\n      defaultMessage: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 49\n      }\n    }), \" \", this.props.screenName ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.screenName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 57\n      }\n    }) : \"\") : this.props.screenName ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.screenName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 49\n      }\n    }) : \"\") : \"\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-cancel\",\n      variant: \"\",\n      onClick: this.state.loadSpec ? this.closeSpec : this.state.loadTest ? this.closeSpec : this.props.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CANCEL\",\n      defaultMessage: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 25\n      }\n    })), this.props.esign === true ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBMIT\",\n      defaultMessage: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 29\n      }\n    })) : (this.props.operation === \"create\" || this.props.operation === \"update\") && this.props.showValidate ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_VALIDATE\",\n      defaultMessage: \"Validate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 33\n      }\n    })) : this.props.showCalculate ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(saveType),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 37\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CALCULATE\",\n      defaultMessage: \"Calculate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 37\n      }\n    })) : this.props.showParam === true && this.props.showExecute ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCalculator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 41\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXECUTE\",\n      defaultMessage: \"Execute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 41\n      }\n    })) : this.props.noSave || this.props.graphView ? this.props.operation === \"view\" ? \"\" : /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-user btn-primary-blue\",\n      role: \"button\",\n      onClick: this.props.resetView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_RESET\",\n      defaultMessage: \"Reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 49\n      }\n    })) : this.props.hideSave ? \"\" : /*#__PURE__*/React.createElement(Button, {\n      className: \" btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(saveType),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 49\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: idsLabel,\n      defaultMessage: buttonLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 49\n      }\n    })), this.props.operation === \"create\" && this.props.showSaveContinue ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SAVECONTINUE\",\n      defaultMessage: \"Save & Continue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 29\n      }\n    })) : \"\", (this.props.operation === \"create\" || this.props.operation === \"update\") && this.props.esign !== true && this.props.showExecute === true && this.props.showSave ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SAVE\",\n      defaultMessage: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 29\n      }\n    })) : \"\"), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalInner, {\n      ref: this.myRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      ref: this.formRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 33\n      }\n    }, this.state.loadSpec ? /*#__PURE__*/React.createElement(AddSpecification, {\n      AgaramTree: this.props.Login.AgaramTree,\n      openNodes: this.props.Login.OpenNodes,\n      handleTreeClick: this.onTreeClick,\n      focusKey: this.props.Login.FocusKey,\n      activeKey: this.props.Login.ActiveKey,\n      Specification: this.props.Login.Specification,\n      selectedRecord: this.state.selectedRecord,\n      seletedSpec: this.state.seletedSpec,\n      onSpecChange: this.onspecChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 41\n      }\n    }) : this.state.loadTest ? /*#__PURE__*/React.createElement(AddTest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(RegisterSlideOut, {\n      seletedSpec: this.state.seletedSpec,\n      selectedRecord: this.state.selectedRecord,\n      templateData: this.props.templateData,\n      handleChange: this.props.handleChange,\n      handleDateChange: this.props.handleDateChange,\n      onInputOnChange: this.onInputOnChange,\n      onNumericInputChange: this.onNumericInputChange,\n      comboData: this.props.comboData,\n      onComboChange: this.onComboChange,\n      userInfo: this.props.userInfo,\n      timeZoneList: this.props.timeZoneList,\n      defaultTimeZone: this.props.defaultTimeZone,\n      popUptestDataState: this.state.popUptestDataState,\n      dataState: this.state.popUptestDataState,\n      dataStateChange: this.state.testdataStateChange,\n      AddSpec: this.AddSpec,\n      addTest: this.addTestslide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 50\n      }\n    })))))));\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  getChildValues,\n  getPreviewTemplate,\n  getNewRegSpecification\n})(injectIntl(PreRegisterSlideOutModal));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/PreRegisterSlideOutModal.jsx"],"names":["React","FormattedMessage","injectIntl","Button","Card","Col","Form","FormGroup","FormLabel","Modal","Nav","Row","FontAwesomeIcon","faSave","toast","DEFAULT_RETURN","ModalInner","ReadOnlyText","transactionStatus","faCalculator","faPlus","comboChild","getSameRecordFromTwoArrays","DynamicSlideout","HeaderSpan","DataGrid","process","AdvFilter","SpecFilter","RegistrationAdvanceFilter","RegisterSlideOut","AddSpecification","AddTest","connect","getPreviewTemplate","getChildValues","getNewRegSpecification","mapStateToProps","state","Login","PreRegisterSlideOutModal","Component","constructor","props","formRef","createRef","masterStatus","failedControls","selectedRecord","seletedSpec","popUptestDataState","skip","take","showFilter","handleSaveClick","saveType","startLabel","label","mandatoryFields","loadSpec","templateData","map","row","children","column","component","hasOwnProperty","componentrow","mandatory","push","inputtype","esign","forEach","item","dataField","undefined","alertMessage","alertPreFix","intl","formatMessage","id","idsName","alertSuffix","mandatoryLabel","validateFunction","validateData","length","trim","onExecuteClick","agree","NO","info","validateEsign","selectedSpec","setState","onSaveClick","onComboChange","comboData","control","customName","parentList","childComboList","childColumnList","inputParem","comboName","product","productCategory","nproductcatcode","name","ProductCategory","comboComponents","filter","x","ncategorybasedflow","value","child","columnList","val","withoutCombocomponent","source","primarykeyField","valuemember","nproductcode","mapOfFilter","nsampletypecode","userInfo","updateInfo","typeName","data","updateStore","onInputOnChange","event","target","type","checked","onNumericInputChange","handleDateChange","dateValue","dateName","testdataStateChange","dataState","openFilter","closeFilter","AddSpec","e","addTestslide","loadTest","closeSpec","onspecChange","fieldName","oldpromarycode","parseInt","sversion","onTreeClick","inputParam","methodUrl","screenName","operation","activeKey","key","focusKey","keyName","userinfo","selectedNode","primaryKey","masterData","myRef","componentDidUpdate","previousProps","warn","innerPopup","innerTop","setTimeout","scrollDoc","modalEvent","document","getElementById","current","scrollIntoView","behavior","render","ignoreFormValidation","buttonLabel","idsLabel","concat","toUpperCase","testColumnList","width","filterComponent","className","show","closeModal","graphView","loginoperation","showValidate","showCalculate","showParam","showExecute","noSave","resetView","hideSave","showSaveContinue","showSave","AgaramTree","OpenNodes","FocusKey","ActiveKey","Specification","handleChange","timeZoneList","defaultTimeZone"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Button, Card, Col, Form, FormGroup, FormLabel, Modal, Nav, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ModalInner, ReadOnlyText } from '../../components/App.styles';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { faCalculator, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { comboChild, getSameRecordFromTwoArrays } from '../../components/CommonScript';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\r\nimport { HeaderSpan } from './registration.styled';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport AdvFilter from '../../components/AdvFilter';\r\nimport SpecFilter from './SpecFilter';\r\nimport RegistrationAdvanceFilter from './RegistrationAdvanceFilter';\r\nimport RegisterSlideOut from './RegisterSlideOut';\r\nimport AddSpecification from './AddSpecification';\r\nimport AddTest from './AddTest';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getPreviewTemplate, getChildValues,getNewRegSpecification\r\n} from '../../actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\nclass PreRegisterSlideOutModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.myRef = React.createRef()\r\n    }\r\n    formRef = React.createRef();\r\n    state = {\r\n        masterStatus: \"\",\r\n        failedControls: [],\r\n        selectedRecord: this.props.selectedRecord,\r\n        seletedSpec:{},\r\n        popUptestDataState: { skip: 0, take: 10 },\r\n        showFilter: false\r\n    }\r\n\r\n\r\n    handleSaveClick = (saveType) => {\r\n        const failedControls = [];\r\n        const startLabel = [];\r\n        let label = \"IDS_ENTER\";\r\n        let mandatoryFields =  [];\r\n\r\n        if(!this.state.loadSpec){\r\n            this.props.templateData.map(row => {\r\n                row.children.map(column => {\r\n                    column.children.map(component => {\r\n                        return component.hasOwnProperty(\"children\") ? component.children.map(componentrow => {\r\n                            if (componentrow.mandatory === true) {\r\n                                mandatoryFields.push( { \"mandatory\": true, \"idsName\": componentrow.label, \"dataField\": componentrow.label, \"mandatoryLabel\": componentrow.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\", \"controlType\":  componentrow.inputtype===\"combo\"?\"selectbox\":\"textbox\" })\r\n                               \r\n                            } \r\n                        })\r\n                            : component.mandatory === true ?   mandatoryFields.push( { \"mandatory\": true, \"idsName\": component.label, \"dataField\": component.label, \"mandatoryLabel\": component.inputtype===\"combo\"?\"IDS_SELECT\":\"IDS_ENTER\", \"controlType\":  component.inputtype===\"combo\"?\"selectbox\":\"textbox\" }) : \"\"\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        if(this.state.loadSpec){\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_SPECIFICATION\", \"dataField\": \"nallottedspeccode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n            ]\r\n        }\r\n        if (this.props.esign) {\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"esignpassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"esigncomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            ]\r\n        }\r\n        mandatoryFields.forEach(item => {\r\n            if (this.props.selectedRecord[item.dataField] === undefined || this.props.selectedRecord[item.dataField] === null) {\r\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                failedControls.push(alertMessage);\r\n                startLabel.push(item.mandatoryLabel)//\"IDS_PROVIDE\";\r\n            }\r\n            else {\r\n                if (item.validateFunction) {\r\n                    const validateData = item.validateFunction;\r\n                    if (validateData(this.props.selectedRecord[item.dataField]) === false) {\r\n                        const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                        failedControls.push(alertMessage);\r\n                        startLabel.push(item.mandatoryLabel)\r\n                    }\r\n                }\r\n                else {\r\n                    if (typeof this.props.selectedRecord[item.dataField] === \"object\") {\r\n                        //to validate FormSelectSearch component\r\n                        if (this.props.selectedRecord[item.dataField].length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)//\"IDS_SELECT\";\r\n                        }\r\n                    }\r\n                    else if (typeof this.props.selectedRecord[item.dataField] === \"string\") {\r\n                        //to handle string field -- added trim function\r\n                        if (this.props.selectedRecord[item.dataField].trim().length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                    else {\r\n                        //number field\r\n                        if (this.props.selectedRecord[item.dataField].length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // else{\r\n            //     const alertMessage=(item.alertPreFix?item.alertPreFix:'')+this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'')\r\n            //     failedControls.push(alertMessage);\r\n            // }\r\n        });\r\n        // console.log(\"validationPassed:\", failedControls);\r\n\r\n        if (failedControls.length === 0) {\r\n            if (saveType === 4) {\r\n                this.props.onExecuteClick(this.formRef);\r\n            }\r\n            else if (saveType === 3) {\r\n                if (this.props.selectedRecord.agree && this.props.selectedRecord.agree === transactionStatus.NO) {\r\n\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_CHECKAGREE\" }));\r\n\r\n                } else {\r\n\r\n                    this.props.validateEsign();\r\n                }\r\n            }\r\n            else {\r\n                if (this.state.loadSpec = true) {\r\n                    let selectedSpec = { ...this.state.selectedRecord[\"nalloctedspeccode\"] }\r\n                    this.setState({\r\n                        selectedSpec, loadSpec: false\r\n                    })\r\n                } else {\r\n\r\n                }\r\n                this.props.onSaveClick(saveType, this.formRef);\r\n            }\r\n        }\r\n        else {\r\n            //toast.info(`${this.props.intl.formatMessage({id:\"IDS_ENTER\"})} ${failedControls.join(\",\")}`);\r\n            label = startLabel[0] === undefined ? label : startLabel[0];\r\n            toast.info(`${this.props.intl.formatMessage({ id: label })} ${failedControls[0]}`);\r\n        }\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, control, customName) => {\r\n        let parentList = []\r\n        let childComboList = []\r\n        let childColumnList = {}\r\n        let inputParem = {}\r\n        let comboName = customName || control.label;\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let product = false;\r\n        let productCategory = false;\r\n        let nproductcatcode = -1\r\n        if (comboData) {\r\n            selectedRecord[comboName] = comboData;\r\n        } else {\r\n            selectedRecord[comboName] = []\r\n        }\r\n        if (control.name === 'Product') {\r\n            const ProductCategory = this.props.comboComponents.filter(x => x.name === \"Product Category\");\r\n            const ncategorybasedflow = selectedRecord[ProductCategory[0].label] &&\r\n                selectedRecord[ProductCategory[0].label]['item']['ncategorybasedflow'];\r\n            nproductcatcode = selectedRecord[ProductCategory[0].label] &&\r\n                selectedRecord[ProductCategory[0].label].value\r\n            if (ncategorybasedflow !== 3) {\r\n                product = true\r\n            }\r\n\r\n        }\r\n        else if (control.name === 'Product Category') {\r\n            // const ProductCategory=comboComponents.filetr(x=>x.name===\"Product Category\");\r\n            const ncategorybasedflow = comboData &&\r\n                comboData['item']['ncategorybasedflow'];\r\n            if (ncategorybasedflow === 3) {\r\n                productCategory = true\r\n            }\r\n        }\r\n\r\n        if (control.child && control.child.length > 0) {\r\n            childComboList = getSameRecordFromTwoArrays(this.props.comboComponents, control.child, \"label\")\r\n            childColumnList = {};\r\n            childComboList.map(columnList => {\r\n                const val = comboChild(this.props.comboComponents, columnList, childColumnList, false);\r\n                childColumnList = val.childColumnList\r\n            })\r\n\r\n            parentList = getSameRecordFromTwoArrays(this.props.withoutCombocomponent, control.child, \"label\")\r\n\r\n            inputParem = {\r\n                child: control.child,\r\n                source: control.source,\r\n                primarykeyField: control.valuemember,\r\n                value: comboData.value,\r\n                item: comboData.item,\r\n                label: comboName\r\n            }\r\n          let nproductcode=-1\r\n            if(product){\r\n                 nproductcode = selectedRecord[comboName] &&\r\n                selectedRecord[comboName].value;\r\n            }\r\n        \r\n            const mapOfFilter = {\r\n                nproductcode, nproductcatcode,\r\n                nsampletypecode: this.props.nsampletypecode,\r\n            }\r\n            this.props.getChildValues(inputParem,\r\n                this.props.userInfo, selectedRecord, this.props.comboData,\r\n                childComboList, childColumnList, this.props.withoutCombocomponent,\r\n                [...childComboList, ...parentList], productCategory, product,mapOfFilter)\r\n        } else {\r\n\r\n            if (productCategory) {\r\n                const ncategorybasedflow = selectedRecord[comboName] &&\r\n                    selectedRecord[comboName].value;\r\n\r\n            } else if (product) {\r\n                const nproductcode = selectedRecord[comboName] &&\r\n                    selectedRecord[comboName].value;\r\n                const mapOfFilter = {\r\n                    nproductcode, nproductcatcode,\r\n                    nsampletypecode: this.props.nsampletypecode,\r\n                }\r\n\r\n                this.props.getChildValues(inputParem,\r\n                    this.props.userInfo, selectedRecord, this.props.comboData,\r\n                    childComboList, childColumnList, this.props.withoutCombocomponent,\r\n                    [...childComboList, ...parentList], productCategory, product, mapOfFilter)\r\n            } else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'timeonly') {\r\n                selectedRecord['dateonly'] = false;\r\n            }\r\n            if (event.target.name === 'dateonly') {\r\n                selectedRecord['timeonly'] = false;\r\n            }\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    // onInputOnChange = (event, value) => {\r\n    //     const selectedRecord = this.state.selectedRecord || {};\r\n    //     if (event.target.type === 'toggle') {\r\n    //         selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n    //     } else if (event.target.type === 'numeric') {\r\n    //         if (/\\D/.test(event.target.value))\r\n    //             selectedRecord[event.target.name] = event.target.value;\r\n    //     } else if (event.target.type === 'checkbox') {\r\n    //         selectedRecord[event.target.name] = value;\r\n    //     } else if (event.target.type === 'radio') {\r\n    //         selectedRecord[event.target.name] = value\r\n    //     } else {\r\n    //         selectedRecord[event.target.name] = event.target.value;\r\n    //     }\r\n    //     this.setState({ selectedRecord });\r\n    //     // this.saveComponentProperties()\r\n    // }\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    testdataStateChange = (event) => {\r\n        this.setState({\r\n            popUptestDataState: event.dataState\r\n        });\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let masterStatus = this.props.masterStatus;\r\n        if (masterStatus !== \"\" && masterStatus !== undefined) {\r\n            toast.warn(masterStatus);\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { masterStatus: \"\" }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n            masterStatus = \"\";\r\n        }\r\n        if (this.props.innerPopup !== this.state.innerTop) {\r\n            setTimeout(() => {\r\n                let scrollDoc = this.props.modalEvent && this.props.modalEvent.id ? document.getElementById(this.props.modalEvent.id) : null;\r\n                if (this.myRef && this.myRef.current) {\r\n                    this.myRef.current.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n                if (scrollDoc) {\r\n                    scrollDoc.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n            }, 100)\r\n            this.setState({\r\n                innerTop: this.props.innerPopup\r\n            })\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ \r\n                selectedRecord: this.props.Login.selectedRecord,\r\n                seletedSpec:this.props.Login.selectedRecord });\r\n    }\r\n}\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.state.showFilter\r\n        this.setState({\r\n            showFilter\r\n        })\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        this.setState({\r\n            showFilter: false\r\n        })\r\n    }\r\n    AddSpec = (e) => {\r\n        this.setState({\r\n            loadSpec: true\r\n        })\r\n    }\r\n    addTestslide = (e) => {\r\n        this.setState({\r\n            loadTest: true\r\n        })\r\n    }\r\n    closeSpec = (e) => {\r\n        this.setState({\r\n            loadSpec: false, loadTest: false\r\n        })\r\n    }\r\n\r\n    onspecChange = (event, fieldName) => {\r\n        if (event !== null) {\r\n            const selectedRecord = this.state.selectedRecord;\r\n            const oldpromarycode=this.state.selectedRecord[\"nallottedspeccode\"]!==undefined?\r\n            this.state.selectedRecord[\"nallottedspeccode\"].value:undefined;\r\n            selectedRecord[\"sversion\"] = parseInt(event.item.sversion);\r\n            selectedRecord[\"nallottedspeccode\"] = event;\r\n          //  if(this.props.Login.Component.length=== 0 ){\r\n                this.setState({ selectedRecord });\r\n            // }else{\r\n            //     if(event.value!== oldpromarycode ){\r\n            //     this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\r\n            //     \"ok\", \"cancel\", () => this.setState({ selectedRecord }));\r\n            //     }\r\n            // }\r\n            \r\n        }\r\n    }\r\n\r\n    onTreeClick = (event) => {\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupSpecification\",\r\n            screenName: \"IDS_REGISTRATION\",\r\n            operation: \"get\",\r\n            activeKey: event.key,\r\n            focusKey: event.key,\r\n            keyName: \"treetemplatemanipulation\",\r\n            userinfo: this.props.Login.userInfo,\r\n            selectedNode: event.item,\r\n            selectedRecord: this.state.selectedRecord,\r\n\r\n            primaryKey: event.primaryKey\r\n        };\r\n        this.props.getNewRegSpecification(inputParam, this.props.Login.masterData);\r\n\r\n        // if (this.props.Login.Component === undefined || this.props.Login.Component.length === 0) {\r\n        //     //   this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents);\r\n        // } else {\r\n        //     // if(event.key!== this.props.Login.ActiveKey ){\r\n        //     // this.confirmMessage.confirm(\"confirmation\", \"Confirmation!\", \"Do You Want to clear the Existing Components ?\",\r\n        //     // \"ok\", \"cancel\", () =>  this.props.getRegSpecification(inputParam, this.props.Login.masterData, getComponents));\r\n        //     // }\r\n        // }\r\n\r\n    }\r\n    render() {\r\n\r\n        let saveType = 1;\r\n        if (this.props.ignoreFormValidation) {\r\n            saveType = 5;\r\n        }\r\n        let buttonLabel = \"Save\";\r\n        let idsLabel = \"IDS_SAVE\";\r\n        if (this.props.buttonLabel) {\r\n            buttonLabel = this.props.buttonLabel;\r\n            idsLabel = 'IDS_'.concat(buttonLabel.toUpperCase());\r\n        }\r\n        const testColumnList = [\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\r\n            { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_SOURCE\", \"dataField\": \"ssourcename\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"200px\" }]\r\n\r\n        const filterComponent = [{\r\n            \"specFIlter\": <SpecFilter\r\n\r\n            />\r\n        }]\r\n        return (\r\n            <Modal\r\n                size={this.props.templateData[0] ?\r\n                    this.props.templateData[0].children ?\r\n                        this.props.templateData[0].children.length >= 2 ? 'xl' : 'lg' : 'lg' : 'lg'}\r\n                backdrop=\"static\"\r\n                className={this.props.className || \"\"}\r\n                show={this.props.show}\r\n                onHide={this.props.closeModal}\r\n                enforceFocus={false}\r\n                dialogClassName=\"modal-dialog-slideout freakerstop\"\r\n                aria-labelledby=\"add-user\">\r\n                <Modal.Header className=\"d-flex align-items-center\">\r\n                    <Modal.Title id=\"add-user\" className=\"header-primary flex-grow-1\">\r\n                        {this.props.graphView === true ? \"\" : this.props.inputParam ?\r\n                            this.props.esign === true ?\r\n                                <FormattedMessage id={\"IDS_ESIGN\"} defaultMessage=\"Esign\" />\r\n                                : this.props.loginoperation ?\r\n                                    <FormattedMessage id={this.props.screenName} />\r\n                                    : <>\r\n                                        {this.props.operation ?\r\n                                            <>\r\n                                                <FormattedMessage id={this.props.operation && \"IDS_\".concat(this.props.operation.toUpperCase())}\r\n                                                    defaultMessage='Add' />\r\n                                                {\" \"}\r\n                                                {\r\n                                                    this.props.screenName ?\r\n                                                        <FormattedMessage id={this.props.screenName} />\r\n                                                        : \"\"\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            this.props.screenName ?\r\n                                                <FormattedMessage id={this.props.screenName} />\r\n                                                : \"\"}\r\n                                    </>\r\n                            : \"\"}\r\n                    </Modal.Title>\r\n                    <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={this.state.loadSpec ? this.closeSpec : this.state.loadTest ? this.closeSpec : this.props.closeModal}>\r\n                        <FormattedMessage id='IDS_CANCEL' defaultMessage='Cancel' />\r\n                    </Button>\r\n                    {this.props.esign === true ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(3)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SUBMIT' defaultMessage='Submit' />\r\n                        </Button>\r\n                        :\r\n                        (this.props.operation === \"create\" || this.props.operation === \"update\") && this.props.showValidate ?\r\n                            <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(4)}>\r\n                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                <FormattedMessage id='IDS_VALIDATE' defaultMessage='Validate' />\r\n                            </Button> :\r\n                            this.props.showCalculate ?\r\n                                <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(saveType)}>\r\n                                    <FontAwesomeIcon icon={faSave} /> { }\r\n                                    <FormattedMessage id='IDS_CALCULATE' defaultMessage='Calculate' />\r\n                                </Button> :\r\n                                this.props.showParam === true && this.props.showExecute ?\r\n                                    <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(4)}>\r\n                                        <FontAwesomeIcon icon={faCalculator} /> { }\r\n                                        <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' />\r\n                                    </Button> :\r\n                                    this.props.noSave || this.props.graphView ?\r\n                                        this.props.operation === \"view\" ? \"\"\r\n                                            : <Button className=\"btn btn-user btn-primary-blue\" role=\"button\"\r\n                                                onClick={this.props.resetView}\r\n                                            >\r\n                                                <FormattedMessage id={\"IDS_RESET\"} defaultMessage='Reset' />\r\n                                            </Button>\r\n                                        : this.props.hideSave ? \"\" :\r\n                                            <Button className=\" btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(saveType)}>\r\n                                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                                <FormattedMessage id={idsLabel} defaultMessage={buttonLabel} />\r\n                                            </Button>\r\n                    }\r\n                    {this.props.operation === \"create\" && this.props.showSaveContinue ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(2)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SAVECONTINUE' defaultMessage='Save & Continue' />\r\n                        </Button>\r\n                        : \"\"\r\n                    }\r\n                    {(this.props.operation === \"create\" || this.props.operation === \"update\")\r\n                        && this.props.esign !== true && this.props.showExecute === true && this.props.showSave ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(1)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SAVE' defaultMessage='Save' />\r\n                        </Button>\r\n                        : \"\"}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ModalInner ref={this.myRef}>\r\n                        <Card.Body>\r\n                            <React.Fragment>\r\n                                <Form ref={this.formRef}>\r\n                                    {this.state.loadSpec ?\r\n                                        <AddSpecification\r\n                                             AgaramTree={this.props.Login.AgaramTree}\r\n                                             openNodes={this.props.Login.OpenNodes}\r\n                                             handleTreeClick={this.onTreeClick}\r\n                                             focusKey={this.props.Login.FocusKey}\r\n                                             activeKey={this.props.Login.ActiveKey}\r\n                                             Specification={this.props.Login.Specification}\r\n                                             selectedRecord={this.state.selectedRecord}\r\n                                             seletedSpec={this.state.seletedSpec}\r\n                                             onSpecChange={this.onspecChange}\r\n                                        />\r\n                                        : this.state.loadTest ?\r\n                                            <AddTest\r\n\r\n                                            /> : <RegisterSlideOut\r\n                                                seletedSpec={this.state.seletedSpec}\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                templateData={this.props.templateData}\r\n                                                handleChange={this.props.handleChange}\r\n                                                handleDateChange={this.props.handleDateChange}\r\n                                                onInputOnChange={this.onInputOnChange}\r\n                                                onNumericInputChange={this.onNumericInputChange}\r\n                                                comboData={this.props.comboData}\r\n                                                onComboChange={this.onComboChange}\r\n                                                userInfo={this.props.userInfo}\r\n                                                timeZoneList={this.props.timeZoneList}\r\n                                                defaultTimeZone={this.props.defaultTimeZone}\r\n                                                popUptestDataState={this.state.popUptestDataState}\r\n                                                dataState={this.state.popUptestDataState}\r\n                                                dataStateChange={this.state.testdataStateChange}\r\n                                                AddSpec={this.AddSpec}\r\n                                                addTest={this.addTestslide}\r\n                                            />\r\n                                    }\r\n                                </Form>\r\n                            </React.Fragment>\r\n                        </Card.Body>\r\n                    </ModalInner>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, { getChildValues, getPreviewTemplate,getNewRegSpecification }\r\n)(injectIntl(PreRegisterSlideOutModal));"]},"metadata":{},"sourceType":"module"}