{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\components\\\\CustomComponent.jsx\";\nimport React, { Component } from 'react';\nimport FormInput from './form-input/form-input.component';\nimport { Col, Row } from 'react-bootstrap';\nimport TestPopOver from '../pages/ResultEntryBySample/TestPopOver';\nimport { intl } from './App';\nimport Axios from 'axios';\nimport { toast } from 'react-toastify';\nimport rsapi from '../rsapi';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExpand } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCompress } from \"@fortawesome/free-solid-svg-icons\";\nimport ReactDOM from 'react-dom'; // this is recommended \n\nclass CustomComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\n    this.toggleIsActive = event => {\n      if (event.currentTarget.classList.value.includes('test-box-expand-btn')) {\n        ReactDOM.findDOMNode(this).firstChild.classList.remove(\"test-box-active\");\n      }\n    };\n\n    this.infoFields = [{\n      \"fieldName\": \"spositionvalue\",\n      \"label\": \"IDS_BARCODE\"\n    }, {\n      \"fieldName\": \"svisitnumbershortcode\",\n      \"label\": \"IDS_VISITNUMBERCODE\"\n    }, {\n      \"fieldName\": \"sparticipantid\",\n      \"label\": \"IDS_PARTICIPANTID\"\n    }, {\n      \"fieldName\": \"sprojectshortcode\",\n      \"label\": \"IDS_PROJECTTYPECODE\"\n    }, {\n      \"fieldName\": \"sproductshortcode\",\n      \"label\": \"IDS_PRODUCTCODE\"\n    }, {\n      \"fieldName\": \"ssampledonorshortcode\",\n      \"label\": \"IDS_SAMPLEDONORCODE\"\n    }, {\n      \"fieldName\": \"scollectiontubetypeshortcode\",\n      \"label\": \"IDS_COLLECTIONTUBETYPECODE\"\n    }];\n    this.isDisabled = this.props.isDisabled;\n    this.isReadOnly = this.props.isDisabled;\n    this.style = {\n      'border-bottom': `3px solid #7ca84c`,\n      'color': `#000000`\n    };\n    this.isDbSaved = false;\n\n    this.onInputOnChange = (event, fieldName) => {\n      let sheetData = this.state.sheetData;\n      let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\n\n      if (this.props.isMultiSampleAdd) {\n        if (sheetData[nsamplestoragemappingcode] === undefined) {\n          sheetData[nsamplestoragemappingcode] = {};\n        }\n\n        if (sheetData[nsamplestoragemappingcode][fieldName] === undefined) {\n          sheetData[nsamplestoragemappingcode][fieldName] = {};\n        }\n\n        sheetData[nsamplestoragemappingcode][fieldName]['spositionvalue'] = event.target.value.replaceAll(' ', '');\n      } else {\n        if (sheetData[fieldName] === undefined) {\n          sheetData[fieldName] = {};\n        }\n\n        sheetData[fieldName]['spositionvalue'] = event.target.value.replaceAll(' ', '');\n      }\n\n      this.props.childSheetDataChange({ ...sheetData\n      });\n      this.setState({\n        sheetData\n      });\n    };\n\n    this.autoCRUD = (inputParam, fieldName, operation, nsamplestoragemappingcode, event) => {\n      this.setState({\n        loading: true\n      });\n      let urlArray = [];\n      const url1 = rsapi.post(\"samplestoragetransaction/\" + operation + \"SampleStorageTransaction\", inputParam);\n      urlArray = [url1];\n      Axios.all(urlArray).then(response => {\n        let sheetData = this.state.sheetData;\n\n        if (this.props.isMultiSampleAdd) {\n          if (sheetData[nsamplestoragemappingcode] === undefined) {\n            sheetData[nsamplestoragemappingcode] = {};\n          }\n\n          if (sheetData[nsamplestoragemappingcode][fieldName] === undefined) {\n            sheetData[nsamplestoragemappingcode][fieldName] = {};\n          }\n\n          sheetData[nsamplestoragemappingcode][fieldName]['spositionvalue'] = response[0].data.cellData['spositionvalue'] ? response[0].data.cellData['spositionvalue'] : \"\";\n\n          if (response[0].data.cellData['spositionvalue']) {\n            sheetData[nsamplestoragemappingcode][fieldName]['additionalInfo'] = response[0].data.cellData['additionalInfo'] ? JSON.parse(response[0].data.cellData['additionalInfo'].value) : [];\n          } else {\n            sheetData[nsamplestoragemappingcode][fieldName]['additionalInfo'] = [];\n          } //inputParam['spositionvalue'];\n\n        } else {\n          if (sheetData[fieldName]) {\n            sheetData[fieldName] = {};\n          }\n\n          sheetData[fieldName]['spositionvalue'] = response[0].data.cellData['spositionvalue'] ? response[0].data.cellData['spositionvalue'] : \"\";\n\n          if (response[0].data.cellData['spositionvalue']) {\n            sheetData[fieldName]['additionalInfo'] = response[0].data.cellData['additionalInfo'] ? JSON.parse(response[0].data.cellData['additionalInfo'].value) : [];\n          } else {\n            sheetData[fieldName]['additionalInfo'] = [];\n          } // inputParam['spositionvalue'];\n\n        } // this.props.availablepsacechange(response[0].data.navailablespace);\n        // this.isReadOnly = true;\n\n\n        this.style = {\n          'border-bottom': `3px solid #ff6347`\n        };\n        let multiUserCheck = true;\n\n        if (response[0].data.isAlreadyExists && response[0].data.isAlreadyExists === true) {\n          toast.warn(intl.formatMessage({\n            id: \"IDS_THISPOSITIONISALREADYOCCUPIED\"\n          }));\n          this.isDisabled = true;\n        }\n\n        this.isDbSaved = true;\n        this.setState({\n          sheetData,\n          loading: false,\n          multiUserCheck\n        });\n        this.handleKeyDown(event, this.props.Rows, this.props.columns, this.props.ndirectionmastercode);\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n        event.target.value = \"\";\n      });\n    };\n\n    this.autoSaveGetData = (sposition, spositionvalue, event) => {\n      // event.stopPropagation();\n      if (event.keyCode === 13) {\n        if (spositionvalue !== \"\" && this.isReadOnly === false) {\n          let jsondata = {\n            IDS_SAMPLEID: spositionvalue.toString().trim(),\n            IDS_POSITION: sposition,\n            IDS_QUANTITY: this.props.nquantity ? this.props.nquantity : 0,\n            IDS_UNITNAME: this.props.sunitname ? this.props.sunitname : \"\"\n          };\n          let inputParam = {\n            nsamplestoragelocationcode: this.props.nsamplestoragelocationcode,\n            nsamplestoragemappingcode: this.props.nsamplestoragemappingcode,\n            nprojecttypecode: this.props.nprojecttypecode,\n            // ncollectiontubetypecode: -1,\n            // nproductcode: -1,\n            // nsampledonorcode: -1,\n            // nvisitnumbercode: 5,\n            // sprojectshortcode:  'NA',\n            // scollectiontubetypeshortcode:  'NA',\n            // sproductshortcode: 'NA',\n            // ssampledonorshortcode:  'NA',\n            // svisitnumbershortcode: 5,\n            // sparticipantid: '00026',\n            sposition: sposition,\n            spositionvalue: spositionvalue.toString().trim(),\n            userinfo: this.props.userInfo,\n            nbarcodedescription: parseInt(this.props.nbarcodedescription),\n            nbarcodeLength: parseInt(this.props.nbarcodeLength),\n            jsondata: JSON.stringify(jsondata),\n            multiUserCheck: this.state.multiUserCheck\n          };\n          this.autoCRUD(inputParam, sposition, 'create', this.props.nsamplestoragemappingcode, event);\n        } else {\n          this.handleKeyDown(event, this.props.Rows, this.props.columns, this.props.ndirectionmastercode);\n        }\n      }\n    };\n\n    this.additionalInfo = () => {\n      //  console.log('--------------------->') \n      let additionalInfo = [];\n      let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\n\n      if (this.props.isMultiSampleAdd) {\n        if (this.props.ndirectionmastercode === 1) {\n          additionalInfo = this.state.sheetData[nsamplestoragemappingcode] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] : [] : [];\n        } else {\n          additionalInfo = this.state.sheetData[nsamplestoragemappingcode] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo'] : [] : [];\n        }\n      } else {\n        if (this.props.ndirectionmastercode === 1) {\n          additionalInfo = this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] ? this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] ? this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] : [] : [];\n        } else {\n          additionalInfo = this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] ? this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo'] ? this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo'] : [] : [];\n        }\n      }\n\n      return additionalInfo;\n    };\n\n    this.boxOpen = props => {\n      //console.log(this.props.buttonRef && this.props.buttonRef.current);\n      const buttonRef = this.props.buttonRef;\n      this.props.buttonRef.map((x, row) => {\n        x.map((y, column) => {\n          const val = this.props.buttonRef[row][column].className;\n\n          if (val.includes('test-box-active')) {\n            this.props.buttonRef[row][column].classList.remove(\"test-box-active\");\n          }\n        });\n      });\n      this.props.buttonRef[this.props.rowIndex][this.props.columnIndex].classList.add(\"test-box-active\"); // if (this.props.isMultiSampleAdd) {\n      //     buttonRef.map((k, groupParent) => {\n      //     k.map((z, group) => {\n      //         z.map((x, row) => {\n      //             x.map((y, column) => {\n      //                 const val = buttonRef[group][row][column].current.className\n      //                 if (val.includes('test-box-active')) {\n      //                     buttonRef[groupParent][group][row][column].classList.remove(\"test-box-active\")\n      //                 }\n      //             })\n      //         })\n      //     })\n      // })\n      //     buttonRef[this.props.parentIndex][this.props.groupIndex][this.props.rowIndex][this.props.columnIndex].current.classList.add(\"test-box-active\")\n      // } else {\n      //     this.props.buttonRef.map((x, row) => {\n      //         x.map((y, column) => {\n      //             const val = this.props.buttonRef[row][column].className\n      //             if (val.includes('test-box-active')) {\n      //                 this.props.buttonRef[row][column].classList.remove(\"test-box-active\")\n      //             }\n      //         })\n      //     })\n      //     this.props.buttonRef[this.props.rowIndex][this.props.columnIndex].classList.add(\"test-box-active\")\n      // }\n      // this.buttonRef.current;\n      //this.buttonRef.current.classList.add(\"test-box-active\");\n    };\n\n    this.handleKeyDown = (e, nrow, ncolumn, ndirectionmastercode) => {\n      let orderArray = []; // let activeElement = document.activeElement;\n\n      if (ndirectionmastercode === 1) {\n        Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\n          Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\n            orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1));\n          });\n        });\n      } else {\n        Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\n          Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\n            orderArray.push(this.alphabet[columnIndex] + (rowIndex + 1));\n          });\n        });\n      }\n\n      if (e.keyCode === 13 // && e.target.nodeName == 'SELECT'\n      ) {\n        var form = e.target.closest('form'); // let duplicateOrderArray=JSON.parse(JSON.stringify(orderArray))\n\n        let index = orderArray.sort(this.comparator).findIndex(item => item === e.target.placeholder);\n\n        for (var i = 0; i < form.elements.length; i++) {\n          let element = form.elements[i];\n\n          if (element.placeholder === orderArray[index + 1]) {\n            // if (element.disabled) {\n            if (element.readOnly) {\n              index++;\n              i = 0;\n            } else {\n              form.elements[i].focus();\n              break;\n            }\n          }\n\n          ;\n        }\n      }\n    };\n\n    this.comparator = (a, b) => {\n      return a.toString().localeCompare(b.toString(), 'en', {\n        numeric: true\n      });\n    };\n\n    this.handleFocus = (event, style) => {\n      if (!event.target.readOnly && !event.target.disabled) {\n        event.target.classList.add('focused');\n\n        if (event.target.classList.contains('focused')) {\n          if (!style[\"border-bottom\"] === `3px solid #7ca84c`) {\n            this.isDbSaved = true;\n          }\n\n          event.target.style.borderBottom = `3px solid #6347FF`;\n        }\n      }\n    };\n\n    this.handleBlur = (event, style) => {\n      if (!event.target.readOnly && !event.target.disabled) {\n        event.target.classList.remove('focused');\n\n        if (!event.target.classList.contains('focused')) {\n          if (this.isDbSaved === true) {\n            event.target.style.borderBottom = style[\"border-bottom\"];\n          } else {\n            event.target.style.borderBottom = `3px solid #7ca84c`;\n          }\n        }\n      }\n    };\n\n    this.toggleIsActive = this.toggleIsActive.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.state = {\n      sheetData: this.props.sheetData,\n      isActive: false,\n      multiUserCheck: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  handleClickOutside(event) {\n    const domNode = ReactDOM.findDOMNode(this).firstChild;\n\n    if (!domNode || !domNode.contains(event.target)) {\n      domNode.classList.remove(\"test-box-active\");\n    } else {\n      const heightDiff = ReactDOM.findDOMNode(this).parentNode.parentNode.offsetHeight - (this.props.rowIndex + 1) * domNode.offsetHeight;\n      const widthDiff = ReactDOM.findDOMNode(this).parentNode.parentNode.offsetWidth - (this.props.columnIndex + 1) * domNode.offsetWidth;\n      domNode.classList.add(\"test-box-active\");\n      domNode.parentNode.classList.add(\"test-box-active-parent\");\n\n      if (this.props.rowIndex > 0) {\n        if (domNode.offsetHeight > heightDiff) {\n          domNode.classList.add(\"test-box-active-bottom\");\n        }\n      }\n\n      if (domNode.offsetWidth > widthDiff) {\n        domNode.classList.add(\"test-box-active-right\");\n      }\n    }\n  }\n\n  handleEnter(event) {\n    if (event.keyCode === 13) {\n      const form = event.target.form;\n      const index = Array.prototype.indexOf.call(form, event.target);\n      form.elements[index + 1].focus();\n      event.preventDefault();\n    }\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if (this.props.sheetData !== previousProps.sheetData) {\n      let sheetData = this.props.sheetData;\n      this.setState({\n        sheetData\n      });\n    }\n  }\n\n  render() {\n    let count = 0;\n    let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\n    const groupIndex = this.props.groupIndex;\n    const rowIndex = this.props.rowIndex;\n    const columnIndex = this.props.columnIndex;\n    const parentIndex = this.props.parentIndex;\n    const isMultiSampleAdd = this.props.isMultiSampleAdd;\n    let buttonRef = this.props.buttonRef;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"position-relative\",\n      style: {\n        'width': this.props.boxWidth,\n        'min-width': this.props.boxWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `p-0 test-box ${this.state.isActive ? 'test-box-active' : \"\"} ${!Object.keys(this.additionalInfo()).length > 0 ? \"test-box-available\" : ''} ` // ref={el=> \n      //     {\n      //     if (isMultiSampleAdd===true) {\n      //        // console.log('check '+this.props.groupIndex+\" \"+this.props.rowIndex+\" \"+this.props.columnIndex)\n      //        // console.log(\"array \"+ buttonRef[this.props.parentIndex][this.props.groupIndex][this.props.rowIndex][this.props.columnIndex])\n      //         this.props.buttonRef[this.props.rowIndex][this.props.columnIndex] = el\n      //     } else {\n      //         this.props.buttonRef[rowIndex][columnIndex] = el\n      //     }\n      // }\n      // }\n      ,\n      ref: el => {\n        // el can be null - see https://reactjs.org/docs/refs-and-the-dom.html#caveats-with-callback-refs\n        if (!el) return;\n        console.log(el.getBoundingClientRect().width); // prints 200px\n      } // onClick={() => this.boxOpen(this.props)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 21\n      }\n    }, Object.keys(this.additionalInfo()).length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"test-box-expand-btn\",\n      key: this.props.columnIndex,\n      onClick: this.toggleIsActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faExpand,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 127\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"test-box-expand-btn test-box-collapse\",\n      key: this.props.columnIndex,\n      onClick: this.toggleIsActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCompress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 145\n      }\n    }))), this.props.isMultiSampleAdd ? this.props.ndirectionmastercode === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormInput, {\n      className: 'alphabetcss',\n      name: 'ncolumn' // onKeyDown={this.props.handleKeyDown}\n      ,\n      onKeyDown: event => this.autoSaveGetData(this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1), this.state.sheetData[nsamplestoragemappingcode] && (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\"), { ...event\n      }) // onBlur={(event) => this.autoSaveGetData(\n      //     this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\n      //     this.state.sheetData[nsamplestoragemappingcode] &&\n      //     (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\n      //         this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\n      //         this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\"), event)}\n      //label={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\n      ,\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-block\",\n        style: {\n          width: this.props.boxWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 48\n        }\n      }, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)),\n      placeholder: this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\n      value: this.state.sheetData[nsamplestoragemappingcode] && (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\") // style={this.state.sheetData[nsamplestoragemappingcode] && this.state.sheetData[nsamplestoragemappingcode]\n      // [this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode]\n      // [this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\n      //     { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\n      ,\n      style: this.style,\n      maxLength: 20,\n      isDisabled: this.isDisabled,\n      readOnly: this.isReadOnly,\n      onChange: event => this.onInputOnChange(event, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)),\n      onFocus: event => this.handleFocus(event, this.style),\n      onBlur: event => this.handleBlur(event, this.style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 37\n      }\n    })) : /*#__PURE__*/React.createElement(FormInput, {\n      name: 'ncolumn',\n      className: 'alphabetcss' // onBlur={(event) => this.autoSaveGetData(\n      //     this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\n      //     this.state.sheetData[nsamplestoragemappingcode] &&\n      //     (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\n      //         this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\n      //         this.state.sheetData[nsamplestoragemappingcode]\n      //         [this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\"), event)}\n      // onKeyDown={this.props.handleKeyDown}\n      ,\n      onKeyDown: event => this.autoSaveGetData(this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1), this.state.sheetData[nsamplestoragemappingcode] && (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\"), { ...event\n      }) //label={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\n      ,\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-block\",\n        style: {\n          width: this.props.boxWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 44\n        }\n      }, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)),\n      placeholder: this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\n      value: this.state.sheetData[nsamplestoragemappingcode] && (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ? this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\") // style={this.state.sheetData[nsamplestoragemappingcode]\n      //     && this.state.sheetData[nsamplestoragemappingcode]\n      //     [this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\n      //     this.state.sheetData[nsamplestoragemappingcode]\n      //     [this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue']\n      //     ?\n      //     { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\n      ,\n      style: this.style,\n      maxLength: 20,\n      isDisabled: this.isDisabled,\n      readOnly: this.isReadOnly,\n      onChange: event => this.onInputOnChange(event, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)),\n      onFocus: event => this.handleFocus(event, this.style),\n      onBlur: event => this.handleBlur(event, this.style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 33\n      }\n    }) : this.props.ndirectionmastercode === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormInput, {\n      name: 'ncolumn',\n      className: 'alphabetcss' // onBlur={(event) => this.autoSaveGetData(\n      //     this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\n      //     this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\n      //         this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\n      //         this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\", event)}\n      // onKeyDown={this.props.handleKeyDown}\n      ,\n      onKeyDown: event => this.autoSaveGetData(this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1), this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ? this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\", { ...event\n      }) // label={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\n      ,\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-block\",\n        style: {\n          width: this.props.boxWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 48\n        }\n      }, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)),\n      placeholder: this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\n      value: this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ? this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\",\n      maxLength: 20,\n      isDisabled: this.isDisabled // style={this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\n      //     this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\n      //     { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\n      ,\n      style: this.style,\n      onChange: event => this.onInputOnChange(event, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)),\n      readOnly: this.isReadOnly,\n      onFocus: event => this.handleFocus(event, this.style),\n      onBlur: event => this.handleBlur(event, this.style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 37\n      }\n    }), \" \") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormInput, {\n      className: 'alphabetcss',\n      name: 'ncolumn' // onKeyDown={this.props.handleKeyDown}\n      ,\n      onKeyDown: event => this.autoSaveGetData(this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1), this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ? this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\", { ...event\n      }) // onBlur={(event) => this.autoSaveGetData(\n      //     this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\n      //     this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\n      //         this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\n      //         this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\", event)}\n      // style={this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\n      //     this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\n      //     { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\n      ,\n      style: this.style // label={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\n      ,\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-block\",\n        style: {\n          width: this.props.boxWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 48\n        }\n      }, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)),\n      placeholder: this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\n      value: this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] && this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ? this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\",\n      maxLength: 20,\n      isDisabled: this.isDisabled,\n      onChange: event => this.onInputOnChange(event, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)),\n      readOnly: this.isReadOnly,\n      onFocus: event => this.handleFocus(event, this.style),\n      onBlur: event => this.handleBlur(event, this.style),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 37\n      }\n    })), Object.keys(this.additionalInfo()).length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      className: \"test-box-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 29\n      }\n    }, this.additionalInfo() && Object.keys(this.additionalInfo()).map(key =>\n    /*#__PURE__*/\n    //  item\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 45\n      }\n    }, \" \", key.includes('IDS_') ? intl.formatMessage({\n      id: key\n    }) : key), \" :\", this.additionalInfo()[key])))))));\n  }\n\n}\n\nexport default CustomComponent;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/components/CustomComponent.jsx"],"names":["React","Component","FormInput","Col","Row","TestPopOver","intl","Axios","toast","rsapi","FontAwesomeIcon","faExpand","faCompress","ReactDOM","CustomComponent","constructor","props","alphabet","toggleIsActive","event","currentTarget","classList","value","includes","findDOMNode","firstChild","remove","infoFields","isDisabled","isReadOnly","style","isDbSaved","onInputOnChange","fieldName","sheetData","state","nsamplestoragemappingcode","isMultiSampleAdd","undefined","target","replaceAll","childSheetDataChange","setState","autoCRUD","inputParam","operation","loading","urlArray","url1","post","all","then","response","data","cellData","JSON","parse","multiUserCheck","isAlreadyExists","warn","formatMessage","id","handleKeyDown","Rows","columns","ndirectionmastercode","catch","error","status","message","autoSaveGetData","sposition","spositionvalue","keyCode","jsondata","IDS_SAMPLEID","toString","trim","IDS_POSITION","IDS_QUANTITY","nquantity","IDS_UNITNAME","sunitname","nsamplestoragelocationcode","nprojecttypecode","userinfo","userInfo","nbarcodedescription","parseInt","nbarcodeLength","stringify","additionalInfo","rowIndex","columnIndex","boxOpen","buttonRef","map","x","row","y","column","val","className","add","e","nrow","ncolumn","orderArray","Array","fill","length","component","push","form","closest","index","sort","comparator","findIndex","item","placeholder","i","elements","element","readOnly","focus","a","b","localeCompare","numeric","handleFocus","disabled","contains","borderBottom","handleBlur","bind","handleClickOutside","isActive","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","domNode","heightDiff","parentNode","offsetHeight","widthDiff","offsetWidth","handleEnter","prototype","indexOf","call","preventDefault","componentDidUpdate","previousProps","previousState","render","count","groupIndex","parentIndex","boxWidth","Object","keys","el","console","log","getBoundingClientRect","width","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport FormInput from './form-input/form-input.component';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport TestPopOver from '../pages/ResultEntryBySample/TestPopOver';\r\nimport { intl } from './App';\r\nimport Axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport rsapi from '../rsapi';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExpand } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCompress } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ReactDOM from 'react-dom'; // this is recommended \r\n\r\nclass CustomComponent extends Component {\r\n    alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleIsActive = this.toggleIsActive.bind(this);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.state = {\r\n            sheetData: this.props.sheetData,\r\n            isActive: false,\r\n            multiUserCheck: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n    handleClickOutside(event) {\r\n        const domNode = ReactDOM.findDOMNode(this).firstChild;             \r\n        if (!domNode || !domNode.contains(event.target)) {\r\n            domNode.classList.remove(\"test-box-active\");  \r\n        } else {            \r\n            const heightDiff = ReactDOM.findDOMNode(this).parentNode.parentNode.offsetHeight - ((this.props.rowIndex + 1) * (domNode.offsetHeight) );\r\n            const widthDiff = ReactDOM.findDOMNode(this).parentNode.parentNode.offsetWidth - ((this.props.columnIndex + 1) * (domNode.offsetWidth) );\r\n            domNode.classList.add(\"test-box-active\");\r\n            domNode.parentNode.classList.add(\"test-box-active-parent\");\r\n            if(this.props.rowIndex > 0){\r\n                if(domNode.offsetHeight > heightDiff ){                \r\n                    domNode.classList.add(\"test-box-active-bottom\");\r\n                }\r\n            }            \r\n            if(domNode.offsetWidth > widthDiff ){                \r\n                domNode.classList.add(\"test-box-active-right\");\r\n            }\r\n        }\r\n    }\r\n    toggleIsActive = (event) => {       \r\n       if (event.currentTarget.classList.value.includes('test-box-expand-btn')) {\r\n            ReactDOM.findDOMNode(this).firstChild.classList.remove(\"test-box-active\");\r\n        }\r\n    };\r\n    infoFields = [\r\n        { \"fieldName\": \"spositionvalue\", \"label\": \"IDS_BARCODE\" },\r\n        { \"fieldName\": \"svisitnumbershortcode\", \"label\": \"IDS_VISITNUMBERCODE\" },\r\n        { \"fieldName\": \"sparticipantid\", \"label\": \"IDS_PARTICIPANTID\" },\r\n        { \"fieldName\": \"sprojectshortcode\", \"label\": \"IDS_PROJECTTYPECODE\" },\r\n        { \"fieldName\": \"sproductshortcode\", \"label\": \"IDS_PRODUCTCODE\" },\r\n        { \"fieldName\": \"ssampledonorshortcode\", \"label\": \"IDS_SAMPLEDONORCODE\" },\r\n        { \"fieldName\": \"scollectiontubetypeshortcode\", \"label\": \"IDS_COLLECTIONTUBETYPECODE\" }\r\n    ];\r\n\r\n    isDisabled = this.props.isDisabled;\r\n    isReadOnly = this.props.isDisabled;\r\n    style={ \r\n        'border-bottom': `3px solid #7ca84c`, \r\n        'color' : `#000000`\r\n    };\r\n    isDbSaved= false;\r\n\r\n    handleEnter(event) {\r\n        if (event.keyCode === 13) {\r\n            const form = event.target.form;\r\n            const index = Array.prototype.indexOf.call(form, event.target);\r\n            form.elements[index + 1].focus();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event, fieldName) => {\r\n        let sheetData = this.state.sheetData;\r\n        let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\r\n        if (this.props.isMultiSampleAdd) {\r\n            if (sheetData[nsamplestoragemappingcode] === undefined) {\r\n                sheetData[nsamplestoragemappingcode] = {}\r\n            }\r\n            if (sheetData[nsamplestoragemappingcode][fieldName] === undefined) {\r\n                sheetData[nsamplestoragemappingcode][fieldName] = {}\r\n            }\r\n            sheetData[nsamplestoragemappingcode][fieldName]['spositionvalue'] = event.target.value.replaceAll(' ','');\r\n        } else {\r\n            if (sheetData[fieldName] === undefined) {\r\n                sheetData[fieldName] = {}\r\n            }\r\n            sheetData[fieldName]['spositionvalue'] = event.target.value.replaceAll(' ','');\r\n        }\r\n        this.props.childSheetDataChange({\r\n            ...sheetData\r\n        });\r\n        this.setState({ sheetData })\r\n    }\r\n    autoCRUD = (inputParam, fieldName, operation, nsamplestoragemappingcode, event) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragetransaction/\" + operation + \"SampleStorageTransaction\", inputParam);\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let sheetData = this.state.sheetData;\r\n                if (this.props.isMultiSampleAdd) {\r\n                    if (sheetData[nsamplestoragemappingcode] === undefined) {\r\n                        sheetData[nsamplestoragemappingcode] = {}\r\n                    }\r\n                    if (sheetData[nsamplestoragemappingcode][fieldName] === undefined) {\r\n                        sheetData[nsamplestoragemappingcode][fieldName] = {}\r\n                    }\r\n                    sheetData[nsamplestoragemappingcode][fieldName]['spositionvalue'] = response[0].data.cellData['spositionvalue'] ?\r\n                        response[0].data.cellData['spositionvalue'] : \"\";\r\n                    if (response[0].data.cellData['spositionvalue']) {\r\n                        sheetData[nsamplestoragemappingcode][fieldName]['additionalInfo'] = response[0].data.cellData['additionalInfo'] ?\r\n                            JSON.parse(response[0].data.cellData['additionalInfo'].value) : []\r\n                    } else {\r\n                        sheetData[nsamplestoragemappingcode][fieldName]['additionalInfo'] = []\r\n                    }\r\n                    //inputParam['spositionvalue'];\r\n                } else {\r\n                    if (sheetData[fieldName]) {\r\n                        sheetData[fieldName] = {}\r\n                    }\r\n                    sheetData[fieldName]['spositionvalue'] = response[0].data.cellData['spositionvalue'] ?\r\n                        response[0].data.cellData['spositionvalue'] : \"\";\r\n                    if (response[0].data.cellData['spositionvalue']) {\r\n                        sheetData[fieldName]['additionalInfo'] = response[0].data.cellData['additionalInfo'] ?\r\n                            JSON.parse(response[0].data.cellData['additionalInfo'].value) : []\r\n                    } else {\r\n                        sheetData[fieldName]['additionalInfo'] = []\r\n                    }\r\n\r\n\r\n                    // inputParam['spositionvalue'];\r\n                }\r\n                // this.props.availablepsacechange(response[0].data.navailablespace);\r\n                // this.isReadOnly = true;\r\n                this.style={ 'border-bottom': `3px solid #ff6347` };\r\n                let multiUserCheck = true;\r\n                if (response[0].data.isAlreadyExists && response[0].data.isAlreadyExists === true) {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_THISPOSITIONISALREADYOCCUPIED\" }));\r\n                    this.isDisabled = true;\r\n                }\r\n                this.isDbSaved = true;\r\n                this.setState({\r\n                    sheetData,\r\n                    loading: false,\r\n                    multiUserCheck\r\n                });\r\n                this.handleKeyDown(event, this.props.Rows, this.props.columns, this.props.ndirectionmastercode);\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                event.target.value= \"\";\r\n            });\r\n\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        if (this.props.sheetData !== previousProps.sheetData) {\r\n            let sheetData = this.props.sheetData\r\n            this.setState({ sheetData })\r\n        }\r\n    }\r\n\r\n    autoSaveGetData = (sposition, spositionvalue, event) => {\r\n        // event.stopPropagation();\r\n        if(event.keyCode === 13){\r\n        if (spositionvalue !== \"\" && this.isReadOnly === false) {\r\n            let  jsondata={\r\n                IDS_SAMPLEID:spositionvalue.toString().trim(),\r\n                IDS_POSITION:sposition,\r\n                IDS_QUANTITY:this.props.nquantity?this.props.nquantity:0,\r\n                IDS_UNITNAME:this.props.sunitname?this.props.sunitname:\"\"\r\n            }\r\n            let inputParam = {\r\n                nsamplestoragelocationcode: this.props.nsamplestoragelocationcode,\r\n                nsamplestoragemappingcode: this.props.nsamplestoragemappingcode,\r\n                nprojecttypecode: this.props.nprojecttypecode,\r\n                // ncollectiontubetypecode: -1,\r\n                // nproductcode: -1,\r\n                // nsampledonorcode: -1,\r\n                // nvisitnumbercode: 5,\r\n                // sprojectshortcode:  'NA',\r\n                // scollectiontubetypeshortcode:  'NA',\r\n                // sproductshortcode: 'NA',\r\n                // ssampledonorshortcode:  'NA',\r\n                // svisitnumbershortcode: 5,\r\n                // sparticipantid: '00026',\r\n                sposition: sposition,\r\n                spositionvalue: spositionvalue.toString().trim(),\r\n                userinfo: this.props.userInfo,\r\n                nbarcodedescription:parseInt(this.props.nbarcodedescription),\r\n                nbarcodeLength:parseInt(this.props.nbarcodeLength),\r\n                jsondata:JSON.stringify(jsondata),\r\n                multiUserCheck: this.state.multiUserCheck\r\n            }\r\n            this.autoCRUD(inputParam, sposition, 'create', this.props.nsamplestoragemappingcode, event);\r\n        } else {\r\n            this.handleKeyDown(event, this.props.Rows, this.props.columns, this.props.ndirectionmastercode);\r\n        }\r\n    }\r\n    }\r\n    additionalInfo = () => {\r\n        //  console.log('--------------------->') \r\n        let additionalInfo = []\r\n        let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\r\n        if (this.props.isMultiSampleAdd) {\r\n            if (this.props.ndirectionmastercode === 1) {\r\n                additionalInfo = this.state.sheetData[nsamplestoragemappingcode] ?\r\n                    ((this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]\r\n                        && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] ?\r\n                        this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] : [])) : [];\r\n            } else {\r\n                additionalInfo = this.state.sheetData[nsamplestoragemappingcode] ?\r\n                    ((this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]\r\n                        && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex]\r\n                        + (this.props.rowIndex + 1)]['additionalInfo'] ?\r\n                        this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex]\r\n                        + (this.props.rowIndex + 1)]['additionalInfo'] : [])) : [];\r\n            }\r\n        } else {\r\n            if (this.props.ndirectionmastercode === 1) {\r\n                additionalInfo = this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] ?\r\n                    ((this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo']) ?\r\n                        this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['additionalInfo'] : []) : []\r\n            } else {\r\n                additionalInfo = this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] ?\r\n                    ((this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo']) ?\r\n                        this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['additionalInfo'] : []) : []\r\n            }\r\n        }\r\n        return additionalInfo;\r\n    }\r\n\r\n    boxOpen = (props) => {\r\n        //console.log(this.props.buttonRef && this.props.buttonRef.current);\r\n\r\n        const buttonRef=this.props.buttonRef\r\n\r\n\r\n\r\n        this.props.buttonRef.map((x, row) => {\r\n\r\n            x.map((y, column) => {\r\n\r\n                const val = this.props.buttonRef[row][column].className\r\n\r\n                if (val.includes('test-box-active')) {\r\n                    this.props.buttonRef[row][column].classList.remove(\"test-box-active\")\r\n                }\r\n\r\n\r\n            })\r\n\r\n\r\n        })\r\n\r\n\r\n        this.props.buttonRef[this.props.rowIndex][this.props.columnIndex].classList.add(\"test-box-active\")\r\n        // if (this.props.isMultiSampleAdd) {\r\n        //     buttonRef.map((k, groupParent) => {\r\n        //     k.map((z, group) => {\r\n\r\n        //         z.map((x, row) => {\r\n\r\n        //             x.map((y, column) => {\r\n\r\n        //                 const val = buttonRef[group][row][column].current.className\r\n\r\n        //                 if (val.includes('test-box-active')) {\r\n        //                     buttonRef[groupParent][group][row][column].classList.remove(\"test-box-active\")\r\n        //                 }\r\n\r\n\r\n        //             })\r\n\r\n\r\n        //         })\r\n\r\n        //     })\r\n        // })\r\n        //     buttonRef[this.props.parentIndex][this.props.groupIndex][this.props.rowIndex][this.props.columnIndex].current.classList.add(\"test-box-active\")\r\n        // } else {\r\n        //     this.props.buttonRef.map((x, row) => {\r\n\r\n        //         x.map((y, column) => {\r\n\r\n        //             const val = this.props.buttonRef[row][column].className\r\n\r\n        //             if (val.includes('test-box-active')) {\r\n        //                 this.props.buttonRef[row][column].classList.remove(\"test-box-active\")\r\n        //             }\r\n\r\n\r\n        //         })\r\n\r\n\r\n        //     })\r\n\r\n\r\n        //     this.props.buttonRef[this.props.rowIndex][this.props.columnIndex].classList.add(\"test-box-active\")\r\n\r\n\r\n        // }\r\n\r\n\r\n        // this.buttonRef.current;\r\n        //this.buttonRef.current.classList.add(\"test-box-active\");\r\n    }\r\n\r\n    handleKeyDown = (e, nrow, ncolumn, ndirectionmastercode) => {\r\n        let orderArray = [];\r\n        // let activeElement = document.activeElement;\r\n        if (ndirectionmastercode === 1) {\r\n            Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\r\n                Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\r\n                    orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\r\n                })\r\n            })\r\n        } else {\r\n            Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\r\n                Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\r\n                    orderArray.push(this.alphabet[columnIndex] + (rowIndex + 1))\r\n\r\n                })\r\n            })\r\n        }\r\n        if (e.keyCode === 13// && e.target.nodeName == 'SELECT'\r\n        ) {\r\n            var form = e.target.closest('form');\r\n            // let duplicateOrderArray=JSON.parse(JSON.stringify(orderArray))\r\n            let index = orderArray.sort(this.comparator).findIndex(item => item === e.target.placeholder);\r\n            for (var i = 0; i < form.elements.length; i++) {\r\n                let element = form.elements[i];\r\n                if (element.placeholder === orderArray[index + 1]) {\r\n                    // if (element.disabled) {\r\n                    if (element.readOnly) {\r\n                        index++;\r\n                        i = 0;\r\n                    } else {\r\n                        form.elements[i].focus();\r\n                        break;\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    comparator = (a, b) => {\r\n        return a.toString().localeCompare(b.toString(), 'en', { numeric: true })\r\n    };\r\n\r\n    handleFocus = (event, style) => {\r\n        if(!event.target.readOnly && !event.target.disabled){\r\n        event.target.classList.add('focused');\r\n        if(event.target.classList.contains('focused')){\r\n            if(!style[\"border-bottom\"] === `3px solid #7ca84c`){\r\n                this.isDbSaved = true;\r\n            }\r\n            event.target.style.borderBottom =`3px solid #6347FF`\r\n        } \r\n    }\r\n    }\r\n    handleBlur = (event, style) => {\r\n        if(!event.target.readOnly && !event.target.disabled){\r\n        event.target.classList.remove('focused');\r\n        if(!event.target.classList.contains('focused')){\r\n            if(this.isDbSaved === true){\r\n                event.target.style.borderBottom = style[\"border-bottom\"];\r\n            } else {\r\n            event.target.style.borderBottom = `3px solid #7ca84c`;\r\n            }\r\n        }\r\n    }\r\n    }\r\n\r\n    render() {\r\n        let count = 0;\r\n        let nsamplestoragemappingcode = this.props.nsamplestoragemappingcode;\r\n        const groupIndex=this.props.groupIndex\r\n        const rowIndex=this.props.rowIndex\r\n        const columnIndex=this.props.columnIndex\r\n        const parentIndex=this.props.parentIndex\r\n        const isMultiSampleAdd=this.props.isMultiSampleAdd\r\n        let buttonRef= this.props.buttonRef\r\n        return (\r\n            <>\r\n                <div className='position-relative' style={{ 'width' : this.props.boxWidth , 'min-width' : this.props.boxWidth}}>\r\n                    <div className={`p-0 test-box ${this.state.isActive ? 'test-box-active' : \"\"} ${!Object.keys(this.additionalInfo()).length > 0 ? \"test-box-available\" : ''} `}\r\n                        // ref={el=> \r\n\r\n                            \r\n                        //     {\r\n                        //     if (isMultiSampleAdd===true) {\r\n                        //        // console.log('check '+this.props.groupIndex+\" \"+this.props.rowIndex+\" \"+this.props.columnIndex)\r\n                        //        // console.log(\"array \"+ buttonRef[this.props.parentIndex][this.props.groupIndex][this.props.rowIndex][this.props.columnIndex])\r\n                        //         this.props.buttonRef[this.props.rowIndex][this.props.columnIndex] = el\r\n                        //     } else {\r\n                        //         this.props.buttonRef[rowIndex][columnIndex] = el\r\n\r\n                        //     }\r\n                        // }\r\n                        // }\r\n                        ref={el => {\r\n                            // el can be null - see https://reactjs.org/docs/refs-and-the-dom.html#caveats-with-callback-refs\r\n                            if (!el) return;\r\n                    \r\n                            console.log(el.getBoundingClientRect().width); // prints 200px\r\n                          }}\r\n                        // onClick={() => this.boxOpen(this.props)}\r\n                    >\r\n                        {Object.keys(this.additionalInfo()).length > 0\r\n                            &&\r\n                            <>\r\n                                <a className='test-box-expand-btn' key={this.props.columnIndex} onClick={this.toggleIsActive}><FontAwesomeIcon icon={faExpand} /></a>\r\n                                <a className='test-box-expand-btn test-box-collapse' key={this.props.columnIndex} onClick={this.toggleIsActive}><FontAwesomeIcon icon={faCompress} /></a>\r\n                            </>\r\n                        }  \r\n                        {this.props.isMultiSampleAdd ?\r\n                            this.props.ndirectionmastercode === 1 ?\r\n                                <>\r\n\r\n                                    <FormInput\r\n                                        className={'alphabetcss'}\r\n                                        name={'ncolumn'}\r\n                                        // onKeyDown={this.props.handleKeyDown}\r\n                                        onKeyDown={(event) => this.autoSaveGetData(\r\n                                            this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\r\n                                            this.state.sheetData[nsamplestoragemappingcode] &&\r\n                                            (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\r\n                                                this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                                this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\"), {...event})}\r\n                                        // onBlur={(event) => this.autoSaveGetData(\r\n                                        //     this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\r\n                                        //     this.state.sheetData[nsamplestoragemappingcode] &&\r\n                                        //     (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\r\n                                        //         this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                        //         this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\"), event)}\r\n\r\n                                        //label={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                        label={<span className='d-block' style={{ width: this.props.boxWidth }}>\r\n                                            {this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                            {/* {\r\n                                        Object.values(this.additionalInfo()).length > 0\r\n                                        &&  <span className=\"ml-2\">\r\n                                                <TestPopOver intl={intl} needIcon={true} needPopoverTitleContent={true}\r\n                                                    infoFields={this.infoFields}\r\n                                                    selectedObject={this.additionalInfo()}\r\n                                                    placement={this.props.rowIndex === 0 ? 'bottom':'top'}  >\r\n                                                </TestPopOver>\r\n                                                </span>\r\n                                    } */}\r\n                                        </span>}\r\n                                        placeholder={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                        value={this.state.sheetData[nsamplestoragemappingcode] &&\r\n                                            (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]\r\n                                                && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                                this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\")}\r\n                                        // style={this.state.sheetData[nsamplestoragemappingcode] && this.state.sheetData[nsamplestoragemappingcode]\r\n                                        // [this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] && this.state.sheetData[nsamplestoragemappingcode]\r\n                                        // [this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                        //     { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\r\n                                        style={this.style}\r\n                                        maxLength={20}\r\n                                        isDisabled={this.isDisabled}\r\n                                        readOnly={this.isReadOnly}\r\n                                        onChange={(event) => this.onInputOnChange(event, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1))}\r\n                                        onFocus={(event) => this.handleFocus(event, this.style)}\r\n                                        onBlur={(event) => this.handleBlur(event, this.style)}\r\n                                    /></>\r\n                                :\r\n                                <FormInput\r\n                                    name={'ncolumn'}\r\n                                    className={'alphabetcss'}\r\n                                    // onBlur={(event) => this.autoSaveGetData(\r\n                                    //     this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\r\n                                    //     this.state.sheetData[nsamplestoragemappingcode] &&\r\n                                    //     (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                    //         this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\r\n                                    //         this.state.sheetData[nsamplestoragemappingcode]\r\n                                    //         [this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\"), event)}\r\n                                    // onKeyDown={this.props.handleKeyDown}\r\n                                    onKeyDown={(event) => this.autoSaveGetData(\r\n                                        this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\r\n                                        this.state.sheetData[nsamplestoragemappingcode] &&\r\n                                        (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                            this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\r\n                                            this.state.sheetData[nsamplestoragemappingcode]\r\n                                            [this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\"), {...event})}\r\n                                    //label={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                    label={<span className='d-block' style={{ width: this.props.boxWidth }}>\r\n                                        {this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                        {/* {\r\n                                        Object.values(this.additionalInfo()).length > 0\r\n                                        &&  <span className=\"ml-2\">\r\n                                                  <TestPopOver intl={intl} needIcon={true} needPopoverTitleContent={true}\r\n                                                    infoFields={this.infoFields}\r\n                                                    selectedObject={this.additionalInfo()}\r\n                                                    placement={this.props.rowIndex === 0 ? 'bottom':'top'}  >\r\n                                                </TestPopOver>\r\n                                                </span>\r\n                                    } */}\r\n                                    </span>}\r\n                                    placeholder={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                    value={this.state.sheetData[nsamplestoragemappingcode] &&\r\n                                        (this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]\r\n                                            && this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\r\n                                            this.state.sheetData[nsamplestoragemappingcode][this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\")}\r\n                                    // style={this.state.sheetData[nsamplestoragemappingcode]\r\n                                    //     && this.state.sheetData[nsamplestoragemappingcode]\r\n                                    //     [this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                    //     this.state.sheetData[nsamplestoragemappingcode]\r\n                                    //     [this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue']\r\n                                    //     ?\r\n                                    //     { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\r\n                                    style={this.style}\r\n                                    maxLength={20}\r\n                                    isDisabled={this.isDisabled}\r\n                                    readOnly={this.isReadOnly}\r\n                                    onChange={(event) => this.onInputOnChange(event, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1))}\r\n                                    onFocus={(event) => this.handleFocus(event, this.style)}\r\n                                    onBlur={(event) => this.handleBlur(event, this.style)}\r\n                                />\r\n                            :\r\n                            this.props.ndirectionmastercode === 1 ?\r\n                                <>\r\n                                    <FormInput\r\n                                        name={'ncolumn'}\r\n                                        className={'alphabetcss'}\r\n                                        // onBlur={(event) => this.autoSaveGetData(\r\n                                        //     this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\r\n                                        //     this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\r\n                                        //         this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                        //         this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\", event)}\r\n                                        // onKeyDown={this.props.handleKeyDown}\r\n                                        onKeyDown={(event) => this.autoSaveGetData(\r\n                                            this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1),\r\n                                            this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\r\n                                                this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                                this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\", {...event})}\r\n                                        // label={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                        label={<span className='d-block' style={{ width: this.props.boxWidth }}>\r\n                                            {this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                            {/* {\r\n                                    Object.values(this.additionalInfo()).length > 0\r\n                                    &&  <span className=\"ml-2\">\r\n                                             <TestPopOver intl={intl} needIcon={true} needPopoverTitleContent={true}\r\n                                                    infoFields={this.infoFields}\r\n                                                    selectedObject={this.additionalInfo()}\r\n                                                    placement={this.props.rowIndex === 0 ? 'bottom':'top'}  >\r\n                                                </TestPopOver>\r\n                                            </span>\r\n                                } */}\r\n                                        </span>}\r\n                                        placeholder={this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)}\r\n                                        value={(this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\r\n                                            this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue']) ?\r\n                                            this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] : \"\"}\r\n                                        maxLength={20}\r\n                                        isDisabled={this.isDisabled}\r\n                                        // style={this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)] &&\r\n                                        //     this.state.sheetData[this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1)]['spositionvalue'] ?\r\n                                        //     { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\r\n                                        style={this.style}\r\n                                        onChange={(event) => this.onInputOnChange(event, this.alphabet[this.props.rowIndex] + (this.props.columnIndex + 1))}\r\n                                        readOnly={this.isReadOnly}\r\n                                        onFocus={(event) => this.handleFocus(event, this.style)}\r\n                                        onBlur={(event) => this.handleBlur(event, this.style)}\r\n                                    /> </> :\r\n                                <>\r\n                                    <FormInput\r\n                                        className={'alphabetcss'}\r\n                                        name={'ncolumn'}\r\n                                        // onKeyDown={this.props.handleKeyDown}\r\n                                        onKeyDown={(event) => this.autoSaveGetData(\r\n                                            this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\r\n                                            this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                                this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\r\n                                                this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\", {...event})}\r\n                                        // onBlur={(event) => this.autoSaveGetData(\r\n                                        //     this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1),\r\n                                        //     this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                        //         this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\r\n                                        //         this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\", event)}\r\n                                        // style={this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                        //     this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] ?\r\n                                        //     { 'border-bottom': `3px solid #ff6347` } : { 'border-bottom': `3px solid #7ca84c` }}\r\n                                        style={this.style}\r\n                                        // label={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                        label={<span className='d-block' style={{ width: this.props.boxWidth }}>\r\n                                            {this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                            {/* {\r\n                                        Object.values(this.additionalInfo()).length > 0\r\n                                        &&  <span className=\"ml-2\">\r\n                                                 <TestPopOver intl={intl} needIcon={true} needPopoverTitleContent={true}\r\n                                                    infoFields={this.infoFields}\r\n                                                    selectedObject={this.additionalInfo()}\r\n                                                    placement={this.props.rowIndex === 0 ? 'bottom':'top'}  >\r\n                                                </TestPopOver>\r\n                                                </span>\r\n                                    } */}\r\n                                        </span>}\r\n                                        placeholder={this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)}\r\n                                        value={(this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)] &&\r\n                                            this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue']) ?\r\n                                            this.state.sheetData[this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1)]['spositionvalue'] : \"\"}\r\n                                        maxLength={20}\r\n                                        isDisabled={this.isDisabled}\r\n                                        onChange={(event) => this.onInputOnChange(event, this.alphabet[this.props.columnIndex] + (this.props.rowIndex + 1))}\r\n                                        readOnly={this.isReadOnly}\r\n                                        onFocus={(event) => this.handleFocus(event, this.style)}\r\n                                        onBlur={(event) => this.handleBlur(event, this.style)}\r\n                                    />\r\n                                </>\r\n                        }\r\n                         {Object.keys(this.additionalInfo()).length > 0\r\n                        &&\r\n                        <>\r\n                            \r\n                            <Col className=\"test-box-info\">\r\n                                {\r\n                                    this.additionalInfo() && Object.keys(this.additionalInfo()).map(key =>\r\n                                      //  item\r\n                                       <div><span className='font-weight-bold'> { (key.includes('IDS_')? intl.formatMessage({ id: key }): key)}</span> :\r\n                                       {this.additionalInfo()[key] }</div>\r\n                                    )\r\n                                }\r\n                            </Col>\r\n                        </>\r\n                    }  \r\n                        \r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default CustomComponent;\r\n\r\n"]},"metadata":{},"sourceType":"module"}