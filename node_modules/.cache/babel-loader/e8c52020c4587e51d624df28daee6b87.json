{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\AddTestPackage.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component'; // import CustomSwitch from '../../components/custom-switch/custom-switch.component';\n// import FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\n\nconst AddTestPackage = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_PACKAGENAME\"\n    }),\n    name: \"stestpackagename\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PACKAGENAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"stestpackagename\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"ntestpackageprice\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PACKAGEPRICE\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"ntestpackageprice\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PRICE\"\n    }),\n    strict: true,\n    min: 0 //max={99999999.99}\n    ,\n    maxLength: 10,\n    onChange: value => props.onNumericInputChange(value, \"ntestpackageprice\"),\n    noStyle: true,\n    precision: 2,\n    isMandatory: true,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"ntestpackagetatdays\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PACKAGETATPRICE\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"ntestpackagetatdays\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PACKAGETATPRICE\"\n    }),\n    strict: true,\n    min: 0,\n    isMandatory: true //max={99999999.99}\n    ,\n    maxLength: 3,\n    onChange: value => props.onNumericInputChange(value, \"ntestpackagetatdays\"),\n    noStyle: true,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    name: \"sdescription\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })));\n};\n\nexport default injectIntl(AddTestPackage);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/AddTestPackage.js"],"names":["React","Row","Col","injectIntl","FormInput","FormNumericInput","FormTextarea","AddTestPackage","props","intl","formatMessage","id","event","onInputOnChange","selectedRecord","value","onNumericInputChange"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport {injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n// import CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\n// import FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\nconst AddTestPackage = (props) => {\r\n        \r\n        return(\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id:\"IDS_PACKAGENAME\"})}\r\n                            name={\"stestpackagename\"}\r\n                            type=\"text\"\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_PACKAGENAME\"})}\r\n                            value ={props.selectedRecord?props.selectedRecord[\"stestpackagename\"]:\"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={100}\r\n                        />\r\n{/* \r\n                      <FormTextarea\r\n                            label={props.intl.formatMessage({ id:\"IDS_PACKAGEREFRANCECODE\"})}\r\n                            name={\"spackagerefcode\"}\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_PACKAGEREFRANCECODE\"})}\r\n                            value ={props.selectedRecord ? props.selectedRecord[\"spackagerefcode\"] :\"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={255}\r\n                            >\r\n                        </FormTextarea> */}\r\n\r\n\r\n                        {/* <FormInput\r\n                            label={props.intl.formatMessage({ id:\"IDS_PACKAGEPRICE\"})}\r\n                            name={\"npackageprice\"}\r\n                            type=\"text\"\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_PACKAGEPRICE\"})}\r\n                            value ={props.selectedRecord?props.selectedRecord[\"npackageprice\"]:\"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={100}\r\n                        /> */}\r\n\r\n               <FormNumericInput\r\n                    name={\"ntestpackageprice\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_PACKAGEPRICE\" })}\r\n                    type=\"number\"\r\n                    value={props.selectedRecord[\"ntestpackageprice\"]}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_PRICE\" })}\r\n                    strict={true}\r\n                    min={0}\r\n                    //max={99999999.99}\r\n                    maxLength={10}\r\n                    onChange={(value) => props.onNumericInputChange(value, \"ntestpackageprice\")}\r\n                    noStyle={true}\r\n                    precision={2}\r\n                    isMandatory={true}\r\n                    className=\"form-control\"\r\n                    errors=\"Please provide a valid number.\"\r\n                />\r\n\r\n\r\n                           {/* <FormInput\r\n                            label={props.intl.formatMessage({ id:\"IDS_PACKAGETATPRICE\"})}\r\n                            name={\"npackagetatdays\"}\r\n                            type=\"text\"\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_PACKAGETATPRICE\"})}\r\n                            value ={props.selectedRecord?props.selectedRecord[\"npackagetatdays\"]:\"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={100}\r\n                        /> */}\r\n\r\n                  <FormNumericInput\r\n                    name={\"ntestpackagetatdays\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_PACKAGETATPRICE\" })}\r\n                    type=\"number\"\r\n                    value={props.selectedRecord[\"ntestpackagetatdays\"]}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_PACKAGETATPRICE\" })}\r\n                    strict={true}\r\n                    min={0}\r\n                    isMandatory={true}\r\n                    //max={99999999.99}\r\n                    maxLength={3}\r\n                    onChange={(value) => props.onNumericInputChange(value, \"ntestpackagetatdays\")}\r\n                    noStyle={true}\r\n                    className=\"form-control\"\r\n                    errors=\"Please provide a valid number.\"\r\n                />\r\n                    {/* </Col>\r\n\r\n                    <Col md={12}> */}\r\n                        <FormTextarea\r\n                            label={props.intl.formatMessage({ id:\"IDS_DESCRIPTION\"})}\r\n                            name={\"sdescription\"}\r\n                            onChange={(event)=>props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_DESCRIPTION\"})}\r\n                            value ={props.selectedRecord ? props.selectedRecord[\"sdescription\"] :\"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={255}\r\n                            >\r\n                        </FormTextarea>\r\n                    {/* </Col>\r\n                    <Col md={12}> */}\r\n                       \r\n                    </Col>\r\n                        \r\n                </Row>\r\n            )   \r\n}\r\n\r\nexport default injectIntl(AddTestPackage);"]},"metadata":{},"sourceType":"module"}