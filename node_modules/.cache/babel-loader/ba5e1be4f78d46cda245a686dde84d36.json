{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\AddRegistrationSubtypeConfigUser.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\n\nconst AddRegistrationSubtypeConfigUser = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_USERS\"\n    }),\n    isSearchable: true,\n    name: \"nusercode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isClearable: false,\n    options: props.Users || [],\n    isMulti: true,\n    value: props.selectedRecord[\"nusercode\"] || \"\",\n    onChange: event => props.onComboChange(event, \"nusercode\", 1),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddRegistrationSubtypeConfigUser);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/credentialmanagement/AddRegistrationSubtypeConfigUser.jsx"],"names":["React","FormSelectSearch","injectIntl","Row","Col","AddRegistrationSubtypeConfigUser","props","intl","formatMessage","id","Users","selectedRecord","event","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;;AAIA,MAAMC,gCAAgC,GAAIC,KAAD,IAAW;AAChD,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADf;AAEI,IAAA,YAAY,EAAE,IAFlB;AAGI,IAAA,IAAI,EAAE,WAHV;AAII,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJjB;AAKI,IAAA,WAAW,EAAE,IALjB;AAMI,IAAA,WAAW,EAAE,KANjB;AAOI,IAAA,OAAO,EAAEH,KAAK,CAACI,KAAN,IAAe,EAP5B;AAQI,IAAA,OAAO,EAAE,IARb;AASI,IAAA,KAAK,EAAEJ,KAAK,CAACK,cAAN,CAAqB,WAArB,KAAqC,EAThD;AAUI,IAAA,QAAQ,EAAGC,KAAD,IAAWN,KAAK,CAACO,aAAN,CAAoBD,KAApB,EAA2B,WAA3B,EAAwC,CAAxC,CAVzB;AAWI,IAAA,iBAAiB,EAAE,IAXvB;AAYI,IAAA,gBAAgB,EAAE,IAZtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAqBH,CAtBD;;AAwBA,eAAeV,UAAU,CAACG,gCAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst AddRegistrationSubtypeConfigUser = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                    isSearchable={true}\r\n                    name={\"nusercode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.Users || []}\r\n                    isMulti={true}\r\n                    value={props.selectedRecord[\"nusercode\"] || \"\"}\r\n                    onChange={(event) => props.onComboChange(event, \"nusercode\", 1)}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddRegistrationSubtypeConfigUser);"]},"metadata":{},"sourceType":"module"}