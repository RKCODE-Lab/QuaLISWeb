{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\EditTestPricing.js\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { ReadOnlyText } from '../../components/App.styles';\n\nconst EditTestPricing = props => {\n  // console.log(\"props.selected:\", props.selectedRecord)\n  return Object.keys(props.selectedRecord).length > 0 ? props.selectedRecord.map(item => /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReadOnlyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 33\n    }\n  }, item.stestname)), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_COST\"\n    }),\n    name: \"ncost\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event, item.ntestpricecode),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COST\"\n    }),\n    value: item.ncost || 0,\n    isMandatory: true,\n    required: true,\n    maxLength: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 33\n    }\n  })))) : \"\";\n};\n\nexport default injectIntl(EditTestPricing);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/EditTestPricing.js"],"names":["React","Row","Col","injectIntl","FormInput","ReadOnlyText","EditTestPricing","props","Object","keys","selectedRecord","length","map","item","stestname","intl","formatMessage","id","event","onInputOnChange","ntestpricecode","ncost"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC5B;AACC,SACIC,MAAM,CAACC,IAAP,CAAYF,KAAK,CAACG,cAAlB,EAAkCC,MAAlC,GAA2C,CAA3C,GACIJ,KAAK,CAACG,cAAN,CAAqBE,GAArB,CAAyBC,IAAI,iBAC7B,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeA,IAAI,CAACC,SAApB,CADZ,CADJ,eAII,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEP,KAAK,CAACQ,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,OAFV;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAGC,KAAD,IAAWX,KAAK,CAACY,eAAN,CAAsBD,KAAtB,EAA6BL,IAAI,CAACO,cAAlC,CAJzB;AAKI,IAAA,WAAW,EAAEb,KAAK,CAACQ,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEJ,IAAI,CAACQ,KAAL,IAAc,CANzB;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,QAAQ,EAAE,IARd;AASI,IAAA,SAAS,EAAE,CATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,CAJJ,CADA,CADJ,GAqBG,EAtBP;AAwBP,CA1BD;;AA4BA,eAAelB,UAAU,CAACG,eAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\n\r\nconst EditTestPricing = (props) => {\r\n       // console.log(\"props.selected:\", props.selectedRecord)\r\n        return (\r\n            Object.keys(props.selectedRecord).length > 0 ? \r\n                props.selectedRecord.map(item=>\r\n                <Row>\r\n                    <Col md={6}>\r\n                                <ReadOnlyText>{item.stestname}</ReadOnlyText>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                                <FormInput\r\n                                    label={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                    name={\"ncost\"}\r\n                                    type=\"text\"\r\n                                    onChange={(event) => props.onInputOnChange(event, item.ntestpricecode)}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                    value={item.ncost || 0}\r\n                                    isMandatory={true}\r\n                                    required={true}\r\n                                    maxLength={9}\r\n                            />\r\n                            \r\n                    </Col>\r\n                </Row>\r\n            ) :\"\"\r\n        )\r\n}\r\n\r\nexport default injectIntl(EditTestPricing);"]},"metadata":{},"sourceType":"module"}