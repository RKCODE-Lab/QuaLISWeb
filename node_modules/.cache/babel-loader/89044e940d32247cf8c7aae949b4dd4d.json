{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{AtTableWrap}from'../client-group.styles';import{FormattedMessage,injectIntl}from'react-intl';import{Grid,GridColumn as Column,GridNoRecords}from'@progress/kendo-react-grid';import{process}from'@progress/kendo-data-query';import ReactTooltip from'react-tooltip';import{Card,Col,FormGroup,FormLabel,Row}from'react-bootstrap';import{FormControlStatic}from'./data-grid.styles';import{parse}from'@fortawesome/fontawesome-svg-core';import SimpleGrid from'./SimpleGrid';var SimpleGridWithSelection=/*#__PURE__*/function(_React$Component){_inherits(SimpleGridWithSelection,_React$Component);var _super=_createSuper(SimpleGridWithSelection);function SimpleGridWithSelection(_props){var _this;_classCallCheck(this,SimpleGridWithSelection);_this=_super.call(this,_props);_this.expandChange=function(event){var isExpanded=event.dataItem.expanded===undefined?event.dataItem.aggregates:event.dataItem.expanded;if(_this.props.hasChild&&event.value===true){event.dataItem.expanded=!isExpanded;_this.props.handleExpandChange(event,_this.props.dataState);}else{event.dataItem.expanded=!isExpanded;_this.setState({isExpanded:isExpanded});}};_this.detailBand=function(props){return/*#__PURE__*/React.createElement(Row,{bsPrefix:\"margin_class\"},/*#__PURE__*/React.createElement(Col,{md:12},_this.props.hasDynamicColSize?/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MOREINFO\",message:\"More Info\"})),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},/*#__PURE__*/React.createElement(Row,{style:{marginLeft:-18}},_this.props.detailedFieldList.map(function(item){return/*#__PURE__*/React.createElement(Col,{md:item.columnSize},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:item.idsName,message:item.idsName})),/*#__PURE__*/React.createElement(FormControlStatic,null,props.dataItem[item.dataField]===undefined||props.dataItem[item.dataField]===null||props.dataItem[item.dataField].length===0?'-':item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:props.dataItem[item.dataField],message:props.dataItem[item.dataField]}):item.isHTML?parse(props.dataItem[item.dataField]):props.dataItem[item.dataField])));})))):_this.props.hasSubChild?/*#__PURE__*/React.createElement(SimpleGrid,{dataResult1:_this.props.dataResult1&&_this.props.dataResult1||[],extractedColumnList:_this.subChildColumnList}):/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MOREINFO\",message:\"More Info\"})),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},/*#__PURE__*/React.createElement(Row,null,_this.props.detailedFieldList.map(function(item){return/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:item.idsName,message:item.idsName})),/*#__PURE__*/React.createElement(FormControlStatic,null,props.dataItem[item.dataField]===undefined||props.dataItem[item.dataField]===null||props.dataItem[item.dataField].length===0?'-':item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:props.dataItem[item.dataField],message:props.dataItem[item.dataField]}):item.isHTML?parse(props.dataItem[item.dataField]):props.dataItem[item.dataField])));}))))),\" \");};_this.subChildColumnList=[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ssamplearno\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}// { \"idsName\": \"IDS_SAMPLENAME\", \"dataField\": \"Sample Name\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\n//  { \"idsName\": \"IDS_CONTAINERTYPE\", \"dataField\": \"Container Type\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\n];return _this;}_createClass(SimpleGridWithSelection,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\",id:\"tooltip-samplegrid-wrap\"}),/*#__PURE__*/React.createElement(Grid,{data:process(this.props.dataResult1,{skip:0,take:this.props.dataResult1.length}),selectedField:\"selected\",expandField:this.props.expandField?this.props.expandField:false,detail:this.props.hideDetailBand?false:this.detailBand,onExpandChange:this.expandChange,onSelectionChange:this.props.selectionChange,onHeaderSelectionChange:this.props.headerSelectionChange,scrollable:this.props.scrollable,onRowClick:this.props.rowClick},/*#__PURE__*/React.createElement(Column,{field:\"selected\",width:\"50px\",title:this.props.title,headerSelectionValue:this.props.selectAll}),this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(Column,{key:index,title:_this2.props.intl.formatMessage({id:item.idsName}),cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{\"data-for\":\"tooltip-samplegrid-wrap\",\"data-tip\":row[\"dataItem\"][item.dataField]},item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):row[\"dataItem\"][item.dataField]);}});})));}}]);return SimpleGridWithSelection;}(React.Component);export default injectIntl(SimpleGridWithSelection);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/data-grid/SimpleGridWithSelection.jsx"],"names":["React","AtTableWrap","FormattedMessage","injectIntl","Grid","GridColumn","Column","GridNoRecords","process","ReactTooltip","Card","Col","FormGroup","FormLabel","Row","FormControlStatic","parse","SimpleGrid","SimpleGridWithSelection","props","expandChange","event","isExpanded","dataItem","expanded","undefined","aggregates","hasChild","value","handleExpandChange","dataState","setState","detailBand","hasDynamicColSize","marginLeft","detailedFieldList","map","item","columnSize","idsName","dataField","length","isIdsField","isHTML","hasSubChild","dataResult1","subChildColumnList","skip","take","expandField","hideDetailBand","selectionChange","headerSelectionChange","scrollable","rowClick","title","selectAll","extractedColumnList","index","intl","formatMessage","id","row","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { AtTableWrap } from '../client-group.styles';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Grid, GridColumn as Column, GridNoRecords } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { Card, Col, FormGroup, FormLabel, Row } from 'react-bootstrap';\r\nimport { FormControlStatic } from './data-grid.styles';\r\nimport { parse } from '@fortawesome/fontawesome-svg-core';\r\nimport SimpleGrid from './SimpleGrid';\r\n\r\nclass SimpleGridWithSelection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.subChildColumnList = [{ \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ssamplearno\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            // { \"idsName\": \"IDS_SAMPLENAME\", \"dataField\": \"Sample Name\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n            //  { \"idsName\": \"IDS_CONTAINERTYPE\", \"dataField\": \"Container Type\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\r\n        ];\r\n    }\r\n    expandChange = (event) => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ?\r\n                event.dataItem.aggregates : event.dataItem.expanded;\r\n\r\n        if (this.props.hasChild && event.value === true) {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.props.handleExpandChange(event, this.props.dataState)\r\n        }\r\n        else {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.setState({ isExpanded });\r\n        }\r\n    }\r\n    detailBand = (props) => {\r\n        return (\r\n            <Row bsPrefix=\"margin_class\">\r\n                <Col md={12}>\r\n                    {this.props.hasDynamicColSize ?\r\n                        <Card>\r\n                            <Card.Header><FormattedMessage id=\"IDS_MOREINFO\" message=\"More Info\" /></Card.Header>\r\n                            <Card.Body className=\"form-static-wrap\">\r\n                                <Row style={{ marginLeft: -18 }}>\r\n                                    {this.props.detailedFieldList.map((item) => {\r\n                                        return (\r\n\r\n                                            <Col md={item.columnSize}>\r\n                                                <FormGroup>\r\n                                                    <FormLabel><FormattedMessage id={item.idsName} message={item.idsName} /></FormLabel>\r\n                                                    <FormControlStatic>\r\n                                                        {\r\n                                                            props.dataItem[item.dataField] === undefined ||\r\n                                                                props.dataItem[item.dataField] === null ||\r\n                                                                props.dataItem[item.dataField].length === 0 ? '-' :\r\n                                                                item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> :\r\n                                                                    item.isHTML ? parse(props.dataItem[item.dataField]) : props.dataItem[item.dataField]}\r\n                                                    </FormControlStatic>\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        )\r\n                                    })}\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        : this.props.hasSubChild ?\r\n                            <SimpleGrid dataResult1={this.props.dataResult1 && this.props.dataResult1 || []}\r\n                                extractedColumnList={this.subChildColumnList} />\r\n                            :\r\n                            <Card>\r\n                                <Card.Header><FormattedMessage id=\"IDS_MOREINFO\" message=\"More Info\" /></Card.Header>\r\n                                <Card.Body className=\"form-static-wrap\">\r\n                                    <Row>\r\n                                        {this.props.detailedFieldList.map((item) => {\r\n                                            return (\r\n\r\n                                                <Col md={6}>\r\n                                                    <FormGroup>\r\n                                                        <FormLabel><FormattedMessage id={item.idsName} message={item.idsName} /></FormLabel>\r\n                                                        <FormControlStatic>\r\n                                                            {props.dataItem[item.dataField] === undefined || props.dataItem[item.dataField] === null || props.dataItem[item.dataField].length === 0 ? '-' :\r\n                                                                item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> : item.isHTML ? parse(props.dataItem[item.dataField]) : props.dataItem[item.dataField]}\r\n                                                        </FormControlStatic>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                            )\r\n                                        })}\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>}\r\n                </Col> </Row>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <AtTableWrap className=\"at-list-table\">\r\n                <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip-samplegrid-wrap\" />\r\n                {/* <Tooltip openDelay={100} position=\"auto\" tooltipClassName=\"ad-tooltip\" anchorElement=\"element\" parentTitle={true}> */}\r\n                <Grid\r\n                    data={process(this.props.dataResult1, { skip: 0, take: this.props.dataResult1.length })}\r\n                    selectedField=\"selected\"\r\n                    expandField={this.props.expandField ? this.props.expandField : false}\r\n                    detail={this.props.hideDetailBand ? false : this.detailBand}\r\n                    onExpandChange={this.expandChange}\r\n                    onSelectionChange={this.props.selectionChange}\r\n                    onHeaderSelectionChange={this.props.headerSelectionChange}\r\n                    scrollable={this.props.scrollable}\r\n\r\n                     onRowClick={this.props.rowClick}>\r\n                    <Column\r\n                        field=\"selected\"\r\n                        width=\"50px\"\r\n                        title={this.props.title}\r\n                        headerSelectionValue={this.props.selectAll}\r\n                    />\r\n                    {/* <Column type='checkbox' width='50'></Column> */}\r\n\r\n                    {this.props.extractedColumnList.map((item, index) =>\r\n                        <Column key={index}\r\n                            title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                            cell={(row) => (\r\n                                <td data-for=\"tooltip-samplegrid-wrap\"\r\n                                    data-tip={row[\"dataItem\"][item.dataField]}>\r\n                                    {/* title={row[\"dataItem\"][item.dataField]}> */}\r\n                                    {item.isIdsField ? <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                        : row[\"dataItem\"][item.dataField]}\r\n                                </td>)}\r\n                        />\r\n                    )}\r\n                </Grid>\r\n                {/* </Tooltip>           */}\r\n            </AtTableWrap>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(SimpleGridWithSelection);"]},"metadata":{},"sourceType":"module"}