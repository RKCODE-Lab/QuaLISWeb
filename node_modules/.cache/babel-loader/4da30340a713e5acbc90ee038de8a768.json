{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,FormGroup,FormLabel,Form,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import PerfectScrollbar from'react-perfect-scrollbar';import{faTrashAlt,faCopy,faPencilAlt,faSync,faPlus,faThumbsUp,faBoxOpen,faBox,faLocationArrow,faFolderMinus,faFolder,faFolderOpen,faArrowRight}from'@fortawesome/free-solid-svg-icons';import{toast}from'react-toastify';import ListMaster from'../../components/list-master/list-master.component';import{constructOptionList,getControlMap,showEsign}from'../../components/CommonScript';import{ReadOnlyText,ContentPanel}from'../../components/App.styles';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{callService,crudMaster,validateEsignCredential,updateStore,getSelectedSampleStorageLocation,filterColumnData,changeStorageCategoryFilter,openPropertyModal,editSampleStorageLocation,approveSampleStorageLocation,getSelectedSampleStorageVersion,fetchStorageCategory,copySampleStorageVersion}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ListWrapper}from'../../components/client-group.styles';import{ProductList}from'../product/product.styled';import ReactTooltip from'react-tooltip';import{uuid}from\"uuidv4\";import TreeEditable from\"../../components/form-tree-editable/TreeEditable\";import TreeViewEditable from\"../../components/form-tree-editable/form-tree-editable.component\";import{mapTree,removeItems}from\"@progress/kendo-react-treelist\";import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import AddTreeview from'./AddTreeview';import AddTreeProperties from'./AddTreeProperties';import{Splitter}from'@progress/kendo-react-layout';import TransactionListMaster from'../../components/TransactionListMaster';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import SplitterLayout from'react-splitter-layout';import StorageCategoryFilter from'./StorageCategoryFilter';import{transactionStatus}from'../../components/Enumeration';var SampleStorageLocation=/*#__PURE__*/function(_Component){_inherits(SampleStorageLocation,_Component);var _super=_createSuper(SampleStorageLocation);function SampleStorageLocation(_props){var _this;_classCallCheck(this,SampleStorageLocation);_this=_super.call(this,_props);_this.onChange=function(event){_this.setState({panes:event.newState});};_this.addChildNode=function(e,clickedItem){var newData=mapTree(_this.state.treeData,\"items\",function(item){if(item.id===clickedItem.id){item.items=item.items||[];item.items.push({id:uuid(),text:_this.props.intl.formatMessage({id:\"IDS_LABEL\"}),expanded:true,editable:false,locationlastnode:false,containerfirstnode:false,containerlastnode:false});}return item;});_this.setState({treeData:newData});};_this.equalNode=function(e,clickedItem){var parentItem={};var parentFound=false;var newData=_toConsumableArray(_this.state.treeData);mapTree(_this.state.treeData,\"items\",function(item){if(item.items){if(parentFound){parentItem=item;parentFound=false;}}if(item.id===clickedItem.id){parentFound=true;}return item;});if(parentItem.text===undefined){newData.push({id:uuid(),text:_this.props.intl.formatMessage({id:\"IDS_LABEL\"}),expanded:true,editable:false,locationlastnode:false,containerfirstnode:false,containerlastnode:false});_this.setState({treeData:newData});}else{newData=mapTree(_this.state.treeData,\"items\",function(item){if(item.id===parentItem.id){item.items.push({id:uuid(),text:_this.props.intl.formatMessage({id:\"IDS_LABEL\"}),expanded:true,editable:false,locationlastnode:false,containerfirstnode:false,containerlastnode:false});}return item;});_this.setState({treeData:newData});}};_this.deleteNode=function(clickedItem){var newData=removeItems(_this.state.treeData,\"items\",function(item){return item.id===clickedItem.id;});_this.setState({treeData:newData});};_this.editRecord=function(e,clickedItem){_this.setState({toggleAction:!_this.state.toggleAction});};_this.openModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:true,selectedRecord:{},loadTreeProperties:false,treeData:[{text:\"root\",expanded:true,editable:true,root:true,id:uuid()}],operation:\"create\"}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:false,selectedRecord:{}}};_this.props.updateStore(updateInfo);};_this.onInputChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type===\"checkbox\"){selectedRecord[event.target.name]=event.target.checked;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.itemRender=function(props){if(_this.state.toggleAction){return/*#__PURE__*/React.createElement(React.Fragment,null,props.item.editable?/*#__PURE__*/React.createElement(Form.Group,{className:\"k-editable-text-wrap\"},/*#__PURE__*/React.createElement(Form.Control,{id:\"nodename\",name:\"nodename\",type:\"text\",onKeyDown:function onKeyDown(e){return e.stopPropagation();},value:props.item.text,autoFocus:true,autoComplete:\"off\",onChange:function onChange(e){return _this.handleChange(e,props.item);},onBlur:function onBlur(e){return _this.handleBlur(e,props.item);}})):/*#__PURE__*/React.createElement(\"span\",null,props.item.text));}else{return/*#__PURE__*/React.createElement(React.Fragment,null,props.item?/*#__PURE__*/React.createElement(\"ul\",{className:\"list-inline mb-0\"},/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item mr-3\"},props.item.text),props.item.editable?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"action-icon tree-level1\",onClick:function onClick(e){e.stopPropagation();_this.equalNode(e,props.item);}})),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"action-icon tree-level2\",onClick:function onClick(e){e.stopPropagation();_this.addChildNode(e,props.item);}})),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"k-icon k-i-edit k-i-pencil\",onClick:function onClick(e){e.stopPropagation();_this.editRecord(e,props.item);}})),!props.item.isRoot?/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"k-icon k-i-delete\",onClick:function onClick(e){e.stopPropagation();_this.deleteNode(props.item);}})):null):null):\"\");}};_this.onItemClick=function(event){var newData=mapTree(_this.state.treeData,\"items\",function(item){if(item.editable===true){item.editable=false;}else if(item.id===event.item.id){item.editable=true;}return item;});_this.setState({treeData:newData});};_this.onExpandChange=function(event){event.item.expanded=!event.item.expanded;_this.forceUpdate();};_this.itemRenderView=function(clickedItem){var item=clickedItem.item;if(!_this.state.toggleActionView){return/*#__PURE__*/React.createElement(React.Fragment,null,clickedItem.item?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",{className:\"normal-node\\n                        \".concat(item.selected?\"active-node\":\"\",\"\\n                        \").concat(item.expanded?\"expand-node\":\"collapse-node\",\"\\n                        \")},item.containerfirstnode?/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faBoxOpen}):item.locationlastnode?/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faLocationArrow}):item.containerlastnode?/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faBox}):item.expanded?/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFolderOpen}):/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFolder}),item.text),clickedItem.item.editable?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",{className:\"action-icon tree-toggle m-l-half\",onClick:function onClick(e){return _this.setProperties(e,clickedItem);}})):null):\"\");}};_this.onItemClickView=function(event){var newData=mapTree(_this.state.treeDataView,\"items\",function(item){if(item.editable===true){item.editable=false;}else if(item.id===event.item.id){item.editable=true;}return item;});newData.map(function(data){_this.clearSelected(data,event.item);});_this.setState({treeDataView:newData});};_this.onExpandChangeView=function(event){event.item.expanded=!event.item.expanded;_this.forceUpdate();};_this.setProperties=function(event,clickedItem){_this.props.openPropertyModal(clickedItem);};_this.handleChange=function(e,clickedItem){var newData=mapTree(_this.state.treeData,\"items\",function(item){if(item.id===clickedItem.id){item.text=e.target.value;}return item;});_this.setState({treeData:newData});};_this.handleBlur=function(e,item){item.editable=false;_this.setState({toggleAction:!_this.state.toggleAction});};_this.onSaveClick=function(){if(_this.props.Login.loadTreeProperties===true){_this.onSaveProperties();}else{_this.onSaveSampleStorageLocation();}};_this.onSaveProperties=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;if(_this.props.Login.clickedItem&&_this.props.Login.clickedItem!==undefined){var inputData=[];var jsondata={};var postParam=undefined;var count=0;if(selectedRecord[\"locationlastnode\"]!==undefined&&selectedRecord[\"locationlastnode\"]===true){count=count+1;}if(selectedRecord[\"containerfirstnode\"]!==undefined&&selectedRecord[\"containerfirstnode\"]===true){count=count+1;}if(selectedRecord[\"containerlastnode\"]!==undefined&&selectedRecord[\"containerlastnode\"]===true){count=count+1;}if(count>1){toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTONLYONE\"}));}else{var newData=mapTree(_this.state.treeDataView,\"items\",function(item){if(item.id===_this.props.Login.clickedItem.item.id){item.locationlastnode=selectedRecord[\"locationlastnode\"]!==undefined?selectedRecord[\"locationlastnode\"]:false;item.containerfirstnode=selectedRecord[\"containerfirstnode\"]!==undefined?selectedRecord[\"containerfirstnode\"]:false;item.containerlastnode=selectedRecord[\"containerlastnode\"]!==undefined?selectedRecord[\"containerlastnode\"]:false;}return item;});postParam={inputListName:\"sampleStorageLocation\",selectedObject:\"selectedSampleStorageLocation\",primaryKeyField:\"nsamplestoragelocationcode\"};jsondata[\"data\"]=newData;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sampleStorageVersion\"]={\"nstatus\":1};inputData[\"sampleStorageLocation\"]={\"nstatus\":1};inputData[\"sampleStorageLocation\"][\"nsamplestoragelocationcode\"]=_this.props.Login.masterData.selectedSampleStorageLocation[\"nsamplestoragelocationcode\"];inputData[\"sampleStorageLocation\"][\"ssamplestoragelocationname\"]=_this.props.Login.masterData.selectedSampleStorageLocation[\"ssamplestoragelocationname\"];inputData[\"sampleStorageLocation\"][\"nstoragecategorycode\"]=_this.props.Login.masterData.selectedSampleStorageLocation[\"nstoragecategorycode\"];inputData[\"sampleStorageVersion\"][\"nsamplestorageversioncode\"]=_this.props.Login.masterData.selectedSampleStorageVersion[\"nsamplestorageversioncode\"];inputData[\"sampleStorageVersion\"][\"napprovalstatus\"]=_this.props.Login.masterData.selectedSampleStorageVersion[\"napprovalstatus\"];inputData[\"sampleStorageVersion\"][\"jsondata\"]=jsondata;var inputParam={classUrl:\"samplestoragelocation\",methodUrl:\"SampleStorageLocation\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:\"update\",saveType:saveType,formRef:formRef,postParam:postParam};var masterData=_this.props.Login.masterData;// if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData }, saveType\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// } else {\n_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");// }\n}}};_this.onSaveSampleStorageLocation=function(saveType,formRef){var selectedRecord=_this.state.selectedRecord;// if (selectedRecord[\"nstoragecategorycode\"] && selectedRecord[\"nstoragecategorycode\"] !== undefined) {\n//     if (selectedRecord[\"ssamplestoragelocationname\"] && selectedRecord[\"ssamplestoragelocationname\"].length > 0) {\nvar inputData=[];var jsondata={};var postParam=undefined;var newData=mapTree(_this.state.treeData,\"items\",function(item){if(item.editable===true){item.editable=false;}return item;});// postParam = { inputListName: \"SampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\" };\njsondata[\"data\"]=newData;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sampleStorageLocation\"]={\"nstatus\":1};inputData[\"sampleStorageVersion\"]={\"nstatus\":1};inputData[\"sampleStorageLocation\"][\"ssamplestoragelocationname\"]=selectedRecord[\"ssamplestoragelocationname\"];inputData[\"sampleStorageLocation\"][\"nstoragecategorycode\"]=selectedRecord[\"nstoragecategorycode\"].value;inputData[\"sampleStorageVersion\"][\"jsondata\"]=jsondata;if(_this.props.Login.operation===\"create\"){var inputParam={classUrl:\"samplestoragelocation\",methodUrl:\"SampleStorageLocation\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:\"create\",saveType:saveType,formRef:formRef};var masterData=_this.props.Login.masterData;// if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData }, saveType\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// } else {\n_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");// }\n}else{inputData[\"sampleStorageLocation\"][\"nsamplestoragelocationcode\"]=_this.props.Login.masterData.selectedSampleStorageLocation[\"nsamplestoragelocationcode\"];inputData[\"sampleStorageVersion\"][\"nsamplestorageversioncode\"]=_this.props.Login.masterData.selectedSampleStorageVersion[\"nsamplestorageversioncode\"];inputData[\"sampleStorageVersion\"][\"napprovalstatus\"]=_this.props.Login.masterData.selectedSampleStorageVersion[\"napprovalstatus\"];var _inputParam={classUrl:\"samplestoragelocation\",methodUrl:\"SampleStorageLocation\",displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:\"update\",saveType:saveType,formRef:formRef};var _masterData=_this.props.Login.masterData;// if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData }, saveType\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// } else {\n_this.props.crudMaster(_inputParam,_this.props.Login.masterData,\"openModal\");// }\n}};_this.deleteSampleStorageLocation=function(ncontrolCode){var inputData=[];inputData[\"sampleStorageVersion\"]={};inputData[\"sampleStorageVersion\"][\"nsamplestoragelocationcode\"]=_this.props.Login.masterData.selectedSampleStorageVersion[\"nsamplestoragelocationcode\"];inputData[\"sampleStorageVersion\"][\"nsamplestorageversioncode\"]=_this.props.Login.masterData.selectedSampleStorageVersion[\"nsamplestorageversioncode\"];inputData[\"sampleStorageVersion\"][\"napprovalstatus\"]=_this.props.Login.masterData.selectedSampleStorageVersion[\"napprovalstatus\"];inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nstoragecategorycode\"]=_this.props.Login.masterData.selectedSampleStorageVersion[\"nstoragecategorycode\"];var inputParam={methodUrl:\"SampleStorageLocation\",classUrl:\"samplestoragelocation\",inputData:inputData,operation:\"delete\",searchRef:_this.searchRef};var masterData=_this.props.Login.masterData;// if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData }, operation: \"delete\", openModal: true,\n//             screenName: this.props.Login.inputParam.displayName\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// else {\n_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");// }\n};_this.confirmDelete=function(ncontrolCode){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteSampleStorageLocation(ncontrolCode);});};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.handleDetailPageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.onComboChange=function(comboData,fieldName,caseNo){var selectedRecord=_this.state.selectedRecord||{};if(caseNo===3){var nfilterStorageCategory=_this.state.nfilterStorageCategory||{};nfilterStorageCategory=comboData;_this.searchRef.current.value=\"\";_this.setState({nfilterStorageCategory:nfilterStorageCategory});}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){if(_this.state.nfilterStorageCategory.value){var inputParam={inputData:{nstoragecategorycode:_this.state.nfilterStorageCategory.value,userinfo:_this.props.Login.userInfo,nfilterStorageCategory:_this.state.nfilterStorageCategory}};_this.props.changeStorageCategoryFilter(inputParam,_this.props.Login.masterData.filterStorageCategory);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_STORAGECATEGORYNOTAVAILABLE\"}));}};_this.onApproveSampleStorageLocation=function(ncontrolCode){var locationEnd=false;var storageStart=false;var storageEnd=false;mapTree(_this.state.treeDataView,\"items\",function(item){if(item.locationlastnode===true){locationEnd=true;}if(item.containerfirstnode===true){storageStart=true;}if(item.containerlastnode===true){storageEnd=true;}return null;});if(locationEnd===false){toast.warning(_this.props.intl.formatMessage({id:\"IDS_PLEASESELECTLOCATIONEND\"}));return;}if(storageStart===false){toast.warning(_this.props.intl.formatMessage({id:\"IDS_PLEASESELECTSTORAGESTART\"}));return;}if(storageEnd===false){toast.warning(_this.props.intl.formatMessage({id:\"IDS_PLEASESELECTSTORAGEEND\"}));return;}var masterData=_this.props.Login.masterData;var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"samplestoragelocation\",methodUrl:\"SampleStorageLocation\",displayName:\"IDS_SAMPLESTORAGELOCATION\",userInfo:_this.props.Login.userInfo};// if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData }, openModal: true,\n//             screenName: this.props.Login.inputParam.displayName\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// else {\n_this.props.approveSampleStorageLocation(_this.props.Login.userInfo,_this.props.Login.masterData);// }\n};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"samplestoragelocation\",methodUrl:\"SampleStorageLocation\",displayName:\"IDS_SAMPLESTORAGELOCATION\",userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.state={toggleAction:false,treeDataView:undefined,toggleActionView:false,treeData:[{text:\"root\",expanded:true,editable:true,root:true,id:uuid()}],panes:[{size:'50%',scrollable:false}],selectedRecord:{},userRoleControlRights:[],controlMap:new Map(),skip:0,detailSkip:0,detailTake:10,take:_this.props.Login.settings?_this.props.Login.settings[3]:25,splitChangeWidthPercentage:22,selectedItem:undefined};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(SampleStorageLocation,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var isComponentUpdated=false;var filterData=this.state.filterData;var selectedRecord=this.state.selectedRecord||{};if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({controlMap:controlMap,userRoleControlRights:userRoleControlRights});}if(this.props.Login.treeData!==previousProps.Login.treeData){this.setState({treeData:this.props.Login.treeData});}if(this.props.Login.masterData.selectedSampleStorageVersion!==previousProps.Login.masterData.selectedSampleStorageVersion){if(this.props.Login.masterData.selectedSampleStorageVersion&&this.props.Login.masterData.selectedSampleStorageVersion!==undefined){this.setState({treeDataView:JSON.parse(this.props.Login.masterData.selectedSampleStorageVersion[\"jsondata\"].value).data});}}var nfilterStorageCategory=this.state.nStorageCategory||{};var filterStorageCategory=this.state.filterStorageCategory||{};if(this.props.Login.masterData.filterStorageCategory!==previousProps.Login.masterData.filterStorageCategory){var filterStorageCategoryMap=constructOptionList(this.props.Login.masterData.filterStorageCategory||[],\"nstoragecategorycode\",\"sstoragecategoryname\",'nstoragecategorycode','ascending',false);filterStorageCategory=filterStorageCategoryMap.get(\"OptionList\");if(filterStorageCategory&&filterStorageCategory.length>0){nfilterStorageCategory=filterStorageCategory[0];}isComponentUpdated=true;}else if(this.props.Login.masterData.nfilterStorageCategory!==previousProps.Login.masterData.nfilterStorageCategory){nfilterStorageCategory=this.props.Login.masterData.nfilterStorageCategory;isComponentUpdated=true;}if(isComponentUpdated){this.setState({nfilterStorageCategory:nfilterStorageCategory,selectedRecord:selectedRecord,filterStorageCategory:filterStorageCategory});}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData!==previousProps.Login.masterData){var _filterData=this.generateBreadCrumData();this.setState({filterData:_filterData});}}},{key:\"clearSelected\",value:function clearSelected(innerObj,selectedItem){var _this2=this;if(innerObj.id==selectedItem.id){innerObj.selected=true;}else{innerObj.selected=false;}if(innerObj.items&&innerObj.items.length>0){innerObj.items.map(function(childObj){_this2.clearSelected(childObj,selectedItem);});}return innerObj;}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height-50});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var breadCrumbData=[];if(this.props.Login.masterData&&this.props.Login.masterData.filterStorageCategory){breadCrumbData.push({\"label\":\"IDS_STORAGECATEGORY\",\"value\":this.props.Login.masterData.selectedStorageCategoryName&&this.props.Login.masterData.selectedStorageCategoryName!==null?this.props.Login.masterData.selectedStorageCategoryName:\"NA\"// \"value\": this.props.Login.masterData.selectedSampleStorageLocation ? this.props.Login.masterData.filterStorageCategory && this.props.Login.masterData.filterStorageCategory !== undefined ?\n//     this.props.Login.masterData.selectedStorageCategoryName : \"NA\" : \"NA\"\n});}return breadCrumbData;}},{key:\"render\",value:function render(){var _this3=this;var addId=this.state.controlMap.has(\"Add SampleStorageLocation\")&&this.state.controlMap.get(\"Add SampleStorageLocation\").ncontrolcode;var editId=this.state.controlMap.has(\"Edit SampleStorageLocation\")&&this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"Delete SampleStorageLocation\")&&this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;var copyId=this.state.controlMap.has(\"Copy SampleStorageLocation\")&&this.state.controlMap.get(\"Copy SampleStorageLocation\").ncontrolcode;var approveId=this.state.controlMap.has(\"Approve SampleStorageLocation\")&&this.state.controlMap.get(\"Approve SampleStorageLocation\").ncontrolcode;var filterParam={inputListName:\"sampleStorageLocation\",selectedObject:\"selectedSampleStorageLocation\",primaryKeyField:\"nsamplestoragelocationcode\",fetchUrl:\"samplestoragelocation/getSelectedSampleStorageLocation\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"ssamplestoragelocationname\"]};var mandatoryFields=[{\"idsName\":\"IDS_STORAGECATEGORY\",\"dataField\":\"nstoragecategorycode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_SAMPLESTORAGELOCATIONNAME\",\"dataField\":\"ssamplestoragelocationname\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];var breadCrumbData=this.state.filterData||[];var confirmMessage=new ConfirmMessage();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-4 screen-height-window\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData}):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height\"},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",percentage:true,primaryIndex:1,onSecondaryPaneSizeChange:this.paneSizeChange,secondaryInitialSize:25,primaryMinSize:40,secondaryMinSize:20},/*#__PURE__*/React.createElement(TransactionListMaster,{paneHeight:this.state.parentHeight,needMultiSelect:false,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.sampleStorageLocation||[],selectedMaster:[this.props.Login.masterData.selectedSampleStorageLocation],primaryKeyField:\"nsamplestoragelocationcode\",getMasterDetail:function getMasterDetail(selectedItem){return _this3.props.getSelectedSampleStorageLocation(selectedItem,_this3.props.Login.userInfo,_this3.props.Login.masterData);},inputParam:{userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData},mainField:\"ssamplestoragelocationname\",selectedListName:\"selectedSampleStorageLocation\",objectName:\"LocationMaster\",listName:\"IDS_SAMPLESTORAGELOCATION\",filterColumnData:this.props.filterColumnData,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam,showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,needFilter:true,hidePaging:false,handlePageChange:this.handlePageChange,skip:this.state.skip,take:this.state.take,commonActions:/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this3.props.fetchStorageCategory({userInfo:_this3.props.Login.userInfo,id:uuid(),nfilterStorageCategory:_this3.state.nfilterStorageCategory});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,title:this.props.intl.formatMessage({id:\"IDS_ADD\"})})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",onClick:function onClick(){return _this3.reloadData();},\"data-for\":\"tooltip-common-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}}))),filterComponent:[{\"IDS_TESTFILTER\":/*#__PURE__*/React.createElement(StorageCategoryFilter,{filterStorageCategory:this.state.filterStorageCategory||[],nfilterStorageCategory:this.state.nfilterStorageCategory||{},onComboChange:this.onComboChange})}]}),/*#__PURE__*/React.createElement(SplitterLayout,{vertical:true,borderColor:\"#999\",percentage:true,primaryIndex:1//secondaryInitialSize={400}\n,customClassName:\"fixed_list_height\"},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card_group\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3,style:{paddingRight:'0'}},/*#__PURE__*/React.createElement(TransactionListMaster,{masterList:this.props.Login.masterData.sampleStorageVersion||[],needMultiSelect:false,selectedMaster:[this.props.Login.masterData.selectedSampleStorageVersion],primaryKeyField:\"nsamplestorageversioncode\",getMasterDetail:function getMasterDetail(selectedItem){return _this3.props.getSelectedSampleStorageVersion(selectedItem,_this3.props.Login.userInfo,_this3.props.Login.masterData);},inputParam:{userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData},mainField:\"nversionno\",mainFieldLabel:this.props.intl.formatMessage({id:\"IDS_VERSION\"}),selectedListName:\"selectedSampleStorageVersion\",objectName:\"Version\",listName:\"IDS_SAMPLESTORAGEVersion\",hideSearch:true,needValidation:false,needFilter:false,moreField:[],skip:this.state.detailSkip,take:this.state.detailTake,hidePaging:true,handlePageChange:this.handleDetailPageChange,splitModeClass:this.state.splitChangeWidthPercentage&&this.state.splitChangeWidthPercentage>50?'split-mode':this.state.splitChangeWidthPercentage>40?'split-md':'',actionIcons:[{title:this.props.intl.formatMessage({id:\"IDS_EDIT\"}),controlname:\"faPencilAlt\",objectName:\"detailtoedit\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(e){return _this3.props.editSampleStorageLocation(_this3.props.Login.masterData.selectedSampleStorageVersion,_this3.props.Login.userInfo,_this3.props.Login.masterData);}},{title:this.props.intl.formatMessage({id:\"IDS_DELETE\"}),controlname:\"faTrashAlt\",objectName:\"mastertodelete\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this3.confirmDelete(deleteId);}}]})),/*#__PURE__*/React.createElement(Col,{md:9},/*#__PURE__*/React.createElement(ProductList,{className:\"panel-main-content grid-master\"},this.props.Login.masterData.sampleStorageLocation&&this.props.Login.masterData.sampleStorageLocation.length>0&&this.props.Login.masterData.selectedSampleStorageLocation?/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.selectedSampleStorageLocation.ssamplestoragelocationname),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"action-icons-wrap mr-2\"},this.props.Login.masterData.selectedSampleStorageVersion.napprovalstatus===transactionStatus.DRAFT?/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined  outline-secondary btn-sm ml-3\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_DRAFT\",defaultMessage:\"Draft\"})):this.props.Login.masterData.selectedSampleStorageVersion.napprovalstatus===transactionStatus.RETIRED?/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined outline-danger btn-sm ml-3\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RETIRED\",defaultMessage:\"Retired\"})):/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined outline-success btn-sm ml-3\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_APPROVED\",defaultMessage:\"Approved\"})))),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},this.props.Login.masterData.selectedSampleStorageVersion.napprovalstatus===transactionStatus.DRAFT?/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 \",href:\"#\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),onClick:function onClick(e){return _this3.props.editSampleStorageLocation(_this3.props.Login.masterData.selectedSampleStorageVersion,_this3.props.Login.userInfo,_this3.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})):/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 \",href:\"#\",hidden:this.state.userRoleControlRights.indexOf(copyId)===-1,\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COPY\"}),onClick:function onClick(e){return _this3.props.copySampleStorageVersion(_this3.props.Login.masterData.selectedSampleStorageVersion,_this3.props.Login.userInfo,_this3.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCopy})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"QB\",className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(){return _this3.confirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"QB\",className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(approveId)===-1,\"data-for\":\"tooltip_list_wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_APPROVE\"}),onClick:function onClick(){return _this3.onApproveSampleStorageLocation(approveId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp})))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(TreeViewEditable,{id:\"samplestoragelocation\",name:\"samplestoragelocation\"// label=\"Sample Storage Location\"\n,data:this.state.treeDataView,expandIcons:true,selectField:'active-node',item:this.itemRenderView,onExpandChange:this.onExpandChangeView,onItemClick:this.onItemClickView}))):\"\")))))))))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.intl.formatMessage({id:\"IDS_SAMPLESTORAGELOCATION\"}),onSaveClick:this.onSaveClick,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.loadTreeProperties===true?[]:mandatoryFields,addComponent:this.props.Login.loadTreeProperties?/*#__PURE__*/React.createElement(AddTreeProperties,{onInputChange:function onInputChange(e){return _this3.onInputChange(e);},selectedRecord:this.state.selectedRecord||{}}):this.state.treeData?/*#__PURE__*/React.createElement(AddTreeview,{treeData:this.state.treeData,onInputChange:function onInputChange(e){return _this3.onInputChange(e);},selectedRecord:this.state.selectedRecord||{},itemRender:this.itemRender,onExpandChange:this.onExpandChange,onItemClick:this.onItemClick,onComboChange:this.onComboChange,storageCategoryList:this.props.Login.storageCategoryList||[]}):/*#__PURE__*/React.createElement(React.Fragment,null)}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return SampleStorageLocation;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData,changeStorageCategoryFilter:changeStorageCategoryFilter,getSelectedSampleStorageLocation:getSelectedSampleStorageLocation,openPropertyModal:openPropertyModal,editSampleStorageLocation:editSampleStorageLocation,approveSampleStorageLocation:approveSampleStorageLocation,getSelectedSampleStorageVersion:getSelectedSampleStorageVersion,fetchStorageCategory:fetchStorageCategory,copySampleStorageVersion:copySampleStorageVersion})(injectIntl(SampleStorageLocation));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/SampleStorageLocation.jsx"],"names":["React","Component","connect","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","Form","Button","FontAwesomeIcon","PerfectScrollbar","faTrashAlt","faCopy","faPencilAlt","faSync","faPlus","faThumbsUp","faBoxOpen","faBox","faLocationArrow","faFolderMinus","faFolder","faFolderOpen","faArrowRight","toast","ListMaster","constructOptionList","getControlMap","showEsign","ReadOnlyText","ContentPanel","SlideOutModal","callService","crudMaster","validateEsignCredential","updateStore","getSelectedSampleStorageLocation","filterColumnData","changeStorageCategoryFilter","openPropertyModal","editSampleStorageLocation","approveSampleStorageLocation","getSelectedSampleStorageVersion","fetchStorageCategory","copySampleStorageVersion","DEFAULT_RETURN","ListWrapper","ProductList","ReactTooltip","uuid","TreeEditable","TreeViewEditable","mapTree","removeItems","ConfirmMessage","AddTreeview","AddTreeProperties","Splitter","TransactionListMaster","BreadcrumbComponent","SplitterLayout","StorageCategoryFilter","transactionStatus","SampleStorageLocation","props","onChange","event","setState","panes","newState","addChildNode","e","clickedItem","newData","state","treeData","item","id","items","push","text","intl","formatMessage","expanded","editable","locationlastnode","containerfirstnode","containerlastnode","equalNode","parentItem","parentFound","undefined","deleteNode","editRecord","toggleAction","openModal","updateInfo","typeName","data","selectedRecord","loadTreeProperties","root","operation","closeModal","onInputChange","target","type","name","checked","value","itemRender","stopPropagation","handleChange","handleBlur","isRoot","onItemClick","onExpandChange","forceUpdate","itemRenderView","toggleActionView","selected","setProperties","onItemClickView","treeDataView","map","clearSelected","onExpandChangeView","onSaveClick","Login","onSaveProperties","onSaveSampleStorageLocation","saveType","formRef","inputData","jsondata","postParam","count","info","inputListName","selectedObject","primaryKeyField","userInfo","masterData","selectedSampleStorageLocation","selectedSampleStorageVersion","inputParam","classUrl","methodUrl","displayName","deleteSampleStorageLocation","ncontrolCode","searchRef","confirmDelete","confirmMessage","confirm","paneSizeChange","d","splitChangeWidthPercentage","handlePageChange","skip","take","handleDetailPageChange","onComboChange","comboData","fieldName","caseNo","nfilterStorageCategory","current","openFilter","showFilter","closeFilter","onFilterSubmit","nstoragecategorycode","userinfo","filterStorageCategory","warn","onApproveSampleStorageLocation","locationEnd","storageStart","storageEnd","warning","reloadData","size","scrollable","userRoleControlRights","controlMap","Map","detailSkip","detailTake","settings","selectedItem","createRef","previousProps","isComponentUpdated","filterData","nformcode","Object","values","ncontrolcode","JSON","parse","nStorageCategory","filterStorageCategoryMap","get","length","generateBreadCrumData","innerObj","childObj","parentHeight","height","clientHeight","firstPane","breadCrumbData","selectedStorageCategoryName","addId","has","editId","deleteId","copyId","approveId","filterParam","fetchUrl","fecthInputObject","searchFieldList","mandatoryFields","searchedData","sampleStorageLocation","indexOf","paddingRight","sampleStorageVersion","title","controlname","objectName","hidden","onClick","ssamplestoragelocationname","napprovalstatus","DRAFT","RETIRED","storageCategoryList","masterStatus","error","mapStateToProps"],"mappings":"kyBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,YAA7C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,GAAzB,CAA8BC,SAA9B,CAAyCC,SAAzC,CAAoDC,IAApD,CAA0DC,MAA1D,KAAwE,iBAAxE,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,OAASC,UAAT,CAAqBC,MAArB,CAA6BC,WAA7B,CAA0CC,MAA1C,CAAkDC,MAAlD,CAA0DC,UAA1D,CAAqEC,SAArE,CAAgFC,KAAhF,CAAsFC,eAAtF,CAAuGC,aAAvG,CAAsHC,QAAtH,CAAgIC,YAAhI,CAA8IC,YAA9I,KAAkK,mCAAlK,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oDAAvB,CACA,OAASC,mBAAT,CAA8BC,aAA9B,CAA6CC,SAA7C,KAA8D,+BAA9D,CACA,OAASC,YAAT,CAAuBC,YAAvB,KAA2C,6BAA3C,CACA,MAAOC,CAAAA,aAAP,KAA0B,gDAA1B,CACA,OACIC,WADJ,CACiBC,UADjB,CAC6BC,uBAD7B,CACsDC,WADtD,CACmEC,gCADnE,CACqGC,gBADrG,CACuHC,2BADvH,CAEIC,iBAFJ,CAEuBC,yBAFvB,CAEkDC,4BAFlD,CAEgFC,+BAFhF,CAEiHC,oBAFjH,CAEuIC,wBAFvI,KAGO,eAHP,CAIA,OAASC,cAAT,KAA+B,0BAA/B,CACA,OAASC,WAAT,KAA4B,sCAA5B,CACA,OAASC,WAAT,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CACA,OAASC,IAAT,KAAqB,QAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kDAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,OAASC,OAAT,CAAkBC,WAAlB,KAAqC,gCAArC,CACA,MAAOC,CAAAA,cAAP,KAA2B,0DAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,OAASC,QAAT,KAAyB,8BAAzB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,wCAAlC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,uCAAhC,CACA,MAAOC,CAAAA,cAAP,KAA2B,uBAA3B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,CACA,OAASC,iBAAT,KAAkC,8BAAlC,C,GAEMC,CAAAA,qB,8HAEF,+BAAYC,MAAZ,CAAmB,uDACf,uBAAMA,MAAN,EADe,MA+CnBC,QA/CmB,CA+CR,SAACC,KAAD,CAAW,CAElB,MAAKC,QAAL,CAAc,CAAEC,KAAK,CAAEF,KAAK,CAACG,QAAf,CAAd,EAEH,CAnDkB,OA6GnBC,YA7GmB,CA6GJ,SAACC,CAAD,CAAIC,WAAJ,CAAoB,CAC/B,GAAIC,CAAAA,OAAO,CAAGrB,OAAO,CAAC,MAAKsB,KAAL,CAAWC,QAAZ,CAAsB,OAAtB,CAA+B,SAACC,IAAD,CAAU,CAC1D,GAAIA,IAAI,CAACC,EAAL,GAAYL,WAAW,CAACK,EAA5B,CAAgC,CAC5BD,IAAI,CAACE,KAAL,CAAaF,IAAI,CAACE,KAAL,EAAc,EAA3B,CACAF,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgB,CACZF,EAAE,CAAE5B,IAAI,EADI,CAEZ+B,IAAI,CAAE,MAAKhB,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,WAAN,CAA9B,CAFM,CAGZM,QAAQ,CAAE,IAHE,CAIZC,QAAQ,CAAE,KAJE,CAKZC,gBAAgB,CAAE,KALN,CAMZC,kBAAkB,CAAE,KANR,CAOZC,iBAAiB,CAAE,KAPP,CAAhB,EASH,CACD,MAAOX,CAAAA,IAAP,CACH,CAdoB,CAArB,CAeA,MAAKT,QAAL,CAAc,CAAEQ,QAAQ,CAAEF,OAAZ,CAAd,EACH,CA9HkB,OAgInBe,SAhImB,CAgIP,SAACjB,CAAD,CAAIC,WAAJ,CAAoB,CAC5B,GAAIiB,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CACA,GAAIjB,CAAAA,OAAO,oBAAO,MAAKC,KAAL,CAAWC,QAAlB,CAAX,CACAvB,OAAO,CAAC,MAAKsB,KAAL,CAAWC,QAAZ,CAAsB,OAAtB,CAA+B,SAACC,IAAD,CAAU,CAC5C,GAAIA,IAAI,CAACE,KAAT,CAAgB,CACZ,GAAIY,WAAJ,CAAiB,CACbD,UAAU,CAAGb,IAAb,CACAc,WAAW,CAAG,KAAd,CACH,CACJ,CAED,GAAId,IAAI,CAACC,EAAL,GAAYL,WAAW,CAACK,EAA5B,CAAgC,CAC5Ba,WAAW,CAAG,IAAd,CACH,CAED,MAAOd,CAAAA,IAAP,CACH,CAbM,CAAP,CAcA,GAAIa,UAAU,CAACT,IAAX,GAAoBW,SAAxB,CAAmC,CAC/BlB,OAAO,CAACM,IAAR,CAAa,CACTF,EAAE,CAAE5B,IAAI,EADC,CAET+B,IAAI,CAAE,MAAKhB,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,WAAN,CAA9B,CAFG,CAGTM,QAAQ,CAAE,IAHD,CAITC,QAAQ,CAAE,KAJD,CAKTC,gBAAgB,CAAE,KALT,CAMTC,kBAAkB,CAAE,KANX,CAOTC,iBAAiB,CAAE,KAPV,CAAb,EASA,MAAKpB,QAAL,CAAc,CAAEQ,QAAQ,CAAEF,OAAZ,CAAd,EACH,CAXD,IAWO,CACHA,OAAO,CAAGrB,OAAO,CAAC,MAAKsB,KAAL,CAAWC,QAAZ,CAAsB,OAAtB,CAA+B,SAACC,IAAD,CAAU,CACtD,GAAIA,IAAI,CAACC,EAAL,GAAYY,UAAU,CAACZ,EAA3B,CAA+B,CAC3BD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgB,CACZF,EAAE,CAAE5B,IAAI,EADI,CAEZ+B,IAAI,CAAE,MAAKhB,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,WAAN,CAA9B,CAFM,CAGZM,QAAQ,CAAE,IAHE,CAIZC,QAAQ,CAAE,KAJE,CAKZC,gBAAgB,CAAE,KALN,CAMZC,kBAAkB,CAAE,KANR,CAOZC,iBAAiB,CAAE,KAPP,CAAhB,EASH,CACD,MAAOX,CAAAA,IAAP,CACH,CAbgB,CAAjB,CAcA,MAAKT,QAAL,CAAc,CAAEQ,QAAQ,CAAEF,OAAZ,CAAd,EACH,CACJ,CA9KkB,OA+KnBmB,UA/KmB,CA+KN,SAACpB,WAAD,CAAiB,CAC1B,GAAMC,CAAAA,OAAO,CAAGpB,WAAW,CAAC,MAAKqB,KAAL,CAAWC,QAAZ,CAAsB,OAAtB,CAA+B,SAACC,IAAD,CAAU,CAChE,MAAOA,CAAAA,IAAI,CAACC,EAAL,GAAYL,WAAW,CAACK,EAA/B,CACH,CAF0B,CAA3B,CAGA,MAAKV,QAAL,CAAc,CAAEQ,QAAQ,CAAEF,OAAZ,CAAd,EACH,CApLkB,OAqLnBoB,UArLmB,CAqLN,SAACtB,CAAD,CAAIC,WAAJ,CAAoB,CAC7B,MAAKL,QAAL,CAAc,CAAE2B,YAAY,CAAE,CAAC,MAAKpB,KAAL,CAAWoB,YAA5B,CAAd,EACH,CAvLkB,OAwLnBC,SAxLmB,CAwLP,UAAM,CACd,GAAMC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpD,cADK,CAEfqD,IAAI,CAAE,CACFH,SAAS,CAAE,IADT,CACeI,cAAc,CAAE,EAD/B,CACmCC,kBAAkB,CAAE,KADvD,CAEFzB,QAAQ,CAAE,CACN,CACIK,IAAI,CAAE,MADV,CAEIG,QAAQ,CAAE,IAFd,CAGIC,QAAQ,CAAE,IAHd,CAIIiB,IAAI,CAAE,IAJV,CAKIxB,EAAE,CAAE5B,IAAI,EALZ,CADM,CAFR,CAUCqD,SAAS,CAAE,QAVZ,CAFS,CAAnB,CAeA,MAAKtC,KAAL,CAAW7B,WAAX,CAAuB6D,UAAvB,EACH,CAzMkB,OA0MnBO,UA1MmB,CA0MN,UAAM,CACf,GAAMP,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpD,cADK,CAEfqD,IAAI,CAAE,CACFH,SAAS,CAAE,KADT,CACgBI,cAAc,CAAE,EADhC,CAFS,CAAnB,CAMA,MAAKnC,KAAL,CAAW7B,WAAX,CAAuB6D,UAAvB,EACH,CAlNkB,OAmNnBQ,aAnNmB,CAmNH,SAACtC,KAAD,CAAW,CACvB,GAAMiC,CAAAA,cAAc,CAAG,MAAKzB,KAAL,CAAWyB,cAAX,EAA6B,EAApD,CACA,GAAIjC,KAAK,CAACuC,MAAN,CAAaC,IAAb,GAAsB,UAA1B,CAAsC,CAClCP,cAAc,CAACjC,KAAK,CAACuC,MAAN,CAAaE,IAAd,CAAd,CAAoCzC,KAAK,CAACuC,MAAN,CAAaG,OAAjD,CACH,CAFD,IAEO,CACHT,cAAc,CAACjC,KAAK,CAACuC,MAAN,CAAaE,IAAd,CAAd,CAAoCzC,KAAK,CAACuC,MAAN,CAAaI,KAAjD,CACH,CAED,MAAK1C,QAAL,CAAc,CAAEgC,cAAc,CAAdA,cAAF,CAAd,EACH,CA5NkB,OA8NnBW,UA9NmB,CA8NN,SAAC9C,KAAD,CAAW,CACpB,GAAI,MAAKU,KAAL,CAAWoB,YAAf,CAA6B,CACzB,mBACI,wCACK9B,KAAK,CAACY,IAAN,CAAWQ,QAAX,cACG,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,sBAAtB,eACI,oBAAC,IAAD,CAAM,OAAN,EACI,EAAE,CAAE,UADR,CAEI,IAAI,CAAE,UAFV,CAGI,IAAI,CAAC,MAHT,CAII,SAAS,CAAE,mBAACb,CAAD,QAAOA,CAAAA,CAAC,CAACwC,eAAF,EAAP,EAJf,CAKI,KAAK,CAAE/C,KAAK,CAACY,IAAN,CAAWI,IALtB,CAMI,SAAS,KANb,CAOI,YAAY,CAAC,KAPjB,CAQI,QAAQ,CAAE,kBAACT,CAAD,QAAO,OAAKyC,YAAL,CAAkBzC,CAAlB,CAAqBP,KAAK,CAACY,IAA3B,CAAP,EARd,CASI,MAAM,CAAE,gBAACL,CAAD,QAAO,OAAK0C,UAAL,CAAgB1C,CAAhB,CAAmBP,KAAK,CAACY,IAAzB,CAAP,EATZ,EADJ,CADH,cAeG,gCAAOZ,KAAK,CAACY,IAAN,CAAWI,IAAlB,CAhBR,CADJ,CAqBH,CAtBD,IAsBO,CACH,mBACI,wCACKhB,KAAK,CAACY,IAAN,cACG,0BAAI,SAAS,CAAC,kBAAd,eACI,0BAAI,SAAS,CAAC,uBAAd,EAAuCZ,KAAK,CAACY,IAAN,CAAWI,IAAlD,CADJ,CAEKhB,KAAK,CAACY,IAAN,CAAWQ,QAAX,cACG,qDACI,0BAAI,SAAS,CAAC,kBAAd,eACI,4BACI,SAAS,CAAC,yBADd,CAEI,OAAO,CAAE,iBAACb,CAAD,CAAO,CACZA,CAAC,CAACwC,eAAF,GACA,MAAKvB,SAAL,CAAejB,CAAf,CAAkBP,KAAK,CAACY,IAAxB,EACH,CALL,EADJ,CADJ,cAUI,0BAAI,SAAS,CAAC,kBAAd,eACI,4BACI,SAAS,CAAC,yBADd,CAEI,OAAO,CAAE,iBAACL,CAAD,CAAO,CACZA,CAAC,CAACwC,eAAF,GACA,MAAKzC,YAAL,CAAkBC,CAAlB,CAAqBP,KAAK,CAACY,IAA3B,EACH,CALL,EADJ,CAVJ,cAmBI,0BAAI,SAAS,CAAC,kBAAd,eACI,4BACI,SAAS,CAAC,4BADd,CAEI,OAAO,CAAE,iBAACL,CAAD,CAAO,CACZA,CAAC,CAACwC,eAAF,GACA,MAAKlB,UAAL,CAAgBtB,CAAhB,CAAmBP,KAAK,CAACY,IAAzB,EACH,CALL,EADJ,CAnBJ,CA6BK,CAACZ,KAAK,CAACY,IAAN,CAAWsC,MAAZ,cACG,0BAAI,SAAS,CAAC,kBAAd,eACI,4BACI,SAAS,CAAC,mBADd,CAEI,OAAO,CAAE,iBAAC3C,CAAD,CAAO,CACZA,CAAC,CAACwC,eAAF,GACA,MAAKnB,UAAL,CAAgB5B,KAAK,CAACY,IAAtB,EACH,CALL,EADJ,CADH,CAUG,IAvCR,CADH,CA0CG,IA5CR,CADH,CAgDG,EAjDR,CADJ,CAsDH,CACJ,CA7SkB,OA+SnBuC,WA/SmB,CA+SL,SAACjD,KAAD,CAAW,CACrB,GAAIO,CAAAA,OAAO,CAAGrB,OAAO,CAAC,MAAKsB,KAAL,CAAWC,QAAZ,CAAsB,OAAtB,CAA+B,SAACC,IAAD,CAAU,CAC1D,GAAIA,IAAI,CAACQ,QAAL,GAAkB,IAAtB,CAA4B,CACxBR,IAAI,CAACQ,QAAL,CAAgB,KAAhB,CACH,CAFD,IAEO,IAAIR,IAAI,CAACC,EAAL,GAAYX,KAAK,CAACU,IAAN,CAAWC,EAA3B,CAA+B,CAClCD,IAAI,CAACQ,QAAL,CAAgB,IAAhB,CACH,CACD,MAAOR,CAAAA,IAAP,CACH,CAPoB,CAArB,CAQA,MAAKT,QAAL,CAAc,CAAEQ,QAAQ,CAAEF,OAAZ,CAAd,EACH,CAzTkB,OA2TnB2C,cA3TmB,CA2TF,SAAClD,KAAD,CAAW,CACxBA,KAAK,CAACU,IAAN,CAAWO,QAAX,CAAsB,CAACjB,KAAK,CAACU,IAAN,CAAWO,QAAlC,CACA,MAAKkC,WAAL,GACH,CA9TkB,OA+TnBC,cA/TmB,CA+TF,SAAC9C,WAAD,CAAiB,CAC9B,GAAII,CAAAA,IAAI,CAAGJ,WAAW,CAACI,IAAvB,CACA,GAAI,CAAC,MAAKF,KAAL,CAAW6C,gBAAhB,CAAkC,CAC9B,mBACI,wCACK/C,WAAW,CAACI,IAAZ,cACG,qDACI,4BAAM,SAAS,gDACjBA,IAAI,CAAC4C,QAAL,CAAgB,aAAhB,CAAgC,EADf,sCAEjB5C,IAAI,CAACO,QAAL,CAAgB,aAAhB,CAAgC,eAFf,8BAAf,EAIKP,IAAI,CAACU,kBAAL,cAA0B,oBAAC,eAAD,EAAiB,IAAI,CAAErE,SAAvB,EAA1B,CACG2D,IAAI,CAACS,gBAAL,cAAwB,oBAAC,eAAD,EAAiB,IAAI,CAAElE,eAAvB,EAAxB,CACIyD,IAAI,CAACW,iBAAL,cAAyB,oBAAC,eAAD,EAAiB,IAAI,CAAErE,KAAvB,EAAzB,CACI0D,IAAI,CAACO,QAAL,cAAgB,oBAAC,eAAD,EAAiB,IAAI,CAAE7D,YAAvB,EAAhB,cAA0D,oBAAC,eAAD,EAAiB,IAAI,CAAED,QAAvB,EAP1E,CAQKuD,IAAI,CAACI,IARV,CADJ,CAaSR,WAAW,CAACI,IAAZ,CAAiBQ,QAAjB,cACG,qDAEQ,4BACI,SAAS,CAAC,kCADd,CAEI,OAAO,CAAE,iBAACb,CAAD,QAAO,OAAKkD,aAAL,CAAmBlD,CAAnB,CAAsBC,WAAtB,CAAP,EAFb,EAFR,CADH,CASG,IAtBZ,CADH,CA2BG,EA5BR,CADJ,CAiCH,CACJ,CApWkB,OAqWnBkD,eArWmB,CAqWD,SAACxD,KAAD,CAAW,CACzB,GAAIO,CAAAA,OAAO,CAAGrB,OAAO,CAAC,MAAKsB,KAAL,CAAWiD,YAAZ,CAA0B,OAA1B,CAAmC,SAAC/C,IAAD,CAAU,CAC9D,GAAIA,IAAI,CAACQ,QAAL,GAAkB,IAAtB,CAA4B,CACxBR,IAAI,CAACQ,QAAL,CAAgB,KAAhB,CACH,CAFD,IAEO,IAAIR,IAAI,CAACC,EAAL,GAAYX,KAAK,CAACU,IAAN,CAAWC,EAA3B,CAA+B,CAClCD,IAAI,CAACQ,QAAL,CAAgB,IAAhB,CACH,CACD,MAAOR,CAAAA,IAAP,CACH,CAPoB,CAArB,CAQAH,OAAO,CAACmD,GAAR,CAAY,SAAC1B,IAAD,CAAQ,CAChB,MAAK2B,aAAL,CAAmB3B,IAAnB,CAAyBhC,KAAK,CAACU,IAA/B,EACH,CAFD,EAGA,MAAKT,QAAL,CAAc,CAAEwD,YAAY,CAAElD,OAAhB,CAAd,EACH,CAlXkB,OAgYnBqD,kBAhYmB,CAgYE,SAAC5D,KAAD,CAAW,CAC5BA,KAAK,CAACU,IAAN,CAAWO,QAAX,CAAsB,CAACjB,KAAK,CAACU,IAAN,CAAWO,QAAlC,CACA,MAAKkC,WAAL,GACH,CAnYkB,OAoYnBI,aApYmB,CAoYH,SAACvD,KAAD,CAAQM,WAAR,CAAwB,CACpC,MAAKR,KAAL,CAAWzB,iBAAX,CAA6BiC,WAA7B,EACH,CAtYkB,OAwYnBwC,YAxYmB,CAwYJ,SAACzC,CAAD,CAAIC,WAAJ,CAAoB,CAC/B,GAAIC,CAAAA,OAAO,CAAGrB,OAAO,CAAC,MAAKsB,KAAL,CAAWC,QAAZ,CAAsB,OAAtB,CAA+B,SAACC,IAAD,CAAU,CAC1D,GAAIA,IAAI,CAACC,EAAL,GAAYL,WAAW,CAACK,EAA5B,CAAgC,CAC5BD,IAAI,CAACI,IAAL,CAAYT,CAAC,CAACkC,MAAF,CAASI,KAArB,CACH,CACD,MAAOjC,CAAAA,IAAP,CACH,CALoB,CAArB,CAMA,MAAKT,QAAL,CAAc,CAAEQ,QAAQ,CAAEF,OAAZ,CAAd,EACH,CAhZkB,OAkZnBwC,UAlZmB,CAkZN,SAAC1C,CAAD,CAAIK,IAAJ,CAAa,CACtBA,IAAI,CAACQ,QAAL,CAAgB,KAAhB,CACA,MAAKjB,QAAL,CAAc,CAAE2B,YAAY,CAAE,CAAC,MAAKpB,KAAL,CAAWoB,YAA5B,CAAd,EACH,CArZkB,OAuZnBiC,WAvZmB,CAuZL,UAAM,CAChB,GAAI,MAAK/D,KAAL,CAAWgE,KAAX,CAAiB5B,kBAAjB,GAAwC,IAA5C,CAAkD,CAC9C,MAAK6B,gBAAL,GACH,CAFD,IAEO,CACH,MAAKC,2BAAL,GACH,CACJ,CA7ZkB,OA8ZnBD,gBA9ZmB,CA8ZA,SAACE,QAAD,CAAWC,OAAX,CAAuB,CAEtC,GAAQjC,CAAAA,cAAR,CAA2B,MAAKzB,KAAhC,CAAQyB,cAAR,CAEA,GAAI,MAAKnC,KAAL,CAAWgE,KAAX,CAAiBxD,WAAjB,EAAgC,MAAKR,KAAL,CAAWgE,KAAX,CAAiBxD,WAAjB,GAAiCmB,SAArE,CAAgF,CAC5E,GAAI0C,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,SAAS,CAAG5C,SAAhB,CACA,GAAI6C,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAIrC,cAAc,CAAC,kBAAD,CAAd,GAAuCR,SAAvC,EAAoDQ,cAAc,CAAC,kBAAD,CAAd,GAAuC,IAA/F,CAAqG,CACjGqC,KAAK,CAAGA,KAAK,CAAG,CAAhB,CACH,CACD,GAAIrC,cAAc,CAAC,oBAAD,CAAd,GAAyCR,SAAzC,EAAsDQ,cAAc,CAAC,oBAAD,CAAd,GAAyC,IAAnG,CAAyG,CACrGqC,KAAK,CAAGA,KAAK,CAAG,CAAhB,CACH,CACD,GAAIrC,cAAc,CAAC,mBAAD,CAAd,GAAwCR,SAAxC,EAAqDQ,cAAc,CAAC,mBAAD,CAAd,GAAwC,IAAjG,CAAuG,CACnGqC,KAAK,CAAGA,KAAK,CAAG,CAAhB,CACH,CACD,GAAIA,KAAK,CAAG,CAAZ,CAAe,CACXhH,KAAK,CAACiH,IAAN,CAAW,MAAKzE,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,mBAAN,CAA9B,CAAX,EACH,CAFD,IAEO,CACH,GAAIJ,CAAAA,OAAO,CAAGrB,OAAO,CAAC,MAAKsB,KAAL,CAAWiD,YAAZ,CAA0B,OAA1B,CAAmC,SAAC/C,IAAD,CAAU,CAC9D,GAAIA,IAAI,CAACC,EAAL,GAAY,MAAKb,KAAL,CAAWgE,KAAX,CAAiBxD,WAAjB,CAA6BI,IAA7B,CAAkCC,EAAlD,CAAsD,CAClDD,IAAI,CAACS,gBAAL,CAAwBc,cAAc,CAAC,kBAAD,CAAd,GAAuCR,SAAvC,CAAmDQ,cAAc,CAAC,kBAAD,CAAjE,CAAwF,KAAhH,CACAvB,IAAI,CAACU,kBAAL,CAA0Ba,cAAc,CAAC,oBAAD,CAAd,GAAyCR,SAAzC,CAAqDQ,cAAc,CAAC,oBAAD,CAAnE,CAA4F,KAAtH,CACAvB,IAAI,CAACW,iBAAL,CAAyBY,cAAc,CAAC,mBAAD,CAAd,GAAwCR,SAAxC,CAAoDQ,cAAc,CAAC,mBAAD,CAAlE,CAA0F,KAAnH,CACH,CACD,MAAOvB,CAAAA,IAAP,CACH,CAPoB,CAArB,CASA2D,SAAS,CAAG,CAAEG,aAAa,CAAE,uBAAjB,CAA0CC,cAAc,CAAE,+BAA1D,CAA2FC,eAAe,CAAE,4BAA5G,CAAZ,CAEAN,QAAQ,CAAC,MAAD,CAAR,CAAmB7D,OAAnB,CACA4D,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBa,QAAzC,CACAR,SAAS,CAAC,sBAAD,CAAT,CAAoC,CAAE,UAAW,CAAb,CAApC,CACAA,SAAS,CAAC,uBAAD,CAAT,CAAqC,CAAE,UAAW,CAAb,CAArC,CACAA,SAAS,CAAC,uBAAD,CAAT,CAAmC,4BAAnC,EAAmE,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BC,6BAA5B,CAA0D,4BAA1D,CAAnE,CACAV,SAAS,CAAC,uBAAD,CAAT,CAAmC,4BAAnC,EAAmE,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BC,6BAA5B,CAA0D,4BAA1D,CAAnE,CACAV,SAAS,CAAC,uBAAD,CAAT,CAAmC,sBAAnC,EAA6D,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BC,6BAA5B,CAA0D,sBAA1D,CAA7D,CACAV,SAAS,CAAC,sBAAD,CAAT,CAAkC,2BAAlC,EAAiE,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD,2BAAzD,CAAjE,CACAX,SAAS,CAAC,sBAAD,CAAT,CAAkC,iBAAlC,EAAuD,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD,iBAAzD,CAAvD,CACAX,SAAS,CAAC,sBAAD,CAAT,CAAkC,UAAlC,EAAgDC,QAAhD,CAEA,GAAMW,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE,uBADK,CAEfC,SAAS,CAAE,uBAFI,CAGfC,WAAW,CAAE,MAAKpF,KAAL,CAAWgE,KAAX,CAAiBiB,UAAjB,CAA4BG,WAH1B,CAIff,SAAS,CAAEA,SAJI,CAKf/B,SAAS,CAAE,QALI,CAKM6B,QAAQ,CAARA,QALN,CAKgBC,OAAO,CAAPA,OALhB,CAKyBG,SAAS,CAATA,SALzB,CAAnB,CAOA,GAAMO,CAAAA,UAAU,CAAG,MAAK9E,KAAL,CAAWgE,KAAX,CAAiBc,UAApC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,MAAK9E,KAAL,CAAW/B,UAAX,CAAsBgH,UAAtB,CAAkC,MAAKjF,KAAL,CAAWgE,KAAX,CAAiBc,UAAnD,CAA+D,WAA/D,EACJ;AACH,CACJ,CACJ,CA/dkB,OAgenBZ,2BAhemB,CAgeW,SAACC,QAAD,CAAWC,OAAX,CAAuB,CAEjD,GAAQjC,CAAAA,cAAR,CAA2B,MAAKzB,KAAhC,CAAQyB,cAAR,CAEA;AACA;AAEA,GAAIkC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,SAAS,CAAG5C,SAAhB,CAEA,GAAIlB,CAAAA,OAAO,CAAGrB,OAAO,CAAC,MAAKsB,KAAL,CAAWC,QAAZ,CAAsB,OAAtB,CAA+B,SAACC,IAAD,CAAU,CAC1D,GAAIA,IAAI,CAACQ,QAAL,GAAkB,IAAtB,CAA4B,CACxBR,IAAI,CAACQ,QAAL,CAAgB,KAAhB,CACH,CACD,MAAOR,CAAAA,IAAP,CACH,CALoB,CAArB,CAOA;AAEA0D,QAAQ,CAAC,MAAD,CAAR,CAAmB7D,OAAnB,CACA4D,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBa,QAAzC,CACAR,SAAS,CAAC,uBAAD,CAAT,CAAqC,CAAE,UAAW,CAAb,CAArC,CACAA,SAAS,CAAC,sBAAD,CAAT,CAAoC,CAAE,UAAW,CAAb,CAApC,CAGAA,SAAS,CAAC,uBAAD,CAAT,CAAmC,4BAAnC,EAAmElC,cAAc,CAAC,4BAAD,CAAjF,CACAkC,SAAS,CAAC,uBAAD,CAAT,CAAmC,sBAAnC,EAA6DlC,cAAc,CAAC,sBAAD,CAAd,CAAuCU,KAApG,CACAwB,SAAS,CAAC,sBAAD,CAAT,CAAkC,UAAlC,EAAgDC,QAAhD,CAEA,GAAI,MAAKtE,KAAL,CAAWgE,KAAX,CAAiB1B,SAAjB,GAA+B,QAAnC,CAA6C,CACzC,GAAM2C,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAE,uBADK,CAEfC,SAAS,CAAE,uBAFI,CAGfC,WAAW,CAAE,MAAKpF,KAAL,CAAWgE,KAAX,CAAiBiB,UAAjB,CAA4BG,WAH1B,CAIff,SAAS,CAAEA,SAJI,CAKf/B,SAAS,CAAE,QALI,CAKM6B,QAAQ,CAARA,QALN,CAKgBC,OAAO,CAAPA,OALhB,CAAnB,CAOA,GAAMU,CAAAA,UAAU,CAAG,MAAK9E,KAAL,CAAWgE,KAAX,CAAiBc,UAApC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,MAAK9E,KAAL,CAAW/B,UAAX,CAAsBgH,UAAtB,CAAkC,MAAKjF,KAAL,CAAWgE,KAAX,CAAiBc,UAAnD,CAA+D,WAA/D,EACJ;AACH,CArBD,IAqBO,CACHT,SAAS,CAAC,uBAAD,CAAT,CAAmC,4BAAnC,EAAmE,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BC,6BAA5B,CAA0D,4BAA1D,CAAnE,CACAV,SAAS,CAAC,sBAAD,CAAT,CAAkC,2BAAlC,EAAiE,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD,2BAAzD,CAAjE,CACAX,SAAS,CAAC,sBAAD,CAAT,CAAkC,iBAAlC,EAAuD,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD,iBAAzD,CAAvD,CAEA,GAAMC,CAAAA,WAAU,CAAG,CACfC,QAAQ,CAAE,uBADK,CAEfC,SAAS,CAAE,uBAFI,CAGfC,WAAW,CAAE,MAAKpF,KAAL,CAAWgE,KAAX,CAAiBiB,UAAjB,CAA4BG,WAH1B,CAIff,SAAS,CAAEA,SAJI,CAKf/B,SAAS,CAAE,QALI,CAKM6B,QAAQ,CAARA,QALN,CAKgBC,OAAO,CAAPA,OALhB,CAAnB,CAOA,GAAMU,CAAAA,WAAU,CAAG,MAAK9E,KAAL,CAAWgE,KAAX,CAAiBc,UAApC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,MAAK9E,KAAL,CAAW/B,UAAX,CAAsBgH,WAAtB,CAAkC,MAAKjF,KAAL,CAAWgE,KAAX,CAAiBc,UAAnD,CAA+D,WAA/D,EACJ;AACH,CACJ,CA7iBkB,OA+iBnBO,2BA/iBmB,CA+iBW,SAACC,YAAD,CAAkB,CAC5C,GAAIjB,CAAAA,SAAS,CAAG,EAAhB,CACAA,SAAS,CAAC,sBAAD,CAAT,CAAoC,EAApC,CAEAA,SAAS,CAAC,sBAAD,CAAT,CAAkC,4BAAlC,EAAkE,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD,4BAAzD,CAAlE,CACAX,SAAS,CAAC,sBAAD,CAAT,CAAkC,2BAAlC,EAAiE,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD,2BAAzD,CAAjE,CACAX,SAAS,CAAC,sBAAD,CAAT,CAAkC,iBAAlC,EAAuD,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD,iBAAzD,CAAvD,CAEAX,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBa,QAAzC,CACAR,SAAS,CAAC,sBAAD,CAAT,CAAoC,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD,sBAAzD,CAApC,CAEA,GAAMC,CAAAA,UAAU,CAAG,CACfE,SAAS,CAAE,uBADI,CAEfD,QAAQ,CAAE,uBAFK,CAGfb,SAAS,CAAEA,SAHI,CAIf/B,SAAS,CAAE,QAJI,CAIMiD,SAAS,CAAE,MAAKA,SAJtB,CAAnB,CAMA,GAAMT,CAAAA,UAAU,CAAG,MAAK9E,KAAL,CAAWgE,KAAX,CAAiBc,UAApC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,MAAK9E,KAAL,CAAW/B,UAAX,CAAsBgH,UAAtB,CAAkC,MAAKjF,KAAL,CAAWgE,KAAX,CAAiBc,UAAnD,CAA+D,WAA/D,EACJ;AAEH,CAhlBkB,OAilBnBU,aAjlBmB,CAilBH,SAACF,YAAD,CAAkB,CAC9B,MAAKG,cAAL,CAAoBC,OAApB,CAA4B,eAA5B,CACI,MAAK1F,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,YAAN,CAA9B,CADJ,CAEI,MAAKb,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,uBAAN,CAA9B,CAFJ,CAGI,MAAKb,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,QAAN,CAA9B,CAHJ,CAII,MAAKb,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,YAAN,CAA9B,CAJJ,CAKI,iBAAM,OAAKwE,2BAAL,CAAiCC,YAAjC,CAAN,EALJ,EAMH,CAxlBkB,OA0lBnBK,cA1lBmB,CA0lBF,SAACC,CAAD,CAAO,CACpB,MAAKzF,QAAL,CAAc,CACV0F,0BAA0B,CAAED,CADlB,CAAd,EAGH,CA9lBkB,OA+lBnBE,gBA/lBmB,CA+lBA,SAAAvF,CAAC,CAAI,CACpB,MAAKJ,QAAL,CAAc,CACV4F,IAAI,CAAExF,CAAC,CAACwF,IADE,CAEVC,IAAI,CAAEzF,CAAC,CAACyF,IAFE,CAAd,EAIH,CApmBkB,OAqmBnBC,sBArmBmB,CAqmBM,SAAA1F,CAAC,CAAI,CAC1B,MAAKJ,QAAL,CAAc,CACV4F,IAAI,CAAExF,CAAC,CAACwF,IADE,CAEVC,IAAI,CAAEzF,CAAC,CAACyF,IAFE,CAAd,EAIH,CA1mBkB,OA4mBnBE,aA5mBmB,CA4mBH,SAACC,SAAD,CAAYC,SAAZ,CAAuBC,MAAvB,CAAkC,CAC9C,GAAMlE,CAAAA,cAAc,CAAG,MAAKzB,KAAL,CAAWyB,cAAX,EAA6B,EAApD,CACA,GAAIkE,MAAM,GAAK,CAAf,CAAkB,CAEd,GAAIC,CAAAA,sBAAsB,CAAG,MAAK5F,KAAL,CAAW4F,sBAAX,EAAqC,EAAlE,CACAA,sBAAsB,CAAGH,SAAzB,CACA,MAAKZ,SAAL,CAAegB,OAAf,CAAuB1D,KAAvB,CAA+B,EAA/B,CACA,MAAK1C,QAAL,CAAc,CAAEmG,sBAAsB,CAAtBA,sBAAF,CAAd,EAEH,CAPD,IAOO,CACHnE,cAAc,CAACiE,SAAD,CAAd,CAA4BD,SAA5B,CACA,MAAKhG,QAAL,CAAc,CAAEgC,cAAc,CAAdA,cAAF,CAAd,EACH,CAGJ,CA3nBkB,OAqpBnBqE,UArpBmB,CAqpBN,UAAM,CACf,GAAIC,CAAAA,UAAU,CAAG,CAAC,MAAKzG,KAAL,CAAWgE,KAAX,CAAiByC,UAAnC,CACA,GAAMzE,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpD,cADK,CAEfqD,IAAI,CAAE,CAAEuE,UAAU,CAAVA,UAAF,CAFS,CAAnB,CAIA,MAAKzG,KAAL,CAAW7B,WAAX,CAAuB6D,UAAvB,EACH,CA5pBkB,OA8pBnB0E,WA9pBmB,CA8pBL,UAAM,CAEhB,GAAM1E,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAEpD,cADK,CAEfqD,IAAI,CAAE,CAAEuE,UAAU,CAAE,KAAd,CAFS,CAAnB,CAIA,MAAKzG,KAAL,CAAW7B,WAAX,CAAuB6D,UAAvB,EACH,CArqBkB,OAuqBnB2E,cAvqBmB,CAuqBF,UAAM,CACnB,GAAI,MAAKjG,KAAL,CAAW4F,sBAAX,CAAkCzD,KAAtC,CAA6C,CACzC,GAAIoC,CAAAA,UAAU,CAAG,CACbZ,SAAS,CAAE,CACPuC,oBAAoB,CAAE,MAAKlG,KAAL,CAAW4F,sBAAX,CAAkCzD,KADjD,CAEPgE,QAAQ,CAAE,MAAK7G,KAAL,CAAWgE,KAAX,CAAiBa,QAFpB,CAGPyB,sBAAsB,CAAE,MAAK5F,KAAL,CAAW4F,sBAH5B,CADE,CAAjB,CAQA,MAAKtG,KAAL,CAAW1B,2BAAX,CAAuC2G,UAAvC,CAAmD,MAAKjF,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BgC,qBAA/E,EACH,CAVD,IAUO,CACHtJ,KAAK,CAACuJ,IAAN,CAAW,MAAK/G,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,iCAAN,CAA9B,CAAX,EACH,CACJ,CArrBkB,OAwrBnBmG,8BAxrBmB,CAwrBc,SAAC1B,YAAD,CAAkB,CAE/C,GAAI2B,CAAAA,WAAW,CAAG,KAAlB,CACA,GAAIC,CAAAA,YAAY,CAAG,KAAnB,CACA,GAAIC,CAAAA,UAAU,CAAG,KAAjB,CACA/H,OAAO,CAAC,MAAKsB,KAAL,CAAWiD,YAAZ,CAA0B,OAA1B,CAAmC,SAAC/C,IAAD,CAAU,CAChD,GAAIA,IAAI,CAACS,gBAAL,GAA0B,IAA9B,CAAoC,CAChC4F,WAAW,CAAG,IAAd,CACH,CACD,GAAIrG,IAAI,CAACU,kBAAL,GAA4B,IAAhC,CAAsC,CAClC4F,YAAY,CAAG,IAAf,CACH,CACD,GAAItG,IAAI,CAACW,iBAAL,GAA2B,IAA/B,CAAqC,CACjC4F,UAAU,CAAG,IAAb,CACH,CACD,MAAO,KAAP,CACH,CAXM,CAAP,CAYA,GAAIF,WAAW,GAAK,KAApB,CAA2B,CACvBzJ,KAAK,CAAC4J,OAAN,CAAc,MAAKpH,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,6BAAN,CAA9B,CAAd,EACA,OACH,CACD,GAAIqG,YAAY,GAAK,KAArB,CAA4B,CACxB1J,KAAK,CAAC4J,OAAN,CAAc,MAAKpH,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,8BAAN,CAA9B,CAAd,EACA,OACH,CACD,GAAIsG,UAAU,GAAK,KAAnB,CAA0B,CACtB3J,KAAK,CAAC4J,OAAN,CAAc,MAAKpH,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,4BAAN,CAA9B,CAAd,EACA,OACH,CACD,GAAMiE,CAAAA,UAAU,CAAG,MAAK9E,KAAL,CAAWgE,KAAX,CAAiBc,UAApC,CAEA,GAAMG,CAAAA,UAAU,CAAG,CACfZ,SAAS,CAAE,CAAE,WAAY,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBa,QAA/B,CADI,CAEfK,QAAQ,CAAE,uBAFK,CAGfC,SAAS,CAAE,uBAHI,CAIfC,WAAW,CAAE,2BAJE,CAKfP,QAAQ,CAAE,MAAK7E,KAAL,CAAWgE,KAAX,CAAiBa,QALZ,CAAnB,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK7E,KAAL,CAAWvB,4BAAX,CAAwC,MAAKuB,KAAL,CAAWgE,KAAX,CAAiBa,QAAzD,CAAmE,MAAK7E,KAAL,CAAWgE,KAAX,CAAiBc,UAApF,EACA;AACH,CA5uBkB,OA6uBnBuC,UA7uBmB,CA6uBN,UAAM,CACf,MAAK9B,SAAL,CAAegB,OAAf,CAAuB1D,KAAvB,CAA+B,EAA/B,CACA,GAAMoC,CAAAA,UAAU,CAAG,CACfZ,SAAS,CAAE,CAAE,WAAY,MAAKrE,KAAL,CAAWgE,KAAX,CAAiBa,QAA/B,CADI,CAEfK,QAAQ,CAAE,uBAFK,CAGfC,SAAS,CAAE,uBAHI,CAIfC,WAAW,CAAE,2BAJE,CAKfP,QAAQ,CAAE,MAAK7E,KAAL,CAAWgE,KAAX,CAAiBa,QALZ,CAAnB,CAQA,MAAK7E,KAAL,CAAWhC,WAAX,CAAuBiH,UAAvB,EACH,CAxvBkB,CAGf,MAAKvE,KAAL,CAAa,CACToB,YAAY,CAAE,KADL,CAET6B,YAAY,CAAEhC,SAFL,CAGT4B,gBAAgB,CAAE,KAHT,CAIT5C,QAAQ,CAAE,CACN,CACIK,IAAI,CAAE,MADV,CAEIG,QAAQ,CAAE,IAFd,CAGIC,QAAQ,CAAE,IAHd,CAIIiB,IAAI,CAAE,IAJV,CAKIxB,EAAE,CAAE5B,IAAI,EALZ,CADM,CAJD,CAYTmB,KAAK,CAAE,CAAC,CACJkH,IAAI,CAAE,KADF,CAEJC,UAAU,CAAE,KAFR,CAAD,CAZE,CAgBTpF,cAAc,CAAE,EAhBP,CAiBTqF,qBAAqB,CAAE,EAjBd,CAkBTC,UAAU,CAAE,GAAIC,CAAAA,GAAJ,EAlBH,CAmBT3B,IAAI,CAAE,CAnBG,CAoBT4B,UAAU,CAAE,CApBH,CAqBTC,UAAU,CAAE,EArBH,CAsBT5B,IAAI,CAAE,MAAKhG,KAAL,CAAWgE,KAAX,CAAiB6D,QAAjB,CACF,MAAK7H,KAAL,CAAWgE,KAAX,CAAiB6D,QAAjB,CAA0B,CAA1B,CADE,CAC6B,EAvB1B,CAwBThC,0BAA0B,CAAE,EAxBnB,CAyBTiC,YAAY,CAACnG,SAzBJ,CAAb,CA4BA,MAAK4D,SAAL,CAAiB3J,KAAK,CAACmM,SAAN,EAAjB,CACA,MAAKtC,cAAL,CAAsB,GAAInG,CAAAA,cAAJ,EAAtB,CAhCe,aAiClB,C,oEAmBD,4BAAmB0I,aAAnB,CAAkC,CAE9B,GAAIC,CAAAA,kBAAkB,CAAG,KAAzB,CACA,GAAMC,CAAAA,UAAN,CAAqB,KAAKxH,KAA1B,CAAMwH,UAAN,CACA,GAAI/F,CAAAA,cAAc,CAAG,KAAKzB,KAAL,CAAWyB,cAAX,EAA6B,EAAlD,CACA,GAAI,KAAKnC,KAAL,CAAWgE,KAAX,CAAiBa,QAAjB,CAA0BsD,SAA1B,GAAwCH,aAAa,CAAChE,KAAd,CAAoBa,QAApB,CAA6BsD,SAAzE,CAAoF,CAChF,GAAMX,CAAAA,qBAAqB,CAAG,EAA9B,CACA,GAAI,KAAKxH,KAAL,CAAWgE,KAAX,CAAiBwD,qBAArB,CAA4C,CACxC,KAAKxH,KAAL,CAAWgE,KAAX,CAAiBwD,qBAAjB,CAAuC,KAAKxH,KAAL,CAAWgE,KAAX,CAAiBa,QAAjB,CAA0BsD,SAAjE,GAA+EC,MAAM,CAACC,MAAP,CAAc,KAAKrI,KAAL,CAAWgE,KAAX,CAAiBwD,qBAAjB,CAAuC,KAAKxH,KAAL,CAAWgE,KAAX,CAAiBa,QAAjB,CAA0BsD,SAAjE,CAAd,EAA2FvE,GAA3F,CAA+F,SAAAhD,IAAI,QAC9K4G,CAAAA,qBAAqB,CAACzG,IAAtB,CAA2BH,IAAI,CAAC0H,YAAhC,CAD8K,EAAnG,CAA/E,CAEH,CACD,GAAMb,CAAAA,UAAU,CAAG9J,aAAa,CAAC,KAAKqC,KAAL,CAAWgE,KAAX,CAAiBwD,qBAAlB,CAAyC,KAAKxH,KAAL,CAAWgE,KAAX,CAAiBa,QAAjB,CAA0BsD,SAAnE,CAAhC,CACA,KAAKhI,QAAL,CAAc,CAAEsH,UAAU,CAAVA,UAAF,CAAcD,qBAAqB,CAArBA,qBAAd,CAAd,EACH,CAED,GAAI,KAAKxH,KAAL,CAAWgE,KAAX,CAAiBrD,QAAjB,GAA8BqH,aAAa,CAAChE,KAAd,CAAoBrD,QAAtD,CAAgE,CAC5D,KAAKR,QAAL,CAAc,CACVQ,QAAQ,CAAE,KAAKX,KAAL,CAAWgE,KAAX,CAAiBrD,QADjB,CAAd,EAGH,CACD,GAAI,KAAKX,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,GAA6DgD,aAAa,CAAChE,KAAd,CAAoBc,UAApB,CAA+BE,4BAAhG,CAA8H,CAE1H,GAAI,KAAKhF,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,EAA4D,KAAKhF,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,GAA6DrD,SAA7H,CAAwI,CACpI,KAAKxB,QAAL,CAAc,CACVwD,YAAY,CACR4E,IAAI,CAACC,KAAL,CAAW,KAAKxI,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD,UAAzD,EAAqEnC,KAAhF,EAAuFX,IAFjF,CAAd,EAIH,CACJ,CACD,GAAIoE,CAAAA,sBAAsB,CAAG,KAAK5F,KAAL,CAAW+H,gBAAX,EAA+B,EAA5D,CACA,GAAI3B,CAAAA,qBAAqB,CAAG,KAAKpG,KAAL,CAAWoG,qBAAX,EAAoC,EAAhE,CAEA,GAAI,KAAK9G,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BgC,qBAA5B,GAAsDkB,aAAa,CAAChE,KAAd,CAAoBc,UAApB,CAA+BgC,qBAAzF,CAAgH,CAC5G,GAAM4B,CAAAA,wBAAwB,CAAGhL,mBAAmB,CAAC,KAAKsC,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BgC,qBAA5B,EAAqD,EAAtD,CAA0D,sBAA1D,CAChD,sBADgD,CACxB,sBADwB,CACA,WADA,CACa,KADb,CAApD,CAEAA,qBAAqB,CAAG4B,wBAAwB,CAACC,GAAzB,CAA6B,YAA7B,CAAxB,CACA,GAAI7B,qBAAqB,EAAIA,qBAAqB,CAAC8B,MAAtB,CAA+B,CAA5D,CAA+D,CAC3DtC,sBAAsB,CAAGQ,qBAAqB,CAAC,CAAD,CAA9C,CACH,CACDmB,kBAAkB,CAAG,IAArB,CACH,CARD,IAQO,IAAI,KAAKjI,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BwB,sBAA5B,GAAuD0B,aAAa,CAAChE,KAAd,CAAoBc,UAApB,CAA+BwB,sBAA1F,CAAkH,CACrHA,sBAAsB,CAAG,KAAKtG,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BwB,sBAArD,CACA2B,kBAAkB,CAAG,IAArB,CACH,CACD,GAAIA,kBAAJ,CAAwB,CACpB,KAAK9H,QAAL,CAAc,CAAEmG,sBAAsB,CAAtBA,sBAAF,CAA0BnE,cAAc,CAAdA,cAA1B,CAA0C2E,qBAAqB,CAArBA,qBAA1C,CAAd,EACH,CACD,GAAI,KAAK9G,KAAL,CAAWgE,KAAX,CAAiB7B,cAAjB,GAAoC6F,aAAa,CAAChE,KAAd,CAAoB7B,cAA5D,CAA4E,CACxE,KAAKhC,QAAL,CAAc,CACVgC,cAAc,CAAE,KAAKnC,KAAL,CAAWgE,KAAX,CAAiB7B,cADvB,CAAd,EAGH,CACD,GAAI,KAAKnC,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,GAAgCkD,aAAa,CAAChE,KAAd,CAAoBc,UAAxD,CAAoE,CAChE,GAAMoD,CAAAA,WAAU,CAAG,KAAKW,qBAAL,EAAnB,CACA,KAAK1I,QAAL,CAAc,CAAE+H,UAAU,CAAVA,WAAF,CAAd,EACH,CACJ,C,6BAuQD,uBAAcY,QAAd,CAAyBhB,YAAzB,CAAsC,iBAClC,GAAGgB,QAAQ,CAACjI,EAAT,EAAeiH,YAAY,CAACjH,EAA/B,CAAkC,CAC9BiI,QAAQ,CAACtF,QAAT,CAAoB,IAApB,CACH,CAFD,IAEK,CACDsF,QAAQ,CAACtF,QAAT,CAAoB,KAApB,CACH,CACD,GAAGsF,QAAQ,CAAChI,KAAT,EAAkBgI,QAAQ,CAAChI,KAAT,CAAe8H,MAAf,CAAwB,CAA7C,CAA+C,CAC3CE,QAAQ,CAAChI,KAAT,CAAe8C,GAAf,CAAmB,SAACmF,QAAD,CAAY,CAC3B,MAAI,CAAClF,aAAL,CAAmBkF,QAAnB,CAA8BjB,YAA9B,EACH,CAFD,EAGH,CACD,MAAOgB,CAAAA,QAAP,CACH,C,iCA6PD,4BAAoB,CAChB,GAAI,KAAKE,YAAT,CAAuB,CACnB,GAAMC,CAAAA,MAAM,CAAG,KAAKD,YAAL,CAAkBE,YAAjC,CACA,KAAK/I,QAAL,CAAc,CACVgJ,SAAS,CAAEF,MAAM,CAAG,EADV,CAEVD,YAAY,CAAEC,MAAM,CAAG,EAFb,CAAd,EAIH,CACJ,C,qCACD,gCAAwB,CACpB,GAAMG,CAAAA,cAAc,CAAG,EAAvB,CACA,GAAI,KAAKpJ,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,EAA+B,KAAK9E,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BgC,qBAA/D,CAAsF,CAElFsC,cAAc,CAACrI,IAAf,CACI,CACI,QAAS,qBADb,CAEI,QAAS,KAAKf,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BuE,2BAA5B,EAA2D,KAAKrJ,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BuE,2BAA5B,GAA4D,IAAvH,CAA8H,KAAKrJ,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BuE,2BAA1J,CAAwL,IACjM;AACA;AAJJ,CADJ,EAQH,CACD,MAAOD,CAAAA,cAAP,CACH,C,sBAsGD,iBAAS,iBAEL,GAAME,CAAAA,KAAK,CAAG,KAAK5I,KAAL,CAAW+G,UAAX,CAAsB8B,GAAtB,CAA0B,2BAA1B,GAA0D,KAAK7I,KAAL,CAAW+G,UAAX,CAAsBkB,GAAtB,CAA0B,2BAA1B,EAAuDL,YAA/H,CACA,GAAMkB,CAAAA,MAAM,CAAG,KAAK9I,KAAL,CAAW+G,UAAX,CAAsB8B,GAAtB,CAA0B,4BAA1B,GAA2D,KAAK7I,KAAL,CAAW+G,UAAX,CAAsBkB,GAAtB,CAA0B,4BAA1B,EAAwDL,YAAlI,CACA,GAAMmB,CAAAA,QAAQ,CAAG,KAAK/I,KAAL,CAAW+G,UAAX,CAAsB8B,GAAtB,CAA0B,8BAA1B,GAA6D,KAAK7I,KAAL,CAAW+G,UAAX,CAAsBkB,GAAtB,CAA0B,8BAA1B,EAA0DL,YAAxI,CACA,GAAMoB,CAAAA,MAAM,CAAG,KAAKhJ,KAAL,CAAW+G,UAAX,CAAsB8B,GAAtB,CAA0B,4BAA1B,GAA2D,KAAK7I,KAAL,CAAW+G,UAAX,CAAsBkB,GAAtB,CAA0B,4BAA1B,EAAwDL,YAAlI,CACA,GAAMqB,CAAAA,SAAS,CAAG,KAAKjJ,KAAL,CAAW+G,UAAX,CAAsB8B,GAAtB,CAA0B,+BAA1B,GAA8D,KAAK7I,KAAL,CAAW+G,UAAX,CAAsBkB,GAAtB,CAA0B,+BAA1B,EAA2DL,YAA3I,CAGA,GAAMsB,CAAAA,WAAW,CAAG,CAChBlF,aAAa,CAAE,uBADC,CACwBC,cAAc,CAAE,+BADxC,CACyEC,eAAe,CAAE,4BAD1F,CAEhBiF,QAAQ,CAAE,wDAFM,CAGhBC,gBAAgB,CAAE,CAAEjD,QAAQ,CAAE,KAAK7G,KAAL,CAAWgE,KAAX,CAAiBa,QAA7B,CAHF,CAIhBC,UAAU,CAAE,KAAK9E,KAAL,CAAWgE,KAAX,CAAiBc,UAJb,CAKhBiF,eAAe,CAAE,CAAC,4BAAD,CALD,CAApB,CAOA,GAAMC,CAAAA,eAAe,CAAG,CACpB,CAAE,UAAW,qBAAb,CAAoC,YAAa,sBAAjD,CAAyE,iBAAkB,YAA3F,CAAyG,cAAe,WAAxH,CADoB,CAEpB,CAAE,UAAW,+BAAb,CAA8C,YAAa,4BAA3D,CAAyF,iBAAkB,WAA3G,CAAwH,cAAe,SAAvI,CAFoB,CAAxB,CAIA,GAAMZ,CAAAA,cAAc,CAAG,KAAK1I,KAAL,CAAWwH,UAAX,EAAyB,EAAhD,CAEA,GAAMzC,CAAAA,cAAc,CAAG,GAAInG,CAAAA,cAAJ,EAAvB,CACA,mBACI,qDACI,oBAAC,WAAD,EAAa,SAAS,CAAC,iDAAvB,EACK8J,cAAc,CAACR,MAAf,CAAwB,CAAxB,cACG,oBAAC,mBAAD,EAAqB,cAAc,CAAEQ,cAArC,EADH,CAEK,EAHV,cAII,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,SAAS,CAAC,oBAAvB,eAGI,oBAAC,cAAD,EAAgB,WAAW,CAAC,MAA5B,CAAmC,UAAU,CAAE,IAA/C,CAAqD,YAAY,CAAE,CAAnE,CAAsE,yBAAyB,CAAE,KAAKzD,cAAtG,CAAsH,oBAAoB,CAAE,EAA5I,CAAgJ,cAAc,CAAE,EAAhK,CAAoK,gBAAgB,CAAE,EAAtL,eAEI,oBAAC,qBAAD,EACI,UAAU,CAAE,KAAKjF,KAAL,CAAWsI,YAD3B,CAEI,eAAe,CAAE,KAFrB,CAGI,UAAU,CAAE,KAAKhJ,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BmF,YAA5B,EAA4C,KAAKjK,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BoF,qBAAxE,EAAiG,EAHjH,CAII,cAAc,CAAE,CAAC,KAAKlK,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BC,6BAA7B,CAJpB,CAKI,eAAe,CAAC,4BALpB,CAMI,eAAe,CAAE,yBAAC+C,YAAD,QACb,CAAA,MAAI,CAAC9H,KAAL,CAAW5B,gCAAX,CACI0J,YADJ,CAEI,MAAI,CAAC9H,KAAL,CAAWgE,KAAX,CAAiBa,QAFrB,CAE+B,MAAI,CAAC7E,KAAL,CAAWgE,KAAX,CAAiBc,UAFhD,CADa,EANrB,CAWI,UAAU,CAAE,CACRD,QAAQ,CAAE,KAAK7E,KAAL,CAAWgE,KAAX,CAAiBa,QADnB,CAERC,UAAU,CAAE,KAAK9E,KAAL,CAAWgE,KAAX,CAAiBc,UAFrB,CAXhB,CAeI,SAAS,CAAE,4BAff,CAgBI,gBAAgB,CAAC,+BAhBrB,CAiBI,UAAU,CAAC,gBAjBf,CAkBI,QAAQ,CAAC,2BAlBb,CAmBI,gBAAgB,CAAE,KAAK9E,KAAL,CAAW3B,gBAnBjC,CAoBI,cAAc,CAAC,cApBnB,CAqBI,SAAS,CAAE,KAAKkH,SArBpB,CAsBI,WAAW,CAAEqE,WAtBjB,CAuBI,UAAU,CAAE,KAAK5J,KAAL,CAAWgE,KAAX,CAAiByC,UAvBjC,CAwBI,UAAU,CAAE,KAAKD,UAxBrB,CAyBI,WAAW,CAAE,KAAKE,WAzBtB,CA0BI,cAAc,CAAE,KAAKC,cA1BzB,CA2BI,UAAU,CAAE,IA3BhB,CA4BI,UAAU,CAAE,KA5BhB,CA6BI,gBAAgB,CAAE,KAAKb,gBA7B3B,CA8BI,IAAI,CAAE,KAAKpF,KAAL,CAAWqF,IA9BrB,CA+BI,IAAI,CAAE,KAAKrF,KAAL,CAAWsF,IA/BrB,CAgCI,aAAa,cACT,oBAAC,WAAD,EAAa,SAAS,CAAC,qCAAvB,eACI,oBAAC,MAAD,EAAQ,SAAS,CAAC,4CAAlB,CAA+D,IAAI,CAAC,QAApE,CACI,WAAU,KAAKhG,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,SAAN,CAA9B,CADd,CAEI,WAAS,qBAFb,CAGI,MAAM,CAAE,KAAKH,KAAL,CAAW8G,qBAAX,CAAiC2C,OAAjC,CAAyCb,KAAzC,IAAoD,CAAC,CAHjE,CAII,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACtJ,KAAL,CAAWrB,oBAAX,CAAgC,CAAEkG,QAAQ,CAAE,MAAI,CAAC7E,KAAL,CAAWgE,KAAX,CAAiBa,QAA7B,CAAuChE,EAAE,CAAE5B,IAAI,EAA/C,CAAmDqH,sBAAsB,CAAE,MAAI,CAAC5F,KAAL,CAAW4F,sBAAtF,CAAhC,CAAN,EAJb,eAKI,oBAAC,eAAD,EAAiB,IAAI,CAAEvJ,MAAvB,CAA+B,KAAK,CAAE,KAAKiD,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,SAAN,CAA9B,CAAtC,EALJ,CADJ,cAQI,oBAAC,MAAD,EAAQ,SAAS,CAAC,kCAAlB,CAAqD,OAAO,CAAC,MAA7D,CACI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACwG,UAAL,EAAN,EADb,CAEI,WAAS,qBAFb,CAGI,WAAU,KAAKrH,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,aAAN,CAA9B,CAHd,eAII,oBAAC,eAAD,EAAiB,IAAI,CAAE/D,MAAvB,CAA+B,KAAK,CAAE,CAAE,QAAS,eAAX,CAAtC,EAJJ,CARJ,CAjCR,CAiDI,eAAe,CAAE,CACb,CACI,8BACI,oBAAC,qBAAD,EACI,qBAAqB,CAAE,KAAK4D,KAAL,CAAWoG,qBAAX,EAAoC,EAD/D,CAEI,sBAAsB,CAAE,KAAKpG,KAAL,CAAW4F,sBAAX,EAAqC,EAFjE,CAGI,aAAa,CAAE,KAAKJ,aAHxB,EAFR,CADa,CAjDrB,EAFJ,cAiEI,oBAAC,cAAD,EAAgB,QAAQ,KAAxB,CAAyB,WAAW,CAAC,MAArC,CAA4C,UAAU,CAAE,IAAxD,CAA8D,YAAY,CAAE,CAAG;AAA/E,CACI,eAAe,CAAC,mBADpB,eAEI,oBAAC,gBAAD,mBAEI,2BAAK,SAAS,CAAC,YAAf,eACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,KAAK,CAAE,CAAEkE,YAAY,CAAE,GAAhB,CAAnB,eAEI,oBAAC,qBAAD,EACI,UAAU,CAAE,KAAKpK,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BuF,oBAA5B,EAAoD,EADpE,CAEI,eAAe,CAAE,KAFrB,CAGI,cAAc,CAAE,CAAC,KAAKrK,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA7B,CAHpB,CAII,eAAe,CAAC,2BAJpB,CAKI,eAAe,CAAE,yBAAC8C,YAAD,QACb,CAAA,MAAI,CAAC9H,KAAL,CAAWtB,+BAAX,CACIoJ,YADJ,CACkB,MAAI,CAAC9H,KAAL,CAAWgE,KAAX,CAAiBa,QADnC,CAEI,MAAI,CAAC7E,KAAL,CAAWgE,KAAX,CAAiBc,UAFrB,CADa,EALrB,CAUI,UAAU,CAAE,CACRD,QAAQ,CAAE,KAAK7E,KAAL,CAAWgE,KAAX,CAAiBa,QADnB,CAERC,UAAU,CAAE,KAAK9E,KAAL,CAAWgE,KAAX,CAAiBc,UAFrB,CAVhB,CAcI,SAAS,CAAE,YAdf,CAeI,cAAc,CAAE,KAAK9E,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,aAAN,CAA9B,CAfpB,CAgBI,gBAAgB,CAAC,8BAhBrB,CAiBI,UAAU,CAAC,SAjBf,CAkBI,QAAQ,CAAC,0BAlBb,CAmBI,UAAU,CAAE,IAnBhB,CAoBI,cAAc,CAAE,KApBpB,CAqBI,UAAU,CAAE,KArBhB,CAsBI,SAAS,CAAE,EAtBf,CAuBI,IAAI,CAAE,KAAKH,KAAL,CAAWiH,UAvBrB,CAwBI,IAAI,CAAE,KAAKjH,KAAL,CAAWkH,UAxBrB,CAyBI,UAAU,CAAE,IAzBhB,CA0BI,gBAAgB,CAAE,KAAK3B,sBA1B3B,CA2BI,cAAc,CAAE,KAAKvF,KAAL,CAAWmF,0BAAX,EAAyC,KAAKnF,KAAL,CAAWmF,0BAAX,CAAwC,EAAjF,CAAsF,YAAtF,CAAqG,KAAKnF,KAAL,CAAWmF,0BAAX,CAAwC,EAAxC,CAA6C,UAA7C,CAA0D,EA3BnL,CA4BI,WAAW,CACP,CACI,CACIyE,KAAK,CAAE,KAAKtK,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,UAAN,CAA9B,CADX,CAEI0J,WAAW,CAAE,aAFjB,CAGIC,UAAU,CAAE,cAHhB,CAIIC,MAAM,CAAE,KAAK/J,KAAL,CAAW8G,qBAAX,CAAiC2C,OAAjC,CAAyCX,MAAzC,IAAqD,CAAC,CAJlE,CAKIkB,OAAO,CAAE,iBAACnK,CAAD,QAAO,CAAA,MAAI,CAACP,KAAL,CAAWxB,yBAAX,CAAqC,MAAI,CAACwB,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAAjE,CAA+F,MAAI,CAAChF,KAAL,CAAWgE,KAAX,CAAiBa,QAAhH,CAA0H,MAAI,CAAC7E,KAAL,CAAWgE,KAAX,CAAiBc,UAA3I,CAAP,EALb,CADJ,CAQI,CACIwF,KAAK,CAAE,KAAKtK,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,YAAN,CAA9B,CADX,CAEI0J,WAAW,CAAE,YAFjB,CAGIC,UAAU,CAAE,gBAHhB,CAIIC,MAAM,CAAE,KAAK/J,KAAL,CAAW8G,qBAAX,CAAiC2C,OAAjC,CAAyCV,QAAzC,IAAuD,CAAC,CAJpE,CAKIiB,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAClF,aAAL,CAAmBiE,QAAnB,CAAN,EALb,CARJ,CA7BR,EAFJ,CADJ,cAoDI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eAEI,oBAAC,WAAD,EAAa,SAAS,CAAC,gCAAvB,EACK,KAAKzJ,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BoF,qBAA5B,EAAqD,KAAKlK,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BoF,qBAA5B,CAAkDtB,MAAlD,CAA2D,CAAhH,EAAqH,KAAK5I,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BC,6BAAjJ,cACG,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,eACI,oBAAC,IAAD,CAAM,MAAN,mBACI,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,oBAAtB,EAA4C,KAAK/E,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BC,6BAA5B,CAA0D4F,0BAAtG,CADJ,cAEI,oBAAC,IAAD,CAAM,QAAN,mBACI,2BAAK,SAAS,CAAC,yBAAf,eACI,0BAAI,SAAS,CAAC,+BAAd,eACI,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,wBAApB,EACK,KAAK3K,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD4F,eAAzD,GAA6E9K,iBAAiB,CAAC+K,KAA/F,cAEG,4BAAM,SAAS,kDAAf,eACI,oBAAC,gBAAD,EAAkB,EAAE,CAAE,WAAtB,CAAmC,cAAc,CAAC,OAAlD,EADJ,CAFH,CAMG,KAAK7K,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD4F,eAAzD,GAA6E9K,iBAAiB,CAACgL,OAA/F,cAEI,4BAAM,SAAS,8CAAf,eACI,oBAAC,gBAAD,EAAkB,EAAE,CAAE,aAAtB,CAAqC,cAAc,CAAC,SAApD,EADJ,CAFJ,cAMI,4BAAM,SAAS,+CAAf,eACI,oBAAC,gBAAD,EAAkB,EAAE,CAAE,cAAtB,CAAsC,cAAc,CAAC,UAArD,EADJ,CAbZ,CADJ,CADJ,cAqBI,2BAAK,SAAS,CAAC,UAAf,EACK,KAAK9K,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAA5B,CAAyD4F,eAAzD,GAA6E9K,iBAAiB,CAAC+K,KAA/F,cACG,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,mCAApB,CAAwD,IAAI,CAAC,GAA7D,CACI,MAAM,CAAE,KAAKnK,KAAL,CAAW8G,qBAAX,CAAiC2C,OAAjC,CAAyCX,MAAzC,IAAqD,CAAC,CADlE,CAEI,WAAS,mBAFb,CAGI,WAAU,KAAKxJ,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,UAAN,CAA9B,CAHd,CAII,OAAO,CAAE,iBAACN,CAAD,QAAO,CAAA,MAAI,CAACP,KAAL,CAAWxB,yBAAX,CAAqC,MAAI,CAACwB,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAAjE,CAA+F,MAAI,CAAChF,KAAL,CAAWgE,KAAX,CAAiBa,QAAhH,CAA0H,MAAI,CAAC7E,KAAL,CAAWgE,KAAX,CAAiBc,UAA3I,CAAP,EAJb,eAMI,oBAAC,eAAD,EAAiB,IAAI,CAAEjI,WAAvB,EANJ,CADH,cAWG,oBAAC,GAAD,CAAK,IAAL,EAAU,SAAS,CAAC,mCAApB,CAAwD,IAAI,CAAC,GAA7D,CACI,MAAM,CAAE,KAAK6D,KAAL,CAAW8G,qBAAX,CAAiC2C,OAAjC,CAAyCT,MAAzC,IAAqD,CAAC,CADlE,CAEI,WAAS,mBAFb,CAGI,WAAU,KAAK1J,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,UAAN,CAA9B,CAHd,CAII,OAAO,CAAE,iBAACN,CAAD,QAAO,CAAA,MAAI,CAACP,KAAL,CAAWpB,wBAAX,CAAoC,MAAI,CAACoB,KAAL,CAAWgE,KAAX,CAAiBc,UAAjB,CAA4BE,4BAAhE,CAA8F,MAAI,CAAChF,KAAL,CAAWgE,KAAX,CAAiBa,QAA/G,CAAyH,MAAI,CAAC7E,KAAL,CAAWgE,KAAX,CAAiBc,UAA1I,CAAP,EAJb,eAMI,oBAAC,eAAD,EAAiB,IAAI,CAAElI,MAAvB,EANJ,CAZR,cAsBI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,IAAf,CAAoB,SAAS,CAAC,kCAA9B,CACI,MAAM,CAAE,KAAK8D,KAAL,CAAW8G,qBAAX,CAAiC2C,OAAjC,CAAyCV,QAAzC,IAAuD,CAAC,CADpE,CAEI,WAAS,mBAFb,CAGI,WAAU,KAAKzJ,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,YAAN,CAA9B,CAHd,CAII,OAAO,CAAE,yBAAM,CAAA,MAAI,CAAC2E,aAAL,CAAmBiE,QAAnB,CAAN,EAJb,eAMI,oBAAC,eAAD,EAAiB,IAAI,CAAE9M,UAAvB,EANJ,CAtBJ,cA8BI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,IAAf,CAAoB,SAAS,CAAC,kCAA9B,CACI,MAAM,CAAE,KAAK+D,KAAL,CAAW8G,qBAAX,CAAiC2C,OAAjC,CAAyCR,SAAzC,IAAwD,CAAC,CADrE,CAEI,WAAS,mBAFb,CAGI,WAAU,KAAK3J,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,aAAN,CAA9B,CAHd,CAII,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACmG,8BAAL,CAAoC2C,SAApC,CAAN,EAJb,eAMI,oBAAC,eAAD,EAAiB,IAAI,CAAE3M,UAAvB,EANJ,CA9BJ,CArBJ,CADJ,CAFJ,CADJ,cAmEI,oBAAC,IAAD,CAAM,IAAN,mBACI,oBAAC,gBAAD,EACI,EAAE,CAAC,uBADP,CAEI,IAAI,CAAC,uBACL;AAHJ,CAII,IAAI,CAAE,KAAK0D,KAAL,CAAWiD,YAJrB,CAKI,WAAW,CAAE,IALjB,CAMI,WAAW,CAAE,aANjB,CAOI,IAAI,CAAE,KAAKL,cAPf,CAQI,cAAc,CAAE,KAAKQ,kBARzB,CASI,WAAW,CAAE,KAAKJ,eATtB,EADJ,CAnEJ,CADH,CAkFK,EAnFV,CAFJ,CApDJ,CADJ,CAFJ,CAFJ,CAjEJ,CAHJ,CADJ,CAJJ,CADJ,CAyOK,KAAK1D,KAAL,CAAWgE,KAAX,CAAiBjC,SAAjB,eACG,oBAAC,aAAD,EAAe,IAAI,CAAE,KAAK/B,KAAL,CAAWgE,KAAX,CAAiBjC,SAAtC,CACI,UAAU,CAAE,KAAKQ,UADrB,CAEI,SAAS,CAAE,KAAKvC,KAAL,CAAWgE,KAAX,CAAiB1B,SAFhC,CAGI,UAAU,CAAE,KAAKtC,KAAL,CAAWgE,KAAX,CAAiBiB,UAHjC,CAII,UAAU,CAAE,KAAKjF,KAAL,CAAWiB,IAAX,CAAgBC,aAAhB,CAA8B,CAAEL,EAAE,CAAE,2BAAN,CAA9B,CAJhB,CAKI,WAAW,CAAE,KAAKkD,WALtB,CAMI,cAAc,CAAE,KAAKrD,KAAL,CAAWyB,cAAX,EAA6B,EANjD,CAOI,eAAe,CAAE,KAAKnC,KAAL,CAAWgE,KAAX,CAAiB5B,kBAAjB,GAAwC,IAAxC,CAA+C,EAA/C,CAAoD4H,eAPzE,CAQI,YAAY,CACR,KAAKhK,KAAL,CAAWgE,KAAX,CAAiB5B,kBAAjB,cACI,oBAAC,iBAAD,EACI,aAAa,CAAE,uBAAC7B,CAAD,QAAO,CAAA,MAAI,CAACiC,aAAL,CAAmBjC,CAAnB,CAAP,EADnB,CAEI,cAAc,CAAE,KAAKG,KAAL,CAAWyB,cAAX,EAA6B,EAFjD,EADJ,CAKI,KAAKzB,KAAL,CAAWC,QAAX,cACA,oBAAC,WAAD,EACI,QAAQ,CAAE,KAAKD,KAAL,CAAWC,QADzB,CAEI,aAAa,CAAE,uBAACJ,CAAD,QAAO,CAAA,MAAI,CAACiC,aAAL,CAAmBjC,CAAnB,CAAP,EAFnB,CAGI,cAAc,CAAE,KAAKG,KAAL,CAAWyB,cAAX,EAA6B,EAHjD,CAII,UAAU,CAAE,KAAKW,UAJrB,CAKI,cAAc,CAAE,KAAKM,cALzB,CAMI,WAAW,CAAE,KAAKD,WANtB,CAOI,aAAa,CAAE,KAAK+C,aAPxB,CAQI,mBAAmB,CAAE,KAAKlG,KAAL,CAAWgE,KAAX,CAAiB+G,mBAAjB,EAAwC,EARjE,EADA,cAaA,wCA3BZ,EA1OR,CADJ,CA6QH,C,0CA3/BD,kCAAgC/K,KAAhC,CAAuCU,KAAvC,CAA8C,CAE1C,GAAIV,KAAK,CAACgE,KAAN,CAAYgH,YAAZ,GAA6B,EAA7B,EAAmChL,KAAK,CAACgE,KAAN,CAAYgH,YAAZ,GAA6BtK,KAAK,CAACsK,YAA1E,CAAwF,CACpFxN,KAAK,CAACuJ,IAAN,CAAW/G,KAAK,CAACgE,KAAN,CAAYgH,YAAvB,EACAhL,KAAK,CAACgE,KAAN,CAAYgH,YAAZ,CAA2B,EAA3B,CACH,CAED,GAAIhL,KAAK,CAACgE,KAAN,CAAYiH,KAAZ,GAAsB,EAAtB,EAA4BjL,KAAK,CAACgE,KAAN,CAAYiH,KAAZ,GAAsBvK,KAAK,CAACuK,KAA5D,CAAmE,CAC/DzN,KAAK,CAACyN,KAAN,CAAYjL,KAAK,CAACgE,KAAN,CAAYiH,KAAxB,EACAjL,KAAK,CAACgE,KAAN,CAAYiH,KAAZ,CAAoB,EAApB,CACH,CACD,MAAO,KAAP,CACH,C,mCAhD+BpP,S,EAmiCpC,GAAMqP,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACxK,KAAD,CAAW,CAC/B,MAAO,CACHsD,KAAK,CAAEtD,KAAK,CAACsD,KADV,CAAP,CAGH,CAJD,CAMA,cAAelI,CAAAA,OAAO,CAACoP,eAAD,CAAkB,CACpClN,WAAW,CAAXA,WADoC,CACvBC,UAAU,CAAVA,UADuB,CACXE,WAAW,CAAXA,WADW,CACED,uBAAuB,CAAvBA,uBADF,CAC2BG,gBAAgB,CAAhBA,gBAD3B,CAC6CC,2BAA2B,CAA3BA,2BAD7C,CAEpCF,gCAAgC,CAAhCA,gCAFoC,CAEFG,iBAAiB,CAAjBA,iBAFE,CAEiBC,yBAAyB,CAAzBA,yBAFjB,CAE4CC,4BAA4B,CAA5BA,4BAF5C,CAGpCC,+BAA+B,CAA/BA,+BAHoC,CAGHC,oBAAoB,CAApBA,oBAHG,CAGmBC,wBAAwB,CAAxBA,wBAHnB,CAAlB,CAAP,CAIZ7C,UAAU,CAACgE,qBAAD,CAJE,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, Form, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { faTrashAlt, faCopy, faPencilAlt, faSync, faPlus, faThumbsUp,faBoxOpen, faBox,faLocationArrow, faFolderMinus, faFolder, faFolderOpen, faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { constructOptionList, getControlMap, showEsign } from '../../components/CommonScript';\r\nimport { ReadOnlyText, ContentPanel } from '../../components/App.styles';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getSelectedSampleStorageLocation, filterColumnData, changeStorageCategoryFilter,\r\n    openPropertyModal, editSampleStorageLocation, approveSampleStorageLocation, getSelectedSampleStorageVersion, fetchStorageCategory, copySampleStorageVersion\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../product/product.styled';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { uuid } from \"uuidv4\";\r\nimport TreeEditable from \"../../components/form-tree-editable/TreeEditable\";\r\nimport TreeViewEditable from \"../../components/form-tree-editable/form-tree-editable.component\";\r\nimport { mapTree, removeItems } from \"@progress/kendo-react-treelist\";\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport AddTreeview from './AddTreeview';\r\nimport AddTreeProperties from './AddTreeProperties';\r\nimport { Splitter } from '@progress/kendo-react-layout';\r\nimport TransactionListMaster from '../../components/TransactionListMaster';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport StorageCategoryFilter from './StorageCategoryFilter';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nclass SampleStorageLocation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            toggleAction: false,\r\n            treeDataView: undefined,\r\n            toggleActionView: false,\r\n            treeData: [\r\n                {\r\n                    text: \"root\",\r\n                    expanded: true,\r\n                    editable: true,\r\n                    root: true,\r\n                    id: uuid(),\r\n                }],\r\n            panes: [{\r\n                size: '50%',\r\n                scrollable: false\r\n            }],\r\n            selectedRecord: {},\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            skip: 0,\r\n            detailSkip: 0,\r\n            detailTake: 10,\r\n            take: this.props.Login.settings ?\r\n                this.props.Login.settings[3] : 25,\r\n            splitChangeWidthPercentage: 22,\r\n            selectedItem:undefined\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    onChange = (event) => {\r\n\r\n        this.setState({ panes: event.newState })\r\n\r\n    };\r\n    componentDidUpdate(previousProps) {\r\n\r\n        let isComponentUpdated = false;\r\n        let { filterData } = this.state;\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ controlMap, userRoleControlRights });\r\n        }\r\n\r\n        if (this.props.Login.treeData !== previousProps.Login.treeData) {\r\n            this.setState({\r\n                treeData: this.props.Login.treeData\r\n            });\r\n        }\r\n        if (this.props.Login.masterData.selectedSampleStorageVersion !== previousProps.Login.masterData.selectedSampleStorageVersion) {\r\n\r\n            if (this.props.Login.masterData.selectedSampleStorageVersion && this.props.Login.masterData.selectedSampleStorageVersion !== undefined) {\r\n                this.setState({\r\n                    treeDataView:\r\n                        JSON.parse(this.props.Login.masterData.selectedSampleStorageVersion[\"jsondata\"].value).data\r\n                });\r\n            }\r\n        }\r\n        let nfilterStorageCategory = this.state.nStorageCategory || {};\r\n        let filterStorageCategory = this.state.filterStorageCategory || {};\r\n\r\n        if (this.props.Login.masterData.filterStorageCategory !== previousProps.Login.masterData.filterStorageCategory) {\r\n            const filterStorageCategoryMap = constructOptionList(this.props.Login.masterData.filterStorageCategory || [], \"nstoragecategorycode\",\r\n                \"sstoragecategoryname\", 'nstoragecategorycode', 'ascending', false);\r\n            filterStorageCategory = filterStorageCategoryMap.get(\"OptionList\");\r\n            if (filterStorageCategory && filterStorageCategory.length > 0) {\r\n                nfilterStorageCategory = filterStorageCategory[0];\r\n            }\r\n            isComponentUpdated = true;\r\n        } else if (this.props.Login.masterData.nfilterStorageCategory !== previousProps.Login.masterData.nfilterStorageCategory) {\r\n            nfilterStorageCategory = this.props.Login.masterData.nfilterStorageCategory;\r\n            isComponentUpdated = true;\r\n        }\r\n        if (isComponentUpdated) {\r\n            this.setState({ nfilterStorageCategory, selectedRecord, filterStorageCategory });\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({\r\n                selectedRecord: this.props.Login.selectedRecord\r\n            });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n            this.setState({ filterData });\r\n        }\r\n    }\r\n    addChildNode = (e, clickedItem) => {\r\n        let newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n            if (item.id === clickedItem.id) {\r\n                item.items = item.items || [];\r\n                item.items.push({\r\n                    id: uuid(),\r\n                    text: this.props.intl.formatMessage({ id: \"IDS_LABEL\" }),\r\n                    expanded: true,\r\n                    editable: false,\r\n                    locationlastnode: false,\r\n                    containerfirstnode: false,\r\n                    containerlastnode: false\r\n                });\r\n            }\r\n            return item;\r\n        });\r\n        this.setState({ treeData: newData });\r\n    };\r\n\r\n    equalNode = (e, clickedItem) => {\r\n        let parentItem = {};\r\n        let parentFound = false;\r\n        let newData = [...this.state.treeData];\r\n        mapTree(this.state.treeData, \"items\", (item) => {\r\n            if (item.items) {\r\n                if (parentFound) {\r\n                    parentItem = item;\r\n                    parentFound = false;\r\n                }\r\n            }\r\n\r\n            if (item.id === clickedItem.id) {\r\n                parentFound = true;\r\n            }\r\n\r\n            return item;\r\n        });\r\n        if (parentItem.text === undefined) {\r\n            newData.push({\r\n                id: uuid(),\r\n                text: this.props.intl.formatMessage({ id: \"IDS_LABEL\" }),\r\n                expanded: true,\r\n                editable: false,\r\n                locationlastnode: false,\r\n                containerfirstnode: false,\r\n                containerlastnode: false\r\n            });\r\n            this.setState({ treeData: newData });\r\n        } else {\r\n            newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n                if (item.id === parentItem.id) {\r\n                    item.items.push({\r\n                        id: uuid(),\r\n                        text: this.props.intl.formatMessage({ id: \"IDS_LABEL\" }),\r\n                        expanded: true,\r\n                        editable: false,\r\n                        locationlastnode: false,\r\n                        containerfirstnode: false,\r\n                        containerlastnode: false\r\n                    });\r\n                }\r\n                return item;\r\n            });\r\n            this.setState({ treeData: newData });\r\n        }\r\n    };\r\n    deleteNode = (clickedItem) => {\r\n        const newData = removeItems(this.state.treeData, \"items\", (item) => {\r\n            return item.id === clickedItem.id;\r\n        });\r\n        this.setState({ treeData: newData });\r\n    };\r\n    editRecord = (e, clickedItem) => {\r\n        this.setState({ toggleAction: !this.state.toggleAction });\r\n    };\r\n    openModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: true, selectedRecord: {}, loadTreeProperties: false,\r\n                treeData: [\r\n                    {\r\n                        text: \"root\",\r\n                        expanded: true,\r\n                        editable: true,\r\n                        root: true,\r\n                        id: uuid(),\r\n                    },\r\n                ], operation: \"create\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: false, selectedRecord: {}\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onInputChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    itemRender = (props) => {\r\n        if (this.state.toggleAction) {\r\n            return (\r\n                <>\r\n                    {props.item.editable ? (\r\n                        <Form.Group className=\"k-editable-text-wrap\">\r\n                            <Form.Control\r\n                                id={\"nodename\"}\r\n                                name={\"nodename\"}\r\n                                type=\"text\"\r\n                                onKeyDown={(e) => e.stopPropagation()}\r\n                                value={props.item.text}\r\n                                autoFocus\r\n                                autoComplete=\"off\"\r\n                                onChange={(e) => this.handleChange(e, props.item)}\r\n                                onBlur={(e) => this.handleBlur(e, props.item)}\r\n                            />\r\n                        </Form.Group>\r\n                    ) : (\r\n                        <span>{props.item.text}</span>\r\n                    )}\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                <>\r\n                    {props.item ? (\r\n                        <ul className=\"list-inline mb-0\">\r\n                            <li className=\"list-inline-item mr-3\">{props.item.text}</li>\r\n                            {props.item.editable ? (\r\n                                <>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <span\r\n                                            className=\"action-icon tree-level1\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                this.equalNode(e, props.item);\r\n                                            }}\r\n                                        ></span>\r\n                                    </li>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <span\r\n                                            className=\"action-icon tree-level2\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                this.addChildNode(e, props.item);\r\n                                            }}\r\n                                        ></span>\r\n                                    </li>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <span\r\n                                            className=\"k-icon k-i-edit k-i-pencil\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation();\r\n                                                this.editRecord(e, props.item);\r\n                                            }}\r\n                                        ></span>\r\n                                    </li>\r\n\r\n                                    {!props.item.isRoot ? (\r\n                                        <li className=\"list-inline-item\">\r\n                                            <span\r\n                                                className=\"k-icon k-i-delete\"\r\n                                                onClick={(e) => {\r\n                                                    e.stopPropagation();\r\n                                                    this.deleteNode(props.item);\r\n                                                }}\r\n                                            ></span>\r\n                                        </li>\r\n                                    ) : null}\r\n                                </>\r\n                            ) : null}\r\n                        </ul>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    onItemClick = (event) => {\r\n        let newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n            if (item.editable === true) {\r\n                item.editable = false;\r\n            } else if (item.id === event.item.id) {\r\n                item.editable = true;\r\n            }\r\n            return item;\r\n        });\r\n        this.setState({ treeData: newData });\r\n    };\r\n\r\n    onExpandChange = (event) => {\r\n        event.item.expanded = !event.item.expanded;\r\n        this.forceUpdate();\r\n    };\r\n    itemRenderView = (clickedItem) => {\r\n        let item = clickedItem.item;\r\n        if (!this.state.toggleActionView) {\r\n            return (\r\n                <>\r\n                    {clickedItem.item ? (\r\n                        <>\r\n                            <span className={`normal-node\r\n                        ${item.selected ? \"active-node\" : \"\"}\r\n                        ${item.expanded ? \"expand-node\" : \"collapse-node\"}\r\n                        `} >\r\n                                {item.containerfirstnode ? <FontAwesomeIcon icon={faBoxOpen} /> :\r\n                                    item.locationlastnode ? <FontAwesomeIcon icon={faLocationArrow} /> :\r\n                                        item.containerlastnode ? <FontAwesomeIcon icon={faBox} /> :\r\n                                            item.expanded ? <FontAwesomeIcon icon={faFolderOpen} /> : <FontAwesomeIcon icon={faFolder} />}\r\n                                {item.text}\r\n                            </span>\r\n                            {/* <ul className=\"list-inline mb-0\">\r\n                                <li className=\"list-inline-item mr-3\">{clickedItem.item.text}</li> */}\r\n                                {clickedItem.item.editable ? (\r\n                                    <>\r\n                                        {/* <li className=\"list-inline-item\"> */}\r\n                                            <span\r\n                                                className=\"action-icon tree-toggle m-l-half\"\r\n                                                onClick={(e) => this.setProperties(e, clickedItem)}\r\n                                            ></span>\r\n                                        {/* </li> */}\r\n                                    </>\r\n                                ) : null}\r\n                            {/* </ul> */}\r\n                        </>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </>\r\n            );\r\n        }\r\n    };\r\n    onItemClickView = (event) => {\r\n        let newData = mapTree(this.state.treeDataView, \"items\", (item) => {\r\n            if (item.editable === true) {\r\n                item.editable = false;\r\n            } else if (item.id === event.item.id) {\r\n                item.editable = true;\r\n            }\r\n            return item;\r\n        });\r\n        newData.map((data)=>{\r\n            this.clearSelected(data ,event.item )\r\n        })\r\n        this.setState({ treeDataView: newData });\r\n    };\r\n    clearSelected(innerObj , selectedItem){\r\n        if(innerObj.id == selectedItem.id){\r\n            innerObj.selected = true;\r\n        }else{\r\n            innerObj.selected = false;\r\n        }\r\n        if(innerObj.items && innerObj.items.length > 0){\r\n            innerObj.items.map((childObj)=>{\r\n                this.clearSelected(childObj , selectedItem)\r\n            })\r\n        }\r\n        return innerObj\r\n    }\r\n    onExpandChangeView = (event) => {\r\n        event.item.expanded = !event.item.expanded;\r\n        this.forceUpdate();\r\n    };\r\n    setProperties = (event, clickedItem) => {\r\n        this.props.openPropertyModal(clickedItem);\r\n    };\r\n\r\n    handleChange = (e, clickedItem) => {\r\n        let newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n            if (item.id === clickedItem.id) {\r\n                item.text = e.target.value;\r\n            }\r\n            return item;\r\n        });\r\n        this.setState({ treeData: newData });\r\n    };\r\n\r\n    handleBlur = (e, item) => {\r\n        item.editable = false;\r\n        this.setState({ toggleAction: !this.state.toggleAction });\r\n    };\r\n\r\n    onSaveClick = () => {\r\n        if (this.props.Login.loadTreeProperties === true) {\r\n            this.onSaveProperties();\r\n        } else {\r\n            this.onSaveSampleStorageLocation();\r\n        }\r\n    };\r\n    onSaveProperties = (saveType, formRef) => {\r\n\r\n        const { selectedRecord } = this.state;\r\n\r\n        if (this.props.Login.clickedItem && this.props.Login.clickedItem !== undefined) {\r\n            let inputData = [];\r\n            let jsondata = {}\r\n            let postParam = undefined;\r\n            let count = 0;\r\n            if (selectedRecord[\"locationlastnode\"] !== undefined && selectedRecord[\"locationlastnode\"] === true) {\r\n                count = count + 1;\r\n            }\r\n            if (selectedRecord[\"containerfirstnode\"] !== undefined && selectedRecord[\"containerfirstnode\"] === true) {\r\n                count = count + 1;\r\n            }\r\n            if (selectedRecord[\"containerlastnode\"] !== undefined && selectedRecord[\"containerlastnode\"] === true) {\r\n                count = count + 1;\r\n            }\r\n            if (count > 1) {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTONLYONE\" }));\r\n            } else {\r\n                let newData = mapTree(this.state.treeDataView, \"items\", (item) => {\r\n                    if (item.id === this.props.Login.clickedItem.item.id) {\r\n                        item.locationlastnode = selectedRecord[\"locationlastnode\"] !== undefined ? selectedRecord[\"locationlastnode\"] : false;\r\n                        item.containerfirstnode = selectedRecord[\"containerfirstnode\"] !== undefined ? selectedRecord[\"containerfirstnode\"] : false;\r\n                        item.containerlastnode = selectedRecord[\"containerlastnode\"] !== undefined ? selectedRecord[\"containerlastnode\"] : false;\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                postParam = { inputListName: \"sampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\" };\r\n\r\n                jsondata[\"data\"] = newData;\r\n                inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                inputData[\"sampleStorageVersion\"] = { \"nstatus\": 1 };\r\n                inputData[\"sampleStorageLocation\"] = { \"nstatus\": 1 };\r\n                inputData[\"sampleStorageLocation\"][\"nsamplestoragelocationcode\"] = this.props.Login.masterData.selectedSampleStorageLocation[\"nsamplestoragelocationcode\"]\r\n                inputData[\"sampleStorageLocation\"][\"ssamplestoragelocationname\"] = this.props.Login.masterData.selectedSampleStorageLocation[\"ssamplestoragelocationname\"];\r\n                inputData[\"sampleStorageLocation\"][\"nstoragecategorycode\"] = this.props.Login.masterData.selectedSampleStorageLocation[\"nstoragecategorycode\"]\r\n                inputData[\"sampleStorageVersion\"][\"nsamplestorageversioncode\"] = this.props.Login.masterData.selectedSampleStorageVersion[\"nsamplestorageversioncode\"]\r\n                inputData[\"sampleStorageVersion\"][\"napprovalstatus\"] = this.props.Login.masterData.selectedSampleStorageVersion[\"napprovalstatus\"]\r\n                inputData[\"sampleStorageVersion\"][\"jsondata\"] = jsondata;\r\n\r\n                const inputParam = {\r\n                    classUrl: \"samplestoragelocation\",\r\n                    methodUrl: \"SampleStorageLocation\",\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    inputData: inputData,\r\n                    operation: \"update\", saveType, formRef, postParam\r\n                }\r\n                const masterData = this.props.Login.masterData;\r\n\r\n                // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n                //     const updateInfo = {\r\n                //         typeName: DEFAULT_RETURN,\r\n                //         data: {\r\n                //             loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                //         }\r\n                //     }\r\n                //     this.props.updateStore(updateInfo);\r\n                // } else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                // }\r\n            }\r\n        }\r\n    }\r\n    onSaveSampleStorageLocation = (saveType, formRef) => {\r\n\r\n        const { selectedRecord } = this.state;\r\n\r\n        // if (selectedRecord[\"nstoragecategorycode\"] && selectedRecord[\"nstoragecategorycode\"] !== undefined) {\r\n        //     if (selectedRecord[\"ssamplestoragelocationname\"] && selectedRecord[\"ssamplestoragelocationname\"].length > 0) {\r\n\r\n        let inputData = [];\r\n        let jsondata = {}\r\n        let postParam = undefined;\r\n\r\n        let newData = mapTree(this.state.treeData, \"items\", (item) => {\r\n            if (item.editable === true) {\r\n                item.editable = false;\r\n            }\r\n            return item;\r\n        });\r\n\r\n        // postParam = { inputListName: \"SampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\" };\r\n\r\n        jsondata[\"data\"] = newData;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"sampleStorageLocation\"] = { \"nstatus\": 1 };\r\n        inputData[\"sampleStorageVersion\"] = { \"nstatus\": 1 };\r\n\r\n\r\n        inputData[\"sampleStorageLocation\"][\"ssamplestoragelocationname\"] = selectedRecord[\"ssamplestoragelocationname\"];\r\n        inputData[\"sampleStorageLocation\"][\"nstoragecategorycode\"] = selectedRecord[\"nstoragecategorycode\"].value;\r\n        inputData[\"sampleStorageVersion\"][\"jsondata\"] = jsondata;\r\n\r\n        if (this.props.Login.operation === \"create\") {\r\n            const inputParam = {\r\n                classUrl: \"samplestoragelocation\",\r\n                methodUrl: \"SampleStorageLocation\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                operation: \"create\", saveType, formRef\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            //     const updateInfo = {\r\n            //         typeName: DEFAULT_RETURN,\r\n            //         data: {\r\n            //             loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n            //         }\r\n            //     }\r\n            //     this.props.updateStore(updateInfo);\r\n            // } else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            // }\r\n        } else {\r\n            inputData[\"sampleStorageLocation\"][\"nsamplestoragelocationcode\"] = this.props.Login.masterData.selectedSampleStorageLocation[\"nsamplestoragelocationcode\"]\r\n            inputData[\"sampleStorageVersion\"][\"nsamplestorageversioncode\"] = this.props.Login.masterData.selectedSampleStorageVersion[\"nsamplestorageversioncode\"]\r\n            inputData[\"sampleStorageVersion\"][\"napprovalstatus\"] = this.props.Login.masterData.selectedSampleStorageVersion[\"napprovalstatus\"]\r\n\r\n            const inputParam = {\r\n                classUrl: \"samplestoragelocation\",\r\n                methodUrl: \"SampleStorageLocation\",\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                inputData: inputData,\r\n                operation: \"update\", saveType, formRef\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            //     const updateInfo = {\r\n            //         typeName: DEFAULT_RETURN,\r\n            //         data: {\r\n            //             loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n            //         }\r\n            //     }\r\n            //     this.props.updateStore(updateInfo);\r\n            // } else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            // }\r\n        }\r\n    }\r\n\r\n    deleteSampleStorageLocation = (ncontrolCode) => {\r\n        let inputData = [];\r\n        inputData[\"sampleStorageVersion\"] = {};\r\n\r\n        inputData[\"sampleStorageVersion\"][\"nsamplestoragelocationcode\"] = this.props.Login.masterData.selectedSampleStorageVersion[\"nsamplestoragelocationcode\"]\r\n        inputData[\"sampleStorageVersion\"][\"nsamplestorageversioncode\"] = this.props.Login.masterData.selectedSampleStorageVersion[\"nsamplestorageversioncode\"]\r\n        inputData[\"sampleStorageVersion\"][\"napprovalstatus\"] = this.props.Login.masterData.selectedSampleStorageVersion[\"napprovalstatus\"]\r\n\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"nstoragecategorycode\"] = this.props.Login.masterData.selectedSampleStorageVersion[\"nstoragecategorycode\"]\r\n\r\n        const inputParam = {\r\n            methodUrl: \"SampleStorageLocation\",\r\n            classUrl: \"samplestoragelocation\",\r\n            inputData: inputData,\r\n            operation: \"delete\", searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true, screenData: { inputParam, masterData }, operation: \"delete\", openModal: true,\r\n        //             screenName: this.props.Login.inputParam.displayName\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        // }\r\n\r\n    }\r\n    confirmDelete = (ncontrolCode) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\",\r\n            this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteSampleStorageLocation(ncontrolCode));\r\n    };\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    handleDetailPageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n    onComboChange = (comboData, fieldName, caseNo) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (caseNo === 3) {\r\n\r\n            let nfilterStorageCategory = this.state.nfilterStorageCategory || {}\r\n            nfilterStorageCategory = comboData;\r\n            this.searchRef.current.value = \"\";\r\n            this.setState({ nfilterStorageCategory })\r\n\r\n        } else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.filterStorageCategory) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_STORAGECATEGORY\",\r\n                    \"value\": this.props.Login.masterData.selectedStorageCategoryName && this.props.Login.masterData.selectedStorageCategoryName !== null ? this.props.Login.masterData.selectedStorageCategoryName : \"NA\"\r\n                    // \"value\": this.props.Login.masterData.selectedSampleStorageLocation ? this.props.Login.masterData.filterStorageCategory && this.props.Login.masterData.filterStorageCategory !== undefined ?\r\n                    //     this.props.Login.masterData.selectedStorageCategoryName : \"NA\" : \"NA\"\r\n                }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        if (this.state.nfilterStorageCategory.value) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    nstoragecategorycode: this.state.nfilterStorageCategory.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nfilterStorageCategory: this.state.nfilterStorageCategory\r\n\r\n                }\r\n            }\r\n            this.props.changeStorageCategoryFilter(inputParam, this.props.Login.masterData.filterStorageCategory);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_STORAGECATEGORYNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n\r\n    onApproveSampleStorageLocation = (ncontrolCode) => {\r\n\r\n        let locationEnd = false;\r\n        let storageStart = false;\r\n        let storageEnd = false;\r\n        mapTree(this.state.treeDataView, \"items\", (item) => {\r\n            if (item.locationlastnode === true) {\r\n                locationEnd = true;\r\n            }\r\n            if (item.containerfirstnode === true) {\r\n                storageStart = true;\r\n            }\r\n            if (item.containerlastnode === true) {\r\n                storageEnd = true;\r\n            }\r\n            return null;\r\n        });\r\n        if (locationEnd === false) {\r\n            toast.warning(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTLOCATIONEND\" }));\r\n            return;\r\n        }\r\n        if (storageStart === false) {\r\n            toast.warning(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTSTORAGESTART\" }));\r\n            return;\r\n        }\r\n        if (storageEnd === false) {\r\n            toast.warning(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTSTORAGEEND\" }));\r\n            return;\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"samplestoragelocation\",\r\n            methodUrl: \"SampleStorageLocation\",\r\n            displayName: \"IDS_SAMPLESTORAGELOCATION\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true, screenData: { inputParam, masterData }, openModal: true,\r\n        //             screenName: this.props.Login.inputParam.displayName\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        this.props.approveSampleStorageLocation(this.props.Login.userInfo, this.props.Login.masterData);\r\n        // }\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"samplestoragelocation\",\r\n            methodUrl: \"SampleStorageLocation\",\r\n            displayName: \"IDS_SAMPLESTORAGELOCATION\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n    render() {\r\n\r\n        const addId = this.state.controlMap.has(\"Add SampleStorageLocation\") && this.state.controlMap.get(\"Add SampleStorageLocation\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"Edit SampleStorageLocation\") && this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"Delete SampleStorageLocation\") && this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;\r\n        const copyId = this.state.controlMap.has(\"Copy SampleStorageLocation\") && this.state.controlMap.get(\"Copy SampleStorageLocation\").ncontrolcode;\r\n        const approveId = this.state.controlMap.has(\"Approve SampleStorageLocation\") && this.state.controlMap.get(\"Approve SampleStorageLocation\").ncontrolcode;\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"sampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\",\r\n            fetchUrl: \"samplestoragelocation/getSelectedSampleStorageLocation\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"ssamplestoragelocationname\"]\r\n        };\r\n        const mandatoryFields = [\r\n            { \"idsName\": \"IDS_STORAGECATEGORY\", \"dataField\": \"nstoragecategorycode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_SAMPLESTORAGELOCATIONNAME\", \"dataField\": \"ssamplestoragelocationname\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n        ]\r\n        const breadCrumbData = this.state.filterData || [];\r\n\r\n        const confirmMessage = new ConfirmMessage();\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        : \"\"}\r\n                    <Row noGutters={true}>\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            {/* <Col md={12} className='parent-port-height-nobreadcrumb sticky_head_parent' ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <ListWrapper> */}\r\n                            <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1} onSecondaryPaneSizeChange={this.paneSizeChange} secondaryInitialSize={25} primaryMinSize={40} secondaryMinSize={20}>\r\n                                {/* First column */}\r\n                                <TransactionListMaster\r\n                                    paneHeight={this.state.parentHeight}\r\n                                    needMultiSelect={false}\r\n                                    masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.sampleStorageLocation || []}\r\n                                    selectedMaster={[this.props.Login.masterData.selectedSampleStorageLocation]}\r\n                                    primaryKeyField=\"nsamplestoragelocationcode\"\r\n                                    getMasterDetail={(selectedItem) =>\r\n                                        this.props.getSelectedSampleStorageLocation(\r\n                                            selectedItem,\r\n                                            this.props.Login.userInfo, this.props.Login.masterData\r\n                                        )}\r\n                                    inputParam={{\r\n                                        userInfo: this.props.Login.userInfo,\r\n                                        masterData: this.props.Login.masterData\r\n                                    }}\r\n                                    mainField={\"ssamplestoragelocationname\"}\r\n                                    selectedListName=\"selectedSampleStorageLocation\"\r\n                                    objectName=\"LocationMaster\"\r\n                                    listName=\"IDS_SAMPLESTORAGELOCATION\"\r\n                                    filterColumnData={this.props.filterColumnData}\r\n                                    searchListName=\"searchedData\"\r\n                                    searchRef={this.searchRef}\r\n                                    filterParam={filterParam}\r\n                                    showFilter={this.props.Login.showFilter}\r\n                                    openFilter={this.openFilter}\r\n                                    closeFilter={this.closeFilter}\r\n                                    onFilterSubmit={this.onFilterSubmit}\r\n                                    needFilter={true}\r\n                                    hidePaging={false}\r\n                                    handlePageChange={this.handlePageChange}\r\n                                    skip={this.state.skip}\r\n                                    take={this.state.take}\r\n                                    commonActions={\r\n                                        <ProductList className=\"d-flex product-category float-right\">\r\n                                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                data-for=\"tooltip-common-wrap\"\r\n                                                hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                                onClick={() => this.props.fetchStorageCategory({ userInfo: this.props.Login.userInfo, id: uuid(), nfilterStorageCategory: this.state.nfilterStorageCategory })}>\r\n                                                <FontAwesomeIcon icon={faPlus} title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} />\r\n                                            </Button>\r\n                                            <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                onClick={() => this.reloadData()}\r\n                                                data-for=\"tooltip-common-wrap\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                            </Button>\r\n                                        </ProductList>\r\n                                    }\r\n                                    filterComponent={[\r\n                                        {\r\n                                            \"IDS_TESTFILTER\":\r\n                                                <StorageCategoryFilter\r\n                                                    filterStorageCategory={this.state.filterStorageCategory || []}\r\n                                                    nfilterStorageCategory={this.state.nfilterStorageCategory || {}}\r\n                                                    onComboChange={this.onComboChange}\r\n                                                />\r\n                                        }\r\n                                    ]}\r\n\r\n                                />\r\n\r\n                                {/* End of first column */}\r\n                                <SplitterLayout vertical borderColor=\"#999\" percentage={true} primaryIndex={1} //secondaryInitialSize={400}\r\n                                    customClassName=\"fixed_list_height\">\r\n                                    <PerfectScrollbar>\r\n                                        {/* Start of second column */}\r\n                                        <div className=\"card_group\">\r\n                                            <Row>\r\n                                                <Col md={3} style={{ paddingRight: '0' }}>\r\n                                                    {/* Start of version column */}\r\n                                                    <TransactionListMaster\r\n                                                        masterList={this.props.Login.masterData.sampleStorageVersion || []}\r\n                                                        needMultiSelect={false}\r\n                                                        selectedMaster={[this.props.Login.masterData.selectedSampleStorageVersion]}\r\n                                                        primaryKeyField=\"nsamplestorageversioncode\"\r\n                                                        getMasterDetail={(selectedItem) =>\r\n                                                            this.props.getSelectedSampleStorageVersion(\r\n                                                                selectedItem, this.props.Login.userInfo,\r\n                                                                this.props.Login.masterData\r\n                                                            )}\r\n                                                        inputParam={{\r\n                                                            userInfo: this.props.Login.userInfo,\r\n                                                            masterData: this.props.Login.masterData\r\n                                                        }}\r\n                                                        mainField={\"nversionno\"}\r\n                                                        mainFieldLabel={this.props.intl.formatMessage({ id: \"IDS_VERSION\" })}\r\n                                                        selectedListName=\"selectedSampleStorageVersion\"\r\n                                                        objectName=\"Version\"\r\n                                                        listName=\"IDS_SAMPLESTORAGEVersion\"\r\n                                                        hideSearch={true}\r\n                                                        needValidation={false}\r\n                                                        needFilter={false}\r\n                                                        moreField={[]}\r\n                                                        skip={this.state.detailSkip}\r\n                                                        take={this.state.detailTake}\r\n                                                        hidePaging={true}\r\n                                                        handlePageChange={this.handleDetailPageChange}\r\n                                                        splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                                        actionIcons={\r\n                                                            [\r\n                                                                {\r\n                                                                    title: this.props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                                                    controlname: \"faPencilAlt\",\r\n                                                                    objectName: \"detailtoedit\",\r\n                                                                    hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\r\n                                                                    onClick: (e) => this.props.editSampleStorageLocation(this.props.Login.masterData.selectedSampleStorageVersion, this.props.Login.userInfo, this.props.Login.masterData),\r\n                                                                },\r\n                                                                {\r\n                                                                    title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                                    controlname: \"faTrashAlt\",\r\n                                                                    objectName: \"mastertodelete\",\r\n                                                                    hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\r\n                                                                    onClick: () => this.confirmDelete(deleteId)\r\n                                                                }\r\n                                                            ]\r\n                                                        }\r\n                                                    />\r\n                                                    {/* End of version column */}\r\n                                                </Col>\r\n                                                <Col md={9}>\r\n                                                    {/* Start of detailed content */}\r\n                                                    <ProductList className=\"panel-main-content grid-master\">\r\n                                                        {this.props.Login.masterData.sampleStorageLocation && this.props.Login.masterData.sampleStorageLocation.length > 0 && this.props.Login.masterData.selectedSampleStorageLocation ?\r\n                                                            <Card className=\"border-0\">\r\n                                                                <Card.Header>\r\n                                                                    <Card.Title className=\"product-title-main\">{this.props.Login.masterData.selectedSampleStorageLocation.ssamplestoragelocationname}</Card.Title>\r\n                                                                    <Card.Subtitle>\r\n                                                                        <div className=\"d-flex product-category\">\r\n                                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                                <Nav.Link className=\"action-icons-wrap mr-2\">\r\n                                                                                    {this.props.Login.masterData.selectedSampleStorageVersion.napprovalstatus === transactionStatus.DRAFT ?\r\n\r\n                                                                                        <span className={`btn btn-outlined  outline-secondary btn-sm ml-3`}>\r\n                                                                                            <FormattedMessage id={\"IDS_DRAFT\"} defaultMessage=\"Draft\" />\r\n                                                                                        </span>\r\n                                                                                        :\r\n                                                                                        this.props.Login.masterData.selectedSampleStorageVersion.napprovalstatus === transactionStatus.RETIRED ?\r\n\r\n                                                                                            <span className={`btn btn-outlined outline-danger btn-sm ml-3`}>\r\n                                                                                                <FormattedMessage id={\"IDS_RETIRED\"} defaultMessage=\"Retired\" />\r\n                                                                                            </span>\r\n                                                                                            :\r\n                                                                                            <span className={`btn btn-outlined outline-success btn-sm ml-3`}>\r\n                                                                                                <FormattedMessage id={\"IDS_APPROVED\"} defaultMessage=\"Approved\" />\r\n                                                                                            </span>\r\n                                                                                    }\r\n                                                                                </Nav.Link>\r\n                                                                            </h2>\r\n                                                                            <div className=\"d-inline\">\r\n                                                                                {this.props.Login.masterData.selectedSampleStorageVersion.napprovalstatus === transactionStatus.DRAFT ?\r\n                                                                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 \" href=\"#\"\r\n                                                                                        hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                                        onClick={(e) => this.props.editSampleStorageLocation(this.props.Login.masterData.selectedSampleStorageVersion, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                                                                    >\r\n                                                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n\r\n                                                                                    </Nav.Link>\r\n                                                                                    :\r\n                                                                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2 \" href=\"#\"\r\n                                                                                        hidden={this.state.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                                        data-for=\"tooltip_list_wrap\"\r\n                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                                                        onClick={(e) => this.props.copySampleStorageVersion(this.props.Login.masterData.selectedSampleStorageVersion, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                                                                    >\r\n                                                                                        <FontAwesomeIcon icon={faCopy} />\r\n\r\n                                                                                    </Nav.Link>\r\n                                                                                }\r\n                                                                                <Nav.Link name=\"QB\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                    onClick={() => this.confirmDelete(deleteId)}\r\n                                                                                >\r\n                                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                                </Nav.Link>\r\n                                                                                <Nav.Link name=\"QB\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                                    hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                                                    onClick={() => this.onApproveSampleStorageLocation(approveId)}\r\n                                                                                >\r\n                                                                                    <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                                                </Nav.Link>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Card.Subtitle>\r\n                                                                </Card.Header>\r\n                                                                <Card.Body>\r\n                                                                    <TreeViewEditable\r\n                                                                        id=\"samplestoragelocation\"\r\n                                                                        name=\"samplestoragelocation\"\r\n                                                                        // label=\"Sample Storage Location\"\r\n                                                                        data={this.state.treeDataView}\r\n                                                                        expandIcons={true}\r\n                                                                        selectField={'active-node'}\r\n                                                                        item={this.itemRenderView}\r\n                                                                        onExpandChange={this.onExpandChangeView}\r\n                                                                        onItemClick={this.onItemClickView}\r\n                                                                    />\r\n                                                                </Card.Body>\r\n                                                            </Card>\r\n                                                            : \"\"}\r\n\r\n                                                    </ProductList>\r\n                                                    {/* End of detailed content */}\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </div>\r\n                                        {/* End of second column */}\r\n                                    </PerfectScrollbar>\r\n\r\n                                </SplitterLayout>\r\n\r\n                            </SplitterLayout>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATION\" })}\r\n                        onSaveClick={this.onSaveClick}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.loadTreeProperties === true ? [] : mandatoryFields}\r\n                        addComponent={\r\n                            this.props.Login.loadTreeProperties ? (\r\n                                <AddTreeProperties\r\n                                    onInputChange={(e) => this.onInputChange(e)}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                            ) : this.state.treeData ? (\r\n                                <AddTreeview\r\n                                    treeData={this.state.treeData}\r\n                                    onInputChange={(e) => this.onInputChange(e)}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    itemRender={this.itemRender}\r\n                                    onExpandChange={this.onExpandChange}\r\n                                    onItemClick={this.onItemClick}\r\n                                    onComboChange={this.onComboChange}\r\n                                    storageCategoryList={this.props.Login.storageCategoryList || []}\r\n\r\n                                />\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData, changeStorageCategoryFilter,\r\n    getSelectedSampleStorageLocation, openPropertyModal, editSampleStorageLocation, approveSampleStorageLocation,\r\n    getSelectedSampleStorageVersion, fetchStorageCategory, copySampleStorageVersion\r\n})(injectIntl(SampleStorageLocation));"]},"metadata":{},"sourceType":"module"}