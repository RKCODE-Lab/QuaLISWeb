{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\ModalShow.jsx\";\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, Card, Modal, Row } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { DEFAULT_RETURN } from '../actions/LoginTypes';\nimport { ModalInner } from './App.styles';\nimport { transactionStatus } from './Enumeration';\n\nclass ModalShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n    this.state = {\n      masterStatus: \"\",\n      failedControls: []\n    };\n\n    this.handleSaveClick = saveType => {\n      const failedControls = [];\n      const startLabel = [];\n      let label = \"IDS_ENTER\";\n      let mandatoryFields = this.props.mandatoryFields || [];\n\n      if (this.props.esign) {\n        mandatoryFields = [{\n          \"idsName\": \"IDS_PASSWORD\",\n          \"dataField\": \"esignpassword\",\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_COMMENTS\",\n          \"dataField\": \"esigncomments\",\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }];\n      }\n\n      mandatoryFields.forEach(item => {\n        if (this.props.selectedRecord[item.dataField] === undefined || this.props.selectedRecord[item.dataField] === null) {\n          const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n            id: item.idsName\n          }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n          failedControls.push(alertMessage);\n          startLabel.push(item.mandatoryLabel); //\"IDS_PROVIDE\";\n        } else {\n          if (item.validateFunction) {\n            const validateData = item.validateFunction;\n\n            if (validateData(this.props.selectedRecord[item.dataField]) === false) {\n              const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                id: item.idsName\n              }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n              failedControls.push(alertMessage);\n              startLabel.push(item.mandatoryLabel);\n            }\n          } else {\n            if (typeof this.props.selectedRecord[item.dataField] === \"object\") {\n              //to validate FormSelectSearch component\n              if (this.props.selectedRecord[item.dataField].length === 0) {\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                  id: item.idsName\n                }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n                failedControls.push(alertMessage);\n                startLabel.push(item.mandatoryLabel); //\"IDS_SELECT\";\n              }\n            } else if (typeof this.props.selectedRecord[item.dataField] === \"string\") {\n              //to handle string field -- added trim function\n              if (this.props.selectedRecord[item.dataField].trim().length === 0) {\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                  id: item.idsName\n                }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n                failedControls.push(alertMessage);\n                startLabel.push(item.mandatoryLabel);\n              }\n            } else {\n              //number field\n              if (this.props.selectedRecord[item.dataField].length === 0) {\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({\n                  id: item.idsName\n                }) + (item.alertSuffix ? \" \" + item.alertSuffix : '');\n                failedControls.push(alertMessage);\n                startLabel.push(item.mandatoryLabel);\n              }\n            }\n          }\n        } // else{\n        //     const alertMessage=(item.alertPreFix?item.alertPreFix:'')+this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'')\n        //     failedControls.push(alertMessage);\n        // }\n\n      }); // console.log(\"validationPassed:\", failedControls);\n\n      if (failedControls.length === 0) {\n        if (saveType === 4) {\n          this.props.onExecuteClick(this.formRef);\n        } else if (saveType === 3) {\n          if (this.props.selectedRecord.agree && this.props.selectedRecord.agree === transactionStatus.NO) {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_CHECKAGREE\"\n            }));\n          } else {\n            this.props.validateEsign();\n          }\n        } else {\n          this.props.onSaveClick();\n        }\n      } else {\n        //toast.info(`${this.props.intl.formatMessage({id:\"IDS_ENTER\"})} ${failedControls.join(\",\")}`);\n        label = startLabel[0] === undefined ? label : startLabel[0];\n        toast.info(`${this.props.intl.formatMessage({\n          id: label\n        })} ${failedControls[0]}`);\n      }\n    };\n\n    this.myRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    let masterStatus = this.props.masterStatus;\n\n    if (masterStatus !== \"\" && masterStatus !== undefined) {\n      toast.warn(masterStatus);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterStatus: \"\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n      masterStatus = \"\";\n    }\n\n    if (this.props.innerPopup !== this.state.innerTop) {\n      setTimeout(() => {\n        let scrollDoc = this.props.modalEvent && this.props.modalEvent.id ? document.getElementById(this.props.modalEvent.id) : null;\n\n        if (this.myRef && this.myRef.current) {\n          this.myRef.current.scrollIntoView({\n            behavior: 'smooth'\n          });\n        }\n\n        if (scrollDoc) {\n          scrollDoc.scrollIntoView({\n            behavior: 'smooth'\n          });\n        }\n      }, 100);\n      this.setState({\n        innerTop: this.props.innerPopup\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    let saveType = 1;\n\n    if (this.props.ignoreFormValidation) {\n      saveType = 5;\n    }\n\n    let buttonLabel = \"Save\";\n    let idsLabel = \"IDS_SAVE\";\n\n    if (this.props.buttonLabel) {\n      buttonLabel = this.props.buttonLabel;\n      idsLabel = 'IDS_'.concat(buttonLabel.toUpperCase());\n    }\n\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.modalShow,\n      onHide: this.closeModal,\n      backdrop: \"static\",\n      className: \"dashboard-parameter\",\n      dialogClassName: \"freakerstop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"password\",\n      className: \"header-primary flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, this.props.esign === true ? /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ESIGN\",\n      defaultMessage: \"Esign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.modalTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-cancel\",\n      variant: \"\",\n      onClick: this.props.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CANCEL\",\n      defaultMessage: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    })), this.props.esign === true ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBMIT\",\n      defaultMessage: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    })) : // (this.props.operation === \"create\" || this.props.operation === \"update\")\n    //   && this.props.esign !== true && this.props.showExecute === true && this.props.showSave ?\n    this.props.needSave === true ? \"\" : /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.handleSaveClick(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SAVE\",\n      defaultMessage: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    })) // : \"\"\n    ), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalInner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, this.props.modalBody))));\n  }\n\n}\n\nexport default injectIntl(ModalShow);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/ModalShow.jsx"],"names":["faSave","FontAwesomeIcon","React","Button","Card","Modal","Row","FormattedMessage","injectIntl","toast","DEFAULT_RETURN","ModalInner","transactionStatus","ModalShow","Component","constructor","props","formRef","createRef","state","masterStatus","failedControls","handleSaveClick","saveType","startLabel","label","mandatoryFields","esign","forEach","item","selectedRecord","dataField","undefined","alertMessage","alertPreFix","intl","formatMessage","id","idsName","alertSuffix","push","mandatoryLabel","validateFunction","validateData","length","trim","onExecuteClick","agree","NO","info","validateEsign","onSaveClick","myRef","componentDidUpdate","warn","updateInfo","typeName","data","updateStore","innerPopup","innerTop","setTimeout","scrollDoc","modalEvent","document","getElementById","current","scrollIntoView","behavior","setState","render","ignoreFormValidation","buttonLabel","idsLabel","concat","toUpperCase","modalShow","closeModal","modalTitle","needSave","modalBody"],"mappings":"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","sourcesContent":["import { faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Modal ,Row} from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_RETURN } from '../actions/LoginTypes';\r\nimport { ModalInner } from './App.styles';\r\nimport { transactionStatus } from './Enumeration';\r\n\r\nclass ModalShow extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.myRef = React.createRef()\r\n    }\r\n    formRef = React.createRef();\r\n    state = { masterStatus: \"\", failedControls: [] }\r\n\r\n    handleSaveClick = (saveType) => {\r\n        const failedControls = [];\r\n        const startLabel = [];\r\n        let label = \"IDS_ENTER\";\r\n        let mandatoryFields = this.props.mandatoryFields || [];\r\n        if (this.props.esign) {\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"esignpassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"esigncomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            ]\r\n        }\r\n        mandatoryFields.forEach(item => {\r\n            if (this.props.selectedRecord[item.dataField] === undefined || this.props.selectedRecord[item.dataField] === null) {\r\n                const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                failedControls.push(alertMessage);\r\n                startLabel.push(item.mandatoryLabel)//\"IDS_PROVIDE\";\r\n            }\r\n            else {\r\n                if (item.validateFunction) {\r\n                    const validateData = item.validateFunction;\r\n                    if (validateData(this.props.selectedRecord[item.dataField]) === false) {\r\n                        const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                        failedControls.push(alertMessage);\r\n                        startLabel.push(item.mandatoryLabel)\r\n                    }\r\n                }\r\n                else {\r\n                    if (typeof this.props.selectedRecord[item.dataField] === \"object\") {\r\n                        //to validate FormSelectSearch component\r\n                        if (this.props.selectedRecord[item.dataField].length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)//\"IDS_SELECT\";\r\n                        }\r\n                    }\r\n                    else if (typeof this.props.selectedRecord[item.dataField] === \"string\") {\r\n                        //to handle string field -- added trim function\r\n                        if (this.props.selectedRecord[item.dataField].trim().length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                    else {\r\n                        //number field\r\n                        if (this.props.selectedRecord[item.dataField].length === 0) {\r\n                            const alertMessage = (item.alertPreFix ? item.alertPreFix + \" \" : '') + this.props.intl.formatMessage({ id: item.idsName }) + (item.alertSuffix ? \" \" + item.alertSuffix : '')\r\n                            failedControls.push(alertMessage);\r\n                            startLabel.push(item.mandatoryLabel)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // else{\r\n            //     const alertMessage=(item.alertPreFix?item.alertPreFix:'')+this.props.intl.formatMessage({id:item.idsName})+(item.alertSuffix?item.alertSuffix:'')\r\n            //     failedControls.push(alertMessage);\r\n            // }\r\n        });\r\n        // console.log(\"validationPassed:\", failedControls);\r\n\r\n        if (failedControls.length === 0) {\r\n            if (saveType === 4) {\r\n                this.props.onExecuteClick(this.formRef);\r\n            }\r\n            else if (saveType === 3) {\r\n                if (this.props.selectedRecord.agree && this.props.selectedRecord.agree === transactionStatus.NO) {\r\n\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_CHECKAGREE\" }));\r\n\r\n                } else {\r\n\r\n                    this.props.validateEsign();\r\n                }\r\n            }\r\n            else {\r\n                this.props.onSaveClick();\r\n            }\r\n        }\r\n        else {\r\n            //toast.info(`${this.props.intl.formatMessage({id:\"IDS_ENTER\"})} ${failedControls.join(\",\")}`);\r\n            label = startLabel[0] === undefined ? label : startLabel[0];\r\n            toast.info(`${this.props.intl.formatMessage({ id: label })} ${failedControls[0]}`);\r\n        }\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        let masterStatus = this.props.masterStatus;\r\n        if (masterStatus !== \"\" && masterStatus !== undefined) {\r\n            toast.warn(masterStatus);\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { masterStatus: \"\" }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n            masterStatus = \"\";\r\n        }\r\n        if (this.props.innerPopup !== this.state.innerTop) {\r\n            setTimeout(() => {\r\n                let scrollDoc = this.props.modalEvent && this.props.modalEvent.id ? document.getElementById(this.props.modalEvent.id) : null;\r\n                if (this.myRef && this.myRef.current) {\r\n                    this.myRef.current.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n                if (scrollDoc) {\r\n                    scrollDoc.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n            }, 100)\r\n            this.setState({\r\n                innerTop: this.props.innerPopup\r\n            })\r\n        }\r\n        return null;\r\n\r\n    }\r\n    render() {\r\n        let saveType = 1;\r\n        if (this.props.ignoreFormValidation) {\r\n            saveType = 5;\r\n        }\r\n        let buttonLabel = \"Save\";\r\n        let idsLabel = \"IDS_SAVE\";\r\n        if (this.props.buttonLabel) {\r\n            buttonLabel = this.props.buttonLabel;\r\n            idsLabel = 'IDS_'.concat(buttonLabel.toUpperCase());\r\n        }\r\n        return (\r\n            <Modal show={this.props.modalShow}\r\n                onHide={this.closeModal} backdrop=\"static\" className=\"dashboard-parameter\" dialogClassName=\"freakerstop\">\r\n                <Modal.Header className=\"d-flex align-items-center\">\r\n                    <Modal.Title id=\"password\" className=\"header-primary flex-grow-1\">\r\n                        {this.props.esign === true ?\r\n                            <FormattedMessage id={\"IDS_ESIGN\"} defaultMessage=\"Esign\" /> :\r\n                            <FormattedMessage id={this.props.modalTitle} />\r\n\r\n                        }\r\n                    </Modal.Title>\r\n                    <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={this.props.closeModal}>\r\n                        <FormattedMessage id='IDS_CANCEL' defaultMessage='Cancel' />\r\n                    </Button>\r\n                    {this.props.esign === true ?\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(3)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SUBMIT' defaultMessage='Submit' />\r\n                        </Button>\r\n                        :\r\n                        // (this.props.operation === \"create\" || this.props.operation === \"update\")\r\n                        //   && this.props.esign !== true && this.props.showExecute === true && this.props.showSave ?\r\n                        this.props.needSave===true?\"\":\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleSaveClick(1)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_SAVE' defaultMessage='Save' />\r\n                        </Button>\r\n                        // : \"\"\r\n                    }\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ModalInner>\r\n                        <Card.Body>\r\n                           \r\n                                {this.props.modalBody}\r\n                            \r\n                        </Card.Body>\r\n                    </ModalInner>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n\r\n    }\r\n}\r\nexport default injectIntl(ModalShow);\r\n"]},"metadata":{},"sourceType":"module"}