{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\TrashDropZone.jsx\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { useDrop } from \"react-dnd\";\nimport { COMPONENT, ROW, COLUMN, COMPONENTROW } from \"./constants\";\nimport \"./styles.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nconst ACCEPTS = [ROW, COLUMN, COMPONENT, COMPONENTROW];\n\nconst TrashDropZone = _ref => {\n  let {\n    data,\n    onDrop\n  } = _ref;\n  const [{\n    isOver,\n    canDrop\n  }, drop] = useDrop({\n    accept: ACCEPTS,\n    drop: (item, monitor) => {\n      onDrop(data, item);\n    },\n    canDrop: (item, monitor) => {\n      const layout = data;\n      const itemPath = item.path;\n      const splitItemPath = itemPath.split(\"-\");\n      const itemPathRowIndex = splitItemPath[0];\n      const itemRowChildrenLength = layout[itemPathRowIndex] && layout[itemPathRowIndex].children.length; // prevent removing a col when row has only one col\n\n      if (item.type === COLUMN && itemRowChildrenLength && itemRowChildrenLength < 2) {\n        return false;\n      }\n\n      if (item.data && item.data.templatemandatory) {\n        return false;\n      } else {\n        return validateDrop(item);\n      } // return true;\n\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n\n  const validateDrop = (data, mandatoryComponents) => {\n    let mandatoryComponent = mandatoryComponents || [];\n\n    if (data.children) {\n      data.children.length > 0 && data.children.map(item => {\n        if (item.templatemandatory) {\n          mandatoryComponent.push(1);\n          return false;\n        } else {\n          validateDrop(item, mandatoryComponent);\n        }\n      });\n    } else {\n      if (data.templatemandatory) {\n        mandatoryComponent.push(1);\n        return false;\n      }\n    }\n\n    if (mandatoryComponent.length > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const isActive = isOver && canDrop;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"trashDropZone\", {\n      active: isActive\n    }),\n    ref: drop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TrashDropZone;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/droparea/TrashDropZone.jsx"],"names":["React","classNames","useDrop","COMPONENT","ROW","COLUMN","COMPONENTROW","FontAwesomeIcon","faTrashAlt","ACCEPTS","TrashDropZone","data","onDrop","isOver","canDrop","drop","accept","item","monitor","layout","itemPath","path","splitItemPath","split","itemPathRowIndex","itemRowChildrenLength","children","length","type","templatemandatory","validateDrop","collect","mandatoryComponents","mandatoryComponent","map","push","isActive","active"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { COMPONENT, ROW, COLUMN, COMPONENTROW } from \"./constants\";\r\nimport \"./styles.css\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ACCEPTS = [ROW, COLUMN, COMPONENT, COMPONENTROW];\r\n\r\nconst TrashDropZone = ({ data, onDrop }) => {\r\n  const [{ isOver, canDrop }, drop] = useDrop({\r\n    accept: ACCEPTS,\r\n    drop: (item, monitor) => {\r\n      onDrop(data, item);\r\n    },\r\n    canDrop: (item, monitor) => {\r\n      const layout = data;\r\n      const itemPath = item.path;\r\n      const splitItemPath = itemPath.split(\"-\");\r\n      const itemPathRowIndex = splitItemPath[0];\r\n      const itemRowChildrenLength =\r\n        layout[itemPathRowIndex] && layout[itemPathRowIndex].children.length;\r\n\r\n      // prevent removing a col when row has only one col\r\n      if (\r\n        item.type === COLUMN &&\r\n        itemRowChildrenLength &&\r\n        itemRowChildrenLength < 2\r\n      ) {\r\n        return false;\r\n      }\r\n      if (item.data && item.data.templatemandatory) {\r\n        return false;\r\n      } else {\r\n\r\n        return validateDrop(item);\r\n      }\r\n\r\n      // return true;\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop()\r\n    })\r\n  });\r\n  const validateDrop = (data, mandatoryComponents) => {\r\n    let mandatoryComponent = mandatoryComponents || [];\r\n    if (data.children) {\r\n      data.children.length > 0 && data.children.map(item => {\r\n        if (item.templatemandatory) {\r\n          mandatoryComponent.push(1)\r\n          return false;\r\n        } else {\r\n          validateDrop(item,mandatoryComponent);\r\n        }\r\n      })\r\n    } else {\r\n      if (data.templatemandatory) {\r\n        mandatoryComponent.push(1);\r\n        return false;\r\n      }\r\n    }\r\n    if (mandatoryComponent.length > 0) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n\r\n  }\r\n  const isActive = isOver && canDrop;\r\n  return (\r\n    <div\r\n      className={classNames(\"trashDropZone\", { active: isActive })}\r\n      ref={drop}\r\n    >\r\n      <FontAwesomeIcon icon={faTrashAlt} />\r\n      {/* Drop Columns/Component to remove */}\r\n    </div>\r\n  );\r\n};\r\nexport default TrashDropZone;\r\n"]},"metadata":{},"sourceType":"module"}