{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyForDisplay = exports.mongoFormatOp2 = exports.mongoFormatOp1 = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar Widgets = _interopRequireWildcard(require(\"../components/widgets\"));\n\nvar Operators = _interopRequireWildcard(require(\"../components/operators\"));\n\nvar _export = require(\"../utils/export\");\n\nvar _stuff = require(\"../utils/stuff\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _default2 = require(\"../config/default\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar VanillaBooleanWidget = Widgets.VanillaBooleanWidget,\n    VanillaTextWidget = Widgets.VanillaTextWidget,\n    VanillaTextAreaWidget = Widgets.VanillaTextAreaWidget,\n    VanillaDateWidget = Widgets.VanillaDateWidget,\n    VanillaTimeWidget = Widgets.VanillaTimeWidget,\n    VanillaDateTimeWidget = Widgets.VanillaDateTimeWidget,\n    VanillaMultiSelectWidget = Widgets.VanillaMultiSelectWidget,\n    VanillaSelectWidget = Widgets.VanillaSelectWidget,\n    VanillaNumberWidget = Widgets.VanillaNumberWidget,\n    VanillaSliderWidget = Widgets.VanillaSliderWidget,\n    ValueFieldWidget = Widgets.ValueFieldWidget,\n    FuncWidget = Widgets.FuncWidget;\nvar ProximityOperator = Operators.ProximityOperator; //----------------------------  conjunctions\n\nvar conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    reversedConj: \"OR\",\n    formatConj: function formatConj(children, conj, not, isForDisplay) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function sqlFormatConj(children, conj, not) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    }\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    reversedConj: \"AND\",\n    formatConj: function formatConj(children, conj, not, isForDisplay) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function sqlFormatConj(children, conj, not) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    }\n  }\n}; //----------------------------  operators\n// helpers for mongo format\n\nvar mongoFormatOp1 = function mongoFormatOp1(mop, mc, not, field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n  var $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\" + field : field;\n  var mv = mc(value, fieldDef);\n  if (mv === undefined) return undefined;\n\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\")) return (0, _defineProperty2[\"default\"])({}, field, {\n      \"$ne\": mv\n    }); // short form\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, {\n      \"$not\": (0, _defineProperty2[\"default\"])({}, mop, mv)\n    }) : {\n      \"$not\": (0, _defineProperty2[\"default\"])({}, mop, [$field, mv])\n    };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\")) return (0, _defineProperty2[\"default\"])({}, field, mv); // short form\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, (0, _defineProperty2[\"default\"])({}, mop, mv)) : (0, _defineProperty2[\"default\"])({}, mop, [$field, mv]);\n  }\n};\n\nexports.mongoFormatOp1 = mongoFormatOp1;\n\nvar mongoFormatOp2 = function mongoFormatOp2(mops, not, field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) {\n  var $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\" + field : field;\n\n  if (not) {\n    var _$not3;\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, {\n      \"$not\": (_$not3 = {}, (0, _defineProperty2[\"default\"])(_$not3, mops[0], values[0]), (0, _defineProperty2[\"default\"])(_$not3, mops[1], values[1]), _$not3)\n    }) : {\n      \"$not\": {\n        \"$and\": [(0, _defineProperty2[\"default\"])({}, mops[0], [$field, values[0]]), (0, _defineProperty2[\"default\"])({}, mops[1], [$field, values[1]])]\n      }\n    };\n  } else {\n    var _field2;\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, (_field2 = {}, (0, _defineProperty2[\"default\"])(_field2, mops[0], values[0]), (0, _defineProperty2[\"default\"])(_field2, mops[1], values[1]), _field2)) : {\n      \"$and\": [(0, _defineProperty2[\"default\"])({}, mops[0], [$field, values[0]]), (0, _defineProperty2[\"default\"])({}, mops[1], [$field, values[1]])]\n    };\n  }\n};\n\nexports.mongoFormatOp2 = mongoFormatOp2;\nvar operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    reversedOp: \"not_equal\",\n    formatOp: function formatOp(field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) {\n      var opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay) return value == \"No\" ? \"NOT \".concat(field) : \"\".concat(field);else return \"\".concat(field, \" \").concat(opStr, \" \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\"\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    reversedOp: \"equal\",\n    formatOp: function formatOp(field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) {\n      if (valueTypes == \"boolean\" && isForDisplay) return value == \"No\" ? \"\".concat(field) : \"NOT \".concat(field);else return \"\".concat(field, \" \").concat(opDef.label, \" \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"!=\"\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lt\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\"\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    reversedOp: \"greater\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lte\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\"\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\"\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    reversedOp: \"less\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gte\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\"\n  },\n  like: {\n    label: \"Like\",\n    labelForFormat: \"Like\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" LIKE \").concat(values);\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) : undefined;\n    }, false),\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\"\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not like\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Like\",\n    sqlOp: \"NOT LIKE\",\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" NOT LIKE \").concat(values);\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) : undefined;\n    }, true),\n    valueSources: [\"value\"]\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" LIKE \").concat(values);\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? \"^\" + (0, _stuff.escapeRegExp)(v) : undefined;\n    }, false),\n    jsonLogic: undefined,\n    // not supported\n    valueSources: [\"value\"]\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" LIKE \").concat(values);\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) + \"$\" : undefined;\n    }, false),\n    jsonLogic: undefined,\n    // not supported\n    valueSources: [\"value\"]\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: function formatOp(field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) {\n      var valFrom = values.first();\n      var valTo = values.get(1);\n      if (isForDisplay) return \"\".concat(field, \" BETWEEN \").concat(valFrom, \" AND \").concat(valTo);else return \"\".concat(field, \" >= \").concat(valFrom, \" && \").concat(field, \" <= \").concat(valTo);\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], false),\n    valueLabels: [\"Value from\", \"Value to\"],\n    textSeparators: [null, \"and\"],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: function validateValues(values) {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    }\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], true),\n    valueLabels: [\"Value from\", \"Value to\"],\n    textSeparators: [null, \"and\"],\n    reversedOp: \"between\",\n    validateValues: function validateValues(values) {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n\n      return null;\n    }\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS EMPTY\") : \"!\".concat(field);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var empty = (0, _export.sqlEmptyValue)(fieldDef);\n      return \"COALESCE(\".concat(field, \", \").concat(empty, \") = \").concat(empty);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", function (v, fieldDef) {\n      return [(0, _export.mongoEmptyValue)(fieldDef), null];\n    }, false),\n    jsonLogic: \"!\"\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NOT EMPTY\") : \"!!\".concat(field);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var empty = (0, _export.sqlEmptyValue)(fieldDef);\n      return \"COALESCE(\".concat(field, \", \").concat(empty, \") <> \").concat(empty);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", function (v, fieldDef) {\n      return [(0, _export.mongoEmptyValue)(fieldDef), null];\n    }, false),\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\"\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NULL\") : \"!\".concat(field);\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return null;\n    }, false),\n    jsonLogic: \"==\"\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NOT NULL\") : \"!!\".concat(field);\n    },\n    // check if value exists and is not null\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return null;\n    }, false),\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\"\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    // enum/set\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var opStr = isForDisplay ? \"=\" : \"==\";\n      return \"\".concat(field, \" \").concat(opStr, \" \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\"\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    // enum/set\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return \"\".concat(field, \" != \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\"\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" IN (\").concat(values.join(\", \"), \")\");else return \"\".concat(field, \" IN (\").concat(values, \")\");\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" IN (\").concat(values.join(\", \"), \")\");\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\"\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" NOT IN (\").concat(values.join(\", \"), \")\");else return \"\".concat(field, \" NOT IN (\").concat(values, \")\");\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" NOT IN (\").concat(values.join(\", \"), \")\");\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_any_in\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\") return \"\".concat(field, \" \").concat(opStr, \" [\").concat(values.join(\", \"), \"]\");else return \"\".concat(field, \" \").concat(opStr, \" \").concat(values);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") // set\n        return \"\".concat(field, \" = '\").concat(values.map(function (v) {\n          return _export.SqlString.trim(v);\n        }).join(\",\"), \"'\");else return undefined; //not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: function jsonLogic(field, op, vals) {\n      return {\n        // it's not \"equals\", but \"includes\" operator - just for example\n        \"all\": [field, {\n          \"in\": [{\n            \"var\": \"\"\n          }, vals]\n        }]\n      };\n    },\n    elasticSearchQueryType: \"term\"\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" != [\").concat(values.join(\", \"), \"]\");else return \"\".concat(field, \" != \").concat(values);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") // set\n        return \"\".concat(field, \" != '\").concat(values.map(function (v) {\n          return _export.SqlString.trim(v);\n        }).join(\",\"), \"'\");else return undefined; //not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"multiselect_equals\"\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [{\n      label: \"Word 1\",\n      placeholder: \"Enter first word\"\n    }, {\n      label: \"Word 2\",\n      placeholder: \"Enter second word\"\n    }],\n    textSeparators: [//'Word 1',\n      //'Word 2'\n    ],\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var val1 = values.first();\n      var val2 = values.get(1);\n      var prox = operatorOptions.get(\"proximity\");\n      return \"\".concat(field, \" \").concat(val1, \" NEAR/\").concat(prox, \" \").concat(val2);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var val1 = values.first();\n      var val2 = values.get(1);\n\n      var aVal1 = _export.SqlString.trim(val1);\n\n      var aVal2 = _export.SqlString.trim(val2);\n\n      var prox = operatorOptions.get(\"proximity\");\n      return \"CONTAINS(\".concat(field, \", 'NEAR((\").concat(aVal1, \", \").concat(aVal2, \"), \").concat(prox, \")')\");\n    },\n    mongoFormatOp: undefined,\n    // not supported\n    jsonLogic: undefined,\n    // not supported\n    options: {\n      optionLabel: \"Near\",\n      // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\",\n      // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\",\n      // placeholder for \"near\" selectbox\n      factory: function factory(props) {\n        return /*#__PURE__*/_react[\"default\"].createElement(ProximityOperator, props);\n      },\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      }\n    }\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", function (v) {\n      return 0;\n    }, false)\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false)\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return 0;\n    }, false)\n  }\n}; //----------------------------  widgets\n\nvar stringifyForDisplay = function stringifyForDisplay(v) {\n  return v == null ? \"NULL\" : v.toString();\n};\n\nexports.stringifyForDisplay = stringifyForDisplay;\nvar widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTextWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return _export.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return _export.SqlString.escape(val);\n      }\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTextAreaWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return _export.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return _export.SqlString.escape(val);\n      }\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    },\n    fullWidth: true\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaNumberWidget, props);\n    },\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [{\n      label: \"Number from\",\n      placeholder: \"Enter number from\"\n    }, {\n      label: \"Number to\",\n      placeholder: \"Enter number to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaSliderWidget, props);\n    },\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaSelectWidget, props);\n    },\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var valLabel = (0, _stuff.getTitleInListValues)(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaMultiSelectWidget, props);\n    },\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function formatValue(vals, fieldDef, wgtDef, isForDisplay) {\n      var valsLabels = vals.map(function (v) {\n        return (0, _stuff.getTitleInListValues)(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v);\n      });\n      return isForDisplay ? valsLabels.map(stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function sqlFormatValue(vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(function (v) {\n        return _export.SqlString.escape(v);\n      });\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaDateWidget, props);\n    },\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    useKeyboard: true,\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [{\n      label: \"Date from\",\n      placeholder: \"Enter date from\"\n    }, {\n      label: \"Date to\",\n      placeholder: \"Enter date to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      return (0, _moment[\"default\"])(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function toJS(val, fieldSettings) {\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTimeWidget, props);\n    },\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [{\n      label: \"Time from\",\n      placeholder: \"Enter time from\"\n    }, {\n      label: \"Time to\",\n      placeholder: \"Enter time to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function toJS(val, fieldSettings) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    }\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaDateTimeWidget, props);\n    },\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [{\n      label: \"Datetime from\",\n      placeholder: \"Enter datetime from\"\n    }, {\n      label: \"Datetime to\",\n      placeholder: \"Enter datetime to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.toDate());\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      return (0, _moment[\"default\"])(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function toJS(val, fieldSettings) {\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  \"boolean\": {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaBooleanWidget, props);\n    },\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? val ? \"Yes\" : \"No\" : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    defaultValue: false,\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  field: {\n    valueSrc: \"field\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(ValueFieldWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) {\n      return isForDisplay ? rightFieldDef.label || val : val;\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef, rightFieldDef) {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    valueSrc: \"func\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(FuncWidget, props);\n    },\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n    customProps: {//showSearch: true\n    }\n  }\n}; //----------------------------  types\n\nvar types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\"equal\", \"not_equal\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\", \"like\", \"not_like\", \"starts_with\", \"ends_with\", \"proximity\"],\n        widgetProps: {},\n        opProps: {}\n      },\n      textarea: {\n        operators: [\"equal\", \"not_equal\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\", \"like\", \"not_like\", \"starts_with\", \"ends_with\"],\n        widgetProps: {},\n        opProps: {}\n      },\n      field: {\n        operators: [//unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n        \"equal\", \"not_equal\", \"proximity\" //can exclude if you want\n        ]\n      }\n    }\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      },\n      slider: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\"select_equals\", \"select_not_equals\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"],\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        }\n      },\n      multiselect: {\n        operators: [\"select_any_in\", \"select_not_any_in\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\"multiselect_equals\", \"multiselect_not_equals\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  \"boolean\": {\n    defaultOperator: \"equal\",\n    widgets: {\n      \"boolean\": {\n        operators: [\"equal\", \"not_equal\", \"is_null\", \"is_not_null\"],\n        widgetProps: {//you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\"equal\", \"not_equal\"]\n      }\n    }\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [// w/o operand\n        \"some\", \"all\", \"none\", // w/ operand - count\n        \"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\"],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  }\n}; //----------------------------  settings\n\nvar settings = _objectSpread(_objectSpread({}, _default2.settings), {}, {\n  formatField: function formatField(field, parts, label2, fieldDefinition, config, isForDisplay) {\n    if (isForDisplay) return label2;else return field;\n  },\n  sqlFormatReverse: function sqlFormatReverse(q, operator, reversedOp, operatorDefinition, revOperatorDefinition) {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  formatReverse: function formatReverse(q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay) return \"NOT (\" + q + \")\";else return \"!(\" + q + \")\";\n  },\n  formatAggr: function formatAggr(whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) {\n    var labelForFormat = opDef.labelForFormat,\n        cardinality = opDef.cardinality;\n\n    if (cardinality == 0) {\n      return \"\".concat(labelForFormat, \" OF \").concat(aggrField, \" HAVE \").concat(whereStr);\n    } else if (cardinality == undefined || cardinality == 1) {\n      return \"COUNT OF \".concat(aggrField, \" WHERE \").concat(whereStr, \" \").concat(labelForFormat, \" \").concat(value);\n    } else if (cardinality == 2) {\n      var valFrom = value.first();\n      var valTo = value.get(1);\n      return \"COUNT OF \".concat(aggrField, \" WHERE \").concat(whereStr, \" \").concat(labelForFormat, \" \").concat(valFrom, \" AND \").concat(valTo);\n    }\n  },\n  canCompareFieldWithField: function canCompareFieldWithField(leftField, leftFieldConfig, rightField, rightFieldConfig) {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\"\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\"\n    }\n  },\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5\n}); //----------------------------\n\n\nvar _default = {\n  conjunctions: conjunctions,\n  operators: operators,\n  widgets: widgets,\n  types: types,\n  settings: settings\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/react-awesome-query-builder/lib/config/basic.js"],"names":["_interopRequireDefault","require","_typeof","Object","defineProperty","exports","value","stringifyForDisplay","mongoFormatOp2","mongoFormatOp1","_defineProperty2","_react","Widgets","_interopRequireWildcard","Operators","_export","_stuff","_moment","_default2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","VanillaBooleanWidget","VanillaTextWidget","VanillaTextAreaWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaMultiSelectWidget","VanillaSelectWidget","VanillaNumberWidget","VanillaSliderWidget","ValueFieldWidget","FuncWidget","ProximityOperator","conjunctions","AND","label","mongoConj","reversedConj","formatConj","children","conj","not","isForDisplay","size","join","first","sqlFormatConj","OR","mop","mc","field","_op","useExpr","valueSrc","valueType","opDef","operatorOptions","fieldDef","$field","startsWith","mv","undefined","mops","values","valueSrcs","valueTypes","_$not3","_field2","operators","equal","labelForFormat","sqlOp","reversedOp","formatOp","op","opStr","concat","mongoFormatOp","bind","v","jsonLogic","elasticSearchQueryType","not_equal","isNotOp","less","less_or_equal","greater","greater_or_equal","like","sqlFormatOp","escapeRegExp","_jsonLogicIsRevArgs","valueSources","not_like","starts_with","ends_with","between","cardinality","valFrom","valTo","valueLabels","textSeparators","validateValues","type","not_between","is_empty","empty","sqlEmptyValue","mongoEmptyValue","is_not_empty","is_null","is_not_null","select_equals","select_not_equals","select_any_in","select_not_any_in","multiselect_equals","map","SqlString","trim","jsonLogic2","vals","multiselect_not_equals","proximity","placeholder","val1","val2","prox","aVal1","aVal2","options","optionLabel","optionTextBefore","optionPlaceholder","factory","props","createElement","minProximity","maxProximity","defaults","some","all","none","toString","widgets","text","jsType","valueLabel","valuePlaceholder","formatValue","val","wgtDef","JSON","stringify","sqlFormatValue","escapeLike","escape","toJS","fieldSettings","mongoFormatValue","textarea","fullWidth","number","slider","select","valLabel","getTitleInListValues","listValues","asyncListValues","multiselect","valsLabels","date","dateFormat","valueFormat","useKeyboard","dateVal","format","toDate","isValid","time","timeFormat","use12Hours","elasticSearchFormatValue","queryType","operator","fieldName","script","params","min","max","datetime","labelYes","labelNo","defaultValue","rightFieldDef","customProps","showSearch","func","types","defaultOperator","mainWidget","widgetProps","opProps","settings","formatField","parts","label2","fieldDefinition","config","sqlFormatReverse","q","operatorDefinition","revOperatorDefinition","formatReverse","formatAggr","whereStr","aggrField","aggrFieldDef","canCompareFieldWithField","leftField","leftFieldConfig","rightField","rightFieldConfig","valueSourcesInfo","widget","customFieldSelectProps","defaultSliderWidth","defaultSelectWidth","defaultSearchWidth","defaultMaxRows","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyForDisplay = exports.mongoFormatOp2 = exports.mongoFormatOp1 = exports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar Widgets = _interopRequireWildcard(require(\"../components/widgets\"));\n\nvar Operators = _interopRequireWildcard(require(\"../components/operators\"));\n\nvar _export = require(\"../utils/export\");\n\nvar _stuff = require(\"../utils/stuff\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _default2 = require(\"../config/default\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar VanillaBooleanWidget = Widgets.VanillaBooleanWidget,\n    VanillaTextWidget = Widgets.VanillaTextWidget,\n    VanillaTextAreaWidget = Widgets.VanillaTextAreaWidget,\n    VanillaDateWidget = Widgets.VanillaDateWidget,\n    VanillaTimeWidget = Widgets.VanillaTimeWidget,\n    VanillaDateTimeWidget = Widgets.VanillaDateTimeWidget,\n    VanillaMultiSelectWidget = Widgets.VanillaMultiSelectWidget,\n    VanillaSelectWidget = Widgets.VanillaSelectWidget,\n    VanillaNumberWidget = Widgets.VanillaNumberWidget,\n    VanillaSliderWidget = Widgets.VanillaSliderWidget,\n    ValueFieldWidget = Widgets.ValueFieldWidget,\n    FuncWidget = Widgets.FuncWidget;\nvar ProximityOperator = Operators.ProximityOperator; //----------------------------  conjunctions\n\nvar conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    reversedConj: \"OR\",\n    formatConj: function formatConj(children, conj, not, isForDisplay) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function sqlFormatConj(children, conj, not) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    }\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    reversedConj: \"AND\",\n    formatConj: function formatConj(children, conj, not, isForDisplay) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: function sqlFormatConj(children, conj, not) {\n      return children.size > 1 ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\" : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    }\n  }\n}; //----------------------------  operators\n// helpers for mongo format\n\nvar mongoFormatOp1 = function mongoFormatOp1(mop, mc, not, field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n  var $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\" + field : field;\n  var mv = mc(value, fieldDef);\n  if (mv === undefined) return undefined;\n\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\")) return (0, _defineProperty2[\"default\"])({}, field, {\n      \"$ne\": mv\n    }); // short form\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, {\n      \"$not\": (0, _defineProperty2[\"default\"])({}, mop, mv)\n    }) : {\n      \"$not\": (0, _defineProperty2[\"default\"])({}, mop, [$field, mv])\n    };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\")) return (0, _defineProperty2[\"default\"])({}, field, mv); // short form\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, (0, _defineProperty2[\"default\"])({}, mop, mv)) : (0, _defineProperty2[\"default\"])({}, mop, [$field, mv]);\n  }\n};\n\nexports.mongoFormatOp1 = mongoFormatOp1;\n\nvar mongoFormatOp2 = function mongoFormatOp2(mops, not, field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) {\n  var $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\" + field : field;\n\n  if (not) {\n    var _$not3;\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, {\n      \"$not\": (_$not3 = {}, (0, _defineProperty2[\"default\"])(_$not3, mops[0], values[0]), (0, _defineProperty2[\"default\"])(_$not3, mops[1], values[1]), _$not3)\n    }) : {\n      \"$not\": {\n        \"$and\": [(0, _defineProperty2[\"default\"])({}, mops[0], [$field, values[0]]), (0, _defineProperty2[\"default\"])({}, mops[1], [$field, values[1]])]\n      }\n    };\n  } else {\n    var _field2;\n\n    return !useExpr ? (0, _defineProperty2[\"default\"])({}, field, (_field2 = {}, (0, _defineProperty2[\"default\"])(_field2, mops[0], values[0]), (0, _defineProperty2[\"default\"])(_field2, mops[1], values[1]), _field2)) : {\n      \"$and\": [(0, _defineProperty2[\"default\"])({}, mops[0], [$field, values[0]]), (0, _defineProperty2[\"default\"])({}, mops[1], [$field, values[1]])]\n    };\n  }\n};\n\nexports.mongoFormatOp2 = mongoFormatOp2;\nvar operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    reversedOp: \"not_equal\",\n    formatOp: function formatOp(field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) {\n      var opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay) return value == \"No\" ? \"NOT \".concat(field) : \"\".concat(field);else return \"\".concat(field, \" \").concat(opStr, \" \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\"\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    reversedOp: \"equal\",\n    formatOp: function formatOp(field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) {\n      if (valueTypes == \"boolean\" && isForDisplay) return value == \"No\" ? \"\".concat(field) : \"NOT \".concat(field);else return \"\".concat(field, \" \").concat(opDef.label, \" \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"!=\"\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lt\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\"\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    reversedOp: \"greater\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$lte\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\"\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\"\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    reversedOp: \"less\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gte\", function (v) {\n      return v;\n    }, false),\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\"\n  },\n  like: {\n    label: \"Like\",\n    labelForFormat: \"Like\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" LIKE \").concat(values);\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) : undefined;\n    }, false),\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\"\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not like\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Like\",\n    sqlOp: \"NOT LIKE\",\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" NOT LIKE \").concat(values);\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) : undefined;\n    }, true),\n    valueSources: [\"value\"]\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" LIKE \").concat(values);\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? \"^\" + (0, _stuff.escapeRegExp)(v) : undefined;\n    }, false),\n    jsonLogic: undefined,\n    // not supported\n    valueSources: [\"value\"]\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" LIKE \").concat(values);\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$regex\", function (v) {\n      return typeof v == \"string\" ? (0, _stuff.escapeRegExp)(v) + \"$\" : undefined;\n    }, false),\n    jsonLogic: undefined,\n    // not supported\n    valueSources: [\"value\"]\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: function formatOp(field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) {\n      var valFrom = values.first();\n      var valTo = values.get(1);\n      if (isForDisplay) return \"\".concat(field, \" BETWEEN \").concat(valFrom, \" AND \").concat(valTo);else return \"\".concat(field, \" >= \").concat(valFrom, \" && \").concat(field, \" <= \").concat(valTo);\n    },\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], false),\n    valueLabels: [\"Value from\", \"Value to\"],\n    textSeparators: [null, \"and\"],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: function validateValues(values) {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    }\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    mongoFormatOp: mongoFormatOp2.bind(null, [\"$gte\", \"$lte\"], true),\n    valueLabels: [\"Value from\", \"Value to\"],\n    textSeparators: [null, \"and\"],\n    reversedOp: \"between\",\n    validateValues: function validateValues(values) {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n\n      return null;\n    }\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS EMPTY\") : \"!\".concat(field);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var empty = (0, _export.sqlEmptyValue)(fieldDef);\n      return \"COALESCE(\".concat(field, \", \").concat(empty, \") = \").concat(empty);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", function (v, fieldDef) {\n      return [(0, _export.mongoEmptyValue)(fieldDef), null];\n    }, false),\n    jsonLogic: \"!\"\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NOT EMPTY\") : \"!!\".concat(field);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var empty = (0, _export.sqlEmptyValue)(fieldDef);\n      return \"COALESCE(\".concat(field, \", \").concat(empty, \") <> \").concat(empty);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", function (v, fieldDef) {\n      return [(0, _export.mongoEmptyValue)(fieldDef), null];\n    }, false),\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\"\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NULL\") : \"!\".concat(field);\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return null;\n    }, false),\n    jsonLogic: \"==\"\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return isForDisplay ? \"\".concat(field, \" IS NOT NULL\") : \"!!\".concat(field);\n    },\n    // check if value exists and is not null\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return null;\n    }, false),\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\"\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    // enum/set\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var opStr = isForDisplay ? \"=\" : \"==\";\n      return \"\".concat(field, \" \").concat(opStr, \" \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\"\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    // enum/set\n    formatOp: function formatOp(field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      return \"\".concat(field, \" != \").concat(value);\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\"\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" IN (\").concat(values.join(\", \"), \")\");else return \"\".concat(field, \" IN (\").concat(values, \")\");\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" IN (\").concat(values.join(\", \"), \")\");\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$in\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\"\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" NOT IN (\").concat(values.join(\", \"), \")\");else return \"\".concat(field, \" NOT IN (\").concat(values, \")\");\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") {\n        return \"\".concat(field, \" NOT IN (\").concat(values.join(\", \"), \")\");\n      } else return undefined; // not supported\n\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$nin\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"select_any_in\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\") return \"\".concat(field, \" \").concat(opStr, \" [\").concat(values.join(\", \"), \"]\");else return \"\".concat(field, \" \").concat(opStr, \" \").concat(values);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") // set\n        return \"\".concat(field, \" = '\").concat(values.map(function (v) {\n          return _export.SqlString.trim(v);\n        }).join(\",\"), \"'\");else return undefined; //not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: function jsonLogic(field, op, vals) {\n      return {\n        // it's not \"equals\", but \"includes\" operator - just for example\n        \"all\": [field, {\n          \"in\": [{\n            \"var\": \"\"\n          }, vals]\n        }]\n      };\n    },\n    elasticSearchQueryType: \"term\"\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      if (valueSrc == \"value\") return \"\".concat(field, \" != [\").concat(values.join(\", \"), \"]\");else return \"\".concat(field, \" != \").concat(values);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\") // set\n        return \"\".concat(field, \" != '\").concat(values.map(function (v) {\n          return _export.SqlString.trim(v);\n        }).join(\",\"), \"'\");else return undefined; //not supported\n    },\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$ne\", function (v) {\n      return v;\n    }, false),\n    reversedOp: \"multiselect_equals\"\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [{\n      label: \"Word 1\",\n      placeholder: \"Enter first word\"\n    }, {\n      label: \"Word 2\",\n      placeholder: \"Enter second word\"\n    }],\n    textSeparators: [//'Word 1',\n      //'Word 2'\n    ],\n    formatOp: function formatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) {\n      var val1 = values.first();\n      var val2 = values.get(1);\n      var prox = operatorOptions.get(\"proximity\");\n      return \"\".concat(field, \" \").concat(val1, \" NEAR/\").concat(prox, \" \").concat(val2);\n    },\n    sqlFormatOp: function sqlFormatOp(field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      var val1 = values.first();\n      var val2 = values.get(1);\n\n      var aVal1 = _export.SqlString.trim(val1);\n\n      var aVal2 = _export.SqlString.trim(val2);\n\n      var prox = operatorOptions.get(\"proximity\");\n      return \"CONTAINS(\".concat(field, \", 'NEAR((\").concat(aVal1, \", \").concat(aVal2, \"), \").concat(prox, \")')\");\n    },\n    mongoFormatOp: undefined,\n    // not supported\n    jsonLogic: undefined,\n    // not supported\n    options: {\n      optionLabel: \"Near\",\n      // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\",\n      // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\",\n      // placeholder for \"near\" selectbox\n      factory: function factory(props) {\n        return /*#__PURE__*/_react[\"default\"].createElement(ProximityOperator, props);\n      },\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      }\n    }\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$gt\", function (v) {\n      return 0;\n    }, false)\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return v;\n    }, false)\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    mongoFormatOp: mongoFormatOp1.bind(null, \"$eq\", function (v) {\n      return 0;\n    }, false)\n  }\n}; //----------------------------  widgets\n\nvar stringifyForDisplay = function stringifyForDisplay(v) {\n  return v == null ? \"NULL\" : v.toString();\n};\n\nexports.stringifyForDisplay = stringifyForDisplay;\nvar widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTextWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return _export.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return _export.SqlString.escape(val);\n      }\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTextAreaWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return _export.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return _export.SqlString.escape(val);\n      }\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    },\n    fullWidth: true\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaNumberWidget, props);\n    },\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [{\n      label: \"Number from\",\n      placeholder: \"Enter number from\"\n    }, {\n      label: \"Number to\",\n      placeholder: \"Enter number to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaSliderWidget, props);\n    },\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaSelectWidget, props);\n    },\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var valLabel = (0, _stuff.getTitleInListValues)(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaMultiSelectWidget, props);\n    },\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function formatValue(vals, fieldDef, wgtDef, isForDisplay) {\n      var valsLabels = vals.map(function (v) {\n        return (0, _stuff.getTitleInListValues)(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v);\n      });\n      return isForDisplay ? valsLabels.map(stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function sqlFormatValue(vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(function (v) {\n        return _export.SqlString.escape(v);\n      });\n    },\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaDateWidget, props);\n    },\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    useKeyboard: true,\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [{\n      label: \"Date from\",\n      placeholder: \"Enter date from\"\n    }, {\n      label: \"Date to\",\n      placeholder: \"Enter date to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      return (0, _moment[\"default\"])(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function toJS(val, fieldSettings) {\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaTimeWidget, props);\n    },\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [{\n      label: \"Time from\",\n      placeholder: \"Enter time from\"\n    }, {\n      label: \"Time to\",\n      placeholder: \"Enter time to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function toJS(val, fieldSettings) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      // return seconds of day\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    }\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaDateTimeWidget, props);\n    },\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    useKeyboard: true,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [{\n      label: \"Datetime from\",\n      placeholder: \"Enter datetime from\"\n    }, {\n      label: \"Datetime to\",\n      placeholder: \"Enter datetime to\"\n    }],\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return _export.SqlString.escape(dateVal.toDate());\n    },\n    jsonLogic: function jsonLogic(val, fieldDef, wgtDef) {\n      return (0, _moment[\"default\"])(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function toJS(val, fieldSettings) {\n      var dateVal = (0, _moment[\"default\"])(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      var dateVal = (0, _moment[\"default\"])(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  \"boolean\": {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(VanillaBooleanWidget, props);\n    },\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? val ? \"Yes\" : \"No\" : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef) {\n      return _export.SqlString.escape(val);\n    },\n    defaultValue: false,\n    toJS: function toJS(val, fieldSettings) {\n      return val;\n    },\n    mongoFormatValue: function mongoFormatValue(val, fieldDef, wgtDef) {\n      return val;\n    }\n  },\n  field: {\n    valueSrc: \"field\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(ValueFieldWidget, props);\n    },\n    formatValue: function formatValue(val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) {\n      return isForDisplay ? rightFieldDef.label || val : val;\n    },\n    sqlFormatValue: function sqlFormatValue(val, fieldDef, wgtDef, op, opDef, rightFieldDef) {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    valueSrc: \"func\",\n    factory: function factory(props) {\n      return /*#__PURE__*/_react[\"default\"].createElement(FuncWidget, props);\n    },\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n    customProps: {//showSearch: true\n    }\n  }\n}; //----------------------------  types\n\nvar types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\"equal\", \"not_equal\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\", \"like\", \"not_like\", \"starts_with\", \"ends_with\", \"proximity\"],\n        widgetProps: {},\n        opProps: {}\n      },\n      textarea: {\n        operators: [\"equal\", \"not_equal\", \"is_empty\", \"is_not_empty\", \"is_null\", \"is_not_null\", \"like\", \"not_like\", \"starts_with\", \"ends_with\"],\n        widgetProps: {},\n        opProps: {}\n      },\n      field: {\n        operators: [//unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n        \"equal\", \"not_equal\", \"proximity\" //can exclude if you want\n        ]\n      }\n    }\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      },\n      slider: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\"select_equals\", \"select_not_equals\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"],\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        }\n      },\n      multiselect: {\n        operators: [\"select_any_in\", \"select_not_any_in\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\"multiselect_equals\", \"multiselect_not_equals\", // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\", \"is_not_null\"]\n      }\n    }\n  },\n  \"boolean\": {\n    defaultOperator: \"equal\",\n    widgets: {\n      \"boolean\": {\n        operators: [\"equal\", \"not_equal\", \"is_null\", \"is_not_null\"],\n        widgetProps: {//you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\"equal\", \"not_equal\"]\n      }\n    }\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [// w/o operand\n        \"some\", \"all\", \"none\", // w/ operand - count\n        \"equal\", \"not_equal\", \"less\", \"less_or_equal\", \"greater\", \"greater_or_equal\", \"between\", \"not_between\"],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  }\n}; //----------------------------  settings\n\nvar settings = _objectSpread(_objectSpread({}, _default2.settings), {}, {\n  formatField: function formatField(field, parts, label2, fieldDefinition, config, isForDisplay) {\n    if (isForDisplay) return label2;else return field;\n  },\n  sqlFormatReverse: function sqlFormatReverse(q, operator, reversedOp, operatorDefinition, revOperatorDefinition) {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  formatReverse: function formatReverse(q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) {\n    if (q == undefined) return undefined;\n    if (isForDisplay) return \"NOT (\" + q + \")\";else return \"!(\" + q + \")\";\n  },\n  formatAggr: function formatAggr(whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) {\n    var labelForFormat = opDef.labelForFormat,\n        cardinality = opDef.cardinality;\n\n    if (cardinality == 0) {\n      return \"\".concat(labelForFormat, \" OF \").concat(aggrField, \" HAVE \").concat(whereStr);\n    } else if (cardinality == undefined || cardinality == 1) {\n      return \"COUNT OF \".concat(aggrField, \" WHERE \").concat(whereStr, \" \").concat(labelForFormat, \" \").concat(value);\n    } else if (cardinality == 2) {\n      var valFrom = value.first();\n      var valTo = value.get(1);\n      return \"COUNT OF \".concat(aggrField, \" WHERE \").concat(whereStr, \" \").concat(labelForFormat, \" \").concat(valFrom, \" AND \").concat(valTo);\n    }\n  },\n  canCompareFieldWithField: function canCompareFieldWithField(leftField, leftFieldConfig, rightField, rightFieldConfig) {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\"\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\"\n    }\n  },\n  customFieldSelectProps: {\n    showSearch: true\n  },\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5\n}); //----------------------------\n\n\nvar _default = {\n  conjunctions: conjunctions,\n  operators: operators,\n  widgets: widgets,\n  types: types,\n  settings: settings\n};\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}