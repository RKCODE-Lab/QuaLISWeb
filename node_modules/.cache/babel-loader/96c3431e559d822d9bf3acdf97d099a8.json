{"ast":null,"code":"import _objectSpread from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{ListWrapper}from'../../../components/client-group.styles';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,showRegTypeAddScreen,fetchRegTypeById,updateStore,validateEsignCredential}from'../../../actions';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import DataGrid from'../../../components/data-grid/data-grid.component';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import{showEsign,getControlMap}from'../../../components/CommonScript';import Esign from'../../audittrail/Esign';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var RegistrationType=/*#__PURE__*/function(_React$Component){_inherits(RegistrationType,_React$Component);var _super=_createSuper(RegistrationType);function RegistrationType(props){var _this;_classCallCheck(this,RegistrationType);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData,event.dataState),dataState:event.dataState});};_this.onSaveClick=function(saveType,formRef){var inputData=[];var selectedId=null;inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;if(_this.props.Login.operation===\"update\"){// edit\nselectedId=_this.state.selectedRecord.nregtypecode;dataState=_this.state.dataState;inputData[\"registrationtype\"]={\"nregtypecode\":_this.state.selectedRecord.nregtypecode?_this.state.selectedRecord.nregtypecode:-1,\"nsampletypecode\":_this.state.selectedRecord.nsampletypecode,\"sregtypename\":_this.state.selectedRecord.sregtypename,\"sdescription\":_this.state.selectedRecord.sdescription};}else{//add               \ninputData[\"registrationtype\"]={\"nsampletypecode\":_this.state.selectedRecord.nsampletypecode?_this.state.selectedRecord.nsampletypecode:-1,\"sregtypename\":_this.state.selectedRecord.sregtypename,\"sdescription\":_this.state.selectedRecord.sdescription};}var inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,dataState:dataState,selectedId:selectedId};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteRecord=function(deleteParam){var inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,dataState:_this.state.dataState,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',inputData:{\"registrationtype\":deleteParam.selectedRecord,\"userinfo\":_this.props.Login.userInfo},operation:deleteParam.operation};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:deleteParam.operation,openModal:true,screenName:_this.props.Login.inputParam.displayName,optionsSampleType:_this.props.Login.optionsSampleType//,\n}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.reloadData=function(){var inputParam={inputData:{userinfo:_this.props.Login.userInfo},methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,//displayName:this.props.Login.inputParam.displayName?this.props.Login.inputParam.displayName:'',\nuserInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var _ref=_this.state||{},selectedRecord=_ref.selectedRecord;if(comboData){fieldName='nsampletypecode';selectedRecord['SampleTypes']=comboData;selectedRecord[fieldName]=comboData.value;}else{fieldName='nsampletypecode';selectedRecord['SampleTypes']=comboData;selectedRecord[fieldName]=\"\";}_this.setState({selectedRecord:selectedRecord});};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.handleClose=_this.handleClose.bind(_assertThisInitialized(_this));var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},userRoleControlRights:[],controlMap:new Map(),dataResult:[],dataState:_dataState,action:\"\",mandatoryFields:[{\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"SampleTypes\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}//{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\n]};return _this;}_createClass(RegistrationType,[{key:\"handleClose\",value://to close side out\nfunction handleClose(){var loadEsign=this.props.Login.loadEsign;var openModal=this.props.Login.openModal;var selectedRecord=this.props.Login.selectedRecord;if(this.props.Login.loadEsign){if(this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,optionsChecklistComponent:[],optionsSampleType:[]}};this.props.updateStore(updateInfo);}},{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"ssampletypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"150px\"}];primaryKeyField=\"nregtypecode\";}var addID=this.props.Login.inputParam&&this.state.controlMap.has(\"AddRegistrationType\")&&this.state.controlMap.get('AddRegistrationType').ncontrolcode;var editId=this.props.Login.inputParam&&this.state.controlMap.has(\"EditRegistrationType\")&&this.state.controlMap.get('EditRegistrationType').ncontrolcode;var editParam={screenName:\"RegistrationType\",operation:\"update\",primaryKeyField:primaryKeyField,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolCode:editId};var deleteParam={screenName:\"RegistrationType\",methodUrl:\"RegistrationType\",operation:\"delete\",key:'registrationtype'};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,fetchRecord:this.props.fetchRegTypeById,deleteRecord:this.deleteRecord,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,editParam:editParam,deleteParam:deleteParam,pageable:true,isActionRequired:true,isToolBarRequired:true,gridHeight:'600px',scrollable:\"scrollable\",selectedId:this.props.Login.selectedId,addRecord:function addRecord(){return _this2.props.showRegTypeAddScreen(_this2.props.Login.userInfo,addID);}}):\"\"))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{onSaveClick:this.onSaveClick,operation:this.props.Login.operation,screenName:this.props.Login.inputParam.displayName,closeModal:this.handleClose,show:this.props.Login.openModal,showSaveContinue:false,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord,mandatoryFields:this.state.mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation?this.props.Login.operation:'',onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsampletypecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SAMPLETYPENAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:this.state.selectedRecord.SampleTypes?this.state.selectedRecord.SampleTypes:[],options:this.props.Login.optionsSampleType?this.props.Login.optionsSampleType:[],optionId:\"nsampletypecode\",optionValue:\"ssampletypename\",isMandatory:true,required:true,as:\"select\",onChange:function onChange(event){return _this2.onComboChange(event,\"nsampletypecode\");}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"sregtypename\",placeholder:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONTYPENAME\"}),onChange:function onChange(event){return _this2.onInputOnChange(event);},className:\"\",isMandatory:true,rows:\"1\",label:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONTYPENAME\"}),type:\"textarea\",required:true,value:this.state.selectedRecord?this.state.selectedRecord.sregtypename:\"\",maxLength:\"255\"}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"sdescription\",placeholder:this.props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),onChange:function onChange(event){return _this2.onInputOnChange(event);},isMandatory:false,rows:\"1\",label:this.props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),type:\"textarea\",value:this.state.selectedRecord?this.state.selectedRecord.sdescription:\"\",maxLength:\"255\"})))}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{if(this.props.Login.operation===\"create\"&&this.props.Login.inputParam.saveType===2){this.props.Login.inputParam.formRef.current.reset();}var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState,selectedRecord:{sregtypename:'',sdescription:''}});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){var mandatoryFields=this.props.Login.mandatoryFields?this.props.Login.mandatoryFields:[{\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"SampleTypes\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}//{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\n];this.setState({selectedRecord:this.props.Login.selectedRecord,mandatoryFields:mandatoryFields});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return RegistrationType;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,showRegTypeAddScreen:showRegTypeAddScreen,fetchRegTypeById:fetchRegTypeById,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(RegistrationType));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dynamicpreregdesign/registrationtype/RegistrationType.jsx"],"names":["React","ListWrapper","Row","Col","toast","process","connect","injectIntl","callService","crudMaster","showRegTypeAddScreen","fetchRegTypeById","updateStore","validateEsignCredential","DEFAULT_RETURN","DataGrid","FormTextarea","FormSelectSearch","SlideOutModal","showEsign","getControlMap","Esign","mapStateToProps","state","Login","RegistrationType","props","dataStateChange","event","setState","dataResult","masterData","dataState","onSaveClick","saveType","formRef","inputData","selectedId","userInfo","undefined","operation","selectedRecord","nregtypecode","nsampletypecode","sregtypename","sdescription","inputParam","methodUrl","classUrl","displayName","userRoleControlRights","nformcode","ncontrolcode","updateInfo","typeName","data","loadEsign","screenData","deleteRecord","deleteParam","ncontrolCode","openModal","screenName","optionsSampleType","reloadData","userinfo","validateEsign","sreason","password","onInputOnChange","target","type","name","checked","value","onComboChange","comboData","fieldName","createRef","extractedColumnList","handleClose","bind","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","action","mandatoryFields","optionsChecklistComponent","primaryKeyField","addID","has","get","editId","editParam","key","intl","formatMessage","id","SampleTypes","previousProps","Object","values","map","item","push","current","reset","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {ListWrapper} from  '../../../components/client-group.styles'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { callService, crudMaster ,showRegTypeAddScreen,fetchRegTypeById,updateStore,validateEsignCredential} from '../../../actions';\r\nimport {DEFAULT_RETURN} from '../../../actions/LoginTypes';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport {showEsign,getControlMap} from '../../../components/CommonScript';\r\nimport Esign from '../../audittrail/Esign';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass RegistrationType  extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.handleClose = this.handleClose.bind(this);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data:[], masterStatus:\"\", error:\"\", selectedRecord:{},userRoleControlRights:[],controlMap:new Map(),\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            action:\"\",\r\n            mandatoryFields:[\r\n                {\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"SampleTypes\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                {\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                //{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            ]\r\n        };  \r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n    \r\n    //to close side out\r\n    handleClose (){\r\n        \r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign){          \r\n            if (this.props.Login.operation === \"delete\"){\r\n                loadEsign = false;\r\n                openModal =  false;\r\n            }\r\n            else{\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else{\r\n            openModal =  false;\r\n            selectedRecord ={};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {openModal, loadEsign, selectedRecord,optionsChecklistComponent:[],optionsSampleType:[]}\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    //to open side out\r\n   \r\n    //to perform save action for both add and edit\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let selectedId=null;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState=undefined;\r\n        if ( this.props.Login.operation === \"update\"){\r\n            // edit\r\n            selectedId=this.state.selectedRecord.nregtypecode\r\n            dataState=this.state.dataState\r\n            inputData[\"registrationtype\"] = {\r\n                \"nregtypecode\":this.state.selectedRecord.nregtypecode?this.state.selectedRecord.nregtypecode:-1,\r\n                \"nsampletypecode\":this.state.selectedRecord.nsampletypecode,\r\n                \"sregtypename\":this.state.selectedRecord.sregtypename,\r\n                \"sdescription\":this.state.selectedRecord.sdescription,\r\n            }   \r\n        }\r\n        else{\r\n            //add               \r\n            inputData[\"registrationtype\"] =\r\n                {\r\n                \"nsampletypecode\":this.state.selectedRecord.nsampletypecode?this.state.selectedRecord.nsampletypecode:-1,\r\n                \"sregtypename\":this.state.selectedRecord.sregtypename,\r\n                \"sdescription\":this.state.selectedRecord.sdescription,\r\n            };         \r\n        }   \r\n                \r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl:this.props.Login.inputParam.classUrl,\r\n            displayName:this.props.Login.inputParam.displayName?this.props.Login.inputParam.displayName:'',\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef,dataState,selectedId    \r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        \r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)){\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign:true, screenData:{inputParam, masterData}, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else{\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n       }\r\n              \r\n    }\r\n    //to get the edit record\r\n    \r\n    //to delete a recoed\r\n    deleteRecord = (deleteParam) =>{\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            dataState:this.state.dataState,\r\n            displayName:this.props.Login.inputParam.displayName?this.props.Login.inputParam.displayName:'',\r\n            inputData: {\"registrationtype\" :deleteParam.selectedRecord,\r\n                        \"userinfo\": this.props.Login.userInfo},\r\n                        operation :deleteParam.operation     \r\n                    }       \r\n                            \r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign:true, screenData:{inputParam, masterData},operation:deleteParam.operation,openModal:true,\r\n                        screenName:this.props.Login.inputParam.displayName,optionsSampleType:this.props.Login.optionsSampleType//,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else{\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n    }\r\n\r\n    //to reload data\r\n    reloadData = () =>{\r\n        const inputParam = {\r\n            inputData : {userinfo: this.props.Login.userInfo},\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            //displayName:this.props.Login.inputParam.displayName?this.props.Login.inputParam.displayName:'',\r\n            userInfo: this.props.Login.userInfo\r\n            };\r\n                            \r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    validateEsign = () =>{\r\n        const inputParam = {\r\n                                inputData: {\"userinfo\": {...this.props.Login.userInfo, \r\n                                                        sreason: this.state.selectedRecord[\"esigncomments\"] },\r\n                                             password : this.state.selectedRecord[\"esignpassword\"]\r\n                                            },\r\n                                screenData : this.props.Login.screenData\r\n                            }        \r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    static getDerivedStateFromProps(props, state){\r\n    \r\n        if (props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";           \r\n        } \r\n         \r\n        if (props.Login.error !== state.error){\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }   \r\n        return null;\r\n     }\r\n     \r\n     render(){\r\n        let primaryKeyField = \"\";\r\n        if (this.props.Login.inputParam !== undefined){\r\n            this.extractedColumnList=[\r\n                    {\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"ssampletypename\",\"width\":\"250px\"},\r\n                    {\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\",\"width\":\"250px\"},\r\n                    {\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"150px\"},       \r\n                ]\r\n            primaryKeyField = \"nregtypecode\";\r\n        }\r\n\r\n        const addID = this.props.Login.inputParam && this.state.controlMap.has(\"AddRegistrationType\")\r\n                        && this.state.controlMap.get('AddRegistrationType').ncontrolcode;\r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"EditRegistrationType\")\r\n                        && this.state.controlMap.get('EditRegistrationType').ncontrolcode;\r\n        const editParam = {screenName:\"RegistrationType\", operation:\"update\",  primaryKeyField:primaryKeyField, \r\n                        masterData:this.props.Login.masterData,   userInfo:this.props.Login.userInfo, ncontrolCode:editId};\r\n\r\n        const deleteParam ={screenName:\"RegistrationType\", methodUrl:\"RegistrationType\", operation:\"delete\",key:'registrationtype'};\r\n        \r\n        return(\r\n            <>\r\n            <Row>\r\n                <Col>\r\n                    <ListWrapper className=\"client-list-content\">\r\n                        {this.state.data ?\r\n                            <DataGrid\r\n                                primaryKeyField = {primaryKeyField}\r\n                                data={this.state.data}\r\n                                dataResult = {this.state.dataResult}\r\n                                dataState = {this.state.dataState}\r\n                                dataStateChange = {this.dataStateChange}\r\n                                extractedColumnList = {this.extractedColumnList}\r\n                                fetchRecord = {this.props.fetchRegTypeById}\r\n                                deleteRecord = {this.deleteRecord}\r\n                                reloadData = {this.reloadData}\r\n                                controlMap = {this.state.controlMap}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo} \r\n                                editParam={editParam}\r\n                                deleteParam={deleteParam}\r\n                                pageable={true}\r\n                                isActionRequired={true}\r\n                                isToolBarRequired={true}\r\n                                gridHeight = {'600px'}\r\n                                scrollable={\"scrollable\"}\r\n                                selectedId={this.props.Login.selectedId}\r\n                                addRecord={()=>this.props.showRegTypeAddScreen(this.props.Login.userInfo,addID)}\r\n                            />\r\n                        :\"\"}    \r\n                    \r\n                    </ListWrapper>\r\n                </Col>\r\n            </Row>\r\n            {this.props.Login.openModal?\r\n            <SlideOutModal\r\n                onSaveClick={this.onSaveClick}\r\n                operation={this.props.Login.operation}\r\n                screenName={this.props.Login.inputParam.displayName}\r\n                closeModal={this.handleClose}\r\n                show={this.props.Login.openModal}\r\n                showSaveContinue={false}\r\n                inputParam={this.props.Login.inputParam}\r\n                esign={this.props.Login.loadEsign}\r\n                validateEsign={this.validateEsign}\r\n                selectedRecord={this.state.selectedRecord}\r\n                mandatoryFields={this.state.mandatoryFields}\r\n                addComponent={this.props.Login.loadEsign ? \r\n                    <Esign  operation={this.props.Login.operation?this.props.Login.operation:''}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}                                               \r\n                            selectedRecord={this.state.selectedRecord ||{}}\r\n                            />\r\n                  :\r\n                    <Row> \r\n                        <Col md={12}>\r\n                            <FormSelectSearch\r\n                            name={\"nsampletypecode\"}\r\n                            formLabel={this.props.intl.formatMessage({ id:\"IDS_SAMPLETYPENAME\"})}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            value={this.state.selectedRecord.SampleTypes?this.state.selectedRecord.SampleTypes:[]}\r\n                            options={this.props.Login.optionsSampleType?this.props.Login.optionsSampleType:[]}\r\n                            optionId=\"nsampletypecode\"\r\n                            optionValue=\"ssampletypename\"\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            as={\"select\"}\r\n                            onChange={(event)=>this.onComboChange(event,\"nsampletypecode\")}\r\n                            />\r\n                            <FormTextarea\r\n                            name={\"sregtypename\"}\r\n                            placeholder={this.props.intl.formatMessage({ id:\"IDS_REGISTRATIONTYPENAME\"})}\r\n                            onChange={(event)=>this.onInputOnChange(event)}\r\n                            className=\"\"\r\n                            isMandatory={true}\r\n                            rows=\"1\"\r\n                            label={this.props.intl.formatMessage({ id:\"IDS_REGISTRATIONTYPENAME\"})}\r\n                            type=\"textarea\"\r\n                            required={true}\r\n                            value ={this.state.selectedRecord?this.state.selectedRecord.sregtypename:\"\"}\r\n                            maxLength={\"255\"}\r\n                            />\r\n                            <FormTextarea\r\n                            name={\"sdescription\"}\r\n                            placeholder={this.props.intl.formatMessage({ id:\"IDS_DESCRIPTION\"})}\r\n                            onChange={(event)=>this.onInputOnChange(event)}\r\n                            isMandatory={false}\r\n                            rows=\"1\"\r\n                            label={this.props.intl.formatMessage({ id:\"IDS_DESCRIPTION\"})}\r\n                            type=\"textarea\"\r\n                            value ={this.state.selectedRecord?this.state.selectedRecord.sdescription:\"\"}\r\n                            maxLength={\"255\"}\r\n                            />\r\n                                                      \r\n                        </Col>\r\n                    </Row>\r\n                }/>\r\n                :\"\"}\r\n            </>\r\n            \r\n          );\r\n     }\r\n     \r\n     componentDidUpdate(previousProps){\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData){            \r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode){\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights){\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item=>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({userRoleControlRights, controlMap, data:this.props.Login.masterData, \r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState)});\r\n            }\r\n            else{\r\n                if (this.props.Login.operation === \"create\" && this.props.Login.inputParam.saveType === 2){\r\n                    this.props.Login.inputParam.formRef.current.reset();\r\n                } \r\n                let {dataState}=this.state;\r\n                if(this.props.Login.dataState===undefined){\r\n                    dataState={skip:0,take:this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                } \r\n                this.setState({data:this.props.Login.masterData, \r\n                    dataResult: process(this.props.Login.masterData,dataState),\r\n                    dataState,\r\n                    selectedRecord:{sregtypename:'',sdescription:''}\r\n                });\r\n            }\r\n         }\r\n         else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord ){ \r\n            let mandatoryFields=this.props.Login.mandatoryFields?(this.props.Login.mandatoryFields):[\r\n                {\"idsName\":\"IDS_SAMPLETYPENAME\",\"dataField\":\"SampleTypes\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                {\"idsName\":\"IDS_REGISTRATIONTYPENAME\",\"dataField\":\"sregtypename\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n                //{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            ]\r\n            this.setState({selectedRecord:this.props.Login.selectedRecord,mandatoryFields});\r\n         }       \r\n    }  \r\n    componentWillUnmount(){\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                 masterData :[], inputParam:undefined, operation:null,modalName:undefined\r\n                }\r\n            }\r\n        this.props.updateStore(updateInfo);\r\n    }    \r\n    \r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange=(comboData,fieldName)=>  {\r\n        const {selectedRecord} = this.state || {};\r\n        if(comboData){     \r\n            \r\n            fieldName='nsampletypecode';\r\n            selectedRecord['SampleTypes']=comboData;\r\n            selectedRecord[fieldName] = comboData.value;\r\n        }\r\n        else{\r\n            fieldName='nsampletypecode';\r\n            selectedRecord['SampleTypes']=comboData;\r\n            selectedRecord[fieldName] = \"\";\r\n        }\r\n       \r\n        this.setState({selectedRecord});\r\n    }\r\n }\r\nexport default connect(mapStateToProps, {callService, crudMaster,showRegTypeAddScreen,fetchRegTypeById,\r\n    updateStore,validateEsignCredential})(injectIntl(RegistrationType ));"]},"metadata":{},"sourceType":"module"}