{"ast":null,"code":"import _toConsumableArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{constructOptionList,getControlMap,onSaveMandatoryValidation,searchData,searchJsonData,showEsign,sortData,deleteAttachmentDropZone,onDropAttachFileList,Lims_JSON_stringify}from'../../components/CommonScript';//import SortableTree from 'react-sortable-tree'; \nimport FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DataGrid from'../../components/data-grid/data-grid.component';import{Utils as QbUtils}from\"@react-awesome-query-builder/ui\";import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{callService}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{ListWrapper}from'../../components/client-group.styles';// import ReactTooltip from 'react-tooltip';\nimport{uuid}from\"uuidv4\";import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import{transactionStatus}from'../../components/Enumeration';import Esign from'../audittrail/Esign';import rsapi from'../../rsapi';import AddSampleStorageMapping from'./AddSampleStorageMapping';import Axios from'axios';import Preloader from'../../components/preloader/preloader.component';import{process}from'@progress/kendo-data-query';//import Spreadsheet from '../../components/Spreadsheet/Spreadsheet';\nimport MatrixComponent from'../../components/MatrixComponent';import FilterQueryBuilder from'../../components/FilterQueryBuilder';import{ExcelExport,ExcelExportColumn}from'@progress/kendo-react-excel-export';import{LocalizationProvider}from'@progress/kendo-react-intl';import AddFile from\"../goodsin/AddFile\";var SampleStorageListPreperation=/*#__PURE__*/function(_Component){_inherits(SampleStorageListPreperation,_Component);var _super=_createSuper(SampleStorageListPreperation);function SampleStorageListPreperation(props){var _this$state;var _this;_classCallCheck(this,SampleStorageListPreperation);_this=_super.call(this,props);_this.dragOverCnt=0;_this.isDragDrop=false;_this.SEPARATOR='_';_this.uniqueIDArr=[];_this.countforTree=0;_this.pointedItem=undefined;_this.getitemPath={};_this.openModal=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:true,selectedRecord:{},loadTreeProperties:false,treeData:[{text:\"root\",expanded:true,editable:true,root:true,id:uuid()}],operation:\"create\"}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         openModal: false, selectedRecord: {}\n//     }\n// }\n// this.props.updateStore(updateInfo);\nvar loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedId=_this.props.Login.selectedId;var selectedRecord=_this.state.selectedRecord;//this.props.Login.selectedRecord;\nif(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"Approve\"||_this.props.Login.operation===\"copy\"){loadEsign=false;openModal=false;selectedRecord={};selectedId=null;}else{loadEsign=false;}}else{openModal=false;selectedId=null;selectedRecord={};}// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { openModal, loadEsign, selectedRecord, selectedId }\n// }\n// this.props.updateStore(updateInfo);\n// this.getsamplestoragetransaction({}, this.props.Login.userInfo);\n// if (!this.state.isFilterPopup) {\n//     this.getDynamicFilterExecuteData()\n// }\n_this.setState({selectedRecord:selectedRecord,openModal:false,isInitialRender:true,importTemplate:false,isFilterPopup:false});};_this.onInputChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type===\"checkbox\"){selectedRecord[event.target.name]=event.target.checked;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.loadTreeProperties===true){_this.onSaveProperties(saveType,formRef);}else if(_this.state.openSpreadSheet){_this.CRUDSampleStorageTransaction(_objectSpread(_objectSpread({},_this.state.editedsheetData),{},{nsamplestoragemappingcode:_this.state.isMultiSampleAdd?Object.keys(_this.state.sheetData).map(function(nsamplestoragemappingcode){return nsamplestoragemappingcode;}).join(\",\"):_this.state.editedsheetData.nsamplestoragemappingcode.toString(),nsamplestoragelocationcode:_this.state.editedsheetData.nsamplestoragelocationcode,sheetData:JSON.stringify(_this.state.sheetData?_this.state.sheetData:{}),sheetUpdate:true,userinfo:_this.props.Login.userInfo,isMultiSampleAdd:_this.state.isMultiSampleAdd}),'create');}else{_this.onSaveSampleStorageTransaction(saveType,formRef);}};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.handleDetailPageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.reloadData=function(){_this.onFilterSubmit();};_this.onEditSampleStorageLocation=function(selectedSampleStorageVersion,userInfo,editId){_this.handleSearch();_this.setState({searchedTreeData:undefined});if(_this.searchRef.current){_this.searchRef.current.value=\"\";}var isOnlyDraft=false;if(_this.props.Login.masterData.sampleStorageVersion&&_this.props.Login.masterData.sampleStorageVersion.length>1){isOnlyDraft=true;}_this.props.editSampleStorageLocation(selectedSampleStorageVersion,userInfo,isOnlyDraft,editId);};_this.openStorageMapping=function(addId){_this.addSampleStorageMapping({userInfo:_this.props.Login.userInfo,addId:addId});};_this.deletesamplestoragemapping=function(param){_this.CRUDSampleStorageTransaction({'nsamplestoragelocationcode':_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,'nsamplestoragemappingcode':param.nsamplestoragemappingcode,userinfo:_this.props.Login.userInfo},'delete');};_this.addMultipleSample=function(param){_this.setState({//sheetData: JSON.parse(response[0].data.sheetData),\nopenModal:true,isMultiSampleAdd:true,openSpreadSheet:true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\nloading:false});};_this.opensearch=function(){_this.setState({openModal:true,isFilterPopup:true,selectedRecord:_objectSpread({},_this.state.submittedselectedRecord)||_objectSpread({},_this.state.selectedRecord)});};_this.handleExportClick=function(){var exportField=[{\"idsName\":\"IDS_SAMPLEID\",\"dataField\":\"spositionvalue\",\"width\":\"200px\",\"staticField\":true}];_this.setState({exportField:exportField,export:true});};_this.handleImportTemplate=function(){_this.setState({importTemplate:true,openModal:true,loading:false,selectedRecord:{}});};_this.onDropFile=function(attachedFiles,fieldName,maxSize){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=onDropAttachFileList(selectedRecord[fieldName],attachedFiles,maxSize);_this.setState({selectedRecord:selectedRecord,actionType:\"new\"});};_this.deleteAttachment=function(event,file,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=deleteAttachmentDropZone(selectedRecord[fieldName],file);_this.setState({selectedRecord:selectedRecord,actionType:\"delete\"//fileToDelete:file.name \n});};_this.getImportSampleIDData=function(){var selectedRecord=_this.state.selectedRecord;// ALPD-5582 Added by Abdul on 19 Mar 2025 for validating whether a file has been uploaded or not\nif(selectedRecord['stemplatefilename']&&selectedRecord['stemplatefilename'][0]!==undefined){var formData=new FormData();formData.append(\"ImportFile\",selectedRecord['stemplatefilename'][0]);formData.append(\"nformcode\",_this.props.Login.userInfo&&_this.props.Login.userInfo.nformcode);formData.append(\"userinfo\",JSON.stringify(_this.props.Login.userInfo));formData.append(\"nprojecttypecode\",_this.state.selectedProjectType&&_this.state.selectedProjectType.value?_this.state.selectedProjectType.value:-1);formData.append(\"source\",'view_samplelistprep_');formData.append(\"fieldName\",Lims_JSON_stringify(_this.props.intl.formatMessage({id:\"IDS_SAMPLEID\"})));formData.append(\"label\",'samplestoragelistpreperation');formData.append(\"valuemember\",'nsamplestoragetransactioncode');_this.setState({loading:true});var requestUrl=rsapi.post(\"/samplestoragelistpreperation/getimportsampleiddata\",formData);return requestUrl.then(function(response){var masterData=_this.state.masterData;masterData=_objectSpread(_objectSpread({},masterData),response.data);_this.setState({masterData:_objectSpread({},masterData),loading:false,openModal:false,isFilterPopup:false,importTemplate:false,submittedselectedRecord:_objectSpread({},_this.state.submittedselectedRecord),dataStateChange:{take:10,skip:0},selectedRecord:{}});}).catch(function(error){_this.setState({loading:false});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});}// ALPD-5582 Added by Abdul on 19 Mar 2025 for validating whether a file has been uploaded or not\nelse{toast.info(\"\".concat(_this.props.intl.formatMessage({id:\"IDS_CHOOSE\"}),\" \").concat(_this.props.intl.formatMessage({id:\"IDS_FILE\"})));}};_this.addSample=function(param,nflag){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/getsamplestoragemappingSheetData\",{isMultiSampleAdd:nflag===2?true:false,nsamplestoragemappingcode:nflag===2?_this.state.masterData.samplestoragelistpreperation.map(function(item){return item.nsamplestoragemappingcode;}).join(\",\"):param.nsamplestoragemappingcode.toString()});urlArray=[url1];Axios.all(urlArray).then(function(response){if(nflag===2){_this.setState({sheetData:JSON.parse(response[0].data.sheetData),openModal:true,isMultiSampleAdd:true,openSpreadSheet:true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\nloading:false});}else{_this.setState({sheetData:JSON.parse(response[0].data.sheetData),openModal:true,isMultiSampleAdd:false,openSpreadSheet:true,editedsheetData:param,Rows:param.nrow,columns:param.ncolumn,loading:false});}}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var selectedRecordFilter=_this.state.selectedRecordFilter||{};if(fieldName==='nstoragecategorycode'){return _this.getSampleStorageLocation({userinfo:_this.props.Login.userInfo,nstoragecategorycode:comboData.value},fieldName,comboData);}else if(fieldName==='ncontainertypecode'){return _this.getContainerStructure({userinfo:_this.props.Login.userInfo,ncontainertypecode:comboData.value},fieldName,comboData);}else if(fieldName==='nprojecttypecode'){return _this.getprojectbarcodeconfig(comboData);}else if(fieldName==='ncontainerstructurecode'){selectedRecord['nrow']=comboData.item.nrow?comboData.item.nrow:1;selectedRecord['ncolumn']=comboData.item.ncolumn?comboData.item.ncolumn:1;}else if(fieldName==='nsamplestoragelocationcode'){return _this.getSampleStorageLocation({userinfo:_this.props.Login.userInfo,nstoragecategorycode:_this.state.selectedRecordFilter['nstoragecategorycode'].value,nsamplestoragelocationcode:comboData.value},fieldName,comboData);}if(fieldName==='nsamplestorageversioncode'){selectedRecordFilter[fieldName]=comboData;_this.setState({selectedRecordFilter:selectedRecordFilter});}else{selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord,selectedRecordFilter:selectedRecordFilter});}};_this.onSaveSampleStorageTransaction=function(saveType){var selectedRecord=_this.state.selectedRecord;var containerpathCodeArray=[];if(_this.state.operation==='create'){containerpathCodeArray=selectedRecord['nsamplestoragecontainerpathcode'].map(function(item){return item.value;});}var inputParam={nsamplestoragetransactioncode:selectedRecord['nsamplestoragetransactioncode']?parseInt(selectedRecord['nsamplestoragetransactioncode']):0,nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,nsamplestoragemappingcode:selectedRecord['nsamplestoragemappingcode']?parseInt(selectedRecord['nsamplestoragemappingcode']):0,ncontainertypecode:-1,nproductcode:selectedRecord['nproductcode'].value,ndirectionmastercode:-1,ssamplestoragemappingname:\"-\",nsamplestoragecontainerpathcode:_this.state.operation==='create'?JSON.stringify(containerpathCodeArray):parseInt(selectedRecord['nsamplestoragecontainerpathcode'].value),containerpathsize:containerpathCodeArray.length,nneedposition:4,ncontainerstructurecode:-1,nquantity:selectedRecord['nquantity']?parseInt(selectedRecord['nquantity']):1,userinfo:_this.props.Login.userInfo};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.CRUDSampleStorageTransaction(inputParam,_this.state.operation);}};_this.getsamplestoragetransaction=function(inputParam,userinfo){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/getsamplestoragetransaction\",{userinfo:_this.props.Login.userInfo});urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.childDataChange=function(selectedRecord){_this.setState({selectedRecord:_objectSpread({},selectedRecord),isInitialRender:false});};_this.childSheetDataChange=function(sheetData){_this.setState({// selectedRecord: {\n//     ...this.state.selectedRecord,\n//     sheetData: {\n//         ...this.state.selectedRecord.sheetData,\n//         ...sheetData\n//     }\n// },\nsheetData:_objectSpread({},sheetData),isInitialRender:false});};_this.getActiveSampleStorageMappingById=function(inputParam,userinfo){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/getActiveSampleStorageMappingById\",{nsamplestoragelocationcode:inputParam['selectedSampleStorageLocation'][0].nsamplestoragelocationcode,userinfo:userinfo});urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data)//,\n// selectedRecord: {\n//     ...this.state.selectedRecord\n//    // , sheetData: JSON.parse(response[0].data.selectedSampleStoragemapping.jsondata.value)\n// }\n,loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.filterColumnData=function(filterValue,filterParam){var masterData=filterParam.masterData;var primaryKeyValue=0;var searchedData=undefined;if(filterValue===\"\"){if(masterData[filterParam.inputListName]&&masterData[filterParam.inputListName].length>0){primaryKeyValue=masterData[filterParam.inputListName][0][filterParam.primaryKeyField];}}else{if(filterParam.isjsondata){searchedData=searchJsonData(filterValue,masterData[filterParam.inputListName],filterParam.searchFieldList||[]);}else{searchedData=searchData(filterValue,masterData[filterParam.inputListName],filterParam.searchFieldList||[]);}if(searchedData.length>0){primaryKeyValue=searchedData[0][filterParam.primaryKeyField];}}if(primaryKeyValue!==0){_this.setState({loading:true});return rsapi.post(filterParam.fetchUrl,_objectSpread(_objectSpread({},filterParam.fecthInputObject),{},_defineProperty({},filterParam.primaryKeyField,primaryKeyValue))).then(function(response){masterData[\"searchedData\"]=searchedData;masterData=_objectSpread(_objectSpread({},masterData),response.data);if(filterParam.sortField){sortData(masterData,filterParam.sortOrder,filterParam.sortField);}else{sortData(masterData);}_this.setState({masterData:masterData,loading:false,skip:0,take:10,selectedId:null});}).catch(function(error){_this.setState({loading:false});if(error.response.status===500){toast.error(_this.props.intl.formatMessage({id:error.message}));}else{toast.warn(_this.props.intl.formatMessage({id:error.response.data}));}});}else{masterData[filterParam.selectedObject]=undefined;masterData[\"searchedData\"]=[];Object.keys(masterData).forEach(function(item){if(item!==filterParam.inputListName&&item!==filterParam.selectedObject&&filterParam.unchangeList&&filterParam.unchangeList.indexOf(item)===-1)masterData[item]=[];});_this.setState({masterData:masterData,operation:null,modalName:undefined,loading:false});}};_this.CRUDSampleStorageTransaction=function(inputParam,operation){_this.setState({loading:true});var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/\"+operation+\"samplestoragelistpreperation\",inputParam);urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({isInitialRender:true,selectedRecord:{},masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),openModal:false,loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.onFilterSubmit=function(){_this.setState({loading:true});var inputParamData={nstoragecategorycode:_this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,// nsamplestoragelocationcode: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].value,\n// nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\nuserinfo:_this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/getsamplestoragemapping\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var object={selectedStorageCategoryName:_this.state.selectedRecordFilter[\"nstoragecategorycode\"].item.sstoragecategoryname// ssamplestoragelocationname: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].item.ssamplestoragelocationname,\n// selectedSampleStorageVersion: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].item.nversionno,\n};var filterData=_this.generateBreadCrumData(object);_this.setState({filterData:filterData,masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.onSampleMappingSaveClick=function(){var mandatoryFields=_this.state.openSpreadSheet?[]:_this.state.selectedRecord[\"nneedposition\"]===undefined||_this.state.selectedRecord[\"nneedposition\"]===false?[{\"idsName\":\"IDS_SAMPLESTORAGEMAPPING\",\"dataField\":\"nsamplestoragecontainerpathcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"nproductcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_AVAILABLESPACE\",\"dataField\":\"nquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"}]:[{\"idsName\":\"IDS_SAMPLESTORAGEMAPPING\",\"dataField\":\"nsamplestoragecontainerpathcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"nproductcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_CONTAINERTYPE\",\"dataField\":\"ncontainertypecode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_CONTAINERSTRUCTURENAME\",\"dataField\":\"ncontainerstructurecode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_DIRECTION\",\"dataField\":\"ndirectionmastercode\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_AVAILABLESPACE\",\"dataField\":\"nquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"}];onSaveMandatoryValidation(_this.state.selectedRecord,mandatoryFields,_this.onSaveClick);};_this.dataStateChange=function(event){_this.setState({dataStateChange:event.dataState});};_this.approveSampleStorageMapping=function(event){var inputParamData={};_this.setState({loading:true});inputParamData={nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,userinfo:_this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/approveSampleStorageMapping\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){_this.setState({masterData:_objectSpread(_objectSpread({},_this.state.masterData),response[0].data),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.checkFilterIsEmptyQueryBuilder=function(treeData){//this condition is handle for bulk record only \nif(_this.props.Login&&_this.props.Login.settings&&parseInt(_this.props.Login.settings['69'])===transactionStatus.YES){var isFilterEmpty=true;return isFilterEmpty;}else{var ParentItem=_objectSpread({},treeData);var _isFilterEmpty=false;var childArray=ParentItem.children1;if(childArray&&childArray.length>0&&childArray!==undefined){for(var i=0;i<childArray.length;i++){var childData=childArray[i];if(!childData.hasOwnProperty('children1')){if(childData.properties.operator!==\"is_empty\"&&childData.properties.operator!==\"is_not_empty\"&&childData.properties.operator!==\"is_null\"&&childData.properties.operator!==\"is_not_null\"){_isFilterEmpty=true;return _isFilterEmpty;}}else{if(childData){ParentItem=_this.checkFilterIsEmptyQueryBuilder(childData);if(!ParentItem){return ParentItem;}}}}}return _isFilterEmpty;}};_this.fetchRecord=function(data){_this.setState({loading:true});var selectedRecord=_this.state.selectedRecord;var inputParamData={nsamplestoragelocationcode:_this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,userinfo:_this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/addSampleStorageMapping\",inputParamData);var url2=rsapi.post(\"product/getProduct\",{'userinfo':_this.props.Login.userInfo});var url3=rsapi.post(\"samplestoragelistpreperation/getEditSampleStorageMapping\",{'nsamplestoragemappingcode':data.nsamplestoragemappingcode,'userinfo':_this.props.Login.userInfo});urlArray=[url1,url2,url3];Axios.all(urlArray).then(function(response){var storageMappingMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragecontainerpathcode\",\"scontainerpath\",undefined,undefined,true);var storageMappingMapList=storageMappingMap.get(\"OptionList\");var containerStructure=response[0].data['containerStructure'];var containerTypeMap=constructOptionList(response[0].data['containerType']||[],\"ncontainertypecode\",\"scontainertype\",undefined,undefined,true);var containerTypeList=containerTypeMap.get(\"OptionList\");var directionmasterMap=constructOptionList(response[0].data['directionmaster']||[],\"ndirectionmastercode\",\"sdirection\",undefined,undefined,true);var directionmasterList=directionmasterMap.get(\"OptionList\");var containerstructureMap=constructOptionList(response[2].data['containerStructure']||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,true);var containerstructureList=containerstructureMap.get(\"OptionList\");var productMap=constructOptionList(response[1].data['Product']||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var productList=productMap.get(\"OptionList\");var editedObject=response[2].data.editsampleStorageMapping;storageMappingMapList.unshift({label:editedObject.scontainerpath,value:editedObject.nsamplestoragecontainerpathcode});selectedRecord={ndirectionmastercode:{label:editedObject.sdirection,value:editedObject.ndirectionmastercode},nsamplestoragecontainerpathcode:{label:editedObject.scontainerpath,value:editedObject.nsamplestoragecontainerpathcode},nproductcode:{label:editedObject.sproductname,value:editedObject.nproductcode},ncontainertypecode:{label:editedObject.scontainertype,value:editedObject.ncontainertypecode},ncontainerstructurecode:{label:editedObject.scontainerstructurename,value:editedObject.ncontainerstructurecode},nneedposition:editedObject.nneedposition===3?true:false,directionmasterOptions:directionmasterList,nquantity:editedObject.nquantity,nrow:editedObject.nrow,ncolumn:editedObject.ncolumn,nsamplestoragemappingcode:editedObject.nsamplestoragemappingcode};_this.setState({openSpreadSheet:false,openModal:true,selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{storageMappingMapOptions:storageMappingMapList,productOptions:productList,containerTypeOptions:containerTypeList,containerStructureOptions:containerstructureList,isInitialRender:true}),operation:'update',loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this.setState({loading:false});});};_this.retrievalType=function(){var retrievalType=_this.state.retrievalType;if(retrievalType===1){retrievalType=2;}else{retrievalType=1;}_this.setState({retrievalType:retrievalType});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"agree\"){selectedRecord[event.target.name]=event.target.checked===true?3:4;}}else if(event.target.type==='select-one'){selectedRecord[event.target.name]=event.target.value;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.handlePageChangeFilter=function(event){_this.setState({kendoSkip:event.skip,kendoTake:event.take});};_this.onChange=function(immutableTree,config){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"tree\"]=immutableTree;selectedRecord[\"config\"]=config;selectedRecord[\"filterQueryTreeStr\"]=QbUtils.getTree(immutableTree);selectedRecord['filterquery']=QbUtils.sqlFormat(immutableTree,config);_this.setState({tree:immutableTree,config:config,selectedRecord:selectedRecord});};_this.processWithGroups=function(data,dataState){var aggregates=[{field:\"navailablespace\",aggregate:\"sum\"}];var groups=dataState.group;if(groups){groups.map(function(group){return group.aggregates=aggregates;});}dataState.group=groups;var newDataState=process(data,dataState);// setGroupIds({\n//     data: newDataState.data,\n//     group: dataState.group,\n// });\nreturn newDataState;};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.state=(_this$state={queryBuilderFreezer:[],retrievalType:1,// extractedColumnList: [   \n//     { \"idsName\": \"IDS_STORAGESTRUCTURE\", \"dataField\": \"ssamplestoragelocationname\", \"width\": \"200px\" },\n//     { \"idsName\": \"IDS_SAMPLESTORAGEPATH\", \"dataField\": \"scontainerpath\", \"width\": \"450px\" },\n//     { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"100px\" },\n//     { \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"100px\" },\n//     //{ \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"sprojecttypename\", \"width\": \"100px\" },\n//     //{ \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"width\": \"100px\" },\n//     { \"idsName\": \"IDS_PARTICIPANTS\", \"dataField\": \"sparticipantid\", \"width\": \"100px\" },\n//     //{ \"idsName\": \"IDS_VISITNUMBER\", \"dataField\": \"svisitnumber\", \"width\": \"100px\" },\n//     { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \n//     { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\n//     { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\n//     { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\n//     { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }\n// ],\nsheetData:{},selectedRecordFilter:{},treeData:[{title:'Chicken',children:[{title:'Egg'}]}],toggleAction:false,treeDataView:undefined,toggleActionView:false},_defineProperty(_this$state,\"treeData\",[{//  text: \"root\",\ntext:_this.props.intl.formatMessage({id:\"IDS_ROOT\"}),expanded:true,editable:true,root:true,id:uuid()}]),_defineProperty(_this$state,\"panes\",[{size:'50%',scrollable:false}]),_defineProperty(_this$state,\"selectedRecord\",{}),_defineProperty(_this$state,\"userRoleControlRights\",[]),_defineProperty(_this$state,\"controlMap\",new Map()),_defineProperty(_this$state,\"skip\",0),_defineProperty(_this$state,\"detailSkip\",0),_defineProperty(_this$state,\"detailTake\",10),_defineProperty(_this$state,\"take\",_this.props.Login.settings?_this.props.Login.settings[3]:25),_defineProperty(_this$state,\"splitChangeWidthPercentage\",22),_defineProperty(_this$state,\"selectedItem\",undefined),_defineProperty(_this$state,\"loading\",false),_defineProperty(_this$state,\"dataStateChange\",{take:10,skip:0// group: [\n//     {\n//         field: \"ssamplestoragelocationname\",\n//     },\n// ],\n}),_this$state);var fields={};// if (this.state.extractedColumnList) {\n//     // let newArr=[...[  { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \n//     // { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\n//     // { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\n//     // { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\n//     // { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }]\n//     // ,...this.state.extractedColumnList]\n//     this.state.extractedColumnList.map(field => {\n//         if (field.dataField !== 'ssamplestoragelocationname' && field.dataField !== 'sproductname'\n//             && field.dataField !== 'sprojecttypename' && field.dataField !== 'svisitnumber') {\n//             fields = {\n//                 ...fields,\n//                 [field.dataField]: {\n//                     \"label\":\n//                         this.props.intl.formatMessage({\n//                             id: field.idsName,\n//                         })\n//                     ,\n//                     \"type\": field.dataField === 'navailablespace' ? \"number\" : \"text\",\n//                     \"valueSources\": [\"value\", \"func\"],\n//                     \"mainWidgetProps\": {\n//                         \"valueLabel\": \"Name\",\n//                         \"valuePlaceholder\": this.props.intl.formatMessage({\n//                             id: field.idsName\n//                         })\n//                     }\n//                 }\n//             }\n//         }\n//     });\n// }\n_this.state=_objectSpread(_objectSpread({},_this.state),{},{'fields':fields});_this.searchRef=React.createRef();_this.dragClue=React.createRef();_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(SampleStorageListPreperation,[{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps,previousState){var _this2=this;var _this$state2=this.state,filterData=_this$state2.filterData,storageCategoryOptions=_this$state2.storageCategoryOptions,selectedRecord=_this$state2.selectedRecord,controlMap=_this$state2.controlMap,userRoleControlRights=_this$state2.userRoleControlRights,storageLocationOptions=_this$state2.storageLocationOptions,sampleStorageVersionOptions=_this$state2.sampleStorageVersionOptions,masterData=_this$state2.masterData,selectedRecordFilter=_this$state2.selectedRecordFilter,fields=_this$state2.fields,selectedProjectType=_this$state2.selectedProjectType,selectedProjectTypeList=_this$state2.selectedProjectTypeList,queryBuilderFreezer=_this$state2.queryBuilderFreezer;var bool=false;///////////////////////////////\nif(this.props.Login.masterData.sampleStorageLocation!==previousProps.Login.masterData.sampleStorageLocation){bool=true;this.props.Login.masterData.sampleStorageLocation&&this.props.Login.masterData.sampleStorageLocation.map(function(item){return queryBuilderFreezer.push({\"value\":item.nsamplestoragelocationcode,\"title\":item.ssamplestoragelocationname});});fields=_objectSpread(_objectSpread({},fields),{},{'nsamplestoragelocationcode':{\"label\":this.props.intl.formatMessage({id:\"IDS_STORAGESTRUCTURENAME\"}),\"type\":\"select\",\"valueSources\":[\"value\"],\"fieldSettings\":{\"listValues\":queryBuilderFreezer}}});}// if (this.props.Login.masterData.sampleType !== previousProps.Login.masterData.sampleType) {\n//     let queryBuilderFreezer = [];\n//     bool = true;\n//     this.props.Login.masterData.sampleType && this.props.Login.masterData.sampleType.map(\n//         (item) => queryBuilderFreezer.push({ \"value\": item.nproductcode, \"title\": item.sproductname })\n//     )\n//     fields = {\n//         ...fields,\n//         'nproductcode': {\n//             \"label\": this.props.intl.formatMessage({\n//                 id: \"IDS_PRODUCT\",\n//             }),\n//             \"type\": \"select\",\n//             \"valueSources\": [\"value\"],\n//             \"fieldSettings\": {\n//                 \"listValues\": queryBuilderFreezer\n//             }\n//         }\n//     }\n// }\n// if (this.props.Login.masterData.ProjectType !== previousProps.Login.masterData.ProjectType) {\n//     let queryBuilderFreezer = [];\n//     bool = true;\n//     this.props.Login.masterData.ProjectType && this.props.Login.masterData.ProjectType.map(\n//         (item) => queryBuilderFreezer.push({ \"value\": item.nprojecttypecode, \"title\": item.sprojecttypename })\n//     )\n//     fields = {\n//         ...fields,\n//         'nprojecttypecode': {\n//             \"label\": this.props.intl.formatMessage({\n//                 id: \"IDS_PROJECTTYPE\",\n//             }),\n//             \"type\": \"select\",\n//             \"valueSources\": [\"value\"],\n//             \"fieldSettings\": {\n//                 \"listValues\": queryBuilderFreezer\n//             }\n//         }\n//     }\n// } if (this.props.Login.masterData.VisitNumber !== previousProps.Login.masterData.VisitNumber) {\n//     let queryBuilderFreezer = [];\n//     bool = true;\n//     this.props.Login.masterData.VisitNumber && this.props.Login.masterData.VisitNumber.map(\n//         (item) => queryBuilderFreezer.push({ \"value\": item.nvisitnumbercode, \"title\": item.svisitnumber })\n//     )\n//     fields = {\n//         ...fields,\n//         'nvisitnumbercode': {\n//             \"label\": this.props.intl.formatMessage({\n//                 id: \"IDS_VISITNUMBER\",\n//             }),\n//             \"type\": \"select\",\n//             \"valueSources\": [\"value\"],\n//             \"fieldSettings\": {\n//                 \"listValues\": queryBuilderFreezer\n//             }\n//         }\n//     }\n// }\n///////////////////////////////\nif(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){bool=true;userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);}if(this.props.Login.masterData.filterStorageCategory!==previousProps.Login.masterData.filterStorageCategory){bool=true;var filterStorageCategorylist=constructOptionList(this.props.Login.masterData.filterStorageCategory||[],\"nstoragecategorycode\",\"sstoragecategoryname\",undefined,undefined,undefined);storageCategoryOptions=filterStorageCategorylist.get(\"OptionList\");if(this.props.Login.masterData.selectedStorageCategory){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nstoragecategorycode:storageCategoryOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedStorageCategory.nstoragecategorycode;})[0]});}}if(this.props.Login.masterData.sampleStorageLocation!==previousProps.Login.masterData.sampleStorageLocation){bool=true;var sampleStorageLocationList=constructOptionList(this.props.Login.masterData.sampleStorageLocation||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",undefined,undefined,undefined);storageLocationOptions=sampleStorageLocationList.get(\"OptionList\");if(this.props.Login.masterData.selectedSampleStorageLocation){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestoragelocationcode:storageLocationOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode;})[0]});}}if(this.props.Login.masterData.sampleStorageVersion!==previousProps.Login.masterData.sampleStorageVersion){bool=true;var sampleStorageVersionList=constructOptionList(this.props.Login.masterData.sampleStorageVersion||[],\"nsamplestorageversioncode\",\"nversionno\",undefined,undefined,undefined);sampleStorageVersionOptions=sampleStorageVersionList.get(\"OptionList\");if(this.props.Login.masterData.selectedSampleStorageVersion){selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestorageversioncode:sampleStorageVersionOptions.filter(function(item){return item.value===_this2.props.Login.masterData.selectedSampleStorageVersion.nsamplestorageversioncode;})[0]});}}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;masterData=this.props.Login.masterData;selectedProjectType={label:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.sprojecttypename,value:this.props.Login.masterData.selectedProjectType&&this.props.Login.masterData.selectedProjectType.nprojecttypecode};selectedProjectTypeList=this.props.Login.masterData.selectedProjectTypeList;var _filterStorageCategorylist=constructOptionList(this.props.Login.masterData.projectbarcodeconfig||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,undefined);masterData['projectbarcodeconfig']=_filterStorageCategorylist.get(\"OptionList\");if(masterData.samplestoragelistpreperation===undefined){masterData['samplestoragelistpreperation']=[];}filterData=this.generateBreadCrumData(this.props.Login.masterData);}if(this.state.masterData!==previousState.masterData){bool=true;filterData=this.generateBreadCrumData(this.state.masterData);}// ALPD-5531 added by Abdul 07-Mar-2025 for Handling Export template Click\nif(this.state.export){this._excelExportHeader.save();this.setState({export:false});}// ALPD-5531 End\nif(bool){this.setState({storageCategoryOptions:storageCategoryOptions,filterData:filterData,selectedRecord:selectedRecord,controlMap:controlMap,userRoleControlRights:userRoleControlRights,storageLocationOptions:storageLocationOptions,sampleStorageVersionOptions:sampleStorageVersionOptions,masterData:masterData,selectedRecordFilter:selectedRecordFilter,fields:fields,selectedProjectType:selectedProjectType,selectedProjectTypeList:selectedProjectTypeList,queryBuilderFreezer:queryBuilderFreezer});}}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height-50});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(obj){var breadCrumbData=[];if(this.state.masterData&&this.state.masterData.filterStorageCategory){breadCrumbData.push({\"label\":\"IDS_STORAGECATEGORY\",\"value\":obj.selectedStorageCategoryName&&obj.selectedStorageCategoryName!==null?obj.selectedStorageCategoryName:\"NA\"}// ,\n// {\n//     \"label\": \"IDS_STORAGECATEGORYLOCATION\",\n//     \"value\": obj.selectedSampleStorageLocation &&\n//         obj.selectedSampleStorageLocation.ssamplestoragelocationname !== null ?\n//         obj.selectedSampleStorageLocation.ssamplestoragelocationname : \"NA\"\n// },\n// {\n//     \"label\": \"IDS_STORAGECATEGORYVERSION\",\n//     \"value\": obj.selectedSampleStorageVersion &&\n//         obj.selectedSampleStorageVersion.nversionno !== null ?\n//         obj.selectedSampleStorageVersion.nversionno : \"NA\"\n// }\n);}return breadCrumbData;}},{key:\"getSampleStorageLocation\",value:function getSampleStorageLocation(inputData,fieldName,comboData){var _this3=this;var selectedRecordFilter=this.state.selectedRecordFilter||{};var inputParamData={};this.setState({loading:true});if(fieldName==='nsamplestoragelocationcode'){inputParamData={nstoragecategorycode:selectedRecordFilter['nstoragecategorycode'].value,nsamplestoragelocationcode:comboData.value,userinfo:inputData.userinfo};}else{inputParamData={nstoragecategorycode:comboData.value,userinfo:inputData.userinfo};}var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/getsamplestoragemapping\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var _this3$state=_this3.state,storageLocationOptions=_this3$state.storageLocationOptions,sampleStorageVersionOptions=_this3$state.sampleStorageVersionOptions;var sampleStorageLocationList=constructOptionList(response[0].data.sampleStorageLocation||[],\"nsamplestoragelocationcode\",\"ssamplestoragelocationname\",undefined,undefined,undefined);storageLocationOptions=sampleStorageLocationList.get(\"OptionList\");var sampleStorageVersionList=constructOptionList(response[0].data.sampleStorageVersion||[],\"nsamplestorageversioncode\",\"nversionno\",undefined,undefined,undefined);sampleStorageVersionOptions=sampleStorageVersionList.get(\"OptionList\");selectedRecordFilter=_objectSpread(_objectSpread({},selectedRecordFilter),{},{nsamplestoragelocationcode:storageLocationOptions.length>0?storageLocationOptions[0]:[],nsamplestorageversioncode:sampleStorageVersionOptions.length>0?sampleStorageVersionOptions[0]:[]});_this3.setState({storageLocationOptions:storageLocationOptions,sampleStorageVersionOptions:sampleStorageVersionOptions,selectedRecordFilter:_objectSpread(_objectSpread({},selectedRecordFilter),{},_defineProperty({},fieldName,comboData)),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this3.setState({loading:false});});}},{key:\"addSampleStorageMapping\",value:function addSampleStorageMapping(){var _this4=this;this.setState({loading:true});var selectedRecord=this.state.selectedRecord;var inputParamData={// nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\nnsamplestoragelocationcode:this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,// nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\nuserinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/addSampleStorageMapping\",inputParamData);var url2=rsapi.post(\"product/getProduct\",{'userinfo':this.props.Login.userInfo});var url3=rsapi.post(\"containertype/getContainerType\",{'userinfo':this.props.Login.userInfo});urlArray=[url1,url2];Axios.all(urlArray).then(function(response){var storageMappingMap=constructOptionList(response[0].data['samplestoragecontainerpath']||[],\"nsamplestoragecontainerpathcode\",\"scontainerpath\",undefined,undefined,true);var storageMappingMapList=storageMappingMap.get(\"OptionList\");var containerStructure=response[0].data['containerStructure'];var containerTypeMap=constructOptionList(response[0].data['containerType']||[],\"ncontainertypecode\",\"scontainertype\",undefined,undefined,true);var containerTypeList=containerTypeMap.get(\"OptionList\");var directionmasterMap=constructOptionList(response[0].data['directionmaster']||[],\"ndirectionmastercode\",\"sdirection\",undefined,undefined,true);var directionmasterList=directionmasterMap.get(\"OptionList\");var containerstructureMap=constructOptionList(response[0].data['containerStructure']||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,true);var containerstructureList=containerstructureMap.get(\"OptionList\");var productMap=constructOptionList(response[1].data['Product']||[],\"nproductcode\",\"sproductname\",undefined,undefined,true);var productList=productMap.get(\"OptionList\");_this4.setState({openModal:true,selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{storageMappingMapOptions:storageMappingMapList,productOptions:productList,containerTypeOptions:containerTypeList,directionmasterOptions:directionmasterList,// ncontainertypecode: containerTypeList[0],\n// containerStructureOptions: containerstructureList,\n// ncontainerstructurecode: containerstructureList[0],\nnrow:containerStructure.length>0?containerStructure[0].nrow:1,ncolumn:containerStructure.length>0?containerStructure[0].ncolumn:1,isInitialRender:true}),openSpreadSheet:false,operation:'create',loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this4.setState({loading:false});});}},{key:\"getprojectbarcodeconfig\",value:function getprojectbarcodeconfig(comboData){var _this5=this;var inputParamData={};this.setState({loading:true});inputParamData={nprojecttypecode:comboData.value,userinfo:this.props.Login.userInfo};var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/getProjectbarcodeconfig\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var masterData=_this5.state.masterData;var submittedselectedRecord=_this5.state.submittedselectedRecord;if(_this5.state.selectedProjectType.value!==comboData.value){masterData=_objectSpread(_objectSpread({},masterData),{},{samplestoragelistpreperation:[]});submittedselectedRecord={};}_this5.setState({masterData:masterData,submittedselectedRecord:submittedselectedRecord,selectedProjectTypeList:sortData(response[0].data.selectedProjectTypeList),selectedProjectType:{label:comboData.label,value:comboData.value},selectedRecord:{nprojecttypecode:{label:comboData.label,value:comboData.value}},loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this5.setState({loading:false});});}},{key:\"getContainerStructure\",value:function getContainerStructure(inputData,fieldName,comboData){var _this6=this;var inputParamData={};this.setState({loading:true});inputParamData={ncontainertypecode:comboData.value,userinfo:inputData.userinfo};var urlArray=[];var url1=rsapi.post(\"samplestoragelistpreperation/getContainerStructure\",inputParamData);urlArray=[url1];Axios.all(urlArray).then(function(response){var _this6$state=_this6.state,containerStructureOptions=_this6$state.containerStructureOptions,selectedRecord=_this6$state.selectedRecord;var containerStructureList=constructOptionList(response[0].data.containerStructure||[],\"ncontainerstructurecode\",\"scontainerstructurename\",undefined,undefined,undefined);containerStructureOptions=containerStructureList.get(\"OptionList\");selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{nrow:containerStructureOptions.length>0?containerStructureOptions[0].item.nrow:1,ncolumn:containerStructureOptions.length>0?containerStructureOptions[0].item.ncolumn:1,ncontainerstructurecode:containerStructureOptions.length>0?containerStructureOptions[0]:[],containerStructureOptions:containerStructureOptions.length>0?_toConsumableArray(containerStructureOptions):[]});_this6.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},_defineProperty({},fieldName,comboData)),loading:false});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}_this6.setState({loading:false});});}},{key:\"getSelectedBarcodeData\",value:function getSelectedBarcodeData(inputParam){var _this7=this;this.setState({loading:true});var selectedRecord=this.state.selectedRecord||{};var urlArray=[];var url1=rsapi.post(\"/samplestoragelistpreperation/getSelectedBarcodeData\",{nprojecttypecode:this.state.selectedProjectType.value,spositionvalue:inputParam.spositionvalue});urlArray=[url1];Axios.all(urlArray).then(function(response){_this7.setState({selectedBarcodeValue:_objectSpread({},response[0].data['selectedBarcodeValue']),loading:false});}).catch(function(error){_this7.setState({loading:false});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});}//ALPD-4635\n},{key:\"getDynamicFilterExecuteData\",value:function getDynamicFilterExecuteData(nflag){var _this8=this;var selectedRecord=this.state.selectedRecord||{};if(nflag===2?true:selectedRecord.filterquery&&selectedRecord.filterquery!==\"\"){var isFilterEmpty=this.checkFilterIsEmptyQueryBuilder(selectedRecord.filterQueryTreeStr);if(isFilterEmpty){this.setState({loading:true});var obj={// ...inputParam.component, \nlabel:'samplestoragelistpreperation',valuemember:'nsamplestoragetransactioncode',filterquery:nflag===2?this.state.submittedselectedRecord.filterquery+\" and nprojecttypecode=\"+this.state.selectedProjectType.value:selectedRecord.filterquery+\" and nprojecttypecode=\"+this.state.selectedProjectType.value// , source: 'view_samplelistprep_' + this.state.selectedProjectType.value\n,source:'view_samplelistprep_',userinfo:this.props.Login.userInfo,nprojecttypecode:this.state.selectedProjectType.value};var urlArray=[];var url1=rsapi.post(\"/samplestoragelistpreperation/getdynamicfilterexecutedata\",obj);urlArray=[url1];Axios.all(urlArray).then(function(response){var masterData=_this8.state.masterData;masterData=_objectSpread(_objectSpread({},masterData),response[0].data);_this8.setState({masterData:_objectSpread({},masterData),loading:false,openModal:false,isFilterPopup:false,submittedselectedRecord:nflag===2?_objectSpread({},_this8.state.submittedselectedRecord):_objectSpread({},selectedRecord),dataStateChange:{take:10,skip:0},selectedRecord:{},displayQuery:_this8.state.tree?QbUtils.queryString(_this8.state.tree,_this8.state.config,true):\"\"});}).catch(function(error){_this8.setState({loading:false});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});}else{toast.warn(this.props.intl.formatMessage({id:\"IDS_PROVIDEONEMOREFILTERDATAWITHNOTNULLOPERATOR\"}));}}else{toast.warn(this.props.intl.formatMessage({id:\"IDS_SELECTAFILTER\"}));}}// getDynamicFilterExecuteData(nflag) {\n//     this.setState({ loading: true })\n//     let selectedRecord = this.state.selectedRecord || {};\n//     let obj = {// ...inputParam.component, \n//         label: 'samplestoragelistpreperation', valuemember: 'nsamplestoragetransactioncode',\n//         filterquery:   \n//         selectedRecord.filterquery, source: 'view_sampleretrieval', userinfo: this.props.Login.userInfo\n//     }\n//     let urlArray = [];\n//     const url1 = rsapi.post(\"/samplestoragelistpreperation/getdynamicfilterexecutedata\", obj);\n//     urlArray = [url1];\n//     Axios.all(urlArray)\n//         .then(response => {\n//             console.log(response)\n//             let masterData = this.state.masterData\n//             masterData = { ...masterData, ...response[0].data }\n//             this.setState({\n//                 masterData: { ...masterData },\n//                 loading: false,\n//                 openModal: false,\n//                 submittedselectedRecord: nflag === 2 ?\n//                     { ...this.state.submittedselectedRecord }\n//                     :\n//                     { ...selectedRecord }\n//                 ,\n//                 isFilterPopup: false,\n//                 selectedRecord: {}\n//             })\n//         })\n//         .catch(error => {\n//             this.setState({\n//                 loading: false\n//             });\n//             if (error.response.status === 500) {\n//                 toast.error(error.message);\n//             }\n//             else {\n//                 toast.info(error.response.data.rtn);\n//             }\n//         })\n// }\n},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.state.openModal&&nextState.isInitialRender===false&&nextState.selectedRecord!==this.state.selectedRecord){return false;}else if(this.state.openModal&&nextState.isInitialRender===false&&nextState.sheetData!==this.state.sheetData){return false;}else{return true;}}},{key:\"gridfillingColumn\",value:function gridfillingColumn(data){//  const tempArray = [];\n// const temparray = data && data.map((option) => {\n//     return { \"idsName\": option.sfieldname, \"dataField\": option.sfieldname, \"width\": \"200px\" };\n// });\n// return temparray;\nvar temparray1=[{\"idsName\":\"IDS_SAMPLEID\",\"dataField\":\"spositionvalue\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_STORAGESTRUCTURE\",\"dataField\":\"ssamplestoragelocationname\",\"width\":\"200px\"},{\"idsName\":\"IDS_PATHWITHPOSITION\",\"dataField\":\"scontainerpathwithposition\",\"width\":\"500px\",\"staticField\":true},{\"idsName\":\"IDS_CONTAINERID\",\"dataField\":\"sboxid\",\"width\":\"200px\",\"staticField\":true},// { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"200px\", \"staticField\": true },\n{\"idsName\":\"IDS_QUANTITY\",\"dataField\":\"nquantity\",\"width\":\"200px\",\"staticField\":true},{\"idsName\":\"IDS_UNIT\",\"dataField\":\"sunitname\",\"width\":\"200px\",\"staticField\":true}];var temparray2=data&&data.map(function(option){return{\"idsName\":option.sfieldname,\"dataField\":option.sfieldname,\"width\":\"200px\"};});var newArray=[].concat(temparray1,_toConsumableArray(temparray2));return newArray;}},{key:\"render\",value:function render(){var _this9=this;var addId=this.state.controlMap.has(\"Add samplestoragelistpreperation\")&&this.state.controlMap.get(\"Add samplestoragelistpreperation\").ncontrolcode;var editId=this.state.controlMap.has(\"Edit SampleStorageLocation\")&&this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"Delete SampleStorageLocation\")&&this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;var copyId=this.state.controlMap.has(\"Copy SampleStorageLocation\")&&this.state.controlMap.get(\"Copy SampleStorageLocation\").ncontrolcode;var approveId=this.state.controlMap.has(\"Approve SampleStorageLocation\")&&this.state.controlMap.get(\"Approve SampleStorageLocation\").ncontrolcode;var extractedColumnList=this.state.selectedProjectTypeList?this.gridfillingColumn(this.state.selectedProjectTypeList):[];var fields={};if(extractedColumnList.length>0){extractedColumnList.map(function(field){field.hasOwnProperty(\"staticField\")?fields=_objectSpread(_objectSpread({},fields),{},_defineProperty({},field.dataField,{\"label\":_this9.props.intl.formatMessage({id:field.idsName}),\"type\":\"text\",\"valueSources\":[\"value\",\"func\"],\"mainWidgetProps\":{\"valueLabel\":\"Name\",\"valuePlaceholder\":_this9.props.intl.formatMessage({id:field.idsName})}})):field.dataField==='ssamplestoragelocationname'&&_this9.state.queryBuilderFreezer.length>0?fields=_objectSpread(_objectSpread({},fields),{},{'nsamplestoragelocationcode':{\"label\":_this9.props.intl.formatMessage({id:\"IDS_STORAGESTRUCTURENAME\"}),\"type\":\"select\",\"valueSources\":[\"value\"],\"fieldSettings\":{\"listValues\":_this9.state.queryBuilderFreezer}}}):fields=_objectSpread(_objectSpread({},fields),{},_defineProperty({},'\"'+field.dataField+'\"',{\"label\":field.dataField,\"type\":\"text\",\"valueSources\":[\"value\",\"func\"],\"mainWidgetProps\":{\"valueLabel\":\"Name\",\"valuePlaceholder\":field.dataField}}));});}var filterParam={inputListName:\"sampleStorageLocation\",selectedObject:\"selectedSampleStorageLocation\",primaryKeyField:\"nsamplestoragelocationcode\",fetchUrl:\"samplestoragelistpreperation/getActiveSampleStorageMappingById\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"ssamplestoragelocationname\"]};var breadCrumbData=this.state.filterData||[];var confirmMessage=new ConfirmMessage();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Preloader,{loading:this.state.loading}),/*#__PURE__*/ //this.state.retrievalType === 1 ?\nReact.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nprojecttypecode\",as:\"select\",onChange:function onChange(event){return _this9.onComboChange(event,'nprojecttypecode');},formLabel:this.props.intl.formatMessage({id:\"IDS_PROJECTTYPE\"}),isMandatory:this.state.selectedRecord[\"nneedposition\"],value:this.state.selectedProjectType?this.state.selectedProjectType||[]:[],options:this.state.masterData&&this.state.masterData.projectbarcodeconfig||[],optionId:\"value\",optionValue:\"label\",isMulti:false,isDisabled:false,isSearchable:false,isClearable:false}))),this.state.selectedProjectTypeList&&/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid// isDownloadPDFRequired={this.state.masterData && this.state.masterData.samplestoragelistpreperation &&\n//     this.processWithGroups(this.state.masterData.samplestoragelistpreperation || [],\n//         this.state.dataStateChange ? this.state.dataStateChange : {\n//             take: 10,\n//             skip: 0\n//         }).data.length > 0 ?\n//     true : false}\n// isDownloadExcelRequired={this.state.masterData && this.state.masterData.samplestoragelistpreperation &&\n//     this.processWithGroups(this.state.masterData.samplestoragelistpreperation || [],\n//         this.state.dataStateChange ? this.state.dataStateChange : {\n//             take: 10,\n//             skip: 0\n//         }).data.length > 0 ?\n//     true : false}\n,{isCustomButton:true,customButtonlist:[{label:'IDS_SEARCH',id:{},onClick:function onClick(){return _this9.opensearch();},controlname:'faSearch'},// ALPD 5531 Start Button from export and bulk search Added by Abdul Gaffoor A on 07/03/2025\n{label:'IDS_EXPORTTEMPLATE',// id: {},\nonClick:function onClick(){return _this9.handleExportClick();},controlname:'faFileExcel'},{label:'IDS_BULKSEARCH',// id: {},\nonClick:function onClick(){return _this9.handleImportTemplate();},controlname:'faFileImport'}// ALPD 5531 End\n],isRefreshRequired:false// onGroupChange={this.handleGroupChange}\n,primaryKeyField:'nsamplestoragetransactioncode'/*data={this.state.masterData &&\r\n                                                this.state.masterData.samplestoragelistpreperation}*/ //ALPD-4767--Vignesh R(29-08-2024)\n,data:this.state.masterData&&this.state.masterData.samplestoragelistpreperation?this.state.masterData.samplestoragelistpreperation.map(function(item){return _objectSpread(_objectSpread({},item),JSON.parse(item.jsondata.value)||{});}):[]/*dataResult={this.state.masterData &&\r\n                                                this.state.masterData.samplestoragelistpreperation ?\r\n                                                process(this.state.masterData.samplestoragelistpreperation || [],\r\n                                                    this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }) : []\r\n                                                // this.processWithGroups(this.state.masterData.samplestoragelistpreperation || [],\r\n                                                //     this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                //         take: 10,\r\n                                                //         skip: 0\r\n                                                //     })\r\n                                            }*/ //ALPD-4767--Vignesh R(29-08-2024)\n,dataResult:this.state.masterData&&this.state.masterData.samplestoragelistpreperation?process(this.state.masterData.samplestoragelistpreperation.map(function(item){return _objectSpread(_objectSpread({},item),JSON.parse(item.jsondata.value));})||[],this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10}):[]// this.processWithGroups(this.state.masterData.samplestoragelistpreperation || [],\n//     this.state.dataStateChange ? this.state.dataStateChange : {\n//         take: 10,\n//         skip: 0\n//     })\n,dataState:this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10},dataStateChange:this.dataStateChange,extractedColumnList:extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,userInfo:this.props.Login.userInfo,deleteRecord:this.deleteRecord,addRecord:function addRecord(){return _this9.openStorageMapping();},pageable:true,scrollable:'scrollable'// isComponent={true}\n,gridHeight:'600px'// isActionRequired={true}\n,isToolBarRequired:true//ATE234 Janakumar ALPD-5577 Sample Storage-->while download the pdf, screen getting freezed\n,isDownloadPDFRequired:false,isDownloadExcelRequired:true// actionIcons={\n//     [{\n//         title: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }),\n//         controlname: \"faPenSquare\",\n//         hidden: false,\n//         objectName: \"add\",\n//         onClick: (param) => this.addSample(param, 1)\n//     }]}\n}),\" \")),this.state.export?/*#__PURE__*/React.createElement(LocalizationProvider,null,/*#__PURE__*/React.createElement(ExcelExport,{data:[],collapsible:true,fileName:this.props.Login.displayName&&this.props.Login.displayName,ref:function ref(exporter){_this9._excelExportHeader=exporter;}},_toConsumableArray(this.state.exportField).map(function(item){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this9.props.intl.formatMessage({id:item.idsName}),width:200});}))):\"\"))),this.state.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.state.openModal,closeModal:this.closeModal,hideSave:true,showSubmit:true,size:this.state.openSpreadSheet||this.state.isFilterPopup?'xl':\"\",operation:\"\",inputParam:this.props.Login.inputParam,screenName:this.state.isFilterPopup?\"\":this.state.isMultiSampleAdd?this.props.intl.formatMessage({id:\"IDS_STORAGESTRUCTURE\"}):this.state.importTemplate?this.props.intl.formatMessage({id:\"IDS_IMPORTSAMPLEID\"}):this.state.editedsheetData.scontainerpath,onSaveClick:this.state.isFilterPopup?this.getDynamicFilterExecuteData.bind(this):this.state.importTemplate?this.getImportSampleIDData:this.onSampleMappingSaveClick,esign:this.props.Login.loadEsign// className={\"wide-popup\"}\n,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},addComponent:this.state.isFilterPopup?/*#__PURE__*/React.createElement(FilterQueryBuilder,{fields:fields,isSampleStorage:true,queryArray:this.state.queryArray,skip:this.state.kendoSkip,take:this.state.kendoTake,onChange:this.onChange,tree:this.props.Login.tree!==undefined?this.props.Login.tree:this.state.selectedRecord.tree,gridColumns:this.slideList,filterData:this.props.Login.slideResult||[],handlePageChange:this.handlePageChangeFilter,static:true,userInfo:this.props.Login.userInfo,updateStore:this.props.updateStore}):this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.state.openSpreadSheet?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(MatrixComponent,{Rows:this.state.Rows||1,userInfo:this.props.Login.userInfo,columns:this.state.columns||1,selectedRecord:this.state.selectedRecord.sheetData||{},sheetData:this.state.sheetData||{},isMultiSampleAdd:this.state.isMultiSampleAdd,childSheetDataChange:this.childSheetDataChange,editedsheetData:this.state.editedsheetData,multipleSheetData:this.state.masterData&&this.state.masterData.samplestoragelistpreperation&&process(this.state.masterData.samplestoragelistpreperation||[],this.state.dataStateChange?this.state.dataStateChange:{skip:0,take:10}).data})):// ALPD-5531 added by Abdul 07-Mar-2025 for Handling Export template Click\nthis.state.importTemplate?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AddFile,{selectedRecord:this.state.selectedRecord,onDrop:this.onDropFile,deleteAttachment:this.deleteAttachment})):/*#__PURE__*/ // ALPD-5531 End\nReact.createElement(AddSampleStorageMapping,{operation:this.state.operation,selectedRecordFilter:this.state.selectedRecordFilter,onInputChange:function onInputChange(e){return _this9.onInputChange(e);},onComboChange:this.onComboChange,selectedRecord:this.state.selectedRecord||{},childDataChange:this.childDataChange,userInfo:this.props.Login.userInfo})}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return SampleStorageListPreperation;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService})(injectIntl(SampleStorageListPreperation));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/basemaster/SampleStorageListPreperation.jsx"],"names":["React","Component","connect","injectIntl","Row","Col","toast","constructOptionList","getControlMap","onSaveMandatoryValidation","searchData","searchJsonData","showEsign","sortData","deleteAttachmentDropZone","onDropAttachFileList","Lims_JSON_stringify","FormSelectSearch","DataGrid","Utils","QbUtils","SlideOutModal","callService","DEFAULT_RETURN","ListWrapper","uuid","ConfirmMessage","transactionStatus","Esign","rsapi","AddSampleStorageMapping","Axios","Preloader","process","MatrixComponent","FilterQueryBuilder","ExcelExport","ExcelExportColumn","LocalizationProvider","AddFile","SampleStorageListPreperation","props","dragOverCnt","isDragDrop","SEPARATOR","uniqueIDArr","countforTree","pointedItem","undefined","getitemPath","openModal","updateInfo","typeName","data","selectedRecord","loadTreeProperties","treeData","text","expanded","editable","root","id","operation","updateStore","closeModal","loadEsign","Login","selectedId","state","setState","isInitialRender","importTemplate","isFilterPopup","onInputChange","event","target","type","name","checked","value","onSaveClick","saveType","formRef","onSaveProperties","openSpreadSheet","CRUDSampleStorageTransaction","editedsheetData","nsamplestoragemappingcode","isMultiSampleAdd","Object","keys","sheetData","map","join","toString","nsamplestoragelocationcode","JSON","stringify","sheetUpdate","userinfo","userInfo","onSaveSampleStorageTransaction","paneSizeChange","d","splitChangeWidthPercentage","handlePageChange","e","skip","take","handleDetailPageChange","openFilter","showFilter","closeFilter","reloadData","onFilterSubmit","onEditSampleStorageLocation","selectedSampleStorageVersion","editId","handleSearch","searchedTreeData","searchRef","current","isOnlyDraft","masterData","sampleStorageVersion","length","editSampleStorageLocation","openStorageMapping","addId","addSampleStorageMapping","deletesamplestoragemapping","param","selectedSampleStorageLocation","addMultipleSample","loading","opensearch","submittedselectedRecord","handleExportClick","exportField","export","handleImportTemplate","onDropFile","attachedFiles","fieldName","maxSize","actionType","deleteAttachment","file","getImportSampleIDData","formData","FormData","append","nformcode","selectedProjectType","intl","formatMessage","requestUrl","post","then","response","dataStateChange","catch","error","status","message","info","addSample","nflag","urlArray","url1","samplestoragelistpreperation","item","all","parse","Rows","nrow","columns","ncolumn","warn","onComboChange","comboData","selectedRecordFilter","getSampleStorageLocation","nstoragecategorycode","getContainerStructure","ncontainertypecode","getprojectbarcodeconfig","containerpathCodeArray","inputParam","nsamplestoragetransactioncode","parseInt","nproductcode","ndirectionmastercode","ssamplestoragemappingname","nsamplestoragecontainerpathcode","containerpathsize","nneedposition","ncontainerstructurecode","nquantity","userRoleControlRights","ncontrolcode","screenData","getsamplestoragetransaction","childDataChange","childSheetDataChange","getActiveSampleStorageMappingById","filterColumnData","filterValue","filterParam","primaryKeyValue","searchedData","inputListName","primaryKeyField","isjsondata","searchFieldList","fetchUrl","fecthInputObject","sortField","sortOrder","selectedObject","forEach","unchangeList","indexOf","modalName","inputParamData","object","selectedStorageCategoryName","sstoragecategoryname","filterData","generateBreadCrumData","onSampleMappingSaveClick","mandatoryFields","dataState","approveSampleStorageMapping","checkFilterIsEmptyQueryBuilder","settings","YES","isFilterEmpty","ParentItem","childArray","children1","i","childData","hasOwnProperty","properties","operator","fetchRecord","url2","url3","storageMappingMap","storageMappingMapList","get","containerStructure","containerTypeMap","containerTypeList","directionmasterMap","directionmasterList","containerstructureMap","containerstructureList","productMap","productList","editedObject","editsampleStorageMapping","unshift","label","scontainerpath","sdirection","sproductname","scontainertype","scontainerstructurename","directionmasterOptions","storageMappingMapOptions","productOptions","containerTypeOptions","containerStructureOptions","retrievalType","onInputOnChange","handlePageChangeFilter","kendoSkip","kendoTake","onChange","immutableTree","config","getTree","sqlFormat","tree","processWithGroups","aggregates","field","aggregate","groups","group","newDataState","validateEsign","inputData","sreason","nreasoncode","spredefinedreason","password","validateEsignCredential","queryBuilderFreezer","title","children","toggleAction","treeDataView","toggleActionView","size","scrollable","Map","fields","createRef","dragClue","confirmMessage","previousProps","previousState","storageCategoryOptions","controlMap","storageLocationOptions","sampleStorageVersionOptions","selectedProjectTypeList","bool","sampleStorageLocation","push","ssamplestoragelocationname","values","filterStorageCategory","filterStorageCategorylist","selectedStorageCategory","filter","sampleStorageLocationList","sampleStorageVersionList","nsamplestorageversioncode","sprojecttypename","nprojecttypecode","projectbarcodeconfig","_excelExportHeader","save","parentHeight","height","clientHeight","firstPane","obj","breadCrumbData","containerStructureList","spositionvalue","selectedBarcodeValue","rtn","filterquery","filterQueryTreeStr","valuemember","source","displayQuery","queryString","nextProps","nextState","temparray1","temparray2","option","sfieldname","newArray","has","deleteId","copyId","approveId","extractedColumnList","gridfillingColumn","dataField","idsName","onClick","controlname","jsondata","deleteRecord","displayName","exporter","getDynamicFilterExecuteData","bind","masterStatus","queryArray","slideList","slideResult","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl,  } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { constructOptionList, getControlMap, onSaveMandatoryValidation, searchData,\r\n     searchJsonData, showEsign, sortData, deleteAttachmentDropZone, onDropAttachFileList,\r\n     Lims_JSON_stringify\r\n    } from '../../components/CommonScript';\r\n//import SortableTree from 'react-sortable-tree'; \r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport {\r\n    Utils as QbUtils,\r\n} from \"@react-awesome-query-builder/ui\";\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport {\r\n    callService\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport { uuid } from \"uuidv4\";\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport Esign from '../audittrail/Esign';\r\nimport rsapi from '../../rsapi';\r\nimport AddSampleStorageMapping from './AddSampleStorageMapping';\r\nimport Axios from 'axios';\r\nimport Preloader from '../../components/preloader/preloader.component';\r\nimport {  process } from '@progress/kendo-data-query';\r\n//import Spreadsheet from '../../components/Spreadsheet/Spreadsheet';\r\nimport MatrixComponent from '../../components/MatrixComponent';\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport { ExcelExport, ExcelExportColumn } from '@progress/kendo-react-excel-export';\r\nimport { LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport AddFile from \"../goodsin/AddFile\";\r\n\r\n\r\nclass SampleStorageListPreperation extends Component {\r\n    dragOverCnt = 0;\r\n    isDragDrop = false;\r\n    SEPARATOR = '_';\r\n    uniqueIDArr = [];\r\n    countforTree = 0;\r\n    pointedItem = undefined\r\n    getitemPath = {};\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            queryBuilderFreezer:[],\r\n            retrievalType: 1,\r\n            // extractedColumnList: [   \r\n            //     { \"idsName\": \"IDS_STORAGESTRUCTURE\", \"dataField\": \"ssamplestoragelocationname\", \"width\": \"200px\" },\r\n            //     { \"idsName\": \"IDS_SAMPLESTORAGEPATH\", \"dataField\": \"scontainerpath\", \"width\": \"450px\" },\r\n            //     { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"100px\" },\r\n            //     { \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"100px\" },\r\n            //     //{ \"idsName\": \"IDS_PROJECTTYPE\", \"dataField\": \"sprojecttypename\", \"width\": \"100px\" },\r\n            //     //{ \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"width\": \"100px\" },\r\n            //     { \"idsName\": \"IDS_PARTICIPANTS\", \"dataField\": \"sparticipantid\", \"width\": \"100px\" },\r\n            //     //{ \"idsName\": \"IDS_VISITNUMBER\", \"dataField\": \"svisitnumber\", \"width\": \"100px\" },\r\n            //     { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \r\n            //     { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\r\n            //     { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\r\n            //     { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\r\n            //     { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }\r\n            // ],\r\n            sheetData: {},\r\n            selectedRecordFilter: {},\r\n            treeData: [{ title: 'Chicken', children: [{ title: 'Egg' }] }],\r\n            toggleAction: false,\r\n            treeDataView: undefined,\r\n            toggleActionView: false,\r\n            treeData: [\r\n                {\r\n                    //  text: \"root\",\r\n                    text: this.props.intl.formatMessage({ id: \"IDS_ROOT\" }),\r\n                    expanded: true,\r\n                    editable: true,\r\n                    root: true,\r\n                    id: uuid(),\r\n                }],\r\n            panes: [{\r\n                size: '50%',\r\n                scrollable: false\r\n            }],\r\n            selectedRecord: {},\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            skip: 0,\r\n            detailSkip: 0,\r\n            detailTake: 10,\r\n            take: this.props.Login.settings ?\r\n                this.props.Login.settings[3] : 25,\r\n            splitChangeWidthPercentage: 22,\r\n            selectedItem: undefined,\r\n            loading: false,\r\n            dataStateChange: {\r\n                take: 10,\r\n                skip: 0,\r\n                // group: [\r\n                //     {\r\n                //         field: \"ssamplestoragelocationname\",\r\n                //     },\r\n                // ],\r\n            }\r\n        };\r\n        let fields = {};\r\n        // if (this.state.extractedColumnList) {\r\n        //     // let newArr=[...[  { \"dataField\": \"svisitnumbershortcode\", \"idsName\": \"IDS_VISITNUMBERCODE\", \"width\": \"100px\" }, \r\n        //     // { \"dataField\": \"sprojectshortcode\", \"idsName\": \"IDS_PROJECTTYPECODE\" , \"width\": \"100px\"} ,\r\n        //     // { \"dataField\": \"sproductshortcode\", \"idsName\": \"IDS_PRODUCTCODE\", \"width\": \"100px\" } ,\r\n        //     // { \"dataField\": \"ssampledonorshortcode\", \"idsName\": \"IDS_SAMPLEDONORCODE\", \"width\": \"100px\" }  ,\r\n        //     // { \"dataField\": \"scollectiontubetypeshortcode\", \"idsName\": \"IDS_COLLECTIONTUBETYPECODE\", \"width\": \"100px\" }]\r\n        //     // ,...this.state.extractedColumnList]\r\n        //     this.state.extractedColumnList.map(field => {\r\n        //         if (field.dataField !== 'ssamplestoragelocationname' && field.dataField !== 'sproductname'\r\n        //             && field.dataField !== 'sprojecttypename' && field.dataField !== 'svisitnumber') {\r\n        //             fields = {\r\n        //                 ...fields,\r\n        //                 [field.dataField]: {\r\n        //                     \"label\":\r\n        //                         this.props.intl.formatMessage({\r\n        //                             id: field.idsName,\r\n        //                         })\r\n        //                     ,\r\n        //                     \"type\": field.dataField === 'navailablespace' ? \"number\" : \"text\",\r\n        //                     \"valueSources\": [\"value\", \"func\"],\r\n\r\n        //                     \"mainWidgetProps\": {\r\n        //                         \"valueLabel\": \"Name\",\r\n        //                         \"valuePlaceholder\": this.props.intl.formatMessage({\r\n        //                             id: field.idsName\r\n        //                         })\r\n        //                     }\r\n        //                 }\r\n        //             }\r\n        //         }\r\n        //     });\r\n        // }\r\n        this.state = { ... this.state, 'fields': fields }\r\n        this.searchRef = React.createRef();\r\n        this.dragClue = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        let { filterData, storageCategoryOptions,\r\n            selectedRecord, controlMap,\r\n            userRoleControlRights, storageLocationOptions,\r\n            sampleStorageVersionOptions, masterData, selectedRecordFilter, fields, selectedProjectType, selectedProjectTypeList,queryBuilderFreezer } = this.state\r\n        let bool = false;\r\n        ///////////////////////////////\r\n        if (this.props.Login.masterData.sampleStorageLocation !== previousProps.Login.masterData.sampleStorageLocation) { \r\n            bool = true;\r\n            this.props.Login.masterData.sampleStorageLocation && this.props.Login.masterData.sampleStorageLocation.map(\r\n                (item) => queryBuilderFreezer.push({ \"value\": item.nsamplestoragelocationcode, \"title\": item.ssamplestoragelocationname })\r\n            )\r\n            fields = {\r\n                ...fields,\r\n                'nsamplestoragelocationcode': {\r\n                    \"label\": this.props.intl.formatMessage({\r\n                        id: \"IDS_STORAGESTRUCTURENAME\",\r\n                    }),\r\n                    \"type\": \"select\",\r\n                    \"valueSources\": [\"value\"],\r\n                    \"fieldSettings\": {\r\n                        \"listValues\": queryBuilderFreezer\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        // if (this.props.Login.masterData.sampleType !== previousProps.Login.masterData.sampleType) {\r\n        //     let queryBuilderFreezer = [];\r\n        //     bool = true;\r\n        //     this.props.Login.masterData.sampleType && this.props.Login.masterData.sampleType.map(\r\n        //         (item) => queryBuilderFreezer.push({ \"value\": item.nproductcode, \"title\": item.sproductname })\r\n        //     )\r\n        //     fields = {\r\n        //         ...fields,\r\n        //         'nproductcode': {\r\n        //             \"label\": this.props.intl.formatMessage({\r\n        //                 id: \"IDS_PRODUCT\",\r\n        //             }),\r\n        //             \"type\": \"select\",\r\n        //             \"valueSources\": [\"value\"],\r\n        //             \"fieldSettings\": {\r\n        //                 \"listValues\": queryBuilderFreezer\r\n        //             }\r\n        //         }\r\n        //     }\r\n\r\n        // }\r\n        // if (this.props.Login.masterData.ProjectType !== previousProps.Login.masterData.ProjectType) {\r\n        //     let queryBuilderFreezer = [];\r\n        //     bool = true;\r\n        //     this.props.Login.masterData.ProjectType && this.props.Login.masterData.ProjectType.map(\r\n        //         (item) => queryBuilderFreezer.push({ \"value\": item.nprojecttypecode, \"title\": item.sprojecttypename })\r\n        //     )\r\n        //     fields = {\r\n        //         ...fields,\r\n        //         'nprojecttypecode': {\r\n        //             \"label\": this.props.intl.formatMessage({\r\n        //                 id: \"IDS_PROJECTTYPE\",\r\n        //             }),\r\n        //             \"type\": \"select\",\r\n        //             \"valueSources\": [\"value\"],\r\n        //             \"fieldSettings\": {\r\n        //                 \"listValues\": queryBuilderFreezer\r\n        //             }\r\n        //         }\r\n        //     }\r\n\r\n        // } if (this.props.Login.masterData.VisitNumber !== previousProps.Login.masterData.VisitNumber) {\r\n        //     let queryBuilderFreezer = [];\r\n        //     bool = true;\r\n        //     this.props.Login.masterData.VisitNumber && this.props.Login.masterData.VisitNumber.map(\r\n        //         (item) => queryBuilderFreezer.push({ \"value\": item.nvisitnumbercode, \"title\": item.svisitnumber })\r\n        //     )\r\n        //     fields = {\r\n        //         ...fields,\r\n        //         'nvisitnumbercode': {\r\n        //             \"label\": this.props.intl.formatMessage({\r\n        //                 id: \"IDS_VISITNUMBER\",\r\n        //             }),\r\n        //             \"type\": \"select\",\r\n        //             \"valueSources\": [\"value\"],\r\n        //             \"fieldSettings\": {\r\n        //                 \"listValues\": queryBuilderFreezer\r\n        //             }\r\n        //         }\r\n        //     }\r\n\r\n        // }\r\n        ///////////////////////////////\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            bool = true;\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.filterStorageCategory !== previousProps.Login.masterData.filterStorageCategory) {\r\n            bool = true;\r\n            const filterStorageCategorylist = constructOptionList(this.props.Login.masterData.filterStorageCategory || [], \"nstoragecategorycode\",\r\n                \"sstoragecategoryname\", undefined, undefined, undefined);\r\n            storageCategoryOptions = filterStorageCategorylist.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedStorageCategory) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nstoragecategorycode: storageCategoryOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedStorageCategory.nstoragecategorycode)[0]\r\n                }\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.masterData.sampleStorageLocation !== previousProps.Login.masterData.sampleStorageLocation) {\r\n            bool = true;\r\n            const sampleStorageLocationList = constructOptionList(this.props.Login.masterData.sampleStorageLocation || [], \"nsamplestoragelocationcode\",\r\n                \"ssamplestoragelocationname\", undefined, undefined, undefined);\r\n            storageLocationOptions = sampleStorageLocationList.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedSampleStorageLocation) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestoragelocationcode: storageLocationOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode)[0]\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.sampleStorageVersion !== previousProps.Login.masterData.sampleStorageVersion) {\r\n            bool = true;\r\n            const sampleStorageVersionList = constructOptionList(this.props.Login.masterData.sampleStorageVersion || [], \"nsamplestorageversioncode\",\r\n                \"nversionno\", undefined, undefined, undefined);\r\n            sampleStorageVersionOptions = sampleStorageVersionList.get(\"OptionList\");\r\n            if (this.props.Login.masterData.selectedSampleStorageVersion) {\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestorageversioncode: sampleStorageVersionOptions.filter(item =>\r\n                        item.value === this.props.Login.masterData.selectedSampleStorageVersion.nsamplestorageversioncode)[0]\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            masterData = this.props.Login.masterData;\r\n            selectedProjectType = {\r\n                label: this.props.Login.masterData.selectedProjectType &&\r\n                    this.props.Login.masterData.selectedProjectType.sprojecttypename, value:\r\n                    this.props.Login.masterData.selectedProjectType &&\r\n                    this.props.Login.masterData.selectedProjectType.nprojecttypecode\r\n            };\r\n            selectedProjectTypeList = this.props.Login.masterData.selectedProjectTypeList;\r\n            const filterStorageCategorylist = constructOptionList(this.props.Login.masterData.projectbarcodeconfig || [], \"nprojecttypecode\",\r\n                \"sprojecttypename\", undefined, undefined, undefined);\r\n            masterData['projectbarcodeconfig'] = filterStorageCategorylist.get(\"OptionList\");\r\n            if(masterData.samplestoragelistpreperation===undefined){\r\n                masterData['samplestoragelistpreperation']=[]\r\n            } \r\n            filterData = this.generateBreadCrumData(this.props.Login.masterData);\r\n\r\n        }\r\n        if (this.state.masterData !== previousState.masterData) {\r\n            bool = true;\r\n            filterData = this.generateBreadCrumData(this.state.masterData);\r\n\r\n        }\r\n// ALPD-5531 added by Abdul 07-Mar-2025 for Handling Export template Click\r\n        if (this.state.export) {\r\n            this._excelExportHeader.save()\r\n            this.setState({ export: false })\r\n        }\r\n// ALPD-5531 End\r\n\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                storageCategoryOptions, filterData,\r\n                selectedRecord, controlMap,\r\n                userRoleControlRights, storageLocationOptions,\r\n                sampleStorageVersionOptions, masterData, selectedRecordFilter, fields, selectedProjectType, selectedProjectTypeList,queryBuilderFreezer\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    openModal = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: true, selectedRecord: {}, loadTreeProperties: false,\r\n                treeData: [\r\n                    {\r\n                        text: \"root\",\r\n                        expanded: true,\r\n                        editable: true,\r\n                        root: true,\r\n                        id: uuid(),\r\n                    },\r\n                ], operation: \"create\"\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeModal = () => {\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: {\r\n        //         openModal: false, selectedRecord: {}\r\n        //     }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedId = this.props.Login.selectedId;\r\n        let selectedRecord = this.state.selectedRecord; //this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"Approve\" || this.props.Login.operation === \"copy\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n                selectedId = null;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedId = null;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        // const updateInfo = {\r\n        //     typeName: DEFAULT_RETURN,\r\n        //     data: { openModal, loadEsign, selectedRecord, selectedId }\r\n        // }\r\n        // this.props.updateStore(updateInfo);\r\n        // this.getsamplestoragetransaction({}, this.props.Login.userInfo);\r\n        // if (!this.state.isFilterPopup) {\r\n        //     this.getDynamicFilterExecuteData()\r\n\r\n        // }\r\n        this.setState({\r\n            selectedRecord,\r\n            openModal: false, isInitialRender: true, importTemplate: false\r\n            , isFilterPopup: false\r\n        })\r\n    }\r\n    onInputChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            selectedRecord[event.target.name] = event.target.checked;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if (this.props.Login.loadTreeProperties === true) {\r\n            this.onSaveProperties(saveType, formRef);\r\n        } else if (this.state.openSpreadSheet) {\r\n            this.CRUDSampleStorageTransaction({\r\n                ...this.state.editedsheetData,\r\n                nsamplestoragemappingcode: this.state.isMultiSampleAdd ?\r\n                    Object.keys(this.state.sheetData).map(nsamplestoragemappingcode => nsamplestoragemappingcode).join(\",\")\r\n                    : this.state.editedsheetData.nsamplestoragemappingcode.toString(),\r\n                nsamplestoragelocationcode: this.state.editedsheetData.nsamplestoragelocationcode,\r\n                sheetData: JSON.stringify(this.state.sheetData ? this.state.sheetData : {}),\r\n                sheetUpdate: true,\r\n                userinfo: this.props.Login.userInfo,\r\n                isMultiSampleAdd: this.state.isMultiSampleAdd\r\n            }, 'create');\r\n        } else {\r\n            this.onSaveSampleStorageTransaction(saveType, formRef);\r\n        }\r\n    };\r\n\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    handleDetailPageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n    generateBreadCrumData(obj) {\r\n        const breadCrumbData = [];\r\n        if (this.state.masterData && this.state.masterData.filterStorageCategory) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_STORAGECATEGORY\",\r\n                    \"value\": obj.selectedStorageCategoryName &&\r\n                        obj.selectedStorageCategoryName !== null ?\r\n                        obj.selectedStorageCategoryName : \"NA\"\r\n\r\n                }\r\n                // ,\r\n                // {\r\n                //     \"label\": \"IDS_STORAGECATEGORYLOCATION\",\r\n                //     \"value\": obj.selectedSampleStorageLocation &&\r\n                //         obj.selectedSampleStorageLocation.ssamplestoragelocationname !== null ?\r\n                //         obj.selectedSampleStorageLocation.ssamplestoragelocationname : \"NA\"\r\n                // },\r\n                // {\r\n                //     \"label\": \"IDS_STORAGECATEGORYVERSION\",\r\n                //     \"value\": obj.selectedSampleStorageVersion &&\r\n                //         obj.selectedSampleStorageVersion.nversionno !== null ?\r\n                //         obj.selectedSampleStorageVersion.nversionno : \"NA\"\r\n                // }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    reloadData = () => {\r\n        this.onFilterSubmit();\r\n    }\r\n    onEditSampleStorageLocation = (selectedSampleStorageVersion, userInfo, editId) => {\r\n        this.handleSearch();\r\n        this.setState({ searchedTreeData: undefined })\r\n        if (this.searchRef.current) {\r\n            this.searchRef.current.value = \"\";\r\n        }\r\n\r\n        let isOnlyDraft = false;\r\n        if (this.props.Login.masterData.sampleStorageVersion && this.props.Login.masterData.sampleStorageVersion.length > 1) {\r\n            isOnlyDraft = true;\r\n        }\r\n        this.props.editSampleStorageLocation(selectedSampleStorageVersion, userInfo, isOnlyDraft, editId);\r\n    }\r\n    openStorageMapping = (addId) => {\r\n        this.addSampleStorageMapping({ userInfo: this.props.Login.userInfo, addId });\r\n    }\r\n    deletesamplestoragemapping = (param) => {\r\n        this.CRUDSampleStorageTransaction({\r\n            'nsamplestoragelocationcode': this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            'nsamplestoragemappingcode': param.nsamplestoragemappingcode,\r\n            userinfo: this.props.Login.userInfo\r\n        }, 'delete');\r\n    }\r\n    addMultipleSample = (param) => {\r\n        this.setState({\r\n            //sheetData: JSON.parse(response[0].data.sheetData),\r\n            openModal: true, isMultiSampleAdd: true, openSpreadSheet: true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n            loading: false\r\n        })\r\n    }\r\n    opensearch = () => {\r\n        this.setState({\r\n            openModal: true, isFilterPopup: true, selectedRecord: { ...this.state.submittedselectedRecord } ||\r\n                { ...this.state.selectedRecord }\r\n        })\r\n    }\r\n    // ALPD 5531 Start Added by Abdul for handling Export and Import clicks, file drop and delete in drop zone of Bulk Search SlideOut 07/03/2025\r\n    handleExportClick = () => {\r\n        let exportField = [{ \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"200px\", \"staticField\": true }];\r\n        this.setState({ exportField, export: true });\r\n    }\r\n    handleImportTemplate = () => {\r\n        this.setState({\r\n            importTemplate: true,\r\n            openModal: true,\r\n            loading: false,\r\n            selectedRecord: {},\r\n        });\r\n    }\r\n    onDropFile = (attachedFiles, fieldName, maxSize) => {\r\n      let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n    \r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n    getImportSampleIDData = () =>{\r\n        let selectedRecord = this.state.selectedRecord;\r\n        // ALPD-5582 Added by Abdul on 19 Mar 2025 for validating whether a file has been uploaded or not\r\n        if(selectedRecord['stemplatefilename'] && (selectedRecord['stemplatefilename'][0] !== undefined)){\r\n        const formData = new FormData();\r\n        formData.append(\"ImportFile\", selectedRecord['stemplatefilename'][0]);\r\n        formData.append( \"nformcode\",this.props.Login.userInfo && this.props.Login.userInfo.nformcode);\r\n        formData.append(\"userinfo\",JSON.stringify(this.props.Login.userInfo));\r\n        formData.append(\"nprojecttypecode\",this.state.selectedProjectType && this.state.selectedProjectType.value ? this.state.selectedProjectType.value : -1 );\r\n        formData.append(\"source\",'view_samplelistprep_');\r\n        formData.append(\"fieldName\", Lims_JSON_stringify(this.props.intl.formatMessage({ id: \"IDS_SAMPLEID\" })));\r\n        formData.append(\"label\", 'samplestoragelistpreperation');\r\n        formData.append(\"valuemember\", 'nsamplestoragetransactioncode');\r\n        this.setState({ loading: true });\r\n            const requestUrl = rsapi.post(\"/samplestoragelistpreperation/getimportsampleiddata\", formData);\r\n            return requestUrl\r\n                .then(response => {\r\n                    let masterData = this.state.masterData\r\n                    masterData = { ...masterData, ...response.data }\r\n                    this.setState({\r\n                        masterData: { ...masterData },\r\n                        loading: false,\r\n                        openModal: false,\r\n                        isFilterPopup: false,\r\n                        importTemplate:false,\r\n                        submittedselectedRecord:\r\n                            { ...this.state.submittedselectedRecord }\r\n                         ,\r\n                        dataStateChange:{\r\n                              take: 10,\r\n                              skip: 0\r\n                             },\r\n                        selectedRecord: {},\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data);\r\n                    }\r\n\r\n                })\r\n\r\n        }\r\n         // ALPD-5582 Added by Abdul on 19 Mar 2025 for validating whether a file has been uploaded or not\r\n        else {\r\n            toast.info(`${this.props.intl.formatMessage({ id: \"IDS_CHOOSE\" })} ${this.props.intl.formatMessage({ id: \"IDS_FILE\" })}`);\r\n        }\r\n                    \r\n    }\r\n    // ALPD 5531 End\r\n\r\n    addSample = (param, nflag) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/getsamplestoragemappingSheetData\",\r\n            {\r\n                isMultiSampleAdd: (nflag === 2) ? true : false,\r\n                nsamplestoragemappingcode:\r\n                    (nflag === 2) ? this.state.masterData.samplestoragelistpreperation.map(item => item.nsamplestoragemappingcode).join(\",\")\r\n                        : param.nsamplestoragemappingcode.toString()\r\n            });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                if (nflag === 2) {\r\n                    this.setState({\r\n                        sheetData: JSON.parse(response[0].data.sheetData),\r\n                        openModal: true, isMultiSampleAdd: true, openSpreadSheet: true,//, editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n                        loading: false\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        sheetData: JSON.parse(response[0].data.sheetData),\r\n                        openModal: true, isMultiSampleAdd: false, openSpreadSheet: true,\r\n                        editedsheetData: param, Rows: param.nrow, columns: param.ncolumn,\r\n                        loading: false\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let selectedRecordFilter = this.state.selectedRecordFilter || {};\r\n\r\n        if (fieldName === 'nstoragecategorycode') {\r\n            return this.getSampleStorageLocation({\r\n                userinfo: this.props.Login.userInfo,\r\n                nstoragecategorycode: comboData.value\r\n            }, fieldName, comboData);\r\n        } else if (fieldName === 'ncontainertypecode') {\r\n            return this.getContainerStructure({\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontainertypecode: comboData.value\r\n            }, fieldName, comboData);\r\n\r\n        } else if (fieldName === 'nprojecttypecode') {\r\n            return this.getprojectbarcodeconfig(comboData);\r\n\r\n        }\r\n        else if (fieldName === 'ncontainerstructurecode') {\r\n            selectedRecord['nrow'] = comboData.item.nrow ? comboData.item.nrow : 1;\r\n            selectedRecord['ncolumn'] = comboData.item.ncolumn ? comboData.item.ncolumn : 1;\r\n        } else if (fieldName === 'nsamplestoragelocationcode') {\r\n            return this.getSampleStorageLocation({\r\n                userinfo: this.props.Login.userInfo,\r\n                nstoragecategorycode: this.state.selectedRecordFilter['nstoragecategorycode'].value,\r\n                nsamplestoragelocationcode: comboData.value\r\n\r\n            }, fieldName, comboData);\r\n        }\r\n        if (fieldName === 'nsamplestorageversioncode') {\r\n            selectedRecordFilter[fieldName] = comboData;\r\n            this.setState({ selectedRecordFilter });\r\n\r\n        } else {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord, selectedRecordFilter });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onSaveSampleStorageTransaction = (saveType) => {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let containerpathCodeArray = [];\r\n        if (this.state.operation === 'create') {\r\n            containerpathCodeArray = selectedRecord['nsamplestoragecontainerpathcode'].map(item => item.value);\r\n        }\r\n        const inputParam =\r\n        {\r\n            nsamplestoragetransactioncode: selectedRecord['nsamplestoragetransactioncode'] ?\r\n                parseInt(selectedRecord['nsamplestoragetransactioncode']) : 0,\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            nsamplestoragemappingcode: selectedRecord['nsamplestoragemappingcode'] ?\r\n                parseInt(selectedRecord['nsamplestoragemappingcode']) : 0,\r\n            ncontainertypecode: -1,\r\n            nproductcode: selectedRecord['nproductcode'].value,\r\n            ndirectionmastercode: -1,\r\n            ssamplestoragemappingname: \"-\",\r\n            nsamplestoragecontainerpathcode: this.state.operation === 'create' ?\r\n                JSON.stringify(containerpathCodeArray) : parseInt(selectedRecord['nsamplestoragecontainerpathcode'].value),\r\n            containerpathsize: containerpathCodeArray.length,\r\n            nneedposition: 4,\r\n            ncontainerstructurecode: -1, nquantity: selectedRecord['nquantity'] ?\r\n                parseInt(selectedRecord['nquantity']) : 1,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.CRUDSampleStorageTransaction(inputParam, this.state.operation);\r\n        }\r\n    }\r\n    getsamplestoragetransaction = (inputParam, userinfo) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/getsamplestoragetransaction\", {\r\n            userinfo: this.props.Login.userInfo\r\n        });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData, ...response[0].data\r\n                    },\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    childDataChange = (selectedRecord) => {\r\n        this.setState({\r\n            selectedRecord: {\r\n                ...selectedRecord\r\n            },\r\n            isInitialRender: false\r\n        });\r\n    }\r\n    childSheetDataChange = (sheetData) => {\r\n\r\n        this.setState({\r\n            // selectedRecord: {\r\n            //     ...this.state.selectedRecord,\r\n            //     sheetData: {\r\n            //         ...this.state.selectedRecord.sheetData,\r\n            //         ...sheetData\r\n            //     }\r\n            // },\r\n            sheetData: {\r\n                ...sheetData\r\n            },\r\n            isInitialRender: false\r\n        });\r\n    }\r\n    // Actions start\r\n    getActiveSampleStorageMappingById = (inputParam, userinfo) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/getActiveSampleStorageMappingById\", {\r\n            nsamplestoragelocationcode: inputParam['selectedSampleStorageLocation'][0].nsamplestoragelocationcode,\r\n            userinfo: userinfo\r\n        });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData, ...response[0].data\r\n                    }//,\r\n                    // selectedRecord: {\r\n                    //     ...this.state.selectedRecord\r\n                    //    // , sheetData: JSON.parse(response[0].data.selectedSampleStoragemapping.jsondata.value)\r\n                    // }\r\n                    ,\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n    filterColumnData = (filterValue, filterParam) => {\r\n        let masterData = filterParam.masterData;\r\n        let primaryKeyValue = 0;\r\n        let searchedData = undefined;\r\n        if (filterValue === \"\") {\r\n            if (masterData[filterParam.inputListName] && masterData[filterParam.inputListName].length > 0) {\r\n                primaryKeyValue = masterData[filterParam.inputListName][0][filterParam.primaryKeyField];\r\n            }\r\n        }\r\n        else {\r\n            if (filterParam.isjsondata) {\r\n                searchedData = searchJsonData(filterValue, masterData[filterParam.inputListName], filterParam.searchFieldList || []);\r\n            }\r\n            else {\r\n                searchedData = searchData(filterValue, masterData[filterParam.inputListName], filterParam.searchFieldList || []);\r\n\r\n            }\r\n            if (searchedData.length > 0) {\r\n                primaryKeyValue = searchedData[0][filterParam.primaryKeyField];\r\n            }\r\n        }\r\n\r\n        if (primaryKeyValue !== 0) {\r\n            this.setState({ loading: true });\r\n            return rsapi.post(filterParam.fetchUrl, { ...filterParam.fecthInputObject, [filterParam.primaryKeyField]: primaryKeyValue })\r\n                .then(response => {\r\n                    masterData[\"searchedData\"] = searchedData;\r\n                    masterData = { ...masterData, ...response.data };\r\n\r\n                    if (filterParam.sortField) {\r\n                        sortData(masterData, filterParam.sortOrder, filterParam.sortField);\r\n                    }\r\n                    else {\r\n                        sortData(masterData);\r\n                    }\r\n                    this.setState({ masterData, loading: false, skip: 0, take: 10, selectedId: null });\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ loading: false });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(this.props.intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            masterData[filterParam.selectedObject] = undefined;\r\n            masterData[\"searchedData\"] = [];\r\n            Object.keys(masterData).forEach(item => {\r\n                if (item !== filterParam.inputListName && item !== filterParam.selectedObject\r\n                    && filterParam.unchangeList && filterParam.unchangeList.indexOf(item) === -1)\r\n                    masterData[item] = [];\r\n            })\r\n            this.setState({\r\n                masterData, operation: null, modalName: undefined,\r\n                loading: false\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    CRUDSampleStorageTransaction = (inputParam, operation) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/\" + operation + \"samplestoragelistpreperation\", inputParam);\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    isInitialRender: true,\r\n                    selectedRecord: {},\r\n                    masterData: {\r\n                        ...this.state.masterData, ...response[0].data\r\n                    },\r\n                    openModal: false,\r\n                    loading: false\r\n                });\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    getSampleStorageLocation(inputData, fieldName, comboData) {\r\n        let selectedRecordFilter = this.state.selectedRecordFilter || {};\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        if (fieldName === 'nsamplestoragelocationcode') {\r\n            inputParamData = {\r\n                nstoragecategorycode: selectedRecordFilter['nstoragecategorycode'].value,\r\n                nsamplestoragelocationcode: comboData.value,\r\n                userinfo: inputData.userinfo\r\n            }\r\n        } else {\r\n            inputParamData = {\r\n                nstoragecategorycode: comboData.value,\r\n                userinfo: inputData.userinfo\r\n            }\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/getsamplestoragemapping\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let { storageLocationOptions,\r\n                    sampleStorageVersionOptions } = this.state\r\n\r\n                let sampleStorageLocationList = constructOptionList(response[0].data.sampleStorageLocation || [], \"nsamplestoragelocationcode\",\r\n                    \"ssamplestoragelocationname\", undefined, undefined, undefined);\r\n                storageLocationOptions = sampleStorageLocationList.get(\"OptionList\");\r\n                let sampleStorageVersionList = constructOptionList(response[0].data.sampleStorageVersion || [], \"nsamplestorageversioncode\",\r\n                    \"nversionno\", undefined, undefined, undefined);\r\n                sampleStorageVersionOptions = sampleStorageVersionList.get(\"OptionList\");\r\n                selectedRecordFilter = {\r\n                    ...selectedRecordFilter,\r\n                    nsamplestoragelocationcode: storageLocationOptions.length > 0 ?\r\n                        storageLocationOptions[0] : [],\r\n                    nsamplestorageversioncode: sampleStorageVersionOptions.length > 0 ?\r\n                        sampleStorageVersionOptions[0] : [],\r\n\r\n                }\r\n                this.setState({\r\n                    storageLocationOptions, sampleStorageVersionOptions,\r\n                    selectedRecordFilter: {\r\n                        ...selectedRecordFilter,\r\n                        [fieldName]: comboData\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.setState({ loading: true })\r\n        let inputParamData = {\r\n            nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\r\n            // nsamplestoragelocationcode: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].value,\r\n            // nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/getsamplestoragemapping\", inputParamData);\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let object = {\r\n                    selectedStorageCategoryName: this.state.selectedRecordFilter[\"nstoragecategorycode\"].item.sstoragecategoryname,\r\n                    // ssamplestoragelocationname: this.state.selectedRecordFilter[\"nsamplestoragelocationcode\"].item.ssamplestoragelocationname,\r\n                    // selectedSampleStorageVersion: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].item.nversionno,\r\n                }\r\n                let filterData = this.generateBreadCrumData(object);\r\n\r\n                this.setState({\r\n                    filterData,\r\n                    masterData: {\r\n                        ...this.state.masterData,\r\n                        ...response[0].data,\r\n                        //   samplestoragelistpreperation: response[0].data['samplestoragelistpreperation'],\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    addSampleStorageMapping() {\r\n        this.setState({ loading: true })\r\n        let selectedRecord = this.state.selectedRecord\r\n        let inputParamData = {\r\n            // nstoragecategorycode: this.state.selectedRecordFilter[\"nstoragecategorycode\"].value,\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            // nsamplestorageversioncode: this.state.selectedRecordFilter[\"nsamplestorageversioncode\"].value,\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/addSampleStorageMapping\", inputParamData);\r\n\r\n        const url2 = rsapi.post(\"product/getProduct\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        const url3 = rsapi.post(\"containertype/getContainerType\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        urlArray = [url1, url2];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const storageMappingMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragecontainerpathcode\",\r\n                    \"scontainerpath\", undefined, undefined, true);\r\n                const storageMappingMapList = storageMappingMap.get(\"OptionList\");\r\n                let containerStructure = response[0].data['containerStructure'];\r\n\r\n                const containerTypeMap = constructOptionList(response[0].data['containerType'] || [],\r\n                    \"ncontainertypecode\",\r\n                    \"scontainertype\", undefined, undefined, true);\r\n                const containerTypeList = containerTypeMap.get(\"OptionList\");\r\n\r\n\r\n                const directionmasterMap = constructOptionList(response[0].data['directionmaster'] || [],\r\n                    \"ndirectionmastercode\",\r\n                    \"sdirection\", undefined, undefined, true);\r\n                const directionmasterList = directionmasterMap.get(\"OptionList\");\r\n\r\n                const containerstructureMap = constructOptionList(response[0].data['containerStructure']\r\n                    || [],\r\n                    \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, true);\r\n                const containerstructureList = containerstructureMap.get(\"OptionList\");\r\n\r\n                const productMap = constructOptionList(response[1].data['Product'] || [],\r\n                    \"nproductcode\",\r\n                    \"sproductname\", undefined, undefined, true);\r\n                const productList = productMap.get(\"OptionList\");\r\n\r\n                this.setState({\r\n                    openModal: true,\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        storageMappingMapOptions: storageMappingMapList,\r\n                        productOptions: productList,\r\n                        containerTypeOptions: containerTypeList,\r\n                        directionmasterOptions: directionmasterList,\r\n                        // ncontainertypecode: containerTypeList[0],\r\n                        // containerStructureOptions: containerstructureList,\r\n                        // ncontainerstructurecode: containerstructureList[0],\r\n                        nrow: containerStructure.length > 0 ? containerStructure[0].nrow : 1,\r\n                        ncolumn: containerStructure.length > 0 ? containerStructure[0].ncolumn : 1,\r\n                        isInitialRender: true\r\n\r\n                    },\r\n                    openSpreadSheet: false,\r\n                    operation: 'create',\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    getprojectbarcodeconfig(comboData) {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            nprojecttypecode: comboData.value,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/getProjectbarcodeconfig\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let masterData = this.state.masterData;\r\n                let submittedselectedRecord = this.state.submittedselectedRecord;\r\n                if (this.state.selectedProjectType.value !== comboData.value) {\r\n                    masterData = {\r\n                        ...masterData,\r\n                        samplestoragelistpreperation: []\r\n                    }\r\n                    submittedselectedRecord = {}\r\n                }\r\n                this.setState({\r\n                    masterData,\r\n                    submittedselectedRecord,\r\n                    selectedProjectTypeList: sortData(response[0].data.selectedProjectTypeList),\r\n                    selectedProjectType: { label: comboData.label, value: comboData.value },\r\n                    selectedRecord: {\r\n                        nprojecttypecode: { label: comboData.label, value: comboData.value }\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    getContainerStructure(inputData, fieldName, comboData) {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            ncontainertypecode: comboData.value,\r\n            userinfo: inputData.userinfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/getContainerStructure\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let { containerStructureOptions, selectedRecord } = this.state\r\n\r\n                let containerStructureList = constructOptionList(response[0].data.containerStructure || [], \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, undefined);\r\n                containerStructureOptions = containerStructureList.get(\"OptionList\");\r\n                selectedRecord = {\r\n                    ...selectedRecord,\r\n                    nrow: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0].item.nrow : 1,\r\n                    ncolumn: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0].item.ncolumn : 1,\r\n                    ncontainerstructurecode: containerStructureOptions.length > 0 ?\r\n                        containerStructureOptions[0] : [],\r\n                    containerStructureOptions: containerStructureOptions.length > 0 ?\r\n                        [...containerStructureOptions] : [],\r\n                }\r\n\r\n                this.setState({\r\n\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        [fieldName]: comboData\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    onSampleMappingSaveClick = () => {\r\n        const mandatoryFields = this.state.openSpreadSheet ? [] : this.state.selectedRecord[\"nneedposition\"] === undefined ||\r\n            this.state.selectedRecord[\"nneedposition\"] === false ? [\r\n            {\r\n                \"idsName\": \"IDS_SAMPLESTORAGEMAPPING\", \"dataField\": \"nsamplestoragecontainerpathcode\",\r\n                \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_PRODUCT\",\r\n                \"dataField\": \"nproductcode\", \"mandatoryLabel\":\r\n                    \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_AVAILABLESPACE\",\r\n                \"dataField\": \"nquantity\", \"mandatoryLabel\":\r\n                    \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n            }\r\n        ] : [\r\n            {\r\n                \"idsName\": \"IDS_SAMPLESTORAGEMAPPING\", \"dataField\": \"nsamplestoragecontainerpathcode\",\r\n                \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_PRODUCT\",\r\n                \"dataField\": \"nproductcode\", \"mandatoryLabel\":\r\n                    \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            }\r\n            ,\r\n            {\r\n                \"idsName\": \"IDS_CONTAINERTYPE\",\r\n                \"dataField\": \"ncontainertypecode\", \"mandatoryLabel\":\r\n                    \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_CONTAINERSTRUCTURENAME\",\r\n                \"dataField\": \"ncontainerstructurecode\", \"mandatoryLabel\":\r\n                    \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_DIRECTION\",\r\n                \"dataField\": \"ndirectionmastercode\", \"mandatoryLabel\":\r\n                    \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n            },\r\n            {\r\n                \"idsName\": \"IDS_AVAILABLESPACE\",\r\n                \"dataField\": \"nquantity\", \"mandatoryLabel\":\r\n                    \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n            }\r\n        ]\r\n        onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields,\r\n            this.onSaveClick)\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataStateChange: event.dataState\r\n        });\r\n    }\r\n\r\n    approveSampleStorageMapping = (event) => {\r\n        let inputParamData = {}\r\n        this.setState({ loading: true })\r\n        inputParamData = {\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/approveSampleStorageMapping\", inputParamData);\r\n\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    masterData: {\r\n                        ...this.state.masterData,\r\n                        ...response[0].data\r\n                    },\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    getSelectedBarcodeData(inputParam) {\r\n        this.setState({ loading: true })\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"/samplestoragelistpreperation/getSelectedBarcodeData\", {\r\n            nprojecttypecode: this.state.selectedProjectType.value,\r\n            spositionvalue: inputParam.spositionvalue\r\n        });\r\n        urlArray = [url1];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                this.setState({\r\n                    selectedBarcodeValue: { ...response[0].data['selectedBarcodeValue'] },\r\n                    loading: false\r\n                })\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data.rtn);\r\n                }\r\n\r\n            })\r\n    }\r\n    //ALPD-4635\r\n    checkFilterIsEmptyQueryBuilder=(treeData)=> {\r\n        //this condition is handle for bulk record only \r\n        if(this.props.Login && this.props.Login.settings && parseInt(this.props.Login.settings['69'])===transactionStatus.YES){\r\n            let isFilterEmpty=true;\r\n            return isFilterEmpty;\r\n        }else{\r\n        let ParentItem = { ...treeData };\r\n        let isFilterEmpty=false;\r\n            let childArray = ParentItem.children1;\r\n            if (childArray && childArray.length > 0 && childArray !== undefined) {\r\n                for (var i = 0; i < childArray.length; i++) {\r\n                    let childData = childArray[i]\r\n                    if (!childData.hasOwnProperty('children1')) {\r\n                        if(  childData.properties.operator!==\"is_empty\"\r\n                          && childData.properties.operator!==\"is_not_empty\"\r\n                          && childData.properties.operator!==\"is_null\"\r\n                          && childData.properties.operator!==\"is_not_null\" ){\r\n                            isFilterEmpty=true;\r\n                            return isFilterEmpty;\r\n                    }\r\n                    } else {\r\n                        if (childData) {\r\n                            ParentItem = this.checkFilterIsEmptyQueryBuilder(childData)\r\n                            if(!ParentItem){\r\n                                return ParentItem;\r\n                            }\r\n                        } \r\n                    }\r\n                }\r\n            }\r\n            return isFilterEmpty;\r\n        }\r\n      }\r\n    getDynamicFilterExecuteData(nflag) {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (nflag === 2 ? true : (selectedRecord.filterquery && selectedRecord.filterquery !== \"\")) {\r\n            let isFilterEmpty = this.checkFilterIsEmptyQueryBuilder(selectedRecord.filterQueryTreeStr);\r\n            if(isFilterEmpty){\r\n            this.setState({ loading: true })\r\n            let obj = {// ...inputParam.component, \r\n                label: 'samplestoragelistpreperation', valuemember: 'nsamplestoragetransactioncode',\r\n                filterquery: nflag === 2 ?\r\n                    this.state.submittedselectedRecord.filterquery + \" and nprojecttypecode=\" + this.state.selectedProjectType.value\r\n                    :\r\n                    selectedRecord.filterquery + \" and nprojecttypecode=\" + this.state.selectedProjectType.value\r\n               // , source: 'view_samplelistprep_' + this.state.selectedProjectType.value\r\n               , source: 'view_samplelistprep_'\r\n                , userinfo: this.props.Login.userInfo,\r\n                nprojecttypecode: this.state.selectedProjectType.value\r\n            }\r\n            let urlArray = [];\r\n            const url1 = rsapi.post(\"/samplestoragelistpreperation/getdynamicfilterexecutedata\", obj);\r\n            urlArray = [url1];\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let masterData = this.state.masterData\r\n                    masterData = { ...masterData, ...response[0].data }\r\n                    this.setState({\r\n                        masterData: { ...masterData },\r\n                        loading: false,\r\n                        openModal: false,\r\n                        isFilterPopup: false,\r\n                        submittedselectedRecord: nflag === 2 ?\r\n                            { ...this.state.submittedselectedRecord }\r\n                            :\r\n                            { ...selectedRecord }\r\n                         ,\r\n                        dataStateChange:{\r\n                              take: 10,\r\n                              skip: 0\r\n                             },\r\n                        selectedRecord: {},\r\n                        displayQuery: this.state.tree ? QbUtils.queryString(this.state.tree, this.state.config, true) : \"\"\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.info(error.response.data.rtn);\r\n                    }\r\n\r\n                })\r\n            }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PROVIDEONEMOREFILTERDATAWITHNOTNULLOPERATOR\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTAFILTER\" }));\r\n\r\n        }\r\n    }\r\n    // getDynamicFilterExecuteData(nflag) {\r\n    //     this.setState({ loading: true })\r\n    //     let selectedRecord = this.state.selectedRecord || {};\r\n    //     let obj = {// ...inputParam.component, \r\n    //         label: 'samplestoragelistpreperation', valuemember: 'nsamplestoragetransactioncode',\r\n    //         filterquery:   \r\n    //         selectedRecord.filterquery, source: 'view_sampleretrieval', userinfo: this.props.Login.userInfo\r\n    //     }\r\n    //     let urlArray = [];\r\n    //     const url1 = rsapi.post(\"/samplestoragelistpreperation/getdynamicfilterexecutedata\", obj);\r\n    //     urlArray = [url1];\r\n    //     Axios.all(urlArray)\r\n    //         .then(response => {\r\n    //             console.log(response)\r\n    //             let masterData = this.state.masterData\r\n    //             masterData = { ...masterData, ...response[0].data }\r\n    //             this.setState({\r\n    //                 masterData: { ...masterData },\r\n    //                 loading: false,\r\n    //                 openModal: false,\r\n    //                 submittedselectedRecord: nflag === 2 ?\r\n    //                     { ...this.state.submittedselectedRecord }\r\n    //                     :\r\n    //                     { ...selectedRecord }\r\n    //                 ,\r\n    //                 isFilterPopup: false,\r\n    //                 selectedRecord: {}\r\n    //             })\r\n    //         })\r\n    //         .catch(error => {\r\n    //             this.setState({\r\n    //                 loading: false\r\n    //             });\r\n    //             if (error.response.status === 500) {\r\n    //                 toast.error(error.message);\r\n    //             }\r\n    //             else {\r\n    //                 toast.info(error.response.data.rtn);\r\n    //             }\r\n\r\n    //         })\r\n    // }\r\n\r\n    fetchRecord = (data) => {\r\n        this.setState({ loading: true })\r\n        let selectedRecord = this.state.selectedRecord\r\n        let inputParamData = {\r\n            nsamplestoragelocationcode: this.state.masterData.selectedSampleStorageLocation.nsamplestoragelocationcode,\r\n            userinfo: this.props.Login.userInfo,\r\n        }\r\n        let urlArray = [];\r\n        const url1 = rsapi.post(\"samplestoragelistpreperation/addSampleStorageMapping\", inputParamData);\r\n\r\n        const url2 = rsapi.post(\"product/getProduct\",\r\n            { 'userinfo': this.props.Login.userInfo });\r\n\r\n        const url3 = rsapi.post(\"samplestoragelistpreperation/getEditSampleStorageMapping\",\r\n            { 'nsamplestoragemappingcode': data.nsamplestoragemappingcode, 'userinfo': this.props.Login.userInfo });\r\n\r\n        urlArray = [url1, url2, url3];\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const storageMappingMap = constructOptionList(response[0].data['samplestoragecontainerpath'] || [],\r\n                    \"nsamplestoragecontainerpathcode\",\r\n                    \"scontainerpath\", undefined, undefined, true);\r\n                const storageMappingMapList = storageMappingMap.get(\"OptionList\");\r\n                let containerStructure = response[0].data['containerStructure'];\r\n\r\n                const containerTypeMap = constructOptionList(response[0].data['containerType'] || [],\r\n                    \"ncontainertypecode\",\r\n                    \"scontainertype\", undefined, undefined, true);\r\n                const containerTypeList = containerTypeMap.get(\"OptionList\");\r\n\r\n                const directionmasterMap = constructOptionList(response[0].data['directionmaster'] || [],\r\n                    \"ndirectionmastercode\",\r\n                    \"sdirection\", undefined, undefined, true);\r\n                const directionmasterList = directionmasterMap.get(\"OptionList\");\r\n\r\n\r\n                const containerstructureMap = constructOptionList(response[2].data['containerStructure']\r\n                    || [],\r\n                    \"ncontainerstructurecode\",\r\n                    \"scontainerstructurename\", undefined, undefined, true);\r\n                const containerstructureList = containerstructureMap.get(\"OptionList\");\r\n\r\n                const productMap = constructOptionList(response[1].data['Product'] || [],\r\n                    \"nproductcode\",\r\n                    \"sproductname\", undefined, undefined, true);\r\n                const productList = productMap.get(\"OptionList\");\r\n\r\n                const editedObject = response[2].data.editsampleStorageMapping;\r\n\r\n                storageMappingMapList.unshift({ label: editedObject.scontainerpath, value: editedObject.nsamplestoragecontainerpathcode })\r\n                selectedRecord = {\r\n                    ndirectionmastercode: { label: editedObject.sdirection, value: editedObject.ndirectionmastercode },\r\n                    nsamplestoragecontainerpathcode: { label: editedObject.scontainerpath, value: editedObject.nsamplestoragecontainerpathcode },\r\n                    nproductcode: { label: editedObject.sproductname, value: editedObject.nproductcode },\r\n                    ncontainertypecode: { label: editedObject.scontainertype, value: editedObject.ncontainertypecode },\r\n                    ncontainerstructurecode: { label: editedObject.scontainerstructurename, value: editedObject.ncontainerstructurecode },\r\n                    nneedposition: editedObject.nneedposition === 3 ? true : false,\r\n                    directionmasterOptions: directionmasterList,\r\n                    nquantity: editedObject.nquantity,\r\n                    nrow: editedObject.nrow,\r\n                    ncolumn: editedObject.ncolumn,\r\n                    nsamplestoragemappingcode: editedObject.nsamplestoragemappingcode\r\n                }\r\n                this.setState({\r\n                    openSpreadSheet: false,\r\n                    openModal: true,\r\n                    selectedRecord: {\r\n                        ...selectedRecord,\r\n                        storageMappingMapOptions: storageMappingMapList,\r\n                        productOptions: productList,\r\n                        containerTypeOptions: containerTypeList,\r\n                        containerStructureOptions: containerstructureList,\r\n                        isInitialRender: true\r\n                    },\r\n                    operation: 'update',\r\n                    loading: false\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n    // Actions End\r\n    retrievalType = () => {\r\n        let retrievalType = this.state.retrievalType;\r\n        if (retrievalType === 1) {\r\n            retrievalType = 2;\r\n        } else {\r\n            retrievalType = 1;\r\n        }\r\n        this.setState({ retrievalType: retrievalType })\r\n    }\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"agree\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            }\r\n        }\r\n        else if (event.target.type === 'select-one') {\r\n\r\n            selectedRecord[event.target.name] = event.target.value;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.state.openModal && nextState.isInitialRender === false &&\r\n            (nextState.selectedRecord !== this.state.selectedRecord)) {\r\n            return false;\r\n        } else if (this.state.openModal && nextState.isInitialRender === false &&\r\n            (nextState.sheetData !== this.state.sheetData)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    handlePageChangeFilter = (event) => {\r\n        this.setState({ kendoSkip: event.skip, kendoTake: event.take });\r\n    };\r\n    onChange = (immutableTree, config) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[\"tree\"] = immutableTree;\r\n        selectedRecord[\"config\"] = config;\r\n        selectedRecord[\"filterQueryTreeStr\"] = QbUtils.getTree(immutableTree);\r\n        selectedRecord['filterquery'] = QbUtils.sqlFormat(immutableTree, config);\r\n        this.setState({ tree: immutableTree, config: config, selectedRecord: selectedRecord });\r\n\r\n    };\r\n    // cellRender(tdElement, cellProps) {\r\n\r\n    //     if (cellProps.rowType === \"groupFooter\") {\r\n    //         console.log('cellProps.field', cellProps)\r\n    //         if (cellProps.dataItem.field === \"ssamplestoragelocationname\") {\r\n    //             console.log('tdElement', tdElement, 'cellProps', cellProps)\r\n    //             return (\r\n    //                 <td aria-colindex={cellProps.columnIndex} role={\"gridcell\"}>\r\n    //                     Sum: {cellProps.dataItem.aggregates.navailablespace.sum}\r\n    //                 </td>\r\n    //             );\r\n    //         }\r\n    //     }\r\n    //     return tdElement;\r\n    // }\r\n    // handleGroupChange = (event) => {\r\n    //     const newDataState = this.processWithGroups(this.state.masterData.samplestoragelistpreperation || [], this.state.dataStateChange, event.group);\r\n    //     this.setState({\r\n    //         masterData: { ...this.state.masterData, samplestoragelistpreperation: newDataState },\r\n    //         group: event.group,\r\n    //     });\r\n    // };\r\n    // processWithGroups = (data, group) => {\r\n    //     const newDataState = groupBy(data, group);\r\n    //     return newDataState;\r\n    // };\r\n    processWithGroups = (data, dataState) => {\r\n        const aggregates = [\r\n            {\r\n                field: \"navailablespace\",\r\n                aggregate: \"sum\",\r\n            }\r\n        ];\r\n        const groups = dataState.group;\r\n        if (groups) {\r\n            groups.map((group) => (group.aggregates = aggregates));\r\n        }\r\n        dataState.group = groups;\r\n        const newDataState = process(data, dataState);\r\n        // setGroupIds({\r\n        //     data: newDataState.data,\r\n        //     group: dataState.group,\r\n        // });\r\n        return newDataState;\r\n    };\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        // const temparray = data && data.map((option) => {\r\n        //     return { \"idsName\": option.sfieldname, \"dataField\": option.sfieldname, \"width\": \"200px\" };\r\n        // });\r\n        // return temparray;\r\n        const temparray1 = [{ \"idsName\": \"IDS_SAMPLEID\", \"dataField\": \"spositionvalue\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_STORAGESTRUCTURE\", \"dataField\": \"ssamplestoragelocationname\", \"width\": \"200px\"  },\r\n        { \"idsName\": \"IDS_PATHWITHPOSITION\", \"dataField\": \"scontainerpathwithposition\", \"width\": \"500px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_CONTAINERID\", \"dataField\": \"sboxid\", \"width\": \"200px\", \"staticField\": true },\r\n        // { \"idsName\": \"IDS_POSITION\", \"dataField\": \"sposition\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_QUANTITY\", \"dataField\": \"nquantity\", \"width\": \"200px\", \"staticField\": true },\r\n        { \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"200px\", \"staticField\": true }];\r\n        const temparray2 = data && data.map((option) => {\r\n            return { \"idsName\": option.sfieldname, \"dataField\": option.sfieldname, \"width\": \"200px\" };\r\n        });\r\n        const newArray = [...temparray1, ...temparray2]\r\n        return newArray;\r\n    }\r\n    render() {\r\n        const addId = this.state.controlMap.has(\"Add samplestoragelistpreperation\") && this.state.controlMap.get(\"Add samplestoragelistpreperation\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"Edit SampleStorageLocation\") && this.state.controlMap.get(\"Edit SampleStorageLocation\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"Delete SampleStorageLocation\") && this.state.controlMap.get(\"Delete SampleStorageLocation\").ncontrolcode;\r\n        const copyId = this.state.controlMap.has(\"Copy SampleStorageLocation\") && this.state.controlMap.get(\"Copy SampleStorageLocation\").ncontrolcode;\r\n        const approveId = this.state.controlMap.has(\"Approve SampleStorageLocation\") && this.state.controlMap.get(\"Approve SampleStorageLocation\").ncontrolcode;\r\n\r\n        const extractedColumnList = this.state.selectedProjectTypeList ? this.gridfillingColumn(this.state.selectedProjectTypeList) : [];\r\n\r\n        let fields = {};\r\n        if (extractedColumnList.length > 0) {\r\n            extractedColumnList.map(field => {\r\n                field.hasOwnProperty(\"staticField\") ?\r\n                    fields = {\r\n                        ...fields,\r\n                        [field.dataField]: {\r\n                            \"label\": this.props.intl.formatMessage({\r\n                                id: field.idsName,\r\n                            })\r\n                            ,\r\n                            \"type\": \"text\",\r\n                            \"valueSources\": [\"value\", \"func\"],\r\n\r\n                            \"mainWidgetProps\": {\r\n                                \"valueLabel\": \"Name\",\r\n                                \"valuePlaceholder\": this.props.intl.formatMessage({\r\n                                    id: field.idsName\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    :\r\n                    field.dataField==='ssamplestoragelocationname'&&this.state.queryBuilderFreezer.length>0?\r\n                    fields = {\r\n                        ...fields,\r\n                        'nsamplestoragelocationcode': {\r\n                            \"label\": this.props.intl.formatMessage({\r\n                                id: \"IDS_STORAGESTRUCTURENAME\",\r\n                            }),\r\n                            \"type\": \"select\",\r\n                            \"valueSources\": [\"value\"],\r\n                            \"fieldSettings\": {\r\n                                \"listValues\": this.state.queryBuilderFreezer\r\n                            }\r\n                        }\r\n                    }\r\n                    :\r\n                    fields = {\r\n                        ...fields,\r\n                        ['\"' + field.dataField + '\"']: {\r\n                            \"label\": field.dataField\r\n                            ,\r\n                            \"type\": \"text\",\r\n                            \"valueSources\": [\"value\", \"func\"],\r\n\r\n                            \"mainWidgetProps\": {\r\n                                \"valueLabel\": \"Name\",\r\n                                \"valuePlaceholder\": field.dataField\r\n                            }\r\n                        }\r\n                    }\r\n            });\r\n        }\r\n        const filterParam = {\r\n            inputListName: \"sampleStorageLocation\", selectedObject: \"selectedSampleStorageLocation\", primaryKeyField: \"nsamplestoragelocationcode\",\r\n            fetchUrl: \"samplestoragelistpreperation/getActiveSampleStorageMappingById\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"ssamplestoragelocationname\"]\r\n        };\r\n\r\n        const breadCrumbData = this.state.filterData || [];\r\n\r\n        const confirmMessage = new ConfirmMessage();\r\n        return (\r\n            <>\r\n\r\n                <Preloader loading={this.state.loading} />\r\n                {//this.state.retrievalType === 1 ?\r\n                    <>\r\n\r\n                        <ListWrapper className=\"client-list-content\">\r\n\r\n                            {\r\n                                <Col md={12}>\r\n                                    <Row>\r\n                                        <Col md={3}>\r\n                                            <FormSelectSearch\r\n                                                name={\"nprojecttypecode\"}\r\n                                                as={\"select\"}\r\n                                                onChange={(event) => this.onComboChange(event, 'nprojecttypecode')}\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                isMandatory={this.state.selectedRecord[\"nneedposition\"]}\r\n                                                value={this.state.selectedProjectType ? this.state.selectedProjectType || [] : []}\r\n                                                options={this.state.masterData && this.state.masterData.projectbarcodeconfig || []}\r\n                                                optionId={\"value\"}\r\n                                                optionValue={\"label\"}\r\n                                                isMulti={false}\r\n                                                isDisabled={false}\r\n                                                isSearchable={false}\r\n                                                isClearable={false}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    {this.state.selectedProjectTypeList && <Row>\r\n                                        <Col md={12}><DataGrid\r\n                                            // isDownloadPDFRequired={this.state.masterData && this.state.masterData.samplestoragelistpreperation &&\r\n                                            //     this.processWithGroups(this.state.masterData.samplestoragelistpreperation || [],\r\n                                            //         this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                            //             take: 10,\r\n                                            //             skip: 0\r\n                                            //         }).data.length > 0 ?\r\n                                            //     true : false}\r\n                                            // isDownloadExcelRequired={this.state.masterData && this.state.masterData.samplestoragelistpreperation &&\r\n                                            //     this.processWithGroups(this.state.masterData.samplestoragelistpreperation || [],\r\n                                            //         this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                            //             take: 10,\r\n                                            //             skip: 0\r\n                                            //         }).data.length > 0 ?\r\n                                            //     true : false}\r\n                                            isCustomButton={true}\r\n                                            customButtonlist={[{\r\n                                                label: 'IDS_SEARCH',\r\n                                                id: {},\r\n                                                onClick: () => this.opensearch(),\r\n                                                controlname: 'faSearch'\r\n                                            },\r\n                                            // ALPD 5531 Start Button from export and bulk search Added by Abdul Gaffoor A on 07/03/2025\r\n                                            {\r\n                                                 label: 'IDS_EXPORTTEMPLATE',\r\n                                                // id: {},\r\n                                                onClick: () => this.handleExportClick(),\r\n                                                controlname: 'faFileExcel'\r\n                                            },\r\n                                            {\r\n                                                 label: 'IDS_BULKSEARCH',\r\n                                                // id: {},\r\n                                                onClick: () => this.handleImportTemplate(),\r\n                                                controlname: 'faFileImport'\r\n                                            }\r\n                                            // ALPD 5531 End\r\n                                        ]}\r\n                                            isRefreshRequired={false}\r\n                                            // onGroupChange={this.handleGroupChange}\r\n                                            primaryKeyField={'nsamplestoragetransactioncode'}\r\n                                            /*data={this.state.masterData &&\r\n                                                this.state.masterData.samplestoragelistpreperation}*/\r\n                                                \r\n                                                //ALPD-4767--Vignesh R(29-08-2024)\r\n                                                data={\r\n                                                    this.state.masterData && this.state.masterData.samplestoragelistpreperation? this.state.masterData.samplestoragelistpreperation.map(item => {\r\n                                                    return {...item,...JSON.parse(item.jsondata.value)||{}};}) : []  }\r\n                                            /*dataResult={this.state.masterData &&\r\n                                                this.state.masterData.samplestoragelistpreperation ?\r\n                                                process(this.state.masterData.samplestoragelistpreperation || [],\r\n                                                    this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }) : []\r\n                                                // this.processWithGroups(this.state.masterData.samplestoragelistpreperation || [],\r\n                                                //     this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                //         take: 10,\r\n                                                //         skip: 0\r\n                                                //     })\r\n                                            }*/\r\n\r\n                                                //ALPD-4767--Vignesh R(29-08-2024)\r\n                                                dataResult={this.state.masterData &&\r\n                                                    this.state.masterData.samplestoragelistpreperation ?\r\n                                                    process(this.state.masterData.samplestoragelistpreperation.map(item => {\r\n                                                        return {...item,...JSON.parse(item.jsondata.value)};}) || [],\r\n                                                        this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }) : []\r\n                                                    // this.processWithGroups(this.state.masterData.samplestoragelistpreperation || [],\r\n                                                    //     this.state.dataStateChange ? this.state.dataStateChange : {\r\n                                                    //         take: 10,\r\n                                                    //         skip: 0\r\n                                                    //     })\r\n                                                }    \r\n                                            dataState={this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }}\r\n                                            dataStateChange={this.dataStateChange}\r\n                                            extractedColumnList={extractedColumnList}\r\n                                            controlMap={this.state.controlMap}\r\n                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            deleteRecord={this.deleteRecord}\r\n                                            addRecord={() => this.openStorageMapping()}\r\n                                            pageable={true}\r\n                                            scrollable={'scrollable'}\r\n                                            // isComponent={true}\r\n                                            gridHeight={'600px'}\r\n                                            // isActionRequired={true}\r\n                                            isToolBarRequired={true}\r\n                                            //ATE234 Janakumar ALPD-5577 Sample Storage-->while download the pdf, screen getting freezed\r\n                                            isDownloadPDFRequired={false}\r\n                                            isDownloadExcelRequired={true}\r\n                                        // actionIcons={\r\n                                        //     [{\r\n                                        //         title: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }),\r\n                                        //         controlname: \"faPenSquare\",\r\n                                        //         hidden: false,\r\n                                        //         objectName: \"add\",\r\n                                        //         onClick: (param) => this.addSample(param, 1)\r\n                                        //     }]}\r\n                                        /> </Col></Row>}\r\n                                         {/* ALPD-5531 added by Abdul 07-Mar-2025 for Handling Export template Click */}\r\n                                        {this.state.export ?\r\n                                        <LocalizationProvider>\r\n                                            <ExcelExport\r\n                                                data={[]}\r\n                                                collapsible={true}\r\n                                                fileName={(this.props.Login.displayName && this.props.Login.displayName)}\r\n                                                ref={(exporter) => {\r\n                                                    this._excelExportHeader = exporter;\r\n                                                }}>\r\n                                                {[...this.state.exportField].map((item) =>\r\n                                                    <ExcelExportColumn\r\n                                                        field={item.dataField} title={this.props.intl.formatMessage({ id: item.idsName })} width={200} />\r\n                                                )\r\n\r\n                                                }\r\n                                            </ExcelExport>\r\n                                        </LocalizationProvider > : \"\" }\r\n                                        {/* ALPD-5531 End */}\r\n\r\n                                </Col>\r\n\r\n\r\n                            }\r\n\r\n                        </ListWrapper>\r\n\r\n                        {/* < ListWrapper className=\"client-list-content\" ><Row>\r\n                        \r\n                        </Row>\r\n                            <Col md={12}>\r\n                                <Col md={6}>\r\n                                    <Row>\r\n                                        <FormInput\r\n                                            name={'spositionvalue'}\r\n                                            onb\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_POSITIONVALUE\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_POSITIONVALUE\" })}\r\n                                            value={this.state.selectedRecord['spositionvalue']\r\n                                                ? this.state.selectedRecord['spositionvalue'] : \"\"}\r\n                                            maxLength={255}\r\n                                            isDisabled={this.props.isDisabled}\r\n                                            onKeyDown={(event) => this.getSelectedBarcodeData(this.state.selectedRecord)}\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                        />\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    {this.state.selectedBarcodeValue && <div className=\"d-flex justify-content-end mr-3\">\r\n                                        <Row>\r\n                                            {\r\n                                                extractedColumnList.map((item, index) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <Col md={6} key={`specInfo_${index}`}>\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel>{this.props.intl.formatMessage({ id: item.idsName })}</FormLabel>\r\n                                                                    <ReadOnlyText>{this.state.selectedBarcodeValue[item.dataField]}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </Row>\r\n                                    </div>}\r\n                                </Col>\r\n                            </Col>\r\n                            </ListWrapper> */}\r\n                    </>}\r\n\r\n\r\n                {\r\n                    this.state.openModal &&\r\n                    <SlideOutModal show={this.state.openModal}\r\n                        closeModal={this.closeModal}\r\n                        hideSave={true}\r\n                        showSubmit={true}\r\n                        size={this.state.openSpreadSheet || this.state.isFilterPopup ? 'xl' : \"\"}\r\n                        operation={\"\"}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.state.isFilterPopup ? \"\" : this.state.isMultiSampleAdd ? this.props.intl.formatMessage({ id: \"IDS_STORAGESTRUCTURE\" })\r\n                        : this.state.importTemplate ? this.props.intl.formatMessage({ id: \"IDS_IMPORTSAMPLEID\" })\r\n                            : this.state.editedsheetData.scontainerpath}\r\n                        onSaveClick={this.state.isFilterPopup ? this.getDynamicFilterExecuteData.bind(this) : this.state.importTemplate ? this.getImportSampleIDData : this.onSampleMappingSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        // className={\"wide-popup\"}\r\n\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={this.state.isFilterPopup ?\r\n                            <FilterQueryBuilder\r\n                                fields={fields}\r\n                                isSampleStorage={true}\r\n\r\n                                queryArray={this.state.queryArray}\r\n                                skip={this.state.kendoSkip}\r\n                                take={this.state.kendoTake}\r\n                                onChange={this.onChange}\r\n                                tree={this.props.Login.tree !== undefined ? this.props.Login.tree : this.state.selectedRecord.tree}\r\n                                gridColumns={this.slideList}\r\n                                filterData={this.props.Login.slideResult || []}\r\n                                handlePageChange={this.handlePageChangeFilter}\r\n                                static={true}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                updateStore={this.props.updateStore}\r\n                            />\r\n                            : this.props.Login.loadEsign ?\r\n                                <Esign operation={this.props.Login.operation}\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                :\r\n                                this.state.openSpreadSheet ? <>\r\n                                    <MatrixComponent\r\n                                        Rows={this.state.Rows || 1}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        columns={this.state.columns || 1}\r\n                                        selectedRecord={this.state.selectedRecord.sheetData || {}}\r\n                                        sheetData={this.state.sheetData || {}}\r\n                                        isMultiSampleAdd={this.state.isMultiSampleAdd}\r\n                                        childSheetDataChange={this.childSheetDataChange}\r\n                                        editedsheetData={this.state.editedsheetData}\r\n                                        multipleSheetData={this.state.masterData &&\r\n                                            this.state.masterData.samplestoragelistpreperation &&\r\n                                            process(this.state.masterData.samplestoragelistpreperation || [],\r\n                                                this.state.dataStateChange ? this.state.dataStateChange : { skip: 0, take: 10 }).data} />\r\n                                </> :\r\n// ALPD-5531 added by Abdul 07-Mar-2025 for Handling Export template Click\r\n                                this.state.importTemplate ? <>\r\n                                  <AddFile\r\n                                    selectedRecord={this.state.selectedRecord}\r\n                                    onDrop={this.onDropFile}\r\n                                    deleteAttachment={this.deleteAttachment}\r\n                                  />\r\n                                </> :\r\n// ALPD-5531 End\r\n                                    <AddSampleStorageMapping\r\n                                        operation={this.state.operation}\r\n                                        selectedRecordFilter={this.state.selectedRecordFilter}\r\n                                        onInputChange={(e) => this.onInputChange(e)}\r\n                                        onComboChange={this.onComboChange}\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        childDataChange={this.childDataChange}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                    />\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService\r\n})(injectIntl(SampleStorageListPreperation));"]},"metadata":{},"sourceType":"module"}