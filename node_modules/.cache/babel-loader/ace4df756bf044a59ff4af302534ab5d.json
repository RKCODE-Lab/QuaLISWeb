{"ast":null,"code":"import{faGripVertical,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{Button,Card,Col,Form,Row}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';import{BuilderBorder,ContionalButton,DeleteRule}from'./Sqlbuilder.styled';import'../../assets/styles/querybuilder.css';import{ColumnType}from'../../components/Enumeration';import FormTextarea from'../../components/form-textarea/form-textarea.component';import{stringOperatorData,conditionalOperatorData,numericOperatorData,joinConditionData}from'./QueryBuilderData';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';var BuildQuery=function BuildQuery(props){// function createRuleDesign(count) {\n//     const design = [];\n//     for(let parentIndex=1; parentIndex<=count; parentIndex++) {\n//         const foreignTableCount = props.foreignTableCount[parentIndex]? props.foreignTableCount[parentIndex]: 1;\n//         design.push(\n//             <BuilderBorder key={`parentkey_${parentIndex}`}>\n//                 <Row className=\"mt-3\">\n//                     {/* <Col md={1}> */}\n//                         <DeleteRule key={`deletekey_${parentIndex}`} onClick={()=>props.deleteRule(parentIndex)}>\n//                             <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\n//                         </DeleteRule>\n//                     {/* </Col> */}\n//                     <Col md={2} key={`tablekey_${parentIndex}`}>\n//                         <FormSelectSearch\n//                             formGroupClassName=\"remove-floating-label-margin\"\n//                             formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\n//                             isSearchable={ true }\n//                             name={ `stablename_${parentIndex}` }\n//                             placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\n//                             showOption={ true }\n//                             options={ props.databaseTableList }\n//                             optionId='stablename'\n//                             optionValue='displayname'\n//                             value={ props.selectedRecord[`stablename_${parentIndex}`] || \"\" }\n//                             onChange={ value => props.onTableChange(value, `stablename_${parentIndex}`, parentIndex) }\n//                         >\n//                         </FormSelectSearch>\n//                     </Col>\n//                     <Col md={2} key={`columnkey_${parentIndex}`}>\n//                         <FormSelectSearch\n//                             formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n//                             isSearchable={ true }\n//                             name={ `columnname_${parentIndex}` }\n//                             placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n//                             showOption={ true }\n//                             options={ props.tableColumnList[parentIndex] || [] }\n//                             optionId='columnname'\n//                             optionValue='displayname'\n//                             value={ props.selectedRecord[`columnname_${parentIndex}`] || \"\" }\n//                             onChange={ value => props.onColumnChange(value, `columnname_${parentIndex}`, parentIndex) }\n//                         >\n//                         </FormSelectSearch>\n//                     </Col>\n//                     {\n//                         props.selectedRecord[`columnname_${parentIndex}`] ? props.selectedRecord[`columnname_${parentIndex}`].items.columntype === ColumnType.TEXTINPUT ? \n//                         <>\n//                             <Col md={2}>\n//                                 <FormSelectSearch\n//                                     formLabel=\"\"\n//                                     isSearchable={true}\n//                                     name={ `ssymbolname_${parentIndex}` }\n//                                     placeholder=\"\"\n//                                     showOption={true}\n//                                     options={props.validationData}\n//                                     optionId='nvalidationcode'\n//                                     optionValue='ssymbolname'\n//                                     value={props.selectedRecord[`ssymbolname_${parentIndex}`] || \"\"}\n//                                     onChange={value => props.onSymbolChange(value, `ssymbolname_${parentIndex}`, parentIndex)}\n//                                 >\n//                                 </FormSelectSearch>\n//                             </Col>\n//                             <Col md={2}>\n//                                 <FormInput\n//                                     name={ `sinputname_${parentIndex}` }\n//                                     label={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\n//                                     type=\"text\"\n//                                     onChange={(event) => props.onInputChange(event, parentIndex)}\n//                                     placeholder={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\n//                                     value={ props.selectedRecord?props.selectedRecord[`sinputname_${parentIndex}`]:\"\" }\n//                                     maxLength={100}\n//                                 />\n//                             </Col>\n//                        </>\n//                         : props.selectedRecord[`columnname_${parentIndex}`].items.columntype === ColumnType.COMBO ?\n//                          createForeignTableDesign(foreignTableCount) \n//                         : \"\"\n//                         :\"\"\n//                     }\n//                 </Row>\n//             </BuilderBorder>\n//         )\n//     }\n//     return design;\n// }\n// function createForeignTableDesign(foreignTableCount, parentIndex) {\n//     const fDesign = [];\n//     for(let childIndex=1; childIndex < foreignTableCount; childIndex++) {\n//         fDesign.push(\n//             <>\n//                {\n//                     <>\n//                         <Col md={1}>\n//                             <FormSelectSearch\n//                                 formLabel=\"\"\n//                                 isSearchable={true}\n//                                 name={ `ssymbolname_${parentIndex+''+childIndex}` }\n//                                 placeholder=\"\"\n//                                 showOption={true}\n//                                 options={props.validationData}\n//                                 optionId='nvalidationcode'\n//                                 optionValue='ssymbolname'\n//                                 value={props.selectedRecord[`ssymbolname_${parentIndex+''+childIndex}`]}\n//                                 onChange={value => props.onSymbolChange(value, `ssymbolname_${parentIndex+''+childIndex}`, parentIndex+''+childIndex)}\n//                             >\n//                             </FormSelectSearch>\n//                         </Col>\n//                         <Col md={2}>\n//                             <FormSelectSearch\n//                                 formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n//                                 isSearchable={ true }\n//                                 name={ `foreigncolumnname_${parentIndex+''+childIndex}` }\n//                                 placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n//                                 showOption={ true }\n//                                 options={ props.tableColumnList[parentIndex+''+childIndex] || [] }\n//                                 optionId='columnname'\n//                                 optionValue='displayname'\n//                                 value={ props.selectedRecord[`foreigncolumnname_${parentIndex+''+childIndex}`] }\n//                                 onChange={ value => props.onColumnChange(value, `foreigncolumnname_${parentIndex+''+childIndex}`, parentIndex+''+childIndex) }\n//                             >\n//                             </FormSelectSearch>\n//                         </Col>\n//                     </>\n//                 }\n//             </>\n//         )\n//     }\n//     return fDesign;\n// }\nfunction createViewRules(){var indexCount=0;var design=[];props.addRuleList.map(function(items,index){var stringOperators=stringOperatorData;if(props.selectedRecord[\"columnname_\".concat(index)]&&!props.selectedRecord[\"columnname_\".concat(index)].items.needmasterdata&&props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.TEXTINPUT){var temp=stringOperators.filter(function(item){if(item.items.symbolType!==6){return item;}});stringOperators=temp;}if(items>-1){indexCount=indexCount+1;};design.push(/*#__PURE__*/React.createElement(React.Fragment,null,items>-1?/*#__PURE__*/React.createElement(React.Fragment,null,indexCount!==1?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"button_and_\".concat(index)]===true?\"builder-btn-primary\":\"\",marginLeft:1,onClick:function onClick(){return props.onConditionClick(\"button_and_\".concat(index),index);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_AND\",defaultMessage:\"And\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"button_or_\".concat(index)]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_or_\".concat(index),index);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OR\",defaultMessage:\"Or\"})))):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(BuilderBorder,{key:index},/*#__PURE__*/React.createElement(Row,{className:\"mt-3\"},/*#__PURE__*/React.createElement(DeleteRule,{marginLeft:1,onClick:function onClick(){return props.deleteRule(index);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,color:\"red\"})),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"columnname_\".concat(index),showOption:true,options:props.viewColumnListByRule[index]||[],optionId:\"columnname\",optionValue:\"displayname\",value:props.selectedRecord[\"columnname_\".concat(index)]||\"\",onChange:function onChange(value){return props.onRuleChange(value,\"columnname_\".concat(index),index);}})),props.selectedRecord[\"columnname_\".concat(index)]&&props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.TEXTINPUT?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname_\".concat(index),placeholder:\"\",showOption:true,options:stringOperators,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"ssymbolname_\".concat(index)]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname_\".concat(index),index);}})),props.selectedRecord[\"ssymbolname_\".concat(index)]&&props.selectedRecord[\"ssymbolname_\".concat(index)].items.isInputVisible?/*#__PURE__*/React.createElement(React.Fragment,null,props.selectedRecord[\"columnname_\".concat(index)].items.needmasterdata?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"\".concat(props.selectedRecord[\"columnname_\".concat(index)].items.valuemember,\"_\").concat(index),showOption:true,options:props.viewMasterListByRule[index]||[],optionId:props.selectedRecord[\"columnname_\".concat(index)].items.valuemember,optionValue:props.selectedRecord[\"columnname_\".concat(index)].items.displaymember,value:props.selectedRecord[\"\".concat(props.selectedRecord[\"columnname_\".concat(index)].items.valuemember,\"_\").concat(index)]||\"\",isMulti:props.selectedRecord[\"ssymbolname_\".concat(index)].items.ismulti,onChange:function onChange(value){return props.onMasterDataChange(value,\"\".concat(props.selectedRecord[\"columnname_\".concat(index)].items.valuemember,\"_\").concat(index),index);}})):/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormInput,{formGroupClassName:\"remove-floating-label-margin\",name:\"sinputname_\".concat(index),type:\"text\",onChange:function onChange(event){return props.onInputChange(event,1);},value:props.selectedRecord?props.selectedRecord[\"sinputname_\".concat(index)]:\"\",maxLength:100}))):/*#__PURE__*/React.createElement(React.Fragment,null)):props.selectedRecord[\"columnname_\".concat(index)]&&props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.NUMERICINPUT?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname_\".concat(index),placeholder:\"\",showOption:true,options:numericOperatorData,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"ssymbolname_\".concat(index)]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname_\".concat(index),index);}})),props.selectedRecord[\"ssymbolname_\".concat(index)]&&props.selectedRecord[\"ssymbolname_\".concat(index)].items.isInputVisible===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{formGroupClassName:\"remove-floating-label-margin\",label:props.selectedRecord[\"ssymbolname_\".concat(index)].items.symbolType===5?props.intl.formatMessage({id:\"IDS_FROM\"}):\"\",name:\"snumericinput_\".concat(index),type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"snumericinput_\".concat(index)]?props.selectedRecord[\"snumericinput_\".concat(index)]:\"\",onChange:function onChange(event){return props.onInputChange(event,2);},maxLength:10})),props.selectedRecord[\"ssymbolname_\".concat(index)]&&props.selectedRecord[\"ssymbolname_\".concat(index)].items.symbolType===5?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{formGroupClassName:\"remove-floating-label-margin\",label:props.intl.formatMessage({id:\"IDS_TO\"}),name:\"snumericinputtwo_\".concat(index),type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"snumericinputtwo_\".concat(index)]?props.selectedRecord[\"snumericinputtwo_\".concat(index)]:\"\",onChange:function onChange(event){return props.onInputChange(event,2);},maxLength:10})):/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null)):props.selectedRecord[\"columnname_\".concat(index)]&&props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.COMBO?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname_\".concat(index),placeholder:\"\",showOption:true,options:conditionalOperatorData,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"ssymbolname_\".concat(index)]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname_\".concat(index),index);}})),props.selectedRecord[\"ssymbolname_\".concat(index)]&&props.selectedRecord[\"ssymbolname_\".concat(index)].items.isInputVisible===true?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"\".concat(props.selectedRecord[\"columnname_\".concat(index)].items.sforeigncolumnname,\"_\").concat(index),placeholder:\"\",showOption:true,options:props.masterdata&&props.masterdata[index]||[],optionId:props.selectedRecord[\"columnname_\".concat(index)].items.sforeigncolumnname,optionValue:\"sdisplayname\",value:props.selectedRecord[\"\".concat(props.selectedRecord[\"columnname_\".concat(index)].items.sforeigncolumnname,\"_\").concat(index)]||\"\",onChange:function onChange(value){return props.onMasterDataChange(value,\"\".concat(props.selectedRecord[\"columnname_\".concat(index)].items.sforeigncolumnname,\"_\").concat(index),index);},isMulti:props.selectedRecord[\"ssymbolname_\".concat(index)].items.ismulti})):/*#__PURE__*/React.createElement(React.Fragment,null)):props.selectedRecord[\"columnname_\".concat(index)]&&(props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.DATATIME||props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.DATE)?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname_\".concat(index),placeholder:\"\",showOption:true,options:numericOperatorData,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"ssymbolname_\".concat(index)]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname_\".concat(index),index);}})),props.selectedRecord[\"ssymbolname_\".concat(index)]&&props.selectedRecord[\"ssymbolname_\".concat(index)].items.isInputVisible===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(DateTimePicker,{formGroupClassName:\"remove-floating-label-margin\",label:props.selectedRecord[\"ssymbolname_\".concat(index)].items.symbolType===5?props.intl.formatMessage({id:\"IDS_FROM\"}):\"\",name:\"dateinput_\".concat(index),className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[\"dateinput_\".concat(index)],dateFormat:props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.DATATIME?props.userInfo[\"ssitedatetime\"]:props.userInfo[\"ssitedate\"],isClearable:false,showTimeInput:props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.DATATIME?true:false,onChange:function onChange(date){return props.handleFilterDateChange(\"dateinput_\".concat(index),date);},value:props.selectedRecord[\"dateinput_\".concat(index)]||\"\"})),props.selectedRecord[\"ssymbolname_\".concat(index)].items.symbolType===5?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(DateTimePicker,{formGroupClassName:\"remove-floating-label-margin\",label:props.intl.formatMessage({id:\"IDS_TO\"}),name:\"dateinputtwo_\".concat(index),className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[\"dateinputtwo_\".concat(index)],dateFormat:props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.DATATIME?props.userInfo[\"ssitedatetime\"]:props.userInfo[\"ssitedate\"],isClearable:false,showTimeInput:props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.DATATIME?true:false,onChange:function onChange(date){return props.handleFilterDateChange(\"dateinputtwo_\".concat(index),date);},value:props.selectedRecord[\"dateinputtwo_\".concat(index)]||\"\"})):/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null)))):/*#__PURE__*/React.createElement(React.Fragment,null)));});return design;}function createSqlRules(){var indexCount=0;var design=[];props.addRuleList.map(function(items,index){var stringOperators=props.selectedRecord[\"columnname_\".concat(index)].items&&props.selectedRecord[\"columnname_\".concat(index)].items.needmasterdata?stringOperatorData:stringOperatorData.map(function(item){return item.symbolType!==6;});if(items>-1){indexCount=indexCount+1;};design.push(/*#__PURE__*/React.createElement(React.Fragment,null,items>-1?/*#__PURE__*/React.createElement(React.Fragment,null,indexCount!==1?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"button_and_\".concat(index)]===true?\"builder-btn-primary\":\"\",marginLeft:1,onClick:function onClick(){return props.onConditionClick(\"button_and_\".concat(index),index);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_AND\",defaultMessage:\"And\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"button_or_\".concat(index)]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_or_\".concat(index),index);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OR\",defaultMessage:\"Or\"}))))):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(BuilderBorder,{key:index},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(DeleteRule,{marginLeft:1,onClick:function onClick(){return props.deleteRule(index);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,color:\"red\"})),/*#__PURE__*/React.createElement(Col,{md:2,key:\"tablekey_\".concat(index)},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\"// formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\n,isSearchable:true,name:\"stablename_\".concat(index)// placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\n,showOption:true,options:props.databaseTableList,optionId:\"stablename\",optionValue:\"displayname\",value:props.selectedRecord[\"stablename_\".concat(index)]||\"\",onChange:function onChange(value){return props.onTableChange(value,\"stablename_\".concat(index),index);}})),/*#__PURE__*/React.createElement(Col,{md:2,key:\"columnkey_\".concat(index)},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\"// formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n,isSearchable:true,name:\"columnname_\".concat(index)// placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n,showOption:true,options:props.tableColumnList[index]||[],optionId:\"columnname\",optionValue:\"displayname\",value:props.selectedRecord[\"columnname_\".concat(index)]||\"\"// onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\n,onChange:function onChange(value){return props.onRuleChange(value,\"columnname_\".concat(index),index);}})),props.selectedRecord[\"columnname_\".concat(index)]&&props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.COMBO?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname_\".concat(index),placeholder:\"\",showOption:true,options:joinConditionData,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"ssymbolname_\".concat(index)],onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname_\".concat(index),index);}})),/*#__PURE__*/React.createElement(Col,{md:2,key:\"foreigncolumnkey_\".concat(index)},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\"// formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n,isSearchable:true,name:\"foreigncolumnname_\".concat(index)// placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n,showOption:true,options:props.foreignTableColumnList[index]||[],optionId:\"columnname\",optionValue:\"displayname\",value:props.selectedRecord[\"foreigncolumnname_\".concat(index)]||\"\"// onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\n,onChange:function onChange(value){return props.onRuleChange(value,\"foreigncolumnname_\".concat(index),index);}}))):/*#__PURE__*/React.createElement(React.Fragment,null),props.selectedRecord[\"columnname_\".concat(index)]&&props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.TEXTINPUT?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname_\".concat(index),placeholder:\"\",showOption:true,options:stringOperators,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"ssymbolname_\".concat(index)]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname_\".concat(index),index);}})),props.selectedRecord[\"ssymbolname_\".concat(index)]&&props.selectedRecord[\"ssymbolname_\".concat(index)].items.isInputVisible===true?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormInput,{formGroupClassName:\"remove-floating-label-margin\",name:\"sinputname_\".concat(index)// label={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\n,type:\"text\",onChange:function onChange(event){return props.onInputChange(event,1);}// placeholder={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\n,value:props.selectedRecord?props.selectedRecord[\"sinputname_\".concat(index)]:\"\",maxLength:100})):/*#__PURE__*/React.createElement(React.Fragment,null)):props.selectedRecord[\"columnname_\".concat(index)]&&props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.NUMERICINPUT?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname_\".concat(index),placeholder:\"\",showOption:true,options:numericOperatorData,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"ssymbolname_\".concat(index)]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname_\".concat(index),index);}})),props.selectedRecord[\"ssymbolname_\".concat(index)]?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{name:\"snumericinput_\".concat(index),label:props.selectedRecord[\"ssymbolname_\".concat(index)].items.symbolType===5?props.intl.formatMessage({id:\"IDS_TO\"}):\"\",type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"snumericinput_\".concat(index)]?props.selectedRecord[\"snumericinput_\".concat(index)]:\"\",onChange:function onChange(event){return props.onInputChange(event,2);},maxLength:10})):props.selectedRecord[\"ssymbolname_\".concat(index)].items.symbolType===5?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_TO\"}),name:\"snumericinputtwo_\".concat(index),type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"snumericinputtwo_\".concat(index)]?props.selectedRecord[\"snumericinputtwo_\".concat(index)]:\"\",onChange:function onChange(event){return props.onInputChange(event,2);},maxLength:10})):/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null)))):/*#__PURE__*/React.createElement(React.Fragment,null)));});return design;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(Form.Check,{inline:true,label:props.intl.formatMessage({id:\"IDS_VIEWS\"}),name:\"viewquery\",type:'radio',checked:!props.sqlQuery,disabled:!props.sqlQuery,id:\"inline-view\",onClick:function onClick(){return props.onQueryTypeOnclick(\"views\");}}),/*#__PURE__*/React.createElement(Form.Check,{inline:true,label:props.intl.formatMessage({id:\"IDS_SQL\"}),name:\"sqlquery\",type:'radio',checked:props.sqlQuery,disabled:props.sqlQuery,id:\"inline-sql\",onClick:function onClick(){return props.onQueryTypeOnclick(\"sql\");}}),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.clearRule();},className:\"mr-1\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CLEAR\",defaultMessage:\"Clear\"})),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.resetRule();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RESET\",defaultMessage:\"Reset\"}))),/*#__PURE__*/React.createElement(Col,{md:4},props.sqlQuery?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.addRule(\"sql\");},className:\"mr-1\"},'+',\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDRULE\",defaultMessage:\"Add Rule\"})),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.onGenerateQuery();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_GENERATEQUERY\",defaultMessage:\"Generate Query\"}))):/*#__PURE__*/React.createElement(React.Fragment,null))),props.sqlQuery===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"mt-3\"},/*#__PURE__*/React.createElement(Col,{md:12},props.addRuleList.length>0?createSqlRules():/*#__PURE__*/React.createElement(React.Fragment,null)),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,props.intl.formatMessage({id:\"IDS_QUERY\"}),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.onExecuteRule();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_EXECUTE\",defaultMessage:\"Execute\"}))),/*#__PURE__*/React.createElement(Card.Body,null,props.selectedRecord&&props.selectedRecord[\"sdisplayquery\"]?props.selectedRecord[\"sdisplayquery\"]:\"No Query\"))))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"mt-4 mb-4\"},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:props.intl.formatMessage({id:\"IDS_VIEWS\"}),isSearchable:true,name:\"sviewname\",placeholder:props.intl.formatMessage({id:\"IDS_VIEWS\"}),showOption:true,options:props.databaseviewList||[],optionId:\"sviewname\",optionValue:\"displayname\",value:props.selectedRecord[\"sviewname\"]||\"\",onChange:function onChange(value){return props.onViewComboChange(value,\"sviewname\");}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.addRule(\"views\");},className:\"mr-1\"},'+',\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDRULE\",defaultMessage:\"Add Rule\"}))),/*#__PURE__*/React.createElement(Col,{md:4})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},props.addRuleList.length>0?createViewRules():/*#__PURE__*/React.createElement(React.Fragment,null)),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,props.intl.formatMessage({id:\"IDS_QUERY\"}),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.onExecuteRule();},className:\"float-right\"},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_EXECUTE\",defaultMessage:\"Execute\"}))),/*#__PURE__*/React.createElement(Card.Body,null,props.selectedRecord&&props.selectedRecord[\"sdisplayquery\"]?props.selectedRecord[\"sdisplayquery\"]:\"No Query\"))))));};export default injectIntl(BuildQuery);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboard/BuildQuery.js"],"names":["faGripVertical","faTrashAlt","FontAwesomeIcon","React","Button","Card","Col","Form","Row","FormattedMessage","injectIntl","FormSelectSearch","FormInput","BuilderBorder","ContionalButton","DeleteRule","ColumnType","FormTextarea","stringOperatorData","conditionalOperatorData","numericOperatorData","joinConditionData","CustomSwitch","DateTimePicker","BuildQuery","props","createViewRules","indexCount","design","addRuleList","map","items","index","stringOperators","selectedRecord","needmasterdata","columntype","TEXTINPUT","temp","filter","item","symbolType","push","onConditionClick","deleteRule","viewColumnListByRule","value","onRuleChange","onSymbolChange","isInputVisible","valuemember","viewMasterListByRule","displaymember","ismulti","onMasterDataChange","event","onInputChange","NUMERICINPUT","intl","formatMessage","id","COMBO","sforeigncolumnname","masterdata","DATATIME","DATE","userInfo","date","handleFilterDateChange","createSqlRules","databaseTableList","onTableChange","tableColumnList","foreignTableColumnList","sqlQuery","onQueryTypeOnclick","clearRule","resetRule","addRule","onGenerateQuery","length","onExecuteRule","databaseviewList","onViewComboChange"],"mappings":"AAAA,OAASA,cAAT,CAAyBC,UAAzB,KAA2C,mCAA3C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,GAAvB,CAA4BC,IAA5B,CAAkCC,GAAlC,KAA6C,iBAA7C,CACA,OAASC,gBAAT,CAA2BC,UAA3B,KAA6C,YAA7C,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,OAASC,aAAT,CAAwBC,eAAxB,CAAyCC,UAAzC,KAA2D,qBAA3D,CACA,MAAO,sCAAP,CACA,OAASC,UAAT,KAA2B,8BAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,OAASC,kBAAT,CAA6BC,uBAA7B,CAAsDC,mBAAtD,CAA2EC,iBAA3E,KAAoG,oBAApG,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,8DAA3B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAaeAAT,EAA2B,CACvB,GAAIC,CAAAA,UAAU,CAAG,CAAjB,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACAH,KAAK,CAACI,WAAN,CAAkBC,GAAlB,CAAsB,SAACC,KAAD,CAAQC,KAAR,CAAkB,CAEpC,GAAIC,CAAAA,eAAe,CAAGf,kBAAtB,CACA,GAAGO,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,IACA,CAACP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDI,cADnD,EAEAV,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACqB,SAF/E,CAE0F,CACtF,GAAMC,CAAAA,IAAI,CAAGL,eAAe,CAACM,MAAhB,CAAuB,SAAAC,IAAI,CAAG,CACvC,GAAGA,IAAI,CAACT,KAAL,CAAWU,UAAX,GAA0B,CAA7B,CAA+B,CAC3B,MAAOD,CAAAA,IAAP,CACH,CACJ,CAJY,CAAb,CAKAP,eAAe,CAAGK,IAAlB,CACH,CAED,GAAGP,KAAK,CAAG,CAAC,CAAZ,CAAe,CACXJ,UAAU,CAAGA,UAAU,CAAG,CAA1B,CACH,EACDC,MAAM,CAACc,IAAP,cACA,wCACMX,KAAK,CAAG,CAAC,CAAT,cACF,wCACMJ,UAAU,GAAK,CAAf,cACF,oBAAC,GAAD,mBAKI,oBAAC,eAAD,EAAiB,IAAI,CAAC,QAAtB,CAA+B,SAAS,CAAEF,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,KAA8C,IAA9C,CAAoD,qBAApD,CAA2E,EAArH,CAAyH,UAAU,CAAE,CAArI,CACI,OAAO,CAAE,yBAAIP,CAAAA,KAAK,CAACkB,gBAAN,sBAAqCX,KAArC,EAA8CA,KAA9C,CAAJ,EADb,eAEI,6CAAM,oBAAC,gBAAD,EAAkB,EAAE,CAAC,SAArB,CAA+B,cAAc,CAAC,KAA9C,EAAN,CAFJ,CALJ,cASI,oBAAC,eAAD,EAAiB,IAAI,CAAC,QAAtB,CAA+B,SAAS,CAAEP,KAAK,CAACS,cAAN,qBAAkCF,KAAlC,KAA6C,IAA7C,CAAmD,qBAAnD,CAA0E,EAApH,CAAwH,UAAU,CAAE,CAApI,CACI,OAAO,CAAE,yBAAIP,CAAAA,KAAK,CAACkB,gBAAN,qBAAoCX,KAApC,EAA6CA,KAA7C,CAAJ,EADb,eAEI,6CAAM,oBAAC,gBAAD,EAAkB,EAAE,CAAC,QAArB,CAA8B,cAAc,CAAC,IAA7C,EAAN,CAFJ,CATJ,CADE,cAcM,wCAfZ,cAiBI,oBAAC,aAAD,EAAe,GAAG,CAAEA,KAApB,eACI,oBAAC,GAAD,EAAK,SAAS,CAAC,MAAf,eACI,oBAAC,UAAD,EAAY,UAAU,CAAE,CAAxB,CAA2B,OAAO,CAAE,yBAAIP,CAAAA,KAAK,CAACmB,UAAN,CAAiBZ,KAAjB,CAAJ,EAApC,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAE/B,UAAvB,CAAmC,KAAK,CAAC,KAAzC,EADJ,CADJ,cAII,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,YAAY,CAAG,IAFnB,CAGI,IAAI,sBAAiB+B,KAAjB,CAHR,CAII,UAAU,CAAG,IAJjB,CAKI,OAAO,CAAGP,KAAK,CAACoB,oBAAN,CAA2Bb,KAA3B,GAAqC,EALnD,CAMI,QAAQ,CAAC,YANb,CAOI,WAAW,CAAC,aAPhB,CAQI,KAAK,CAAGP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,IAA+C,EAR3D,CASI,QAAQ,CAAG,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAACsB,YAAN,CAAmBD,KAAnB,sBAAwCd,KAAxC,EAAiDA,KAAjD,CAAJ,EATpB,EADJ,CAJJ,CAiBMP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,IAA+CP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACqB,SAA3H,cACF,qDACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,SAAS,CAAC,EAFd,CAGI,YAAY,CAAE,IAHlB,CAII,IAAI,uBAAkBL,KAAlB,CAJR,CAKI,WAAW,CAAC,EALhB,CAMI,UAAU,CAAE,IANhB,CAOI,OAAO,CAAEC,eAPb,CAQI,QAAQ,CAAC,iBARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAER,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IAAgD,EAV3D,CAWI,QAAQ,CAAE,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAACuB,cAAN,CAAqBF,KAArB,uBAA2Cd,KAA3C,EAAoDA,KAApD,CAAJ,EAXnB,EADJ,CADJ,CAiBMP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IACCP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDkB,cADpD,cAEF,wCACExB,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDI,cAAlD,cAEF,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,YAAY,CAAG,IAFnB,CAGI,IAAI,WAAMV,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDmB,WAAxD,aAAuElB,KAAvE,CAHR,CAII,UAAU,CAAG,IAJjB,CAKI,OAAO,CAAGP,KAAK,CAAC0B,oBAAN,CAA2BnB,KAA3B,GAAqC,EALnD,CAMI,QAAQ,CAAEP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDmB,WANhE,CAOI,WAAW,CAAEzB,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDqB,aAPnE,CAQI,KAAK,CAAG3B,KAAK,CAACS,cAAN,WAAwBT,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDmB,WAA1E,aAAyFlB,KAAzF,IAAqG,EARjH,CASI,OAAO,CAAEP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDsB,OAThE,CAUI,QAAQ,CAAG,kBAAAP,KAAK,QAAIrB,CAAAA,KAAK,CAAC6B,kBAAN,CAAyBR,KAAzB,WAAmCrB,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDmB,WAArF,aAAoGlB,KAApG,EAA6GA,KAA7G,CAAJ,EAVpB,EADJ,CAFE,cAgBF,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,SAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,IAAI,sBAAiBA,KAAjB,CAFR,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAACuB,KAAD,QAAW9B,CAAAA,KAAK,CAAC+B,aAAN,CAAoBD,KAApB,CAA2B,CAA3B,CAAX,EAJd,CAKI,KAAK,CAAG9B,KAAK,CAACS,cAAN,CAAqBT,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,EAArB,CAAkE,EAL9E,CAMI,SAAS,CAAE,GANf,EADJ,CAjBA,CAFE,cAgCD,wCAjDL,CADE,CAqDGP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,IAA+CP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACyC,YAA3H,cACL,qDACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,SAAS,CAAC,EAFd,CAGI,YAAY,CAAE,IAHlB,CAII,IAAI,uBAAkBzB,KAAlB,CAJR,CAKI,WAAW,CAAC,EALhB,CAMI,UAAU,CAAE,IANhB,CAOI,OAAO,CAAEZ,mBAPb,CAQI,QAAQ,CAAC,iBARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAEK,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IAAgD,EAV3D,CAWI,QAAQ,CAAE,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAACuB,cAAN,CAAqBF,KAArB,uBAA2Cd,KAA3C,EAAoDA,KAApD,CAAJ,EAXnB,EADJ,CADJ,CAiBKP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IAAgDP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDkB,cAAnD,GAAsE,IAAtH,cACD,qDACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,SAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,KAAK,CAAExB,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDU,UAAnD,GAAkE,CAAlE,CAAqEhB,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CAArE,CAAkH,EAF7H,CAGI,IAAI,yBAAmB5B,KAAnB,CAHR,CAII,IAAI,CAAC,MAJT,CAKI,QAAQ,CAAE,KALd,CAMI,WAAW,CAAE,KANjB,CAOI,KAAK,CAAEP,KAAK,CAACS,cAAN,yBAAsCF,KAAtC,GAAgDP,KAAK,CAACS,cAAN,yBAAsCF,KAAtC,EAAhD,CAAgG,EAP3G,CAQI,QAAQ,CAAK,kBAACuB,KAAD,QAAW9B,CAAAA,KAAK,CAAC+B,aAAN,CAAoBD,KAApB,CAA2B,CAA3B,CAAX,EARjB,CASI,SAAS,CAAE,EATf,EADJ,CADJ,CAcK9B,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IAAgDP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDU,UAAnD,GAAkE,CAAlH,cAEG,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,SAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,KAAK,CAAEhB,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,QAAN,CAAzB,CAFX,CAGI,IAAI,4BAAsB5B,KAAtB,CAHR,CAII,IAAI,CAAC,MAJT,CAKI,QAAQ,CAAE,KALd,CAMI,WAAW,CAAE,KANjB,CAOI,KAAK,CAAEP,KAAK,CAACS,cAAN,4BAAyCF,KAAzC,GAAmDP,KAAK,CAACS,cAAN,4BAAyCF,KAAzC,EAAnD,CAAsG,EAPjH,CAQI,QAAQ,CAAK,kBAACuB,KAAD,QAAW9B,CAAAA,KAAK,CAAC+B,aAAN,CAAoBD,KAApB,CAA2B,CAA3B,CAAX,EARjB,CASI,SAAS,CAAE,EATf,EADJ,CAFH,cAeE,wCA7BP,CADC,cAkCA,wCAnDL,CADK,CAuDA9B,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,IACFP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAAC6C,KAD1E,cAEL,qDACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,SAAS,CAAC,EAFd,CAGI,YAAY,CAAE,IAHlB,CAII,IAAI,uBAAkB7B,KAAlB,CAJR,CAKI,WAAW,CAAC,EALhB,CAMI,UAAU,CAAE,IANhB,CAOI,OAAO,CAAEb,uBAPb,CAQI,QAAQ,CAAC,iBARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAEM,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IAAgD,EAV3D,CAWI,QAAQ,CAAE,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAACuB,cAAN,CAAqBF,KAArB,uBAA2Cd,KAA3C,EAAoDA,KAApD,CAAJ,EAXnB,EADJ,CADJ,CAiBMP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IAAgDP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDkB,cAAnD,GAAsE,IAAtH,cACF,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,SAAS,CAAC,EAFd,CAGI,YAAY,CAAE,IAHlB,CAII,IAAI,WAAMxB,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkD+B,kBAAxD,aAA8E9B,KAA9E,CAJR,CAKI,WAAW,CAAC,EALhB,CAMI,UAAU,CAAE,IANhB,CAOI,OAAO,CAAEP,KAAK,CAACsC,UAAN,EAAoBtC,KAAK,CAACsC,UAAN,CAAiB/B,KAAjB,CAApB,EAA+C,EAP5D,CAQI,QAAQ,CAAEP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkD+B,kBARhE,CASI,WAAW,CAAC,cAThB,CAUI,KAAK,CAAErC,KAAK,CAACS,cAAN,WAAwBT,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkD+B,kBAA1E,aAAgG9B,KAAhG,IAA4G,EAVvH,CAWI,QAAQ,CAAE,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAAC6B,kBAAN,CAAyBR,KAAzB,WAAmCrB,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkD+B,kBAArF,aAA2G9B,KAA3G,EAAoHA,KAApH,CAAJ,EAXnB,CAYI,OAAO,CAAEP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDsB,OAZhE,EADJ,CADE,cAiBM,wCAlCZ,CAFK,CAsCA5B,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,KACDP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACgD,QAA5E,EACDvC,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACiD,IAF1E,eAGL,qDACK,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACG,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,SAAS,CAAC,EAFd,CAGI,YAAY,CAAE,IAHlB,CAII,IAAI,uBAAkBjC,KAAlB,CAJR,CAKI,WAAW,CAAC,EALhB,CAMI,UAAU,CAAE,IANhB,CAOI,OAAO,CAAEZ,mBAPb,CAQI,QAAQ,CAAC,iBARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAEK,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IAAgD,EAV3D,CAWI,QAAQ,CAAE,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAACuB,cAAN,CAAqBF,KAArB,uBAA2Cd,KAA3C,EAAoDA,KAApD,CAAJ,EAXnB,EADH,CADL,CAiBKP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IACEP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDkB,cAAnD,GAAsE,IADxE,cAED,qDACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,cAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,KAAK,CAAExB,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDU,UAAnD,GAAkE,CAAlE,CAAqEhB,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CAArE,CAAkH,EAF7H,CAGI,IAAI,qBAAe5B,KAAf,CAHR,CAII,SAAS,CAAC,cAJd,CAKI,eAAe,CAAC,eALpB,CAMI,QAAQ,CAAEP,KAAK,CAACS,cAAN,qBAAkCF,KAAlC,EANd,CAOI,UAAU,CAAEP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACgD,QAA5E,CAAsFvC,KAAK,CAACyC,QAAN,CAAe,eAAf,CAAtF,CAAuHzC,KAAK,CAACyC,QAAN,CAAe,WAAf,CAPvI,CAQI,WAAW,CAAE,KARjB,CASI,aAAa,CAAEzC,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACgD,QAA5E,CAAsF,IAAtF,CAA4F,KAT/G,CAUI,QAAQ,CAAE,kBAAAG,IAAI,QAAI1C,CAAAA,KAAK,CAAC2C,sBAAN,qBAA0CpC,KAA1C,EAAmDmC,IAAnD,CAAJ,EAVlB,CAWI,KAAK,CAAG1C,KAAK,CAACS,cAAN,qBAAkCF,KAAlC,IAA8C,EAX1D,EADJ,CADJ,CAgBMP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDU,UAAnD,GAAkE,CAAlE,cAEE,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,cAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,KAAK,CAAEhB,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,QAAN,CAAzB,CAFX,CAGI,IAAI,wBAAkB5B,KAAlB,CAHR,CAII,SAAS,CAAC,cAJd,CAKI,eAAe,CAAC,eALpB,CAMI,QAAQ,CAAEP,KAAK,CAACS,cAAN,wBAAqCF,KAArC,EANd,CAOI,UAAU,CAAEP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACgD,QAA5E,CAAsFvC,KAAK,CAACyC,QAAN,CAAe,eAAf,CAAtF,CAAuHzC,KAAK,CAACyC,QAAN,CAAe,WAAf,CAPvI,CAQI,WAAW,CAAE,KARjB,CASI,aAAa,CAAEzC,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACgD,QAA5E,CAAsF,IAAtF,CAA4F,KAT/G,CAUI,QAAQ,CAAE,kBAAAG,IAAI,QAAI1C,CAAAA,KAAK,CAAC2C,sBAAN,wBAA6CpC,KAA7C,EAAsDmC,IAAtD,CAAJ,EAVlB,CAWI,KAAK,CAAG1C,KAAK,CAACS,cAAN,wBAAqCF,KAArC,IAAiD,EAX7D,EADJ,CAFF,cAiBC,wCAjCP,CAFC,cAsCA,wCAvDL,CAHK,cA6DH,wCAhON,CADJ,CAjBJ,CADE,cAuPG,wCAxPT,CADA,EA6PH,CA9QD,EAgRA,MAAOJ,CAAAA,MAAP,CACH,CAED,QAASyC,CAAAA,cAAT,EAA0B,CACtB,GAAI1C,CAAAA,UAAU,CAAG,CAAjB,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACAH,KAAK,CAACI,WAAN,CAAkBC,GAAlB,CAAsB,SAACC,KAAD,CAAQC,KAAR,CAAkB,CAEpC,GAAMC,CAAAA,eAAe,CAAGR,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,EACjBN,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDI,cADjC,CAEpBjB,kBAFoB,CAEAA,kBAAkB,CAACY,GAAnB,CAAuB,SAAAU,IAAI,CAAG,CAAC,MAAOA,CAAAA,IAAI,CAACC,UAAL,GAAoB,CAA3B,CAA6B,CAA5D,CAFxB,CAIA,GAAGV,KAAK,CAAG,CAAC,CAAZ,CAAe,CACXJ,UAAU,CAAGA,UAAU,CAAG,CAA1B,CACH,EACDC,MAAM,CAACc,IAAP,cACA,wCACMX,KAAK,CAAG,CAAC,CAAT,cACF,wCACMJ,UAAU,GAAK,CAAf,cACF,qDACI,oBAAC,GAAD,mBAKI,oBAAC,eAAD,EAAiB,IAAI,CAAC,QAAtB,CAA+B,SAAS,CAAEF,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,KAA8C,IAA9C,CAAoD,qBAApD,CAA2E,EAArH,CAAyH,UAAU,CAAE,CAArI,CACI,OAAO,CAAE,yBAAIP,CAAAA,KAAK,CAACkB,gBAAN,sBAAqCX,KAArC,EAA8CA,KAA9C,CAAJ,EADb,eAEI,6CAAM,oBAAC,gBAAD,EAAkB,EAAE,CAAC,SAArB,CAA+B,cAAc,CAAC,KAA9C,EAAN,CAFJ,CALJ,cASI,oBAAC,eAAD,EAAiB,IAAI,CAAC,QAAtB,CAA+B,SAAS,CAAEP,KAAK,CAACS,cAAN,qBAAkCF,KAAlC,KAA6C,IAA7C,CAAmD,qBAAnD,CAA0E,EAApH,CAAwH,UAAU,CAAE,CAApI,CACI,OAAO,CAAE,yBAAIP,CAAAA,KAAK,CAACkB,gBAAN,qBAAoCX,KAApC,EAA6CA,KAA7C,CAAJ,EADb,eAEI,6CAAM,oBAAC,gBAAD,EAAkB,EAAE,CAAC,QAArB,CAA8B,cAAc,CAAC,IAA7C,EAAN,CAFJ,CATJ,CADJ,CADE,cAgBG,wCAjBT,cAmBI,oBAAC,aAAD,EAAe,GAAG,CAAEA,KAApB,eACI,oBAAC,GAAD,mBACI,oBAAC,UAAD,EAAY,UAAU,CAAE,CAAxB,CAA2B,OAAO,CAAE,yBAAIP,CAAAA,KAAK,CAACmB,UAAN,CAAiBZ,KAAjB,CAAJ,EAApC,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAE/B,UAAvB,CAAmC,KAAK,CAAC,KAAzC,EADJ,CADJ,cAII,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,GAAG,oBAAc+B,KAAd,CAAf,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BACnB;AAFJ,CAGI,YAAY,CAAG,IAHnB,CAII,IAAI,sBAAiBA,KAAjB,CACJ;AALJ,CAMI,UAAU,CAAG,IANjB,CAOI,OAAO,CAAGP,KAAK,CAAC6C,iBAPpB,CAQI,QAAQ,CAAC,YARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAG7C,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,IAA+C,EAV3D,CAWI,QAAQ,CAAG,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAAC8C,aAAN,CAAoBzB,KAApB,sBAAyCd,KAAzC,EAAkDA,KAAlD,CAAJ,EAXpB,EADJ,CAJJ,cAoBI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,GAAG,qBAAeA,KAAf,CAAf,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BACnB;AAFJ,CAGI,YAAY,CAAG,IAHnB,CAII,IAAI,sBAAiBA,KAAjB,CACJ;AALJ,CAMI,UAAU,CAAG,IANjB,CAOI,OAAO,CAAGP,KAAK,CAAC+C,eAAN,CAAsBxC,KAAtB,GAAgC,EAP9C,CAQI,QAAQ,CAAC,YARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAGP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,IAA+C,EACvD;AAXJ,CAYI,QAAQ,CAAG,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAACsB,YAAN,CAAmBD,KAAnB,sBAAwCd,KAAxC,EAAiDA,KAAjD,CAAJ,EAZpB,EADJ,CApBJ,CAqCMP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,IAA+CP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAAC6C,KAA3H,cACF,qDACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,SAAS,CAAC,EAFd,CAGI,YAAY,CAAE,IAHlB,CAII,IAAI,uBAAkB7B,KAAlB,CAJR,CAKI,WAAW,CAAC,EALhB,CAMI,UAAU,CAAE,IANhB,CAOI,OAAO,CAAEX,iBAPb,CAQI,QAAQ,CAAC,iBARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAEI,KAAK,CAACS,cAAN,uBAAoCF,KAApC,EAVX,CAWI,QAAQ,CAAE,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAACuB,cAAN,CAAqBF,KAArB,uBAA2Cd,KAA3C,EAAoDA,KAApD,CAAJ,EAXnB,EADJ,CADJ,cAiBI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,GAAG,4BAAsBA,KAAtB,CAAf,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BACnB;AAFJ,CAGI,YAAY,CAAG,IAHnB,CAII,IAAI,6BAAwBA,KAAxB,CACJ;AALJ,CAMI,UAAU,CAAG,IANjB,CAOI,OAAO,CAAGP,KAAK,CAACgD,sBAAN,CAA6BzC,KAA7B,GAAuC,EAPrD,CAQI,QAAQ,CAAC,YARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAGP,KAAK,CAACS,cAAN,6BAA0CF,KAA1C,IAAsD,EAC9D;AAXJ,CAYI,QAAQ,CAAG,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAACsB,YAAN,CAAmBD,KAAnB,6BAA+Cd,KAA/C,EAAwDA,KAAxD,CAAJ,EAZpB,EADJ,CAjBJ,CADE,cAoCA,wCAzEN,CA2FMP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,IAA+CP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACqB,SAA3H,cACF,qDACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,SAAS,CAAC,EAFd,CAGI,YAAY,CAAE,IAHlB,CAII,IAAI,uBAAkBL,KAAlB,CAJR,CAKI,WAAW,CAAC,EALhB,CAMI,UAAU,CAAE,IANhB,CAOI,OAAO,CAAEC,eAPb,CAQI,QAAQ,CAAC,iBARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAER,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IAAgD,EAV3D,CAWI,QAAQ,CAAE,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAACuB,cAAN,CAAqBF,KAArB,uBAA2Cd,KAA3C,EAAoDA,KAApD,CAAJ,EAXnB,EADJ,CADJ,CAiBMP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IAAgDP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDkB,cAAnD,GAAsE,IAAtH,cACF,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,SAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,IAAI,sBAAiBjB,KAAjB,CACJ;AAHJ,CAII,IAAI,CAAC,MAJT,CAKI,QAAQ,CAAE,kBAACuB,KAAD,QAAW9B,CAAAA,KAAK,CAAC+B,aAAN,CAAoBD,KAApB,CAA2B,CAA3B,CAAX,EACV;AANJ,CAOI,KAAK,CAAG9B,KAAK,CAACS,cAAN,CAAqBT,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,EAArB,CAAkE,EAP9E,CAQI,SAAS,CAAE,GARf,EADJ,CADE,cAYM,wCA7BZ,CADE,CAiCGP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,IAA+CP,KAAK,CAACS,cAAN,sBAAmCF,KAAnC,GAA4CD,KAA5C,CAAkDK,UAAlD,GAAiEpB,UAAU,CAACyC,YAA3H,cACL,qDACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,SAAS,CAAC,EAFd,CAGI,YAAY,CAAE,IAHlB,CAII,IAAI,uBAAkBzB,KAAlB,CAJR,CAKI,WAAW,CAAC,EALhB,CAMI,UAAU,CAAE,IANhB,CAOI,OAAO,CAAEZ,mBAPb,CAQI,QAAQ,CAAC,iBARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAEK,KAAK,CAACS,cAAN,uBAAoCF,KAApC,IAAgD,EAV3D,CAWI,QAAQ,CAAE,kBAAAc,KAAK,QAAIrB,CAAAA,KAAK,CAACuB,cAAN,CAAqBF,KAArB,uBAA2Cd,KAA3C,EAAoDA,KAApD,CAAJ,EAXnB,EADJ,CADJ,CAkBQP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,gBACA,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,SAAD,EACI,IAAI,yBAAmBA,KAAnB,CADR,CAEI,KAAK,CAAEP,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDU,UAAnD,GAAkE,CAAlE,CAAoEhB,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,QAAN,CAAzB,CAApE,CAA8G,EAFzH,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,KAJd,CAKI,WAAW,CAAE,KALjB,CAMI,KAAK,CAAEnC,KAAK,CAACS,cAAN,yBAAsCF,KAAtC,GAAgDP,KAAK,CAACS,cAAN,yBAAsCF,KAAtC,EAAhD,CAAgG,EAN3G,CAOI,QAAQ,CAAK,kBAACuB,KAAD,QAAW9B,CAAAA,KAAK,CAAC+B,aAAN,CAAoBD,KAApB,CAA2B,CAA3B,CAAX,EAPjB,CAQI,SAAS,CAAE,EARf,EADJ,CADA,CAaC9B,KAAK,CAACS,cAAN,uBAAoCF,KAApC,GAA6CD,KAA7C,CAAmDU,UAAnD,GAAkE,CAAlE,cACG,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,SAAD,EACI,KAAK,CAAEhB,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,QAAN,CAAzB,CADX,CAEI,IAAI,4BAAsB5B,KAAtB,CAFR,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,KAJd,CAKI,WAAW,CAAE,KALjB,CAMI,KAAK,CAAEP,KAAK,CAACS,cAAN,4BAAyCF,KAAzC,GAAmDP,KAAK,CAACS,cAAN,4BAAyCF,KAAzC,EAAnD,CAAsG,EANjH,CAOI,QAAQ,CAAK,kBAACuB,KAAD,QAAW9B,CAAAA,KAAK,CAAC+B,aAAN,CAAoBD,KAApB,CAA2B,CAA3B,CAAX,EAPjB,CAQI,SAAS,CAAE,EARf,EADJ,CADH,cAaI,wCA5Cb,CADK,cAiDH,wCA7KN,CADJ,CAnBJ,CADE,cAuMA,wCAxMN,CADA,EA4MH,CArND,EAuNA,MAAO3B,CAAAA,MAAP,CACH,CAED,mBACI,qDACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eASI,oBAAC,IAAD,CAAM,KAAN,EACI,MAAM,KADV,CAEI,KAAK,CAAEH,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,WAAN,CAAzB,CAFX,CAGI,IAAI,CAAC,WAHT,CAII,IAAI,CAAE,OAJV,CAKI,OAAO,CAAE,CAACnC,KAAK,CAACiD,QALpB,CAMI,QAAQ,CAAE,CAACjD,KAAK,CAACiD,QANrB,CAOI,EAAE,cAPN,CAQI,OAAO,CAAE,yBAAMjD,CAAAA,KAAK,CAACkD,kBAAN,CAAyB,OAAzB,CAAN,EARb,EATJ,cAmBI,oBAAC,IAAD,CAAM,KAAN,EACI,MAAM,KADV,CAEI,KAAK,CAAElD,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,SAAN,CAAzB,CAFX,CAGI,IAAI,CAAC,UAHT,CAII,IAAI,CAAE,OAJV,CAKI,OAAO,CAAEnC,KAAK,CAACiD,QALnB,CAMI,QAAQ,CAAEjD,KAAK,CAACiD,QANpB,CAOI,EAAE,aAPN,CAQI,OAAO,CAAE,yBAAMjD,CAAAA,KAAK,CAACkD,kBAAN,CAAyB,KAAzB,CAAN,EARb,EAnBJ,cA8BI,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMlD,CAAAA,KAAK,CAACmD,SAAN,EAAN,EAAjB,CAA0C,SAAS,CAAC,MAApD,eACI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,WAArB,CAAiC,cAAc,CAAC,OAAhD,EADJ,CA9BJ,cAiCI,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMnD,CAAAA,KAAK,CAACoD,SAAN,EAAN,EAAjB,eACI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,WAArB,CAAiC,cAAc,CAAC,OAAhD,EADJ,CAjCJ,CADJ,cAsCI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,EAEQpD,KAAK,CAACiD,QAAN,cACA,qDACI,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMjD,CAAAA,KAAK,CAACqD,OAAN,CAAc,KAAd,CAAN,EAAjB,CAA6C,SAAS,CAAC,MAAvD,EACC,GADD,kBACM,oBAAC,gBAAD,EAAkB,EAAE,CAAC,aAArB,CAAmC,cAAc,CAAC,UAAlD,EADN,CADJ,cAII,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMrD,CAAAA,KAAK,CAACsD,eAAN,EAAN,EAAjB,eACI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,mBAArB,CAAyC,cAAc,CAAC,gBAAxD,EADJ,CAJJ,CADA,cAQK,wCAVb,CAtCJ,CADJ,CAuDQtD,KAAK,CAACiD,QAAN,GAAmB,IAAnB,cACA,qDACI,oBAAC,GAAD,EAAK,SAAS,CAAC,MAAf,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,EACMjD,KAAK,CAACI,WAAN,CAAkBmD,MAAlB,CAA2B,CAA3B,CAA8BX,cAAc,EAA5C,cAAgD,wCADtD,CADJ,cAII,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,MAAN,MACK5C,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,WAAN,CAAzB,CADL,cAEI,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMnC,CAAAA,KAAK,CAACwD,aAAN,EAAN,EAAjB,eACI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,aAArB,CAAmC,cAAc,CAAC,SAAlD,EADJ,CAFJ,CADJ,cAOI,oBAAC,IAAD,CAAM,IAAN,MACMxD,KAAK,CAACS,cAAN,EAAwBT,KAAK,CAACS,cAAN,CAAqB,eAArB,CAAxB,CAAgET,KAAK,CAACS,cAAN,CAAqB,eAArB,CAAhE,CAAuG,UAD7G,CAPJ,CADJ,CAJJ,CADJ,CADA,cAqBA,qDACI,oBAAC,GAAD,EAAK,SAAS,CAAC,WAAf,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,EACI,kBAAkB,CAAC,8BADvB,CAEI,SAAS,CAAGT,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,WAAN,CAAzB,CAFhB,CAGI,YAAY,CAAG,IAHnB,CAII,IAAI,CAAG,WAJX,CAKI,WAAW,CAAGnC,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,WAAN,CAAzB,CALlB,CAMI,UAAU,CAAG,IANjB,CAOI,OAAO,CAAGnC,KAAK,CAACyD,gBAAN,EAA0B,EAPxC,CAQI,QAAQ,CAAC,WARb,CASI,WAAW,CAAC,aAThB,CAUI,KAAK,CAAGzD,KAAK,CAACS,cAAN,CAAqB,WAArB,GAAqC,EAVjD,CAWI,QAAQ,CAAG,kBAAAY,KAAK,QAAIrB,CAAAA,KAAK,CAAC0D,iBAAN,CAAwBrC,KAAxB,CAA+B,WAA/B,CAAJ,EAXpB,EADJ,CADJ,cAgBI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMrB,CAAAA,KAAK,CAACqD,OAAN,CAAc,OAAd,CAAN,EAAjB,CAA+C,SAAS,CAAC,MAAzD,EACK,GADL,kBACU,oBAAC,gBAAD,EAAkB,EAAE,CAAC,aAArB,CAAmC,cAAc,CAAC,UAAlD,EADV,CADJ,CAhBJ,cAqBI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,EArBJ,CADJ,cAwBI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,EACMrD,KAAK,CAACI,WAAN,CAAkBmD,MAAlB,CAA2B,CAA3B,CAA8BtD,eAAe,EAA7C,cAAiD,wCADvD,CADJ,cAII,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,IAAD,mBACI,oBAAC,IAAD,CAAM,MAAN,MACKD,KAAK,CAACiC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,WAAN,CAAzB,CADL,cAEI,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMnC,CAAAA,KAAK,CAACwD,aAAN,EAAN,EAAjB,CAA8C,SAAS,CAAC,aAAxD,eACI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,aAArB,CAAmC,cAAc,CAAC,SAAlD,EADJ,CAFJ,CADJ,cAOI,oBAAC,IAAD,CAAM,IAAN,MACMxD,KAAK,CAACS,cAAN,EAAwBT,KAAK,CAACS,cAAN,CAAqB,eAArB,CAAxB,CAAgET,KAAK,CAACS,cAAN,CAAqB,eAArB,CAAhE,CAAuG,UAD7G,CAPJ,CADJ,CAJJ,CAxBJ,CA5ER,CADJ,CA4HH,CAvvBD,CAyvBA,cAAexB,CAAAA,UAAU,CAACc,UAAD,CAAzB","sourcesContent":["import { faGripVertical, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { BuilderBorder, ContionalButton, DeleteRule } from './Sqlbuilder.styled';\r\nimport '../../assets/styles/querybuilder.css';\r\nimport { ColumnType } from '../../components/Enumeration';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData } from './QueryBuilderData';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nconst BuildQuery = (props) => {\r\n    \r\n    // function createRuleDesign(count) {\r\n    //     const design = [];\r\n    //     for(let parentIndex=1; parentIndex<=count; parentIndex++) {\r\n    //         const foreignTableCount = props.foreignTableCount[parentIndex]? props.foreignTableCount[parentIndex]: 1;\r\n    //         design.push(\r\n    //             <BuilderBorder key={`parentkey_${parentIndex}`}>\r\n    //                 <Row className=\"mt-3\">\r\n    //                     {/* <Col md={1}> */}\r\n    //                         <DeleteRule key={`deletekey_${parentIndex}`} onClick={()=>props.deleteRule(parentIndex)}>\r\n    //                             <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n    //                         </DeleteRule>\r\n    //                     {/* </Col> */}\r\n    //                     <Col md={2} key={`tablekey_${parentIndex}`}>\r\n    //                         <FormSelectSearch\r\n    //                             formGroupClassName=\"remove-floating-label-margin\"\r\n    //                             formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n    //                             isSearchable={ true }\r\n    //                             name={ `stablename_${parentIndex}` }\r\n    //                             placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n    //                             showOption={ true }\r\n    //                             options={ props.databaseTableList }\r\n    //                             optionId='stablename'\r\n    //                             optionValue='displayname'\r\n    //                             value={ props.selectedRecord[`stablename_${parentIndex}`] || \"\" }\r\n    //                             onChange={ value => props.onTableChange(value, `stablename_${parentIndex}`, parentIndex) }\r\n    //                         >\r\n    //                         </FormSelectSearch>\r\n    //                     </Col>\r\n    //                     <Col md={2} key={`columnkey_${parentIndex}`}>\r\n    //                         <FormSelectSearch\r\n    //                             formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n    //                             isSearchable={ true }\r\n    //                             name={ `columnname_${parentIndex}` }\r\n    //                             placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n    //                             showOption={ true }\r\n    //                             options={ props.tableColumnList[parentIndex] || [] }\r\n    //                             optionId='columnname'\r\n    //                             optionValue='displayname'\r\n    //                             value={ props.selectedRecord[`columnname_${parentIndex}`] || \"\" }\r\n    //                             onChange={ value => props.onColumnChange(value, `columnname_${parentIndex}`, parentIndex) }\r\n    //                         >\r\n    //                         </FormSelectSearch>\r\n    //                     </Col>\r\n    //                     {\r\n    //                         props.selectedRecord[`columnname_${parentIndex}`] ? props.selectedRecord[`columnname_${parentIndex}`].items.columntype === ColumnType.TEXTINPUT ? \r\n    //                         <>\r\n    //                             <Col md={2}>\r\n    //                                 <FormSelectSearch\r\n    //                                     formLabel=\"\"\r\n    //                                     isSearchable={true}\r\n    //                                     name={ `ssymbolname_${parentIndex}` }\r\n    //                                     placeholder=\"\"\r\n    //                                     showOption={true}\r\n    //                                     options={props.validationData}\r\n    //                                     optionId='nvalidationcode'\r\n    //                                     optionValue='ssymbolname'\r\n    //                                     value={props.selectedRecord[`ssymbolname_${parentIndex}`] || \"\"}\r\n    //                                     onChange={value => props.onSymbolChange(value, `ssymbolname_${parentIndex}`, parentIndex)}\r\n    //                                 >\r\n    //                                 </FormSelectSearch>\r\n    //                             </Col>\r\n    //                             <Col md={2}>\r\n    //                                 <FormInput\r\n    //                                     name={ `sinputname_${parentIndex}` }\r\n    //                                     label={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\r\n    //                                     type=\"text\"\r\n    //                                     onChange={(event) => props.onInputChange(event, parentIndex)}\r\n    //                                     placeholder={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\r\n    //                                     value={ props.selectedRecord?props.selectedRecord[`sinputname_${parentIndex}`]:\"\" }\r\n    //                                     maxLength={100}\r\n    //                                 />\r\n    //                             </Col>\r\n                                \r\n    //                        </>\r\n    //                         : props.selectedRecord[`columnname_${parentIndex}`].items.columntype === ColumnType.COMBO ?\r\n\r\n    //                          createForeignTableDesign(foreignTableCount) \r\n    //                         : \"\"\r\n    //                         :\"\"\r\n    //                     }\r\n    //                 </Row>\r\n                    \r\n    //             </BuilderBorder>\r\n    //         )\r\n    //     }\r\n    //     return design;\r\n    // }\r\n\r\n    // function createForeignTableDesign(foreignTableCount, parentIndex) {\r\n    //     const fDesign = [];\r\n    //     for(let childIndex=1; childIndex < foreignTableCount; childIndex++) {\r\n    //         fDesign.push(\r\n    //             <>\r\n    //                {\r\n    //                     <>\r\n    //                         <Col md={1}>\r\n    //                             <FormSelectSearch\r\n    //                                 formLabel=\"\"\r\n    //                                 isSearchable={true}\r\n    //                                 name={ `ssymbolname_${parentIndex+''+childIndex}` }\r\n    //                                 placeholder=\"\"\r\n    //                                 showOption={true}\r\n    //                                 options={props.validationData}\r\n    //                                 optionId='nvalidationcode'\r\n    //                                 optionValue='ssymbolname'\r\n    //                                 value={props.selectedRecord[`ssymbolname_${parentIndex+''+childIndex}`]}\r\n    //                                 onChange={value => props.onSymbolChange(value, `ssymbolname_${parentIndex+''+childIndex}`, parentIndex+''+childIndex)}\r\n    //                             >\r\n    //                             </FormSelectSearch>\r\n    //                         </Col>\r\n    //                         <Col md={2}>\r\n    //                             <FormSelectSearch\r\n    //                                 formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n    //                                 isSearchable={ true }\r\n    //                                 name={ `foreigncolumnname_${parentIndex+''+childIndex}` }\r\n    //                                 placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n    //                                 showOption={ true }\r\n    //                                 options={ props.tableColumnList[parentIndex+''+childIndex] || [] }\r\n    //                                 optionId='columnname'\r\n    //                                 optionValue='displayname'\r\n    //                                 value={ props.selectedRecord[`foreigncolumnname_${parentIndex+''+childIndex}`] }\r\n    //                                 onChange={ value => props.onColumnChange(value, `foreigncolumnname_${parentIndex+''+childIndex}`, parentIndex+''+childIndex) }\r\n    //                             >\r\n    //                             </FormSelectSearch>\r\n    //                         </Col>\r\n    //                     </>\r\n    //                 }\r\n                    \r\n    //             </>\r\n    //         )\r\n    //     }\r\n    //     return fDesign;\r\n    // }\r\n\r\n    function createViewRules() {\r\n        let indexCount = 0;\r\n        let design = [];\r\n        props.addRuleList.map((items, index) => {\r\n\r\n            let stringOperators = stringOperatorData;\r\n            if(props.selectedRecord[`columnname_${index}`]\r\n            && !props.selectedRecord[`columnname_${index}`].items.needmasterdata \r\n            && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT) {\r\n                const temp = stringOperators.filter(item=> { \r\n                    if(item.items.symbolType !== 6){ \r\n                        return item \r\n                    }\r\n                });\r\n                stringOperators = temp;\r\n            }\r\n\r\n            if(items > -1) { \r\n                indexCount = indexCount + 1;\r\n            };\r\n            design.push(\r\n            <>\r\n                { items > -1? \r\n                <>\r\n                    { indexCount !== 1? \r\n                    <Row>\r\n                        {/* <ContionalButton type=\"button\" className=\"builder-btn-primary\" marginLeft={1} \r\n                            onClick={()=>props.onConditionClick1(`button_${index}`, 'not')}>\r\n                            <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"Not\" /></span>\r\n                        </ContionalButton> */}\r\n                        <ContionalButton type=\"button\" className={props.selectedRecord[`button_and_${index}`]===true? \"builder-btn-primary\": \"\"} marginLeft={1} \r\n                            onClick={()=>props.onConditionClick(`button_and_${index}`, index)}>\r\n                            <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                        </ContionalButton>\r\n                        <ContionalButton type=\"button\" className={props.selectedRecord[`button_or_${index}`]===true? \"builder-btn-primary\": \"\"} marginLeft={0}\r\n                            onClick={()=>props.onConditionClick(`button_or_${index}`, index)}>\r\n                            <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                        </ContionalButton>\r\n                    </Row>: <></>\r\n                    }\r\n                    <BuilderBorder key={index}>\r\n                        <Row className=\"mt-3\">\r\n                            <DeleteRule marginLeft={1} onClick={()=>props.deleteRule(index)}>\r\n                                <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n                            </DeleteRule>\r\n                            <Col md={4}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    isSearchable={ true }\r\n                                    name={ `columnname_${index}` }\r\n                                    showOption={ true }\r\n                                    options={ props.viewColumnListByRule[index] || [] }\r\n                                    optionId='columnname'\r\n                                    optionValue='displayname'\r\n                                    value={ props.selectedRecord[`columnname_${index}`] || \"\" }\r\n                                    onChange={ value => props.onRuleChange(value, `columnname_${index}`, index) }\r\n                                ></FormSelectSearch>\r\n                            </Col>\r\n                            { props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={stringOperators}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                { props.selectedRecord[`ssymbolname_${index}`] \r\n                                && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible ?\r\n                                <>\r\n                                { props.selectedRecord[`columnname_${index}`].items.needmasterdata? \r\n                                \r\n                                <Col md={4}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        isSearchable={ true }\r\n                                        name={ `${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}` }\r\n                                        showOption={ true }\r\n                                        options={ props.viewMasterListByRule[index] || [] }\r\n                                        optionId={props.selectedRecord[`columnname_${index}`].items.valuemember}\r\n                                        optionValue={props.selectedRecord[`columnname_${index}`].items.displaymember}\r\n                                        value={ props.selectedRecord[`${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`] || \"\" }\r\n                                        isMulti={props.selectedRecord[`ssymbolname_${index}`].items.ismulti}\r\n                                        onChange={ value => props.onMasterDataChange(value, `${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`, index) }\r\n                                    ></FormSelectSearch>\r\n                                </Col>:  \r\n                                <Col md={4}>\r\n                                    <FormInput\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        name={ `sinputname_${index}` }\r\n                                        type=\"text\"\r\n                                        onChange={(event) => props.onInputChange(event, 1)}\r\n                                        value={ props.selectedRecord?props.selectedRecord[`sinputname_${index}`]: \"\" }\r\n                                        maxLength={100}\r\n                                    />\r\n                                </Col>\r\n\r\n                                }\r\n                                </>\r\n                               : <></>\r\n                                }\r\n                                                                            \r\n                            </>: props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.NUMERICINPUT ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={numericOperatorData}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true?\r\n                                <>\r\n                                    <Col md={2}>\r\n                                        <FormInput\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5? props.intl.formatMessage({ id: \"IDS_FROM\"}): \"\"}\r\n                                            name={`snumericinput_${index}`}\r\n                                            type=\"text\"\r\n                                            required={false}\r\n                                            isMandatory={false}\r\n                                            value={props.selectedRecord[`snumericinput_${index}`]? props.selectedRecord[`snumericinput_${index}`]: \"\"}\r\n                                            onChange = { (event) => props.onInputChange(event, 2) }\r\n                                            maxLength={10}\r\n                                        />\r\n                                    </Col>\r\n                                    {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5?\r\n                                    (\r\n                                        <Col md={2}>\r\n                                            <FormInput\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                label={props.intl.formatMessage({ id: \"IDS_TO\"})}\r\n                                                name={`snumericinputtwo_${index}`}\r\n                                                type=\"text\"\r\n                                                required={false}\r\n                                                isMandatory={false}\r\n                                                value={props.selectedRecord[`snumericinputtwo_${index}`]? props.selectedRecord[`snumericinputtwo_${index}`]: \"\"}\r\n                                                onChange = { (event) => props.onInputChange(event, 2) }\r\n                                                maxLength={10}\r\n                                            />\r\n                                        </Col>\r\n                                    ): <></>\r\n                                    \r\n                                }\r\n                                </>\r\n                                :<></>\r\n                                }\r\n                                \r\n                            </>: props.selectedRecord[`columnname_${index}`] \r\n                            && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.COMBO ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={conditionalOperatorData}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                { props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true?\r\n                                <Col md={4}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={props.masterdata && props.masterdata[index] || []}\r\n                                        optionId={props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}\r\n                                        optionValue='sdisplayname'\r\n                                        value={props.selectedRecord[`${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`] || \"\"}\r\n                                        onChange={value => props.onMasterDataChange(value, `${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`, index)}\r\n                                        isMulti={props.selectedRecord[`ssymbolname_${index}`].items.ismulti}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>: <></>\r\n                                }\r\n                            </>: props.selectedRecord[`columnname_${index}`] \r\n                            && (props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME\r\n                            || props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATE) ? \r\n                            <>\r\n                                 <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={numericOperatorData}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {props.selectedRecord[`ssymbolname_${index}`] \r\n                                && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ?\r\n                                <>\r\n                                    <Col md={2}>\r\n                                        <DateTimePicker\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5? props.intl.formatMessage({ id: \"IDS_FROM\"}): \"\"}\r\n                                            name={`dateinput_${index}`}\r\n                                            className='form-control'\r\n                                            placeholderText=\"Select date..\"\r\n                                            selected={props.selectedRecord[`dateinput_${index}`]}\r\n                                            dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME? props.userInfo[\"ssitedatetime\"]: props.userInfo[\"ssitedate\"]}\r\n                                            isClearable={false}\r\n                                            showTimeInput={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME? true: false}\r\n                                            onChange={date => props.handleFilterDateChange(`dateinput_${index}`, date)}\r\n                                            value={ props.selectedRecord[`dateinput_${index}`] || \"\" }\r\n                                        />\r\n                                    </Col>\r\n                                    { props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5?\r\n                                    (\r\n                                        <Col md={2}>\r\n                                            <DateTimePicker\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                label={props.intl.formatMessage({ id: \"IDS_TO\"})}\r\n                                                name={`dateinputtwo_${index}`}\r\n                                                className='form-control'\r\n                                                placeholderText=\"Select date..\"\r\n                                                selected={props.selectedRecord[`dateinputtwo_${index}`]}\r\n                                                dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME? props.userInfo[\"ssitedatetime\"]: props.userInfo[\"ssitedate\"]}\r\n                                                isClearable={false}\r\n                                                showTimeInput={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME? true: false}\r\n                                                onChange={date => props.handleFilterDateChange(`dateinputtwo_${index}`, date)}\r\n                                                value={ props.selectedRecord[`dateinputtwo_${index}`] || \"\" }\r\n                                            />\r\n                                        </Col>\r\n                                    ): <></>\r\n                                    }\r\n                                </>\r\n                                :<></>\r\n                                }\r\n                            </>\r\n                            : <></>\r\n                            }\r\n                        </Row>\r\n                    </BuilderBorder>\r\n                </>: <></>\r\n                }\r\n            </>)\r\n            \r\n        });\r\n            \r\n        return design;\r\n    }\r\n\r\n    function createSqlRules() {\r\n        let indexCount = 0;\r\n        let design = [];\r\n        props.addRuleList.map((items, index) => {\r\n\r\n            const stringOperators = props.selectedRecord[`columnname_${index}`].items \r\n                && props.selectedRecord[`columnname_${index}`].items.needmasterdata? \r\n                stringOperatorData: stringOperatorData.map(item=> {return item.symbolType !== 6});\r\n\r\n            if(items > -1) { \r\n                indexCount = indexCount + 1;\r\n            };\r\n            design.push(\r\n            <>\r\n                { items > -1?  \r\n                <>\r\n                    { indexCount !== 1? \r\n                    <>\r\n                        <Row>\r\n                            {/* <ContionalButton type=\"button\" className=\"builder-btn-primary\" marginLeft={1} \r\n                                onClick={()=>props.onConditionClick1(`button_${index}`, 'not')}>\r\n                                <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"Not\" /></span>\r\n                            </ContionalButton> */}\r\n                            <ContionalButton type=\"button\" className={props.selectedRecord[`button_and_${index}`]===true? \"builder-btn-primary\": \"\"} marginLeft={1} \r\n                                onClick={()=>props.onConditionClick(`button_and_${index}`, index)}>\r\n                                <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                            </ContionalButton>\r\n                            <ContionalButton type=\"button\" className={props.selectedRecord[`button_or_${index}`]===true? \"builder-btn-primary\": \"\"} marginLeft={0}\r\n                                onClick={()=>props.onConditionClick(`button_or_${index}`, index)}>\r\n                                <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                            </ContionalButton>\r\n                        </Row> \r\n                    </>: <></>\r\n                    }\r\n                    <BuilderBorder key={index}>\r\n                        <Row>\r\n                            <DeleteRule marginLeft={1} onClick={()=>props.deleteRule(index)}>\r\n                                <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n                            </DeleteRule>\r\n                            <Col md={2} key={`tablekey_${index}`}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    // formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                    isSearchable={ true }\r\n                                    name={ `stablename_${index}` }\r\n                                    // placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                    showOption={ true }\r\n                                    options={ props.databaseTableList }\r\n                                    optionId='stablename'\r\n                                    optionValue='displayname'\r\n                                    value={ props.selectedRecord[`stablename_${index}`] || \"\" }\r\n                                    onChange={ value => props.onTableChange(value, `stablename_${index}`, index) }\r\n                                >\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n                            <Col md={2} key={`columnkey_${index}`}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    // formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                    isSearchable={ true }\r\n                                    name={ `columnname_${index}` }\r\n                                    // placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                    showOption={ true }\r\n                                    options={ props.tableColumnList[index] || [] }\r\n                                    optionId='columnname'\r\n                                    optionValue='displayname'\r\n                                    value={ props.selectedRecord[`columnname_${index}`] || \"\" }\r\n                                    // onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\r\n                                    onChange={ value => props.onRuleChange(value, `columnname_${index}`, index) }\r\n                                >\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n                            { props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.COMBO ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={joinConditionData}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`]}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                <Col md={2} key={`foreigncolumnkey_${index}`}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        // formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                        isSearchable={ true }\r\n                                        name={ `foreigncolumnname_${index}` }\r\n                                        // placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                        showOption={ true }\r\n                                        options={ props.foreignTableColumnList[index] || [] }\r\n                                        optionId='columnname'\r\n                                        optionValue='displayname'\r\n                                        value={ props.selectedRecord[`foreigncolumnname_${index}`] || \"\" }\r\n                                        // onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\r\n                                        onChange={ value => props.onRuleChange(value, `foreigncolumnname_${index}`, index) }\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                            </>\r\n                            : <></>}\r\n                            {/* <Col md={2} key={`tablekey_${index}`}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    // formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                    isSearchable={ true }\r\n                                    name={ `stablename_${index}` }\r\n                                    // placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                    showOption={ true }\r\n                                    options={ props.databaseTableList }\r\n                                    optionId='stablename'\r\n                                    optionValue='displayname'\r\n                                    value={ props.selectedRecord[`stablename_${index}`] || \"\" }\r\n                                    onChange={ value => props.onTableChange(value, `stablename_${index}`, index) }\r\n                                >\r\n                                </FormSelectSearch>\r\n                            </Col> */}\r\n\r\n                            { props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={stringOperators}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                { props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true?\r\n                                <Col md={4}>\r\n                                    <FormInput\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        name={ `sinputname_${index}` }\r\n                                        // label={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\r\n                                        type=\"text\"\r\n                                        onChange={(event) => props.onInputChange(event, 1)}\r\n                                        // placeholder={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\r\n                                        value={ props.selectedRecord?props.selectedRecord[`sinputname_${index}`]: \"\" }\r\n                                        maxLength={100}\r\n                                    />\r\n                                </Col>: <></>\r\n                                }\r\n                                                                            \r\n                            </>: props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.NUMERICINPUT ? \r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={ `ssymbolname_${index}` }\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={numericOperatorData}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {\r\n                                    props.selectedRecord[`ssymbolname_${index}`] ?\r\n                                    <Col md={2}>\r\n                                        <FormInput\r\n                                            name={`snumericinput_${index}`}\r\n                                            label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5?props.intl.formatMessage({ id: \"IDS_TO\"}):\"\"}\r\n                                            type=\"text\"\r\n                                            required={false}\r\n                                            isMandatory={false}\r\n                                            value={props.selectedRecord[`snumericinput_${index}`]? props.selectedRecord[`snumericinput_${index}`]: \"\"}\r\n                                            onChange = { (event) => props.onInputChange(event, 2) }\r\n                                            maxLength={10}\r\n                                        />\r\n                                    </Col>:\r\n                                    (props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5?\r\n                                        <Col md={2}>\r\n                                            <FormInput\r\n                                                label={props.intl.formatMessage({ id: \"IDS_TO\"})}\r\n                                                name={`snumericinputtwo_${index}`}\r\n                                                type=\"text\"\r\n                                                required={false}\r\n                                                isMandatory={false}\r\n                                                value={props.selectedRecord[`snumericinputtwo_${index}`]? props.selectedRecord[`snumericinputtwo_${index}`]: \"\"}\r\n                                                onChange = { (event) => props.onInputChange(event, 2) }\r\n                                                maxLength={10}\r\n                                            />\r\n                                        </Col>\r\n                                        :<></>\r\n                                    )\r\n                                }\r\n                            </>                      \r\n                            : <></>\r\n                            }\r\n                        </Row>\r\n                    </BuilderBorder>\r\n                </>\r\n                : <></>}\r\n            </>);\r\n            \r\n        });\r\n            \r\n        return design;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={8}>\r\n\r\n                    {/* <Button onClick={() => props.onQueryTypeOnclick()}  className=\"mr-1\">\r\n                        { props.sqlQuery ?\r\n                        <FormattedMessage id=\"IDS_SQL\" defaultMessage=\"SQL\" />:\r\n                            <FormattedMessage id=\"IDS_VIEWS\" defaultMessage=\"Views\" />\r\n                            }\r\n                    </Button> */}\r\n                    \r\n                    <Form.Check\r\n                        inline\r\n                        label={props.intl.formatMessage({ id: \"IDS_VIEWS\" })}\r\n                        name=\"viewquery\"\r\n                        type={'radio'}\r\n                        checked={!props.sqlQuery}\r\n                        disabled={!props.sqlQuery}\r\n                        id={`inline-view`}\r\n                        onClick={() => props.onQueryTypeOnclick(\"views\")}\r\n                    />\r\n                    <Form.Check\r\n                        inline\r\n                        label={props.intl.formatMessage({ id: \"IDS_SQL\" })}\r\n                        name=\"sqlquery\"\r\n                        type={'radio'}\r\n                        checked={props.sqlQuery}\r\n                        disabled={props.sqlQuery}\r\n                        id={`inline-sql`}\r\n                        onClick={() => props.onQueryTypeOnclick(\"sql\")}\r\n                    />\r\n\r\n                    <Button onClick={() => props.clearRule()} className=\"mr-1\">\r\n                        <FormattedMessage id=\"IDS_CLEAR\" defaultMessage=\"Clear\" />\r\n                    </Button>\r\n                    <Button onClick={() => props.resetRule()}>\r\n                        <FormattedMessage id=\"IDS_RESET\" defaultMessage=\"Reset\" />\r\n                    </Button>\r\n                </Col>\r\n                <Col md={4}>\r\n                    {\r\n                        props.sqlQuery ? \r\n                        <>\r\n                            <Button onClick={() => props.addRule(\"sql\")} className=\"mr-1\">\r\n                            {'+'} <FormattedMessage id=\"IDS_ADDRULE\" defaultMessage=\"Add Rule\" />\r\n                            </Button>\r\n                            <Button onClick={() => props.onGenerateQuery()}>\r\n                                <FormattedMessage id=\"IDS_GENERATEQUERY\" defaultMessage=\"Generate Query\" />\r\n                            </Button>\r\n                        </>: <></>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            \r\n            {\r\n                props.sqlQuery === true ? \r\n                <>\r\n                    <Row className=\"mt-3\">\r\n                        <Col md={12}> \r\n                            { props.addRuleList.length > 0? createSqlRules(): <></> }\r\n                        </Col>\r\n                        <Col md={12} >\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    {props.intl.formatMessage({ id: \"IDS_QUERY\" })}\r\n                                    <Button onClick={() => props.onExecuteRule()}>\r\n                                        <FormattedMessage id=\"IDS_EXECUTE\" defaultMessage=\"Execute\" />\r\n                                    </Button>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    { props.selectedRecord && props.selectedRecord[\"sdisplayquery\"] ? props.selectedRecord[\"sdisplayquery\"]: \"No Query\" }\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>  \r\n                </>: \r\n                <>\r\n                    <Row className=\"mt-4 mb-4\">\r\n                        <Col md={4}>\r\n                            <FormSelectSearch\r\n                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                formLabel={ props.intl.formatMessage({ id: \"IDS_VIEWS\" }) }\r\n                                isSearchable={ true }\r\n                                name={ \"sviewname\" }\r\n                                placeholder={ props.intl.formatMessage({ id: \"IDS_VIEWS\" }) }\r\n                                showOption={ true }\r\n                                options={ props.databaseviewList || [] }\r\n                                optionId='sviewname'\r\n                                optionValue='displayname'\r\n                                value={ props.selectedRecord[\"sviewname\"] || \"\" }\r\n                                onChange={ value => props.onViewComboChange(value, \"sviewname\") }\r\n                            ></FormSelectSearch>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <Button onClick={() => props.addRule(\"views\")} className=\"mr-1\">\r\n                                {'+'} <FormattedMessage id=\"IDS_ADDRULE\" defaultMessage=\"Add Rule\" />\r\n                            </Button>\r\n                        </Col>\r\n                        <Col md={4}></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={12}> \r\n                            { props.addRuleList.length > 0? createViewRules(): <></> }\r\n                        </Col>\r\n                        <Col md={12} >\r\n                            <Card>\r\n                                <Card.Header>\r\n                                    {props.intl.formatMessage({ id: \"IDS_QUERY\" })}\r\n                                    <Button onClick={() => props.onExecuteRule()} className=\"float-right\">\r\n                                        <FormattedMessage id=\"IDS_EXECUTE\" defaultMessage=\"Execute\" />\r\n                                    </Button>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    { props.selectedRecord && props.selectedRecord[\"sdisplayquery\"] ? props.selectedRecord[\"sdisplayquery\"]: \"No Query\" }\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            }\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(BuildQuery);"]},"metadata":{},"sourceType":"module"}