{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\Release.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Nav, Button, ListGroup } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { Utils as QbUtils } from \"@react-awesome-query-builder/ui\";\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, filterColumnData, getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType, getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport, previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample, getSectionForSectionWise, getreportcomments, fetchReportInfoReleaseById, UpdateReportComments, getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData, fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory, downloadVersionReport, viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool, getPatientWiseSample, preliminaryReport, releaseReportHistory, onSaveReleaseTestAttachment, onDeleteReleaseTestAttachment, onSaveReleaseTestComment, onDeleteReleaseTestComment, generatereport, editReportTemplate, SaveReportTemplate, deleteSamples, filterTransactionList, validationforAppendSamples, SaveReleaseComment, openReleaseComments } from '../../actions';\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, showEsign, Lims_JSON_stringify, create_UUID, onSaveMandatoryValidation, checkFilterIsEmptyQueryBuilder, removeSpaceFromFirst, sortData } from '../../components/CommonScript';\nimport { SampleType, designProperties, ResultEntry, reportCOAType, transactionStatus, attachmentType } from '../../components/Enumeration';\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { Affix } from 'rsuite';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport ReleaseFilter from './ReleaseFilter';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport EsignStateHandle from '../audittrail/EsignStateHandle';\nimport { ContentPanel, ProductList } from '../product/product.styled';\nimport { faEdit, faPlus, faExpandArrowsAlt, faEye, faInfoCircle, faPencilAlt, faRecycle, faStore, faTrash, faFilePen, faFileCode, faDownload, faFilePdf, faHistory, faFile, faComments, faPaperclip, faCalculator, faSync, faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { ReactComponent as Generate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/generate-certificate.svg\";\nimport { ReactComponent as ReGenerate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/regenerate-icon.svg\";\nimport { ReactComponent as ResultCorrection } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/resultcorrection.svg\";\nimport { ReactComponent as Correction } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/correctionrelease.svg\";\nimport { ReactComponent as Comment } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/comment-edit-svgrepo-com.svg\";\nimport { ReactComponent as DownloadCertificate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Download Certificate.svg\";\nimport { ReactComponent as PreliminaryReport } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/preliminary_report.svg\";\nimport { ReactComponent as ReportHistory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reporthistory.svg\";\nimport { ReactComponent as ReleaseTestAttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/releasetestattachment.svg\";\nimport { ReactComponent as ReleaseTestCommentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/releasetestcomment.svg\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fileViewUrl, reportUrl } from '../../rsapi';\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\nimport { REPORTTYPE } from \"../../components/Enumeration\";\nimport SampleInfoView from '../approval/SampleInfoView';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport ModalShow from '../../components/ModalShow';\nimport ResultEntryForm from '../ResultEntryBySample/ResultEntryForm';\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\nimport ReleaseTestAttachment from './ReleaseTestAttachment';\nimport ReleaseTestComment from './ReleaseTestComment';\nimport VersionHistGrid from './VersionHistGrid';\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport ReleaseReportHistory from './ReleaseReportHistory';\nimport { ReactComponent as Preview } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Preview.svg\";\nimport { ReactComponent as TestAttachment } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Test Attachment.svg\";\nimport AddReleaseTestAttachment from './AddReleaseTestAttachment';\nimport AddReleaseTestComment from './AddReleaseTestComment';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport SplitterLayout from 'react-splitter-layout';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport SampleGridTab from '../registration/SampleGridTab';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { faTrashAlt, faThumbsUp, faChevronCircleDown } from '@fortawesome/free-solid-svg-icons'; //,faUserTimes, faTrash\n\nimport CustomPopover from '../../components/customPopover';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Release extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.outsourceFileDataStateChange = event => {\n      this.setState({\n        outsourceFileDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.reportInfoDataChange = event => {\n      this.setState({\n        reportInfoDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.correctionDataStateChange = event => {\n      this.setState({\n        correctionDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.versionHistoryDataStateChange = event => {\n      this.setState({\n        versionHistoryDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.preliminaryHistoryDataStateChange = event => {\n      this.setState({\n        preliminaryHistoryDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.testAttachmentDataStateChange = event => {\n      this.setState({\n        testAttachmentDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.testCommentDataStateChange = event => {\n      this.setState({\n        testCommentDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo,\n          realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n          realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n          realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n          realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n          realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n          realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n          realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getReleasedApprovalVersion(inputParam);\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            this.props.getReleasedRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            this.props.getReleasedRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getReleasedApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          // const inputParamData = {\n          //     dfrom: obj.fromDate,\n          //     dto: obj.toDate,\n          //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          //     userinfo: this.props.Login.userInfo,\n          //     masterData: { ...this.props.Login.masterData },\n          //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n          //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     ndesigntemplatemappingcode: comboData.value,\n          //     DesignTemplateMappingValue: comboData.item\n          // }\n          // this.props.getReleaseFilterBasedTest(inputParamData)\n          let masterData = { ...this.props.Login.masterData,\n            DesignTemplateMappingValue: comboData.item\n          };\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getReleasedFilterStatus(inputParamData);\n          }\n        } //Don't Remove\n        // else if (fieldName === 'nsectioncode') {\n        //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n        //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             nsectioncode: comboData.value === -1 ? null\n        //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //                 : comboData.value,\n        //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n        //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleasedFilterBasedTest(inputParamData);\n        //     }\n        // }\n        // else if (fieldName === 'njobstatuscode') {\n        //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n        //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\n        //         const updateInfo = {\n        //             typeName: DEFAULT_RETURN,\n        //             data: { masterData }\n        //         }\n        //         this.props.updateStore(updateInfo);\n        //     }\n        // }\n        else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ncoareporttypecode') {\n          if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\n            let masterData = { ...this.props.Login.masterData,\n              ReportTypeValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } // else {\n        //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n        //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n        //         //  const updateInfo = {\n        //         //     typeName: DEFAULT_RETURN,\n        //         //    data: { masterData }\n        //         // }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: comboData.value,\n        //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n        //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n        //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\n        //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n        //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleaseFilterBasedTest(inputParamData);\n        //     }\n        // }\n\n      }\n    };\n\n    this.closeFilter = () => {\n      let inputValues = {\n        fromDate: this.props.Login.masterData.realFromDate || new Date(),\n        //this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date() ,\n        toDate: this.props.Login.masterData.realToDate || new Date(),\n        //this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date() ,\n        SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\n        ReportTypeValue: this.props.Login.masterData.realReportTypeValue || {},\n        RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\n        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\n        ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\n        DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\n        FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\n        SampleType: this.props.Login.masterData.realSampleTypeList || [],\n        ReportType: this.props.Login.masterData.realReportTypeList || [],\n        RegType: this.props.Login.masterData.realRegTypeList || [],\n        RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\n        FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\n        ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\n        DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || []\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false,\n          masterData: { ...this.props.Login.masterData,\n            ...inputValues\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewDownloadFile = filedata => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          // change: this.props.Login.change,\n          // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n          //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          ncoareporthistorycode: filedata.inputData.ncoareporthistorycode ? filedata.inputData.ncoareporthistorycode : -1,\n          npreliminaryreporthistorycode: filedata.inputData.npreliminaryreporthistorycode ? filedata.inputData.npreliminaryreporthistorycode : -1,\n          //ntransactionstatus: String(transactionStatus.RELEASED),\n          //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n          // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          //nflag: 2,\n          userinfo: this.props.Login.userInfo,\n          //sreportcomments: \"\",\n          //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          //nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          action: \"DownloadVersionhistory\",\n          doAction: \"download\",\n          // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\n          openModal: true,\n          userInfo: this.props.Login.userInfo,\n          ncontrolCode: filedata.ncontrolCode\n        },\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RELEASEHISTORY\"\n        })\n      };\n      this.props.downloadVersionReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      this.props.Login.change = false;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue; //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\n      //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\n\n      let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let realSampleTypeList = this.props.Login.masterData.SampleType || [];\n      let realReportTypeList = this.props.Login.masterData.ReportType || [];\n      let realRegTypeList = this.props.Login.masterData.RegType || [];\n      let realRegSubTypeList = this.props.Login.masterData.RegSubType || [];\n      let realFilterStatusList = this.props.Login.masterData.FilterStatus || [];\n      let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion || [];\n      let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        //  realUserSectionValue, realTestValue,\n        realDesignTemplateMappingValue,\n        realReportTypeList,\n        realRegSubTypeList,\n        realRegTypeList,\n        realReportTypeValue,\n        realSampleTypeList,\n        realFilterStatusList,\n        realApprovalVersionList,\n        realDesignTemplateMappingList\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode !== -1) {\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.checkFunction = data => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          arrayfalse: data.arrayfalse,\n          childfalsearray: data.childfalsearray\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkFunction1 = () => {\n      this.setState({\n        count: 1\n      });\n    };\n\n    this.expandFunc = change => {\n      let count = change.count;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...this.props.Login.masterData\n          },\n          change: change.change,\n          isAddPopup: false,\n          isEditPopup: this.props.Login.isEditPopup,\n          isDeletePopup: this.props.Login.isDeletePopup,\n          checkFlag: \"1\",\n          count: count\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewReport = () => {\n      if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\n        let showReport = true;\n        this.setState({\n          showReport\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REPORTNOTGENERATED\"\n        }));\n      }\n    };\n\n    this.handleReportNoPageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.getApprovedSample = (inputParam, ncontrolCode) => {\n      if (inputParam.masterData && inputParam.masterData.realReportTypeValue) {\n        this.props.getApprovedSample(inputParam, ncontrolCode);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.ConfirmDelete = inputParam => {\n      //commented for Draft record only allow to delete by sathish 11_SEP_24\n      //if(inputParam.deleteSamples.ntransactionstatus === transactionStatus.DRAFT || inputParam.deleteSamples.ntransactionstatus === transactionStatus.CORRECTION){\n      if (inputParam.deleteSamples.ntransactionstatus === transactionStatus.DRAFT) {\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }), this.props.intl.formatMessage({\n          id: \"IDS_DEFAULTCONFIRMMSG\"\n        }), this.props.intl.formatMessage({\n          id: \"IDS_OK\"\n        }), this.props.intl.formatMessage({\n          id: \"IDS_CANCEL\"\n        }), () => this.DeleteSamples(\"delete\", inputParam.controlId, inputParam));\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORD\"\n        }));\n      }\n    };\n\n    this.DeleteSamples = (action, controlId, data) => {\n      // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n      // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n      // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n      // ALPD-4091 (16-05-2024) Changed RegSubTypeValue to realRegSubTypeValue\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          ncoaparentcode: data.deleteSamples.ncoaparentcode.toString(),\n          userinfo: this.props.Login.userInfo,\n          ncontrolCode: controlId,\n          action: action,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode || -1,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          isAddPopup: false,\n          isEditPopup: false,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n          nreporttemplatecode: data.deleteSamples.nreporttemplatecode,\n          ncoaparenttranscode: data.deleteSamples.ntransactionstatus,\n          npreregno: data.deleteSamples.spreregno,\n          ntransactionsamplecode: data.deleteSamples.stransactionsamplecode,\n          ntransactiontestcode: data.deleteSamples.stransactiontestcode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          url: this.props.Login.settings[24],\n          nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired\n        },\n        searchRef: this.searchRef // ALPD-4229 (30-05-2024) Added searchRef to clear search text\n\n      };\n      this.props.deleteSamples(inputParam, this.props.Login.masterData);\n    };\n\n    this.onKeyPress = (event, index, paremterResultcode) => {\n      if (event.keyCode === 13) {\n        for (let i = 0; i < event.target.form.elements.length; i++) {\n          if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\n            event.target.form.elements[i].focus();\n            break;\n          }\n        }\n\n        event.preventDefault();\n      }\n    };\n\n    this.onResultInputChange = parameterResults => {\n      this.setState({\n        parameterResults: [...parameterResults],\n        isParameterInitialRender: false // currentAlertResultCode,\n        //  currentntestgrouptestpredefcode\n\n      });\n    };\n\n    this.fields = () => {};\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n\n      if (fieldName === 'nprojecttypecode') {\n        const inputParamData = {\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          nprojecttypecode: comboData.value,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getApprovedProjectByProjectType(inputParamData);\n      }\n\n      if (fieldName === 'nprojectmastercode') {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo); //let realFromDate = obj.fromDate;\n        //let realToDate = obj.toDate\n\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          //realFromDate, realToDate, \n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nprojectmastercode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          // ModalStatusValue: true,\n          isPopup: true,\n          isAddPopup: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n        let selectedRecord = { ...this.props.Login.selectedRecord\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData,\n            selectedRecord\n          };\n\n          if (inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || inputData.isneedsection === transactionStatus.YES) {\n            this.props.getSectionForSectionWise(inputParam);\n          } else {\n            this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login);\n          }\n        }\n      }\n\n      if (fieldName === 'nsectioncode') {\n        let filterquery = this.props.Login && this.props.Login.filterquery || undefined;\n\n        if (filterquery !== undefined) {\n          let val = removeSpaceFromFirst(filterquery, '');\n          let matchs = val && val.match(/''/g);\n          filterquery = matchs !== null && matchs !== undefined && matchs && matchs.length > 1 ? val : val && val.replaceAll(/'/g, \"''\");\n        }\n\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let realFromDate = obj.fromDate;\n        let realToDate = obj.toDate;\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          realFromDate,\n          realToDate,\n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nsectioncode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\n          // ModalStatusValue: true,\n          screenName: this.props.Login.screenName,\n          filterquery: filterquery,\n          isPopup: true,\n          isAddPopup: true,\n          isSectionCombo: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData\n          };\n          this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login);\n        }\n      }\n    };\n\n    this.handleExecuteClicks = isClear => {\n      const filterquery = this.props.Login.filterquery;\n      const filterQueryTreeStr = this.props.Login.filterQueryTreeStr;\n      let isMandatory = this.checkMandatoryFilter(filterQueryTreeStr, this.props.Login.awesomeConfig);\n\n      if (isMandatory) {\n        let isFilterEmpty = checkFilterIsEmptyQueryBuilder(filterQueryTreeStr);\n\n        if (isFilterEmpty) {\n          let val = removeSpaceFromFirst(filterquery, '');\n          let matchs = val && val.match(/''/g); // if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\n\n          let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n          let realFromDate = obj.fromDate;\n          let realToDate = obj.toDate;\n          let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n          let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n          let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n          let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n          let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n          let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n          let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n          let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n          let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n          let masterData = { ...this.props.Login.masterData,\n            realFromDate,\n            realToDate,\n            realSampleTypeValue,\n            realRegTypeValue,\n            realRegSubTypeValue,\n            realFilterStatusValue,\n            realApprovalVersionValue,\n            realUserSectionValue,\n            realTestValue,\n            realDesignTemplateMappingValue,\n            realReportTypeValue\n          }; // ALPD-4091 (16-05-2024) Changed SampleTypeValue to realSampleTypeValue\n          // ALPD-4091 (16-05-2024) Changed RegTypeValue to realRegTypeValue\n          // ALPD-4091 (16-05-2024) Changed RegSubTypeValue to realRegSubTypeValue\n          // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n          // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n          // ALPD-4091 (16-05-2024) Changed TestValue to realTestValue\n          // ALPD-4091 (16-05-2024) Changed DesignTemplateMappingValue to realDesignTemplateMappingValue\n\n          let inputData = {\n            npreregno: \"0\",\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n            nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n            nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n            ncoareporttypecode: 1,\n            //parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n            nsectioncode: this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES ? this.props.Login.isEditPopup === true ? this.props.Login.masterData && this.props.Login.masterData.reportSectionCode : this.props.Login.selectedRecord && this.props.Login.selectedRecord.nsectioncode ? this.props.Login.selectedRecord.nsectioncode.value : -1 : -1,\n            napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            userinfo: this.props.Login.userInfo,\n            nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\n            // ModalStatusValue: true,\n            isPopup: true,\n            isAddPopup: true,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n            filterquery: !isClear ? matchs && matchs.length > 1 ? val : val && val.replaceAll(/'/g, \"''\") : undefined,\n            screenName: this.props.Login.screenNameCopy,\n            isClear: isClear,\n            awesomeTree: this.props.Login.awesomeTree\n          };\n\n          if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n            inputData['dfrom'] = obj.fromDate;\n            inputData['dto'] = obj.toDate;\n            let inputParam = {\n              masterData,\n              inputData\n            };\n            this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login);\n          } // } else {\n          //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\n          // }\n\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_PROVIDEVALUESFORINPUTS\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_CONFIGUREMANDATORYFIELDS\"\n        }));\n      }\n    };\n\n    this.checkMandatoryFilter = (treeData, config) => {\n      let ParentItem = { ...treeData\n      };\n      let mandatoryList = [];\n      let treeDateList = [];\n      let isFilterEmpty = false;\n      let childArray = ParentItem.children1;\n      this.state.DynamicReportFilterTypeItem.map(x => {\n        if (x['ismandatory']) {\n          mandatoryList.push(x);\n        }\n\n        if (childArray && childArray.length > 0 && childArray !== undefined) {\n          for (var i = 0; i < childArray.length; i++) {\n            let childData = childArray[i];\n\n            if (!childData.hasOwnProperty('children1')) {\n              if (config && config.fields[childData.properties.field]['label'] === x[designProperties.VALUE] && x['ismandatory']) {\n                isFilterEmpty = true;\n                treeDateList.push(childData.properties.field);\n              }\n            } else {\n              if (childData) {\n                ParentItem = checkFilterIsEmptyQueryBuilder(childData);\n\n                if (!ParentItem) {\n                  return ParentItem;\n                }\n              }\n            }\n          }\n        }\n      });\n      let uniqueSet = new Set(treeDateList);\n      let uniqueArray = Array.from(uniqueSet);\n\n      if (uniqueArray.length !== mandatoryList.length) {\n        isFilterEmpty = false;\n      }\n\n      if (mandatoryList.length === 0) {\n        isFilterEmpty = true;\n      }\n\n      return isFilterEmpty;\n    };\n\n    this.openFilterQuery = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal: true,\n          FilterQueryBuilder: true,\n          screenName: \"IDS_SAMPLEFILTER\",\n          screenNameCopy: this.props.Login.screenNameCopy\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let closeModal = true;\n      let modalShow = this.props.Login.modalShow;\n      let ReportmodalShow = this.props.Login.ReportmodalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedComment = this.props.Login.masterData.selectedComment;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        ReportmodalShow = false;\n        selectedRecord = {};\n        selectedComment = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          closeModal,\n          selectedComment,\n          ReportmodalShow\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.generatereport = generateid => {\n      // if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.DRAFT){\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          syncaction: \"ManualSyncreport\",\n          userInfo: this.props.Login.userInfo\n        },\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_GENERATE\"\n        })\n      };\n      this.props.generatereport(inputParam, this.props.Login.masterData, inputParam.screenName); //   }else{\n      //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\n      //    }\n    };\n\n    this.downloadHistory = downloadReportId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED) {\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            inputData: {\n              // change: this.props.Login.change,\n              // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n              //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n              //ncoareporthistorycode:filedata.inputData.ncoareporthistorycode,\n              //ntransactionstatus: String(transactionStatus.RELEASED),\n              //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n              // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              action: \"Download\",\n              doAction: \"preview\",\n              // ALPD-4091 (16-05-2024) Changed DesignTemplateMappingValue to realDesignTemplateMappingValue\n              ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n              //openModal:true,\n              userInfo: this.props.Login.userInfo,\n              ncontrolCode: downloadReportId\n            },\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_DOWNLOAD\"\n            })\n          };\n          this.props.downloadHistory(inputParam, this.props.Login.masterData, inputParam.screenName);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTRELEASEDRECORD\"\n          }));\n        }\n      }\n    };\n\n    this.previewReport = previewId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED) {\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n            // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n            inputData: {\n              nflag: 2,\n              change: this.props.Login.change,\n              ncontrolcode: previewId,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n              ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n              url: this.props.Login.settings[24],\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              userinfo: this.props.Login.userInfo,\n              nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n              nreporttypecode: REPORTTYPE.COAPREVIEW,\n              sprimarykeyname: \"npreregno\",\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              userinfo: this.props.Login.userInfo,\n              action: 'DOWNLOADFILE',\n              ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n              doAction: \"download\",\n              nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n              reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n              isSMTLFlow: parseInt(this.props.Login.settings[29]),\n              generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\n              newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,\n              //Added by sonia on 18-08-2024 for JIRA ID:4716                         //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\n              reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\n              auditAction: \"preview\"\n            },\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_PREVIEWREPORT\"\n            })\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                openModal: true,\n                modalShow: false,\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                screenName: inputParam.screenName,\n                ncontrolcode: previewId,\n                operation: \"download\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_FINALREPORTGEN\"\n          }));\n        }\n      }\n    };\n\n    this.preliminaryReport = preliminaryId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.DRAFT || this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION) {\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n            // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n            inputData: {\n              nflag: 2,\n              change: this.props.Login.change,\n              ncontrolcode: preliminaryId,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n              ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n              url: this.props.Login.settings[24],\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              userinfo: this.props.Login.userInfo,\n              nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n              nreporttypecode: REPORTTYPE.COAPRELIMINARY,\n              sprimarykeyname: \"npreregno\",\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              userinfo: this.props.Login.userInfo,\n              action: 'preliminary',\n              ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n              doAction: \"preliminary\",\n              nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n              reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n              isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\n              ncoaparenttranscode: this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n              isSMTLFlow: parseInt(this.props.Login.settings[29]),\n              generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\n              newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,\n              //Added by sonia on 18-08-2024 for JIRA ID:4716 \n              //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\n              reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\n              auditAction: \"preliminary\"\n            },\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_PRELIMINARYREPORT\"\n            }),\n            searchRef: this.searchRef // ALPD-4229 (30-05-2024) Added searchRef to clear search text\n\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, preliminaryId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                openModal: true,\n                modalShow: false,\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                screenName: inputParam.screenName,\n                ncontrolcode: preliminaryId,\n                operation: \"preliminary\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.preliminaryReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n          }\n        } else {\n          let toastAlert = this.props.intl.formatMessage({\n            id: \"IDS_SELECTDRAFTCORRECTEDRECORDTO\"\n          }) + \" \" + (this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : this.props.intl.formatMessage({\n            id: \"IDS_PRELIMINARYREPORT\"\n          }));\n          toast.warn(toastAlert);\n        }\n      }\n    };\n\n    this.downloadReleasedValidation = downloadId => {\n      // ALPD-4118 (15-05-2024) Added code for selection issue when release and edit report template\n      const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\");\n      let selectedReleaseHistory = [];\n      this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item)); // const selectedReleaseHistory = this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.filter(item => item.ncoaparentcode === this.props.Login.masterData.ncoaparentcode) : [];\n\n      const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [];\n      const versionCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nversionno\"]))] : [];\n      const reportTemplateCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nreporttemplatecode\"]))] : [];\n\n      if (resultArray.length === 1) {\n        if (reportTemplateCheck.length === 1) {\n          if (resultArray[0] === transactionStatus.CORRECTION || resultArray[0] === transactionStatus.PRELIMINARYRELEASE && (versionCheck.length > 1 || versionCheck.length === 1 && versionCheck[0] !== -1)) {\n            this.CorrectionComments(downloadId, selectedReleaseHistory);\n          } else {\n            this.downloadReleasedFile(downloadId);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTRECORDSWITHSAMEREPORTEMPLATE\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORDSWITHSAMESTATUS\"\n        }));\n      }\n    };\n\n    this.CorrectionComments = (controlId, selectedReleaseHistory) => {\n      let masterData = this.props.Login.masterData;\n      masterData[\"selectedReleaseHistory\"] = selectedReleaseHistory;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: false,\n          screenData: {\n            masterData\n          },\n          operation: this.props.Login.operation,\n          openModal: true,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_CORRECTIONCOMMENTS\"\n          })\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.ReleaseComments = inputParam => {\n      const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\"); //let selectedReleaseHistory = [];\n      // this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && \n      //this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item));\n\n      let masterData = this.props.Login.masterData;\n      masterData[\"selectedReleaseHistory\"] = [];\n      masterData[\"selectedReleaseHistory\"].push(inputParam[\"createReleaseComment\"]); //const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [] ;\n      //  if(resultArray[0] !== transactionStatus.RELEASED){\n\n      let inputParamData = {\n        inputData: {\n          ncoaparentcode: inputParam.createReleaseComment.ncoaparentcode,\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: { ...this.props.Login.masterData\n        },\n        selectedRecord: this.state.selectedRecord,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RELEASECOMMENTS\"\n        })\n      };\n      this.props.openReleaseComments(inputParamData); // }\n      // else{\n      //  toast.warn(this.props.intl.formatMessage({ id: \"IDS_RELEASEDRECORDNOTALLOWEDTOADDCOMMENT\" }));\n      // }\n    };\n\n    this.downloadReleasedFile = () => {\n      // ALPD-4118 (15-05-2024) Added code for selection issue when release and edit report template\n      const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\");\n      let selectedReleaseHistory = [];\n      this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item));\n      const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n        // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        inputData: {\n          change: this.props.Login.change,\n          ncontrolcode: downloadId,\n          ncoaparentcode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.ncoaparentcode).sort().join(\",\") : \"-1\",\n          // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          npreregno: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\n          // ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactionsamplecode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.stransactionsamplecode).join(\",\") : \"-1\",\n          // ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          ntransactiontestcode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.stransactiontestcode).join(\",\") : \"-1\",\n          url: this.props.Login.settings[24],\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          // ntransactionsamplecode: ntransactionsamplecode,\n          //ntransactiontestcode: ntransactiontestcode,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          // ntransactionstatus: String(transactionStatus.RELEASED),\n          ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n          noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          userinfo: this.props.Login.userInfo,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          nprimarykey: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\n          listStatus: selectedReleaseHistory[0].ntransactionstatus,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          // nsectioncode: -1,\n          sreportcomments: this.state.selectedRecord && this.state.selectedRecord.sreportcomments ? this.state.selectedRecord.sreportcomments : \"\",\n          nversionno: this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno ? this.props.Login.masterData.nversionno : 0,\n          action: \"Generatefile\",\n          doAction: \"generate\",\n          nflag: 2,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n          nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode,\n          reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n          isSMTLFlow: parseInt(this.props.Login.settings[29]),\n          ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\n          confirmMessage: this.confirmMessage,\n          isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\n          ncoaparenttranscode: selectedReleaseHistory[0].ntransactionstatus,\n          genericLabel: this.props.Login.genericLabel,\n          generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\n          //Added by sonia on 18-08-2024 for JIRA ID:4716 \n          newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,\n          //Added by sonia on 18-08-2024 for JIRA ID:4716 \n          //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\n          reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\n          auditAction: \"release\"\n        },\n        userinfo: this.props.Login.userInfo,\n        methodUrl: \"ReleaseAfterCorrection\",\n        classUrl: \"release\",\n        operation: \"update\",\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_GENERATEFILE\"\n        })\n      };\n      const masterData = this.props.Login.masterData; // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\n      //              && this.state.selectedRecord && this.state.selectedRecord.sreportcomments===\"\" || this.state.selectedRecord.sreportcomments===undefined) {\n      //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERDESCRIPTION\" }));  \n      // }\n      //     else{\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, downloadId)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncontrolcode: downloadId,\n            openModal: true,\n            modalShow: false,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: inputParam.operation,\n            screenName: selectedReleaseHistory.length > 0 && selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION ? this.props.Login.screenName : this.props.intl.formatMessage({\n              id: \"IDS_GENERATEFILE\"\n            })\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData, inputParam.screenName);\n      } // }\n\n    };\n\n    this.reportcomments = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n\n        if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\n          const inputParam = {\n            // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n            // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n            inputData: {\n              change: this.props.Login.change,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n              ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n              url: this.props.Login.settings[24],\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              // ntransactionsamplecode: ntransactionsamplecode,\n              //ntransactiontestcode: ntransactiontestcode,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              // nTransStatus: ntransCode,\n              // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n              //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n              //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n              // ntransactionstatus: String(transactionStatus.RELEASED),\n              ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              userinfo: this.props.Login.userInfo,\n              // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n              // ncontrolCode,\n              nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n              nreporttypecode: REPORTTYPE.COAREPORT,\n              sprimarykeyname: \"npreregno\",\n              // nsectioncode: -1,\n              nflag: 2,\n              ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n            },\n            userinfo: this.props.Login.userInfo\n          };\n          this.props.getreportcomments(inputParam.inputData, this.props.Login.masterData);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTDRAFTCORRECTEDRECORDTOEDITREPORTCOMMENTS\"\n          }));\n        }\n      }\n    };\n\n    this.regenerateReleasedFile = regenerateId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        const inputParam = {\n          // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n          // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n          inputData: {\n            change: this.props.Login.change,\n            npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n            ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n            sreportno: this.props.Login.masterData.selectedReleaseHistory[0].sreportno,\n            ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\n            ntransactionstatus: String(transactionStatus.RELEASED),\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n            napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nflag: 2,\n            userinfo: this.props.Login.userInfo,\n            sreportcomments: \"\",\n            nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n            nreporttypecode: REPORTTYPE.COAREPORT,\n            sprimarykeyname: \"npreregno\",\n            action: \"Regenerate\",\n            doAction: \"download\",\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n            ncontrolcode: regenerateId,\n            nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n            reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n            ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n            isSMTLFlow: parseInt(this.props.Login.settings[29]),\n            generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\n            newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,\n            //Added by sonia on 18-08-2024 for JIRA ID:4716 \n            //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\n            reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\n            auditAction: \"regenerate\"\n          },\n          userinfo: this.props.Login.userInfo,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_REGENERATEFILE\"\n          }),\n          operation: \"update\"\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, regenerateId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              ncontrolcode: regenerateId,\n              openModal: true,\n              modalShow: false,\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              screenName: inputParam.screenName,\n              operation: inputParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n        }\n      }\n    };\n\n    this.CorrectionStatus = correctionId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \n\n        const inputParam = {\n          // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n          // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n          // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n          inputData: {\n            change: this.props.Login.change,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n            ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n            url: this.props.Login.settings[24],\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            // ntransactionsamplecode: ntransactionsamplecode,\n            //ntransactiontestcode: ntransactiontestcode,\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n            // nTransStatus: ntransCode,\n            // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n            //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n            //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n            // ntransactionstatus: String(transactionStatus.RELEASED),\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            userinfo: this.props.Login.userInfo,\n            // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n            // ncontrolCode,\n            nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n            nreporttypecode: REPORTTYPE.COAREPORT,\n            sprimarykeyname: \"npreregno\",\n            doAction: \"correction\",\n            nflag: 2,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n            isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\n            genericLabel: this.props.Login.genericLabel\n          },\n          userinfo: this.props.Login.userInfo,\n          methodUrl: \"CorrectionStatus\",\n          classUrl: \"release\",\n          operation: \"update\",\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_CORRECTION\"\n          })\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              ncontrolcode: correctionId,\n              openModal: true,\n              modalShow: false,\n              loadEsign: true,\n              operation: \"update\",\n              screenData: {\n                inputParam,\n                masterData\n              },\n              screenName: inputParam.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName);\n        }\n      }\n    };\n\n    this.onSaveReleaseComments = (saveType, data) => {\n      let masterData = this.props.Login.masterData;\n      let controlId = this.state.controlMap.has(\"ReportComment\") && this.state.controlMap.get(\"ReportComment\").ncontrolcode;\n      let inputParam = {\n        inputData: {\n          ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\n          //nreleasetestcommentcode: this.state.selectedRecord && this.state.selectedRecord.nreleasetestcommentcode || -1,\n          sreleasecomments: this.state.selectedRecord && this.state.selectedRecord.sreleasecomments || \"\",\n          userinfo: this.props.Login.userInfo,\n          doAction: \"createReleaseComment\"\n        },\n        masterData: masterData,\n        selectedRecord: this.state.selectedRecord\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlId)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            modalShow: false,\n            openModal: true,\n            ncontrolcode: controlId,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.SaveReleaseComment(inputParam);\n      }\n    };\n\n    this.onSaveModalResultClick = (saveType, data) => {\n      if (this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_REPORTTEMPLATE\"\n      })) {\n        let masterData = this.props.Login.masterData;\n        let controlId = this.state.controlMap.has(\"EditReportTemplate\") && this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode;\n        let inputParam = {\n          inputData: {\n            ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\n            nreporttemplatecode: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode && this.state.selectedRecord.nreporttemplatecode.value,\n            sreporttemplatename: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode && this.state.selectedRecord.nreporttemplatecode.label,\n            userinfo: this.props.Login.userInfo,\n            doAction: \"editReportTemplate\"\n          },\n          masterData: masterData,\n          selectedRecord: this.state.selectedRecord\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              modalShow: false,\n              openModal: true,\n              ncontrolcode: controlId,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.SaveReportTemplate(inputParam);\n        }\n      } else {\n        // ALPD-4026 (18-05-2024) Removed state parameterResults value due to sent latest record. State value have old record\n        let ReleaseParameter = this.props.Login.parameterResults && this.props.Login.parameterResults; // let selectedRecord = this.state.selectedRecord || {};\n        // let selectedId = this.props.Login.selectedId || null;\n        // let additionalInfo = this.state.selectedRecord.additionalInfo || [];\n\n        const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\n        const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode); // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode);\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n        const classUrl = \"release\";\n        const formData = new FormData();\n        let neditable = 0;\n        let releaseParameters = [];\n        let inputParam = {}; // let inputData = [];\n\n        let i = 0;\n\n        if (ReleaseParameter !== undefined && ReleaseParameter.length > 0 && ReleaseParameter[0].sresult !== \"\") {\n          ReleaseParameter.map((resultData, index) => {\n            let results = {};\n\n            if (resultData.editable === true) {\n              neditable = 1;\n\n              switch (resultData.nparametertypecode) {\n                case 1:\n                  results[\"jsondata\"] = {\n                    ncalculatedresult: resultData[\"ncalculatedresult\"],\n                    sresult: resultData.sresult,\n                    sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\",\n                    //Modified by sonia on 6th Aug 2024 for JIRA ID:ALPD-4558\n                    sunitname: resultData.unitcode.label,\n                    sresultaccuracyname: resultData.resultaccuracycode.label,\n                    nresultaccuracycode: resultData.resultaccuracycode.value\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\n                  results[\"sresult\"] = resultData.sresult;\n                  results[\"sfinal\"] = resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\n                  results[\"ngradecode\"] = resultData.sresult !== \"\" ? numericGrade(resultData, results[\"sfinal\"]) : -1;\n                  results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                  results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                  results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                  results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results['nunitcode'] = resultData.unitcode.value; //Modified by sonia on 6th Aug 2024 for JIRA ID:ALPD-4558\n\n                  break;\n\n                case 2:\n                  results[\"jsondata\"] = {\n                    ncalculatedresult: 4,\n                    sresult: Lims_JSON_stringify(resultData.sresult, false),\n                    sfinal: Lims_JSON_stringify(resultData.sfinal, false),\n                    sresultcomment: resultData.sresultcomment === 'null' ? \"-\" : resultData.sresultcomment,\n                    salertmessage: resultData.salertmessage,\n                    additionalInfo: resultData['additionalInfo'],\n                    additionalInfoUidata: resultData['additionalInfoUidata'] === undefined ? \"\" : resultData['additionalInfoUidata'],\n                    ntestgrouptestpredefcode: resultData.ntestgrouptestpredefcode\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"sresult\"] = resultData.sresult;\n                  results[\"ncalculatedresult\"] = 4;\n                  results[\"sfinal\"] = resultData.sresult;\n                  results[\"ngradecode\"] = resultData.ngradecode;\n                  results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                  results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                  results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                  results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results['nunitcode'] = resultData.nunitcode;\n                  break;\n\n                case 3:\n                  results[\"jsondata\"] = {\n                    ncalculatedresult: 4,\n                    sresult: Lims_JSON_stringify(resultData.sresult, false),\n                    sfinal: Lims_JSON_stringify(resultData.sresult, false)\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"sresult\"] = resultData.sresult;\n                  results[\"ncalculatedresult\"] = 4;\n                  results[\"sfinal\"] = resultData.sresult;\n                  results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\n                  results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                  results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                  results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                  results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results['nunitcode'] = resultData.nunitcode;\n                  break;\n\n                case 4:\n                  if (resultData.sfinal.length > 0) {\n                    const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\n                    const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\n                    const uniquefilename = create_UUID() + '.' + fileExtension;\n                    results[\"jsondata\"] = {\n                      ssystemfilename: uniquefilename,\n                      nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\n                      ncalculatedresult: 4,\n                      sresult: Lims_JSON_stringify(resultData.sresult, false),\n                      sfinal: Lims_JSON_stringify(resultData.sresult, false)\n                    };\n                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                    results[\"ncalculatedresult\"] = 4;\n                    results[\"sresult\"] = resultData.sresult;\n                    results[\"sfinal\"] = resultData.sresult;\n                    results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\n                    results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\n                    results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\n                    results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n                    results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\n                    results['nparametertypecode'] = resultData.nparametertypecode;\n                    results[\"ssystemfilename\"] = uniquefilename;\n                    results[\"nfilesize\"] = resultData.sfinal[0] && resultData.sfinal[0].size;\n                    results['nunitcode'] = resultData.nunitcode;\n                    formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\n                    formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\n                    i++;\n                  } else {\n                    const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\n                    const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\n                    const uniquefilename = \"\";\n                    results[\"jsondata\"] = {\n                      ssystemfilename: uniquefilename,\n                      nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\n                      ncalculatedresult: 4,\n                      sresult: \"\",\n                      sfinal: \"\"\n                    };\n                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                    results[\"ncalculatedresult\"] = 4;\n                    results[\"sresult\"] = \"\";\n                    results[\"sfinal\"] = \"\";\n                    results[\"ngradecode\"] = -1;\n                    results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\n                    results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\n                    results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n                    results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\n                    results['nparametertypecode'] = resultData.nparametertypecode;\n                    results[\"ssystemfilename\"] = \"\";\n                    results[\"nfilesize\"] = \"\";\n                    formData.append(\"uploadedFile\" + index, \"\");\n                    formData.append(\"uniquefilename\" + index, \"\");\n                    formData.append(\"ntransactiontestcode\", \"\");\n                  }\n\n                  break;\n\n                default:\n                  break;\n              }\n\n              if (Object.values(results).length > 0) {\n                releaseParameters.push(results);\n              }\n            }\n\n            return null;\n          });\n\n          if (neditable === 0) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              // ALPD-4026 (18-05-2024) Added modalShow as false and commented openModal: false because of not closing the result correction data grid\n              data: {\n                loading: false,\n                // openModal: false, \n                modalShow: false,\n                parameterResults: [],\n                selectedRecord: {}\n              }\n            };\n            return this.props.updateStore(updateInfo);\n          }\n\n          formData.append(\"filecount\", i);\n          formData.append(\"nregtypecode\", nregtypecode);\n          formData.append(\"nregsubtypecode\", nregsubtypecode);\n          formData.append(\"ncoaparentcode\", this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode);\n          formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\n          formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\n          formData.append(\"resultData\", JSON.stringify(releaseParameters));\n          inputParam = {\n            classUrl: classUrl,\n            methodUrl: \"ReleaseParameter\",\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              doAction: \"editresult\"\n            },\n            formData: formData,\n            isFileupload: true,\n            operation: \"update\",\n            displayName: this.props.Login.inputParam.displayName,\n            saveType //, postParam\n\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, editResultId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                modalShow: false,\n                openModal: true,\n                ncontrolcode: editResultId,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"modalShow\");\n          }\n        } // else {\n        //     const updateInfo = {\n        //         typeName: DEFAULT_RETURN,\n        //         data: { loading: false, openModal: false }\n        //     }\n        //     return this.props.updateStore(updateInfo);\n        // }\n        else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_ENTERRESULT\"\n          }));\n        }\n      }\n    };\n\n    this.onSaveModalClick = () => {\n      //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\n      if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\n        this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData);\n      } else {\n        let ntransactionsamplecode = \"\";\n        let ntransactiontestcode = \"\";\n        let npreregno = \"\";\n        let seletedRecord = this.state.selectedRecord;\n\n        if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n          if (this.state.npreregno && this.state.npreregno.length > 0) {\n            let sample = this.state.npreregno.filter((c, index) => {\n              return this.state.npreregno.indexOf(c) === index;\n            });\n            let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n              return this.state.ntransactionsamplecode.indexOf(c) === index;\n            });\n            let test = this.state.ntransactiontestcode.filter((c, index) => {\n              return this.state.ntransactiontestcode.indexOf(c) === index;\n            });\n            npreregno = sample.map(x => x).join(\",\");\n            ntransactionsamplecode = subsample.map(x => x).join(\",\");\n            ntransactiontestcode = test.map(x => x).join(\",\");\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n            const inputParam = {\n              // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n              // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n              // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n              inputData: {\n                change: this.props.Login.change,\n                npreregno: String(npreregno),\n                ntransactionsamplecode: ntransactionsamplecode,\n                ntransactiontestcode: ntransactiontestcode,\n                // ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\n                //     && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\n                ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\n                ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n                url: this.props.Login.settings[24],\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n                dfrom: obj.fromDate,\n                dto: obj.toDate,\n                //  isPopup:true,\n                isAddPopup: false,\n                isEditPopup: false,\n                nflag: 2,\n                userinfo: this.props.Login.userInfo,\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n                doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\n                isSMTLFlow: parseInt(this.props.Login.settings[29]),\n                nreporttemplatecode: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode ? this.state.selectedRecord.nreporttemplatecode.value : -1,\n                singleSampleInRelease: this.state.selectedRecord && this.state.selectedRecord.nisarnowiserelease && this.state.selectedRecord.nisarnowiserelease === transactionStatus.YES ? this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES ? transactionStatus.NO : transactionStatus.YES : this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease,\n                nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired,\n                nismultipleproject: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nismultipleproject) || transactionStatus.NO,\n                nprojectspecrequired: parseInt(this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired) || transactionStatus.NO,\n                //Added by Dhanushya RI jira id-ALPD-3862 for multiple projects under single release\n                searchRef: this.searchRef // ALPD-4229 (12-06-2024) Added searchRef to clear searched text\n\n              },\n              userinfo: this.props.Login.userInfo,\n              methodUrl: \"Release\",\n              classUrl: \"release\",\n              operation: this.props.Login.operation,\n              searchRef: this.searchRef // ALPD-4229 (30-05-2024) Added searchRef to clear search text\n\n            };\n\n            if (this.props.Login.isEditPopup) {\n              inputParam.inputData['nsectioncode'] = this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES ? this.props.Login.masterData && this.props.Login.masterData.reportSectionCode : -1;\n              inputParam.inputData['isEditSave'] = true;\n            }\n\n            const masterData = this.props.Login.masterData;\n\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  loadEsign: true,\n                  screenData: {\n                    inputParam,\n                    masterData,\n                    seletedRecord\n                  },\n                  operation: this.props.Login.operation,\n                  screenName: this.props.Login.screenName,\n                  ncontrolcode: this.props.Login.ncontrolCode\n                }\n              };\n              this.props.updateStore(updateInfo);\n            } else {\n              if (this.props.Login.isDeletePopup) {\n                this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData);\n              } else if (this.props.Login.isEditPopup) {\n                this.props.UpdateApprovedSample(inputParam.inputData, this.props.Login.masterData);\n              } else {\n                this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData, seletedRecord);\n              }\n            }\n          } else {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_SELECTANYONESAMPLE\"\n            }));\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTANYONESAMPLE\"\n          }));\n        }\n      }\n    };\n\n    this.sendToPortal = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        const inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          url: this.props.Login.settings[24],\n          isPortal: true,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n          allPreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getReportForPortal(inputParam);\n      }\n    };\n\n    this.editReportTemplate = inputParam => {\n      if (inputParam.editReportTemplate.ntransactionstatus === transactionStatus.DRAFT || inputParam.editReportTemplate.ntransactionstatus === transactionStatus.CORRECTION) {\n        let inputParamData = {\n          inputData: {\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n            nsectioncode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n            nreporttypecode: REPORTTYPE.COAREPORT,\n            nreporttemplatecode: inputParam.editReportTemplate.nreporttemplatecode,\n            ncoaparentcode: inputParam.editReportTemplate.ncoaparentcode,\n            ncoaparenttranscode: inputParam.editReportTemplate.ntransactionstatus,\n            userinfo: this.props.Login.userInfo,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n          },\n          ncoaparentcode: inputParam.editReportTemplate.ncoaparentcode,\n          nreporttemplatecode: inputParam.editReportTemplate.nreporttemplatecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          selectedRecord: this.state.selectedRecord // screenName: \"IDS_REPORTTEMPLATE\"\n\n        };\n        this.props.editReportTemplate(inputParamData);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTCORRECTEDRECORD\"\n        }));\n      }\n    };\n\n    this.reportHistory = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.DRAFT) {\n          let inputParam = {\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n            stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData\n          };\n          this.props.versionHistory(inputParam);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTRELEASEDRECORD\"\n          }));\n        }\n      }\n    };\n\n    this.releaseReportHistory = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        //if(this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus!==transactionStatus.DRAFT){\n        let inputParam = {\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n          spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n          stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n          stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_RELEASEHISTORY\"\n          })\n        };\n        this.props.releaseReportHistory(inputParam); //    }else{\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\n        //    }\n      }\n    };\n\n    this.patientInfo = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          isPatientDetails: true,\n          openModal: true,\n          hideSave: true,\n          isAddPopup: false,\n          isEditPopup: false,\n          isDeletePopup: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.reportHistoryInfo = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        const inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode\n          },\n          masterData: this.props.Login.masterData\n        };\n        this.props.viewReportHistory(inputParam);\n      }\n    };\n\n    this.releaseTestAttachmentData = actionName => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        const inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            actionName: actionName\n          },\n          masterData: this.props.Login.masterData\n        };\n        this.props.viewReleaseTestAttachment(inputParam);\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData\"];\n      this.props.Login.change = false;\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ncoareporttypecode: realReportTypeValue && realReportTypeValue.ncoareporttypecode || -1,\n        isneedsection: parseInt(realReportTypeValue && realReportTypeValue.isneedsection) || transactionStatus.NO,\n        ntransactionstatus: realFilterStatusValue && (realFilterStatusValue.ntransactionstatus !== undefined || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode !== -1) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let isPatientDetails = this.props.Login.isPatientDetails;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let hideSave = this.props.Login.hideSave;\n      let isAddPopup = this.props.Login.isAddPopup;\n      let isEditPopup = this.props.Login.isEditPopup;\n      let isDeletePopup = this.props.Login.isDeletePopup;\n      let isCorrectionNeed = this.props.Login.isCorrectionNeed;\n      let ncontrolcode = this.props.Login.ncontrolcode;\n      let modalShow = this.props.Login.modalShow;\n      let screenName = this.props.Login.screenName;\n      let isPatientReports = this.props.Login.isPatientReports;\n      let openModalTitle = this.props.Login.openModalTitle;\n      let isReleaseTestAttachment = this.props.Login.isReleaseTestAttachment;\n      let isReleaseTestComment = this.props.Login.isReleaseTestComment;\n      let isAddReleaseTestAttachment = this.props.Login.isAddReleaseTestAttachment;\n      let isAddReleaseTestComment = this.props.Login.isAddReleaseTestComment;\n      let isInitialRender = this.props.Login.isInitialRender;\n      let loadEsignStateHandle = this.props.Login.loadEsignStateHandle;\n      let FilterQueryBuilder = this.props.Login.FilterQueryBuilder;\n      let slideOutClose = this.props.Login.slideOutClose; // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\n\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n      const editReportTemplateId = this.state.controlMap.has(\"EditReportTemplate\") && this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode; //let projectMasterList =[];\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false; // openModal = false;\n\n          isPatientDetails = false;\n          hideSave = false;\n          isAddPopup = false;\n          isEditPopup = false;\n          isDeletePopup = true; //Modified by sonia on 7th Aug 2024 for JIRA ID:ALPD-4576\n\n          isCorrectionNeed = false;\n          isPatientReports = false;\n          isReleaseTestAttachment = false;\n          isReleaseTestComment = false; // screenName = undefined;\n\n          selectedRecord = {};\n          FilterQueryBuilder = false;\n        } else {\n          slideOutClose = false;\n\n          if (ncontrolcode && (ncontrolcode === editResultId || ncontrolcode === editReportTemplateId)) {\n            modalShow = true;\n\n            if (ncontrolcode === editReportTemplateId) {\n              openModal = false;\n            }\n          }\n\n          if (this.props.Login.screenName !== undefined && this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_CORRECTION\"\n          }) // || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) \n          || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_REGENERATEFILE\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_GENERATEFILE\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_PREVIEWREPORT\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_PRELIMINARYREPORT\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_RELEASEHISTORY\"\n          })) {\n            openModal = false; //  screenName = undefined;\n          }\n\n          loadEsign = false; // selectedRecord[\"agree\"] = 4;\n\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n          FilterQueryBuilder = false;\n        }\n      } // When using EsignStateHandle component\n      else if (this.props.Login.loadEsignStateHandle) {\n        loadEsignStateHandle = false;\n      } else if (this.props.Login.FilterQueryBuilder) {\n        FilterQueryBuilder = false;\n        screenName = this.props.Login.screenNameCopy;\n      } else {\n        openModal = isAddReleaseTestAttachment === true || isAddReleaseTestComment === true ? true : false;\n        isPatientDetails = false;\n        hideSave = false;\n        isAddPopup = false;\n        isEditPopup = false;\n        isDeletePopup = false;\n        isCorrectionNeed = false;\n        isPatientReports = false;\n        isReleaseTestAttachment = isAddReleaseTestAttachment === true ? true : false;\n        isReleaseTestComment = isAddReleaseTestComment === true ? true : false; //screenName = undefined;\n\n        selectedRecord = {};\n        openModalTitle = undefined;\n        isAddReleaseTestAttachment = false;\n        isAddReleaseTestComment = false;\n        isInitialRender = false;\n        FilterQueryBuilder = false;\n        slideOutClose = true;\n      } // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\n      // if((this.props.Login.loadEsign && this.props.Login.loadEsign===false) && (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true ||\n      //     this.props.Login.isEditPopup && this.props.Login.isEditPopup === true)){\n      //     slideOutClose = true;\n      // }\n\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          modalShow,\n          loadEsign,\n          screenName,\n          selectedRecord,\n          selectedId: null,\n          isPatientDetails,\n          hideSave,\n          isAddPopup,\n          isEditPopup,\n          isDeletePopup,\n          isCorrectionNeed,\n          isPatientReports,\n          openModalTitle,\n          isReleaseTestAttachment,\n          isReleaseTestComment,\n          isAddReleaseTestAttachment,\n          isAddReleaseTestComment,\n          isInitialRender,\n          loadEsignStateHandle,\n          FilterQueryBuilder,\n          slideOutClose\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let ReportmodalShow = this.props.Login.ReportmodalShow; // const editResultId =this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        ReportmodalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          ReportmodalShow\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeDocModal = () => {\n      let openModal = false;\n      let showReport = false;\n      let selectedRecord = {};\n      this.setState({\n        showReport,\n        openModal,\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = { ...this.state.selectedRecord\n      } || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onChangeAwesomeQueryBuilder = (immutableTree, config) => {\n      //let selectedRecord = this.state.selectedRecord || {};\n      const filterquery = QbUtils.sqlFormat(immutableTree, config);\n      const filterQueryTreeStr = QbUtils.getTree(immutableTree);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          awesomeTree: immutableTree,\n          awesomeConfig: config,\n          filterquery,\n          filterQueryTreeStr\n        }\n      };\n      this.props.updateStore(updateInfo); // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\n    };\n\n    this.onComboChangeAwesomeQueryBuilder = (immutableTree, config, event) => {\n      //     let isMandatory=false;\n      //    if(event.type==='REMOVE_RULE'){\n      //     this.state.DynamicReportFilterTypeItem.map(x=>{\n      //         if(x[designProperties.VALUE]===config.fields[event.affectedField]['label'] && x['ismandatory']){\n      //             isMandatory=true;\n      //         }\n      //     })\n      //    }\n      //    if(!isMandatory){\n      const filterquery = QbUtils.sqlFormat(immutableTree, config);\n      const filterQueryTreeStr = QbUtils.getTree(immutableTree);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          awesomeTree: immutableTree,\n          awesomeConfig: config,\n          filterquery,\n          filterQueryTreeStr //,immutableTreeCopy:immutableTree,configCopy:config\n\n        }\n      };\n      this.props.updateStore(updateInfo); // }else{\n      //     const filterquery =this.props.Login.filterquery;\n      //     const filterQueryTreeStr =this.props.Login.filterQueryTreeStr;\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: {\n      //             awesomeTree: this.props.Login.immutableTreeCopy, awesomeConfig: this.props.Login.configCopy, \n      //             filterquery, filterQueryTreeStr\n      //         }\n      //     }\n      //     this.props.updateStore(updateInfo)\n      //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\n      // }\n    };\n\n    this.handleExecuteClick = event => {\n      //const selectedRecord = this.state.selectedRecord\n      const filterquery = this.props.Login.filterquery;\n\n      if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\n        const inputparam = {\n          component: this.props.Login.seletedFilterComponent,\n          userinfo: this.props.Login.userInfo,\n          filterquery: filterquery // selectedRecord:this.state.selectedRecord\n\n        };\n        this.props.getPatientFilterExecuteData(inputparam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLINFILTER\"\n        }));\n      }\n    };\n\n    this.handleKendoRowClick = event => {\n      let patientinfo = event.dataItem;\n      const component = this.props.Login.seletedFilterComponent;\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputparam = {\n        realFromDate: obj.fromDate,\n        realToDate: obj.toDate,\n        realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n        realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n        realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n        realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n        realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n        realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n        masterData: { ...this.props.Login.masterData\n        },\n        realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n        Login: this.props.Login,\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'isAddPopup': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }),\n        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        userinfo: this.props.Login.userInfo,\n        patientinfo: event.dataItem,\n        spatientid: event.dataItem.spatientid // selectedRecord:this.state.selectedRecord\n\n      }; // if (component[\"childFields\"]) {\n      //     const index = this.props.Login.masterIndex;\n      //     let selectedRecord = this.state.selectedMaster || {};\n      //     component[\"childFields\"].map(item => {\n      //         let data = item1[item.columnname];\n      //         if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\n      //             //combocontrol\n      //             data = { label: item1[item.sdisplaymember], value: item1[item.svaluemember] };\n      //         }\n      //         else if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\n      //             //Date picker control\n      //             data = rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, data);\n      //         }\n      //         selectedRecord[index][item.columnname] = data;\n      //     })\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: { selectedMaster: selectedRecord, loadCustomSearchFilter: false, }\n      //     }\n      //     this.props.updateStore(updateInfo);\n      // }\n      // else {\n      //     const newdata = {\n      //         label: item1[component['displaymember']],\n      //         value: item1[component['valuemember']], item: { jsondata: { ...item1, jsondata: { ...item1 } } }\n      //     };\n      //     this.onComboChange(newdata, component, component['label']);\n      // }\n\n      this.props.getPatientWiseSample(inputparam);\n    };\n\n    this.onInputChange = event => {\n      let selectedComment = this.props.Login.masterData.selectedComment || {};\n      selectedComment[event.target.name] = event.target.value;\n      const coaFileInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          selectedComment\n        }\n      };\n      this.props.updateStore(coaFileInfo);\n    };\n\n    this.validateEsign = () => {\n      let ncontrolcode = this.props.Login.ncontrolcode;\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n      let modalName = \"\";\n\n      if (ncontrolcode && ncontrolcode === editResultId) {\n        modalName = \"modalShow\";\n      } else {\n        modalName = \"openModal\";\n      }\n\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignforRelease(inputParam, modalName);\n    };\n\n    this.selectionChange = (event, nflag, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (nflag === undefined) {\n        this.state.dataResult.data.map(item => {\n          if (item.npreregno === event.dataItem.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let preregno = event.dataItem.npreregno;\n        let ncoahistorycode = event.dataItem.ncoahistorycode;\n        let ssystemfilename = event.dataItem.ssystemfilename;\n        const coaFileInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncoahistorycode,\n            ssystemfilename\n          }\n        };\n        this.props.updateStore(coaFileInfo);\n        this.childHeaderSelectionChange(event, preregno, checkedflag);\n      } else {\n        let data = [];\n        event.dataItems.map(item => {\n          data.push({\n            \"npreregno\": item.npreregno\n          });\n        });\n        this.childHeaderSelectionChange(event, data, checkedflag);\n      }\n    };\n\n    this.childHeaderSelectionChange = (event, preregno, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let subsamplecode = [];\n      let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno;\n\n      if (npreregno.length === 0 || npreregno.length === undefined) {\n        this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\n          item.selected = checked;\n\n          if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n            subsamplecode.push({\n              \"ntransactionsamplecode\": item.ntransactionsamplecode\n            });\n          }\n        });\n        this.props.Login.masterData.ReleaseSample.map(data => {\n          if (data.npreregno === npreregno) {\n            data.selected = checked;\n          }\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } else {\n        npreregno.map(value => {\n          this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\n            item.selected = checked;\n\n            if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n              subsamplecode.push({\n                \"ntransactionsamplecode\": item.ntransactionsamplecode\n              });\n            }\n          });\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      }\n    };\n\n    this.subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let transactionsamplecode = subsamplecode;\n\n      if (subsamplecode !== undefined) {\n        //  transactionsamplecode = subsamplecode\n        let recievedPreRegNo = undefined;\n        let recievedTransactionSampleCode = undefined;\n        let recievedTransactionTestCode = undefined;\n        transactionsamplecode.map(value => {\n          this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n            item.selected = checked;\n            let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\n            let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\n            let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\n            let sendData = {\n              npreregno: nPreRegNo,\n              ntransactionsamplecode: nTransactionSampleCode,\n              ntransactiontestcode: nTransactionTestCode\n            }; // this.collectData(item, checkedflag)\n            // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\n\n            let sentData = this.collectData(item, sendData);\n            recievedPreRegNo = sentData.npreregno;\n            recievedTransactionSampleCode = sentData.ntransactionsamplecode;\n            recievedTransactionTestCode = sentData.ntransactiontestcode;\n            return item;\n          });\n        });\n        this.setState({\n          npreregno: checkedflag === false ? [] : recievedPreRegNo,\n          ntransactionsamplecode: checkedflag === false ? [] : recievedTransactionSampleCode,\n          ntransactiontestcode: checkedflag === false ? [] : recievedTransactionTestCode\n        });\n      } else {\n        let recievedPreRegNo = undefined;\n        let recievedTransactionSampleCode = undefined;\n        let recievedTransactionTestCode = undefined;\n        event.dataItems.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\n          let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\n          let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\n          let sendData = {\n            npreregno: nPreRegNo,\n            ntransactionsamplecode: nTransactionSampleCode,\n            ntransactiontestcode: nTransactionTestCode\n          }; // this.collectData(item, checkedflag)\n          // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\n\n          let sentData = this.collectData(item, sendData);\n          recievedPreRegNo = sentData.npreregno;\n          recievedTransactionSampleCode = sentData.ntransactionsamplecode;\n          recievedTransactionTestCode = sentData.ntransactiontestcode;\n          return item;\n        }));\n        this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\n          if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n\n        this.setState({\n          npreregno: checkedflag === false ? [] : recievedPreRegNo,\n          ntransactionsamplecode: checkedflag === false ? [] : recievedTransactionSampleCode,\n          ntransactiontestcode: checkedflag === false ? [] : recievedTransactionTestCode\n        });\n      }\n    };\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (event.dataItems.length !== 0) {\n        this.state.dataResult.data.map(item => {\n          item.selected = checked;\n          return item;\n        });\n        this.selectionChange(event, 1, checked);\n      } else {\n        this.setState({\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      }\n    };\n\n    this.childSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          item.selected = checked;\n        }\n      });\n      let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n        return item.slected === true;\n      });\n\n      if (data === true) {\n        this.props.Login.masterData.ReleaseSample.map(item => {\n          if (event.dataItem.npreregno === item.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let recievedPreRegNo = undefined;\n        let recievedTransactionSampleCode = undefined;\n        let recievedTransactionTestCode = undefined;\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\n            let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\n            let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\n            let sendData = {\n              npreregno: nPreRegNo,\n              ntransactionsamplecode: nTransactionSampleCode,\n              ntransactiontestcode: nTransactionTestCode\n            }; // this.collectData(item)\n            // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\n\n            let sentData = this.collectData(item, sendData);\n            recievedPreRegNo = sentData.npreregno;\n            recievedTransactionSampleCode = sentData.ntransactionsamplecode;\n            recievedTransactionTestCode = sentData.ntransactiontestcode;\n          }\n        });\n        this.setState({\n          npreregno: recievedPreRegNo,\n          ntransactionsamplecode: recievedTransactionSampleCode,\n          ntransactiontestcode: recievedTransactionTestCode\n        });\n      } else {\n        let recievedPreRegNo = undefined;\n        let recievedTransactionSampleCode = undefined;\n        let recievedTransactionTestCode = undefined;\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\n            let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\n            let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\n            let sendData = {\n              npreregno: nPreRegNo,\n              ntransactionsamplecode: nTransactionSampleCode,\n              ntransactiontestcode: nTransactionTestCode\n            }; // this.collectData(item)\n            // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\n\n            let sentData = this.collectData(item, sendData);\n            recievedPreRegNo = sentData.npreregno;\n            recievedTransactionSampleCode = sentData.ntransactionsamplecode;\n            recievedTransactionTestCode = sentData.ntransactiontestcode;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n\n        this.setState({\n          npreregno: recievedPreRegNo,\n          ntransactionsamplecode: recievedTransactionSampleCode,\n          ntransactiontestcode: recievedTransactionTestCode\n        });\n      }\n    };\n\n    this.subChildSelectionChange = event => {\n      let x = [];\n      const checked = event.syntheticEvent.target.checked;\n      let recievedPreRegNo = undefined;\n      let recievedTransactionSampleCode = undefined;\n      let recievedTransactionTestCode = undefined;\n      this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n          item.selected = checked;\n          let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\n          let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\n          let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\n          let sendData = {\n            npreregno: nPreRegNo,\n            ntransactionsamplecode: nTransactionSampleCode,\n            ntransactiontestcode: nTransactionTestCode\n          }; // this.collectData(item)\n          // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\n\n          let sentData = this.collectData(item, sendData);\n          recievedPreRegNo = sentData.npreregno;\n          recievedTransactionSampleCode = sentData.ntransactionsamplecode;\n          recievedTransactionTestCode = sentData.ntransactiontestcode;\n        }\n      });\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\n            x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode];\n          }\n        }\n      });\n      let y = x.filter(t => t.selected === true);\n\n      if (x.length === y.length) {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true;\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false;\n          }\n        });\n      }\n\n      this.state.dataResult.data.map(item => {\n        if (item.npreregno === event.dataItem.npreregno) {\n          if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\n            x = this.props.Login.masterData.ReleaseSubSample[item.npreregno];\n          }\n        }\n      });\n      let y1 = x.filter(t => t.selected === true);\n\n      if (x.length === y1.length) {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === y1[0].npreregno) {\n            this.state.dataResult.data[i].selected = true;\n          }\n        });\n      } else {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === event.dataItem.npreregno) {\n            this.state.dataResult.data[i].selected = false;\n          }\n        });\n      }\n\n      this.setState({\n        npreregno: recievedPreRegNo,\n        ntransactionsamplecode: recievedTransactionSampleCode,\n        ntransactiontestcode: recievedTransactionTestCode\n      });\n    };\n\n    this.collectData = (item, recievedData) => {\n      //     let npreregno = this.state.npreregno || []\n      //     let ntransactionsamplecode = this.state.ntransactionsamplecode || []\n      //     let ntransactiontestcode = this.state.ntransactiontestcode || []\n      let npreregno = recievedData.npreregno || [];\n      let ntransactionsamplecode = recievedData.ntransactionsamplecode || [];\n      let ntransactiontestcode = recievedData.ntransactiontestcode || [];\n\n      if (item.selected === true) {\n        if (!npreregno.includes(item.npreregno)) {\n          npreregno.push(item.npreregno);\n        }\n\n        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n          ntransactionsamplecode.push(item.ntransactionsamplecode);\n        }\n\n        if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n          ntransactiontestcode.push(item.ntransactiontestcode);\n        }\n      } else {\n        const preregno = npreregno.filter(data => data !== item.npreregno);\n        npreregno = preregno;\n        const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\n        ntransactionsamplecode = transactionsamplecode;\n        const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode);\n        ntransactiontestcode = transactiontestcode;\n      } //     this.setState({\n      //         npreregno: checkedflag === false ? [] : npreregno,\n      //         ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode, ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\n      //     })\n\n\n      let returnData = {\n        npreregno,\n        ntransactionsamplecode,\n        ntransactiontestcode\n      };\n      return returnData;\n    };\n\n    this.viewSelectedReport = filedata => {\n      delete filedata.inputData.userinfo;\n      const inputParam = {\n        inputData: {\n          releasedcoareport: filedata.inputData,\n          userinfo: this.props.Login.userInfo,\n          ncontrolCode: filedata.ncontrolCode\n        },\n        classUrl: \"release\",\n        operation: \"view\",\n        methodUrl: \"ReleasedCOAReport\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.childDataChange = selectedRecord => {\n      let isInitialRender = false;\n      this.setState({\n        selectedRecord: { ...selectedRecord\n        },\n        isInitialRender\n      });\n    };\n\n    this.onMandatoryCheck = () => {\n      const mandatoryFields = this.props.Login.loadEsignStateHandle ? [{\n        \"idsName\": \"IDS_PASSWORD\",\n        \"dataField\": \"esignpassword\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REASON\",\n        \"dataField\": \"esignreason\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"esigncomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      } // { \"idsName\": \"IDS_CHECKAGREE\",\"dataField\": \"agree\",  \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"checkbox\" },\n      ] : this.props.Login.isAddReleaseTestAttachment ? [{\n        \"idsName\": \"IDS_FILE\",\n        \"dataField\": \"sfilename\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_TESTSYNONYM\",\n        \"dataField\": \"stestsynonym\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      } //  { \"idsName\": \"IDS_HEADER\", \"dataField\": \"sheader\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\n      ] : this.props.Login.isAddReleaseTestComment ? this.state.selectedRecord && this.state.selectedRecord[\"ncommentsubtypecode\"] && this.state.selectedRecord[\"ncommentsubtypecode\"].value === 3 ? [{\n        \"idsName\": \"IDS_COMMENTNAME\",\n        \"dataField\": \"scommentsubtype\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_ABBREVIATIONNAME\",\n        \"dataField\": \"spredefinedname\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"scomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_TESTSYNONYM\",\n        \"dataField\": \"stestsynonym\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }] : [{\n        \"idsName\": \"IDS_COMMENTNAME\",\n        \"dataField\": \"scommentsubtype\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"scomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_TESTSYNONYM\",\n        \"dataField\": \"stestsynonym\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }] : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }) && this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection !== transactionStatus.YES ? [{\n        \"mandatory\": true,\n        \"idsName\": \"IDS_REPORTTEMPLATE\",\n        \"dataField\": \"nreporttemplatecode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }] : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }) && this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection === transactionStatus.YES ? [{\n        \"mandatory\": true,\n        \"idsName\": \"IDS_SECTION\",\n        \"dataField\": \"nsectioncode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_REPORTTEMPLATE\",\n        \"dataField\": \"nreporttemplatecode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }] : [];\n      {\n        this.props.Login.screenName === this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }) && this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection !== transactionStatus.YES && this.props.Login.masterData && this.props.Login.masterData.reportTemplateList && this.props.Login.masterData.reportTemplateList.length === 0 ? toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REPORTTEMPLATEISNOTFOUND\"\n        })) : onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields, this.props.Login.loadEsignStateHandle ? this.validateEsign : this.props.Login.isAddReleaseTestAttachment ? this.onSaveTestAttachment : this.props.Login.isAddReleaseTestComment ? this.onSaveTestComment : this.props.Login.screenName === this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }) ? this.onSaveModalClick : \"\", this.props.Login.screenName === this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }) ? this.props.Login.loadEsign : this.props.Login.loadEsignStateHandle);\n      }\n    };\n\n    this.onSaveTestAttachment = (saveType, formRef) => {\n      const formData = new FormData();\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const userInfo = this.props.Login.userInfo;\n      let isFileEdited = transactionStatus.NO;\n      let fileArray = [];\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        if (this.state.operation === 'create') {\n          acceptedFiles.forEach((file, index) => {\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n            const uniquefilename = fileName + '.' + fileExtension;\n            const tempData = {};\n            tempData[\"nformcode\"] = userInfo.nformcode;\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n            tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n            tempData[\"nusercode\"] = userInfo.nusercode;\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n            tempData[\"jsondata\"] = {\n              stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\n              susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\n              suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\n              nfilesize: file.size,\n              ssystemfilename: uniquefilename,\n              sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n              slinkname: \"\",\n              sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n              sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\n            };\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            fileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          acceptedFiles.forEach((file, index) => {\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n            const uniquefilename = fileName + '.' + fileExtension;\n            const tempData = {};\n            tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\n            tempData[\"nformcode\"] = userInfo.nformcode;\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n            tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n            tempData[\"nusercode\"] = userInfo.nusercode;\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n            tempData[\"jsondata\"] = {\n              stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\n              susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\n              suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\n              nfilesize: file.size,\n              ssystemfilename: uniquefilename,\n              sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n              slinkname: \"\",\n              sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n              sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\n            };\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            formData.append(\"filecount\", acceptedFiles.length);\n            isFileEdited = transactionStatus.YES;\n            fileArray.push(tempData);\n          });\n        }\n      } else {\n        let tempData = {};\n        tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\n        tempData[\"nformcode\"] = userInfo.nformcode;\n        tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n        tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n        tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n        tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n        tempData[\"nusercode\"] = userInfo.nusercode;\n        tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n        tempData[\"jsondata\"] = {\n          stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\n          susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\n          suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\n          nfilesize: selectedRecord.size,\n          ssystemfilename: selectedRecord.ssystemfilename,\n          sfilename: Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n          slinkname: \"\",\n          sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n          sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\n        };\n        fileArray.push(tempData);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"releasetestattachment\", JSON.stringify(fileArray));\n      formData.append(\"nattachmenttypecode\", attachmentType.FTP);\n      formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\n      formData.append(\"ncontrolcode\", this.props.Login.ncontrolCode);\n      formData.append(\"userinfo\", JSON.stringify({ ...userInfo,\n        sformname: Lims_JSON_stringify(userInfo.sformname),\n        smodulename: Lims_JSON_stringify(userInfo.smodulename),\n        slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n      }));\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...userInfo,\n            sformname: Lims_JSON_stringify(userInfo.sformname),\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n          },\n          doAction: \"editReleaseTestAttachment\",\n          formData: formData,\n          isFileupload: true,\n          operation: this.props.Login.operation,\n          classUrl: \"release\",\n          saveType: saveType,\n          formRef: formRef,\n          methodUrl: \"ReleaseTestAttachment\",\n          selectedRecord: this.state.selectedRecord,\n          screenName: this.props.Login.screenName,\n          masterData: this.props.Login.masterData\n        }\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            screenData: {\n              inputParam\n            },\n            loadEsignStateHandle: true,\n            ncontrolcode: this.props.Login.ncontrolCode\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.onSaveReleaseTestAttachment(inputParam);\n      }\n    };\n\n    this.deleteReleaseTestAttachment = deleteParam => {\n      const url = \"release/deleteReleaseTestAttachment\";\n\n      if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\n        let releasetestattachment = {\n          \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\n          \"npreregno\": deleteParam.selectedRecord.npreregno,\n          \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\n          \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\n          \"nreleasetestattachmentcode\": deleteParam.selectedRecord.nreleasetestattachmentcode\n        };\n        let inputParam = {\n          inputData: {\n            releasetestattachment,\n            url,\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.Login.screenName,\n            masterData: this.props.Login.masterData,\n            doAction: \"deleteReleaseTestAttachment\",\n            selectedRecord: this.state.selectedRecord\n          }\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              screenData: {\n                inputParam\n              },\n              loadEsignStateHandle: true,\n              ncontrolcode: deleteParam.ncontrolCode\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.onDeleteReleaseTestAttachment(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTCORRECTEDRECORD\"\n        }));\n      }\n    };\n\n    this.onSaveTestComment = (saveType, formRef) => {\n      const formData = new FormData();\n      const selectedRecord = this.state.selectedRecord;\n      const userInfo = this.props.Login.userInfo;\n      const inputData = {};\n      let commentArray = [];\n      let comment = {};\n      comment[\"nreleasetestcommentcode\"] = selectedRecord.selectedReleaseTestComment && selectedRecord.selectedReleaseTestComment.nreleasetestcommentcode;\n      comment[\"nformcode\"] = userInfo.nformcode;\n      comment[\"npreregno\"] = selectedRecord.npreregno.value;\n      comment[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n      comment[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n      comment[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n      comment[\"nusercode\"] = userInfo.nusercode;\n      comment[\"nuserrolecode\"] = userInfo.nuserrole;\n      comment[\"ncommentsubtypecode\"] = selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.value;\n      comment[\"nsampletestcommentscode\"] = selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.value !== \"\" ? selectedRecord.nsampletestcommentscode.value : '-1';\n      comment[\"jsondata\"] = {\n        scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\",\n        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n        stestsynonym: selectedRecord.stestsynonym,\n        scommentsubtype: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.label,\n        spredefinedname: selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.label !== \"\" ? selectedRecord.nsampletestcommentscode.label : '-',\n        ncommentsubtypecode: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode,\n        nsampletestcommentscode: selectedRecord.nsampletestcommentscode ? selectedRecord.nsampletestcommentscode : '-'\n      };\n      comment[\"nsamplecommentscode\"] = selectedRecord.nsamplecommentscode ? selectedRecord.nsamplecommentscode.value : -1;\n      commentArray.push(comment);\n      inputData[\"testcomment\"] = commentArray; // }\n\n      formData.append(\"userinfo\", JSON.stringify({ ...userInfo,\n        sformname: Lims_JSON_stringify(userInfo.sformname),\n        smodulename: Lims_JSON_stringify(userInfo.smodulename),\n        slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n      }));\n      formData.append(\"releasetestcomment\", JSON.stringify(commentArray));\n      formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...userInfo,\n            sformname: Lims_JSON_stringify(userInfo.sformname),\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n          },\n          doAction: \"editReleaseTestComment\",\n          formData: formData,\n          operation: this.props.Login.operation,\n          classUrl: \"release\",\n          saveType: saveType,\n          formRef: formRef,\n          methodUrl: \"ReleaseTestComment\",\n          selectedRecord: this.state.selectedRecord,\n          screenName: this.props.Login.screenName,\n          masterData: this.props.Login.masterData\n        }\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsignStateHandle: true,\n            screenData: {\n              inputParam\n            },\n            ncontrolcode: this.props.Login.ncontrolCode\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.onSaveReleaseTestComment(inputParam);\n      }\n    };\n\n    this.deleteReleaseTestComment = deleteParam => {\n      const url = \"release/deleteReleaseTestComment\";\n\n      if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\n        let releasetestcomment = {\n          \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\n          \"npreregno\": deleteParam.selectedRecord.npreregno,\n          \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\n          \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\n          \"nreleasetestcommentcode\": deleteParam.selectedRecord.nreleasetestcommentcode\n        };\n        let inputParam = {\n          inputData: {\n            releasetestcomment,\n            url,\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.Login.screenName,\n            masterData: this.props.Login.masterData,\n            doAction: \"deleteReleaseTestComment\",\n            selectedRecord: this.state.selectedRecord\n          }\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsignStateHandle: true,\n              screenData: {\n                inputParam\n              },\n              ncontrolcode: deleteParam.ncontrolCode\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.onDeleteReleaseTestComment(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTCORRECTEDRECORD\"\n        }));\n      }\n    };\n\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const outsourceFileDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const reportInfoDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const correctionDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const versionHistoryDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const preliminaryHistoryDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const testAttachmentDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const testCommentDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const sampleGridDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      outsourceFileDataState: outsourceFileDataState,\n      reportInfoDataState: reportInfoDataState,\n      correctionDataState: correctionDataState,\n      versionHistoryDataState: versionHistoryDataState,\n      preliminaryHistoryDataState: preliminaryHistoryDataState,\n      childDataResult: [],\n      dataState: dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      SampletypeList: [],\n      ProjecttypeList: [],\n      ProjectMasterList: [],\n      SectionList: [],\n      ReporttypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      searchedData: [],\n      count: 0,\n      SampleGridItem: [],\n      combinedSearchField: [],\n      npreregno: [],\n      ntransactiontestcode: [],\n      ntransactionsamplecode: [],\n      stateDynamicDesign: [],\n      sidebarview: false,\n      testAttachmentDataState: testAttachmentDataState,\n      testCommentDataState: testCommentDataState,\n      sampleGridDataState: sampleGridDataState,\n      splitChangeWidthPercentage: 28.6,\n      skip: 0,\n      take: this.props.Login.settings && parseInt(this.props.Login.settings[3]) // ,\n      // nmultiplesampleinsinglerelease: this.props.Login.masterData.realReportTypeValue && \n      //     this.props.Login.masterData.realReportTypeValue.nmultiplesampleinsinglerelease\n\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sreportno\", \"susername\", \"stransdisplaystatus\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    // ALPD-4229 (12-06-2024) Added sortData to sort the ReleaseHistory in all scenarios\n    this.props.Login.masterData && this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && sortData(this.props.Login.masterData.ReleaseHistory, \"\", 'ncoaparentcode');\n    const editReportParam = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"nreportinforeleasecode\",\n      operation: \"update\",\n      //selectedId:,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: -1,\n      masterData: this.props.Login.masterData,\n      selectedId: this.props.Login.selectedId\n    };\n    this.feildsForGrid = [// { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },  \n    {\n      \"idsName\": \"IDS_SCREEN\",\n      \"dataField\": \"testname\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_FIELDNAME\",\n      \"dataField\": \"sreportfieldname\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_VALUE\",\n      \"dataField\": \"sreportfieldvalue\",\n      \"width\": \"100px\"\n    }];\n    this.fieldsForReleasedReportGrid = [{\n      \"idsName\": \"IDS_RELEASENO\",\n      \"dataField\": \"sreleaseno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_VERSIONNO\",\n      \"dataField\": \"nversionno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_ORDERID\",\n      \"dataField\": \"sexternalorderid\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDSITE\",\n      \"dataField\": \"ssitename\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDDATE\",\n      \"dataField\": \"sreleasedate\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDUSER\",\n      \"dataField\": \"susername\",\n      \"width\": \"200px\"\n    }];\n    const mandatoryCommentsFields = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_COMMENTS\",\n      \"dataField\": \"sreleasecomments\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n    const mandatoryFields = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_DESCRIPTION\",\n      \"dataField\": \"sreportcomments\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    } //  { \"mandatory\": true, \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"ntechniquecode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\n    // { \"mandatory\": true, \"idsName\": \"IDS_INTERFACETYPE\", \"dataField\": \"ninterfacetypecode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n    ];\n    let resultCorrectionColumnList = [{\n      \"idsName\": \"IDS_ARNO\",\n      \"dataField\": \"sarno\",\n      \"width\": \"150px\"\n    }];\n    {\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && resultCorrectionColumnList.push({\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"width\": \"150px\"\n      });\n    }\n    resultCorrectionColumnList.push({\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_PARAMETERNAME\",\n      \"dataField\": \"sparametersynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_FINALRESULT\",\n      \"dataField\": \"sfinal\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_RESULTFLAG\",\n      \"dataField\": \"sgradename\",\n      \"width\": \"150px\",\n      \"fieldType\": \"gradeColumn\"\n    }, //Commented  by sonia ALPD-4275 for Unit Name NA Showing\n    //{ \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"150px\" },\n    {\n      \"idsName\": \"IDS_RESULTACCURACY\",\n      \"dataField\": \"sresultaccuracyname\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_LOWA\",\n      \"dataField\": \"smina\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_LOWB\",\n      \"dataField\": \"sminb\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_HIGHA\",\n      \"dataField\": \"smaxa\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_HIGHB\",\n      \"dataField\": \"smaxb\",\n      \"width\": \"150px\"\n    }\n    /* { \"idsName\": \"IDS_MINLOD\", \"dataField\": \"sminlod\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MAXLOD\", \"dataField\": \"smaxlod\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MINLOQ\", \"dataField\": \"sminloq\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MAXLOQ\", \"dataField\": \"smaxloq\", \"width\": \"150px\" }*/\n    );\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let filePath = \"\";\n\n    if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\n      filePath = reportUrl();\n    } else {\n      filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\n    } // let userStatusCSS = \"\";\n    // let activeIconCSS = \"fa fa-check\";\n    // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\n    //     userStatusCSS = \"outline-secondary\";\n    //     activeIconCSS = \"\";\n    // }\n    // else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\n    //     userStatusCSS = \"outline-success\";\n    // }\n    // else {\n    //     userStatusCSS = \"outline-Final\";\n    // }\n\n\n    const filterParam = {\n      inputListName: \"ReleaseHistory\",\n      selectedObject: \"selectedReleaseHistory\",\n      primaryKeyField: \"ncoaparentcode\",\n      fetchUrl: \"release/getReleaseHistory\",\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList,\n      changeList: [],\n      // ALPD-4229 (30-05-2024) Removed changeList value to make search filter work correctly\n      fecthInputObject: {\n        isSearch: true,\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        masterData: this.props.Login.masterData,\n        searchFieldList: this.searchFieldList,\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      }\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_REPORTTYPE\",\n      \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" : this.props.Login.masterData.ReportTypeValue ? this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\n    }];\n    const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"AddSamples\") && this.state.controlMap.get('AddSamples').ncontrolcode;\n    const preliminaryId = this.state.controlMap.has(\"PreliminaryReport\") && this.state.controlMap.get(\"PreliminaryReport\").ncontrolcode;\n    const previewId = this.state.controlMap.has(\"PreviewFinalReport\") && this.state.controlMap.get(\"PreviewFinalReport\").ncontrolcode;\n    const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\n    const regenerateId = this.state.controlMap.has(\"RegenerateRelease\") && this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\n    const viewreportId = this.state.controlMap.has(\"ViewReportRelease\") && this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\n    const sendtoportalId = this.state.controlMap.has(\"SendToPortal\") && this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"AppendSamples\") && this.state.controlMap.get(\"AppendSamples\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"RemoveSamples\") && this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\n    const patientinfoId = this.state.controlMap.has(\"PatientInfo\") && this.state.controlMap.get(\"PatientInfo\").ncontrolcode;\n    const ResultCorrectionId = this.state.controlMap.has(\"ResultCorrection\") && this.state.controlMap.get(\"ResultCorrection\").ncontrolcode;\n    const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n    const editcommentsId = this.state.controlMap.has(\"EditComment\") && this.state.controlMap.get(\"EditComment\").ncontrolcode;\n    const correctionId = this.state.controlMap.has(\"Correction\") && this.state.controlMap.get(\"Correction\").ncontrolcode;\n    const releaseHistoryId = this.state.controlMap.has(\"ReleaseHistory\") && this.state.controlMap.get(\"ReleaseHistory\").ncontrolcode;\n    const downloadVersionHist = this.state.controlMap.has(\"DownloadReleaseVersion\") && this.state.controlMap.get(\"DownloadReleaseVersion\").ncontrolcode;\n    const downloadReportId = this.state.controlMap.has(\"DownloadReport\") && this.state.controlMap.get(\"DownloadReport\").ncontrolcode;\n    const reportHistoryId = this.state.controlMap.has(\"ReportHistory\") && this.state.controlMap.get(\"ReportHistory\").ncontrolcode;\n    const releaseTestAttachmentId = this.state.controlMap.has(\"ReleaseTestAttachment\") && this.state.controlMap.get(\"ReleaseTestAttachment\").ncontrolcode;\n    const releaseTestCommentId = this.state.controlMap.has(\"ReleaseTestComment\") && this.state.controlMap.get(\"ReleaseTestComment\").ncontrolcode;\n    const releaseReportHistoryId = this.state.controlMap.has(\"ReleaseReportHistory\") && this.state.controlMap.get(\"ReleaseReportHistory\").ncontrolcode;\n    const generateid = this.state.controlMap.has(\"Generate\") && this.state.controlMap.get(\"Generate\").ncontrolcode;\n    const editReportTemplateId = this.state.controlMap.has(\"EditReportTemplate\") && this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode;\n    const deleteSampleId = this.props.Login.inputParam && this.state.controlMap.has(\"DeleteSamples\") && this.state.controlMap.get('DeleteSamples').ncontrolcode;\n    const releaseCommentId = this.props.Login.inputParam && this.state.controlMap.has(\"ReportComment\") && this.state.controlMap.get('ReportComment').ncontrolcode;\n    const editParam = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"ntransactionresultcode\",\n      operation: \"update\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editResultId,\n      masterData: this.props.Login.masterData\n    };\n    const ReleaseMasterDataParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\n      //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\n      masterData: { ...this.props.Login.masterData\n      },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].npreregno || \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n        //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO // 'ncoahistorycode':COAHistory\n\n      }\n    };\n    const ApprovedModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      Login: this.props.Login,\n      // selectedRecord: { ...this.props.Login.selectedRecord },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'isAddPopup': true,\n        'isPopup': true,\n        'ncoareporttype': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        // 'ncoareporttypecode': 1,//parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        // \"nsectioncode\" : this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n        \"nsectioncode\": -1,\n        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        })\n      },\n      DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\n      DynamicDefaultStructureItem: this.state.DynamicDefaultStructureItem,\n      extractedColumnList: this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\n    };\n    const RemoveModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'nneedremove': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\n        'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n        'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\n        ncontrolCode: deleteId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_REMOVESAMPLES\"\n        }),\n        spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\n        patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false\n      }\n    };\n    const EditModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'nneededit': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\n        'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n        'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\n        ncontrolCode: editId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_EDITSAMPLES\"\n        }),\n        nsectioncode: this.props.Login.masterData && this.props.Login.masterData.reportSectionCode || -1,\n        spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\n        patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false // nismultipleproject: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nismultipleproject) || transactionStatus.NO,\n\n      },\n      DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\n      DynamicDefaultStructureItem: this.state.DynamicDefaultStructureItem,\n      extractedColumnList: this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\n    };\n    const jsonParam = {\n      screenName: \"IDS_RELEASE\",\n      operation: \"update\",\n      primaryKeyName: \"ncoaparentcode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: editId,\n      selectedReleaseHistory: this.props.Login.masterData.selectedReleaseHistory\n    };\n    const ResultCorrectionParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'nneedremove': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\n        ncontrolCode: ResultCorrectionId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RESULTCORRECTION\"\n        })\n      }\n    };\n    const reportSubFields = [{\n      [designProperties.VALUE]: \"susername\",\n      [designProperties.LABEL]: \"IDS_USERNAME\"\n    }, {\n      [designProperties.VALUE]: \"sgenerateddate\",\n      [designProperties.LABEL]: \"IDS_GENERATEDDATE\"\n    }, {\n      [designProperties.VALUE]: \"sversionno\",\n      [designProperties.LABEL]: \"IDS_VERSIONNO\"\n    }, {\n      [designProperties.VALUE]: \"sreporttemplatename\",\n      [designProperties.LABEL]: \"IDS_REPORTTEMPLATE\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1316,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1388,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      percentage: true,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      primaryMinSize: 30,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1389,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView // listMasterShowIcon={1}\n    , {\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory || [],\n      selectedMaster: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory : undefined // selectedMaster={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory !== undefined ? [this.props.Login.masterData.selectedReleaseHistory] : undefined}\n      ,\n      primaryKeyField: \"ncoaparentcode\",\n      filterColumnData: this.props.filterTransactionList,\n      getMasterDetail: (ReleaseSample, status) => this.props.getReleasedDataDetails({ ...ReleaseMasterDataParam,\n        ...ReleaseSample\n      }, status) // getMasterDetail={this.props.getReleasedDataDetails}\n      // inputParam={{\n      // ...this.state.subSampleGetParam,\n      // searchTestRef: this.searchTestRef,\n      // searchSubSampleRef: this.searchSubSampleRef,\n      // testskip: this.state.testskip,\n      // subsampleskip: this.state.subsampleskip,\n      // resultDataState: this.state.resultDataState,\n      // activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\n      // }}\n      ,\n      selectionList: this.props.Login.masterData && this.props.Login.masterData.transactionStatusSelectionList && this.props.Login.masterData.transactionStatusSelectionList.length > 0 ? this.props.Login.masterData.transactionStatusSelectionList : [] // hideQuickSearch={true}\n      ,\n      selectionColorField: \"scolorhexcode\",\n      mainField: \"sreportno\",\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      selectedListName: \"selectedReleaseHistory\",\n      searchListName: \"searchedData\",\n      searchRef: this.searchRef,\n      objectName: \"releaseno\",\n      listName: \"IDS_RELEASENO\",\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: reportSubFields,\n      moreField: [],\n      needMultiSelect: this.props.Login.settings && this.props.Login.settings[50] ? parseInt(this.props.Login.settings[50]) === transactionStatus.YES ? true : false : false,\n      showStatusBlink: true,\n      callCloseFunction: true,\n      filterParam: filterParam,\n      subFieldsLabel: true,\n      handlePageChange: this.handleReportNoPageChange,\n      skip: this.state.skip,\n      take: this.state.take,\n      childTabsKey: [\"selectedReleaseHistory\", \"releaseno\", \"ReleasedSampleDetails\", \"ReleasedSubSampleDetails\", \"ReleasedTestDetails\"],\n      actionIcons: [{\n        title: this.props.intl.formatMessage({\n          id: \"IDS_EDITREPORTTEMPLATE\"\n        }),\n        controlname: \"faPencilAlt\",\n        objectName: \"editReportTemplate\",\n        hidden: this.state.userRoleControlRights.indexOf(editReportTemplateId) === -1,\n        onClick: this.editReportTemplate,\n        inputData: {\n          primaryKeyName: \"ncoaparentcode\",\n          operation: \"update\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo\n        }\n      }, {\n        title: this.props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        controlname: \"faTrashAlt\",\n        objectName: \"deleteSamples\",\n        hidden: this.state.userRoleControlRights.indexOf(deleteSampleId) === -1,\n        onClick: this.ConfirmDelete,\n        inputData: {\n          primaryKeyName: \"ncoaparentcode\",\n          operation: \"delete\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          controlId: deleteSampleId\n        }\n      }, {\n        title: this.props.intl.formatMessage({\n          id: \"IDS_RELEASECOMMENTS\"\n        }),\n        controlname: \"faComments\",\n        objectName: \"createReleaseComment\",\n        hidden: this.state.userRoleControlRights.indexOf(releaseCommentId) === -1,\n        onClick: this.ReleaseComments,\n        inputData: {\n          primaryKeyName: \"ncoaparentcode\",\n          operation: \"create\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          controlId: releaseCommentId\n        }\n      }],\n      needFilter: true,\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1499,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-icon-rounded btn-circle solid-blue\",\n        role: \"button\",\n        hidden: this.state.userRoleControlRights.indexOf(releaseId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ADD\"\n        }) // data-for=\"tooltip_list_wrap\"\n        ,\n        onClick: () => this.getApprovedSample(ApprovedModalParam, releaseId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1500,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1505,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        variant: \"link\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }) //   data-for=\"tooltip-common-wrap\"\n        ,\n        onClick: this.reloadData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1507,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        style: {\n          \"width\": \"0.6!important\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1511,\n          columnNumber: 45\n        }\n      }))),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ReleaseFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          ReportType: this.state.ReporttypeList || [],\n          ReportTypeValue: this.props.Login.masterData.ReportTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {} //   UserSection={this.state.UserSectionList || []}\n          //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\n          //   Test={this.state.TestList || []}\n          //  TestValue={this.props.Login.masterData.TestValue || []}\n          ,\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          userInfo: this.props.Login.userInfo,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1517,\n            columnNumber: 58\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1397,\n        columnNumber: 29\n      }\n    }), this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1559,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1560,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1561,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1570,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1582,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PATIENTINFO\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(patientinfoId) === -1,\n      onClick: () => this.patientInfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faInfoCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1594,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.NO &&\n    /*#__PURE__*/\n    // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1 //Modified by sonia on 11-06-2024 for JIRA ID:4122 Sample Count Validation\n      ,\n      onClick: () => this.props.validationforAppendSamples(EditModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1633,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1640,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.NO &&\n    /*#__PURE__*/\n    // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REMOVESAMPLES\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.props.getRemoveApprovedSample(RemoveModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1653,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1659,\n        columnNumber: 65\n      }\n    })),\n    /*#__PURE__*/\n    // (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES || \n    // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \n    // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT) &&\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RESULTCORRECTION\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(ResultCorrectionId) === -1,\n      onClick: () => this.props.getResultCorrectionData(ResultCorrectionParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1703,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ResultCorrection, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1709,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REPORTHISTORY\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(reportHistoryId) === -1,\n      onClick: () => this.reportHistoryInfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1735,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ReportHistory, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custon_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1741,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseReportHistoryId) === -1,\n      onClick: () => this.releaseReportHistory(releaseReportHistoryId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1764,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1771,\n        columnNumber: 61\n      }\n    })),\n    /*#__PURE__*/\n    // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \n    //  this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT ?\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REPORTCORRECTION\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(editcommentsId) === -1,\n      onClick: () => this.reportcomments('IDS_REPORTCORRECTION'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1777,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Comment, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1783,\n        columnNumber: 65\n      }\n    })) // : \"\"\n    , /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTATTACHMENT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseTestAttachmentId) === -1,\n      onClick: () => this.releaseTestAttachmentData(\"IDS_RELEASETESTATTACHMENT\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1793,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ReleaseTestAttachmentIcon, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1800,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTCOMMENT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseTestCommentId) === -1,\n      onClick: () => this.releaseTestAttachmentData(\"IDS_RELEASETESTCOMMENT\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1809,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ReleaseTestCommentIcon, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1816,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(CustomPopover, {\n      nav: true,\n      data: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(previewId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1841,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_PREVIEWREPORT\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.previewReport(previewId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1842,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(Preview, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1847,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(preliminaryId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1850,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : this.props.intl.formatMessage({\n          id: \"IDS_PRELIMINARYREPORT\"\n        }),\n        \"data-place\": \"left\" // data-tip={this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })} data-place=\"left\"\n        ,\n        onClick: () => this.preliminaryReport(preliminaryId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1851,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(PreliminaryReport, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1859,\n          columnNumber: 85\n        }\n      }), \" \", this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : this.props.intl.formatMessage({\n        id: \"IDS_PRELIMINARYREPORT\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(downloadId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1864,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        // className=\"btn btn-circle outline-grey ml-2\"\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_GENERATEFILE\"\n        }),\n        \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n        ,\n        onClick: () => {\n          this.downloadReleasedValidation(downloadId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1865,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(Generate, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1872,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(correctionId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1875,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_CORRECTION\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.CorrectionStatus(correctionId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1876,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(Correction, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1880,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(regenerateId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1883,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REGENERATEFILE\"\n        }),\n        \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"                                                                                    \n        ,\n        onClick: () => this.regenerateReleasedFile(regenerateId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1884,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(ReGenerate, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1889,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(downloadReportId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1892,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DOWNLOADFINALREPORT\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.downloadHistory(downloadReportId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1893,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(DownloadCertificate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1897,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_DOWNLOADFINALREPORT\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(generateid) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1901,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_PORTALSYNC\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.generatereport(generateid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1902,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1906,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_PORTALSYNC\"\n      }))), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES && /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list \",\n        hidden: this.state.userRoleControlRights.indexOf(sendtoportalId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1911,\n          columnNumber: 85\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\" //   data-for=\"tooltip_list_wrap\"\n        ,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_SENDTOPORTAL\"\n        }),\n        onClick: () => this.sendToPortal(sendtoportalId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1912,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1917,\n          columnNumber: 93\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_SENDTOPORTAL\"\n      })))),\n      Button: false,\n      hideIcon: true,\n      btnClasses: \"btn-circle btn_grey ml-2\",\n      textKey: \"value\",\n      icon: faChevronCircleDown // toolTip={this.props.intl.formatMessage({ id: \"IDS_CONFIGURE\" })}\n      ,\n      dynamicButton: value => this.actionMethod(value),\n      userRoleControlRights: this.state.userRoleControlRights,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1837,\n        columnNumber: 62\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1937,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n      needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n      data: this.state.data,\n      dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      expandNextData: this.expandNextData,\n      checkFunction: this.checkFunction,\n      checkFunction1: this.checkFunction1,\n      expandFunc: this.expandFunc //expandData={this.expandData}\n      ,\n      childDataResult: this.state.childDataResult,\n      subChildDataResult: this.state.subChildDataResult,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n      expandField: \"expanded\",\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '525px',\n      gridTop: '10px' //   isActionRequired={true}\n      //   isToolBarRequired={true}\n      //  isExpandRequired={true}\n      //   isDownloadRequired={true}\n      ,\n      isCheckBoxRequired: false,\n      isCollapseRequired: true,\n      selectedId: this.props.Login.selectedId,\n      hasChild: true,\n      hasSubChild: true,\n      childList: this.props.Login.masterData.ReleasedSubSampleDetails,\n      childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n      childMappingField: \"npreregno\",\n      subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n      ,\n      subChildList: this.props.Login.masterData.ReleasedTestDetails,\n      selectedsubcild: this.props.Login.selectedsubcild,\n      methodUrl: \"Release\",\n      headerSelectionChange: this.headerSelectionChange,\n      childHeaderSelectionChange: this.childHeaderSelectionChange,\n      childSelectionChange: this.childSelectionChange,\n      subChildSelectionChange: this.subChildSelectionChange,\n      subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n      selectionChange: this.selectionChange,\n      releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1949,\n        columnNumber: 45\n      }\n    })))) : \"\")))), this.state.showReport ? /*#__PURE__*/React.createElement(DocViewer, {\n      file: filePath,\n      showReport: this.state.showReport,\n      closeModal: this.closeDocModal,\n      type: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2016,\n        columnNumber: 25\n      }\n    }) : \"\", this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal || this.state.openModal,\n      size: this.props.Login.loadEsign || this.props.Login.loadEsignStateHandle ? \"lg\" : \"xl\",\n      closeModal: this.closeModal,\n      inputParam: this.props.Login.inputParam,\n      mandatoryFields: this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? mandatoryFields : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASECOMMENTS\"\n      }) ? mandatoryCommentsFields : \"\",\n      screenName: this.props.Login.loadEsignStateHandle ? this.props.intl.formatMessage({\n        id: \"IDS_ESIGN\"\n      }) : this.props.Login.isPatientDetails ? this.props.intl.formatMessage({\n        id: \"IDS_PATIENTINFO\"\n      }) : this.props.Login.isPatientReports ? this.props.intl.formatMessage({\n        id: \"IDS_REPORTHISTORY\"\n      }) : this.props.Login.isReleaseTestAttachment ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTATTACHMENT\"\n      }) : this.props.Login.isReleaseTestComment ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTCOMMENT\"\n      }) : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) : this.props.Login.screenName,\n      onSaveClick: this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? this.downloadReleasedFile : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASECOMMENTS\"\n      }) ? this.onSaveReleaseComments : this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle || this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }) ? this.onMandatoryCheck : this.onSaveModalClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {} //noSave={this.props.Login.openModalTitle=='versionhistory' ? true : false}\n      ,\n      hideSave: this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" || this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) || this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" ? true : this.props.Login.FilterQueryBuilder ? true : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? true : (this.props.Login.isReleaseTestAttachment || this.props.Login.isReleaseTestComment) && !this.props.Login.loadEsignStateHandle ? true : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASECOMMENTS\"\n      }) && this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length === 1 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED ? true : this.props.Login.hideSave,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2063,\n          columnNumber: 29\n        }\n      }) : this.props.Login.loadEsignStateHandle ? /*#__PURE__*/React.createElement(EsignStateHandle, {\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        childDataChange: this.childDataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2070,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) ? /*#__PURE__*/React.createElement(ReleaseReportHistory, {\n        operation: this.props.Login.operation // designData={this.props.Login.designData || {}}\n        ,\n        inputParam: this.props.Login.inputParam,\n        dataResult: this.props.Login.masterData //    this.props.Login.dataResult || [] :\n        //   this.props.Login.dataResult || {}}\n        //onChangeToggle={this.onChangeToggle}\n        ,\n        settings: this.props.Login.settings,\n        viewDownloadFile: this.viewDownloadFile,\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2077,\n          columnNumber: 37\n        }\n      }) : this.props.Login.screenName === \"IDS_PATIENTSEARCH\" ? /*#__PURE__*/React.createElement(FilterQueryBuilder, {\n        fields: this.props.Login.fields || {},\n        onChange: this.onChangeAwesomeQueryBuilder,\n        tree: this.props.Login.awesomeTree,\n        config: this.props.Login.awesomeConfig,\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        gridColumns: this.props.Login.gridColumns || [],\n        filterData: this.props.Login.lstPatient,\n        onRowClick: this.handleKendoRowClick,\n        handleExecuteClick: this.handleExecuteClick,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2091,\n          columnNumber: 41\n        }\n      }) : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? /*#__PURE__*/React.createElement(VersionHistGrid, {\n        versionHistory: this.props.Login.masterData.versionHistory,\n        isExportExcelRequired: false,\n        dataState: this.state.versionHistoryDataState,\n        dataResult: process(this.props.Login.masterData && this.props.Login.masterData.versionHistory || [], this.state.versionHistoryDataState),\n        dataStateChange: this.versionHistoryDataStateChange,\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        viewDownloadFile: this.viewDownloadFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2106,\n          columnNumber: 45\n        }\n      }) : this.props.Login.isPatientDetails ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length > 0 ? this.props.Login.masterData.ReleasedSampleDetails[this.props.Login.masterData.ReleasedSampleDetails.length - 1] : {},\n        SingleItem: this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails ? this.state.SingleItem : [],\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2119,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(SampleGridTab, {\n        userInfo: this.props.Login.masterData.userInfo || {},\n        GridData: this.props.Login.masterData.ReleasedSampleDetails || [],\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleGridDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.SingleItem) || [],\n        detailedFieldList: [],\n        primaryKeyField: \"npreregno\",\n        expandField: \"expanded\",\n        screenName: \"IDS_PATIENTINFO\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2128,\n          columnNumber: 49\n        }\n      }) : this.props.Login.isPatientReports && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid // key=\"nreleaseoutsourceattachcode\"\n      , {\n        primaryKeyField: \"nreleaseoutsourceattachcode\",\n        data: this.props.Login.masterData.PatientReports || [],\n        dataResult: process(this.props.Login.masterData.PatientReports && this.props.Login.masterData.PatientReports || [], this.state.outsourceFileDataState),\n        dataState: this.state.outsourceFileDataState,\n        isExportExcelRequired: false,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.fieldsForReleasedReportGrid,\n        selectedId: this.props.Login.selectedId,\n        pageable: true,\n        dataStateChange: this.outsourceFileDataStateChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'PatientReports',\n        viewDownloadFile: this.viewSelectedReport,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2142,\n          columnNumber: 53\n        }\n      }) : this.props.Login.isReleaseTestAttachment && this.props.Login.openModal ? /*#__PURE__*/React.createElement(ReleaseTestAttachment, {\n        ReleaseTestAttachmentDetails: this.props.Login.masterData.ReleaseTestAttachmentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestAttachment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_RELEASETESTATTACHMENT\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        isDataGrid: this.props.Login.isDataGrid,\n        selectedRecord: this.state.selectedRecord,\n        operation: this.props.Login.operation,\n        childDataChange: this.childDataChange,\n        deleteRecord: this.deleteReleaseTestAttachment,\n        dataState: this.state.testAttachmentDataState,\n        dataStateChange: this.testAttachmentDataStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2163,\n          columnNumber: 57\n        }\n      }) : this.props.Login.isAddReleaseTestAttachment ? /*#__PURE__*/React.createElement(AddReleaseTestAttachment, {\n        ReleaseTestAttachmentDetails: this.props.Login.masterData.ReleaseTestAttachmentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestAttachment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"ReleaseTestAttachment\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        isDataGrid: this.props.Login.isDataGrid,\n        selectedRecord: this.state.selectedRecord,\n        operation: this.props.Login.operation,\n        childDataChange: this.childDataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2189,\n          columnNumber: 61\n        }\n      }) : this.props.Login.isReleaseTestComment && this.props.Login.openModal ? /*#__PURE__*/React.createElement(ReleaseTestComment, {\n        ReleaseTestCommentDetails: this.props.Login.masterData.ReleaseTestCommentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestComment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_RELEASETESTCOMMENT\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        CommentSubType: this.props.Login.masterData.CommentSubType,\n        deleteRecord: this.deleteReleaseTestComment,\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testCommentDataStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2212,\n          columnNumber: 65\n        }\n      }) : this.props.Login.isAddReleaseTestComment ? /*#__PURE__*/React.createElement(AddReleaseTestComment, {\n        ReleaseTestCommentDetails: this.props.Login.masterData.ReleaseTestCommentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestComment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"ReleaseTestComment\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        CommentSubType: this.props.Login.masterData.CommentSubType,\n        selectedRecord: this.state.selectedRecord,\n        childDataChange: this.childDataChange,\n        operation: this.props.Login.operation,\n        SampleTestComments: this.props.Login.SampleTestComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2235,\n          columnNumber: 69\n        }\n      }) : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid, {\n        key: \"reportinforeleasecode\",\n        primaryKeyField: \"nreportinforeleasecode\",\n        data: this.props.Login.masterData.reportinforelease || [],\n        dataResult: process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState),\n        dataState: this.state.reportInfoDataState //dataResult={this.props.selectedWorklist || []}\n        //expandField=\"expanded\"\n        ,\n        isExportExcelRequired: false //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\n        ,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.feildsForGrid,\n        detailedFieldList: this.props.detailedFieldList,\n        editParam: editReportParam,\n        selectedId: this.props.Login.selectedId,\n        fetchRecord: this.props.fetchReportInfoReleaseById,\n        pageable: true,\n        dataStateChange: this.reportInfoDataChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'ReportComment' // actionIcons={[{\n        //     title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),\n        //     controlname: \"faEye\",\n        //     objectName: \"ExceptionLogs\",\n        //     hidden: -1 === -1,\n        //    onClick: (viewSample) => this.props.viewSample(viewSample)\n        // }]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2259,\n          columnNumber: 73\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2292,\n          columnNumber: 78\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2293,\n          columnNumber: 82\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_DESCRIPTION\"\n        }),\n        name: \"sreportcomments\",\n        type: \"text\",\n        onChange: event => this.onInputOnChange(event),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_DESCRIPTION\"\n        }),\n        value: this.state.selectedRecord[\"sreportcomments\"] ? this.state.selectedRecord[\"sreportcomments\"] : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: 255,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2294,\n          columnNumber: 86\n        }\n      }))) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASECOMMENTS\"\n      }) ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2308,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2309,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(FormTextarea, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_COMMENTS\"\n        }),\n        name: \"sreleasecomments\",\n        type: \"text\",\n        onChange: event => this.onInputOnChange(event),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_COMMENTS\"\n        }),\n        value: this.state.selectedRecord[\"sreleasecomments\"] ? this.state.selectedRecord[\"sreleasecomments\"] : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: 500,\n        readOnly: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length === 1 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2310,\n          columnNumber: 85\n        }\n      }))) : this.props.Login.FilterQueryBuilder ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2329,\n          columnNumber: 74\n        }\n      }, /*#__PURE__*/React.createElement(FilterQueryBuilder, {\n        fields: this.props.Login.fields || {},\n        onChange: this.onComboChangeAwesomeQueryBuilder,\n        tree: this.props.Login.awesomeTree,\n        config: this.props.Login.awesomeConfig,\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        gridColumns: [],\n        filterData: this.props.Login.lstPatient || [] //onRowClick={this.handleKendoRowClick}\n        //handleExecuteClick={this.handleExecuteClick}\n        ,\n        userInfo: this.props.Login.userInfo,\n        static: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2330,\n          columnNumber: 76\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2346,\n          columnNumber: 74\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-user btn-primary-blue\",\n        onClick: () => this.handleExecuteClicks(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2347,\n          columnNumber: 76\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_EXECUTE\",\n        defaultMessage: \"Execute\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2349,\n          columnNumber: 80\n        }\n      }))))) : /*#__PURE__*/React.createElement(React.Fragment, null, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && // //  this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\n      // //  (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\n      // this.props.Login.masterData.realReportTypeValue\n      // && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\n      //     this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\n      // //this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\n      this.props.Login.isDeletePopup !== true && //this.props.Login.isComboCheck !== true &&\n      //this.props.Login.isEditPopup === true &&\n      this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE &&\n      /*#__PURE__*/\n      // this.state.DynamicReportFilterTypeItem && this.state.DynamicReportFilterTypeItem.length>0 &&\n      React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2377,\n          columnNumber: 87\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2378,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-user btn-primary-blue\",\n        onClick: () => this.openFilterQuery(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2379,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2380,\n          columnNumber: 97\n        }\n      }), \" \"), !this.props.Login.ismandatory && /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-user btn-primary-blue\",\n        onClick: () => this.handleExecuteClicks(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2384,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2385,\n          columnNumber: 97\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_CLEARFILTER\",\n        defaultMessage: \"Clear Filter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2386,\n          columnNumber: 97\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2391,\n          columnNumber: 97\n        }\n      }, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES //  || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\n      //   this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE\n      && this.props.Login.isDeletePopup !== true && this.props.Login.isEditPopup !== true && this.props.Login.isComboCheck !== true && /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nsectioncode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_SECTION\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.sectionList,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] !== undefined ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\" : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true // isDisabled={this.props.Login.isEditPopup === true ? true : false}\n        ,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nsectioncode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2402,\n          columnNumber: 94\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2420,\n          columnNumber: 93\n        }\n      }, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_EDITSAMPLES\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REMOVESAMPLES\"\n      }) && // ALPD-4053 (15-05-2024) Added this condition for issue in delete sample popup\n      this.props.Login.isEditPopup !== true && /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nreporttemplatecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_REPORTTEMPLATE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.masterData.reportTemplateList || [],\n        value: this.state.selectedRecord[\"nreporttemplatecode\"] || \"\",\n        isMandatory: true,\n        isMulti: false,\n        isClearable: false,\n        isSearchable: true // isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\n        ,\n        closeMenuOnSelect: true,\n        onChange: event => this.onComboChange(event, \"nreporttemplatecode\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2424,\n          columnNumber: 105\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2440,\n          columnNumber: 93\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2441,\n          columnNumber: 93\n        }\n      }, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_EDITSAMPLES\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REMOVESAMPLES\"\n      }) && this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nneedreleaseformattoggle && this.props.Login.masterData.realReportTypeValue.nneedreleaseformattoggle === transactionStatus.YES && /*#__PURE__*/React.createElement(CustomSwitch, {\n        name: 'nisarnowiserelease',\n        type: \"switch\",\n        label: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES ? this.props.intl.formatMessage({\n          id: \"IDS_ENABLEFORMULTISAMPLERELEASE\"\n        }) : this.props.intl.formatMessage({\n          id: \"IDS_ENABLEFORSINGLESAMPLERELEASE\"\n        }),\n        placeholder: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES ? this.props.intl.formatMessage({\n          id: \"IDS_ENABLEFORMULTISAMPLERELEASE\"\n        }) : this.props.intl.formatMessage({\n          id: \"IDS_ENABLEFORSINGLESAMPLERELEASE\"\n        }),\n        isMandatory: false,\n        required: false,\n        onChange: event => this.onInputOnChange(event) // defaultValue ={props.selectedRecord[item.controlName] === 3 ? true :false }\n        ,\n        checked: this.state.selectedRecord ? this.state.selectedRecord[\"nisarnowiserelease\"] === 3 ? true : false : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2446,\n          columnNumber: 97\n        }\n      })))) // <Col md={4}>\n      //     <FormSelectSearch\n      //         name={\"nprojecttypecode\"}\n      //         formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\n      //         placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n      //         options={this.props.Login.ProjectTypeList}\n      //         value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\n      //         defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\n      //         isMandatory={true}\n      //         isMulti={false}\n      //         isSearchable={true}\n      //         //  isDisabled={this.props.Login.isEditPopup === true ? true : false}\n      //         closeMenuOnSelect={true}\n      //         alphabeticalSort={true}\n      //         onChange={(event) => this.onComboChange(event, 'nprojecttypecode', 1)}\n      //     />\n      // </Col>\n      , /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2563,\n          columnNumber: 82\n        }\n      }, this.props.Login.ReportmodalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n        modalShow: this.props.Login.ReportmodalShow,\n        closeModal: this.closeModalShow,\n        onSaveClick: this.onSaveModalClick,\n        validateEsign: this.validateEsign,\n        masterStatus: this.props.Login.masterStatus //  mandatoryFields={mandatoryFields}\n        ,\n        updateStore: this.props.updateStore,\n        selectedRecord: this.state.selectedRecord || {},\n        modalTitle: this.props.Login.modalTitle,\n        modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n          operation: this.props.Login.operation,\n          onInputOnChange: this.onEsignInputOnChange,\n          inputParam: this.props.Login.inputParam,\n          selectedRecord: this.state.selectedRecord || {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2579,\n            columnNumber: 101\n          }\n        }) : /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2587,\n            columnNumber: 101\n          }\n        }, /*#__PURE__*/React.createElement(FormTextarea, {\n          label: this.props.intl.formatMessage({\n            id: this.props.Login.masterData.selectedComment.sreportfieldname\n          }),\n          name: \"sreportfieldvalue\",\n          type: \"text\",\n          onChange: this.onInputChange,\n          placeholder: this.props.intl.formatMessage({\n            id: this.props.Login.masterData.selectedComment.sreportfieldname\n          }),\n          value: this.state.selectedComment ? this.state.selectedComment.sreportfieldvalue : \"\",\n          isMandatory: true,\n          required: true,\n          maxLength: \"500\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2589,\n            columnNumber: 105\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2567,\n          columnNumber: 89\n        }\n      }) : \"\"), this.props.Login.isCorrectionNeed && this.props.Login.isCorrectionNeed ? /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"ntransactionresultcode\",\n        selectedId: this.props.Login.selectedId,\n        data: this.props.Login.masterData.ResultCorrection,\n        dataResult: process(this.props.Login.masterData.ResultCorrection && this.props.Login.masterData.ResultCorrection || [], this.state.correctionDataState),\n        dataState: this.state.correctionDataState,\n        dataStateChange: this.correctionDataStateChange,\n        extractedColumnList: resultCorrectionColumnList,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        methodUrl: \"Result\",\n        userInfo: this.props.Login.userInfo,\n        fetchRecord: this.props.fetchParameterById,\n        deleteRecord: this.deleteRecord //  reloadData={this.reloadData}\n        //  addRecord={() => this.props.openProductCategoryModal(\"IDS_PRODUCTCATEGORY\", addId,this.props.Login.settings)}\n        ,\n        editParam: editParam //  deleteParam={deleteParam}\n        ,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        isActionRequired: true //  isToolBarRequired={true}\n        ,\n        pageable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2611,\n          columnNumber: 85\n        }\n      }) : this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENT\" && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" ? /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n        needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        data: this.state.data,\n        dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        dataState: this.state.dataState,\n        dataStateChange: this.dataStateChange,\n        expandNextData: this.expandNextData,\n        checkFunction: this.checkFunction,\n        checkFunction1: this.checkFunction1,\n        expandFunc: this.expandFunc,\n        childDataResult: this.state.childDataResult,\n        subChildDataResult: this.state.subChildDataResult,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        expandField: \"expanded\",\n        handleExpandChange: this.handleExpandChange,\n        childHandleExpandChange: this.childHandleExpandChange,\n        isCheckBoxRequired: true,\n        reloadData: this.reloadData,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        pageable: true,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        gridTop: '10px' // isActionRequired={true}\n        //   isToolBarRequired={true}\n        //  isExpandRequired={true}\n        //   isDownloadRequired={true}\n        ,\n        isCollapseRequired: true,\n        selectedId: this.props.Login.selectedId,\n        hasChild: true,\n        hasSubChild: true,\n        childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleaseSubSample,\n        childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n        childMappingField: \"npreregno\",\n        subChildMappingField: \"ntransactionsamplecode\",\n        subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleaseTest,\n        selectedsubcild: this.props.Login.selectedsubcild,\n        methodUrl: \"Release\",\n        headerSelectionChange: this.headerSelectionChange,\n        childHeaderSelectionChange: this.childHeaderSelectionChange,\n        childSelectAll: this.props.Login.childSelectAll,\n        childSelectionChange: this.childSelectionChange,\n        subChildSelectionChange: this.subChildSelectionChange,\n        subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n        subChildSelectAll: this.props.Login.subChildSelectAll,\n        selectionChange: this.selectionChange,\n        selectAll: this.props.Login.selectAll,\n        releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2639,\n          columnNumber: 89\n        }\n      }) : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid, {\n        key: \"reportinforeleasecode\",\n        primaryKeyField: \"nreportinforeleasecode\",\n        data: this.props.Login.masterData.reportinforelease || [],\n        dataResult: process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState),\n        dataState: this.state.reportInfoDataState //dataResult={this.props.selectedWorklist || []}\n        //expandField=\"expanded\"\n        ,\n        isExportExcelRequired: false //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\n        ,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.feildsForGrid,\n        detailedFieldList: this.props.detailedFieldList,\n        editParam: editParam,\n        fetchRecord: this.props.fetchReportInfoReleaseById,\n        pageable: true,\n        dataStateChange: this.reportInfoDataChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'ReportComment',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2701,\n          columnNumber: 93\n        }\n      }) : //     <DataGridWithMultipleGrid\n      //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\n      //     data={this.state.data}\n      //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\n      //     dataState={this.state.dataState}\n      //     dataStateChange={this.dataStateChange}\n      //     expandNextData={this.expandNextData}\n      //     checkFunction={this.checkFunction}\n      //     checkFunction1={this.checkFunction1}\n      //     expandFunc={this.expandFunc}\n      //     childDataResult={this.state.childDataResult}\n      //     subChildDataResult={this.state.subChildDataResult}\n      //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\n      //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\n      //     expandField=\"expanded\"\n      //     handleExpandChange={this.handleExpandChange}\n      //     childHandleExpandChange={this.childHandleExpandChange}\n      //     isCheckBoxRequired={true}\n      //     reloadData={this.reloadData}\n      //     controlMap={this.state.controlMap}\n      //     userRoleControlRights={this.state.userRoleControlRights}\n      //     inputParam={this.props.Login.inputParam}\n      //     userInfo={this.props.Login.userInfo}\n      //     pageable={true}\n      //     scrollable={'scrollable'}\n      //     gridHeight={'600px'}\n      //     gridTop={'10px'}\n      //    // isActionRequired={true}\n      //     //   isToolBarRequired={true}\n      //     //  isExpandRequired={true}\n      //     //   isDownloadRequired={true}\n      //     isCollapseRequired={true}\n      //     selectedId={this.props.Login.selectedId}\n      //     hasChild={true}\n      //     hasSubChild={true}\n      //     childList={\n      //         this.props.Login.masterData.searchedData2 ||\n      //         this.props.Login.masterData.ReleaseSubSample\n      //     }\n      //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\n      //     childMappingField={\"npreregno\"}\n      //     subChildMappingField={\"ntransactionsamplecode\"}\n      //     subChildList={\n      //         this.props.Login.masterData.searchedData3 ||\n      //         this.props.Login.masterData.ReleaseTest\n      //     }\n      //     selectedsubcild={this.props.Login.selectedsubcild}\n      //     methodUrl={\"Release\"}\n      //     headerSelectionChange={this.headerSelectionChange}\n      //     childHeaderSelectionChange={this.childHeaderSelectionChange}\n      //     childSelectAll={this.props.Login.childSelectAll}\n      //     childSelectionChange={this.childSelectionChange}\n      //     subChildSelectionChange={this.subChildSelectionChange}\n      //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\n      //     subChildSelectAll={this.props.Login.subChildSelectAll}\n      //     selectionChange={this.selectionChange}\n      //     selectAll={this.props.Login.selectAll}\n      //     releaseRecord={this.onSaveModalClick}\n      //    // viewDownloadFile={this.viewDownloadFile}\n      // />\n      \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2025,\n        columnNumber: 21\n      }\n    }), this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalResultClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus //  mandatoryFields={mandatoryFields}\n      ,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onEsignInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2898,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_REPORTTEMPLATE\"\n      }) ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nreporttemplatecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_REPORTTEMPLATE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.masterData.reportTemplateList || [],\n        value: this.state.selectedRecord[\"nreporttemplatecode\"] || \"\",\n        isMandatory: true,\n        isMulti: false,\n        isClearable: false,\n        isSearchable: true // isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\n        ,\n        closeMenuOnSelect: true,\n        onChange: event => this.onComboChange(event, \"nreporttemplatecode\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2905,\n          columnNumber: 33\n        }\n      }) : this.state.selectedRecord.ReleaseParameter && this.state.selectedRecord.ReleaseParameter.map((parameterResult, index) => {\n        return /*#__PURE__*/React.createElement(ResultEntryForm, {\n          index: index,\n          ResultParameter: [...this.state.selectedRecord.ReleaseParameter],\n          predefinedValues: this.props.Login.masterData.PredefinedValues,\n          defaultPredefinedValues: this.props.Login.masterData.PredefinedValues,\n          gradeValues: this.props.Login.masterData.GradeValues || [],\n          selectedNumericData: this.props.Login.masterData.selectedNumericData,\n          selectedResultGrade: this.state.selectedRecord.selectedResultGrade || [],\n          paremterResultcode: this.props.Login.masterData.paremterResultcode || [],\n          parameterResults: parameterResult || [],\n          Login: this.props.Login,\n          handleClose: this.handleClose,\n          onSaveClick: this.onSaveClick,\n          onResultInputChange: this.onResultInputChange //onGradeEvent={this.onGradeEvent}\n          ,\n          getFormula: this.getFormula,\n          onDropTestFile: this.onDropTestFile,\n          onKeyPress: this.onKeyPress //deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\n          ,\n          viewAdditionalInfo: this.viewAdditionalInfo,\n          needSubSample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          needdelete: true,\n          needmandatory: true,\n          ResultAccuracy: this.props.Login.masterData.ResultAccuracy || [],\n          Unit: this.props.Login.masterData.Unit || [],\n          formFields: this.props.Login.masterData.formFields || [] //intl={this.props.intl}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2922,\n            columnNumber: 44\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2886,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  queryBuilderfillingColumns(data) {\n    // const temparray1 = [\n    //(this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\n    //this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\n    ////{ \"idsName\": \"IDS_SECTION\", \"dataField\": \"s.nsectioncode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" },\n    // { \"idsName\": \"IDS_TEST\", \"dataField\": \"rt.ntestgrouptestcode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" }];\n    const temparray2 = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.RECORDTYPE] === 'static' ? \"(jsondata->>'\" + option[designProperties.PRIMARYKEY] + \"')::int\" : option[designProperties.LISTITEM] === 'combo' ? \"(jsondata->'\" + option[designProperties.VALUE] + \"'->>'\" + option[designProperties.PRIMARYKEY] + \"')::int\" : option[designProperties.LISTITEM] === 'Numeric' ? \"(jsondata->>'\" + option[designProperties.VALUE] + \"')::int\" : \"(jsondata->>'\" + option[designProperties.VALUE] + \"')\",\n        \"width\": \"200px\",\n        \"filterinputtype\": option[designProperties.LISTITEM]\n      };\n    });\n    const newArray = [...temparray2];\n    return newArray;\n  }\n\n  //     onSaveModalClick = () => {\n  //         //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\n  //         if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\n  //             this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\n  //         }\n  //         else {\n  //             let ntransactionsamplecode = \"\"\n  //             let ntransactiontestcode = \"\"\n  //             let npreregno = \"\"\n  //             if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n  //                 if (this.state.npreregno && this.state.npreregno.length > 0) {\n  //                     let sample = this.state.npreregno.filter((c, index) => {\n  //                         return this.state.npreregno.indexOf(c) === index;\n  //                     });\n  //                     let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n  //                         return this.state.ntransactionsamplecode.indexOf(c) === index;\n  //                     });\n  //                     let test = this.state.ntransactiontestcode.filter((c, index) => {\n  //                         return this.state.ntransactiontestcode.indexOf(c) === index;\n  //                     });\n  //                     npreregno = sample.map(x => x).join(\",\")\n  //                     ntransactionsamplecode = subsample.map(x => x).join(\",\")\n  //                     ntransactiontestcode = test.map(x => x).join(\",\")\n  //                     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\n  //                     const inputParam = {\n  //                         inputData: {\n  //                             change: this.props.Login.change,\n  //                             npreregno: String(npreregno),\n  //                             ntransactionsamplecode: ntransactionsamplecode,\n  //                             ntransactiontestcode: ntransactiontestcode,\n  //                             ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\n  //                                 && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\n  //                             url: this.props.Login.settings[24],\n  //                             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n  //                             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n  //                             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n  //                             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n  //                             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n  //                             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n  //                             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n  //                             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n  //                             dfrom: obj.fromDate,\n  //                             dto: obj.toDate,\n  //                             isAddPopup: false,\n  //                             isEditPopup: false,\n  //                             nflag: 2,\n  //                             userinfo: this.props.Login.userInfo,\n  //                             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\n  //                             doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\n  //                         },\n  //                         userinfo: this.props.Login.userInfo,\n  //                         methodUrl: \"Release\",\n  //                         classUrl: \"release\",\n  //                         operation: this.props.Login.operation\n  //                     }\n  //                     const masterData = this.props.Login.masterData;\n  //                     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n  //                         const updateInfo = {\n  //                             typeName: DEFAULT_RETURN,\n  //                             data: {\n  //                                 loadEsign: true,\n  //                                 screenData: { inputParam, masterData },\n  //                                 operation: this.props.Login.operation,\n  //                                 screenName: this.props.Login.screenName,\n  //                                 ncontrolcode:this.props.Login.ncontrolCode\n  //                             }\n  //                         }\n  //                         this.props.updateStore(updateInfo);\n  //                     }\n  //                     else {\n  //                         if (this.props.Login.isDeletePopup) {\n  //                             this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\n  //                         }\n  //                         else if (this.props.Login.isEditPopup) {\n  // <<<<<<< .mine\n  //                             this.props.UpdateApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\n  // ||||||| .r76787\n  //                             this.props.UpdateApprovedSample (this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)  \n  // =======\n  //                             this.props.UpdateApprovedSample (inputParam.inputData, this.props.Login.masterData)  \n  // >>>>>>> .r76792\n  //                         }\n  //                         else {\n  //                             this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData)\n  //                         }\n  //                     }\n  //                 }\n  //                 else {\n  //                     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\n  //                 }\n  //             }\n  //             else {\n  //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\n  //             }\n  //         }\n  //     }\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      SampleGridItem,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      ReporttypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      //UserSectionList, TestList,\n      SingleItem,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicSubSampleGridItem,\n      stateDynamicDesign,\n      checkedflag,\n      dataState,\n      selectedComment,\n      isInitialRender,\n      DynamicReportFilterTypeItem,\n      DynamicDefaultStructureItem\n    } = this.state;\n    let bool = false;\n    let reportFilePath = \"\";\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      reportFilePath = this.props.Login.masterData.ReportPDFFile;\n      bool = true;\n    } // else {\n    //     if (this.state.dataState === undefined) {\n    //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\n    //     }\n    //     //  const npreregno =  [];\n    //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n    //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\n      checkedflag = this.props.Login.checkedflag;\n      bool = true;\n    }\n\n    if (this.props.Login.isInitialRender !== previousProps.Login.isInitialRender) {\n      isInitialRender = this.props.Login.isInitialRender;\n      bool = true;\n    } // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\n    //     npreregno = this.props.Login.npreregno\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false); // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\n      // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \n\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      ReporttypeList = ReporttypeListMap.get(\"OptionList\"); // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\n      //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\n\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\"); //  UserSectionList = UserSectionListMap.get(\"OptionList\");\n      //   TestList = TestListMap.get(\"OptionList\");\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.selectedComment !== previousProps.Login.masterData.selectedComment) {\n      selectedComment = this.props.Login.masterData.selectedComment;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\n      DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      DynamicReportFilterTypeItem = dynamicColumn.samplefiltertypefields ? dynamicColumn.samplefiltertypefields : [];\n      DynamicDefaultStructureItem = dynamicColumn.defaultstructure ? dynamicColumn.defaultstructure : [];\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.slideOutClose !== previousProps.Login.slideOutClose) {\n      bool = true;\n    }\n\n    if (this.props.Login.isClear !== previousProps.Login.isClear) {\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      let allData = {\n        userRoleControlRights,\n        controlMap,\n        SampleGridItem,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        ReporttypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        selectedComment,\n        //UserSectionList, TestList,\n        SingleItem,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicSubSampleGridItem,\n        stateDynamicDesign,\n        checkedflag,\n        isInitialRender,\n        data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n        dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        reportFilePath,\n        DynamicReportFilterTypeItem,\n        DynamicDefaultStructureItem //npreregno: this.state.npreregno || [], ntransactionsamplecode: this.state.ntransactionsamplecode || [],\n        //ntransactiontestcode: this.state.ntransactiontestcode || []\n\n      }; // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\n\n      if (this.props.Login.slideOutClose && this.props.Login.slideOutClose === true && this.props.Login.isClear !== false // && (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true\n      // || this.props.Login.isEditPopup && this.props.Login.isEditPopup === true\n      // || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true)\n      ) {\n        this.setState({ ...allData,\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      } else {\n        this.setState(allData);\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.Login.openModal && (this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle) && nextState.isInitialRender === false && nextState.selectedRecord !== this.state.selectedRecord) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData,\n  getApprovedRecordsAsDraft,\n  getReleasedRegistrationType,\n  getReleasedRegistrationSubType,\n  getReleasedFilterStatus,\n  getReleasedApprovalVersion,\n  getReleasedFilterBasedTest,\n  getReleasedSample,\n  getApprovedSample,\n  //, generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\n  previewAndFinalReport,\n  getRemoveApprovedSample,\n  getDeleteApprovedSample,\n  UpdateApprovedSample,\n  getEditApprovedSample,\n  getSectionForSectionWise,\n  getreportcomments,\n  fetchReportInfoReleaseById,\n  UpdateReportComments,\n  generateReleasedReport,\n  getReleasedDataDetails,\n  getApprovedProjectByProjectType,\n  getApprovedProjectType,\n  getReportForPortal,\n  getResultCorrectionData,\n  //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\n  getSectionForSectionWise,\n  fetchParameterById,\n  updateCorrectionStatus,\n  validateEsignforRelease,\n  viewReportHistory,\n  viewAttachment,\n  versionHistory,\n  downloadVersionReport,\n  viewReleaseTestAttachment,\n  downloadHistory,\n  getPatientFilterExecuteData,\n  rearrangeDateFormatforKendoDataTool,\n  getPatientWiseSample,\n  preliminaryReport,\n  releaseReportHistory,\n  onSaveReleaseTestAttachment,\n  onDeleteReleaseTestAttachment,\n  onSaveReleaseTestComment,\n  onDeleteReleaseTestComment,\n  generatereport,\n  editReportTemplate,\n  SaveReportTemplate,\n  deleteSamples,\n  filterTransactionList,\n  validationforAppendSamples,\n  SaveReleaseComment,\n  openReleaseComments\n})(injectIntl(Release));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/release/Release.jsx"],"names":["React","Row","Col","Card","Nav","Button","ListGroup","toast","process","Utils","QbUtils","connect","injectIntl","FormattedMessage","callService","crudMaster","updateStore","validateEsignCredential","filterColumnData","getApprovedRecordsAsDraft","getReleasedRegistrationType","getReleasedRegistrationSubType","getReleasedFilterStatus","getReleasedApprovalVersion","getReleasedFilterBasedTest","getReleasedSample","generateReleasedReport","previewAndFinalReport","getRemoveApprovedSample","getDeleteApprovedSample","UpdateApprovedSample","getEditApprovedSample","getSectionForSectionWise","getreportcomments","fetchReportInfoReleaseById","UpdateReportComments","getApprovedSample","getReleasedDataDetails","getApprovedProjectByProjectType","getApprovedProjectType","getReportForPortal","getResultCorrectionData","fetchParameterById","updateCorrectionStatus","validateEsignforRelease","viewReportHistory","viewAttachment","versionHistory","downloadVersionReport","viewReleaseTestAttachment","downloadHistory","getPatientFilterExecuteData","rearrangeDateFormatforKendoDataTool","getPatientWiseSample","preliminaryReport","releaseReportHistory","onSaveReleaseTestAttachment","onDeleteReleaseTestAttachment","onSaveReleaseTestComment","onDeleteReleaseTestComment","generatereport","editReportTemplate","SaveReportTemplate","deleteSamples","filterTransactionList","validationforAppendSamples","SaveReleaseComment","openReleaseComments","ListMaster","getControlMap","convertDateValuetoString","rearrangeDateFormat","constructOptionList","showEsign","Lims_JSON_stringify","create_UUID","onSaveMandatoryValidation","checkFilterIsEmptyQueryBuilder","removeSpaceFromFirst","sortData","SampleType","designProperties","ResultEntry","reportCOAType","transactionStatus","attachmentType","DataGridWithMultipleGrid","DataGrid","Affix","DEFAULT_RETURN","BreadcrumbComponent","ReleaseFilter","SlideOutModal","Esign","EsignStateHandle","ContentPanel","ProductList","faEdit","faPlus","faExpandArrowsAlt","faEye","faInfoCircle","faPencilAlt","faRecycle","faStore","faTrash","faFilePen","faFileCode","faDownload","faFilePdf","faHistory","faFile","faComments","faPaperclip","faCalculator","faSync","faSearch","faTimes","FormSelectSearch","FontAwesomeIcon","fileViewUrl","reportUrl","DocViewer","REPORTTYPE","SampleInfoView","FormInput","FormTextarea","ModalShow","ResultEntryForm","numberConversion","numericGrade","ReleaseTestAttachment","ReleaseTestComment","VersionHistGrid","FilterQueryBuilder","ConfirmMessage","ReleaseReportHistory","AddReleaseTestAttachment","AddReleaseTestComment","TransactionListMasterJsonView","SplitterLayout","ListWrapper","SampleGridTab","CustomSwitch","faTrashAlt","faThumbsUp","faChevronCircleDown","CustomPopover","mapStateToProps","state","Login","Release","Component","constructor","props","sidebarExpandCollapse","setState","sidebarview","dataStateChange","event","dataState","dataResult","data","outsourceFileDataStateChange","outsourceFileDataState","reportInfoDataChange","reportInfoDataState","correctionDataStateChange","correctionDataState","versionHistoryDataStateChange","versionHistoryDataState","preliminaryHistoryDataStateChange","preliminaryHistoryDataState","testAttachmentDataStateChange","testAttachmentDataState","testCommentDataStateChange","testCommentDataState","sampleGridDataStateChange","sampleGridDataState","handleDateChange","dateName","dateValue","Date","dfrom","masterData","fromDate","userInfo","dto","toDate","obj","inputParam","inputData","nflag","nregtypecode","RegTypeValue","nregsubtypecode","RegSubTypeValue","String","userinfo","realSampleTypeList","realReportTypeList","realRegTypeList","realRegSubTypeList","realFilterStatusList","realApprovalVersionList","realDesignTemplateMappingList","onFilterComboChange","comboData","fieldName","inputParamData","value","SampleTypeValue","nsampletypecode","item","DesignTemplateMappingValue","updateInfo","typeName","ApprovalVersionValue","napproveconfversioncode","napprovalversioncode","ndesigntemplatemappingcode","TestValue","ntestcode","ReportTypeValue","ncoareporttypecode","closeFilter","inputValues","realFromDate","realToDate","realSampleTypeValue","realReportTypeValue","realRegTypeValue","realRegSubTypeValue","realApprovalVersionValue","realDesignTemplateMappingValue","FilterStatusValue","realFilterStatusValue","ReportType","RegType","RegSubType","FilterStatus","ApprovalVersion","DesignTemplateMapping","showFilter","viewDownloadFile","filedata","ncoaparentcode","selectedReleaseHistory","length","ncoareporthistorycode","npreliminaryreporthistorycode","sprimarykeyname","action","doAction","openModal","ncontrolCode","screenName","intl","formatMessage","id","onFilterSubmit","searchRef","current","change","npreregno","parseInt","ntransactionstatus","undefined","RELEASED","isneedsection","NO","napprovalconfigcode","napprovalconfigversioncode","nneedsubsample","nneedtemplatebasedflow","selectedRecord","info","checkFunction","arrayfalse","childfalsearray","checkFunction1","count","expandFunc","isAddPopup","isEditPopup","isDeletePopup","checkFlag","viewReport","ReportPDFFile","showReport","warn","handleReportNoPageChange","e","skip","take","ConfirmDelete","DRAFT","confirmMessage","confirm","DeleteSamples","controlId","toString","nreporttemplatecode","ncoaparenttranscode","spreregno","ntransactionsamplecode","stransactionsamplecode","ntransactiontestcode","stransactiontestcode","url","settings","nportalrequired","onKeyPress","index","paremterResultcode","keyCode","i","target","form","elements","focus","preventDefault","onResultInputChange","parameterResults","isParameterInitialRender","fields","onComboChange","nprojecttypecode","realUserSectionValue","UserSectionValue","realTestValue","nprojectmastercode","isPopup","sfilterstatus","SECTIONWISEMULTIPLESAMPLE","YES","filterquery","val","matchs","match","replaceAll","nsectioncode","isSectionCombo","handleExecuteClicks","isClear","filterQueryTreeStr","isMandatory","checkMandatoryFilter","awesomeConfig","isFilterEmpty","reportSectionCode","screenNameCopy","awesomeTree","treeData","config","ParentItem","mandatoryList","treeDateList","childArray","children1","DynamicReportFilterTypeItem","map","x","push","childData","hasOwnProperty","properties","field","VALUE","uniqueSet","Set","uniqueArray","Array","from","openFilterQuery","closeModalShow","loadEsign","closeModal","modalShow","ReportmodalShow","selectedComment","selectedId","generateid","syncaction","downloadReportId","previewReport","previewId","ncontrolcode","nprimarykey","nreporttypecode","COAPREVIEW","nprojectcode","ReleasedSampleDetails","isSMTLFlow","generateReport","newTabReport","reportRefFileName","auditAction","userRoleControlRights","nformcode","screenData","operation","preliminaryId","CORRECTION","COAPRELIMINARY","isPreliminaryReportNoGenerate","toastAlert","genericLabel","slanguagetypecode","downloadReleasedValidation","downloadId","ncoaParentCode","split","includes","resultArray","versionCheck","reportTemplateCheck","PRELIMINARYRELEASE","CorrectionComments","downloadReleasedFile","ReleaseComments","createReleaseComment","controlMap","has","get","sort","join","nclinicaltyperequired","noutsourcerequired","listStatus","COAREPORT","sreportcomments","nversionno","methodUrl","classUrl","reportcomments","regenerateReleasedFile","regenerateId","sreportno","CorrectionStatus","correctionId","onSaveReleaseComments","saveType","sreleasecomments","onSaveModalResultClick","sreporttemplatename","label","ReleaseParameter","editResultId","formData","FormData","neditable","releaseParameters","sresult","resultData","results","editable","nparametertypecode","ncalculatedresult","sfinal","parseFloat","nroundingdigits","sunitname","unitcode","sresultaccuracyname","resultaccuracycode","nresultaccuracycode","JSON","stringify","nuserrole","nusercode","ntransactionresultcode","sresultcomment","salertmessage","additionalInfo","additionalInfoUidata","ntestgrouptestpredefcode","ngradecode","nunitcode","trim","RESULTSTATUS_FIO","splittedFileName","name","fileExtension","uniquefilename","ssystemfilename","nfilesize","size","append","Object","values","loading","isFileupload","displayName","onSaveModalClick","seletedRecord","ReleaseSample","sample","filter","c","indexOf","subsample","test","singleSampleInRelease","nisarnowiserelease","nismultipleproject","nprojectspecrequired","sendToPortal","isPortal","allPreregno","reportHistory","patientInfo","isPatientDetails","hideSave","reportHistoryInfo","releaseTestAttachmentData","actionName","reloadData","isCorrectionNeed","isPatientReports","openModalTitle","isReleaseTestAttachment","isReleaseTestComment","isAddReleaseTestAttachment","isAddReleaseTestComment","isInitialRender","loadEsignStateHandle","slideOutClose","editReportTemplateId","closeDocModal","onInputOnChange","type","checked","onChangeAwesomeQueryBuilder","immutableTree","sqlFormat","getTree","onComboChangeAwesomeQueryBuilder","handleExecuteClick","inputparam","component","seletedFilterComponent","handleKendoRowClick","patientinfo","dataItem","PARTIAL","spatientid","onInputChange","coaFileInfo","validateEsign","modalName","sreason","nreasoncode","spredefinedreason","password","selectionChange","checkedflag","syntheticEvent","selected","preregno","ncoahistorycode","childHeaderSelectionChange","dataItems","subsamplecode","ReleaseSubSample","subChildHeaderSelectionChange","transactionsamplecode","recievedPreRegNo","recievedTransactionSampleCode","recievedTransactionTestCode","ReleaseTest","nPreRegNo","nTransactionSampleCode","nTransactionTestCode","sendData","sentData","collectData","every","headerSelectionChange","childSelectionChange","slected","subChildSelectionChange","y","t","y1","recievedData","transactiontestcode","returnData","viewSelectedReport","releasedcoareport","childDataChange","onMandatoryCheck","mandatoryFields","CLINICALTYPE","reportTemplateList","onSaveTestAttachment","onSaveTestComment","formRef","acceptedFiles","sfilename","isFileEdited","fileArray","isArray","forEach","file","fileName","tempData","stestsynonym","susername","suserrolename","slinkname","sdescription","nneedreport","sheader","nsortorder","selectedReleaseTestAttachment","nreleasetestattachmentcode","FTP","sformname","smodulename","slanguagename","deleteReleaseTestAttachment","deleteParam","releasetestattachment","commentArray","comment","selectedReleaseTestComment","nreleasetestcommentcode","ncommentsubtypecode","nsampletestcommentscode","scomments","scommentsubtype","spredefinedname","nsamplecommentscode","deleteReleaseTestComment","releasetestcomment","createRef","masterStatus","error","childDataResult","Map","SampletypeList","ProjecttypeList","ProjectMasterList","SectionList","ReporttypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","sampleSearchField","subsampleSearchField","testSearchField","searchedData","SampleGridItem","combinedSearchField","stateDynamicDesign","splitChangeWidthPercentage","searchFieldList","getDerivedStateFromProps","gridfillingColumn","temparray","option","LABEL","render","ReleaseHistory","editReportParam","primaryKeyField","feildsForGrid","fieldsForReleasedReportGrid","mandatoryCommentsFields","resultCorrectionColumnList","filePath","filetype","reportFilePath","filterParam","inputListName","selectedObject","fetchUrl","changeList","fecthInputObject","isSearch","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","scoareporttypename","releaseId","viewreportId","sendtoportalId","editId","deleteId","patientinfoId","ResultCorrectionId","editcommentsId","releaseHistoryId","downloadVersionHist","reportHistoryId","releaseTestAttachmentId","releaseTestCommentId","releaseReportHistoryId","deleteSampleId","releaseCommentId","editParam","ReleaseMasterDataParam","ApprovedModalParam","DynamicDefaultStructureItem","extractedColumnList","queryBuilderfillingColumns","RemoveModalParam","PATIENTWISE","patientwise","EditModalParam","jsonParam","primaryKeyName","ResultCorrectionParam","reportSubFields","status","transactionStatusSelectionList","openFilter","title","controlname","objectName","hidden","onClick","ConfigVersionList","onDesignTemplateChange","actionMethod","searchedData1","expandNextData","subChildDataResult","DynamicGridItem","DynamicTestGridItem","ReleasedSubSampleDetails","DynamicSubSampleGridItem","ReleasedTestDetails","selectedsubcild","kendoSkip","kendoTake","handlePageChange","gridColumns","lstPatient","SingleItem","PatientReports","ReleaseTestAttachmentDetails","isDataGrid","ReleaseTestCommentDetails","CommentSubType","SampleTestComments","reportinforelease","detailedFieldList","ismandatory","isComboCheck","sectionList","nneedreleaseformattoggle","modalTitle","onEsignInputOnChange","sreportfieldname","sreportfieldvalue","ResultCorrection","deleteRecord","handleExpandChange","childHandleExpandChange","searchedData2","searchedData3","childSelectAll","subChildSelectAll","selectAll","parameterResult","PredefinedValues","GradeValues","selectedNumericData","selectedResultGrade","handleClose","onSaveClick","getFormula","onDropTestFile","viewAdditionalInfo","ResultAccuracy","Unit","formFields","temparray2","RECORDTYPE","PRIMARYKEY","LISTITEM","newArray","componentDidUpdate","previousProps","bool","SampletypeListMap","ReporttypeListMap","RegistrationTypeListMap","RegistrationSubTypeListMap","FilterStatusListMap","ConfigVersionListMap","TestListMap","Test","DynamicDesign","dynamicColumn","parse","jsondata","samplegriditem","testListFields","releasetestfields","subsamplelistitem","sampledisplayfields","samplefiltertypefields","defaultstructure","DesignTemplateMappingMap","allData","shouldComponentUpdate","nextProps","nextState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA6BC,MAA7B,EAAoCC,SAApC,QAAqD,iBAArD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SACIC,KAAK,IAAIC,OADb,QAEO,iCAFP;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAoBC,gBAApB,QAA4C,YAA5C;AACA,SACIC,WADJ,EACiBC,UADjB,EAC6BC,WAD7B,EAC0CC,uBAD1C,EAEIC,gBAFJ,EAGIC,yBAHJ,EAIIC,2BAJJ,EAIiCC,8BAJjC,EAKIC,uBALJ,EAK6BC,0BAL7B,EAKyDC,0BALzD,EAKqFC,iBALrF,EAMIC,sBANJ,EAOIC,qBAPJ,EAO2BC,uBAP3B,EAOoDC,uBAPpD,EAO6EC,oBAP7E,EAOmGC,qBAPnG,EAQIC,wBARJ,EAQ8BC,iBAR9B,EAQiDC,0BARjD,EAQ6EC,oBAR7E,EASIC,iBATJ,EASuBC,sBATvB,EAS+CC,+BAT/C,EASgFC,sBAThF,EASwGC,kBATxG,EAS4HC,uBAT5H,EAUIC,kBAVJ,EAUwBC,sBAVxB,EAUgDC,uBAVhD,EAUyEC,iBAVzE,EAU4FC,cAV5F,EAU4GC,cAV5G,EAU4HC,qBAV5H,EAWIC,yBAXJ,EAW+BC,eAX/B,EAWgDC,2BAXhD,EAW6EC,mCAX7E,EAWkHC,oBAXlH,EAYIC,iBAZJ,EAYuBC,oBAZvB,EAY6CC,2BAZ7C,EAY0EC,6BAZ1E,EAYyGC,wBAZzG,EAYmIC,0BAZnI,EAaIC,cAbJ,EAaoBC,kBAbpB,EAawCC,kBAbxC,EAa4DC,aAb5D,EAa0EC,qBAb1E,EAcIC,0BAdJ,EAc+BC,kBAd/B,EAckDC,mBAdlD,QAeO,eAfP;AAgBA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,SAASC,aAAT,EAAwBC,wBAAxB,EAAkDC,mBAAlD,EAAuEC,mBAAvE,EAA4FC,SAA5F,EACKC,mBADL,EAC0BC,WAD1B,EACuCC,yBADvC,EACiEC,8BADjE,EAEKC,oBAFL,EAE2BC,QAF3B,QAE2C,+BAF3C;AAGA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,WAAvC,EAAoDC,aAApD,EAAmEC,iBAAnE,EAAsFC,cAAtF,QAA2G,8BAA3G;AACA,OAAOC,wBAAP,MAAqC,qDAArC;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,2BAA1C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,iBAAzB,EAA4CC,KAA5C,EAAmDC,YAAnD,EAAiEC,WAAjE,EAA8EC,SAA9E,EAAyFC,OAAzF,EACKC,OADL,EACcC,SADd,EACyBC,UADzB,EACqCC,UADrC,EACiDC,SADjD,EAC4DC,SAD5D,EACuEC,MADvE,EAC+EC,UAD/E,EAEMC,WAFN,EAEkBC,YAFlB,EAE+BC,MAF/B,EAEsCC,QAFtC,EAE+CC,OAF/C,QAE6D,mCAF7D;AAGA,OAAOC,gBAAP,MAA6B,kEAA7B;;;;;;;;;;;AAWA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,aAAvC;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,8CAA/C;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,cAAP,MAA2B,0DAA3B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;;AAGA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,6BAAP,MAA0C,gDAA1C;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,mBAAjC,QAA4D,mCAA5D,C,CAAgG;;AAChG,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAQ;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAR;AACH,CAFD;;AAIA,MAAMC,OAAN,SAAsBvJ,KAAK,CAACwJ,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsFnBC,qBAtFmB,GAsFK,MAAM;AAC1B,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH,KA1FkB;;AAAA,SA6GnBC,eA7GmB,GA6GAC,KAAD,IAAW;AAGzB,WAAKH,QAAL,CAAc;AAAEI,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAnB;AAA8BC,QAAAA,UAAU,EAAEzJ,OAAO,CAAC,KAAK6I,KAAL,CAAWa,IAAZ,EAAkBH,KAAK,CAACC,SAAxB;AAAjD,OAAd,EAHyB,CAIzB;AACH,KAlHkB;;AAAA,SAmHnBG,4BAnHmB,GAmHaJ,KAAD,IAAW;AAGtC,WAAKH,QAAL,CAAc;AAAEQ,QAAAA,sBAAsB,EAAEL,KAAK,CAACC,SAAhC;AAA2CC,QAAAA,UAAU,EAAEzJ,OAAO,CAAC,KAAK6I,KAAL,CAAWa,IAAZ,EAAkBH,KAAK,CAACC,SAAxB;AAA9D,OAAd,EAHsC,CAItC;AACH,KAxHkB;;AAAA,SAyHnBK,oBAzHmB,GAyHKN,KAAD,IAAW;AAG9B,WAAKH,QAAL,CAAc;AAAEU,QAAAA,mBAAmB,EAAEP,KAAK,CAACC,SAA7B;AAAwCC,QAAAA,UAAU,EAAEzJ,OAAO,CAAC,KAAK6I,KAAL,CAAWa,IAAZ,EAAkBH,KAAK,CAACC,SAAxB;AAA3D,OAAd,EAH8B,CAI9B;AACH,KA9HkB;;AAAA,SA+HnBO,yBA/HmB,GA+HUR,KAAD,IAAW;AAGnC,WAAKH,QAAL,CAAc;AAAEY,QAAAA,mBAAmB,EAAET,KAAK,CAACC,SAA7B;AAAwCC,QAAAA,UAAU,EAAEzJ,OAAO,CAAC,KAAK6I,KAAL,CAAWa,IAAZ,EAAkBH,KAAK,CAACC,SAAxB;AAA3D,OAAd,EAHmC,CAInC;AACH,KApIkB;;AAAA,SAqInBS,6BArImB,GAqIcV,KAAD,IAAW;AAGvC,WAAKH,QAAL,CAAc;AAAEc,QAAAA,uBAAuB,EAAEX,KAAK,CAACC,SAAjC;AAA4CC,QAAAA,UAAU,EAAEzJ,OAAO,CAAC,KAAK6I,KAAL,CAAWa,IAAZ,EAAkBH,KAAK,CAACC,SAAxB;AAA/D,OAAd,EAHuC,CAIvC;AACH,KA1IkB;;AAAA,SA2InBW,iCA3ImB,GA2IkBZ,KAAD,IAAW;AAG3C,WAAKH,QAAL,CAAc;AAAEgB,QAAAA,2BAA2B,EAAEb,KAAK,CAACC,SAArC;AAAgDC,QAAAA,UAAU,EAAEzJ,OAAO,CAAC,KAAK6I,KAAL,CAAWa,IAAZ,EAAkBH,KAAK,CAACC,SAAxB;AAAnE,OAAd,EAH2C,CAI3C;AACH,KAhJkB;;AAAA,SAiJnBa,6BAjJmB,GAiJcd,KAAD,IAAW;AACvC,WAAKH,QAAL,CAAc;AAAEkB,QAAAA,uBAAuB,EAAEf,KAAK,CAACC,SAAjC;AAA4CC,QAAAA,UAAU,EAAEzJ,OAAO,CAAC,KAAK6I,KAAL,CAAWa,IAAZ,EAAkBH,KAAK,CAACC,SAAxB;AAA/D,OAAd;AACH,KAnJkB;;AAAA,SAoJnBe,0BApJmB,GAoJWhB,KAAD,IAAW;AACpC,WAAKH,QAAL,CAAc;AAAEoB,QAAAA,oBAAoB,EAAEjB,KAAK,CAACC,SAA9B;AAAyCC,QAAAA,UAAU,EAAEzJ,OAAO,CAAC,KAAK6I,KAAL,CAAWa,IAAZ,EAAkBH,KAAK,CAACC,SAAxB;AAA5D,OAAd;AACH,KAtJkB;;AAAA,SAuJnBiB,yBAvJmB,GAuJUlB,KAAD,IAAW;AACnC,WAAKH,QAAL,CAAc;AAAEsB,QAAAA,mBAAmB,EAAEnB,KAAK,CAACC,SAA7B;AAAwCC,QAAAA,UAAU,EAAEzJ,OAAO,CAAC,KAAK6I,KAAL,CAAWa,IAAZ,EAAkBH,KAAK,CAACC,SAAxB;AAA3D,OAAd;AACH,KAzJkB;;AAAA,SAwKnBmB,gBAxKmB,GAwKA,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACxC,UAAIA,SAAS,KAAK,IAAlB,EAAwB;AACpBA,QAAAA,SAAS,GAAG,IAAIC,IAAJ,EAAZ;AACH;;AACD,UAAIC,KAAK,GAAG,KAAK7B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA5B,GAAuClH,mBAAmB,CAAC,KAAKmF,KAAL,CAAWJ,KAAX,CAAiBoC,QAAlB,EAA4B,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAAxD,CAA1D,GAA8H,IAAIH,IAAJ,EAA1I;AACA,UAAIK,GAAG,GAAG,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAA5B,GAAqCrH,mBAAmB,CAAC,KAAKmF,KAAL,CAAWJ,KAAX,CAAiBoC,QAAlB,EAA4B,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAxD,CAAxD,GAA0H,IAAIN,IAAJ,EAApI;AACA,UAAIO,GAAG,GAAG,EAAV;;AACA,UAAIT,QAAQ,KAAK,UAAjB,EAA6B;AACzBS,QAAAA,GAAG,GAAGvH,wBAAwB,CAAC+G,SAAD,EAAYM,GAAZ,EAAiB,KAAKjC,KAAL,CAAWJ,KAAX,CAAiBoC,QAAlC,CAA9B;AACAH,QAAAA,KAAK,GAAGM,GAAG,CAACJ,QAAZ;AACAE,QAAAA,GAAG,GAAGE,GAAG,CAACD,MAAV;AACH,OAJD,MAIO;AACHC,QAAAA,GAAG,GAAGvH,wBAAwB,CAACiH,KAAD,EAAQF,SAAR,EAAmB,KAAK3B,KAAL,CAAWJ,KAAX,CAAiBoC,QAApC,CAA9B;AACAH,QAAAA,KAAK,GAAGM,GAAG,CAACJ,QAAZ;AACAE,QAAAA,GAAG,GAAGE,GAAG,CAACD,MAAV;AAEH;;AACD,UAAIE,UAAU,GAAG;AACbC,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE,CADA;AAEPC,UAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyCD,YAF5F;AAGPE,UAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4CD,eAHrG;AAIPZ,UAAAA,KAAK,EAAEc,MAAM,CAACd,KAAD,CAJN;AAKPI,UAAAA,GAAG,EAAEU,MAAM,CAACV,GAAD,CALJ;AAMPW,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QANpB;AAOPa,UAAAA,kBAAkB,EAAE,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Be,kBAA5B,IAAkD,EAP/D;AAQPC,UAAAA,kBAAkB,EAAE,KAAK9C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgB,kBAA5B,IAAkD,EAR/D;AASPC,UAAAA,eAAe,EAAE,KAAK/C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiB,eAA5B,IAA+C,EATzD;AAUPC,UAAAA,kBAAkB,EAAE,KAAKhD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkB,kBAA5B,IAAkD,EAV/D;AAWPC,UAAAA,oBAAoB,EAAE,KAAKjD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmB,oBAA5B,IAAoD,EAXnE;AAYPC,UAAAA,uBAAuB,EAAE,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoB,uBAA5B,IAAuD,EAZzE;AAaPC,UAAAA,6BAA6B,EAAE,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqB,6BAA5B,IAA6D;AAbrF,SADE;AAgBbrB,QAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAhBhB,OAAjB;AAmBA,WAAK9B,KAAL,CAAWnI,0BAAX,CAAsCuK,UAAtC;AACH,KA7MkB;;AAAA,SA+MnBgB,mBA/MmB,GA+MG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAE5C,UAAID,SAAJ,EAAe;AACX,YAAIlB,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CAAlC;AACA,YAAIuB,cAAc,GAAG,EAArB;;AACA,YAAID,SAAS,KAAK,iBAAlB,EAAqC;AACjC,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,CAA4CC,eAApE,EAAqF;AACjFH,YAAAA,cAAc,GAAG;AACbjB,cAAAA,KAAK,EAAE,CADM;AAEbT,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAFE;AAGbE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAHI;AAIbwB,cAAAA,eAAe,EAAEL,SAAS,CAACG,KAJd;AAKbZ,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QALd;AAMbF,cAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UANhB;AAOb2B,cAAAA,eAAe,EAAEJ,SAAS,CAACM,IAPd;AAQbd,cAAAA,kBAAkB,EAAE,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Be,kBAA5B,IAAkD,EARzD;AASbC,cAAAA,kBAAkB,EAAE,KAAK9C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgB,kBAA5B,IAAkD,EATzD;AAUbC,cAAAA,eAAe,EAAE,KAAK/C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiB,eAA5B,IAA+C,EAVnD;AAWbC,cAAAA,kBAAkB,EAAE,KAAKhD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkB,kBAA5B,IAAkD,EAXzD;AAYbC,cAAAA,oBAAoB,EAAE,KAAKjD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmB,oBAA5B,IAAoD,EAZ7D;AAabC,cAAAA,uBAAuB,EAAE,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoB,uBAA5B,IAAuD,EAbnE;AAcbC,cAAAA,6BAA6B,EAAE,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqB,6BAA5B,IAA6D;AAd/E,aAAjB;AAgBA,iBAAKnD,KAAL,CAAWtI,2BAAX,CAAuC6L,cAAvC;AACH;AACJ,SApBD,MAsBK,IAAID,SAAS,KAAK,cAAlB,EAAkC;AACnC,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyCD,YAAjE,EAA+E;AAC3EgB,YAAAA,cAAc,GAAG;AACbjB,cAAAA,KAAK,EAAE,CADM;AAEbT,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAFE;AAGbE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAHI;AAIbwB,cAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,CAA4CC,eAJhD;AAKbnB,cAAAA,YAAY,EAAEc,SAAS,CAACG,KALX;AAMbZ,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QANd;AAObF,cAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAPhB;AAQbU,cAAAA,YAAY,EAAEa,SAAS,CAACM,IARX;AASbd,cAAAA,kBAAkB,EAAE,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Be,kBAA5B,IAAkD,EATzD;AAUbC,cAAAA,kBAAkB,EAAE,KAAK9C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgB,kBAA5B,IAAkD,EAVzD;AAWbC,cAAAA,eAAe,EAAE,KAAK/C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiB,eAA5B,IAA+C,EAXnD;AAYbC,cAAAA,kBAAkB,EAAE,KAAKhD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkB,kBAA5B,IAAkD,EAZzD;AAabC,cAAAA,oBAAoB,EAAE,KAAKjD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmB,oBAA5B,IAAoD,EAb7D;AAcbC,cAAAA,uBAAuB,EAAE,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoB,uBAA5B,IAAuD,EAdnE;AAebC,cAAAA,6BAA6B,EAAE,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqB,6BAA5B,IAA6D;AAf/E,aAAjB;AAiBA,iBAAKnD,KAAL,CAAWrI,8BAAX,CAA0C4L,cAA1C;AACH;AACJ,SArBI,MAqBE,IAAID,SAAS,KAAK,iBAAlB,EAAqC;AAExC,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4CD,eAApE,EAAqF;AACjF,gBAAIJ,SAAS,GAAG;AACZC,cAAAA,KAAK,EAAE,CADK;AAEZT,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAFC;AAGZE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAHG;AAIZwB,cAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,CAA4CC,eAJjD;AAKZnB,cAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyCD,YAL3C;AAMZE,cAAAA,eAAe,EAAEY,SAAS,CAACG,KANf;AAOZZ,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAPf;AAQZa,cAAAA,kBAAkB,EAAE,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Be,kBAA5B,IAAkD,EAR1D;AASZC,cAAAA,kBAAkB,EAAE,KAAK9C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgB,kBAA5B,IAAkD,EAT1D;AAUZC,cAAAA,eAAe,EAAE,KAAK/C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiB,eAA5B,IAA+C,EAVpD;AAWZC,cAAAA,kBAAkB,EAAE,KAAKhD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkB,kBAA5B,IAAkD,EAX1D;AAYZC,cAAAA,oBAAoB,EAAE,KAAKjD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmB,oBAA5B,IAAoD,EAZ9D;AAaZC,cAAAA,uBAAuB,EAAE,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoB,uBAA5B,IAAuD,EAbpE;AAcZC,cAAAA,6BAA6B,EAAE,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqB,6BAA5B,IAA6D;AAdhF,aAAhB;AAgBAI,YAAAA,cAAc,GAAG;AACblB,cAAAA,SADa;AAEbP,cAAAA,UAAU,EAAE,EACR,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UADZ;AAERY,gBAAAA,eAAe,EAAEW,SAAS,CAACM;AAFnB;AAFC,aAAjB;AAOA,iBAAK3D,KAAL,CAAWnI,0BAAX,CAAsC0L,cAAtC;AACH;AACJ,SA5BM,MA+BF,IAAID,SAAS,KAAK,4BAAlB,EAAgD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAIxB,UAAU,GAAG,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAtB;AAAkC8B,YAAAA,0BAA0B,EAAEP,SAAS,CAACM;AAAxE,WAAjB;AACA,gBAAME,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAE/H,cADK;AAEfyE,YAAAA,IAAI,EAAE;AAAEsB,cAAAA;AAAF;AAFS,WAAnB;AAIA,eAAK9B,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,SAxBI,MAyBA,IAAIP,SAAS,KAAK,yBAAlB,EAA6C;AAC9C,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDC,uBAAzE,EAAkG;AAC9FT,YAAAA,cAAc,GAAG;AACbjB,cAAAA,KAAK,EAAE,CADM;AAEbT,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAFE;AAGbE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAHI;AAIbwB,cAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,CAA4CC,eAJhD;AAKbnB,cAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyCD,YAL1C;AAMbE,cAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4CD,eANhD;AAObwB,cAAAA,oBAAoB,EAAEZ,SAAS,CAACG,KAPnB;AAQbZ,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QARd;AASbF,cAAAA,UAAU,EAAE,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAtB;AAAkCiC,gBAAAA,oBAAoB,EAAEV,SAAS,CAACM;AAAlE,eATC;AAUbjB,cAAAA,eAAe,EAAE,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAVhC;AAWbwB,cAAAA,0BAA0B,EAAE,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoC,0BAA5B,GAAyD,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoC,0BAArF,GAAkH,CAAC;AAXlI,aAAjB;AAaA,iBAAKlE,KAAL,CAAWpI,uBAAX,CAAmC2L,cAAnC;AACH;AACJ,SAjBI,CAkBL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDK,aAsDA,IAAID,SAAS,KAAK,WAAlB,EAA+B;AAChC,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAA5B,CAAsCC,SAA9D,EAAyE;AACrE,gBAAItC,UAAU,GAAG,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAtB;AAAkCqC,cAAAA,SAAS,EAAEd,SAAS,CAACM;AAAvD,aAAjB;AACA,kBAAME,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAE/H,cADK;AAEfyE,cAAAA,IAAI,EAAE;AAAEsB,gBAAAA;AAAF;AAFS,aAAnB;AAIA,iBAAK9B,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH;AACJ,SATI,MAUA,IAAIP,SAAS,KAAK,oBAAlB,EAAwC;AACzC,cAAID,SAAS,CAACG,KAAV,KAAoB,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,CAA4CC,kBAApE,EAAwF;AACpF,gBAAIxC,UAAU,GAAG,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAtB;AAAkCuC,cAAAA,eAAe,EAAEhB,SAAS,CAACM;AAA7D,aAAjB;AACA,kBAAME,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAE/H,cADK;AAEfyE,cAAAA,IAAI,EAAE;AAAEsB,gBAAAA;AAAF;AAFS,aAAnB;AAIA,iBAAK9B,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH;AACJ,SA/KU,CAgLX;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACH;AACJ,KAjakB;;AAAA,SAkanBU,WAlamB,GAkaL,MAAM;AAChB,UAAIC,WAAW,GAAG;AACdzC,QAAAA,QAAQ,EAAE,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA5B,IAA4C,IAAI7C,IAAJ,EADxC;AACmD;AACjEM,QAAAA,MAAM,EAAE,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAA5B,IAA0C,IAAI9C,IAAJ,EAFpC;AAE+C;AAC7D6B,QAAAA,eAAe,EAAE,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,EAHtD;AAIdN,QAAAA,eAAe,EAAE,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,EAJtD;AAKdpC,QAAAA,YAAY,EAAE,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,EALhD;AAMdnC,QAAAA,eAAe,EAAE,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,EANtD;AAOdf,QAAAA,oBAAoB,EAAE,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,EAPhE;AAQdnB,QAAAA,0BAA0B,EAAE,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,EAR5E;AASdC,QAAAA,iBAAiB,EAAE,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqD,EAT1D;AAUd5J,QAAAA,UAAU,EAAE,KAAK0E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Be,kBAA5B,IAAkD,EAVhD;AAWdsC,QAAAA,UAAU,EAAE,KAAKnF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgB,kBAA5B,IAAkD,EAXhD;AAYdsC,QAAAA,OAAO,EAAE,KAAKpF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiB,eAA5B,IAA+C,EAZ1C;AAadsC,QAAAA,UAAU,EAAE,KAAKrF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkB,kBAA5B,IAAkD,EAbhD;AAcdsC,QAAAA,YAAY,EAAE,KAAKtF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmB,oBAA5B,IAAoD,EAdpD;AAedsC,QAAAA,eAAe,EAAE,KAAKvF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoB,uBAA5B,IAAuD,EAf1D;AAgBdsC,QAAAA,qBAAqB,EAAE,KAAKxF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqB,6BAA5B,IAA6D;AAhBtE,OAAlB;AAmBA,YAAMU,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AAAEiF,UAAAA,UAAU,EAAE,KAAd;AAAqB3D,UAAAA,UAAU,EAAE,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAtB;AAAkC,eAAG0C;AAArC;AAAjC;AAFS,OAAnB;AAIA,WAAKxE,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,KA3bkB;;AAAA,SA8bnB6B,gBA9bmB,GA8bCC,QAAD,IAAc;AAE7B,UAAIxD,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AACA,YAAMI,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACP;AACA;AACAuD,UAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,IAAsD,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAlH,IACT,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAJtD;AAKP;AACA;AACAG,UAAAA,qBAAqB,EAAEJ,QAAQ,CAACtD,SAAT,CAAmB0D,qBAAnB,GAA2CJ,QAAQ,CAACtD,SAAT,CAAmB0D,qBAA9D,GAAsF,CAAC,CAPvG;AAQPC,UAAAA,6BAA6B,EAAEL,QAAQ,CAACtD,SAAT,CAAmB2D,6BAAnB,GAAmDL,QAAQ,CAACtD,SAAT,CAAmB2D,6BAAtE,GAAsG,CAAC,CAR/H;AASP;AACA;AACAzD,UAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAXpG;AAYPE,UAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAZ7G;AAcP;AACA;AACA;AACA;AACAZ,UAAAA,KAAK,EAAEM,GAAG,CAACJ,QAlBJ;AAmBPE,UAAAA,GAAG,EAAEE,GAAG,CAACD,MAnBF;AAoBP;AACAU,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QArBpB;AAsBP;AACA;AACA;AACA;AACAiE,UAAAA,eAAe,EAAE,WA1BV;AA2BPC,UAAAA,MAAM,EAAE,wBA3BD;AA4BPC,UAAAA,QAAQ,EAAE,UA5BH;AA6BP;AACAC,UAAAA,SAAS,EAAE,IA9BJ;AA+BPpE,UAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QA/BpB;AAgCPqE,UAAAA,YAAY,EAAEV,QAAQ,CAACU;AAhChB,SADI;AAmCfC,QAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B;AAnCG,OAAnB;AAsCA,WAAKzG,KAAL,CAAW1G,qBAAX,CAAiC8I,UAAjC,EAA6C,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAA9D,EAA0EM,UAAU,CAACkE,UAArF;AAEH,KAzekB;;AAAA,SAwhBnBI,cAxhBmB,GAwhBF,MAAM;AACnB,WAAKC,SAAL,CAAeC,OAAf,CAAuBpD,KAAvB,GAA+B,EAA/B;AACA,WAAKxD,KAAL,CAAWJ,KAAX,CAAiBiH,MAAjB,GAA0B,KAA1B;AAEA,UAAI1E,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CAAlC;AACA,UAAIyC,YAAY,GAAGtC,GAAG,CAACJ,QAAvB;AACA,UAAI2C,UAAU,GAAGvC,GAAG,CAACD,MAArB;AACA,UAAIyC,mBAAmB,GAAG,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAArG;AACA,UAAIoB,gBAAgB,GAAG,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA/F;AACA,UAAIsC,mBAAmB,GAAG,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAArG;AACA,UAAIwC,qBAAqB,GAAG,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAAzG;AACA,UAAIF,wBAAwB,GAAG,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA/G,CAXmB,CAYnB;AACA;;AACA,UAAIa,mBAAmB,GAAG,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAArG;AACA,UAAIW,8BAA8B,GAAG,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA3H;AACA,UAAIf,kBAAkB,GAAG,KAAK7C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BxG,UAA5B,IAA0C,EAAnE;AACA,UAAIwH,kBAAkB,GAAG,KAAK9C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqD,UAA5B,IAA0C,EAAnE;AACA,UAAIpC,eAAe,GAAG,KAAK/C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsD,OAA5B,IAAuC,EAA7D;AACA,UAAIpC,kBAAkB,GAAG,KAAKhD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuD,UAA5B,IAA0C,EAAnE;AACA,UAAIpC,oBAAoB,GAAG,KAAKjD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwD,YAA5B,IAA4C,EAAvE;AACA,UAAIpC,uBAAuB,GAAG,KAAKlD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4ByD,eAA5B,IAA+C,EAA7E;AACA,UAAIpC,6BAA6B,GAAG,KAAKnD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B0D,qBAA5B,IAAqD,EAAzF;AACA,UAAI1D,UAAU,GAAG,EACb,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UADP;AACmB2C,QAAAA,YADnB;AACiCC,QAAAA,UADjC;AAC6CC,QAAAA,mBAD7C;AACkEE,QAAAA,gBADlE;AAEbC,QAAAA,mBAFa;AAEQI,QAAAA,qBAFR;AAE+BH,QAAAA,wBAF/B;AAGb;AACAC,QAAAA,8BAJa;AAImBlC,QAAAA,kBAJnB;AAIuCE,QAAAA,kBAJvC;AAI2DD,QAAAA,eAJ3D;AAKb6B,QAAAA,mBALa;AAKQ/B,QAAAA,kBALR;AAK4BI,QAAAA,oBAL5B;AAKkDC,QAAAA,uBALlD;AAK2EC,QAAAA;AAL3E,OAAjB;AAOA,UAAId,SAAS,GAAG;AACZyE,QAAAA,SAAS,EAAE,GADC;AAEZpD,QAAAA,eAAe,EAAG,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,CAA4CC,eAA5F,IAAgH,CAAC,CAFtH;AAGZnB,QAAAA,YAAY,EAAEwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyCD,YAAtF,CAAR,IAA+G,CAAC,CAHlH;AAIZE,QAAAA,eAAe,EAAEsE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4CD,eAA5F,CAAR,IAAwH,CAAC,CAJ9H;AAKZuE,QAAAA,kBAAkB,EAAI,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA9C,KAAqEC,SAAvH,IAAqI,KAAKjH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA9C,KAAqE,GAA3M,GAAkNrE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA/C,CAAN,GAA2E,GAA3E,GAAiFrE,MAAM,CAACjH,iBAAiB,CAACwL,QAAnB,CAAzS,GAAwU,IALhV;AAMZ5C,QAAAA,kBAAkB,EAAEyC,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,CAA4CC,kBAA5F,CAAR,IAA2H,CAAC,CANpI;AAOZ6C,QAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,CAA4C8C,aAA5F,CAAR,IAAsHzL,iBAAiB,CAAC0L,EAP3I;AAQZC,QAAAA,mBAAmB,EAAE,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,GAAmD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDsD,mBAAjD,IAAwE,CAAC,CAA5H,GAAgI,IARzI;AASZpD,QAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDuD,0BAArG,GAAkI3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDuD,0BAAlD,CAAxI,GAAwN,CAAC,CATnO;AAUZ;AACAC,QAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4C6E,cAA5F,IAA+G,KAXnH;AAYZC,QAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KAZ3I;AAaZ5E,QAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAbf;AAcZkC,QAAAA,0BAA0B,EAAE,CAAC,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BAAjH,GACvB,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BADhC,GAC6D,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAD1F,KACyH,CAAC;AAf1I,OAAhB;;AAiBA,UAAIvB,SAAS,CAACqB,eAAV,KAA8B,CAAC,CAA/B,IAAoCrB,SAAS,CAACE,YAAV,KAA2B,CAAC,CAAhE,IAAqEF,SAAS,CAACI,eAAV,KAA8B,CAAC,CAApG,IACGJ,SAAS,CAAC2E,kBAAV,KAAiC,IADpC,IAC4C3E,SAAS,CAACgF,mBAAV,KAAkC,CAAC,CAD/E,IACoFhF,SAAS,CAAC4B,oBAAV,KAAmC,IADvH,CAEA;AAFA,SAGG5B,SAAS,CAACiC,kBAAV,KAAiC,CAAC,CAHzC,EAG4C;AAExCjC,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBF,GAAG,CAACJ,QAAzB;AACAM,QAAAA,SAAS,CAAC,KAAD,CAAT,GAAmBF,GAAG,CAACD,MAAvB;AACA,YAAIE,UAAU,GAAG;AACbN,UAAAA,UADa;AAEbO,UAAAA;AAFa,SAAjB;AAIA,aAAKrC,KAAL,CAAWjI,iBAAX,CAA6BqK,UAA7B,EAAwC,KAAKzC,KAAL,CAAW8H,cAAnD,EAAkE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAnF,EAAkG,KAAKzH,KAAL,CAAWJ,KAA7G;AACH,OAZD,MAYO;AACH/I,QAAAA,KAAK,CAAC6Q,IAAN,CAAW,KAAK1H,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AAEJ,KAvlBkB;;AAAA,SAylBnBkB,aAzlBmB,GAylBFnH,IAAD,IAAU;AACtB,YAAMqD,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AACFoH,UAAAA,UAAU,EAAEpH,IAAI,CAACoH,UADf;AAEFC,UAAAA,eAAe,EAAErH,IAAI,CAACqH;AAFpB;AAFS,OAAnB;AAOA,WAAK7H,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,KAlmBkB;;AAAA,SAmmBnBiE,cAnmBmB,GAmmBF,MAAM;AACnB,WAAK5H,QAAL,CAAc;AACV6H,QAAAA,KAAK,EAAE;AADG,OAAd;AAGH,KAvmBkB;;AAAA,SAwmBnBC,UAxmBmB,GAwmBLnB,MAAD,IAAY;AACrB,UAAIkB,KAAK,GAAGlB,MAAM,CAACkB,KAAnB;AACA,YAAMlE,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AACFsB,UAAAA,UAAU,EAAE,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAAtB,WADV;AAEF+E,UAAAA,MAAM,EAAEA,MAAM,CAACA,MAFb;AAGFoB,UAAAA,UAAU,EAAE,KAHV;AAIFC,UAAAA,WAAW,EAAE,KAAKlI,KAAL,CAAWJ,KAAX,CAAiBsI,WAJ5B;AAKFC,UAAAA,aAAa,EAAE,KAAKnI,KAAL,CAAWJ,KAAX,CAAiBuI,aAL9B;AAMFC,UAAAA,SAAS,EAAE,GANT;AAOFL,UAAAA,KAAK,EAAEA;AAPL;AAFS,OAAnB;AAYA,WAAK/H,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,KAvnBkB;;AAAA,SA8nBnBwE,UA9nBmB,GA8nBN,MAAM;AACf,UAAI,KAAKrI,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwG,aAA5B,IAA6C,KAAKtI,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwG,aAA5B,CAA0CxC,MAA1C,GAAmD,CAApG,EAAuG;AACnG,YAAIyC,UAAU,GAAG,IAAjB;AACA,aAAKrI,QAAL,CAAc;AAAEqI,UAAAA;AAAF,SAAd;AACH,OAHD,MAIK;AACD1R,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KAtoBkB;;AAAA,SAwoBnBgC,wBAxoBmB,GAwoBQC,CAAC,IAAI;AAC5B,WAAKxI,QAAL,CAAc;AACVyI,QAAAA,IAAI,EAAED,CAAC,CAACC,IADE;AAEVC,QAAAA,IAAI,EAAEF,CAAC,CAACE;AAFE,OAAd;AAIH,KA7oBkB;;AAAA,SA+oBnBlQ,iBA/oBmB,GA+oBC,CAAC0J,UAAD,EAAaiE,YAAb,KAA8B;AAC9C,UAAGjE,UAAU,CAACN,UAAX,IAAyBM,UAAU,CAACN,UAAX,CAAsB8C,mBAAlD,EAAsE;AAClE,aAAK5E,KAAL,CAAWtH,iBAAX,CAA6B0J,UAA7B,EAAyCiE,YAAzC;AACH,OAFD,MAEO;AACHxP,QAAAA,KAAK,CAAC6Q,IAAN,CAAW,KAAK1H,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KArpBkB;;AAAA,SA4sBnBoC,aA5sBmB,GA4sBFzG,UAAD,IAAgB;AAC5B;AACA;AACA,UAAGA,UAAU,CAAC/H,aAAX,CAAyB2M,kBAAzB,KAAgDtL,iBAAiB,CAACoN,KAArE,EAA2E;AACvE,aAAKC,cAAL,CAAoBC,OAApB,CAA4B,eAA5B,EAA6C,KAAKhJ,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAA7C,EAAkG,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAlG,EACA,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CADA,EACiD,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CADjD,EAEA,MAAM,KAAKwC,aAAL,CAAmB,QAAnB,EAA6B7G,UAAU,CAAC8G,SAAxC,EAAmD9G,UAAnD,CAFN;AAIH,OALD,MAKO;AACHvL,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KAvtBkB;;AAAA,SAytBnBwC,aAztBmB,GAytBH,CAAC/C,MAAD,EAASgD,SAAT,EAAoB1I,IAApB,KAA6B;AACzC;AACA;AACA;AACA;AACA,UAAI2B,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AACA,YAAMI,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACPuD,UAAAA,cAAc,EAAEpF,IAAI,CAACnG,aAAL,CAAmBuL,cAAnB,CAAkCuD,QAAlC,EADT;AAEPvG,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAFpB;AAGPqE,UAAAA,YAAY,EAAE6C,SAHP;AAIPhD,UAAAA,MAAM,EAAEA,MAJD;AAKPrE,UAAAA,KAAK,EAAEM,GAAG,CAACJ,QALJ;AAMPE,UAAAA,GAAG,EAAEE,GAAG,CAACD,MANF;AAOP+B,UAAAA,oBAAoB,EAAG,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAA9G,IAA6I,CAAC,CAP7J;AAQP/E,UAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YARpG;AASPE,UAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAT7G;AAUPuE,UAAAA,kBAAkB,EAAE,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqDvC,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAVxE;AAWPQ,UAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KAXhJ;AAYPS,UAAAA,UAAU,EAAE,KAZL;AAaPC,UAAAA,WAAW,EAAE,KAbN;AAcPf,UAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EAdxJ;AAeP9C,UAAAA,kBAAkB,EAAE,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAfhH;AAgBPZ,UAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAhB7G;AAiBPQ,UAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CAjB/K;AAkBPkF,UAAAA,mBAAmB,EAAE5I,IAAI,CAACnG,aAAL,CAAmB+O,mBAlBjC;AAmBPC,UAAAA,mBAAmB,EAAE7I,IAAI,CAACnG,aAAL,CAAmB2M,kBAnBjC;AAoBPF,UAAAA,SAAS,EAAEtG,IAAI,CAACnG,aAAL,CAAmBiP,SApBvB;AAqBPC,UAAAA,sBAAsB,EAAE/I,IAAI,CAACnG,aAAL,CAAmBmP,sBArBpC;AAsBPC,UAAAA,oBAAoB,EAAEjJ,IAAI,CAACnG,aAAL,CAAmBqP,oBAtBlC;AAuBPnC,UAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAvBhI;AAwBPoC,UAAAA,GAAG,EAAE,KAAK3J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAxBE;AAyBPC,UAAAA,eAAe,EAAE,KAAK7J,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDkF;AAzB7G,SADI;AA4BflD,QAAAA,SAAS,EAAE,KAAKA,SA5BD,CA4Ba;;AA5Bb,OAAnB;AA8BA,WAAK3G,KAAL,CAAW3F,aAAX,CAAyB+H,UAAzB,EAAqC,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAtD;AACH,KA9vBkB;;AAAA,SAyzFnBgI,UAzzFmB,GAyzFN,CAACzJ,KAAD,EAAQ0J,KAAR,EAAeC,kBAAf,KAAsC;AAC/C,UAAI3J,KAAK,CAAC4J,OAAN,KAAkB,EAAtB,EAA0B;AACtB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7J,KAAK,CAAC8J,MAAN,CAAaC,IAAb,CAAkBC,QAAlB,CAA2BvE,MAA/C,EAAuDoE,CAAC,EAAxD,EAA4D;AACxD,cAAInD,QAAQ,CAAC1G,KAAK,CAAC8J,MAAN,CAAaC,IAAb,CAAkBC,QAAlB,CAA2BH,CAA3B,EAA8BzD,EAA/B,CAAR,KAA+CuD,kBAAkB,CAACD,KAAK,GAAG,CAAT,CAArE,EAAkF;AAC9E1J,YAAAA,KAAK,CAAC8J,MAAN,CAAaC,IAAb,CAAkBC,QAAlB,CAA2BH,CAA3B,EAA8BI,KAA9B;AACA;AACH;AACJ;;AACDjK,QAAAA,KAAK,CAACkK,cAAN;AACH;AACJ,KAn0FkB;;AAAA,SAo0FnBC,mBAp0FmB,GAo0FIC,gBAAD,IAAsB;AACxC,WAAKvK,QAAL,CAAc;AACVuK,QAAAA,gBAAgB,EAAE,CAAC,GAAGA,gBAAJ,CADR;AAEVC,QAAAA,wBAAwB,EAAE,KAFhB,CAGV;AACA;;AAJU,OAAd;AAMH,KA30FkB;;AAAA,SA40FnBC,MA50FmB,GA40FV,MAAM,CAEd,CA90FkB;;AAAA,SAo2FnBC,aAp2FmB,GAo2FH,CAACvH,SAAD,EAAYC,SAAZ,KAA0B;AACtC,UAAID,SAAS,KAAK,IAAlB,EAAwB;AACpB,cAAMoE,cAAc,GAAG,KAAK9H,KAAL,CAAW8H,cAAX,IAA6B,EAApD;AACAA,QAAAA,cAAc,CAACnE,SAAD,CAAd,GAA4BD,SAA5B;AACA,aAAKnD,QAAL,CAAc;AAAEuH,UAAAA;AAAF,SAAd;AACH;;AAED,UAAInE,SAAS,KAAK,kBAAlB,EAAsC;AAClC,cAAMC,cAAc,GAAG;AAEnBG,UAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,CAA4CC,eAF1C;AAGnBnB,UAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyCD,YAHpC;AAInBE,UAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4CD,eAJ1C;AAKnBoI,UAAAA,gBAAgB,EAAExH,SAAS,CAACG,KALT;AAMnBZ,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QANR;AAOnBF,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAPV,SAAvB;AASA,aAAK9B,KAAL,CAAWpH,+BAAX,CAA2C2K,cAA3C;AACH;;AACD,UAAID,SAAS,KAAK,oBAAlB,EAAwC;AAEpC,YAAInB,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CAAlC,CAFoC,CAGpC;AACA;;AACA,YAAI2C,mBAAmB,GAAG,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAArG;AACA,YAAIoB,gBAAgB,GAAG,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA/F;AACA,YAAIsC,mBAAmB,GAAG,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAArG;AACA,YAAIwC,qBAAqB,GAAG,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAAzG;AACA,YAAIF,wBAAwB,GAAG,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA/G;AACA,YAAI+G,oBAAoB,GAAG,KAAK9K,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiJ,gBAA5B,IAAgD,KAAK/K,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiJ,gBAAvG;AACA,YAAIC,aAAa,GAAG,KAAKhL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAA5B,IAAyC,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAAzF;AACA,YAAIS,mBAAmB,GAAG,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAArG;AACA,YAAIW,8BAA8B,GAAG,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA3H;AACA,YAAI9B,UAAU,GAAG,EACb,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UADP;AACmB;AAChC6C,UAAAA,mBAFa;AAEQE,UAAAA,gBAFR;AAGbC,UAAAA,mBAHa;AAGQI,UAAAA,qBAHR;AAG+BH,UAAAA,wBAH/B;AAGyD+F,UAAAA,oBAHzD;AAG+EE,UAAAA,aAH/E;AAG8FhG,UAAAA,8BAH9F;AAG8HJ,UAAAA;AAH9H,SAAjB;AAKA,YAAIvC,SAAS,GAAG;AACZyE,UAAAA,SAAS,EAAE,GADC;AAEZpD,UAAAA,eAAe,EAAG,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,CAA4CC,eAA5F,IAAgH,CAAC,CAFtH;AAGZnB,UAAAA,YAAY,EAAEwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyCD,YAAtF,CAAR,IAA+G,CAAC,CAHlH;AAIZE,UAAAA,eAAe,EAAEsE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4CD,eAA5F,CAAR,IAAwH,CAAC,CAJ9H;AAKZ6B,UAAAA,kBAAkB,EAAEyC,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,IAAmI,CAAC,CAL5I;AAMZ6C,UAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EANnJ;AAOZJ,UAAAA,kBAAkB,EAAI,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA9C,KAAqEC,SAAvH,IAAqI,KAAKjH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA9C,KAAqE,GAA3M,GAAkNrE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA/C,CAAxN,GAA6R,IAPrS;AAQZiE,UAAAA,kBAAkB,EAAE5H,SAAS,CAACG,KARlB;AASZ6D,UAAAA,mBAAmB,EAAE,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,GAAmD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDsD,mBAAjD,IAAwE,CAAC,CAA5H,GAAgI,IATzI;AAUZpD,UAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDuD,0BAArG,GAAkI3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDuD,0BAAlD,CAAxI,GAAwN,IAVlO;AAWZlD,UAAAA,SAAS,EAAE,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAA5B,GAAwC,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAA5B,CAAsCC,SAA9E,GAA0F,CAAC,CAX1F;AAYZmD,UAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4C6E,cAA5F,IAA+G,KAZnH;AAaZC,UAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KAb3I;AAcZ5E,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAdf;AAeZ;AACAkJ,UAAAA,OAAO,EAAE,IAhBG;AAiBZjD,UAAAA,UAAU,EAAE,IAjBA;AAkBZ/D,UAAAA,0BAA0B,EAAE,CAAC,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BAAjH,GACvB,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BADhC,GAC6D,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAD1F,KACyH,CAAC;AAnB1I,SAAhB;AAsBA,YAAI6D,cAAc,GAAG,EAAE,GAAG,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H;AAAtB,SAArB;;AACA,YAAIpF,SAAS,CAACqB,eAAV,KAA8B,CAAC,CAA/B,IAAoCrB,SAAS,CAACE,YAAV,KAA2B,CAAC,CAAhE,IAAqEF,SAAS,CAACI,eAAV,KAA8B,CAAC,CAApG,IACGJ,SAAS,CAAC2E,kBAAV,KAAiC,IADpC,IAC4C3E,SAAS,CAACgF,mBAAV,KAAkC,CAAC,CAD/E,IACoFhF,SAAS,CAAC4B,oBAAV,KAAmC,IADvH,IAEGiB,qBAAqB,CAACiG,aAAtB,KAAwC,IAF/C,EAEqD;AAEjD9I,UAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBF,GAAG,CAACJ,QAAzB;AACAM,UAAAA,SAAS,CAAC,KAAD,CAAT,GAAmBF,GAAG,CAACD,MAAvB;AACA,cAAIE,UAAU,GAAG;AACbN,YAAAA,UADa;AAEbO,YAAAA,SAFa;AAGboF,YAAAA;AAHa,WAAjB;;AAMA,cAAIpF,SAAS,CAACiC,kBAAV,KAAiC7I,aAAa,CAAC2P,yBAA/C,IAA4E/I,SAAS,CAAC8E,aAAV,KAA4BzL,iBAAiB,CAAC2P,GAA9H,EAAmI;AAC/H,iBAAKrL,KAAL,CAAW1H,wBAAX,CAAoC8J,UAApC;AACH,WAFD,MAGK;AACD,iBAAKpC,KAAL,CAAWjI,iBAAX,CAA6BqK,UAA7B,EAAwC,KAAKzC,KAAL,CAAW8H,cAAnD,EAAkE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAnF,EAAkG,KAAKzH,KAAL,CAAWJ,KAA7G;AACH;AACJ;AACJ;;AACD,UAAI0D,SAAS,KAAK,cAAlB,EAAkC;AAC9B,YAAIgI,WAAW,GAAG,KAAKtL,KAAL,CAAWJ,KAAX,IAAoB,KAAKI,KAAL,CAAWJ,KAAX,CAAiB0L,WAArC,IAAoDrE,SAAtE;;AACA,YAAIqE,WAAW,KAAKrE,SAApB,EAA+B;AAC3B,cAAIsE,GAAG,GAAGnQ,oBAAoB,CAACkQ,WAAD,EAAc,EAAd,CAA9B;AACA,cAAIE,MAAM,GAAGD,GAAG,IAAIA,GAAG,CAACE,KAAJ,CAAU,KAAV,CAApB;AACAH,UAAAA,WAAW,GAAIE,MAAM,KAAG,IAAT,IAAiBA,MAAM,KAAGvE,SAA1B,IAAuCuE,MAAvC,IAAiDA,MAAM,CAAC1F,MAAP,GAAgB,CAAjE,GAAqEyF,GAArE,GAA2EA,GAAG,IAAIA,GAAG,CAACG,UAAJ,CAAe,IAAf,EAAqB,IAArB,CAAjG;AACH;;AACD,YAAIvJ,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CAAlC;AACA,YAAIyC,YAAY,GAAGtC,GAAG,CAACJ,QAAvB;AACA,YAAI2C,UAAU,GAAGvC,GAAG,CAACD,MAArB;AACA,YAAIyC,mBAAmB,GAAG,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAArG;AACA,YAAIoB,gBAAgB,GAAG,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA/F;AACA,YAAIsC,mBAAmB,GAAG,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAArG;AACA,YAAIwC,qBAAqB,GAAG,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAAzG;AACA,YAAIF,wBAAwB,GAAG,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA/G;AACA,YAAI+G,oBAAoB,GAAG,KAAK9K,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiJ,gBAA5B,IAAgD,KAAK/K,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiJ,gBAAvG;AACA,YAAIC,aAAa,GAAG,KAAKhL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAA5B,IAAyC,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAAzF;AACA,YAAIS,mBAAmB,GAAG,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAArG;AACA,YAAIW,8BAA8B,GAAG,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA3H;AACA,YAAI9B,UAAU,GAAG,EACb,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UADP;AACmB2C,UAAAA,YADnB;AACiCC,UAAAA,UADjC;AAC6CC,UAAAA,mBAD7C;AACkEE,UAAAA,gBADlE;AAEbC,UAAAA,mBAFa;AAEQI,UAAAA,qBAFR;AAE+BH,UAAAA,wBAF/B;AAEyD+F,UAAAA,oBAFzD;AAE+EE,UAAAA,aAF/E;AAE8FhG,UAAAA,8BAF9F;AAE8HJ,UAAAA;AAF9H,SAAjB;AAIA,YAAIvC,SAAS,GAAG;AACZyE,UAAAA,SAAS,EAAE,GADC;AAEZpD,UAAAA,eAAe,EAAG,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,CAA4CC,eAA5F,IAAgH,CAAC,CAFtH;AAGZnB,UAAAA,YAAY,EAAEwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyCD,YAAtF,CAAR,IAA+G,CAAC,CAHlH;AAIZE,UAAAA,eAAe,EAAEsE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4CD,eAA5F,CAAR,IAAwH,CAAC,CAJ9H;AAKZ6B,UAAAA,kBAAkB,EAAEyC,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,IAAmI,CAAC,CAL5I;AAMZ6C,UAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EANnJ;AAOZJ,UAAAA,kBAAkB,EAAI,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA9C,KAAqEC,SAAvH,IAAqI,KAAKjH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA9C,KAAqE,GAA3M,GAAkNrE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA/C,CAAxN,GAA6R,IAPrS;AAQZ2E,UAAAA,YAAY,EAAEtI,SAAS,CAACG,KARZ;AASZ6D,UAAAA,mBAAmB,EAAE,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,GAAmD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDsD,mBAAjD,IAAwE,CAAC,CAA5H,GAAgI,IATzI;AAUZpD,UAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDuD,0BAArG,GAAkI3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDuD,0BAAlD,CAAxI,GAAwN,IAVlO;AAWZlD,UAAAA,SAAS,EAAE,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAA5B,GAAwC,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAA5B,CAAsCC,SAA9E,GAA0F,CAAC,CAX1F;AAYZmD,UAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4C6E,cAA5F,IAA+G,KAZnH;AAaZC,UAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KAb3I;AAcZ5E,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAdf;AAeZiJ,UAAAA,kBAAkB,EAAE,KAAKjL,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,CAAgCwD,kBAAhC,IAAsD,KAAKjL,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,CAAgCwD,kBAAhC,CAAmDzH,KAAzG,IAAkH,CAAC,CAf3H;AAgBZ;AACA8C,UAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAjBjB;AAkBZgF,UAAAA,WAAW,EAAEA,WAlBD;AAmBZJ,UAAAA,OAAO,EAAE,IAnBG;AAoBZjD,UAAAA,UAAU,EAAE,IApBA;AAqBZ2D,UAAAA,cAAc,EAAC,IArBH;AAsBZ1H,UAAAA,0BAA0B,EAAE,CAAC,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BAAjH,GACvB,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BADhC,GAC6D,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAD1F,KACyH,CAAC;AAvB1I,SAAhB;;AAyBA,YAAIvB,SAAS,CAACqB,eAAV,KAA8B,CAAC,CAA/B,IAAoCrB,SAAS,CAACE,YAAV,KAA2B,CAAC,CAAhE,IAAqEF,SAAS,CAACI,eAAV,KAA8B,CAAC,CAApG,IACGJ,SAAS,CAAC2E,kBAAV,KAAiC,IADpC,IAC4C3E,SAAS,CAACgF,mBAAV,KAAkC,CAAC,CAD/E,IACoFhF,SAAS,CAAC4B,oBAAV,KAAmC,IADvH,IAEGiB,qBAAqB,CAACiG,aAAtB,KAAwC,IAF/C,EAEqD;AAEjD9I,UAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBF,GAAG,CAACJ,QAAzB;AACAM,UAAAA,SAAS,CAAC,KAAD,CAAT,GAAmBF,GAAG,CAACD,MAAvB;AACA,cAAIE,UAAU,GAAG;AACbN,YAAAA,UADa;AAEbO,YAAAA;AAFa,WAAjB;AAKA,eAAKrC,KAAL,CAAWjI,iBAAX,CAA6BqK,UAA7B,EAAwC,KAAKzC,KAAL,CAAW8H,cAAnD,EAAkE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAnF,EAAkG,KAAKzH,KAAL,CAAWJ,KAA7G;AACH;AACJ;AACJ,KAn/FkB;;AAAA,SAo/FnBiM,mBAp/FmB,GAo/FEC,OAAD,IAAW;AAC3B,YAAMR,WAAW,GAAG,KAAKtL,KAAL,CAAWJ,KAAX,CAAiB0L,WAArC;AACA,YAAMS,kBAAkB,GAAC,KAAK/L,KAAL,CAAWJ,KAAX,CAAiBmM,kBAA1C;AACA,UAAIC,WAAW,GAAC,KAAKC,oBAAL,CAA0BF,kBAA1B,EAA6C,KAAK/L,KAAL,CAAWJ,KAAX,CAAiBsM,aAA9D,CAAhB;;AACA,UAAGF,WAAH,EAAe;AACf,YAAIG,aAAa,GAAGhR,8BAA8B,CAAC4Q,kBAAD,CAAlD;;AACA,YAAGI,aAAH,EAAiB;AACjB,cAAIZ,GAAG,GAAGnQ,oBAAoB,CAACkQ,WAAD,EAAc,EAAd,CAA9B;AACA,cAAIE,MAAM,GAACD,GAAG,IAAIA,GAAG,CAACE,KAAJ,CAAU,KAAV,CAAlB,CAFiB,CAGlB;;AACC,cAAItJ,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CAAlC;AACA,cAAIyC,YAAY,GAAGtC,GAAG,CAACJ,QAAvB;AACA,cAAI2C,UAAU,GAAGvC,GAAG,CAACD,MAArB;AACA,cAAIyC,mBAAmB,GAAG,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAArG;AACA,cAAIoB,gBAAgB,GAAG,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA/F;AACA,cAAIsC,mBAAmB,GAAG,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAArG;AACA,cAAIwC,qBAAqB,GAAG,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAAzG;AACA,cAAIF,wBAAwB,GAAG,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA/G;AACA,cAAI+G,oBAAoB,GAAG,KAAK9K,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiJ,gBAA5B,IAAgD,KAAK/K,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiJ,gBAAvG;AACA,cAAIC,aAAa,GAAG,KAAKhL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAA5B,IAAyC,KAAKnE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqC,SAAzF;AACA,cAAIS,mBAAmB,GAAG,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAArG;AACA,cAAIW,8BAA8B,GAAG,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA3H;AACA,cAAI9B,UAAU,GAAG,EACb,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UADP;AACmB2C,YAAAA,YADnB;AACiCC,YAAAA,UADjC;AAC6CC,YAAAA,mBAD7C;AACkEE,YAAAA,gBADlE;AAEbC,YAAAA,mBAFa;AAEQI,YAAAA,qBAFR;AAE+BH,YAAAA,wBAF/B;AAEyD+F,YAAAA,oBAFzD;AAE+EE,YAAAA,aAF/E;AAE8FhG,YAAAA,8BAF9F;AAE8HJ,YAAAA;AAF9H,WAAjB,CAhBiB,CAoBjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAIvC,SAAS,GAAG;AACZyE,YAAAA,SAAS,EAAE,GADC;AAEZpD,YAAAA,eAAe,EAAG,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAApG,IAAwH,CAAC,CAF9H;AAGZnB,YAAAA,YAAY,EAAEwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAA9F,CAAR,IAAuH,CAAC,CAH1H;AAIZE,YAAAA,eAAe,EAAEsE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAApG,CAAR,IAAgI,CAAC,CAJtI;AAKZ6B,YAAAA,kBAAkB,EAAE,CALR;AAKU;AACtB6C,YAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EANnJ;AAOZJ,YAAAA,kBAAkB,EAAI,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqD,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAlD,KAAyEC,SAA/H,IAA6I,KAAKjH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAlD,KAAyE,GAAvN,GAA8NrE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAApO,GAA6S,IAPrT;AAQZ2E,YAAAA,YAAY,EAAE,KAAK3L,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAAhD,KAAgEzL,iBAAiB,CAAC2P,GAAjH,GAAqH,KAAKrL,KAAL,CAAWJ,KAAX,CAAiBsI,WAAjB,KAA+B,IAA/B,GAAqC,KAAKlI,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA6B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA9F,GAAiH,KAAKpM,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,IAAmC,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,CAAgCkE,YAAnE,GAAgF,KAAK3L,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,CAAgCkE,YAAhC,CAA6CnI,KAA7H,GAAmI,CAAC,CAA1W,GAA4W,CAAC,CAR/W;AASZ6D,YAAAA,mBAAmB,EAAE,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,GAAuD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDsC,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IATjJ;AAUZpD,YAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAA7G,GAA0I3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAAtD,CAAhJ,GAAoO,IAV9O;AAWZlD,YAAAA,SAAS,EAAE,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,GAA4C,KAAKhL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,CAA0C5G,SAAtF,GAAkG,CAAC,CAXlG;AAYZmD,YAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAZ3H;AAaZC,YAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KAb3I;AAcZ5E,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAdf;AAeZiJ,YAAAA,kBAAkB,EAAE,KAAKjL,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,CAAgCwD,kBAAhC,IAAsD,KAAKjL,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,CAAgCwD,kBAAhC,CAAmDzH,KAAzG,IAAkH,CAAC,CAf3H;AAgBZ;AACA0H,YAAAA,OAAO,EAAE,IAjBG;AAkBZjD,YAAAA,UAAU,EAAE,IAlBA;AAmBZ/D,YAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CAnB1K;AAoBZoH,YAAAA,WAAW,EAAE,CAACQ,OAAD,GAAWN,MAAM,IAAIA,MAAM,CAAC1F,MAAP,GAAc,CAAxB,GAA4ByF,GAA5B,GAAiCA,GAAG,IAAIA,GAAG,CAACG,UAAJ,CAAe,IAAf,EAAqB,IAArB,CAAnD,GAA8EzE,SApB/E;AAqBZX,YAAAA,UAAU,EAAC,KAAKtG,KAAL,CAAWJ,KAAX,CAAiByM,cArBhB;AAsBZP,YAAAA,OAAO,EAACA,OAtBI;AAuBZQ,YAAAA,WAAW,EAAC,KAAKtM,KAAL,CAAWJ,KAAX,CAAiB0M;AAvBjB,WAAhB;;AAyBA,cAAIjK,SAAS,CAACqB,eAAV,KAA8B,CAAC,CAA/B,IAAoCrB,SAAS,CAACE,YAAV,KAA2B,CAAC,CAAhE,IAAqEF,SAAS,CAACI,eAAV,KAA8B,CAAC,CAApG,IACGJ,SAAS,CAAC2E,kBAAV,KAAiC,IADpC,IAC4C3E,SAAS,CAACgF,mBAAV,KAAkC,CAAC,CAD/E,IACoFhF,SAAS,CAAC4B,oBAAV,KAAmC,IADvH,IAEGiB,qBAAqB,CAACiG,aAAtB,KAAwC,IAF/C,EAEqD;AAEjD9I,YAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBF,GAAG,CAACJ,QAAzB;AACAM,YAAAA,SAAS,CAAC,KAAD,CAAT,GAAmBF,GAAG,CAACD,MAAvB;AACA,gBAAIE,UAAU,GAAG;AACbN,cAAAA,UADa;AAEbO,cAAAA;AAFa,aAAjB;AAKA,iBAAKrC,KAAL,CAAWjI,iBAAX,CAA6BqK,UAA7B,EAAwC,KAAKzC,KAAL,CAAW8H,cAAnD,EAAkE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAnF,EAAkG,KAAKzH,KAAL,CAAWJ,KAA7G;AACH,WAjEgB,CAkErB;AACA;AACA;;AACW,SArEP,MAqEW;AACf/I,UAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAAX;AACS;AACJ,OA1ED,MA0EK;AACD5P,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KArkGkB;;AAAA,SAykGnBwF,oBAzkGmB,GAykGG,CAACM,QAAD,EAAUC,MAAV,KAAoB;AACtC,UAAIC,UAAU,GAAG,EAAE,GAAGF;AAAL,OAAjB;AACA,UAAIG,aAAa,GAAC,EAAlB;AACA,UAAIC,YAAY,GAAC,EAAjB;AACA,UAAIR,aAAa,GAAC,KAAlB;AACI,UAAIS,UAAU,GAAGH,UAAU,CAACI,SAA5B;AACA,WAAKlN,KAAL,CAAWmN,2BAAX,CAAuCC,GAAvC,CAA2CC,CAAC,IAAE;AAC1C,YAAIA,CAAC,CAAC,aAAD,CAAL,EAAqB;AACrBN,UAAAA,aAAa,CAACO,IAAd,CAAmBD,CAAnB;AACC;;AACL,YAAIJ,UAAU,IAAIA,UAAU,CAAC9G,MAAX,GAAoB,CAAlC,IAAuC8G,UAAU,KAAK3F,SAA1D,EAAqE;AACjE,eAAK,IAAIiD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0C,UAAU,CAAC9G,MAA/B,EAAuCoE,CAAC,EAAxC,EAA4C;AACxC,gBAAIgD,SAAS,GAAGN,UAAU,CAAC1C,CAAD,CAA1B;;AACA,gBAAI,CAACgD,SAAS,CAACC,cAAV,CAAyB,WAAzB,CAAL,EAA4C;AACzC,kBAAGX,MAAM,IAAIA,MAAM,CAAC7B,MAAP,CAAcuC,SAAS,CAACE,UAAV,CAAqBC,KAAnC,EAA0C,OAA1C,MAAqDL,CAAC,CAACzR,gBAAgB,CAAC+R,KAAlB,CAAhE,IAA4FN,CAAC,CAAC,aAAD,CAAhG,EAAgH;AAC/Gb,gBAAAA,aAAa,GAAC,IAAd;AACAQ,gBAAAA,YAAY,CAACM,IAAb,CAAkBC,SAAS,CAACE,UAAV,CAAqBC,KAAvC;AACA;AACH,aALD,MAKO;AACH,kBAAIH,SAAJ,EAAe;AACXT,gBAAAA,UAAU,GAAGtR,8BAA8B,CAAC+R,SAAD,CAA3C;;AACA,oBAAG,CAACT,UAAJ,EAAe;AACX,yBAAOA,UAAP;AACH;AACJ;AACJ;AACJ;AACJ;AACJ,OAtBG;AAuBJ,UAAIc,SAAS,GAAG,IAAIC,GAAJ,CAAQb,YAAR,CAAhB;AACA,UAAIc,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWJ,SAAX,CAAlB;;AACA,UAAGE,WAAW,CAAC3H,MAAZ,KAAuB4G,aAAa,CAAC5G,MAAxC,EAA+C;AAC3CqG,QAAAA,aAAa,GAAC,KAAd;AACH;;AACD,UAAGO,aAAa,CAAC5G,MAAd,KAAyB,CAA5B,EAA8B;AAC1BqG,QAAAA,aAAa,GAAC,IAAd;AACH;;AACG,aAAOA,aAAP;AACL,KA/mGgB;;AAAA,SAknGnByB,eAlnGmB,GAknGH,MAAI;AAChB,YAAM/J,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AAAE4F,UAAAA,SAAS,EAAC,IAAZ;AAAiBxH,UAAAA,kBAAkB,EAAC,IAApC;AAAyC0H,UAAAA,UAAU,EAAC,kBAApD;AAAuE+F,UAAAA,cAAc,EAAC,KAAKrM,KAAL,CAAWJ,KAAX,CAAiByM;AAAvG;AAFS,OAAnB;AAKA,WAAKrM,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,KAznGkB;;AAAA,SA0nGnBgK,cA1nGmB,GA0nGF,MAAM;AACnB,UAAIC,SAAS,GAAG,KAAK9N,KAAL,CAAWJ,KAAX,CAAiBkO,SAAjC;AACA,UAAIC,UAAU,GAAG,IAAjB;AACA,UAAIC,SAAS,GAAG,KAAKhO,KAAL,CAAWJ,KAAX,CAAiBoO,SAAjC;AACA,UAAIC,eAAe,GAAG,KAAKjO,KAAL,CAAWJ,KAAX,CAAiBqO,eAAvC;AACA,UAAIxG,cAAc,GAAG,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAtC;AACA,UAAIyG,eAAe,GAAG,KAAKlO,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoM,eAAlD;;AACA,UAAI,KAAKlO,KAAL,CAAWJ,KAAX,CAAiBkO,SAArB,EAAgC;AAC5BA,QAAAA,SAAS,GAAG,KAAZ;AACH,OAFD,MAEO;AACHE,QAAAA,SAAS,GAAG,KAAZ;AACAC,QAAAA,eAAe,GAAG,KAAlB;AACAxG,QAAAA,cAAc,GAAG,EAAjB;AACAyG,QAAAA,eAAe,GAAG,EAAlB;AACH;;AAED,YAAMrK,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AAAEwN,UAAAA,SAAF;AAAavG,UAAAA,cAAb;AAA6B0G,UAAAA,UAAU,EAAE,IAAzC;AAA+CL,UAAAA,SAA/C;AAA0DC,UAAAA,UAA1D;AAAsEG,UAAAA,eAAtE;AAAuFD,UAAAA;AAAvF;AAFS,OAAnB;AAIA,WAAKjO,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,KA/oGkB;;AAAA,SAipGnB3J,cAjpGmB,GAipGDkU,UAAD,IAAgB;AAC7B;AACI,UAAIjM,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AAEA,YAAMI,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACPgM,UAAAA,UAAU,EAAC,kBADJ;AAEPrM,UAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC;AAFpB,SADI;AAKfsE,QAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B;AALG,OAAnB;AAQA,WAAKzG,KAAL,CAAW9F,cAAX,CAA0BkI,UAA1B,EAAsC,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAvD,EAAmEM,UAAU,CAACkE,UAA9E,EAZyB,CAa7B;AACA;AACA;AACC,KAjqGc;;AAAA,SAqqGnB9M,eArqGmB,GAqqGA8U,gBAAD,IAAsB;AACpC,UAAG,KAAKtO,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH,YAAI,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAACwL,QAAnG,EAA6G;AACzG,cAAI/E,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AAEA,gBAAMI,UAAU,GAAG;AACfC,YAAAA,SAAS,EAAE;AACP;AACA;AACAuD,cAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAH/D;AAIP;AACA;AACA;AACA;AACA;AACArD,cAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YATpG;AAUPE,cAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAV7G;AAYP;AACA;AACA;AACA;AACAZ,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAhBJ;AAiBPE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAjBF;AAkBPgE,cAAAA,MAAM,EAAE,UAlBD;AAmBPC,cAAAA,QAAQ,EAAE,SAnBH;AAoBP;AACAjC,cAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CArB/K;AAsBP;AACAlC,cAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QAvBpB;AAwBPqE,cAAAA,YAAY,EAAEiI;AAxBP,aADI;AA2BfhI,YAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA9B;AA3BG,WAAnB;AA8BA,eAAKzG,KAAL,CAAWxG,eAAX,CAA2B4I,UAA3B,EAAuC,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAxD,EAAoEM,UAAU,CAACkE,UAA/E;AACH,SAlCD,MAkCO;AACHzP,UAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAAX;AACH;AACJ;AACJ,KA/sGkB;;AAAA,SAktGnB8H,aAltGmB,GAktGFC,SAAD,IAAe;AAC3B,UAAG,KAAKxO,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH,YAAI,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAACwL,QAAnG,EAA6G;AACzG,cAAI/E,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AACA,gBAAMI,UAAU,GAAG;AACf;AACA;AACA;AACAC,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE,CADA;AAEPuE,cAAAA,MAAM,EAAE,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBiH,MAFlB;AAGP4H,cAAAA,YAAY,EAAED,SAHP;AAIP5I,cAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAJ/D;AAKPkB,cAAAA,SAAS,EAAE,KAAK9G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SAL1D;AAMPC,cAAAA,sBAAsB,EAAE,KAAKvJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD2D,sBANvE;AAOPC,cAAAA,oBAAoB,EAAE,KAAKzJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD6D,oBAPrE;AAQPC,cAAAA,GAAG,EAAE,KAAK3J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CARE;AASPlG,cAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAT7G;AAUPU,cAAAA,SAAS,EAAE,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,IAA6C,KAAKhL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,CAA0C5G,SAV3F;AAWP4C,cAAAA,kBAAkB,EAAE,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqDvC,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAXxE;AAYPtD,cAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAZ7G;AAaPnB,cAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAbpG;AAcPE,cAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAd7G;AAePG,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAfpB;AAgBP0M,cAAAA,WAAW,EAAE,KAAK1O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SAhB5D;AAiBPhF,cAAAA,kBAAkB,EAAE,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAjBhH;AAkBP6C,cAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EAlBxJ;AAmBPuH,cAAAA,eAAe,EAAE1Q,UAAU,CAAC2Q,UAnBrB;AAoBP3I,cAAAA,eAAe,EAAE,WApBV;AAqBPhC,cAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BArB5H;AAsBPtD,cAAAA,uBAAuB,EAAE,KAAKhE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAtB/H;AAuBPC,cAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAvBhI;AAwBPC,cAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KAxBhJ;AAyBP3F,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAzBJ;AA0BPE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MA1BF;AA2BPU,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QA3BpB;AA4BPkE,cAAAA,MAAM,EAAE,cA5BD;AA6BPhC,cAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CA7B/K;AA8BPiC,cAAAA,QAAQ,EAAE,UA9BH;AA+BP0I,cAAAA,YAAY,EAAG,KAAK7O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,CAAlD,EAAqD7D,kBAArD,IAA2E,KAAKjL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,CAAlD,EAAqD7D,kBAAjI,IAAwJ,CAAC,CA/BhK;AAgCPmB,cAAAA,iBAAiB,EAAE,KAAKpM,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA5B,GAAgD,KAAKpM,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA5E,GAAgG,CAAC,CAhC7G;AAiCP2C,cAAAA,UAAU,EAAEhI,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAjCb;AAkCPoF,cAAAA,cAAc,EAAC,KAAKhP,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,KAAkC7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAAR,KAA0ClO,iBAAiB,CAAC2P,GAA9F,GAAoG,IAApG,GAAyG,KAlCjH;AAoCP4D,cAAAA,YAAY,EAAC,KAAKjP,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,KAAkC7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAAR,KAA0ClO,iBAAiB,CAAC2P,GAA9F,GAAoG,IAApG,GAAyG,KApC/G;AAoCuH;AAC9H6D,cAAAA,iBAAiB,EAAEnI,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAA9B,CArCpB;AAsCPuF,cAAAA,WAAW,EAAC;AAtCL,aAJI;AA4CfvM,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QA5CZ;AA6CfsE,YAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA9B;AA7CG,WAAnB;AA+CA,gBAAM3E,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAApC;;AACA,cAAI/G,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8Eb,SAA9E,CAAb,EAAuG;AAEnG,kBAAM3K,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAE/H,cADK;AAEfyE,cAAAA,IAAI,EAAE;AACF4F,gBAAAA,SAAS,EAAE,IADT;AAEF4H,gBAAAA,SAAS,EAAE,KAFT;AAGFF,gBAAAA,SAAS,EAAE,IAHT;AAIFwB,gBAAAA,UAAU,EAAE;AAAElN,kBAAAA,UAAF;AAAcN,kBAAAA;AAAd,iBAJV;AAKFwE,gBAAAA,UAAU,EAAElE,UAAU,CAACkE,UALrB;AAMFmI,gBAAAA,YAAY,EAAED,SANZ;AAOFe,gBAAAA,SAAS,EAAE;AAPT;AAFS,aAAnB;AAYA,iBAAKvP,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,WAfD,MAgBK;AACD,iBAAK7D,KAAL,CAAW/H,qBAAX,CAAiCmK,UAAjC,EAA6C,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAA9D,EAA0EM,UAAU,CAACkE,UAArF;AAEH;AACJ,SAtED,MAsEO;AACHzP,UAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAAX;AACH;AACJ;AACJ,KAhyGkB;;AAAA,SAiyGnB7M,iBAjyGmB,GAiyGE4V,aAAD,IAAmB;AACnC,UAAG,KAAKxP,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH,YAAI,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAACoN,KAA/F,IACA,KAAK9I,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAAC+T,UADnG,EAC+G;AAC3G,cAAItN,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AACA,gBAAMI,UAAU,GAAG;AACf;AACA;AACA;AAEAC,YAAAA,SAAS,EAAE;AACPC,cAAAA,KAAK,EAAE,CADA;AAEPuE,cAAAA,MAAM,EAAE,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBiH,MAFlB;AAGP4H,cAAAA,YAAY,EAAEe,aAHP;AAIP5J,cAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAJ/D;AAKPkB,cAAAA,SAAS,EAAE,KAAK9G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SAL1D;AAMPC,cAAAA,sBAAsB,EAAE,KAAKvJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD2D,sBANvE;AAOPC,cAAAA,oBAAoB,EAAE,KAAKzJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD6D,oBAPrE;AAQPC,cAAAA,GAAG,EAAE,KAAK3J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CARE;AASPlG,cAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAT7G;AAUPU,cAAAA,SAAS,EAAE,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,IAA6C,KAAKhL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,CAA0C5G,SAV3F;AAWP4C,cAAAA,kBAAkB,EAAE,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqDvC,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAXxE;AAYPtD,cAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAZ7G;AAaPnB,cAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAbpG;AAcPE,cAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAd7G;AAePG,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAfpB;AAgBP0M,cAAAA,WAAW,EAAE,KAAK1O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SAhB5D;AAiBPhF,cAAAA,kBAAkB,EAAE,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAjBhH;AAkBP6C,cAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EAlBxJ;AAmBPuH,cAAAA,eAAe,EAAE1Q,UAAU,CAACyR,cAnBrB;AAoBPzJ,cAAAA,eAAe,EAAE,WApBV;AAqBPhC,cAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BArB5H;AAsBPtD,cAAAA,uBAAuB,EAAE,KAAKhE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAtB/H;AAuBPC,cAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAvBhI;AAwBPC,cAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KAxBhJ;AAyBP3F,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAzBJ;AA0BPE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MA1BF;AA2BPU,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QA3BpB;AA4BPkE,cAAAA,MAAM,EAAE,aA5BD;AA6BPhC,cAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CA7B/K;AA8BPiC,cAAAA,QAAQ,EAAE,aA9BH;AA+BP0I,cAAAA,YAAY,EAAG,KAAK7O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,CAAlD,EAAqD7D,kBAArD,IAA2E,KAAKjL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,CAAlD,EAAqD7D,kBAAjI,IAAwJ,CAAC,CA/BhK;AAgCPmB,cAAAA,iBAAiB,EAAE,KAAKpM,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA5B,GAAgD,KAAKpM,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA5E,GAAgG,CAAC,CAhC7G;AAiCPuD,cAAAA,6BAA6B,EAAE,KAAK3P,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAA7B,GAA6D7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAArE,GAAuGlO,iBAAiB,CAAC0L,EAjCjJ;AAkCPiC,cAAAA,mBAAmB,EAAE,KAAKrJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAlCpE;AAmCP+H,cAAAA,UAAU,EAAEhI,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAnCb;AAoCPoF,cAAAA,cAAc,EAAC,KAAKhP,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,KAAkC7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAAR,KAA0ClO,iBAAiB,CAAC2P,GAA9F,GAAoG,IAApG,GAAyG,KApCjH;AAsCP4D,cAAAA,YAAY,EAAC,KAAKjP,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,KAAkC7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAAR,KAA0ClO,iBAAiB,CAAC2P,GAA9F,GAAoG,IAApG,GAAyG,KAtC/G;AAsCuH;AAC9H;AACA6D,cAAAA,iBAAiB,EAAEnI,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAA9B,CAxCpB;AAyCPuF,cAAAA,WAAW,EAAC;AAzCL,aALI;AAiDfvM,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAjDZ;AAkDfsE,YAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA9B,CAlDG;AAmDfE,YAAAA,SAAS,EAAE,KAAKA,SAnDD,CAmDa;;AAnDb,WAAnB;AAqDA,gBAAM7E,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAApC;;AACA,cAAI/G,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8EG,aAA9E,CAAb,EAA2G;AAEvG,kBAAM3L,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAE/H,cADK;AAEfyE,cAAAA,IAAI,EAAE;AACF4F,gBAAAA,SAAS,EAAE,IADT;AAEF4H,gBAAAA,SAAS,EAAE,KAFT;AAGFF,gBAAAA,SAAS,EAAE,IAHT;AAIFwB,gBAAAA,UAAU,EAAE;AAAElN,kBAAAA,UAAF;AAAcN,kBAAAA;AAAd,iBAJV;AAKFwE,gBAAAA,UAAU,EAAElE,UAAU,CAACkE,UALrB;AAMFmI,gBAAAA,YAAY,EAAEe,aANZ;AAOFD,gBAAAA,SAAS,EAAE;AAPT;AAFS,aAAnB;AAYA,iBAAKvP,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,WAfD,MAgBK;AACD,iBAAK7D,KAAL,CAAWpG,iBAAX,CAA6BwI,UAA7B,EAAyC,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAA1D,EAAsEM,UAAU,CAACkE,UAAjF;AAEH;AACJ,SA7ED,MA6EO;AACH,cAAIsJ,UAAU,GAAG,KAAK5P,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,IAA0E,GAA1E,IAAgF,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBiQ,YAAjB,IAAiC,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBiQ,YAAjB,CAA8B,mBAA9B,CAAjC,GAC7F,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBiQ,YAAjB,CAA8B,mBAA9B,EAAmD,UAAnD,EAA+D,cAA/D,EAA+E,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B8N,iBAAzG,CAD6F,GAE3F,KAAK9P,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAFW,CAAjB;AAGA5P,UAAAA,KAAK,CAAC2R,IAAN,CAAWoH,UAAX;AACH;AACJ;AACJ,KAz3GkB;;AAAA,SAo9GnBG,0BAp9GmB,GAo9GWC,UAAD,IAAgB;AACjD;AACQ,YAAMC,cAAc,GAAG,KAAKjQ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8D,cAA5B,CAA2CsK,KAA3C,CAAiD,GAAjD,CAAvB;AACA,UAAIrK,sBAAsB,GAAG,EAA7B;AACA,WAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IACA,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDkH,GAAnD,CAAuDpJ,IAAI,IAAIsM,cAAc,CAACE,QAAf,CAAwBxM,IAAI,CAACiC,cAAL,CAAoBuD,QAApB,EAAxB,KAA2DtD,sBAAsB,CAACoH,IAAvB,CAA4BtJ,IAA5B,CAA1H,CADA,CAJyC,CAMzC;;AACA,YAAMyM,WAAW,GAAGvK,sBAAsB,CAACC,MAAvB,GAAgC,CAAhC,GAAoC,CAAC,GAAG,IAAI0H,GAAJ,CAAQ3H,sBAAsB,CAACkH,GAAvB,CAA2BpJ,IAAI,IAAIA,IAAI,CAAC,oBAAD,CAAvC,CAAR,CAAJ,CAApC,GAAmH,EAAvI;AACA,YAAM0M,YAAY,GAAGxK,sBAAsB,CAACC,MAAvB,GAAgC,CAAhC,GAAoC,CAAC,GAAG,IAAI0H,GAAJ,CAAQ3H,sBAAsB,CAACkH,GAAvB,CAA2BpJ,IAAI,IAAIA,IAAI,CAAC,YAAD,CAAvC,CAAR,CAAJ,CAApC,GAA2G,EAAhI;AACA,YAAM2M,mBAAmB,GAAGzK,sBAAsB,CAACC,MAAvB,GAAgC,CAAhC,GAAoC,CAAC,GAAG,IAAI0H,GAAJ,CAAQ3H,sBAAsB,CAACkH,GAAvB,CAA2BpJ,IAAI,IAAIA,IAAI,CAAC,qBAAD,CAAvC,CAAR,CAAJ,CAApC,GAAoH,EAAhJ;;AACA,UAAGyM,WAAW,CAACtK,MAAZ,KAAuB,CAA1B,EAA4B;AACxB,YAAGwK,mBAAmB,CAACxK,MAApB,KAA+B,CAAlC,EAAoC;AAC/B,cAAGsK,WAAW,CAAC,CAAD,CAAX,KAAmB1U,iBAAiB,CAAC+T,UAArC,IAAoDW,WAAW,CAAC,CAAD,CAAX,KAAmB1U,iBAAiB,CAAC6U,kBAArC,KAA4DF,YAAY,CAACvK,MAAb,GAAsB,CAAtB,IAA4BuK,YAAY,CAACvK,MAAb,KAAwB,CAAxB,IAA6BuK,YAAY,CAAC,CAAD,CAAZ,KAAoB,CAAC,CAA1I,CAAvD,EAAsM;AAClM,iBAAKG,kBAAL,CAAwBR,UAAxB,EAAoCnK,sBAApC;AACH,WAFD,MAEO;AACJ,iBAAK4K,oBAAL,CAA0BT,UAA1B;AACH;AACJ,SAND,MAMO;AACHnZ,UAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAAX;AACH;AACJ,OAVD,MAUO;AACH5P,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KA3+GkB;;AAAA,SA6+GrB+J,kBA7+GqB,GA6+GA,CAACtH,SAAD,EAAYrD,sBAAZ,KAAuC;AACtD,UAAI/D,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAlC;AACAA,MAAAA,UAAU,CAAC,wBAAD,CAAV,GAAuC+D,sBAAvC;AACA,YAAMhC,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AACFsN,UAAAA,SAAS,EAAE,KADT;AAEFwB,UAAAA,UAAU,EAAE;AAAExN,YAAAA;AAAF,WAFV;AAGFyN,UAAAA,SAAS,EAAE,KAAKvP,KAAL,CAAWJ,KAAX,CAAiB2P,SAH1B;AAIFnJ,UAAAA,SAAS,EAAE,IAJT;AAKFE,UAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B;AALV;AAFS,OAAnB;AAUA,WAAKzG,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,KA3/GkB;;AAAA,SA6/GnB6M,eA7/GmB,GA6/GAtO,UAAD,IAAgB;AAC9B,YAAM6N,cAAc,GAAG,KAAKjQ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8D,cAA5B,CAA2CsK,KAA3C,CAAiD,GAAjD,CAAvB,CAD8B,CAE9B;AACD;AACC;;AACA,UAAIpO,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAlC;AACAA,MAAAA,UAAU,CAAC,wBAAD,CAAV,GAAqC,EAArC;AACAA,MAAAA,UAAU,CAAC,wBAAD,CAAV,CAAqCmL,IAArC,CAA0C7K,UAAU,CAAC,sBAAD,CAApD,EAP8B,CAQ9B;AACF;;AACE,UAAImB,cAAc,GAAG;AACjBlB,QAAAA,SAAS,EAAE;AACPuD,UAAAA,cAAc,EAAExD,UAAU,CAACuO,oBAAX,CAAgC/K,cADzC;AAEPhD,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC;AAFpB,SADM;AAKjBF,QAAAA,UAAU,EAAE,EAAC,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAArB,SALK;AAMjB2F,QAAAA,cAAc,EAAE,KAAK9H,KAAL,CAAW8H,cANV;AAOjBnB,QAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B;AAPK,OAArB;AASD,WAAKzG,KAAL,CAAWvF,mBAAX,CAA+B8I,cAA/B,EAnB+B,CAoBnC;AACC;AACA;AACA;AACC,KArhHkB;;AAAA,SAuhHnBkN,oBAvhHmB,GAuhHI,MAAM;AACjC;AACQ,YAAMR,cAAc,GAAG,KAAKjQ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8D,cAA5B,CAA2CsK,KAA3C,CAAiD,GAAjD,CAAvB;AACA,UAAIrK,sBAAsB,GAAG,EAA7B;AACA,WAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IACA,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDkH,GAAnD,CAAuDpJ,IAAI,IAAIsM,cAAc,CAACE,QAAf,CAAwBxM,IAAI,CAACiC,cAAL,CAAoBuD,QAApB,EAAxB,KAA2DtD,sBAAsB,CAACoH,IAAvB,CAA4BtJ,IAA5B,CAA1H,CADA;AAGA,YAAMqM,UAAU,GAAG,KAAKrQ,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,yBAA1B,KAAwD,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,yBAA1B,EAAqDrC,YAAhI;AACA,UAAItM,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AACA,YAAMI,UAAU,GAAG;AACf;AACA;AACA;AACAC,QAAAA,SAAS,EAAE;AACPwE,UAAAA,MAAM,EAAE,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBiH,MADlB;AAEP4H,UAAAA,YAAY,EAAEuB,UAFP;AAGPpK,UAAAA,cAAc,EAAEC,sBAAsB,CAACC,MAAvB,GAAgC,CAAhC,GAAoCD,sBAAsB,CAACkH,GAAvB,CAA2BpJ,IAAI,IAAIA,IAAI,CAACiC,cAAxC,EAAwDmL,IAAxD,GAA+DC,IAA/D,CAAoE,GAApE,CAApC,GAA+G,IAHxH;AAIP;AACAlK,UAAAA,SAAS,EAAEjB,sBAAsB,CAACC,MAAvB,GAAgC,CAAhC,GAAoCD,sBAAsB,CAACkH,GAAvB,CAA2BpJ,IAAI,IAAIA,IAAI,CAAC2F,SAAxC,EAAmD0H,IAAnD,CAAwD,GAAxD,CAApC,GAAmG,IALvG;AAMP;AACAzH,UAAAA,sBAAsB,EAAE1D,sBAAsB,CAACC,MAAvB,GAAgC,CAAhC,GAAoCD,sBAAsB,CAACkH,GAAvB,CAA2BpJ,IAAI,IAAIA,IAAI,CAAC6F,sBAAxC,EAAgEwH,IAAhE,CAAqE,GAArE,CAApC,GAAgH,IAPjI;AAQP;AACAvH,UAAAA,oBAAoB,EAAE5D,sBAAsB,CAACC,MAAvB,GAAgC,CAAhC,GAAoCD,sBAAsB,CAACkH,GAAvB,CAA2BpJ,IAAI,IAAIA,IAAI,CAAC+F,oBAAxC,EAA8DsH,IAA9D,CAAmE,GAAnE,CAApC,GAA8G,IAT7H;AAUPrH,UAAAA,GAAG,EAAE,KAAK3J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAVE;AAWPlG,UAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAX7G;AAYP;AACA;AACAU,UAAAA,SAAS,EAAE,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,IAA6C,KAAKhL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,CAA0C5G,SAd3F;AAeP;AACA;AACA;AACA;AACA;AACA4C,UAAAA,kBAAkB,EAAE,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqDvC,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CApBxE;AAqBPtD,UAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eArB7G;AAsBPmG,UAAAA,eAAe,EAAE,KAAK7J,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDkF,eAtB7G;AAuBPtH,UAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAvBpG;AAwBPE,UAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAxB7G;AAyBPwO,UAAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDsM,qBAzBnH;AA0BPC,UAAAA,kBAAkB,EAAE,KAAKlR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDuM,kBA1BhH;AA2BPjN,UAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BA3B5H;AA4BPC,UAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KA5BhI;AA6BPC,UAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KA7BhJ;AA8BP3F,UAAAA,KAAK,EAAEM,GAAG,CAACJ,QA9BJ;AA+BPE,UAAAA,GAAG,EAAEE,GAAG,CAACD,MA/BF;AAgCPU,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAhCpB;AAiCP;AACA;AACA0M,UAAAA,WAAW,EAAE7I,sBAAsB,CAACC,MAAvB,GAAgC,CAAhC,GAAoCD,sBAAsB,CAACkH,GAAvB,CAA2BpJ,IAAI,IAAIA,IAAI,CAAC2F,SAAxC,EAAmD0H,IAAnD,CAAwD,GAAxD,CAApC,GAAmG,IAnCzG;AAoCPG,UAAAA,UAAU,EAAEtL,sBAAsB,CAAC,CAAD,CAAtB,CAA0BmB,kBApC/B;AAqCP1C,UAAAA,kBAAkB,EAAE,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBArChH;AAsCP6C,UAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EAtCxJ;AAuCPuH,UAAAA,eAAe,EAAE1Q,UAAU,CAACmT,SAvCrB;AAwCPnL,UAAAA,eAAe,EAAE,WAxCV;AAyCP;AACAoL,UAAAA,eAAe,EAAE,KAAK1R,KAAL,CAAW8H,cAAX,IAA6B,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B4J,eAAvD,GAAyE,KAAK1R,KAAL,CAAW8H,cAAX,CAA0B4J,eAAnG,GAAqH,EA1C/H;AA2CPC,UAAAA,UAAU,EAAE,KAAKtR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwP,UAA5B,IAA0C,KAAKtR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwP,UAAtE,GAAmF,KAAKtR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwP,UAA/G,GAA4H,CA3CjI;AA4CPpL,UAAAA,MAAM,EAAE,cA5CD;AA6CPC,UAAAA,QAAQ,EAAE,UA7CH;AA8CP7D,UAAAA,KAAK,EAAE,CA9CA;AA+CP4B,UAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CA/C/K;AAgDP2K,UAAAA,YAAY,EAAE,KAAK7O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,CAAlD,EAAqD7D,kBAArD,IAA2E,KAAKjL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,CAAlD,EAAqD7D,kBAhDvI;AAiDPmB,UAAAA,iBAAiB,EAAE,KAAKpM,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA5B,GAAgD,KAAKpM,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA5E,GAAgG,CAAC,CAjD7G;AAkDP2C,UAAAA,UAAU,EAAEhI,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAlDb;AAmDPkF,UAAAA,qBAAqB,EAAE,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAnD5C;AAoDP/F,UAAAA,cAAc,EAAE,KAAKA,cApDd;AAqDP4G,UAAAA,6BAA6B,EAAE,KAAK3P,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAA7B,GAA6D7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAArE,GAAuGlO,iBAAiB,CAAC0L,EArDjJ;AAsDPiC,UAAAA,mBAAmB,EAAExD,sBAAsB,CAAC,CAAD,CAAtB,CAA0BmB,kBAtDxC;AAuDP6I,UAAAA,YAAY,EAAE,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBiQ,YAvDxB;AAwDPb,UAAAA,cAAc,EAAE,KAAKhP,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,KAAiC7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAAR,KAA0ClO,iBAAiB,CAAC2P,GAA7F,GAAmG,IAAnG,GAAwG,KAxDjH;AAwDyH;AAChI4D,UAAAA,YAAY,EAAE,KAAKjP,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,KAAiC7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAAR,KAA0ClO,iBAAiB,CAAC2P,GAA7F,GAAmG,IAAnG,GAAwG,KAzD/G;AAyDsH;AAC7H;AACA6D,UAAAA,iBAAiB,EAAEnI,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAA9B,CA3DpB;AA4DPuF,UAAAA,WAAW,EAAC;AA5DL,SAJI;AAkEfvM,QAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAlEZ;AAmEfuP,QAAAA,SAAS,EAAE,wBAnEI;AAoEfC,QAAAA,QAAQ,EAAE,SApEK;AAqEfjC,QAAAA,SAAS,EAAE,QArEI;AAsEfjJ,QAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B;AAtEG,OAAnB;AA0EA,YAAM3E,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAApC,CAnFyB,CAoFzB;AACA;AACA;AAEA;AACA;;AACA,UAAI/G,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8EW,UAA9E,CAAb,EAAwG;AAEpG,cAAMnM,UAAU,GAAG;AACfC,UAAAA,QAAQ,EAAE/H,cADK;AAEfyE,UAAAA,IAAI,EAAE;AACFiO,YAAAA,YAAY,EAAEuB,UADZ;AAEF5J,YAAAA,SAAS,EAAE,IAFT;AAGF4H,YAAAA,SAAS,EAAE,KAHT;AAIFF,YAAAA,SAAS,EAAE,IAJT;AAKFwB,YAAAA,UAAU,EAAE;AAAElN,cAAAA,UAAF;AAAcN,cAAAA;AAAd,aALV;AAMFyN,YAAAA,SAAS,EAAEnN,UAAU,CAACmN,SANpB;AAOFjJ,YAAAA,UAAU,EAAET,sBAAsB,CAACC,MAAvB,GAAgC,CAAhC,IACZD,sBAAsB,CAAC,CAAD,CAAtB,CAA0BmB,kBAA1B,KAAiDtL,iBAAiB,CAAC+T,UADvD,GACoE,KAAKzP,KAAL,CAAWJ,KAAX,CAAiB0G,UADrF,GAER,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA9B;AATF;AAFS,SAAnB;AAcA,aAAKzG,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,OAjBD,MAkBK;AACD,aAAK7D,KAAL,CAAWhI,sBAAX,CAAkCoK,UAAU,CAACC,SAA7C,EAAwD,KAAKrC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAzE,EAAqFM,UAAU,CAACkE,UAAhG;AAEH,OA/GwB,CAgHzB;;AACH,KAxoHkB;;AAAA,SA0oHnBmL,cA1oHmB,GA0oHF,MAAM;AACnB,UAAG,KAAKzR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH,YAAItE,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;;AACA,YAAG,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,IAAsD,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAACwL,QAArJ,IACI,KAAKlH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAAC6U,kBADtG,EACyH;AACrH,gBAAMnO,UAAU,GAAG;AACf;AACA;AACA;AACAC,YAAAA,SAAS,EAAE;AACPwE,cAAAA,MAAM,EAAE,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBiH,MADlB;AAEPjB,cAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAF/D;AAGPkB,cAAAA,SAAS,EAAE,KAAK9G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SAH1D;AAIPC,cAAAA,sBAAsB,EAAE,KAAKvJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD2D,sBAJvE;AAKPC,cAAAA,oBAAoB,EAAE,KAAKzJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD6D,oBALrE;AAMPC,cAAAA,GAAG,EAAE,KAAK3J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CANE;AAOPlG,cAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAP7G;AAQP;AACA;AACAU,cAAAA,SAAS,EAAE,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,IAA6C,KAAKhL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,CAA0C5G,SAV3F;AAWP;AACA;AACA;AACA;AACA;AACA4C,cAAAA,kBAAkB,EAAE,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqDvC,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAhBxE;AAiBPtD,cAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAjB7G;AAkBPnB,cAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAlBpG;AAmBPE,cAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAnB7G;AAoBPwO,cAAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDsM,qBApBnH;AAqBPhN,cAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BArB5H;AAsBPC,cAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAtBhI;AAuBPC,cAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KAvBhJ;AAwBP3F,cAAAA,KAAK,EAAEM,GAAG,CAACJ,QAxBJ;AAyBPE,cAAAA,GAAG,EAAEE,GAAG,CAACD,MAzBF;AA0BPU,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QA1BpB;AA2BP;AACA;AACA0M,cAAAA,WAAW,EAAE,KAAK1O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SA7B5D;AA8BPhF,cAAAA,kBAAkB,EAAE,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBA9BhH;AA+BP6C,cAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EA/BxJ;AAgCPuH,cAAAA,eAAe,EAAE1Q,UAAU,CAACmT,SAhCrB;AAiCPnL,cAAAA,eAAe,EAAE,WAjCV;AAkCP;AACA3D,cAAAA,KAAK,EAAE,CAnCA;AAoCP4B,cAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC;AApC/K,aAJI;AA0CftB,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC;AA1CZ,WAAnB;AA4CA,eAAKhC,KAAL,CAAWzH,iBAAX,CAA6B6J,UAAU,CAACC,SAAxC,EAAmD,KAAKrC,KAAL,CAAWJ,KAAX,CAAiBkC,UAApE;AACH,SA/CD,MA+CO;AACHjL,UAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAAX;AACH;AACJ;AACJ,KAlsHkB;;AAAA,SAqsHnBiL,sBArsHmB,GAqsHOC,YAAD,IAAkB;AACvC,UAAG,KAAK3R,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH,YAAItE,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AAEA,cAAMI,UAAU,GAAG;AACf;AACA;AACAC,UAAAA,SAAS,EAAE;AACPwE,YAAAA,MAAM,EAAE,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBiH,MADlB;AAEPC,YAAAA,SAAS,EAAE,KAAK9G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SAF1D;AAGP1D,YAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAH/D;AAIP2D,YAAAA,sBAAsB,EAAE,KAAKvJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD2D,sBAJvE;AAKPC,YAAAA,oBAAoB,EAAE,KAAKzJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD6D,oBALrE;AAMPkI,YAAAA,SAAS,EAAE,KAAK5R,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD+L,SAN1D;AAOP9C,YAAAA,qBAAqB,EAAE,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAP5C;AAQP9H,YAAAA,kBAAkB,EAAErE,MAAM,CAACjH,iBAAiB,CAACwL,QAAnB,CARnB;AASPxD,YAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAT7G;AAUPnB,YAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAVpG;AAWPE,YAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAX7G;AAYPyO,YAAAA,kBAAkB,EAAE,KAAKlR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDuM,kBAZhH;AAaPjN,YAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAb5H;AAcPtD,YAAAA,uBAAuB,EAAE,KAAKhE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAd/H;AAePC,YAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAfhI;AAgBPC,YAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KAhBhJ;AAiBP3F,YAAAA,KAAK,EAAEM,GAAG,CAACJ,QAjBJ;AAkBPE,YAAAA,GAAG,EAAEE,GAAG,CAACD,MAlBF;AAmBPI,YAAAA,KAAK,EAAE,CAnBA;AAoBPM,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QApBpB;AAqBPqP,YAAAA,eAAe,EAAE,EArBV;AAsBP3C,YAAAA,WAAW,EAAE,KAAK1O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SAtB5D;AAuBPhF,YAAAA,kBAAkB,EAAE,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAvBhH;AAwBP6C,YAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EAxBxJ;AAyBPuH,YAAAA,eAAe,EAAE1Q,UAAU,CAACmT,SAzBrB;AA0BPnL,YAAAA,eAAe,EAAE,WA1BV;AA2BPC,YAAAA,MAAM,EAAE,YA3BD;AA4BPC,YAAAA,QAAQ,EAAE,UA5BH;AA6BPjC,YAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CA7B/K;AA8BPuK,YAAAA,YAAY,EAAEkD,YA9BP;AA+BP9C,YAAAA,YAAY,EAAG,KAAK7O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,CAAlD,EAAqD7D,kBAArD,IAA2E,KAAKjL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,CAAlD,EAAqD7D,kBAAjI,IAAwJ,CAAC,CA/BhK;AAgCPmB,YAAAA,iBAAiB,EAAE,KAAKpM,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA5B,GAAgD,KAAKpM,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA5E,GAAgG,CAAC,CAhC7G;AAiCP/C,YAAAA,mBAAmB,EAAE,KAAKrJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAjJ,IACN,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAlC9D;AAmCP+H,YAAAA,UAAU,EAAEhI,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAnCb;AAqCPoF,YAAAA,cAAc,EAAC,KAAKhP,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,KAAkC7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAAR,KAA0ClO,iBAAiB,CAAC2P,GAA9F,GAAoG,IAApG,GAAyG,KArCjH;AAwCP4D,YAAAA,YAAY,EAAC,KAAKjP,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,KAAkC7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAAR,KAA0ClO,iBAAiB,CAAC2P,GAA9F,GAAoG,IAApG,GAAyG,KAxC/G;AAwCuH;AAC9H;AACA6D,YAAAA,iBAAiB,EAAEnI,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAA9B,CA1CpB;AA2CPuF,YAAAA,WAAW,EAAC;AA3CL,WAHI;AAgDfvM,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAhDZ;AAiDfsE,UAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAjDG;AAkDf8I,UAAAA,SAAS,EAAE;AAlDI,SAAnB;AAoDA,cAAMzN,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAApC;;AACA,YAAI/G,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8EsC,YAA9E,CAAb,EAA0G;AACtG,gBAAM9N,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAE/H,cADK;AAEfyE,YAAAA,IAAI,EAAE;AACFiO,cAAAA,YAAY,EAAEkD,YADZ;AAEFvL,cAAAA,SAAS,EAAE,IAFT;AAGF4H,cAAAA,SAAS,EAAE,KAHT;AAIFF,cAAAA,SAAS,EAAE,IAJT;AAKFwB,cAAAA,UAAU,EAAE;AAAElN,gBAAAA,UAAF;AAAcN,gBAAAA;AAAd,eALV;AAMFwE,cAAAA,UAAU,EAAElE,UAAU,CAACkE,UANrB;AAOFiJ,cAAAA,SAAS,EAAEnN,UAAU,CAACmN;AAPpB;AAFS,WAAnB;AAYA,eAAKvP,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,SAdD,MAeK;AACD,eAAK7D,KAAL,CAAW/H,qBAAX,CAAiCmK,UAAjC,EAA6C,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAA9D,EAA0EM,UAAU,CAACkE,UAArF;AACH;AACJ;AACJ,KAnxHkB;;AAAA,SAqxHnBuL,gBArxHmB,GAqxHCC,YAAD,IAAkB;AACjC,UAAG,KAAK9R,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH,YAAItE,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC,CADG,CAEH;;AACA,cAAMI,UAAU,GAAG;AACf;AACA;AACA;AACAC,UAAAA,SAAS,EAAE;AACPwE,YAAAA,MAAM,EAAE,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBiH,MADlB;AAEPjB,YAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAF/D;AAGPkB,YAAAA,SAAS,EAAE,KAAK9G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SAH1D;AAIPC,YAAAA,sBAAsB,EAAE,KAAKvJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD2D,sBAJvE;AAKPC,YAAAA,oBAAoB,EAAE,KAAKzJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD6D,oBALrE;AAMPC,YAAAA,GAAG,EAAE,KAAK3J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CANE;AAOPlG,YAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAP7G;AAQP;AACA;AACAU,YAAAA,SAAS,EAAE,KAAKpE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,IAA6C,KAAKhL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkJ,aAA5B,CAA0C5G,SAV3F;AAWP;AACA;AACA;AACA;AACA;AACA4C,YAAAA,kBAAkB,EAAE,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqDvC,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAhBxE;AAiBPtD,YAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAjB7G;AAkBPnB,YAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAlBpG;AAmBPE,YAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAnB7G;AAoBPwO,YAAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDsM,qBApBnH;AAqBPhN,YAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BArB5H;AAsBPC,YAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAtBhI;AAuBPC,YAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KAvBhJ;AAwBP3F,YAAAA,KAAK,EAAEM,GAAG,CAACJ,QAxBJ;AAyBPE,YAAAA,GAAG,EAAEE,GAAG,CAACD,MAzBF;AA0BPU,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QA1BpB;AA2BP;AACA;AACA0M,YAAAA,WAAW,EAAE,KAAK1O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SA7B5D;AA8BPhF,YAAAA,kBAAkB,EAAE,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBA9BhH;AA+BP6C,YAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EA/BxJ;AAgCPuH,YAAAA,eAAe,EAAE1Q,UAAU,CAACmT,SAhCrB;AAiCPnL,YAAAA,eAAe,EAAE,WAjCV;AAkCPE,YAAAA,QAAQ,EAAE,YAlCH;AAmCP7D,YAAAA,KAAK,EAAE,CAnCA;AAoCP4B,YAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CApC/K;AAqCPyL,YAAAA,6BAA6B,EAAE,KAAK3P,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAA7B,GAA6D7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAArE,GAAuGlO,iBAAiB,CAAC0L,EArCjJ;AAsCPyI,YAAAA,YAAY,EAAE,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBiQ;AAtCxB,WAJI;AA4CfjN,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QA5CZ;AA6CfuP,UAAAA,SAAS,EAAE,kBA7CI;AA8CfC,UAAAA,QAAQ,EAAE,SA9CK;AA+CfjC,UAAAA,SAAS,EAAE,QA/CI;AAgDfjJ,UAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B;AAhDG,SAAnB;AAkDA,cAAM3E,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAApC;;AACA,YAAI/G,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8EyC,YAA9E,CAAb,EAA0G;AACtG,gBAAMjO,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAE/H,cADK;AAEfyE,YAAAA,IAAI,EAAE;AACFiO,cAAAA,YAAY,EAAEqD,YADZ;AAEF1L,cAAAA,SAAS,EAAE,IAFT;AAGF4H,cAAAA,SAAS,EAAE,KAHT;AAIFF,cAAAA,SAAS,EAAE,IAJT;AAKFyB,cAAAA,SAAS,EAAE,QALT;AAMFD,cAAAA,UAAU,EAAE;AAAElN,gBAAAA,UAAF;AAAcN,gBAAAA;AAAd,eANV;AAOFwE,cAAAA,UAAU,EAAElE,UAAU,CAACkE;AAPrB;AAFS,WAAnB;AAYA,eAAKtG,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,SAdD,MAeK;AACD,eAAK7D,KAAL,CAAW/G,sBAAX,CAAkCmJ,UAAU,CAACC,SAA7C,EAAwD,KAAKrC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAzE,EAAqFM,UAAU,CAACkE,UAAhG;AACH;AACJ;AACJ,KAj2HkB;;AAAA,SA+8HnByL,qBA/8HmB,GA+8HK,CAACC,QAAD,EAAWxR,IAAX,KAAoB;AACpC,UAAIsB,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAlC;AACA,UAAIoH,SAAS,GAAG,KAAKvJ,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,KAA8C,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CrC,YAAzG;AACA,UAAIrM,UAAU,GAAG;AACbC,QAAAA,SAAS,EAAE;AACPuD,UAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAjJ,GACZ,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAD1C,GAC2D,CAAC,CAFrE;AAGP;AACAqM,UAAAA,gBAAgB,EAAE,KAAKtS,KAAL,CAAW8H,cAAX,IAA6B,KAAK9H,KAAL,CAAW8H,cAAX,CAA0BwK,gBAAvD,IAA2E,EAJtF;AAKPrP,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QALpB;AAMPmE,UAAAA,QAAQ,EAAE;AANH,SADE;AASbrE,QAAAA,UAAU,EAAEA,UATC;AAUb2F,QAAAA,cAAc,EAAE,KAAK9H,KAAL,CAAW8H;AAVd,OAAjB;;AAYA,UAAI1M,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8EnG,SAA9E,CAAb,EAAuG;AAEnG,cAAMrF,UAAU,GAAG;AACfC,UAAAA,QAAQ,EAAE/H,cADK;AAEfyE,UAAAA,IAAI,EAAE;AACFsN,YAAAA,SAAS,EAAE,IADT;AAEFE,YAAAA,SAAS,EAAE,KAFT;AAGF5H,YAAAA,SAAS,EAAE,IAHT;AAIFqI,YAAAA,YAAY,EAAEvF,SAJZ;AAKFoG,YAAAA,UAAU,EAAE;AAAElN,cAAAA,UAAF;AAAcN,cAAAA;AAAd,aALV;AAMFkQ,YAAAA;AANE;AAFS,SAAnB;AAWA,aAAKhS,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,OAdD,MAcO;AACH,aAAK7D,KAAL,CAAWxF,kBAAX,CAA8B4H,UAA9B;AACH;AACJ,KA/+Hc;;AAAA,SAg/HnB8P,sBAh/HmB,GAg/HM,CAACF,QAAD,EAAWxR,IAAX,KAAoB;AACzC,UAAG,KAAKR,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAnC,EAA+F;AAC3F,YAAI3E,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAlC;AACA,YAAIoH,SAAS,GAAG,KAAKvJ,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,oBAA1B,KAAmD,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,oBAA1B,EAAgDrC,YAAnH;AACA,YAAIrM,UAAU,GAAG;AACbC,UAAAA,SAAS,EAAE;AACPuD,YAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAjJ,GACZ,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAD1C,GAC2D,CAAC,CAFrE;AAGPwD,YAAAA,mBAAmB,EAAE,KAAKzJ,KAAL,CAAW8H,cAAX,IAA6B,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B2B,mBAAvD,IAA8E,KAAKzJ,KAAL,CAAW8H,cAAX,CAA0B2B,mBAA1B,CAA8C5F,KAH1I;AAIP2O,YAAAA,mBAAmB,EAAE,KAAKxS,KAAL,CAAW8H,cAAX,IAA6B,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B2B,mBAAvD,IAA8E,KAAKzJ,KAAL,CAAW8H,cAAX,CAA0B2B,mBAA1B,CAA8CgJ,KAJ1I;AAKPxP,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QALpB;AAMPmE,YAAAA,QAAQ,EAAE;AANH,WADE;AASbrE,UAAAA,UAAU,EAAEA,UATC;AAUb2F,UAAAA,cAAc,EAAE,KAAK9H,KAAL,CAAW8H;AAVd,SAAjB;;AAYA,YAAI1M,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8EnG,SAA9E,CAAb,EAAuG;AAEnG,gBAAMrF,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAE/H,cADK;AAEfyE,YAAAA,IAAI,EAAE;AACFsN,cAAAA,SAAS,EAAE,IADT;AAEFE,cAAAA,SAAS,EAAE,KAFT;AAGF5H,cAAAA,SAAS,EAAE,IAHT;AAIFqI,cAAAA,YAAY,EAAEvF,SAJZ;AAKFoG,cAAAA,UAAU,EAAE;AAAElN,gBAAAA,UAAF;AAAcN,gBAAAA;AAAd,eALV;AAMFkQ,cAAAA;AANE;AAFS,WAAnB;AAWA,eAAKhS,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,SAdD,MAcO;AACH,eAAK7D,KAAL,CAAW5F,kBAAX,CAA8BgI,UAA9B;AACH;AACJ,OAhCD,MAgCO;AACH;AACA,YAAIiQ,gBAAgB,GAAG,KAAKrS,KAAL,CAAWJ,KAAX,CAAiB6K,gBAAjB,IAAqC,KAAKzK,KAAL,CAAWJ,KAAX,CAAiB6K,gBAA7E,CAFG,CAGH;AACA;AACA;;AACA,cAAMlI,YAAY,GAAGwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAA9C,CAA7B;AACA,cAAME,eAAe,GAAGsE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAAjD,CAAhC,CAPG,CAQH;;AACA,cAAMyB,0BAA0B,GAAG6C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,CAA3C;AACA,cAAMoO,YAAY,GAAG,KAAK3S,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,YAA1B,KAA2C,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,YAA1B,EAAwCrC,YAAxG;AACA,cAAM+C,QAAQ,GAAG,SAAjB;AACA,cAAMe,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,YAAIC,SAAS,GAAG,CAAhB;AACA,YAAIC,iBAAiB,GAAG,EAAxB;AACA,YAAItQ,UAAU,GAAG,EAAjB,CAfG,CAgBH;;AACA,YAAI8H,CAAC,GAAG,CAAR;;AACA,YAAImI,gBAAgB,KAAKpL,SAArB,IAAkCoL,gBAAgB,CAACvM,MAAjB,GAA0B,CAA5D,IAAiEuM,gBAAgB,CAAC,CAAD,CAAhB,CAAoBM,OAApB,KAAgC,EAArG,EAAyG;AACrGN,UAAAA,gBAAgB,CAACtF,GAAjB,CAAqB,CAAC6F,UAAD,EAAa7I,KAAb,KAAuB;AACxC,gBAAI8I,OAAO,GAAG,EAAd;;AACA,gBAAID,UAAU,CAACE,QAAX,KAAwB,IAA5B,EAAkC;AAC9BL,cAAAA,SAAS,GAAG,CAAZ;;AACA,sBAAQG,UAAU,CAACG,kBAAnB;AACI,qBAAK,CAAL;AACIF,kBAAAA,OAAO,CAAC,UAAD,CAAP,GAAsB;AAClBG,oBAAAA,iBAAiB,EAAEJ,UAAU,CAAC,mBAAD,CADX;AAElBD,oBAAAA,OAAO,EAAEC,UAAU,CAACD,OAFF;AAGlBM,oBAAAA,MAAM,EAAEL,UAAU,CAACD,OAAX,KAAuB,EAAvB,GAA4BpU,gBAAgB,CAAC2U,UAAU,CAACN,UAAU,CAACD,OAAZ,CAAX,EAAiC5L,QAAQ,CAAC6L,UAAU,CAACO,eAAZ,CAAzC,CAA5C,GAAqH,EAH3G;AAIlB;AACAC,oBAAAA,SAAS,EAAER,UAAU,CAACS,QAAX,CAAoBjB,KALb;AAMlBkB,oBAAAA,mBAAmB,EAAEV,UAAU,CAACW,kBAAX,CAA8BnB,KANjC;AAOlBoB,oBAAAA,mBAAmB,EAAEZ,UAAU,CAACW,kBAAX,CAA8B/P;AAPjC,mBAAtB;AASAqP,kBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBY,IAAI,CAACC,SAAL,CAAeb,OAAO,CAAC,UAAD,CAAtB,CAAxB;AACAA,kBAAAA,OAAO,CAAC,mBAAD,CAAP,GAA+BD,UAAU,CAAC,mBAAD,CAAzC;AACAC,kBAAAA,OAAO,CAAC,SAAD,CAAP,GAAqBD,UAAU,CAACD,OAAhC;AACAE,kBAAAA,OAAO,CAAC,QAAD,CAAP,GAAoBD,UAAU,CAACD,OAAX,KAAuB,EAAvB,GAChBpU,gBAAgB,CAAC2U,UAAU,CAACN,UAAU,CAACD,OAAZ,CAAX,EAAiC5L,QAAQ,CAAC6L,UAAU,CAACO,eAAZ,CAAzC,CADA,GACyE,EAD7F;AAEAN,kBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBD,UAAU,CAACD,OAAX,KAAuB,EAAvB,GACpBnU,YAAY,CAACoU,UAAD,EAAaC,OAAO,CAAC,QAAD,CAApB,CADQ,GAC0B,CAAC,CADnD;AAEAA,kBAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,KAAK7S,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B2R,SAApD;AACAd,kBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,KAAK7S,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B4R,SAAlD;AACAf,kBAAAA,OAAO,CAAC,wBAAD,CAAP,GAAoCD,UAAU,CAACiB,sBAA/C;AACAhB,kBAAAA,OAAO,CAAC,sBAAD,CAAP,GAAkCD,UAAU,CAACnJ,oBAA7C;AACAoJ,kBAAAA,OAAO,CAAC,oBAAD,CAAP,GAAgCD,UAAU,CAACG,kBAA3C;AACAF,kBAAAA,OAAO,CAAC,WAAD,CAAP,GAAuBD,UAAU,CAACS,QAAX,CAAoB7P,KAA3C,CAtBJ,CAsBuD;;AAGnD;;AACJ,qBAAK,CAAL;AACIqP,kBAAAA,OAAO,CAAC,UAAD,CAAP,GAAsB;AAClBG,oBAAAA,iBAAiB,EAAE,CADD;AAElBL,oBAAAA,OAAO,EAAE3X,mBAAmB,CAAC4X,UAAU,CAACD,OAAZ,EAAqB,KAArB,CAFV;AAGlBM,oBAAAA,MAAM,EAAEjY,mBAAmB,CAAC4X,UAAU,CAACK,MAAZ,EAAoB,KAApB,CAHT;AAIlBa,oBAAAA,cAAc,EAAElB,UAAU,CAACkB,cAAX,KAA8B,MAA9B,GAAuC,GAAvC,GAA6ClB,UAAU,CAACkB,cAJtD;AAKlBC,oBAAAA,aAAa,EAAEnB,UAAU,CAACmB,aALR;AAMlBC,oBAAAA,cAAc,EAAEpB,UAAU,CAAC,gBAAD,CANR;AAOlBqB,oBAAAA,oBAAoB,EAAErB,UAAU,CAAC,sBAAD,CAAV,KAAuC3L,SAAvC,GAAmD,EAAnD,GAAwD2L,UAAU,CAAC,sBAAD,CAPtE;AAQlBsB,oBAAAA,wBAAwB,EAAEtB,UAAU,CAACsB;AARnB,mBAAtB;AAUArB,kBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBY,IAAI,CAACC,SAAL,CAAeb,OAAO,CAAC,UAAD,CAAtB,CAAxB;AACAA,kBAAAA,OAAO,CAAC,SAAD,CAAP,GAAqBD,UAAU,CAACD,OAAhC;AAEAE,kBAAAA,OAAO,CAAC,mBAAD,CAAP,GAA+B,CAA/B;AACAA,kBAAAA,OAAO,CAAC,QAAD,CAAP,GAAoBD,UAAU,CAACD,OAA/B;AACAE,kBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBD,UAAU,CAACuB,UAAnC;AACAtB,kBAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,KAAK7S,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B2R,SAApD;AACAd,kBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,KAAK7S,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B4R,SAAlD;AACAf,kBAAAA,OAAO,CAAC,wBAAD,CAAP,GAAoCD,UAAU,CAACiB,sBAA/C;AACAhB,kBAAAA,OAAO,CAAC,sBAAD,CAAP,GAAkCD,UAAU,CAACnJ,oBAA7C;AACAoJ,kBAAAA,OAAO,CAAC,oBAAD,CAAP,GAAgCD,UAAU,CAACG,kBAA3C;AACAF,kBAAAA,OAAO,CAAC,WAAD,CAAP,GAAuBD,UAAU,CAACwB,SAAlC;AACA;;AACJ,qBAAK,CAAL;AACIvB,kBAAAA,OAAO,CAAC,UAAD,CAAP,GAAsB;AAClBG,oBAAAA,iBAAiB,EAAE,CADD;AAElBL,oBAAAA,OAAO,EAAE3X,mBAAmB,CAAC4X,UAAU,CAACD,OAAZ,EAAqB,KAArB,CAFV;AAGlBM,oBAAAA,MAAM,EAAEjY,mBAAmB,CAAC4X,UAAU,CAACD,OAAZ,EAAqB,KAArB;AAHT,mBAAtB;AAKAE,kBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBY,IAAI,CAACC,SAAL,CAAeb,OAAO,CAAC,UAAD,CAAtB,CAAxB;AACAA,kBAAAA,OAAO,CAAC,SAAD,CAAP,GAAqBD,UAAU,CAACD,OAAhC;AACAE,kBAAAA,OAAO,CAAC,mBAAD,CAAP,GAA+B,CAA/B;AACAA,kBAAAA,OAAO,CAAC,QAAD,CAAP,GAAoBD,UAAU,CAACD,OAA/B;AACAE,kBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBD,UAAU,CAACD,OAAX,CAAmB0B,IAAnB,OAA8B,EAA9B,GAAmC,CAAC,CAApC,GAAwC7Y,WAAW,CAAC8Y,gBAA5E;AACAzB,kBAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,KAAK7S,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B2R,SAApD;AACAd,kBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,KAAK7S,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B4R,SAAlD;AACAf,kBAAAA,OAAO,CAAC,wBAAD,CAAP,GAAoCD,UAAU,CAACiB,sBAA/C;AACAhB,kBAAAA,OAAO,CAAC,sBAAD,CAAP,GAAkCD,UAAU,CAACnJ,oBAA7C;AACAoJ,kBAAAA,OAAO,CAAC,oBAAD,CAAP,GAAgCD,UAAU,CAACG,kBAA3C;AACAF,kBAAAA,OAAO,CAAC,WAAD,CAAP,GAAuBD,UAAU,CAACwB,SAAlC;AACA;;AACJ,qBAAK,CAAL;AACI,sBAAIxB,UAAU,CAACK,MAAX,CAAkBnN,MAAlB,GAA2B,CAA/B,EAAkC;AAC9B,0BAAMyO,gBAAgB,GAAG3B,UAAU,CAACK,MAAX,GAAoBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,KAAwBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqBuB,IAArB,CAA0BtE,KAA1B,CAAgC,GAAhC,CAA5C,GAAmF,EAA5G;AACA,0BAAMuE,aAAa,GAAG7B,UAAU,CAACK,MAAX,GAAoBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,KAAwBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqBuB,IAArB,CAA0BtE,KAA1B,CAAgC,GAAhC,EAAqCqE,gBAAgB,CAACzO,MAAjB,GAA0B,CAA/D,CAA5C,GAAgH,EAAtI;AACA,0BAAM4O,cAAc,GAAGzZ,WAAW,KAAK,GAAhB,GAAsBwZ,aAA7C;AACA5B,oBAAAA,OAAO,CAAC,UAAD,CAAP,GAAsB;AAClB8B,sBAAAA,eAAe,EAAED,cADC;AAElBE,sBAAAA,SAAS,EAAEhC,UAAU,CAACK,MAAX,CAAkB,CAAlB,KAAwBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqB4B,IAFtC;AAGlB7B,sBAAAA,iBAAiB,EAAE,CAHD;AAIlBL,sBAAAA,OAAO,EAAE3X,mBAAmB,CAAC4X,UAAU,CAACD,OAAZ,EAAqB,KAArB,CAJV;AAKlBM,sBAAAA,MAAM,EAAEjY,mBAAmB,CAAC4X,UAAU,CAACD,OAAZ,EAAqB,KAArB;AALT,qBAAtB;AAOAE,oBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBY,IAAI,CAACC,SAAL,CAAeb,OAAO,CAAC,UAAD,CAAtB,CAAxB;AACAA,oBAAAA,OAAO,CAAC,mBAAD,CAAP,GAA+B,CAA/B;AACAA,oBAAAA,OAAO,CAAC,SAAD,CAAP,GAAqBD,UAAU,CAACD,OAAhC;AACAE,oBAAAA,OAAO,CAAC,QAAD,CAAP,GAAoBD,UAAU,CAACD,OAA/B;AACAE,oBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBD,UAAU,CAACD,OAAX,CAAmB0B,IAAnB,OAA8B,EAA9B,GAAmC,CAAC,CAApC,GAAwC7Y,WAAW,CAAC8Y,gBAA5E;AACAzB,oBAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,KAAK7S,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B2R,SAApD;AACAd,oBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,KAAK7S,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B4R,SAAlD;AACAf,oBAAAA,OAAO,CAAC,wBAAD,CAAP,GAAoCD,UAAU,CAACiB,sBAA/C;AACAhB,oBAAAA,OAAO,CAAC,sBAAD,CAAP,GAAkCD,UAAU,CAACnJ,oBAA7C;AACAoJ,oBAAAA,OAAO,CAAC,oBAAD,CAAP,GAAgCD,UAAU,CAACG,kBAA3C;AACAF,oBAAAA,OAAO,CAAC,iBAAD,CAAP,GAA6B6B,cAA7B;AACA7B,oBAAAA,OAAO,CAAC,WAAD,CAAP,GAAuBD,UAAU,CAACK,MAAX,CAAkB,CAAlB,KAAwBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqB4B,IAApE;AACAhC,oBAAAA,OAAO,CAAC,WAAD,CAAP,GAAuBD,UAAU,CAACwB,SAAlC;AACA7B,oBAAAA,QAAQ,CAACuC,MAAT,CAAgB,iBAAiB/K,KAAjC,EAAwC6I,UAAU,CAACK,MAAX,CAAkB,CAAlB,KAAwBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,CAAhE;AACAV,oBAAAA,QAAQ,CAACuC,MAAT,CAAgB,mBAAmB/K,KAAnC,EAA0C2K,cAA1C;AACAnC,oBAAAA,QAAQ,CAACuC,MAAT,CAAgB,sBAAhB,EAAwClC,UAAU,CAACnJ,oBAAnD;AACAS,oBAAAA,CAAC;AACJ,mBA5BD,MA6BK;AACD,0BAAMqK,gBAAgB,GAAG3B,UAAU,CAACK,MAAX,GAAoBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,KAAwBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqBuB,IAArB,CAA0BtE,KAA1B,CAAgC,GAAhC,CAA5C,GAAmF,EAA5G;AACA,0BAAMuE,aAAa,GAAG7B,UAAU,CAACK,MAAX,GAAoBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,KAAwBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqBuB,IAArB,CAA0BtE,KAA1B,CAAgC,GAAhC,EAAqCqE,gBAAgB,CAACzO,MAAjB,GAA0B,CAA/D,CAA5C,GAAgH,EAAtI;AACA,0BAAM4O,cAAc,GAAG,EAAvB;AACA7B,oBAAAA,OAAO,CAAC,UAAD,CAAP,GAAsB;AAClB8B,sBAAAA,eAAe,EAAED,cADC;AAElBE,sBAAAA,SAAS,EAAEhC,UAAU,CAACK,MAAX,GAAoBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,KAAwBL,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqB4B,IAAjE,GAAwE,EAFjE;AAGlB7B,sBAAAA,iBAAiB,EAAE,CAHD;AAIlBL,sBAAAA,OAAO,EAAE,EAJS;AAKlBM,sBAAAA,MAAM,EAAE;AALU,qBAAtB;AAOAJ,oBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBY,IAAI,CAACC,SAAL,CAAeb,OAAO,CAAC,UAAD,CAAtB,CAAxB;AACAA,oBAAAA,OAAO,CAAC,mBAAD,CAAP,GAA+B,CAA/B;AACAA,oBAAAA,OAAO,CAAC,SAAD,CAAP,GAAqB,EAArB;AACAA,oBAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,EAApB;AACAA,oBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,CAAC,CAAzB;AACAA,oBAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,KAAK7S,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B2R,SAApD;AACAd,oBAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,KAAK7S,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B4R,SAAlD;AACAf,oBAAAA,OAAO,CAAC,wBAAD,CAAP,GAAoCD,UAAU,CAACiB,sBAA/C;AACAhB,oBAAAA,OAAO,CAAC,sBAAD,CAAP,GAAkCD,UAAU,CAACnJ,oBAA7C;AACAoJ,oBAAAA,OAAO,CAAC,oBAAD,CAAP,GAAgCD,UAAU,CAACG,kBAA3C;AACAF,oBAAAA,OAAO,CAAC,iBAAD,CAAP,GAA6B,EAA7B;AACAA,oBAAAA,OAAO,CAAC,WAAD,CAAP,GAAuB,EAAvB;AACAN,oBAAAA,QAAQ,CAACuC,MAAT,CAAgB,iBAAiB/K,KAAjC,EAAwC,EAAxC;AACAwI,oBAAAA,QAAQ,CAACuC,MAAT,CAAgB,mBAAmB/K,KAAnC,EAA0C,EAA1C;AACAwI,oBAAAA,QAAQ,CAACuC,MAAT,CAAgB,sBAAhB,EAAwC,EAAxC;AACH;;AACD;;AACJ;AACI;AAhIR;;AAkIA,kBAAIC,MAAM,CAACC,MAAP,CAAcnC,OAAd,EAAuB/M,MAAvB,GAAgC,CAApC,EAAuC;AACnC4M,gBAAAA,iBAAiB,CAACzF,IAAlB,CAAuB4F,OAAvB;AACH;AACJ;;AACD,mBAAO,IAAP;AACH,WA3ID;;AA6IA,cAAIJ,SAAS,KAAK,CAAlB,EAAqB;AACjB,kBAAM5O,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAE/H,cADK;AAEf;AACAyE,cAAAA,IAAI,EAAE;AAAEyU,gBAAAA,OAAO,EAAE,KAAX;AACF;AACAjH,gBAAAA,SAAS,EAAE,KAFT;AAEgBvD,gBAAAA,gBAAgB,EAAE,EAFlC;AAEsChD,gBAAAA,cAAc,EAAE;AAFtD;AAHS,aAAnB;AAOA,mBAAO,KAAKzH,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB,CAAP;AACH;;AAED0O,UAAAA,QAAQ,CAACuC,MAAT,CAAgB,WAAhB,EAA6B5K,CAA7B;AACAqI,UAAAA,QAAQ,CAACuC,MAAT,CAAgB,cAAhB,EAAgCvS,YAAhC;AACAgQ,UAAAA,QAAQ,CAACuC,MAAT,CAAgB,iBAAhB,EAAmCrS,eAAnC;AACA8P,UAAAA,QAAQ,CAACuC,MAAT,CAAgB,gBAAhB,EAAkC,KAAK9U,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAAxF;AACA2M,UAAAA,QAAQ,CAACuC,MAAT,CAAgB,cAAhB,EAAgC,KAAK9U,KAAL,CAAWJ,KAAX,CAAiB6O,YAAjD;AACA8D,UAAAA,QAAQ,CAACuC,MAAT,CAAgB,4BAAhB,EAA8C5Q,0BAA9C;AACAqO,UAAAA,QAAQ,CAACuC,MAAT,CAAgB,YAAhB,EAA8BrB,IAAI,CAACC,SAAL,CAAehB,iBAAf,CAA9B;AAEAtQ,UAAAA,UAAU,GAAG;AACToP,YAAAA,QAAQ,EAAEA,QADD;AAETD,YAAAA,SAAS,EAAE,kBAFF;AAGTlP,YAAAA,SAAS,EAAE;AAAEO,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAA7B;AAAuCmE,cAAAA,QAAQ,EAAE;AAAjD,aAHF;AAIToM,YAAAA,QAAQ,EAAEA,QAJD;AAKT2C,YAAAA,YAAY,EAAE,IALL;AAMT3F,YAAAA,SAAS,EAAE,QANF;AAOT4F,YAAAA,WAAW,EAAE,KAAKnV,KAAL,CAAWJ,KAAX,CAAiBwC,UAAjB,CAA4B+S,WAPhC;AAO6CnD,YAAAA,QAP7C,CAOqD;;AAPrD,WAAb;AAUA,gBAAMlQ,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAApC;;AACA,cAAI/G,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8EiD,YAA9E,CAAb,EAA0G;AAEtG,kBAAMzO,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAE/H,cADK;AAEfyE,cAAAA,IAAI,EAAE;AACFsN,gBAAAA,SAAS,EAAE,IADT;AAEFE,gBAAAA,SAAS,EAAE,KAFT;AAGF5H,gBAAAA,SAAS,EAAE,IAHT;AAIFqI,gBAAAA,YAAY,EAAE6D,YAJZ;AAKFhD,gBAAAA,UAAU,EAAE;AAAElN,kBAAAA,UAAF;AAAcN,kBAAAA;AAAd,iBALV;AAKsCkQ,gBAAAA;AALtC;AAFS,aAAnB;AAUA,iBAAKhS,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,WAbD,MAcK;AAED,iBAAK7D,KAAL,CAAW3I,UAAX,CAAsB+K,UAAtB,EAAkC,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAnD,EAA+D,WAA/D;AACH;AACJ,SA9LD,CA+LA;AACA;AACA;AACA;AACA;AACA;AACA;AArMA,aAsMK;AACDjL,UAAAA,KAAK,CAAC6Q,IAAN,CAAW,KAAK1H,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAAX;AACH;AACJ;AACJ,KA7uIkB;;AAAA,SA+uInB2O,gBA/uImB,GA+uIA,MAAM;AACrB;AACA,UAAI,KAAKpV,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,wBAApC,EAA8D;AAC1D,aAAKtG,KAAL,CAAWvH,oBAAX,CAAgC,KAAKuH,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjD,EAA2D,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAA5E;AACH,OAFD,MAGK;AACD,YAAIyH,sBAAsB,GAAG,EAA7B;AACA,YAAIE,oBAAoB,GAAG,EAA3B;AACA,YAAI3C,SAAS,GAAG,EAAhB;AACA,YAAIuO,aAAa,GAAG,KAAK1V,KAAL,CAAW8H,cAA/B;;AACA,YAAI,KAAKzH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAA5B,IAA6C,KAAKtV,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAA5B,CAA0CxP,MAA1C,KAAqD,CAAtG,EAAyG;AACrG,cAAI,KAAKnG,KAAL,CAAWmH,SAAX,IAAwB,KAAKnH,KAAL,CAAWmH,SAAX,CAAqBhB,MAArB,GAA8B,CAA1D,EAA6D;AACzD,gBAAIyP,MAAM,GAAG,KAAK5V,KAAL,CAAWmH,SAAX,CAAqB0O,MAArB,CAA4B,CAACC,CAAD,EAAI1L,KAAJ,KAAc;AACnD,qBAAO,KAAKpK,KAAL,CAAWmH,SAAX,CAAqB4O,OAArB,CAA6BD,CAA7B,MAAoC1L,KAA3C;AACH,aAFY,CAAb;AAGA,gBAAI4L,SAAS,GAAG,KAAKhW,KAAL,CAAW4J,sBAAX,CAAkCiM,MAAlC,CAAyC,CAACC,CAAD,EAAI1L,KAAJ,KAAc;AACnE,qBAAO,KAAKpK,KAAL,CAAW4J,sBAAX,CAAkCmM,OAAlC,CAA0CD,CAA1C,MAAiD1L,KAAxD;AACH,aAFe,CAAhB;AAGA,gBAAI6L,IAAI,GAAG,KAAKjW,KAAL,CAAW8J,oBAAX,CAAgC+L,MAAhC,CAAuC,CAACC,CAAD,EAAI1L,KAAJ,KAAc;AAC5D,qBAAO,KAAKpK,KAAL,CAAW8J,oBAAX,CAAgCiM,OAAhC,CAAwCD,CAAxC,MAA+C1L,KAAtD;AACH,aAFU,CAAX;AAIAjD,YAAAA,SAAS,GAAGyO,MAAM,CAACxI,GAAP,CAAWC,CAAC,IAAIA,CAAhB,EAAmBgE,IAAnB,CAAwB,GAAxB,CAAZ;AACAzH,YAAAA,sBAAsB,GAAGoM,SAAS,CAAC5I,GAAV,CAAcC,CAAC,IAAIA,CAAnB,EAAsBgE,IAAtB,CAA2B,GAA3B,CAAzB;AACAvH,YAAAA,oBAAoB,GAAGmM,IAAI,CAAC7I,GAAL,CAASC,CAAC,IAAIA,CAAd,EAAiBgE,IAAjB,CAAsB,GAAtB,CAAvB;AACA,gBAAI7O,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AACA,kBAAMI,UAAU,GAAG;AACnB;AACA;AACA;AACIC,cAAAA,SAAS,EAAE;AACPwE,gBAAAA,MAAM,EAAE,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBiH,MADlB;AAEPC,gBAAAA,SAAS,EAAEnE,MAAM,CAACmE,SAAD,CAFV;AAGPyC,gBAAAA,sBAAsB,EAAEA,sBAHjB;AAIPE,gBAAAA,oBAAoB,EAAEA,oBAJf;AAKP;AACA;AACA7D,gBAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA6B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAAzD,IAAmF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAA/I,GACV,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAD5C,GAC2D,CAAC,CARrE;AASPyD,gBAAAA,mBAAmB,EAAE,KAAKrJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAjJ,IACd,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAVtD;AAWP2C,gBAAAA,GAAG,EAAE,KAAK3J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAXE;AAYP5C,gBAAAA,kBAAkB,EAAE,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqDvC,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAZxE;AAaPtD,gBAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAb7G;AAcPY,gBAAAA,kBAAkB,EAAE,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAdhH;AAeP6C,gBAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EAfxJ;AAgBP7E,gBAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAhBpG;AAiBPE,gBAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAjB7G;AAkBPwB,gBAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAlB5H;AAmBPC,gBAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAnBhI;AAoBPC,gBAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KApBhJ;AAqBP3F,gBAAAA,KAAK,EAAEM,GAAG,CAACJ,QArBJ;AAsBPE,gBAAAA,GAAG,EAAEE,GAAG,CAACD,MAtBF;AAuBP;AACA+F,gBAAAA,UAAU,EAAE,KAxBL;AAyBPC,gBAAAA,WAAW,EAAE,KAzBN;AA0BP5F,gBAAAA,KAAK,EAAE,CA1BA;AA2BPM,gBAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QA3BpB;AA4BPkC,gBAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CA5B/K;AA6BPiC,gBAAAA,QAAQ,EAAE,KAAKnG,KAAL,CAAWJ,KAAX,CAAiB2P,SAAjB,KAA+B,MAA/B,GAAwC,aAAxC,GAAwD,KAAKvP,KAAL,CAAWJ,KAAX,CAAiB2P,SAAjB,KAA+B,QAA/B,GAA0C,cAA1C,GAA2D,cA7BtH;AA8BPR,gBAAAA,UAAU,EAAEhI,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CA9Bb;AA+BPR,gBAAAA,mBAAmB,EAAE,KAAKzJ,KAAL,CAAW8H,cAAX,IAA6B,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B2B,mBAAvD,GAA6E,KAAKzJ,KAAL,CAAW8H,cAAX,CAA0B2B,mBAA1B,CAA8C5F,KAA3H,GAAmI,CAAC,CA/BlJ;AAgCPqS,gBAAAA,qBAAqB,EAAE,KAAKlW,KAAL,CAAW8H,cAAX,IAA6B,KAAK9H,KAAL,CAAW8H,cAAX,CAA0BqO,kBAAvD,IAA6E,KAAKnW,KAAL,CAAW8H,cAAX,CAA0BqO,kBAA1B,KAAiDpa,iBAAiB,CAAC2P,GAAhJ,GACnB,KAAKrL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDkR,kBAAhD,KAAuEpa,iBAAiB,CAAC2P,GAA5I,GAAkJ3P,iBAAiB,CAAC0L,EAApK,GAAyK1L,iBAAiB,CAAC2P,GADxK,GAEnB,KAAKrL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDkR,kBAlChG;AAmCPjM,gBAAAA,eAAe,EAAE,KAAK7J,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDkF,eAnC7G;AAoCPkM,gBAAAA,kBAAkB,EAAEhP,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDmR,kBAApG,CAAR,IAAmIra,iBAAiB,CAAC0L,EApClK;AAqCP4O,gBAAAA,oBAAoB,EAAEjP,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDqR,oBAApG,CAAR,IAAqIta,iBAAiB,CAAC0L,EArCtK;AAqC0K;AACjLT,gBAAAA,SAAS,EAAE,KAAKA,SAtCT,CAsCqB;;AAtCrB,eAJI;AA4Cf/D,cAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QA5CZ;AA6CfuP,cAAAA,SAAS,EAAE,SA7CI;AA8CfC,cAAAA,QAAQ,EAAE,SA9CK;AA+CfjC,cAAAA,SAAS,EAAE,KAAKvP,KAAL,CAAWJ,KAAX,CAAiB2P,SA/Cb;AAgDf5I,cAAAA,SAAS,EAAE,KAAKA,SAhDD,CAgDY;;AAhDZ,aAAnB;;AAkDA,gBAAI,KAAK3G,KAAL,CAAWJ,KAAX,CAAiBsI,WAArB,EAAkC;AAC9B9F,cAAAA,UAAU,CAACC,SAAX,CAAqB,cAArB,IAAuC,KAAKrC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAAhD,KAAkEzL,iBAAiB,CAAC2P,GAAnH,GAAyH,KAAKrL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAApL,GAAwM,CAAC,CAAhP;AACAhK,cAAAA,UAAU,CAACC,SAAX,CAAqB,YAArB,IAAqC,IAArC;AACH;;AACD,kBAAMP,UAAU,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAApC;;AACA,gBAAI/G,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8E,KAAKrP,KAAL,CAAWJ,KAAX,CAAiByG,YAA/F,CAAb,EAA2H;AAEvH,oBAAMxC,UAAU,GAAG;AACfC,gBAAAA,QAAQ,EAAE/H,cADK;AAEfyE,gBAAAA,IAAI,EAAE;AACFsN,kBAAAA,SAAS,EAAE,IADT;AAEFwB,kBAAAA,UAAU,EAAE;AAAElN,oBAAAA,UAAF;AAAcN,oBAAAA,UAAd;AAA0BuT,oBAAAA;AAA1B,mBAFV;AAGF9F,kBAAAA,SAAS,EAAE,KAAKvP,KAAL,CAAWJ,KAAX,CAAiB2P,SAH1B;AAIFjJ,kBAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAJ3B;AAKFmI,kBAAAA,YAAY,EAAE,KAAKzO,KAAL,CAAWJ,KAAX,CAAiByG;AAL7B;AAFS,eAAnB;AAUA,mBAAKrG,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,aAbD,MAcK;AACD,kBAAI,KAAK7D,KAAL,CAAWJ,KAAX,CAAiBuI,aAArB,EAAoC;AAChC,qBAAKnI,KAAL,CAAW7H,uBAAX,CAAmCiK,UAAU,CAACC,SAA9C,EAAyD,KAAKrC,KAAL,CAAWJ,KAAX,CAAiBkC,UAA1E;AACH,eAFD,MAGK,IAAI,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBsI,WAArB,EAAkC;AAEnC,qBAAKlI,KAAL,CAAW5H,oBAAX,CAAgCgK,UAAU,CAACC,SAA3C,EAAsD,KAAKrC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAvE;AACH,eAHI,MAIA;AACD,qBAAK9B,KAAL,CAAWvI,yBAAX,CAAqC2K,UAAU,CAACC,SAAhD,EAA2D,KAAKrC,KAAL,CAAWJ,KAAX,CAAiBkC,UAA5E,EAAwFuT,aAAxF;AACH;AACJ;AACJ,WAhGD,MAiGK;AACDxe,YAAAA,KAAK,CAAC6Q,IAAN,CAAW,KAAK1H,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA9B,CAAX;AACH;AACJ,SArGD,MAsGK;AACD5P,UAAAA,KAAK,CAAC6Q,IAAN,CAAW,KAAK1H,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAAX;AACH;AACJ;AAEJ,KAp2IkB;;AAAA,SAgmJnBwP,YAhmJmB,GAgmJJ,MAAM;AACjB,UAAG,KAAKjW,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH,cAAMrE,UAAU,GAAG;AACfC,UAAAA,SAAS,EAAE;AAAEO,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC;AAA7B,WADI;AAEf2H,UAAAA,GAAG,EAAE,KAAK3J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAFU;AAGfsM,UAAAA,QAAQ,EAAE,IAHK;AAIftQ,UAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAJvD;AAKfuQ,UAAAA,WAAW,EAAE,KAAKnW,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SALpD;AAMf5F,UAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eANrG;AAOfd,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAPZ;AAQfF,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AARd,SAAnB;AAUA,aAAK9B,KAAL,CAAWlH,kBAAX,CAA8BsJ,UAA9B;AACH;AACJ,KAhnJkB;;AAAA,SAknJnBjI,kBAlnJmB,GAknJGiI,UAAD,IAAgB;AACjC,UAAGA,UAAU,CAACjI,kBAAX,CAA8B6M,kBAA9B,KAAqDtL,iBAAiB,CAACoN,KAAvE,IAAgF1G,UAAU,CAACjI,kBAAX,CAA8B6M,kBAA9B,KAAqDtL,iBAAiB,CAAC+T,UAA1J,EAAsK;AAClK,YAAIlM,cAAc,GAAG;AACjBlB,UAAAA,SAAS,EAAE;AACPqB,YAAAA,eAAe,EAAE,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAD7G;AAEPnB,YAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAFpG;AAGPE,YAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAH7G;AAIP;AACAwB,YAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAL5H;AAMPhD,YAAAA,kBAAkB,EAAE,KAAKtE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBANhH;AAOPqH,YAAAA,YAAY,EAAE,KAAK3L,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA5B,GAAgD,KAAKpM,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA5E,GAAgG,CAAC,CAPxG;AAQPuC,YAAAA,eAAe,EAAE1Q,UAAU,CAACmT,SARrB;AASPhI,YAAAA,mBAAmB,EAAEhH,UAAU,CAACjI,kBAAX,CAA8BiP,mBAT5C;AAUPxD,YAAAA,cAAc,EAAExD,UAAU,CAACjI,kBAAX,CAA8ByL,cAVvC;AAWPyD,YAAAA,mBAAmB,EAAEjH,UAAU,CAACjI,kBAAX,CAA8B6M,kBAX5C;AAYPpE,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAZpB;AAaPkC,YAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC;AAb/K,WADM;AAgBjB0B,UAAAA,cAAc,EAAExD,UAAU,CAACjI,kBAAX,CAA8ByL,cAhB7B;AAiBjBwD,UAAAA,mBAAmB,EAAEhH,UAAU,CAACjI,kBAAX,CAA8BiP,mBAjBlC;AAkBjBpH,UAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QAlBV;AAmBjBF,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAnBZ;AAoBjB2F,UAAAA,cAAc,EAAE,KAAK9H,KAAL,CAAW8H,cApBV,CAqBjB;;AArBiB,SAArB;AAuBA,aAAKzH,KAAL,CAAW7F,kBAAX,CAA8BoJ,cAA9B;AACH,OAzBD,MAyBO;AACH1M,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KA/oJkB;;AAAA,SAipJnB2P,aAjpJmB,GAipJH,MAAM;AAClB,UAAG,KAAKpW,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH,YAAI,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAACoN,KAAnG,EAA0G;AACtG,cAAI1G,UAAU,GAAG;AACbwD,YAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cADzD;AAEb0D,YAAAA,SAAS,EAAE,KAAKtJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SAFpD;AAGbE,YAAAA,sBAAsB,EAAE,KAAKxJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD2D,sBAHjE;AAIbE,YAAAA,oBAAoB,EAAE,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD6D,oBAJ/D;AAKb1H,YAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QALd;AAMbF,YAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AANhB,WAAjB;AAQA,eAAK9B,KAAL,CAAW3G,cAAX,CAA0B+I,UAA1B;AACH,SAVD,MAUO;AACHvL,UAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAAX;AACH;AACJ;AACJ,KAnqJkB;;AAAA,SAoqJnB5M,oBApqJmB,GAoqJI,MAAM;AACzB,UAAG,KAAKmG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH;AACA,YAAIrE,UAAU,GAAG;AACbwD,UAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cADzD;AAEb0D,UAAAA,SAAS,EAAE,KAAKtJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDyD,SAFpD;AAGbE,UAAAA,sBAAsB,EAAE,KAAKxJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD2D,sBAHjE;AAIbE,UAAAA,oBAAoB,EAAE,KAAK1J,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsD6D,oBAJ/D;AAKb1H,UAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QALd;AAMbF,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UANhB;AAObwE,UAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B;AAPC,SAAjB;AASA,aAAKzG,KAAL,CAAWnG,oBAAX,CAAgCuI,UAAhC,EAXG,CAYH;AACA;AACA;AACH;AACJ,KAvrJkB;;AAAA,SAyrJnBiU,WAzrJmB,GAyrJL,MAAM;AAChB,YAAMxS,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AAAE8V,UAAAA,gBAAgB,EAAE,IAApB;AAA0BlQ,UAAAA,SAAS,EAAE,IAArC;AAA2CmQ,UAAAA,QAAQ,EAAE,IAArD;AAA2DtO,UAAAA,UAAU,EAAE,KAAvE;AAA8EC,UAAAA,WAAW,EAAE,KAA3F;AAAkGC,UAAAA,aAAa,EAAE;AAAjH;AAFS,OAAnB;AAIA,WAAKnI,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,KA/rJkB;;AAAA,SAisJnB2S,iBAjsJmB,GAisJC,MAAM;AACtB,UAAG,KAAKxW,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH,cAAMrE,UAAU,GAAG;AACfC,UAAAA,SAAS,EAAE;AACPO,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QADpB;AAEP4D,YAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD;AAF/D,WADI;AAKf9D,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AALd,SAAnB;AAOA,aAAK9B,KAAL,CAAW7G,iBAAX,CAA6BiJ,UAA7B;AACH;AACJ,KA9sJkB;;AAAA,SAgtJnBqU,yBAhtJmB,GAgtJUC,UAAD,IAAgB;AACxC,UAAG,KAAK1W,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAApJ,EAAsJ;AAClJjP,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH,OAFD,MAEO;AACH,cAAMrE,UAAU,GAAG;AACfC,UAAAA,SAAS,EAAE;AACPO,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QADpB;AAEP4D,YAAAA,cAAc,EAAE,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAF/D;AAGP8Q,YAAAA,UAAU,EAAEA;AAHL,WADI;AAMf5U,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AANd,SAAnB;AAQA,aAAK9B,KAAL,CAAWzG,yBAAX,CAAqC6I,UAArC;AACH;AACJ,KA9tJkB;;AAAA,SAguJnBuU,UAhuJmB,GAguJN,MAAM;AACf,WAAKhQ,SAAL,CAAeC,OAAf,CAAuBpD,KAAvB,GAA+B,EAA/B;AACA,aAAO,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B,cAA5B,CAAP;AAEA,WAAK9B,KAAL,CAAWJ,KAAX,CAAiBiH,MAAjB,GAA0B,KAA1B;AACA,UAAI;AAAEpC,QAAAA,YAAF;AAAgBC,QAAAA,UAAhB;AAA4BC,QAAAA,mBAA5B;AAAiDE,QAAAA,gBAAjD;AAAmEC,QAAAA,mBAAnE;AACAI,QAAAA,qBADA;AACuBH,QAAAA,wBADvB;AAEA;AACAH,QAAAA;AAHA,UAGwB,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAH7C;AAIA,UAAIA,UAAU,GAAG,EACb,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UADP;AACmB2C,QAAAA,YADnB;AACiCC,QAAAA,UADjC;AAC6CC,QAAAA,mBAD7C;AACkEE,QAAAA,gBADlE;AACoFC,QAAAA,mBADpF;AACyGI,QAAAA,qBADzG;AACgIH,QAAAA,wBADhI;AAEb;AACAH,QAAAA;AAHa,OAAjB;AAKA,UAAIvC,SAAS,GAAG;AACZyE,QAAAA,SAAS,EAAE,GADC;AAEZS,QAAAA,cAAc,EAAGzC,mBAAmB,IAAIA,mBAAmB,CAACyC,cAA5C,IAA+D,KAFnE;AAGZC,QAAAA,sBAAsB,EAAG1C,mBAAmB,IAAIA,mBAAmB,CAAC0C,sBAA5C,IAAuE,KAHnF;AAIZ9D,QAAAA,eAAe,EAAGiB,mBAAmB,IAAIA,mBAAmB,CAACjB,eAA5C,IAAgE,CAAC,CAJtE;AAKZnB,QAAAA,YAAY,EAAGsC,gBAAgB,IAAIA,gBAAgB,CAACtC,YAAtC,IAAuD,CAAC,CAL1D;AAMZE,QAAAA,eAAe,EAAGqC,mBAAmB,IAAIA,mBAAmB,CAACrC,eAA5C,IAAgE,CAAC,CANtE;AAOZ6B,QAAAA,kBAAkB,EAAGM,mBAAmB,IAAIA,mBAAmB,CAACN,kBAA5C,IAAmE,CAAC,CAP5E;AAQZ6C,QAAAA,aAAa,EAAEJ,QAAQ,CAACnC,mBAAmB,IAAIA,mBAAmB,CAACuC,aAA5C,CAAR,IAAsEzL,iBAAiB,CAAC0L,EAR3F;AAUZJ,QAAAA,kBAAkB,EAAE9B,qBAAqB,KAAMA,qBAAqB,CAAC8B,kBAAtB,KAA6CC,SAA9C,IAA6D/B,qBAAqB,CAAC8B,kBAAtB,KAA6C,GAA/G,CAArB,GAA4IrE,MAAM,CAACuC,qBAAqB,CAAC8B,kBAAvB,CAAN,GAAmD,GAAnD,GAAyDrE,MAAM,CAACjH,iBAAiB,CAACwL,QAAnB,CAA3M,GAA0O,IAVlP;AAWZG,QAAAA,mBAAmB,EAAEtC,wBAAwB,GAAGA,wBAAwB,CAACsC,mBAAzB,IAAgD,CAAC,CAApD,GAAwD,IAXzF;AAYZpD,QAAAA,oBAAoB,EAAEc,wBAAwB,IAAIA,wBAAwB,CAACuC,0BAArD,GAAkF3E,MAAM,CAACoC,wBAAwB,CAACuC,0BAA1B,CAAxF,GAAgJ,CAAC,CAZ3J;AAaZ;AACA1E,QAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAdf;AAeZkC,QAAAA,0BAA0B,EAAG,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC;AAf1K,OAAhB;;AAiBA,UAAI7B,SAAS,CAACqB,eAAV,KAA8B,CAAC,CAA/B,IAAoCrB,SAAS,CAACE,YAAV,KAA2B,CAAC,CAAhE,IAAqEF,SAAS,CAACI,eAAV,KAA8B,CAAC,CAApG,IACGJ,SAAS,CAAC2E,kBAAV,KAAiC,IADpC,IAC4C3E,SAAS,CAACgF,mBAAV,KAAkC,CAAC,CAD/E,IACoFhF,SAAS,CAAC4B,oBAAV,KAAmC,IADvH,CAEA;AAFA,SAGG5B,SAAS,CAACiC,kBAAV,KAAiC,CAAC,CAHzC,EAIE;AACE,YAAInC,GAAG,GAAGvH,wBAAwB,CAAC6J,YAAD,EAAeC,UAAf,EAA2B,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5C,CAAlC;AACAK,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAqBF,GAAG,CAACJ,QAAzB;AACAM,QAAAA,SAAS,CAAC,KAAD,CAAT,GAAmBF,GAAG,CAACD,MAAvB;AACA,YAAIE,UAAU,GAAG;AACbN,UAAAA,UADa;AAEbO,UAAAA;AAFa,SAAjB;AAIA,aAAKrC,KAAL,CAAWjI,iBAAX,CAA6BqK,UAA7B,EAAwC,KAAKzC,KAAL,CAAW8H,cAAnD,EAAkE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAnF,EAAkG,KAAKzH,KAAL,CAAWJ,KAA7G;AACH,OAbD,MAaO;AACH/I,QAAAA,KAAK,CAAC6Q,IAAN,CAAW,KAAK1H,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KA/wJkB;;AAAA,SAixJnBsH,UAjxJmB,GAixJN,MAAM;AACf,UAAID,SAAS,GAAG,KAAK9N,KAAL,CAAWJ,KAAX,CAAiBkO,SAAjC;AACA,UAAI1H,SAAS,GAAG,KAAKpG,KAAL,CAAWJ,KAAX,CAAiBwG,SAAjC;AACA,UAAIkQ,gBAAgB,GAAG,KAAKtW,KAAL,CAAWJ,KAAX,CAAiB0W,gBAAxC;AACA,UAAI7O,cAAc,GAAG,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAtC;AACA,UAAI8O,QAAQ,GAAG,KAAKvW,KAAL,CAAWJ,KAAX,CAAiB2W,QAAhC;AACA,UAAItO,UAAU,GAAG,KAAKjI,KAAL,CAAWJ,KAAX,CAAiBqI,UAAlC;AACA,UAAIC,WAAW,GAAG,KAAKlI,KAAL,CAAWJ,KAAX,CAAiBsI,WAAnC;AACA,UAAIC,aAAa,GAAG,KAAKnI,KAAL,CAAWJ,KAAX,CAAiBuI,aAArC;AACA,UAAIyO,gBAAgB,GAAG,KAAK5W,KAAL,CAAWJ,KAAX,CAAiBgX,gBAAxC;AACA,UAAInI,YAAY,GAAG,KAAKzO,KAAL,CAAWJ,KAAX,CAAiB6O,YAApC;AACA,UAAIT,SAAS,GAAG,KAAKhO,KAAL,CAAWJ,KAAX,CAAiBoO,SAAjC;AACA,UAAI1H,UAAU,GAAG,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAlC;AACA,UAAIuQ,gBAAgB,GAAG,KAAK7W,KAAL,CAAWJ,KAAX,CAAiBiX,gBAAxC;AACA,UAAIC,cAAc,GAAG,KAAK9W,KAAL,CAAWJ,KAAX,CAAiBkX,cAAtC;AACA,UAAIC,uBAAuB,GAAG,KAAK/W,KAAL,CAAWJ,KAAX,CAAiBmX,uBAA/C;AACA,UAAIC,oBAAoB,GAAG,KAAKhX,KAAL,CAAWJ,KAAX,CAAiBoX,oBAA5C;AACA,UAAIC,0BAA0B,GAAG,KAAKjX,KAAL,CAAWJ,KAAX,CAAiBqX,0BAAlD;AACA,UAAIC,uBAAuB,GAAG,KAAKlX,KAAL,CAAWJ,KAAX,CAAiBsX,uBAA/C;AACA,UAAIC,eAAe,GAAG,KAAKnX,KAAL,CAAWJ,KAAX,CAAiBuX,eAAvC;AACA,UAAIC,oBAAoB,GAAG,KAAKpX,KAAL,CAAWJ,KAAX,CAAiBwX,oBAA5C;AACA,UAAIxY,kBAAkB,GAAE,KAAKoB,KAAL,CAAWJ,KAAX,CAAiBhB,kBAAzC;AACA,UAAIyY,aAAa,GAAG,KAAKrX,KAAL,CAAWJ,KAAX,CAAiByX,aAArC,CAtBe,CAsBqC;;AACpD,YAAM/E,YAAY,GAAG,KAAK3S,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,YAA1B,KAA2C,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,YAA1B,EAAwCrC,YAAxG;AACA,YAAM6I,oBAAoB,GAAG,KAAK3X,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,oBAA1B,KAAmD,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,oBAA1B,EAAgDrC,YAAhI,CAxBe,CAyBf;;AACA,UAAI,KAAKzO,KAAL,CAAWJ,KAAX,CAAiBkO,SAArB,EAAgC;AAC5B,YAAI,KAAK9N,KAAL,CAAWJ,KAAX,CAAiB2P,SAAjB,KAA+B,QAAnC,EAA6C;AACzCzB,UAAAA,SAAS,GAAG,KAAZ,CADyC,CAEzC;;AACAwI,UAAAA,gBAAgB,GAAG,KAAnB;AACAC,UAAAA,QAAQ,GAAG,KAAX;AACAtO,UAAAA,UAAU,GAAG,KAAb;AACAC,UAAAA,WAAW,GAAG,KAAd;AACAC,UAAAA,aAAa,GAAG,IAAhB,CAPyC,CAOlB;;AACvByO,UAAAA,gBAAgB,GAAG,KAAnB;AACAC,UAAAA,gBAAgB,GAAG,KAAnB;AACAE,UAAAA,uBAAuB,GAAG,KAA1B;AACAC,UAAAA,oBAAoB,GAAG,KAAvB,CAXyC,CAY1C;;AACCvP,UAAAA,cAAc,GAAG,EAAjB;AACA7I,UAAAA,kBAAkB,GAAC,KAAnB;AACH,SAfD,MAgBK;AACDyY,UAAAA,aAAa,GAAG,KAAhB;;AACA,cAAI5I,YAAY,KAAKA,YAAY,KAAK6D,YAAjB,IAAiC7D,YAAY,KAAK6I,oBAAvD,CAAhB,EAA8F;AAC1FtJ,YAAAA,SAAS,GAAG,IAAZ;;AACA,gBAAGS,YAAY,KAAK6I,oBAApB,EAAyC;AACrClR,cAAAA,SAAS,GAAG,KAAZ;AACH;AACJ;;AACD,cAAI,KAAKpG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgCW,SAAhC,IAA6C,KAAKjH,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAA7E,CACA;AADA,aAEG,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAFnC,IAGA,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAHhC,IAIA,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAJhC,IAKA,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CALhC,IAMA,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CANpC,EAMiG;AAC7FL,YAAAA,SAAS,GAAG,KAAZ,CAD6F,CAE/F;AACD;;AACD0H,UAAAA,SAAS,GAAG,KAAZ,CAlBC,CAmBD;;AACArG,UAAAA,cAAc,CAAC,eAAD,CAAd,GAAkC,EAAlC;AACAA,UAAAA,cAAc,CAAC,eAAD,CAAd,GAAkC,EAAlC;AACAA,UAAAA,cAAc,CAAC,aAAD,CAAd,GAAgC,EAAhC;AACA7I,UAAAA,kBAAkB,GAAC,KAAnB;AACH;AACJ,OA1CD,CA2CA;AA3CA,WA4CK,IAAI,KAAKoB,KAAL,CAAWJ,KAAX,CAAiBwX,oBAArB,EAA2C;AAC5CA,QAAAA,oBAAoB,GAAG,KAAvB;AACH,OAFI,MAEE,IAAG,KAAKpX,KAAL,CAAWJ,KAAX,CAAiBhB,kBAApB,EAAuC;AAE1CA,QAAAA,kBAAkB,GAAC,KAAnB;AACA0H,QAAAA,UAAU,GAAC,KAAKtG,KAAL,CAAWJ,KAAX,CAAiByM,cAA5B;AAEH,OALM,MAMF;AACDjG,QAAAA,SAAS,GAAI6Q,0BAA0B,KAAK,IAA/B,IAAuCC,uBAAuB,KAAK,IAApE,GAA4E,IAA5E,GAAmF,KAA/F;AACAZ,QAAAA,gBAAgB,GAAG,KAAnB;AACAC,QAAAA,QAAQ,GAAG,KAAX;AACAtO,QAAAA,UAAU,GAAG,KAAb;AACAC,QAAAA,WAAW,GAAG,KAAd;AACAC,QAAAA,aAAa,GAAG,KAAhB;AACAyO,QAAAA,gBAAgB,GAAG,KAAnB;AACAC,QAAAA,gBAAgB,GAAG,KAAnB;AACAE,QAAAA,uBAAuB,GAAGE,0BAA0B,KAAK,IAA/B,GAAsC,IAAtC,GAA6C,KAAvE;AACAD,QAAAA,oBAAoB,GAAGE,uBAAuB,KAAK,IAA5B,GAAmC,IAAnC,GAA0C,KAAjE,CAVC,CAWD;;AACAzP,QAAAA,cAAc,GAAG,EAAjB;AACAqP,QAAAA,cAAc,GAAG7P,SAAjB;AACAgQ,QAAAA,0BAA0B,GAAG,KAA7B;AACAC,QAAAA,uBAAuB,GAAG,KAA1B;AACAC,QAAAA,eAAe,GAAG,KAAlB;AACAvY,QAAAA,kBAAkB,GAAG,KAArB;AACAyY,QAAAA,aAAa,GAAG,IAAhB;AACH,OAjGc,CAkGf;AACA;AACA;AACA;AACA;;;AACA,YAAMxT,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AACF4F,UAAAA,SADE;AACS4H,UAAAA,SADT;AACoBF,UAAAA,SADpB;AAC+BxH,UAAAA,UAD/B;AAC2CmB,UAAAA,cAD3C;AAC2D0G,UAAAA,UAAU,EAAE,IADvE;AAC6EmI,UAAAA,gBAD7E;AAC+FC,UAAAA,QAD/F;AACyGtO,UAAAA,UADzG;AACqHC,UAAAA,WADrH;AACkIC,UAAAA,aADlI;AAEFyO,UAAAA,gBAFE;AAEgBC,UAAAA,gBAFhB;AAEkCC,UAAAA,cAFlC;AAEkDC,UAAAA,uBAFlD;AAE2EC,UAAAA,oBAF3E;AAEiGC,UAAAA,0BAFjG;AAE6HC,UAAAA,uBAF7H;AAEsJC,UAAAA,eAFtJ;AAEuKC,UAAAA,oBAFvK;AAGFxY,UAAAA,kBAHE;AAGkByY,UAAAA;AAHlB;AAFS,OAAnB;AAQA,WAAKrX,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,KAj4JkB;;AAAA,SAm4JnBgK,cAn4JmB,GAm4JF,MAAM;AACnB,UAAIC,SAAS,GAAG,KAAK9N,KAAL,CAAWJ,KAAX,CAAiBkO,SAAjC;AAEA,UAAIE,SAAS,GAAG,KAAKhO,KAAL,CAAWJ,KAAX,CAAiBoO,SAAjC;AACA,UAAIvG,cAAc,GAAG,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAtC;AACA,UAAIwG,eAAe,GAAG,KAAKjO,KAAL,CAAWJ,KAAX,CAAiBqO,eAAvC,CALmB,CAMnB;;AACA,UAAI,KAAKjO,KAAL,CAAWJ,KAAX,CAAiBkO,SAArB,EAAgC;AAC5BA,QAAAA,SAAS,GAAG,KAAZ;AACH,OAFD,MAEO;AACHE,QAAAA,SAAS,GAAG,KAAZ;AACAC,QAAAA,eAAe,GAAG,KAAlB;AACAxG,QAAAA,cAAc,GAAG,EAAjB;AACH;;AAED,YAAM5D,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AAAEwN,UAAAA,SAAF;AAAavG,UAAAA,cAAb;AAA6B0G,UAAAA,UAAU,EAAE,IAAzC;AAA+CL,UAAAA,SAA/C;AAA0DG,UAAAA;AAA1D;AAFS,OAAnB;AAIA,WAAKjO,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,KAv5JkB;;AAAA,SAy5JnB0T,aAz5JmB,GAy5JH,MAAM;AAClB,UAAInR,SAAS,GAAG,KAAhB;AACA,UAAImC,UAAU,GAAG,KAAjB;AACA,UAAId,cAAc,GAAG,EAArB;AACA,WAAKvH,QAAL,CAAc;AAAEqI,QAAAA,UAAF;AAAcnC,QAAAA,SAAd;AAAyBqB,QAAAA;AAAzB,OAAd;AACH,KA95JkB;;AAAA,SAg6JnB+P,eAh6JmB,GAg6JAnX,KAAD,IAAW;AACzB,UAAIoH,cAAc,GAAG,EAAC,GAAG,KAAK9H,KAAL,CAAW8H;AAAf,WAAkC,EAAvD;;AACA,UAAGpH,KAAK,CAAC8J,MAAN,CAAasN,IAAb,KAAsB,UAAzB,EAAoC;AAChChQ,QAAAA,cAAc,CAACpH,KAAK,CAAC8J,MAAN,CAAaqK,IAAd,CAAd,GAAoCnU,KAAK,CAAC8J,MAAN,CAAauN,OAAb,KAAyB,IAAzB,GAAgC,CAAhC,GAAoC,CAAxE;AACH,OAFD,MAEO;AACHjQ,QAAAA,cAAc,CAACpH,KAAK,CAAC8J,MAAN,CAAaqK,IAAd,CAAd,GAAoCnU,KAAK,CAAC8J,MAAN,CAAa3G,KAAjD;AACH;;AACD,WAAKtD,QAAL,CAAc;AAAEuH,QAAAA;AAAF,OAAd;AACH,KAx6JkB;;AAAA,SA06JnBkQ,2BA16JmB,GA06JW,CAACC,aAAD,EAAgBpL,MAAhB,KAA2B;AACrD;AACA,YAAMlB,WAAW,GAAGtU,OAAO,CAAC6gB,SAAR,CAAkBD,aAAlB,EAAiCpL,MAAjC,CAApB;AACA,YAAMT,kBAAkB,GAAG/U,OAAO,CAAC8gB,OAAR,CAAgBF,aAAhB,CAA3B;AAEA,YAAM/T,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AACF8L,UAAAA,WAAW,EAAEsL,aADX;AAC0B1L,UAAAA,aAAa,EAAEM,MADzC;AACiDlB,UAAAA,WADjD;AAC8DS,UAAAA;AAD9D;AAFS,OAAnB;AAMA,WAAK/L,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB,EAXqD,CAYrD;AACH,KAv7JkB;;AAAA,SAy7JnBkU,gCAz7JmB,GAy7JgB,CAACH,aAAD,EAAgBpL,MAAhB,EAAuBnM,KAAvB,KAAiC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,YAAMiL,WAAW,GAAGtU,OAAO,CAAC6gB,SAAR,CAAkBD,aAAlB,EAAiCpL,MAAjC,CAApB;AACA,YAAMT,kBAAkB,GAAG/U,OAAO,CAAC8gB,OAAR,CAAgBF,aAAhB,CAA3B;AACA,YAAM/T,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAE/H,cADK;AAEfyE,QAAAA,IAAI,EAAE;AACF8L,UAAAA,WAAW,EAAEsL,aADX;AAC0B1L,UAAAA,aAAa,EAAEM,MADzC;AAEFlB,UAAAA,WAFE;AAEWS,UAAAA,kBAFX,CAE6B;;AAF7B;AAFS,OAAnB;AAOA,WAAK/L,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB,EAnBgE,CAoBpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,KA19JkB;;AAAA,SA49JnBmU,kBA59JmB,GA49JG3X,KAAD,IAAW;AAC5B;AACA,YAAMiL,WAAW,GAAG,KAAKtL,KAAL,CAAWJ,KAAX,CAAiB0L,WAArC;;AACA,UAAIA,WAAW,KAAK,EAAhB,IAAsBA,WAAW,KAAKrE,SAAtC,IAAmD,CAACqE,WAAW,CAAC6E,QAAZ,CAAqB,cAArB,CAAxD,EAA8F;AAC1F,cAAM8H,UAAU,GAAG;AACfC,UAAAA,SAAS,EAAE,KAAKlY,KAAL,CAAWJ,KAAX,CAAiBuY,sBADb;AAEfvV,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAFZ;AAGfsJ,UAAAA,WAAW,EAAEA,WAHE,CAIf;;AAJe,SAAnB;AAMA,aAAKtL,KAAL,CAAWvG,2BAAX,CAAuCwe,UAAvC;AACH,OARD,MAQO;AACHphB,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KA1+JkB;;AAAA,SA4+JnB2R,mBA5+JmB,GA4+JI/X,KAAD,IAAW;AAC7B,UAAIgY,WAAW,GAAGhY,KAAK,CAACiY,QAAxB;AACA,YAAMJ,SAAS,GAAG,KAAKlY,KAAL,CAAWJ,KAAX,CAAiBuY,sBAAnC;AACA,UAAIhW,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AACA,YAAMiW,UAAU,GAAG;AACfxT,QAAAA,YAAY,EAAEtC,GAAG,CAACJ,QADH;AAEf2C,QAAAA,UAAU,EAAEvC,GAAG,CAACD,MAFD;AAGfyC,QAAAA,mBAAmB,EAAE,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAHjF;AAIfoB,QAAAA,gBAAgB,EAAE,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAJ3E;AAKfsC,QAAAA,mBAAmB,EAAE,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eALjF;AAMfwC,QAAAA,qBAAqB,EAAE,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBANrF;AAOfF,QAAAA,wBAAwB,EAAE,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAP3F;AAQfiB,QAAAA,8BAA8B,EAAE,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BARlI;AASfpC,QAAAA,UAAU,EAAE,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAAtB,SATG;AAUf8C,QAAAA,mBAAmB,EAAE,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAVjF;AAWfzE,QAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ,KAXH;AAYf6H,QAAAA,cAAc,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,IAAmC,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAApD,IAAsE,EAZvE;AAaf,iBAAStF,GAAG,CAACJ,QAbE;AAcf,eAAOI,GAAG,CAACD,MAdI;AAef,qBAAa,GAfE;AAgBf,2BAAoB,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAApG,IAAwH,CAAC,CAhB7H;AAiBf,wBAAgBqD,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAA9F,CAAR,IAAuH,CAAC,CAjBzH;AAkBf,2BAAmBwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAApG,CAAR,IAAgI,CAAC,CAlBrI;AAmBf,8BAAsB,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqD,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAvG,GAA4HrE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAAN,GAA+E,GAA/E,GAAqFrE,MAAM,CAACjH,iBAAiB,CAAC6c,OAAnB,CAAvN,GAAqP,IAnB5P;AAoBf,+BAAuB,KAAKvY,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,GAAuD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDsC,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IApBhJ;AAqBf,gCAAwB,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAA7G,GAA0I3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAAtD,CAAhJ,GAAoO,IArB7O;AAsBf,0BAAmB,KAAKtH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAtB1H;AAuBf,oBAAY,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBoC,QAvBd;AAwBf;AACA,sCAA+B,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CAzBzK;AA0Bf,sBAAc,IA1BC;AA2Bf,mBAAW,IA3BI;AA4Bf,8BAAsB6C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,IAAmI,CAAC,CA5B3I;AA6BfgC,QAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CA7BG;AA8BfU,QAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EA9BhJ;AA+BfxE,QAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QA/BZ;AAgCfqW,QAAAA,WAAW,EAAEhY,KAAK,CAACiY,QAhCJ;AAiCfE,QAAAA,UAAU,EAAEnY,KAAK,CAACiY,QAAN,CAAeE,UAjCZ,CAkCf;;AAlCe,OAAnB,CAJ6B,CAwC7B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,WAAKxY,KAAL,CAAWrG,oBAAX,CAAgCse,UAAhC;AACH,KArjKkB;;AAAA,SAujKnBQ,aAvjKmB,GAujKFpY,KAAD,IAAW;AACvB,UAAI6N,eAAe,GAAG,KAAKlO,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoM,eAA5B,IAA+C,EAArE;AACAA,MAAAA,eAAe,CAAC7N,KAAK,CAAC8J,MAAN,CAAaqK,IAAd,CAAf,GAAqCnU,KAAK,CAAC8J,MAAN,CAAa3G,KAAlD;AACA,YAAMkV,WAAW,GAAG;AAChB5U,QAAAA,QAAQ,EAAE/H,cADM;AAEhByE,QAAAA,IAAI,EAAE;AAAE0N,UAAAA;AAAF;AAFU,OAApB;AAIA,WAAKlO,KAAL,CAAW1I,WAAX,CAAuBohB,WAAvB;AACH,KA/jKkB;;AAAA,SAikKnBC,aAjkKmB,GAikKH,MAAM;AAClB,UAAIlK,YAAY,GAAG,KAAKzO,KAAL,CAAWJ,KAAX,CAAiB6O,YAApC;AACA,YAAM6D,YAAY,GAAG,KAAK3S,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,YAA1B,KAA2C,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,YAA1B,EAAwCrC,YAAxG;AACA,UAAImK,SAAS,GAAG,EAAhB;;AACA,UAAInK,YAAY,IAAIA,YAAY,KAAK6D,YAArC,EAAmD;AAC/CsG,QAAAA,SAAS,GAAG,WAAZ;AACH,OAFD,MAGK;AACDA,QAAAA,SAAS,GAAG,WAAZ;AACH;;AACD,YAAMxW,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACP,sBAAY,EACR,GAAG,KAAKrC,KAAL,CAAWJ,KAAX,CAAiBoC,QADZ;AAER6W,YAAAA,OAAO,EAAE,KAAKlZ,KAAL,CAAW8H,cAAX,CAA0B,eAA1B,CAFD;AAGRqR,YAAAA,WAAW,EAAE,KAAKnZ,KAAL,CAAW8H,cAAX,CAA0B,aAA1B,KAA4C,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B,aAA1B,EAAyCjE,KAH1F;AAIRuV,YAAAA,iBAAiB,EAAE,KAAKpZ,KAAL,CAAW8H,cAAX,CAA0B,aAA1B,KAA4C,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B,aAA1B,EAAyC2K;AAJhG,WADL;AAQP4G,UAAAA,QAAQ,EAAE,KAAKrZ,KAAL,CAAW8H,cAAX,CAA0B,eAA1B;AARH,SADI;AAWf6H,QAAAA,UAAU,EAAE,KAAKtP,KAAL,CAAWJ,KAAX,CAAiB0P;AAXd,OAAnB;AAaA,WAAKtP,KAAL,CAAW9G,uBAAX,CAAmCkJ,UAAnC,EAA+CwW,SAA/C;AACH,KAzlKkB;;AAAA,SA2lKnBK,eA3lKmB,GA2lKD,CAAC5Y,KAAD,EAAQiC,KAAR,EAAe4W,WAAf,KAA+B;AAC7C,YAAMxB,OAAO,GAAGrX,KAAK,CAAC8Y,cAAN,CAAqBhP,MAArB,CAA4BuN,OAA5C;;AACA,UAAIpV,KAAK,KAAK2E,SAAd,EAAyB;AACrB,aAAKtH,KAAL,CAAWY,UAAX,CAAsBC,IAAtB,CAA2BuM,GAA3B,CAA+BpJ,IAAI,IAAI;AACnC,cAAIA,IAAI,CAACmD,SAAL,KAAmBzG,KAAK,CAACiY,QAAN,CAAexR,SAAtC,EAAiD;AAC7CnD,YAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACH;AAEJ,SALD;AAMA,YAAI2B,QAAQ,GAAGhZ,KAAK,CAACiY,QAAN,CAAexR,SAA9B;AACA,YAAIwS,eAAe,GAAGjZ,KAAK,CAACiY,QAAN,CAAegB,eAArC;AACA,YAAI3E,eAAe,GAAGtU,KAAK,CAACiY,QAAN,CAAe3D,eAArC;AACA,cAAM+D,WAAW,GAAG;AAChB5U,UAAAA,QAAQ,EAAE/H,cADM;AAEhByE,UAAAA,IAAI,EAAE;AAAE8Y,YAAAA,eAAF;AAAmB3E,YAAAA;AAAnB;AAFU,SAApB;AAIA,aAAK3U,KAAL,CAAW1I,WAAX,CAAuBohB,WAAvB;AACA,aAAKa,0BAAL,CAAgClZ,KAAhC,EAAuCgZ,QAAvC,EAAiDH,WAAjD;AACH,OAhBD,MAiBK;AACD,YAAI1Y,IAAI,GAAG,EAAX;AACAH,QAAAA,KAAK,CAACmZ,SAAN,CAAgBzM,GAAhB,CAAoBpJ,IAAI,IAAI;AACxBnD,UAAAA,IAAI,CAACyM,IAAL,CAAU;AAAE,yBAAatJ,IAAI,CAACmD;AAApB,WAAV;AACH,SAFD;AAGA,aAAKyS,0BAAL,CAAgClZ,KAAhC,EAAuCG,IAAvC,EAA6C0Y,WAA7C;AACH;AACJ,KArnKkB;;AAAA,SAunKnBK,0BAvnKmB,GAunKU,CAAClZ,KAAD,EAAQgZ,QAAR,EAAkBH,WAAlB,KAAkC;AAC3D,YAAMxB,OAAO,GAAGrX,KAAK,CAAC8Y,cAAN,CAAqBhP,MAArB,CAA4BuN,OAA5C;AACA,UAAI+B,aAAa,GAAG,EAApB;AACA,UAAI3S,SAAS,GAAGuS,QAAQ,KAAKpS,SAAb,GAAyB5G,KAAK,CAACmZ,SAAN,CAAgB,CAAhB,EAAmB1S,SAA5C,GAAwDuS,QAAxE;;AACA,UAAIvS,SAAS,CAAChB,MAAV,KAAqB,CAArB,IAA0BgB,SAAS,CAAChB,MAAV,KAAqBmB,SAAnD,EAA8D;AAC1D,aAAKjH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6C5S,SAA7C,EAAwDiG,GAAxD,CAA4DpJ,IAAI,IAAI;AAEhEA,UAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;;AACA,cAAI,CAAC+B,aAAa,CAACtJ,QAAd,CAAuBxM,IAAI,CAAC4F,sBAA5B,CAAL,EAA0D;AACtDkQ,YAAAA,aAAa,CAACxM,IAAd,CAAmB;AAAE,wCAA0BtJ,IAAI,CAAC4F;AAAjC,aAAnB;AACH;AAEJ,SAPD;AAQA,aAAKvJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAA5B,CAA0CvI,GAA1C,CAA8CvM,IAAI,IAAI;AAClD,cAAIA,IAAI,CAACsG,SAAL,KAAmBA,SAAvB,EAAkC;AAC9BtG,YAAAA,IAAI,CAAC4Y,QAAL,GAAgB1B,OAAhB;AACH;AACJ,SAJD;AAMA,aAAKiC,6BAAL,CAAmCtZ,KAAnC,EAA0CoZ,aAA1C,EAAyDP,WAAzD;AACH,OAhBD,MAiBK;AACDpS,QAAAA,SAAS,CAACiG,GAAV,CAAcvJ,KAAK,IAAI;AACnB,eAAKxD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6ClW,KAAK,CAACsD,SAAnD,EAA8DiG,GAA9D,CAAkEpJ,IAAI,IAAI;AACtEA,YAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;;AACA,gBAAI,CAAC+B,aAAa,CAACtJ,QAAd,CAAuBxM,IAAI,CAAC4F,sBAA5B,CAAL,EAA0D;AACtDkQ,cAAAA,aAAa,CAACxM,IAAd,CAAmB;AAAE,0CAA0BtJ,IAAI,CAAC4F;AAAjC,eAAnB;AACH;AACJ,WALD;AAOH,SARD;AASA,aAAKoQ,6BAAL,CAAmCtZ,KAAnC,EAA0CoZ,aAA1C,EAAyDP,WAAzD;AACH;AACJ,KAxpKkB;;AAAA,SA0pKnBS,6BA1pKmB,GA0pKa,CAACtZ,KAAD,EAAQoZ,aAAR,EAAuBP,WAAvB,KAAuC;AACnE,YAAMxB,OAAO,GAAGrX,KAAK,CAAC8Y,cAAN,CAAqBhP,MAArB,CAA4BuN,OAA5C;AACA,UAAIkC,qBAAqB,GAAGH,aAA5B;;AACA,UAAIA,aAAa,KAAKxS,SAAtB,EAAiC;AAC7B;AACA,YAAI4S,gBAAgB,GAAG5S,SAAvB;AACA,YAAI6S,6BAA6B,GAAG7S,SAApC;AACA,YAAI8S,2BAA2B,GAAG9S,SAAlC;AACA2S,QAAAA,qBAAqB,CAAC7M,GAAtB,CAA0BvJ,KAAK,IAAI;AAC/B,eAAKxD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkY,WAA5B,CAAwCxW,KAAK,CAAC+F,sBAA9C,EAAsEwD,GAAtE,CAA0EpJ,IAAI,IAAI;AAC9EA,YAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACA,gBAAIuC,SAAS,GAAGJ,gBAAgB,KAAK5S,SAArB,GAAiC4S,gBAAjC,GAAoD,KAAKla,KAAL,CAAWmH,SAA/E;AACA,gBAAIoT,sBAAsB,GAAGJ,6BAA6B,KAAK7S,SAAlC,GAA8C6S,6BAA9C,GAA8E,KAAKna,KAAL,CAAW4J,sBAAtH;AACA,gBAAI4Q,oBAAoB,GAAGJ,2BAA2B,KAAK9S,SAAhC,GAA4C8S,2BAA5C,GAA0E,KAAKpa,KAAL,CAAW8J,oBAAhH;AACA,gBAAI2Q,QAAQ,GAAG;AACXtT,cAAAA,SAAS,EAAGmT,SADD;AAEX1Q,cAAAA,sBAAsB,EAAE2Q,sBAFb;AAGXzQ,cAAAA,oBAAoB,EAAE0Q;AAHX,aAAf,CAL8E,CAU9E;AACA;;AACA,gBAAIE,QAAQ,GAAG,KAAKC,WAAL,CAAiB3W,IAAjB,EAAuByW,QAAvB,CAAf;AACAP,YAAAA,gBAAgB,GAAGQ,QAAQ,CAACvT,SAA5B;AACAgT,YAAAA,6BAA6B,GAAGO,QAAQ,CAAC9Q,sBAAzC;AACAwQ,YAAAA,2BAA2B,GAAGM,QAAQ,CAAC5Q,oBAAvC;AACA,mBAAO9F,IAAP;AACH,WAjBD;AAkBH,SAnBD;AAoBA,aAAKzD,QAAL,CAAc;AACV4G,UAAAA,SAAS,EAAEoS,WAAW,KAAK,KAAhB,GAAwB,EAAxB,GAA6BW,gBAD9B;AAEVtQ,UAAAA,sBAAsB,EAAE2P,WAAW,KAAK,KAAhB,GAAwB,EAAxB,GAA6BY,6BAF3C;AAGVrQ,UAAAA,oBAAoB,EAAEyP,WAAW,KAAK,KAAhB,GAAwB,EAAxB,GAA6Ba;AAHzC,SAAd;AAKH,OA9BD,MA+BK;AACD,YAAIF,gBAAgB,GAAG5S,SAAvB;AACA,YAAI6S,6BAA6B,GAAG7S,SAApC;AACA,YAAI8S,2BAA2B,GAAG9S,SAAlC;AACA5G,QAAAA,KAAK,CAACmZ,SAAN,CAAgBzM,GAAhB,CAAoBvJ,KAAK,IACrB,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkY,WAA5B,CAAwCxW,KAAK,CAAC+F,sBAA9C,EAAsEwD,GAAtE,CAA0EpJ,IAAI,IAAI;AAC9EA,UAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACA,cAAIuC,SAAS,GAAGJ,gBAAgB,KAAK5S,SAArB,GAAiC4S,gBAAjC,GAAoD,KAAKla,KAAL,CAAWmH,SAA/E;AACA,cAAIoT,sBAAsB,GAAGJ,6BAA6B,KAAK7S,SAAlC,GAA8C6S,6BAA9C,GAA8E,KAAKna,KAAL,CAAW4J,sBAAtH;AACA,cAAI4Q,oBAAoB,GAAGJ,2BAA2B,KAAK9S,SAAhC,GAA4C8S,2BAA5C,GAA0E,KAAKpa,KAAL,CAAW8J,oBAAhH;AACA,cAAI2Q,QAAQ,GAAG;AACXtT,YAAAA,SAAS,EAAGmT,SADD;AAEX1Q,YAAAA,sBAAsB,EAAE2Q,sBAFb;AAGXzQ,YAAAA,oBAAoB,EAAE0Q;AAHX,WAAf,CAL8E,CAU9E;AACA;;AACA,cAAIE,QAAQ,GAAG,KAAKC,WAAL,CAAiB3W,IAAjB,EAAuByW,QAAvB,CAAf;AACAP,UAAAA,gBAAgB,GAAGQ,QAAQ,CAACvT,SAA5B;AACAgT,UAAAA,6BAA6B,GAAGO,QAAQ,CAAC9Q,sBAAzC;AACAwQ,UAAAA,2BAA2B,GAAGM,QAAQ,CAAC5Q,oBAAvC;AACA,iBAAO9F,IAAP;AACH,SAjBD,CADJ;AAoBA,aAAK3D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6CrZ,KAAK,CAACmZ,SAAN,CAAgB,CAAhB,EAAmB1S,SAAhE,EAA2EiG,GAA3E,CAA+EpJ,IAAI,IAAI;AACnF,cAAItD,KAAK,CAACmZ,SAAN,CAAgB,CAAhB,EAAmBjQ,sBAAnB,KAA8C5F,IAAI,CAAC4F,sBAAvD,EAA+E;AAC3E5F,YAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACH;AACJ,SAJD;AAKA,YAAIlX,IAAI,GAAG,KAAKR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6CrZ,KAAK,CAACmZ,SAAN,CAAgB,CAAhB,EAAmB1S,SAAhE,EAA2EyT,KAA3E,CAAiF5W,IAAI,IAAI;AAChG,iBAAOA,IAAI,CAACyV,QAAL,KAAkB,IAAzB;AACH,SAFU,CAAX;;AAGA,YAAI5Y,IAAI,KAAK,IAAb,EAAmB;AACf,eAAKR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAA5B,CAA0CvI,GAA1C,CAA8CpJ,IAAI,IAAI;AAClD,gBAAItD,KAAK,CAACmZ,SAAN,CAAgB,CAAhB,EAAmB1S,SAAnB,KAAiCnD,IAAI,CAACmD,SAA1C,EAAqD;AACjDnD,cAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACH;AACJ,WAJD;AAKH,SAND,MAOK;AACD,eAAK1X,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAA5B,CAA0CvI,GAA1C,CAA8CpJ,IAAI,IAAI;AAClD,gBAAItD,KAAK,CAACmZ,SAAN,CAAgB,CAAhB,EAAmB1S,SAAnB,KAAiCnD,IAAI,CAACmD,SAA1C,EAAqD;AACjDnD,cAAAA,IAAI,CAACyV,QAAL,GAAgB,KAAhB;AACH;AACJ,WAJD;AAKH;;AACD,aAAKlZ,QAAL,CAAc;AACV4G,UAAAA,SAAS,EAAEoS,WAAW,KAAK,KAAhB,GAAwB,EAAxB,GAA6BW,gBAD9B;AAEVtQ,UAAAA,sBAAsB,EAAE2P,WAAW,KAAK,KAAhB,GAAwB,EAAxB,GAA6BY,6BAF3C;AAGVrQ,UAAAA,oBAAoB,EAAEyP,WAAW,KAAK,KAAhB,GAAwB,EAAxB,GAA6Ba;AAHzC,SAAd;AAKH;AACJ,KAhvKkB;;AAAA,SAkvKnBS,qBAlvKmB,GAkvKMna,KAAD,IAAW;AAC/B,YAAMqX,OAAO,GAAGrX,KAAK,CAAC8Y,cAAN,CAAqBhP,MAArB,CAA4BuN,OAA5C;;AACA,UAAIrX,KAAK,CAACmZ,SAAN,CAAgB1T,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,aAAKnG,KAAL,CAAWY,UAAX,CAAsBC,IAAtB,CAA2BuM,GAA3B,CAA+BpJ,IAAI,IAAI;AACnCA,UAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACA,iBAAO/T,IAAP;AACH,SAHD;AAIA,aAAKsV,eAAL,CAAqB5Y,KAArB,EAA4B,CAA5B,EAA+BqX,OAA/B;AACH,OAND,MAOK;AACD,aAAKxX,QAAL,CAAc;AAAE4G,UAAAA,SAAS,EAAE,EAAb;AAAiByC,UAAAA,sBAAsB,EAAE,EAAzC;AAA6CE,UAAAA,oBAAoB,EAAE;AAAnE,SAAd;AACH;AACJ,KA9vKkB;;AAAA,SAgwKnBgR,oBAhwKmB,GAgwKKpa,KAAD,IAAW;AAC9B,YAAMqX,OAAO,GAAGrX,KAAK,CAAC8Y,cAAN,CAAqBhP,MAArB,CAA4BuN,OAA5C;AACA,WAAK1X,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6CrZ,KAAK,CAACiY,QAAN,CAAexR,SAA5D,EAAuEiG,GAAvE,CAA2EpJ,IAAI,IAAI;AAC/E,YAAIA,IAAI,CAACmD,SAAL,KAAmBzG,KAAK,CAACiY,QAAN,CAAexR,SAAlC,IAA+CnD,IAAI,CAAC4F,sBAAL,KAAgClJ,KAAK,CAACiY,QAAN,CAAe/O,sBAAlG,EAA0H;AACtH5F,UAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACH;AACJ,OAJD;AAKA,UAAIlX,IAAI,GAAG,KAAKR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6CrZ,KAAK,CAACiY,QAAN,CAAexR,SAA5D,EAAuEyT,KAAvE,CAA6E5W,IAAI,IAAI;AAC5F,eAAOA,IAAI,CAAC+W,OAAL,KAAiB,IAAxB;AACH,OAFU,CAAX;;AAGA,UAAIla,IAAI,KAAK,IAAb,EAAmB;AACf,aAAKR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAA5B,CAA0CvI,GAA1C,CAA8CpJ,IAAI,IAAI;AAClD,cAAItD,KAAK,CAACiY,QAAN,CAAexR,SAAf,KAA6BnD,IAAI,CAACmD,SAAtC,EAAiD;AAC7CnD,YAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACH;AACJ,SAJD;AAMA,YAAImC,gBAAgB,GAAG5S,SAAvB;AACA,YAAI6S,6BAA6B,GAAG7S,SAApC;AACA,YAAI8S,2BAA2B,GAAG9S,SAAlC;AAEA,aAAKjH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkY,WAA5B,CAAwC3Z,KAAK,CAACiY,QAAN,CAAe/O,sBAAvD,EAA+EwD,GAA/E,CAAmFpJ,IAAI,IAAI;AACvF,cAAItD,KAAK,CAACiY,QAAN,CAAe/O,sBAAf,KAA0C5F,IAAI,CAAC4F,sBAAnD,EAA2E;AACvE5F,YAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACA,gBAAIuC,SAAS,GAAGJ,gBAAgB,KAAK5S,SAArB,GAAiC4S,gBAAjC,GAAoD,KAAKla,KAAL,CAAWmH,SAA/E;AACA,gBAAIoT,sBAAsB,GAAGJ,6BAA6B,KAAK7S,SAAlC,GAA8C6S,6BAA9C,GAA8E,KAAKna,KAAL,CAAW4J,sBAAtH;AACA,gBAAI4Q,oBAAoB,GAAGJ,2BAA2B,KAAK9S,SAAhC,GAA4C8S,2BAA5C,GAA0E,KAAKpa,KAAL,CAAW8J,oBAAhH;AACA,gBAAI2Q,QAAQ,GAAG;AACXtT,cAAAA,SAAS,EAAGmT,SADD;AAEX1Q,cAAAA,sBAAsB,EAAE2Q,sBAFb;AAGXzQ,cAAAA,oBAAoB,EAAE0Q;AAHX,aAAf,CALuE,CAUvE;AACA;;AACA,gBAAIE,QAAQ,GAAG,KAAKC,WAAL,CAAiB3W,IAAjB,EAAuByW,QAAvB,CAAf;AACAP,YAAAA,gBAAgB,GAAGQ,QAAQ,CAACvT,SAA5B;AACAgT,YAAAA,6BAA6B,GAAGO,QAAQ,CAAC9Q,sBAAzC;AACAwQ,YAAAA,2BAA2B,GAAGM,QAAQ,CAAC5Q,oBAAvC;AACH;AACJ,SAlBD;AAmBA,aAAKvJ,QAAL,CAAc;AACV4G,UAAAA,SAAS,EAAE+S,gBADD;AAEVtQ,UAAAA,sBAAsB,EAAEuQ,6BAFd;AAGVrQ,UAAAA,oBAAoB,EAAEsQ;AAHZ,SAAd;AAKH,OAnCD,MAoCK;AACD,YAAIF,gBAAgB,GAAG5S,SAAvB;AACA,YAAI6S,6BAA6B,GAAG7S,SAApC;AACA,YAAI8S,2BAA2B,GAAG9S,SAAlC;AACA,aAAKjH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkY,WAA5B,CAAwC3Z,KAAK,CAACiY,QAAN,CAAe/O,sBAAvD,EAA+EwD,GAA/E,CAAmFpJ,IAAI,IAAI;AACvF,cAAItD,KAAK,CAACiY,QAAN,CAAe/O,sBAAf,KAA0C5F,IAAI,CAAC4F,sBAAnD,EAA2E;AACvE5F,YAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACA,gBAAIuC,SAAS,GAAGJ,gBAAgB,KAAK5S,SAArB,GAAiC4S,gBAAjC,GAAoD,KAAKla,KAAL,CAAWmH,SAA/E;AACA,gBAAIoT,sBAAsB,GAAGJ,6BAA6B,KAAK7S,SAAlC,GAA8C6S,6BAA9C,GAA8E,KAAKna,KAAL,CAAW4J,sBAAtH;AACA,gBAAI4Q,oBAAoB,GAAGJ,2BAA2B,KAAK9S,SAAhC,GAA4C8S,2BAA5C,GAA0E,KAAKpa,KAAL,CAAW8J,oBAAhH;AACA,gBAAI2Q,QAAQ,GAAG;AACXtT,cAAAA,SAAS,EAAGmT,SADD;AAEX1Q,cAAAA,sBAAsB,EAAE2Q,sBAFb;AAGXzQ,cAAAA,oBAAoB,EAAE0Q;AAHX,aAAf,CALuE,CAUvE;AACA;;AACA,gBAAIE,QAAQ,GAAG,KAAKC,WAAL,CAAiB3W,IAAjB,EAAuByW,QAAvB,CAAf;AACAP,YAAAA,gBAAgB,GAAGQ,QAAQ,CAACvT,SAA5B;AACAgT,YAAAA,6BAA6B,GAAGO,QAAQ,CAAC9Q,sBAAzC;AACAwQ,YAAAA,2BAA2B,GAAGM,QAAQ,CAAC5Q,oBAAvC;AACH;AACJ,SAlBD;AAmBA,YAAIjJ,IAAI,GAAG,KAAKR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6CrZ,KAAK,CAACiY,QAAN,CAAexR,SAA5D,EAAuEyT,KAAvE,CAA6E5W,IAAI,IAAI;AAC5F,iBAAOA,IAAI,CAACyV,QAAL,KAAkB,IAAzB;AACH,SAFU,CAAX;;AAGA,YAAI5Y,IAAI,KAAK,IAAb,EAAmB;AACf,eAAKR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAA5B,CAA0CvI,GAA1C,CAA8CpJ,IAAI,IAAI;AAClD,gBAAItD,KAAK,CAACiY,QAAN,CAAexR,SAAf,KAA6BnD,IAAI,CAACmD,SAAtC,EAAiD;AAC7CnD,cAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACH;AACJ,WAJD;AAKH,SAND,MAOK;AACD,eAAK1X,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAA5B,CAA0CvI,GAA1C,CAA8CpJ,IAAI,IAAI;AAClD,gBAAItD,KAAK,CAACiY,QAAN,CAAexR,SAAf,KAA6BnD,IAAI,CAACmD,SAAtC,EAAiD;AAC7CnD,cAAAA,IAAI,CAACyV,QAAL,GAAgB,KAAhB;AACH;AACJ,WAJD;AAKH;;AACD,aAAKlZ,QAAL,CAAc;AACV4G,UAAAA,SAAS,EAAE+S,gBADD;AAEVtQ,UAAAA,sBAAsB,EAAEuQ,6BAFd;AAGVrQ,UAAAA,oBAAoB,EAAEsQ;AAHZ,SAAd;AAKH;AACJ,KA51KkB;;AAAA,SA81KnBY,uBA91KmB,GA81KQta,KAAD,IAAW;AACjC,UAAI2M,CAAC,GAAG,EAAR;AACA,YAAM0K,OAAO,GAAGrX,KAAK,CAAC8Y,cAAN,CAAqBhP,MAArB,CAA4BuN,OAA5C;AACA,UAAImC,gBAAgB,GAAG5S,SAAvB;AACA,UAAI6S,6BAA6B,GAAG7S,SAApC;AACA,UAAI8S,2BAA2B,GAAG9S,SAAlC;AACA,WAAKjH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkY,WAA5B,CAAwC3Z,KAAK,CAACiY,QAAN,CAAe/O,sBAAvD,EAA+EwD,GAA/E,CAAmFpJ,IAAI,IAAI;AACvF,YAAIA,IAAI,CAAC8F,oBAAL,KAA8BpJ,KAAK,CAACiY,QAAN,CAAe7O,oBAAjD,EAAuE;AACnE9F,UAAAA,IAAI,CAACyV,QAAL,GAAgB1B,OAAhB;AACA,cAAIuC,SAAS,GAAGJ,gBAAgB,KAAK5S,SAArB,GAAiC4S,gBAAjC,GAAoD,KAAKla,KAAL,CAAWmH,SAA/E;AACA,cAAIoT,sBAAsB,GAAGJ,6BAA6B,KAAK7S,SAAlC,GAA8C6S,6BAA9C,GAA8E,KAAKna,KAAL,CAAW4J,sBAAtH;AACA,cAAI4Q,oBAAoB,GAAGJ,2BAA2B,KAAK9S,SAAhC,GAA4C8S,2BAA5C,GAA0E,KAAKpa,KAAL,CAAW8J,oBAAhH;AACA,cAAI2Q,QAAQ,GAAG;AACXtT,YAAAA,SAAS,EAAGmT,SADD;AAEX1Q,YAAAA,sBAAsB,EAAE2Q,sBAFb;AAGXzQ,YAAAA,oBAAoB,EAAE0Q;AAHX,WAAf,CALmE,CAUnE;AACA;;AACA,cAAIE,QAAQ,GAAG,KAAKC,WAAL,CAAiB3W,IAAjB,EAAuByW,QAAvB,CAAf;AACAP,UAAAA,gBAAgB,GAAGQ,QAAQ,CAACvT,SAA5B;AACAgT,UAAAA,6BAA6B,GAAGO,QAAQ,CAAC9Q,sBAAzC;AACAwQ,UAAAA,2BAA2B,GAAGM,QAAQ,CAAC5Q,oBAAvC;AACH;AACJ,OAlBD;AAmBA,WAAKzJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6CrZ,KAAK,CAACiY,QAAN,CAAexR,SAA5D,EAAuEiG,GAAvE,CAA2EpJ,IAAI,IAAI;AAE/E,YAAIA,IAAI,CAAC4F,sBAAL,KAAgClJ,KAAK,CAACiY,QAAN,CAAe/O,sBAAnD,EAA2E;AACvE,cAAI,KAAKvJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkY,WAA5B,CAAwCrW,IAAI,CAAC4F,sBAA7C,CAAJ,EAA0E;AACtEyD,YAAAA,CAAC,GAAG,KAAKhN,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkY,WAA5B,CAAwCrW,IAAI,CAAC4F,sBAA7C,CAAJ;AACH;AACJ;AAEJ,OARD;AASA,UAAIqR,CAAC,GAAG5N,CAAC,CAACwI,MAAF,CAASqF,CAAC,IAAIA,CAAC,CAACzB,QAAF,KAAe,IAA7B,CAAR;;AACA,UAAIpM,CAAC,CAAClH,MAAF,KAAa8U,CAAC,CAAC9U,MAAnB,EAA2B;AACvB,aAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6CrZ,KAAK,CAACiY,QAAN,CAAexR,SAA5D,EAAuEiG,GAAvE,CAA2E,CAAC8N,CAAD,EAAI3Q,CAAJ,KAAU;AACjF,cAAI2Q,CAAC,CAACtR,sBAAF,KAA6BqR,CAAC,CAAC,CAAD,CAAD,CAAKrR,sBAAtC,EAA8D;AAC1D,iBAAKvJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6CrZ,KAAK,CAACiY,QAAN,CAAexR,SAA5D,EAAuEoD,CAAvE,EAA0EkP,QAA1E,GAAqF,IAArF;AACH;AACJ,SAJD;AAMH,OAPD,MAQK;AACD,aAAKpZ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6CrZ,KAAK,CAACiY,QAAN,CAAexR,SAA5D,EAAuEiG,GAAvE,CAA2E,CAAC8N,CAAD,EAAI3Q,CAAJ,KAAU;AACjF,cAAI2Q,CAAC,CAACtR,sBAAF,KAA6BlJ,KAAK,CAACiY,QAAN,CAAe/O,sBAAhD,EAAwE;AACpE,iBAAKvJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6CrZ,KAAK,CAACiY,QAAN,CAAexR,SAA5D,EAAuEoD,CAAvE,EAA0EkP,QAA1E,GAAqF,KAArF;AACH;AACJ,SAJD;AAKH;;AACD,WAAKzZ,KAAL,CAAWY,UAAX,CAAsBC,IAAtB,CAA2BuM,GAA3B,CAA+BpJ,IAAI,IAAI;AACnC,YAAIA,IAAI,CAACmD,SAAL,KAAmBzG,KAAK,CAACiY,QAAN,CAAexR,SAAtC,EAAiD;AAC7C,cAAI,KAAK9G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6C/V,IAAI,CAACmD,SAAlD,CAAJ,EAAkE;AAC9DkG,YAAAA,CAAC,GAAG,KAAKhN,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBAA5B,CAA6C/V,IAAI,CAACmD,SAAlD,CAAJ;AACH;AACJ;AAEJ,OAPD;AAQA,UAAIgU,EAAE,GAAG9N,CAAC,CAACwI,MAAF,CAASqF,CAAC,IAAIA,CAAC,CAACzB,QAAF,KAAe,IAA7B,CAAT;;AACA,UAAIpM,CAAC,CAAClH,MAAF,KAAagV,EAAE,CAAChV,MAApB,EAA4B;AACxB,aAAKnG,KAAL,CAAWY,UAAX,CAAsBC,IAAtB,CAA2BuM,GAA3B,CAA+B,CAAC8N,CAAD,EAAI3Q,CAAJ,KAAU;AACrC,cAAI2Q,CAAC,CAAC/T,SAAF,KAAgBgU,EAAE,CAAC,CAAD,CAAF,CAAMhU,SAA1B,EAAqC;AACjC,iBAAKnH,KAAL,CAAWY,UAAX,CAAsBC,IAAtB,CAA2B0J,CAA3B,EAA8BkP,QAA9B,GAAyC,IAAzC;AACH;AACJ,SAJD;AAKH,OAND,MAOK;AACD,aAAKzZ,KAAL,CAAWY,UAAX,CAAsBC,IAAtB,CAA2BuM,GAA3B,CAA+B,CAAC8N,CAAD,EAAI3Q,CAAJ,KAAU;AACrC,cAAI2Q,CAAC,CAAC/T,SAAF,KAAgBzG,KAAK,CAACiY,QAAN,CAAexR,SAAnC,EAA8C;AAC1C,iBAAKnH,KAAL,CAAWY,UAAX,CAAsBC,IAAtB,CAA2B0J,CAA3B,EAA8BkP,QAA9B,GAAyC,KAAzC;AACH;AACJ,SAJD;AAKH;;AACD,WAAKlZ,QAAL,CAAc;AACV4G,QAAAA,SAAS,EAAE+S,gBADD;AAEVtQ,QAAAA,sBAAsB,EAAEuQ,6BAFd;AAGVrQ,QAAAA,oBAAoB,EAAEsQ;AAHZ,OAAd;AAKH,KA56KkB;;AAAA,SA+6KnBO,WA/6KmB,GA+6KL,CAAC3W,IAAD,EAAOoX,YAAP,KAAwB;AAClC;AACA;AACA;AACA,UAAIjU,SAAS,GAAGiU,YAAY,CAACjU,SAAb,IAA0B,EAA1C;AACA,UAAIyC,sBAAsB,GAAGwR,YAAY,CAACxR,sBAAb,IAAuC,EAApE;AACA,UAAIE,oBAAoB,GAAGsR,YAAY,CAACtR,oBAAb,IAAqC,EAAhE;;AACA,UAAI9F,IAAI,CAACyV,QAAL,KAAkB,IAAtB,EAA4B;AACxB,YAAI,CAACtS,SAAS,CAACqJ,QAAV,CAAmBxM,IAAI,CAACmD,SAAxB,CAAL,EAAyC;AACrCA,UAAAA,SAAS,CAACmG,IAAV,CAAetJ,IAAI,CAACmD,SAApB;AACH;;AACD,YAAI,CAACyC,sBAAsB,CAAC4G,QAAvB,CAAgCxM,IAAI,CAAC4F,sBAArC,CAAL,EAAmE;AAC/DA,UAAAA,sBAAsB,CAAC0D,IAAvB,CAA4BtJ,IAAI,CAAC4F,sBAAjC;AACH;;AACD,YAAI,CAACE,oBAAoB,CAAC0G,QAArB,CAA8BxM,IAAI,CAAC8F,oBAAnC,CAAL,EAA+D;AAC3DA,UAAAA,oBAAoB,CAACwD,IAArB,CAA0BtJ,IAAI,CAAC8F,oBAA/B;AACH;AACJ,OAVD,MAWK;AACG,cAAM4P,QAAQ,GAAGvS,SAAS,CAAC0O,MAAV,CAAiBhV,IAAI,IAAIA,IAAI,KAAKmD,IAAI,CAACmD,SAAvC,CAAjB;AACAA,QAAAA,SAAS,GAAGuS,QAAZ;AACA,cAAMO,qBAAqB,GAAGrQ,sBAAsB,CAACiM,MAAvB,CAA8BhV,IAAI,IAAIA,IAAI,KAAKmD,IAAI,CAAC4F,sBAApD,CAA9B;AACAA,QAAAA,sBAAsB,GAAGqQ,qBAAzB;AACA,cAAMoB,mBAAmB,GAAGvR,oBAAoB,CAAC+L,MAArB,CAA4BhV,IAAI,IAAIA,IAAI,KAAKmD,IAAI,CAAC8F,oBAAlD,CAA5B;AACAA,QAAAA,oBAAoB,GAAGuR,mBAAvB;AACP,OAzBiC,CA0BlC;AACA;AACA;AACA;;;AACA,UAAIC,UAAU,GAAG;AACbnU,QAAAA,SADa;AACFyC,QAAAA,sBADE;AACsBE,QAAAA;AADtB,OAAjB;AAGA,aAAOwR,UAAP;AACH,KAj9KkB;;AAAA,SAm9KnBC,kBAn9KmB,GAm9KGvV,QAAD,IAAc;AAC/B,aAAQA,QAAQ,CAACtD,SAAT,CAAmBO,QAA3B;AACA,YAAMR,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACP8Y,UAAAA,iBAAiB,EAAExV,QAAQ,CAACtD,SADrB;AAEPO,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAFpB;AAGPqE,UAAAA,YAAY,EAAEV,QAAQ,CAACU;AAHhB,SADI;AAMfmL,QAAAA,QAAQ,EAAE,SANK;AAOfjC,QAAAA,SAAS,EAAE,MAPI;AAQfgC,QAAAA,SAAS,EAAE;AARI,OAAnB;AAUA,WAAKvR,KAAL,CAAW5G,cAAX,CAA0BgJ,UAA1B;AACH,KAh+KkB;;AAAA,SAk+KnBgZ,eAl+KmB,GAk+KA3T,cAAD,IAAoB;AAClC,UAAI0P,eAAe,GAAG,KAAtB;AACA,WAAKjX,QAAL,CAAc;AACVuH,QAAAA,cAAc,EAAE,EACZ,GAAGA;AADS,SADN;AAIV0P,QAAAA;AAJU,OAAd;AAMH,KA1+KkB;;AAAA,SAq/KnBkE,gBAr/KmB,GAq/KA,MAAM;AACrB,YAAMC,eAAe,GAAG,KAAKtb,KAAL,CAAWJ,KAAX,CAAiBwX,oBAAjB,GACpB,CACI;AAAE,mBAAW,cAAb;AAA6B,qBAAa,eAA1C;AAA2D,0BAAkB,WAA7E;AAA0F,uBAAe;AAAzG,OADJ,EAEI;AAAE,mBAAW,YAAb;AAA2B,qBAAa,aAAxC;AAAuD,0BAAkB,YAAzE;AAAuF,uBAAe;AAAtG,OAFJ,EAGI;AAAE,mBAAW,cAAb;AAA6B,qBAAa,eAA1C;AAA2D,0BAAkB,WAA7E;AAA0F,uBAAe;AAAzG,OAHJ,CAII;AAJJ,OADoB,GASpB,KAAKpX,KAAL,CAAWJ,KAAX,CAAiBqX,0BAAjB,GAA8C,CAC1C;AAAE,mBAAW,UAAb;AAAyB,qBAAa,WAAtC;AAAmD,0BAAkB,YAArE;AAAmF,uBAAe;AAAlG,OAD0C,EAE1C;AAAE,mBAAW,cAAb;AAA6B,qBAAa,OAA1C;AAAmD,0BAAkB,YAArE;AAAmF,uBAAe;AAAlG,OAF0C,EAG1C;AAAE,mBAAW,gBAAb;AAA+B,qBAAa,aAA5C;AAA2D,0BAAkB,YAA7E;AAA2F,uBAAe;AAA1G,OAH0C,EAI1C;AAAE,mBAAW,iBAAb;AAAgC,qBAAa,cAA7C;AAA6D,0BAAkB,YAA/E;AAA6F,uBAAe;AAA5G,OAJ0C,CAK1C;AAL0C,OAA9C,GAMI,KAAKjX,KAAL,CAAWJ,KAAX,CAAiBsX,uBAAjB,GACA,KAAKvX,KAAL,CAAW8H,cAAX,IAA6B,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B,qBAA1B,CAA7B,IAAiF,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B,qBAA1B,EAAiDjE,KAAjD,KAA2D,CAA5I,GACI,CACI;AAAE,mBAAW,iBAAb;AAAgC,qBAAa,iBAA7C;AAAgE,0BAAkB,YAAlF;AAAgG,uBAAe;AAA/G,OADJ,EAEI;AAAE,mBAAW,sBAAb;AAAqC,qBAAa,iBAAlD;AAAqE,0BAAkB,YAAvF;AAAqG,uBAAe;AAApH,OAFJ,EAGI;AAAE,mBAAW,cAAb;AAA6B,qBAAa,WAA1C;AAAuD,0BAAkB,WAAzE;AAAsF,uBAAe;AAArG,OAHJ,EAII;AAAE,mBAAW,cAAb;AAA6B,qBAAa,OAA1C;AAAmD,0BAAkB,YAArE;AAAmF,uBAAe;AAAlG,OAJJ,EAKI;AAAE,mBAAW,gBAAb;AAA+B,qBAAa,aAA5C;AAA2D,0BAAkB,YAA7E;AAA2F,uBAAe;AAA1G,OALJ,EAMI;AAAE,mBAAW,iBAAb;AAAgC,qBAAa,cAA7C;AAA6D,0BAAkB,YAA/E;AAA6F,uBAAe;AAA5G,OANJ,CADJ,GAUI,CACI;AAAE,mBAAW,iBAAb;AAAgC,qBAAa,iBAA7C;AAAgE,0BAAkB,YAAlF;AAAgG,uBAAe;AAA/G,OADJ,EAEI;AAAE,mBAAW,cAAb;AAA6B,qBAAa,WAA1C;AAAuD,0BAAkB,WAAzE;AAAsF,uBAAe;AAArG,OAFJ,EAGI;AAAE,mBAAW,cAAb;AAA6B,qBAAa,OAA1C;AAAmD,0BAAkB,YAArE;AAAmF,uBAAe;AAAlG,OAHJ,EAII;AAAE,mBAAW,gBAAb;AAA+B,qBAAa,aAA5C;AAA2D,0BAAkB,YAA7E;AAA2F,uBAAe;AAA1G,OAJJ,EAKI;AAAE,mBAAW,iBAAb;AAAgC,qBAAa,cAA7C;AAA6D,0BAAkB,YAA/E;AAA6F,uBAAe;AAA5G,OALJ,CAXJ,GAiBS,KAAKxD,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,IAA0F,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAA3G,IACE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAD9B,IACqD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAAhD,KAAoEpI,UAAU,CAACigB,YADpI,IAEE,KAAKvb,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAF9B,IAEiD,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,CAA4C8C,aAA5C,KAA4DzL,iBAAiB,CAAC2P,GAFhI,GAGJ,CACQ;AAAE,qBAAa,IAAf;AAAqB,mBAAW,oBAAhC;AAAsD,qBAAa,qBAAnE;AAA0F,0BAAkB,YAA5G;AAA0H,uBAAe;AAAzI,OADR,CAHI,GAKC,KAAKrL,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,IAA0F,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAA3G,IACM,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBADlC,IACyD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAAhD,KAAoEpI,UAAU,CAACigB,YADxI,IAEM,KAAKvb,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAFlC,IAEqD,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,CAA4C8C,aAA5C,KAA4DzL,iBAAiB,CAAC2P,GAFpI,GAGM,CAAiC;AAAE,qBAAa,IAAf;AAAqB,mBAAW,aAAhC;AAA+C,qBAAa,cAA5D;AAA4E,0BAAkB,YAA9F;AAA4G,uBAAe;AAA3H,OAAjC,EAEE;AAAE,qBAAa,IAAf;AAAqB,mBAAW,oBAAhC;AAAsD,qBAAa,qBAAnE;AAA0F,0BAAkB,YAA5G;AAA0H,uBAAe;AAAzI,OAFF,CAHN,GAOG,EA5CnB;AA6CI;AAAE,aAAKrL,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAhC,IAA0F,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAA3G,IACC,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAD7B,IACoD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAAhD,KAAoEpI,UAAU,CAACigB,YADpI,IAEE,KAAKvb,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAF9B,IAEiD,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,CAA4C8C,aAA5C,KAA4DzL,iBAAiB,CAAC2P,GAF/H,IAGE,KAAKrL,KAAL,CAAWJ,KAAX,CAAiBkC,UAHnB,IAGiC,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B0Z,kBAH7D,IAGmF,KAAKxb,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B0Z,kBAA5B,CAA+C1V,MAA/C,KAA0D,CAH7I,GAKGjP,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX,CALH,GAMGvL,yBAAyB,CAAC,KAAKyE,KAAL,CAAW8H,cAAZ,EAA4B6T,eAA5B,EACrB,KAAKtb,KAAL,CAAWJ,KAAX,CAAiBwX,oBAAjB,GAAwC,KAAKuB,aAA7C,GAA6D,KAAK3Y,KAAL,CAAWJ,KAAX,CAAiBqX,0BAAjB,GAA8C,KAAKwE,oBAAnD,GACvD,KAAKzb,KAAL,CAAWJ,KAAX,CAAiBsX,uBAAjB,GAA2C,KAAKwE,iBAAhD,GAAoE,KAAK1b,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAhC,GACtE,KAAK2O,gBADiE,GAC9C,EAHP,EAIhB,KAAKpV,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAhC,GAAyF,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkO,SAA1G,GAAsH,KAAK9N,KAAL,CAAWJ,KAAX,CAAiBwX,oBAJvH,CAN5B;AAWI;AACZ,KA/iLkB;;AAAA,SAijLnBqE,oBAjjLmB,GAijLI,CAACzJ,QAAD,EAAW2J,OAAX,KAAuB;AAC1C,YAAMpJ,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,YAAM/K,cAAc,GAAG,KAAK9H,KAAL,CAAW8H,cAAlC;AACA,YAAMmU,aAAa,GAAGnU,cAAc,CAACoU,SAArC;AACA,YAAM7Z,QAAQ,GAAG,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QAAlC;AACA,UAAI8Z,YAAY,GAAGpgB,iBAAiB,CAAC0L,EAArC;AACA,UAAI2U,SAAS,GAAG,EAAhB;;AACA,UAAIH,aAAa,IAAIlO,KAAK,CAACsO,OAAN,CAAcJ,aAAd,CAAjB,IAAiDA,aAAa,CAAC9V,MAAd,GAAuB,CAA5E,EAA+E;AAC3E,YAAI,KAAKnG,KAAL,CAAW4P,SAAX,KAAyB,QAA7B,EAAuC;AACnCqM,UAAAA,aAAa,CAACK,OAAd,CAAsB,CAACC,IAAD,EAAOnS,KAAP,KAAiB;AACnC,kBAAMwK,gBAAgB,GAAG2H,IAAI,CAAC1H,IAAL,CAAUtE,KAAV,CAAgB,GAAhB,CAAzB;AACA,kBAAMuE,aAAa,GAAGyH,IAAI,CAAC1H,IAAL,CAAUtE,KAAV,CAAgB,GAAhB,EAAqBqE,gBAAgB,CAACzO,MAAjB,GAA0B,CAA/C,CAAtB;AACA,kBAAMqW,QAAQ,GAAG1U,cAAc,CAACkN,eAAf,IAAkClN,cAAc,CAACkN,eAAf,KAAmC,EAArE,GACblN,cAAc,CAACkN,eAAf,CAA+BzE,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CADa,GACkCjV,WAAW,EAD9D;AAEA,kBAAMyZ,cAAc,GAAGyH,QAAQ,GAAG,GAAX,GAAiB1H,aAAxC;AACA,kBAAM2H,QAAQ,GAAG,EAAjB;AACAA,YAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBpa,QAAQ,CAACqN,SAAjC;AACA+M,YAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwB3U,cAAc,CAACX,SAAf,CAAyBtD,KAAjD;AACA4Y,YAAAA,QAAQ,CAAC,wBAAD,CAAR,GAAqC3U,cAAc,CAAC8B,sBAAf,CAAsC/F,KAA3E;AACA4Y,YAAAA,QAAQ,CAAC,sBAAD,CAAR,GAAmC3U,cAAc,CAACgC,oBAAf,CAAoCjG,KAAvE;AACA4Y,YAAAA,QAAQ,CAAC,gBAAD,CAAR,GAA6B,KAAKpc,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8D,cAAzD;AACAwW,YAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBpa,QAAQ,CAAC4R,SAAjC;AACAwI,YAAAA,QAAQ,CAAC,eAAD,CAAR,GAA4Bpa,QAAQ,CAAC2R,SAArC;AACAyI,YAAAA,QAAQ,CAAC,UAAD,CAAR,GAAuB;AACnBC,cAAAA,YAAY,EAAErhB,mBAAmB,CAACyM,cAAc,CAACgC,oBAAf,CAAoC2I,KAApC,CAA0CiC,IAA1C,EAAD,EAAmD,KAAnD,CADd;AAEnBiI,cAAAA,SAAS,EAAEthB,mBAAmB,CAACgH,QAAQ,CAACsa,SAAT,CAAmBjI,IAAnB,EAAD,EAA4B,KAA5B,CAFX;AAGnBkI,cAAAA,aAAa,EAAEvhB,mBAAmB,CAACgH,QAAQ,CAACua,aAAT,CAAuBlI,IAAvB,EAAD,EAAgC,KAAhC,CAHf;AAInBO,cAAAA,SAAS,EAAEsH,IAAI,CAACrH,IAJG;AAKnBF,cAAAA,eAAe,EAAED,cALE;AAMnBmH,cAAAA,SAAS,EAAE7gB,mBAAmB,CAACkhB,IAAI,CAAC1H,IAAL,CAAU9I,UAAV,CAAqB,IAArB,EAA2B,UAA3B,EAAuCA,UAAvC,CAAkD,IAAlD,EAAwD,OAAxD,EAAiEA,UAAjE,CAA4E,GAA5E,EAAiF,KAAjF,EAAwF2I,IAAxF,EAAD,EAAiG,KAAjG,CANX;AAOnBmI,cAAAA,SAAS,EAAE,EAPQ;AAQnBC,cAAAA,YAAY,EAAEzhB,mBAAmB,CAACyM,cAAc,CAACgV,YAAf,GAA8BhV,cAAc,CAACgV,YAAf,CAA4B/Q,UAA5B,CAAuC,IAAvC,EAA6C,UAA7C,EAAyDA,UAAzD,CAAoE,IAApE,EAA0E,OAA1E,EAAmFA,UAAnF,CAA8F,GAA9F,EAAmG,KAAnG,EAA0G2I,IAA1G,EAA9B,GAAiJ,EAAlJ,EAAsJ,KAAtJ,CARd;AASnBqI,cAAAA,WAAW,EAAEjV,cAAc,CAACiV,WAAf,GAA6BjV,cAAc,CAACiV,WAA5C,GAA0DhhB,iBAAiB,CAAC0L,EATtE;AAUnBuV,cAAAA,OAAO,EAAE3hB,mBAAmB,CAACyM,cAAc,CAACkV,OAAf,GAAyBlV,cAAc,CAACkV,OAAf,CAAuBjR,UAAvB,CAAkC,IAAlC,EAAwC,UAAxC,EAAoDA,UAApD,CAA+D,IAA/D,EAAqE,OAArE,EAA8EA,UAA9E,CAAyF,GAAzF,EAA8F,KAA9F,EAAqG2I,IAArG,EAAzB,GAAuI,EAAxI,EAA4I,KAA5I,CAVT;AAWnBuI,cAAAA,UAAU,EAAEnV,cAAc,CAACmV,UAAf,IAA6B,EAA7B,GAAkCnV,cAAc,CAACmV,UAAjD,GAA8D;AAXvD,aAAvB;AAaArK,YAAAA,QAAQ,CAACuC,MAAT,CAAgB,iBAAiB/K,KAAjC,EAAwCmS,IAAxC;AACA3J,YAAAA,QAAQ,CAACuC,MAAT,CAAgB,mBAAmB/K,KAAnC,EAA0C2K,cAA1C;AACAqH,YAAAA,SAAS,CAAC9O,IAAV,CAAemP,QAAf;AACH,WA9BD;AA+BA7J,UAAAA,QAAQ,CAACuC,MAAT,CAAgB,WAAhB,EAA6B8G,aAAa,CAAC9V,MAA3C;AACAgW,UAAAA,YAAY,GAAGpgB,iBAAiB,CAAC2P,GAAjC;AACH,SAlCD,MAkCO;AACHuQ,UAAAA,aAAa,CAACK,OAAd,CAAsB,CAACC,IAAD,EAAOnS,KAAP,KAAiB;AACnC,kBAAMwK,gBAAgB,GAAG2H,IAAI,CAAC1H,IAAL,CAAUtE,KAAV,CAAgB,GAAhB,CAAzB;AACA,kBAAMuE,aAAa,GAAGyH,IAAI,CAAC1H,IAAL,CAAUtE,KAAV,CAAgB,GAAhB,EAAqBqE,gBAAgB,CAACzO,MAAjB,GAA0B,CAA/C,CAAtB;AACA,kBAAMqW,QAAQ,GAAG1U,cAAc,CAACkN,eAAf,IAAkClN,cAAc,CAACkN,eAAf,KAAmC,EAArE,GACblN,cAAc,CAACkN,eAAf,CAA+BzE,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CADa,GACkCjV,WAAW,EAD9D;AAEA,kBAAMyZ,cAAc,GAAGyH,QAAQ,GAAG,GAAX,GAAiB1H,aAAxC;AACA,kBAAM2H,QAAQ,GAAG,EAAjB;AACAA,YAAAA,QAAQ,CAAC,4BAAD,CAAR,GAAyC3U,cAAc,CAACoV,6BAAf,IAAgDpV,cAAc,CAACoV,6BAAf,CAA6CC,0BAAtI;AACAV,YAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBpa,QAAQ,CAACqN,SAAjC;AACA+M,YAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwB3U,cAAc,CAACX,SAAf,CAAyBtD,KAAjD;AACA4Y,YAAAA,QAAQ,CAAC,wBAAD,CAAR,GAAqC3U,cAAc,CAAC8B,sBAAf,CAAsC/F,KAA3E;AACA4Y,YAAAA,QAAQ,CAAC,sBAAD,CAAR,GAAmC3U,cAAc,CAACgC,oBAAf,CAAoCjG,KAAvE;AACA4Y,YAAAA,QAAQ,CAAC,gBAAD,CAAR,GAA6B,KAAKpc,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8D,cAAzD;AACAwW,YAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBpa,QAAQ,CAAC4R,SAAjC;AACAwI,YAAAA,QAAQ,CAAC,eAAD,CAAR,GAA4Bpa,QAAQ,CAAC2R,SAArC;AACAyI,YAAAA,QAAQ,CAAC,UAAD,CAAR,GAAuB;AACnBC,cAAAA,YAAY,EAAErhB,mBAAmB,CAACyM,cAAc,CAACgC,oBAAf,CAAoC2I,KAApC,CAA0CiC,IAA1C,EAAD,EAAmD,KAAnD,CADd;AAEnBiI,cAAAA,SAAS,EAAEthB,mBAAmB,CAACgH,QAAQ,CAACsa,SAAT,CAAmBjI,IAAnB,EAAD,EAA4B,KAA5B,CAFX;AAGnBkI,cAAAA,aAAa,EAAEvhB,mBAAmB,CAACgH,QAAQ,CAACua,aAAT,CAAuBlI,IAAvB,EAAD,EAAgC,KAAhC,CAHf;AAInBO,cAAAA,SAAS,EAAEsH,IAAI,CAACrH,IAJG;AAKnBF,cAAAA,eAAe,EAAED,cALE;AAMnBmH,cAAAA,SAAS,EAAE7gB,mBAAmB,CAACkhB,IAAI,CAAC1H,IAAL,CAAU9I,UAAV,CAAqB,IAArB,EAA2B,UAA3B,EAAuCA,UAAvC,CAAkD,IAAlD,EAAwD,OAAxD,EAAiEA,UAAjE,CAA4E,GAA5E,EAAiF,KAAjF,EAAwF2I,IAAxF,EAAD,EAAiG,KAAjG,CANX;AAOnBmI,cAAAA,SAAS,EAAE,EAPQ;AAQnBC,cAAAA,YAAY,EAAEzhB,mBAAmB,CAACyM,cAAc,CAACgV,YAAf,GAA8BhV,cAAc,CAACgV,YAAf,CAA4B/Q,UAA5B,CAAuC,IAAvC,EAA6C,UAA7C,EAAyDA,UAAzD,CAAoE,IAApE,EAA0E,OAA1E,EAAmFA,UAAnF,CAA8F,GAA9F,EAAmG,KAAnG,EAA0G2I,IAA1G,EAA9B,GAAiJ,EAAlJ,EAAsJ,KAAtJ,CARd;AASnBqI,cAAAA,WAAW,EAAEjV,cAAc,CAACiV,WAAf,GAA6BjV,cAAc,CAACiV,WAA5C,GAA0DhhB,iBAAiB,CAAC0L,EATtE;AAUnBuV,cAAAA,OAAO,EAAE3hB,mBAAmB,CAACyM,cAAc,CAACkV,OAAf,GAAyBlV,cAAc,CAACkV,OAAf,CAAuBjR,UAAvB,CAAkC,IAAlC,EAAwC,UAAxC,EAAoDA,UAApD,CAA+D,IAA/D,EAAqE,OAArE,EAA8EA,UAA9E,CAAyF,GAAzF,EAA8F,KAA9F,EAAqG2I,IAArG,EAAzB,GAAuI,EAAxI,EAA4I,KAA5I,CAVT;AAWnBuI,cAAAA,UAAU,EAAEnV,cAAc,CAACmV,UAAf,IAA6B,EAA7B,GAAkCnV,cAAc,CAACmV,UAAjD,GAA8D;AAXvD,aAAvB;AAaArK,YAAAA,QAAQ,CAACuC,MAAT,CAAgB,iBAAiB/K,KAAjC,EAAwCmS,IAAxC;AACA3J,YAAAA,QAAQ,CAACuC,MAAT,CAAgB,mBAAmB/K,KAAnC,EAA0C2K,cAA1C;AACAnC,YAAAA,QAAQ,CAACuC,MAAT,CAAgB,WAAhB,EAA6B8G,aAAa,CAAC9V,MAA3C;AACAgW,YAAAA,YAAY,GAAGpgB,iBAAiB,CAAC2P,GAAjC;AAEA0Q,YAAAA,SAAS,CAAC9O,IAAV,CAAemP,QAAf;AACH,WAlCD;AAmCH;AACJ,OAxED,MAwEO;AACH,YAAIA,QAAQ,GAAG,EAAf;AACAA,QAAAA,QAAQ,CAAC,4BAAD,CAAR,GAAyC3U,cAAc,CAACoV,6BAAf,IAAgDpV,cAAc,CAACoV,6BAAf,CAA6CC,0BAAtI;AACAV,QAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBpa,QAAQ,CAACqN,SAAjC;AACA+M,QAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwB3U,cAAc,CAACX,SAAf,CAAyBtD,KAAjD;AACA4Y,QAAAA,QAAQ,CAAC,wBAAD,CAAR,GAAqC3U,cAAc,CAAC8B,sBAAf,CAAsC/F,KAA3E;AACA4Y,QAAAA,QAAQ,CAAC,sBAAD,CAAR,GAAmC3U,cAAc,CAACgC,oBAAf,CAAoCjG,KAAvE;AACA4Y,QAAAA,QAAQ,CAAC,gBAAD,CAAR,GAA6B,KAAKpc,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8D,cAAzD;AACAwW,QAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBpa,QAAQ,CAAC4R,SAAjC;AACAwI,QAAAA,QAAQ,CAAC,eAAD,CAAR,GAA4Bpa,QAAQ,CAAC2R,SAArC;AACAyI,QAAAA,QAAQ,CAAC,UAAD,CAAR,GAAuB;AACnBC,UAAAA,YAAY,EAAErhB,mBAAmB,CAACyM,cAAc,CAACgC,oBAAf,CAAoC2I,KAApC,CAA0CiC,IAA1C,EAAD,EAAmD,KAAnD,CADd;AAEnBiI,UAAAA,SAAS,EAAEthB,mBAAmB,CAACgH,QAAQ,CAACsa,SAAT,CAAmBjI,IAAnB,EAAD,EAA4B,KAA5B,CAFX;AAGnBkI,UAAAA,aAAa,EAAEvhB,mBAAmB,CAACgH,QAAQ,CAACua,aAAT,CAAuBlI,IAAvB,EAAD,EAAgC,KAAhC,CAHf;AAInBO,UAAAA,SAAS,EAAEnN,cAAc,CAACoN,IAJP;AAKnBF,UAAAA,eAAe,EAAElN,cAAc,CAACkN,eALb;AAMnBkH,UAAAA,SAAS,EAAE7gB,mBAAmB,CAAC4gB,aAAa,CAAClQ,UAAd,CAAyB,IAAzB,EAA+B,UAA/B,EAA2CA,UAA3C,CAAsD,IAAtD,EAA4D,OAA5D,EAAqEA,UAArE,CAAgF,GAAhF,EAAqF,KAArF,EAA4F2I,IAA5F,EAAD,EAAqG,KAArG,CANX;AAOnBmI,UAAAA,SAAS,EAAE,EAPQ;AAQnBC,UAAAA,YAAY,EAAEzhB,mBAAmB,CAACyM,cAAc,CAACgV,YAAf,GAA8BhV,cAAc,CAACgV,YAAf,CAA4B/Q,UAA5B,CAAuC,IAAvC,EAA6C,UAA7C,EAAyDA,UAAzD,CAAoE,IAApE,EAA0E,OAA1E,EAAmFA,UAAnF,CAA8F,GAA9F,EAAmG,KAAnG,EAA0G2I,IAA1G,EAA9B,GAAiJ,EAAlJ,EAAsJ,KAAtJ,CARd;AASnBqI,UAAAA,WAAW,EAAEjV,cAAc,CAACiV,WAAf,GAA6BjV,cAAc,CAACiV,WAA5C,GAA0DhhB,iBAAiB,CAAC0L,EATtE;AAUnBuV,UAAAA,OAAO,EAAE3hB,mBAAmB,CAACyM,cAAc,CAACkV,OAAf,GAAyBlV,cAAc,CAACkV,OAAf,CAAuBjR,UAAvB,CAAkC,IAAlC,EAAwC,UAAxC,EAAoDA,UAApD,CAA+D,IAA/D,EAAqE,OAArE,EAA8EA,UAA9E,CAAyF,GAAzF,EAA8F,KAA9F,EAAqG2I,IAArG,EAAzB,GAAuI,EAAxI,EAA4I,KAA5I,CAVT;AAWnBuI,UAAAA,UAAU,EAAEnV,cAAc,CAACmV,UAAf,IAA6B,EAA7B,GAAkCnV,cAAc,CAACmV,UAAjD,GAA8D;AAXvD,SAAvB;AAaAb,QAAAA,SAAS,CAAC9O,IAAV,CAAemP,QAAf;AACH;;AACD7J,MAAAA,QAAQ,CAACuC,MAAT,CAAgB,cAAhB,EAAgCgH,YAAhC;AACAvJ,MAAAA,QAAQ,CAACuC,MAAT,CAAgB,uBAAhB,EAAyCrB,IAAI,CAACC,SAAL,CAAeqI,SAAf,CAAzC;AACAxJ,MAAAA,QAAQ,CAACuC,MAAT,CAAgB,qBAAhB,EAAuCnZ,cAAc,CAACohB,GAAtD;AACAxK,MAAAA,QAAQ,CAACuC,MAAT,CAAgB,gBAAhB,EAAkC,KAAK9U,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8D,cAA9D;AACA2M,MAAAA,QAAQ,CAACuC,MAAT,CAAgB,cAAhB,EAAgC,KAAK9U,KAAL,CAAWJ,KAAX,CAAiByG,YAAjD;AACAkM,MAAAA,QAAQ,CAACuC,MAAT,CAAgB,UAAhB,EAA4BrB,IAAI,CAACC,SAAL,CAAe,EACvC,GAAG1R,QADoC;AAEvCgb,QAAAA,SAAS,EAAEhiB,mBAAmB,CAACgH,QAAQ,CAACgb,SAAV,CAFS;AAGvCC,QAAAA,WAAW,EAAEjiB,mBAAmB,CAACgH,QAAQ,CAACib,WAAV,CAHO;AAIvCC,QAAAA,aAAa,EAAEliB,mBAAmB,CAACgH,QAAQ,CAACkb,aAAV;AAJK,OAAf,CAA5B;AAOA,YAAM9a,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACP,sBAAY,EACR,GAAGL,QADK;AAERgb,YAAAA,SAAS,EAAEhiB,mBAAmB,CAACgH,QAAQ,CAACgb,SAAV,CAFtB;AAGRC,YAAAA,WAAW,EAAEjiB,mBAAmB,CAACgH,QAAQ,CAACib,WAAV,CAHxB;AAIRC,YAAAA,aAAa,EAAEliB,mBAAmB,CAACgH,QAAQ,CAACkb,aAAV;AAJ1B,WADL;AAOP/W,UAAAA,QAAQ,EAAE,2BAPH;AAQPoM,UAAAA,QAAQ,EAAEA,QARH;AASP2C,UAAAA,YAAY,EAAE,IATP;AAUP3F,UAAAA,SAAS,EAAE,KAAKvP,KAAL,CAAWJ,KAAX,CAAiB2P,SAVrB;AAWPiC,UAAAA,QAAQ,EAAE,SAXH;AAYPQ,UAAAA,QAAQ,EAAEA,QAZH;AAaP2J,UAAAA,OAAO,EAAEA,OAbF;AAcPpK,UAAAA,SAAS,EAAE,uBAdJ;AAeP9J,UAAAA,cAAc,EAAE,KAAK9H,KAAL,CAAW8H,cAfpB;AAgBPnB,UAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAhBtB;AAiBPxE,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAjBtB;AADI,OAAnB;;AAsBA,UAAI/G,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyCpN,QAAQ,CAACqN,SAAlD,EAA6D,KAAKrP,KAAL,CAAWJ,KAAX,CAAiByG,YAA9E,CAAb,EAA0G;AACtG,cAAMxC,UAAU,GAAG;AACfC,UAAAA,QAAQ,EAAE/H,cADK;AAEfyE,UAAAA,IAAI,EAAE;AACF8O,YAAAA,UAAU,EAAE;AAAElN,cAAAA;AAAF,aADV;AAEFgV,YAAAA,oBAAoB,EAAE,IAFpB;AAGF3I,YAAAA,YAAY,EAAE,KAAKzO,KAAL,CAAWJ,KAAX,CAAiByG;AAH7B;AAFS,SAAnB;AAQA,aAAKrG,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,OAVD,MAUO;AACH,aAAK7D,KAAL,CAAWlG,2BAAX,CAAuCsI,UAAvC;AACH;AACJ,KAxsLkB;;AAAA,SA0sLnB+a,2BA1sLmB,GA0sLYC,WAAD,IAAiB;AAC3C,YAAMzT,GAAG,GAAG,qCAAZ;;AACA,UAAI,KAAK3J,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAACwL,QAA/F,IACA,KAAKlH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAAC6U,kBADnG,EACuH;AACnH,YAAI8M,qBAAqB,GAAG;AACxB,4BAAkBD,WAAW,CAAC3V,cAAZ,CAA2B7B,cADrB;AAExB,uBAAawX,WAAW,CAAC3V,cAAZ,CAA2BX,SAFhB;AAGxB,oCAA0BsW,WAAW,CAAC3V,cAAZ,CAA2B8B,sBAH7B;AAIxB,kCAAwB6T,WAAW,CAAC3V,cAAZ,CAA2BgC,oBAJ3B;AAKxB,wCAA8B2T,WAAW,CAAC3V,cAAZ,CAA2BqV;AALjC,SAA5B;AAOA,YAAI1a,UAAU,GAAG;AACbC,UAAAA,SAAS,EAAE;AACPgb,YAAAA,qBADO;AAEP1T,YAAAA,GAFO;AAGP/G,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAHpB;AAIPsE,YAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAJtB;AAKPxE,YAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UALtB;AAMPqE,YAAAA,QAAQ,EAAE,6BANH;AAOPsB,YAAAA,cAAc,EAAE,KAAK9H,KAAL,CAAW8H;AAPpB;AADE,SAAjB;;AAWA,YAAI1M,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8E+N,WAAW,CAAC/W,YAA1F,CAAb,EAAsH;AAClH,gBAAMxC,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAE/H,cADK;AAEfyE,YAAAA,IAAI,EAAE;AACF8O,cAAAA,UAAU,EAAE;AAAElN,gBAAAA;AAAF,eADV;AAEFgV,cAAAA,oBAAoB,EAAE,IAFpB;AAGF3I,cAAAA,YAAY,EAAE2O,WAAW,CAAC/W;AAHxB;AAFS,WAAnB;AAQA,eAAKrG,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,SAVD,MAUO;AACH,eAAK7D,KAAL,CAAWjG,6BAAX,CAAyCqI,UAAzC;AACH;AACJ,OAjCD,MAiCO;AACHvL,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KAhvLkB;;AAAA,SAkvLnBiV,iBAlvLmB,GAkvLC,CAAC1J,QAAD,EAAW2J,OAAX,KAAuB;AACvC,YAAMpJ,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,YAAM/K,cAAc,GAAG,KAAK9H,KAAL,CAAW8H,cAAlC;AACA,YAAMzF,QAAQ,GAAG,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QAAlC;AACA,YAAMK,SAAS,GAAG,EAAlB;AACA,UAAIib,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,CAAC,yBAAD,CAAP,GAAqC9V,cAAc,CAAC+V,0BAAf,IAA6C/V,cAAc,CAAC+V,0BAAf,CAA0CC,uBAA5H;AACAF,MAAAA,OAAO,CAAC,WAAD,CAAP,GAAuBvb,QAAQ,CAACqN,SAAhC;AACAkO,MAAAA,OAAO,CAAC,WAAD,CAAP,GAAuB9V,cAAc,CAACX,SAAf,CAAyBtD,KAAhD;AACA+Z,MAAAA,OAAO,CAAC,wBAAD,CAAP,GAAoC9V,cAAc,CAAC8B,sBAAf,CAAsC/F,KAA1E;AACA+Z,MAAAA,OAAO,CAAC,sBAAD,CAAP,GAAkC9V,cAAc,CAACgC,oBAAf,CAAoCjG,KAAtE;AACA+Z,MAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4B,KAAKvd,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8D,cAAxD;AACA2X,MAAAA,OAAO,CAAC,WAAD,CAAP,GAAuBvb,QAAQ,CAAC4R,SAAhC;AACA2J,MAAAA,OAAO,CAAC,eAAD,CAAP,GAA2Bvb,QAAQ,CAAC2R,SAApC;AACA4J,MAAAA,OAAO,CAAC,qBAAD,CAAP,GAAiC9V,cAAc,CAACiW,mBAAf,IAAsCjW,cAAc,CAACiW,mBAAf,CAAmCla,KAA1G;AACA+Z,MAAAA,OAAO,CAAC,yBAAD,CAAP,GAAqC9V,cAAc,CAACkW,uBAAf,IAA0ClW,cAAc,CAACkW,uBAAf,CAAuCna,KAAvC,KAAiD,EAA3F,GAAgGiE,cAAc,CAACkW,uBAAf,CAAuCna,KAAvI,GAA+I,IAApL;AACA+Z,MAAAA,OAAO,CAAC,UAAD,CAAP,GAAsB;AAClBK,QAAAA,SAAS,EAAEnW,cAAc,CAACmW,SAAf,GAA2BnW,cAAc,CAACmW,SAA1C,GAAsD,EAD/C;AAElBlB,QAAAA,WAAW,EAAEjV,cAAc,CAACiV,WAAf,GAA6BjV,cAAc,CAACiV,WAA5C,GAA0DhhB,iBAAiB,CAAC0L,EAFvE;AAGlBiV,QAAAA,YAAY,EAAE5U,cAAc,CAAC4U,YAHX;AAIlBwB,QAAAA,eAAe,EAAEpW,cAAc,CAACiW,mBAAf,IAAsCjW,cAAc,CAACiW,mBAAf,CAAmCtL,KAJxE;AAKlB0L,QAAAA,eAAe,EAAErW,cAAc,CAACkW,uBAAf,IAA0ClW,cAAc,CAACkW,uBAAf,CAAuCvL,KAAvC,KAAiD,EAA3F,GAAgG3K,cAAc,CAACkW,uBAAf,CAAuCvL,KAAvI,GAA+I,GAL9I;AAMlBsL,QAAAA,mBAAmB,EAAEjW,cAAc,CAACiW,mBAAf,IAAsCjW,cAAc,CAACiW,mBANxD;AAOlBC,QAAAA,uBAAuB,EAAElW,cAAc,CAACkW,uBAAf,GAAyClW,cAAc,CAACkW,uBAAxD,GAAkF;AAPzF,OAAtB;AASAJ,MAAAA,OAAO,CAAC,qBAAD,CAAP,GAAiC9V,cAAc,CAACsW,mBAAf,GAAqCtW,cAAc,CAACsW,mBAAf,CAAmCva,KAAxE,GAAgF,CAAC,CAAlH;AACA8Z,MAAAA,YAAY,CAACrQ,IAAb,CAAkBsQ,OAAlB;AACAlb,MAAAA,SAAS,CAAC,aAAD,CAAT,GAA2Bib,YAA3B,CA5BuC,CA6BvC;;AACA/K,MAAAA,QAAQ,CAACuC,MAAT,CAAgB,UAAhB,EAA4BrB,IAAI,CAACC,SAAL,CAAe,EACvC,GAAG1R,QADoC;AAEvCgb,QAAAA,SAAS,EAAEhiB,mBAAmB,CAACgH,QAAQ,CAACgb,SAAV,CAFS;AAGvCC,QAAAA,WAAW,EAAEjiB,mBAAmB,CAACgH,QAAQ,CAACib,WAAV,CAHO;AAIvCC,QAAAA,aAAa,EAAEliB,mBAAmB,CAACgH,QAAQ,CAACkb,aAAV;AAJK,OAAf,CAA5B;AAMA3K,MAAAA,QAAQ,CAACuC,MAAT,CAAgB,oBAAhB,EAAsCrB,IAAI,CAACC,SAAL,CAAe4J,YAAf,CAAtC;AACA/K,MAAAA,QAAQ,CAACuC,MAAT,CAAgB,gBAAhB,EAAkC,KAAK9U,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8D,cAA9D;AACA,YAAMxD,UAAU,GAAG;AACfC,QAAAA,SAAS,EAAE;AACP,sBAAY,EACR,GAAGL,QADK;AAERgb,YAAAA,SAAS,EAAEhiB,mBAAmB,CAACgH,QAAQ,CAACgb,SAAV,CAFtB;AAGRC,YAAAA,WAAW,EAAEjiB,mBAAmB,CAACgH,QAAQ,CAACib,WAAV,CAHxB;AAIRC,YAAAA,aAAa,EAAEliB,mBAAmB,CAACgH,QAAQ,CAACkb,aAAV;AAJ1B,WADL;AAOP/W,UAAAA,QAAQ,EAAE,wBAPH;AAQPoM,UAAAA,QAAQ,EAAEA,QARH;AASPhD,UAAAA,SAAS,EAAE,KAAKvP,KAAL,CAAWJ,KAAX,CAAiB2P,SATrB;AAUPiC,UAAAA,QAAQ,EAAE,SAVH;AAWPQ,UAAAA,QAAQ,EAAEA,QAXH;AAYP2J,UAAAA,OAAO,EAAEA,OAZF;AAaPpK,UAAAA,SAAS,EAAE,oBAbJ;AAcP9J,UAAAA,cAAc,EAAE,KAAK9H,KAAL,CAAW8H,cAdpB;AAePnB,UAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAftB;AAgBPxE,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAhBtB;AADI,OAAnB;;AAoBA,UAAI/G,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyCpN,QAAQ,CAACqN,SAAlD,EAA6D,KAAKrP,KAAL,CAAWJ,KAAX,CAAiByG,YAA9E,CAAb,EAA0G;AACtG,cAAMxC,UAAU,GAAG;AACfC,UAAAA,QAAQ,EAAE/H,cADK;AAEfyE,UAAAA,IAAI,EAAE;AACF4W,YAAAA,oBAAoB,EAAE,IADpB;AAEF9H,YAAAA,UAAU,EAAE;AAAElN,cAAAA;AAAF,aAFV;AAGFqM,YAAAA,YAAY,EAAE,KAAKzO,KAAL,CAAWJ,KAAX,CAAiByG;AAH7B;AAFS,SAAnB;AAQA,aAAKrG,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,OAVD,MAUO;AACH,aAAK7D,KAAL,CAAWhG,wBAAX,CAAoCoI,UAApC;AACH;AACJ,KAzzLkB;;AAAA,SA2zLnB4b,wBA3zLmB,GA2zLSZ,WAAD,IAAiB;AACxC,YAAMzT,GAAG,GAAG,kCAAZ;;AACA,UAAI,KAAK3J,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAACwL,QAA/F,IACA,KAAKlH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA6EtL,iBAAiB,CAAC6U,kBADnG,EACuH;AACnH,YAAI0N,kBAAkB,GAAG;AACrB,4BAAkBb,WAAW,CAAC3V,cAAZ,CAA2B7B,cADxB;AAErB,uBAAawX,WAAW,CAAC3V,cAAZ,CAA2BX,SAFnB;AAGrB,oCAA0BsW,WAAW,CAAC3V,cAAZ,CAA2B8B,sBAHhC;AAIrB,kCAAwB6T,WAAW,CAAC3V,cAAZ,CAA2BgC,oBAJ9B;AAKrB,qCAA2B2T,WAAW,CAAC3V,cAAZ,CAA2BgW;AALjC,SAAzB;AAOA,YAAIrb,UAAU,GAAG;AACbC,UAAAA,SAAS,EAAE;AACP4b,YAAAA,kBADO;AAEPtU,YAAAA,GAFO;AAGP/G,YAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAHpB;AAIPsE,YAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAJtB;AAKPxE,YAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UALtB;AAMPqE,YAAAA,QAAQ,EAAE,0BANH;AAOPsB,YAAAA,cAAc,EAAE,KAAK9H,KAAL,CAAW8H;AAPpB;AADE,SAAjB;;AAWA,YAAI1M,SAAS,CAAC,KAAKiF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,EAA8E+N,WAAW,CAAC/W,YAA1F,CAAb,EAAsH;AAClH,gBAAMxC,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAE/H,cADK;AAEfyE,YAAAA,IAAI,EAAE;AACF4W,cAAAA,oBAAoB,EAAE,IADpB;AAEF9H,cAAAA,UAAU,EAAE;AAAElN,gBAAAA;AAAF,eAFV;AAGFqM,cAAAA,YAAY,EAAE2O,WAAW,CAAC/W;AAHxB;AAFS,WAAnB;AAQA,eAAKrG,KAAL,CAAW1I,WAAX,CAAuBuM,UAAvB;AACH,SAVD,MAUO;AACH,eAAK7D,KAAL,CAAW/F,0BAAX,CAAsCmI,UAAtC;AACH;AACJ,OAjCD,MAiCO;AACHvL,QAAAA,KAAK,CAAC2R,IAAN,CAAW,KAAKxI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KAj2LkB;;AAEf,SAAKkV,OAAL,GAAerlB,KAAK,CAAC4nB,SAAN,EAAf;AACA,SAAKnV,cAAL,GAAsB,IAAIlK,cAAJ,EAAtB;AACA,UAAMyB,SAAS,GAAG;AACdqI,MAAAA,IAAI,EAAE,CADQ;AAEdC,MAAAA,IAAI,EAAE,KAAK5I,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,GAA4B7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAF9D,KAAlB;AAIA,UAAMlJ,sBAAsB,GAAG;AAC3BiI,MAAAA,IAAI,EAAE,CADqB;AAE3BC,MAAAA,IAAI,EAAE,KAAK5I,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,GAA4B7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAFjD,KAA/B;AAIA,UAAMhJ,mBAAmB,GAAG;AACxB+H,MAAAA,IAAI,EAAE,CADkB;AAExBC,MAAAA,IAAI,EAAE,KAAK5I,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,GAA4B7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAFpD,KAA5B;AAIA,UAAM9I,mBAAmB,GAAG;AACxB6H,MAAAA,IAAI,EAAE,CADkB;AAExBC,MAAAA,IAAI,EAAE,KAAK5I,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,GAA4B7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAFpD,KAA5B;AAIA,UAAM5I,uBAAuB,GAAG;AAC5B2H,MAAAA,IAAI,EAAE,CADsB;AAE5BC,MAAAA,IAAI,EAAE,KAAK5I,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,GAA4B7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAFhD,KAAhC;AAIA,UAAM1I,2BAA2B,GAAG;AAChCyH,MAAAA,IAAI,EAAE,CAD0B;AAEhCC,MAAAA,IAAI,EAAE,KAAK5I,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,GAA4B7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAF5C,KAApC;AAIA,UAAMxI,uBAAuB,GAAG;AAC5BuH,MAAAA,IAAI,EAAE,CADsB;AAE5BC,MAAAA,IAAI,EAAE,KAAK5I,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,GAA4B7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAFhD,KAAhC;AAIA,UAAMtI,oBAAoB,GAAG;AACzBqH,MAAAA,IAAI,EAAE,CADmB;AAEzBC,MAAAA,IAAI,EAAE,KAAK5I,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,GAA4B7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAFnD,KAA7B;AAIA,UAAMpI,mBAAmB,GAAG;AACxBmH,MAAAA,IAAI,EAAE,CADkB;AAExBC,MAAAA,IAAI,EAAE,KAAK5I,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,GAA4B7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAFpD,KAA5B;AAKA,SAAKjK,KAAL,GAAa;AACTa,MAAAA,IAAI,EAAE,EADG;AACC2d,MAAAA,YAAY,EAAE,EADf;AACmBC,MAAAA,KAAK,EAAE,EAD1B;AAC8B3W,MAAAA,cAAc,EAAE,EAD9C;AAETlH,MAAAA,UAAU,EAAE,EAFH;AAGTG,MAAAA,sBAAsB,EAAEA,sBAHf;AAITE,MAAAA,mBAAmB,EAAEA,mBAJZ;AAKTE,MAAAA,mBAAmB,EAAEA,mBALZ;AAMTE,MAAAA,uBAAuB,EAAEA,uBANhB;AAOTE,MAAAA,2BAA2B,EAAEA,2BAPpB;AAQTmd,MAAAA,eAAe,EAAE,EARR;AAST/d,MAAAA,SAAS,EAAEA,SATF;AAUT8O,MAAAA,qBAAqB,EAAE,EAVd;AAWTwB,MAAAA,UAAU,EAAE,IAAI0N,GAAJ,EAXH;AAYTC,MAAAA,cAAc,EAAE,EAZP;AAaTC,MAAAA,eAAe,EAAE,EAbR;AAcTC,MAAAA,iBAAiB,EAAE,EAdV;AAeTC,MAAAA,WAAW,EAAE,EAfJ;AAgBTC,MAAAA,cAAc,EAAE,EAhBP;AAiBTC,MAAAA,oBAAoB,EAAE,EAjBb;AAkBTC,MAAAA,uBAAuB,EAAE,EAlBhB;AAmBTC,MAAAA,gBAAgB,EAAE,EAnBT;AAoBTC,MAAAA,iBAAiB,EAAE,EApBV;AAqBTC,MAAAA,oBAAoB,EAAE,EArBb;AAsBTC,MAAAA,eAAe,EAAE,EAtBR;AAuBTC,MAAAA,YAAY,EAAE,EAvBL;AAwBTnX,MAAAA,KAAK,EAAE,CAxBE;AAyBToX,MAAAA,cAAc,EAAE,EAzBP;AA0BTC,MAAAA,mBAAmB,EAAE,EA1BZ;AA2BTtY,MAAAA,SAAS,EAAE,EA3BF;AA4BT2C,MAAAA,oBAAoB,EAAE,EA5Bb;AA6BTF,MAAAA,sBAAsB,EAAE,EA7Bf;AA8BT8V,MAAAA,kBAAkB,EAAE,EA9BX;AA+BTlf,MAAAA,WAAW,EAAE,KA/BJ;AAgCTiB,MAAAA,uBAAuB,EAAEA,uBAhChB;AAiCTE,MAAAA,oBAAoB,EAAEA,oBAjCb;AAkCTE,MAAAA,mBAAmB,EAAEA,mBAlCZ;AAmCT8d,MAAAA,0BAA0B,EAAE,IAnCnB;AAoCT3W,MAAAA,IAAI,EAAE,CApCG;AAqCTC,MAAAA,IAAI,EAAE,KAAK5I,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,CAA1B,CAAD,CArClC,CAsCT;AACA;AACA;;AAxCS,KAAb;AA0CA,SAAKjD,SAAL,GAAiBrQ,KAAK,CAAC4nB,SAAN,EAAjB;AACA,SAAKqB,eAAL,GAAuB,CAAC,WAAD,EAAc,WAAd,EAA2B,qBAA3B,CAAvB;AACH;;AAsE8B,SAAxBC,wBAAwB,CAACxf,KAAD,EAAQL,KAAR,EAAe;AAE1C,QAAIK,KAAK,CAACJ,KAAN,CAAYue,YAAZ,KAA6B,EAA7B,IAAmCne,KAAK,CAACJ,KAAN,CAAYue,YAAZ,KAA6Bxe,KAAK,CAACwe,YAA1E,EAAwF;AACpFtnB,MAAAA,KAAK,CAAC2R,IAAN,CAAWxI,KAAK,CAACJ,KAAN,CAAYue,YAAvB;AACAne,MAAAA,KAAK,CAACJ,KAAN,CAAYue,YAAZ,GAA2B,EAA3B;AACH;;AAED,QAAIne,KAAK,CAACJ,KAAN,CAAYwe,KAAZ,KAAsBze,KAAK,CAACye,KAAhC,EAAuC;AACnCvnB,MAAAA,KAAK,CAACunB,KAAN,CAAYpe,KAAK,CAACJ,KAAN,CAAYwe,KAAxB;AACApe,MAAAA,KAAK,CAACJ,KAAN,CAAYwe,KAAZ,GAAoB,EAApB;AACH;;AACD,WAAO,IAAP;AACH;;AAidDqB,EAAAA,iBAAiB,CAACjf,IAAD,EAAO;AACpB,UAAMkf,SAAS,GAAGlf,IAAI,IAAIA,IAAI,CAACuM,GAAL,CAAU4S,MAAD,IAAY;AAC3C,aAAO;AAAE,mBAAWA,MAAM,CAACpkB,gBAAgB,CAACqkB,KAAlB,CAAN,CAA+B,KAAK5f,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B8N,iBAAzD,CAAb;AAA0F,qBAAa6P,MAAM,CAACpkB,gBAAgB,CAAC+R,KAAlB,CAA7G;AAAuI,iBAAS,OAAhJ;AAAyJ,sBAAc;AAAvK,OAAP;AACH,KAFyB,CAA1B;AAGA,WAAOoS,SAAP;AACH;;AAmIDG,EAAAA,MAAM,GAAG;AACL;AACA,SAAK7f,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Bge,cAA3D,IAA6E,KAAK9f,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Bge,cAA5B,CAA2Cha,MAA3C,GAAoD,CAAjI,IACOzK,QAAQ,CAAC,KAAK2E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Bge,cAA7B,EAA6C,EAA7C,EAAiD,gBAAjD,CADf;AAEA,UAAMC,eAAe,GAAG;AACpBzZ,MAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UADT;AACqB0Z,MAAAA,eAAe,EAAE,wBADtC;AACgEzQ,MAAAA,SAAS,EAAE,QAD3E;AACoF;AACxGnN,MAAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBwC,UAFT;AAEqBJ,MAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QAFhD;AAE0DqE,MAAAA,YAAY,EAAE,CAAC,CAFzE;AAE4EvE,MAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAFzG;AAEqHqM,MAAAA,UAAU,EAAE,KAAKnO,KAAL,CAAWJ,KAAX,CAAiBuO;AAFlJ,KAAxB;AAIA,SAAK8R,aAAL,GACI,CACI;AACA;AAAE,iBAAW,YAAb;AAA2B,mBAAa,UAAxC;AAAoD,eAAS;AAA7D,KAFJ,EAGI;AAAE,iBAAW,eAAb;AAA8B,mBAAa,kBAA3C;AAA+D,eAAS;AAAxE,KAHJ,EAII;AAAE,iBAAW,WAAb;AAA0B,mBAAa,mBAAvC;AAA4D,eAAS;AAArE,KAJJ,CADJ;AAQA,SAAKC,2BAAL,GACI,CACI;AAAE,iBAAW,eAAb;AAA8B,mBAAa,YAA3C;AAAyD,eAAS;AAAlE,KADJ,EAEI;AAAE,iBAAW,eAAb;AAA8B,mBAAa,YAA3C;AAAyD,eAAS;AAAlE,KAFJ,EAGI;AAAE,iBAAW,aAAb;AAA4B,mBAAa,kBAAzC;AAA6D,eAAS;AAAtE,KAHJ,EAII;AAAE,iBAAW,kBAAb;AAAiC,mBAAa,WAA9C;AAA2D,eAAS;AAApE,KAJJ,EAKI;AAAE,iBAAW,kBAAb;AAAiC,mBAAa,cAA9C;AAA8D,eAAS;AAAvE,KALJ,EAMI;AAAE,iBAAW,kBAAb;AAAiC,mBAAa,WAA9C;AAA2D,eAAS;AAApE,KANJ,CADJ;AAUA,UAAMC,uBAAuB,GAAG,CAAC;AAAE,mBAAa,IAAf;AAAqB,iBAAW,cAAhC;AAAgD,mBAAa,kBAA7D;AAAiF,wBAAkB,WAAnG;AAAgH,qBAAe;AAA/H,KAAD,CAAhC;AAEA,UAAM7E,eAAe,GAAG,CAAC;AAAE,mBAAa,IAAf;AAAqB,iBAAW,iBAAhC;AAAmD,mBAAa,iBAAhE;AAAmF,wBAAkB,WAArG;AAAkH,qBAAe;AAAjI,KAAD,CACpB;AACA;AAFoB,KAAxB;AAKA,QAAI8E,0BAA0B,GAAG,CAAC;AAAE,iBAAW,UAAb;AAAyB,mBAAa,OAAtC;AAA+C,eAAS;AAAxD,KAAD,CAAjC;AACA;AAAC,WAAKpgB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAAnG,IACD6Y,0BAA0B,CAACnT,IAA3B,CACI;AAAE,mBAAW,gBAAb;AAA+B,qBAAa,aAA5C;AAA2D,iBAAS;AAApE,OADJ,CADC;AAGC;AACFmT,IAAAA,0BAA0B,CAACnT,IAA3B,CACI;AAAE,iBAAW,cAAb;AAA6B,mBAAa,cAA1C;AAA0D,eAAS;AAAnE,KADJ,EAEI;AAAE,iBAAW,mBAAb;AAAkC,mBAAa,mBAA/C;AAAoE,eAAS;AAA7E,KAFJ,EAGI;AAAE,iBAAW,iBAAb;AAAgC,mBAAa,QAA7C;AAAuD,eAAS;AAAhE,KAHJ,EAII;AAAE,iBAAW,gBAAb;AAA+B,mBAAa,YAA5C;AAA0D,eAAS,OAAnE;AAA4E,mBAAa;AAAzF,KAJJ,EAKI;AACA;AACA;AAAE,iBAAW,oBAAb;AAAmC,mBAAa,qBAAhD;AAAuE,eAAS;AAAhF,KAPJ,EAQI;AAAE,iBAAW,UAAb;AAAyB,mBAAa,OAAtC;AAA+C,eAAS;AAAxD,KARJ,EASI;AAAE,iBAAW,UAAb;AAAyB,mBAAa,OAAtC;AAA+C,eAAS;AAAxD,KATJ,EAUI;AAAE,iBAAW,WAAb;AAA0B,mBAAa,OAAvC;AAAgD,eAAS;AAAzD,KAVJ,EAWI;AAAE,iBAAW,WAAb;AAA0B,mBAAa,OAAvC;AAAgD,eAAS;AAAzD;AACA;AACZ;AACA;AACA;AAfQ;AAkBA,QAAI9K,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2C,YAA7B,EAA2C,KAAKzE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4C,UAAvE,EAAmF,KAAK1E,KAAL,CAAWJ,KAAX,CAAiBoC,QAApG,CAAlC;AACA,QAAIqe,QAAQ,GAAG,EAAf;;AACA,QAAI,KAAKrgB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Bwe,QAA5B,IAAwC,KAAKtgB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Bwe,QAA5B,IAAwC,KAApF,EAA2F;AACvFD,MAAAA,QAAQ,GAAGtiB,SAAS,EAApB;AACH,KAFD,MAEO;AACHsiB,MAAAA,QAAQ,GAAGviB,WAAW,KAAK,2BAAhB,GAA8C,KAAK6B,KAAL,CAAW4gB,cAApE;AACH,KA9DI,CA+DL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMC,WAAW,GAAG;AAChBC,MAAAA,aAAa,EAAE,gBADC;AAEhBC,MAAAA,cAAc,EAAE,wBAFA;AAGhBV,MAAAA,eAAe,EAAE,gBAHD;AAIhBW,MAAAA,QAAQ,EAAE,2BAJM;AAKhB7e,MAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UALb;AAMhByd,MAAAA,eAAe,EAAE,KAAKA,eANN;AAOhBqB,MAAAA,UAAU,EAAC,EAPK;AAOA;AAChBC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,QAAQ,EAAE,IADI;AACEle,QAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWJ,KAAX,CAAiBoC,QAD7B;AAEdO,QAAAA,YAAY,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyCD,YAFrF;AAGdE,QAAAA,eAAe,EAAE,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAHtG;AAIdN,QAAAA,GAAG,EAAEvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CAJf;AAKdH,QAAAA,KAAK,EAAEM,GAAG,CAACJ,QALG;AAMdE,QAAAA,GAAG,EAAEE,GAAG,CAACD,MANK;AAOdJ,QAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAPf;AAQdyd,QAAAA,eAAe,EAAE,KAAKA,eARR;AASd7b,QAAAA,eAAe,EAAG,KAAK1D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,CAA4CC,eAA5F,IAAgH,CAAC,CATpH;AAUdnB,QAAAA,YAAY,EAAEwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyCD,YAAtF,CAAR,IAA+G,CAAC,CAVhH;AAWd+B,QAAAA,kBAAkB,EAAEyC,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,CAA4CC,kBAA5F,CAAR,IAA2H,CAAC,CAXlI;AAYd6C,QAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,CAA4C8C,aAA5F,CAAR,IAAsHzL,iBAAiB,CAAC0L,EAZzI;AAad3E,QAAAA,eAAe,EAAEsE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4CD,eAA5F,CAAR,IAAwH,CAAC,CAb5H;AAcduE,QAAAA,kBAAkB,EAAI,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA9C,KAAqEC,SAAvH,IACd,KAAKjH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA9C,KAAqE,GADzG,GACgHrE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,CAA8C+B,kBAA/C,CADtH,GAC2L,IAfjM;AAgBdK,QAAAA,mBAAmB,EAAE,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,GAAmD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDsD,mBAAjD,IAAwE,CAAC,CAA5H,GAAgI,IAhBvI;AAiBdpD,QAAAA,oBAAoB,EAAE,KAAKjE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDuD,0BAArG,GAAkI3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,CAAiDuD,0BAAlD,CAAxI,GAAwN,IAjBhO;AAkBd;AACAC,QAAAA,cAAc,EAAG,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4C6E,cAA5F,IAA+G,KAnBjH;AAoBdC,QAAAA,sBAAsB,EAAG,KAAKxH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgD0C,sBAApG,IAA+H,KApBzI;AAqBdtD,QAAAA,0BAA0B,EAAE,CAAC,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BAAjH,GACvB,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BADhC,GAC6D,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAD1F,KACyH,CAAC;AAtBxI;AARF,KAApB;AAkCA,QAAImd,cAAc,GAAG,CACjB;AACI,eAAS,UADb;AAEI,eAAS5e,GAAG,CAAC6e;AAFjB,KADiB,EAId;AACC,eAAS,QADV;AAEC,eAAS7e,GAAG,CAAC8e;AAFd,KAJc,EASjB;AACI,eAAS,aADb;AAEI,eAAS,KAAKjhB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,GAA+C,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6Cqc,YAA7C,IAA6D,IAA5G,GACL,KAAKlhB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,GAA2C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,CAAyC0e,YAAzC,IAAyD,IAApG,GAA2G;AAHnH,KATiB,EAad;AACC,eAAS,gBADV;AAEC,eAAS,KAAKlhB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,GAAkD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDqc,eAAhD,IAAmE,IAArH,GACL,KAAKnhB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,GACI,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4Cye,eADhD,GACkE;AAJvE,KAbc,EAkBd;AACC,eAAS,gBADV;AAEC,eAAS,KAAKnhB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,GAAkD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDwc,kBAAhD,IAAsE,IAAxH,GACL,KAAKphB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,GACI,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,CAA4C+c,kBADhD,GACqE;AAJ1E,KAlBc,CAArB;AAyBA,UAAMC,SAAS,GAAG,KAAKrhB,KAAL,CAAWJ,KAAX,CAAiBwC,UAAjB,IAA+B,KAAKzC,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,YAA1B,CAA/B,IACX,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,YAA1B,EAAwCrC,YAD/C;AAGA,UAAMe,aAAa,GACf,KAAK7P,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,mBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,mBAA1B,EAA+CrC,YAFnD;AAGA,UAAMD,SAAS,GACX,KAAK7O,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,oBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,oBAA1B,EAAgDrC,YAFpD;AAGA,UAAMuB,UAAU,GACZ,KAAKrQ,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,yBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,yBAA1B,EAAqDrC,YAFzD;AAGA,UAAMkD,YAAY,GACd,KAAKhS,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,mBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,mBAA1B,EAA+CrC,YAFnD;AAGA,UAAM6S,YAAY,GACd,KAAK3hB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,mBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,mBAA1B,EAA+CrC,YAFnD;AAGA,UAAM8S,cAAc,GAChB,KAAK5hB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,cAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,cAA1B,EAA0CrC,YAF9C;AAGA,UAAM+S,MAAM,GACR,KAAK7hB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CrC,YAF/C;AAGA,UAAMgT,QAAQ,GACV,KAAK9hB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CrC,YAF/C;AAGA,UAAMiT,aAAa,GACf,KAAK/hB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,aAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,aAA1B,EAAyCrC,YAF7C;AAGA,UAAMkT,kBAAkB,GACpB,KAAKhiB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,kBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,kBAA1B,EAA8CrC,YAFlD;AAGA,UAAM6D,YAAY,GACd,KAAK3S,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,YAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,YAA1B,EAAwCrC,YAF5C;AAGA,UAAMmT,cAAc,GAChB,KAAKjiB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,aAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,aAA1B,EAAyCrC,YAF7C;AAGA,UAAMqD,YAAY,GACd,KAAKnS,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,YAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,YAA1B,EAAwCrC,YAF5C;AAGA,UAAMoT,gBAAgB,GAClB,KAAKliB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,gBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,gBAA1B,EAA4CrC,YAFhD;AAGA,UAAMqT,mBAAmB,GACrB,KAAKniB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,wBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,wBAA1B,EAAoDrC,YAFxD;AAGA,UAAMH,gBAAgB,GAClB,KAAK3O,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,gBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,gBAA1B,EAA4CrC,YAFhD;AAGA,UAAMsT,eAAe,GACjB,KAAKpiB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CrC,YAF/C;AAGA,UAAMuT,uBAAuB,GACzB,KAAKriB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,uBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,uBAA1B,EAAmDrC,YAFvD;AAGA,UAAMwT,oBAAoB,GACtB,KAAKtiB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,oBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,oBAA1B,EAAgDrC,YAFpD;AAGA,UAAMyT,sBAAsB,GACxB,KAAKviB,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,sBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,sBAA1B,EAAkDrC,YAFtD;AAGA,UAAML,UAAU,GACZ,KAAKzO,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,UAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,UAA1B,EAAsCrC,YAF1C;AAGA,UAAM6I,oBAAoB,GACtB,KAAK3X,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,oBAA1B,KACA,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,oBAA1B,EAAgDrC,YAFpD;AAIA,UAAM0T,cAAc,GAAG,KAAKniB,KAAL,CAAWJ,KAAX,CAAiBwC,UAAjB,IAA+B,KAAKzC,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,CAA/B,IAChB,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CrC,YADlD;AAGA,UAAM2T,gBAAgB,GAAG,KAAKpiB,KAAL,CAAWJ,KAAX,CAAiBwC,UAAjB,IAA+B,KAAKzC,KAAL,CAAWiR,UAAX,CAAsBC,GAAtB,CAA0B,eAA1B,CAA/B,IAClB,KAAKlR,KAAL,CAAWiR,UAAX,CAAsBE,GAAtB,CAA0B,eAA1B,EAA2CrC,YADlD;AAGA,UAAM4T,SAAS,GAAG;AACd/b,MAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UADf;AAC2B0Z,MAAAA,eAAe,EAAE,wBAD5C;AACsEzQ,MAAAA,SAAS,EAAE,QADjF;AAEdnN,MAAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBwC,UAFf;AAE2BJ,MAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QAFtD;AAEgEqE,MAAAA,YAAY,EAAEiM,YAF9E;AAE4FxQ,MAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAFzH,KAAlB;AAKA,UAAMwgB,sBAAsB,GAAG;AAC3B7d,MAAAA,YAAY,EAAEtC,GAAG,CAACJ,QADS;AAE3B2C,MAAAA,UAAU,EAAEvC,GAAG,CAACD,MAFW;AAG3ByC,MAAAA,mBAAmB,EAAE,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAHrE;AAI3BoB,MAAAA,gBAAgB,EAAE,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAJ/D;AAK3BsC,MAAAA,mBAAmB,EAAE,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eALrE;AAM3BkC,MAAAA,mBAAmB,EAAE,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eANrE;AAO3Ba,MAAAA,qBAAqB,EAAE,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAPzE;AAQ3BF,MAAAA,wBAAwB,EAAE,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAR/E;AAS3B;AACA;AACAiB,MAAAA,8BAA8B,EAAE,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAX3F;AAY3B9B,MAAAA,UAAU,EAAE,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAAtB,OAZe;AAc3BO,MAAAA,SAAS,EAAE;AACPF,QAAAA,GAAG,EAAEvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CADtB;AAEP,iBAASG,GAAG,CAACJ,QAFN;AAGP,eAAOI,GAAG,CAACD,MAHJ;AAIP,qBAAc,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,IAAsD,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAlH,IAAuH,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDiB,SAA9K,IAA4L,GAJlM;AAKP,2BAAoB,KAAK9G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAApG,IAAwH,CAAC,CALrI;AAMP,wBAAgBqD,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAA9F,CAAR,IAAuH,CAAC,CANjI;AAOP,2BAAmBwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAApG,CAAR,IAAgI,CAAC,CAP7I;AAQP,8BAAsBE,MAAM,CAACjH,iBAAiB,CAACwL,QAAnB,CAAN,GAAqC,GAArC,GAA2CvE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqD,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAxG,CARhE;AASP;AACA,+BAAuB,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,GAAuD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDsC,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IAVxJ;AAWP,gCAAwB,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAA7G,GAA0I3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAAtD,CAAhJ,GAAoO,IAXrP;AAYP,0BAAmB,KAAKtH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAZlI;AAaP,oBAAY,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBoC,QAbtB;AAcP,sCAA+B,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CAdjL;AAeP,8BAAsB,KAAKlE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAflH;AAgBP,yBAAiByC,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EAhB1J,CAkBP;;AAlBO;AAdgB,KAA/B;AAqCA,UAAMmb,kBAAkB,GAAG;AACvB9d,MAAAA,YAAY,EAAEtC,GAAG,CAACJ,QADK;AAEvB2C,MAAAA,UAAU,EAAEvC,GAAG,CAACD,MAFO;AAGvByC,MAAAA,mBAAmB,EAAE,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAHzE;AAIvBoB,MAAAA,gBAAgB,EAAE,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAJnE;AAKvBsC,MAAAA,mBAAmB,EAAE,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eALzE;AAMvBwC,MAAAA,qBAAqB,EAAE,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAN7E;AAOvBF,MAAAA,wBAAwB,EAAE,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAPnF;AAQvBiB,MAAAA,8BAA8B,EAAE,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BAR1H;AASvBpC,MAAAA,UAAU,EAAE,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAAtB,OATW;AAUvB8C,MAAAA,mBAAmB,EAAE,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAVzE;AAWvBzE,MAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ,KAXK;AAYvB;AACAyC,MAAAA,SAAS,EAAE;AACPF,QAAAA,GAAG,EAAEvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CADtB;AAEPyF,QAAAA,cAAc,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,IAAmC,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAApD,IAAsE,EAF/E;AAGP,iBAAStF,GAAG,CAACJ,QAHN;AAIP,eAAOI,GAAG,CAACD,MAJJ;AAKP,qBAAa,GALN;AAMP,2BAAoB,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAApG,IAAwH,CAAC,CANrI;AAOP,wBAAgBqD,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAA9F,CAAR,IAAuH,CAAC,CAPjI;AAQP,2BAAmBwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAApG,CAAR,IAAgI,CAAC,CAR7I;AASP,8BAAsB,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqD,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAvG,GAA4HrE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAAN,GAA+E,GAA/E,GAAqFrE,MAAM,CAACjH,iBAAiB,CAAC6c,OAAnB,CAAvN,GAAqP,IATpQ;AAUP,+BAAuB,KAAKvY,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,GAAuD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDsC,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IAVxJ;AAWP,gCAAwB,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAA7G,GAA0I3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAAtD,CAAhJ,GAAoO,IAXrP;AAYP,0BAAmB,KAAKtH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAZlI;AAaP,oBAAY,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBoC,QAbtB;AAcP;AACA,sCAA+B,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CAfjL;AAgBP,sBAAc,IAhBP;AAiBP,mBAAW,IAjBJ;AAkBP,0BAAkB6C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,IAAmI,CAAC,CAlB/I;AAmBP;AACA,8BAAsByC,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,IAAmI,CAAC,CApBnJ;AAqBP;AACA,wBAAiB,CAAC,CAtBX;AAwBP6C,QAAAA,aAAa,EAAEJ,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EAxBxJ;AAyBPd,QAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B;AAzBL,OAbY;AA0CvBqG,MAAAA,2BAA2B,EAAE,KAAKnN,KAAL,CAAWmN,2BA1CjB;AA2CvB0V,MAAAA,2BAA2B,EAAC,KAAK7iB,KAAL,CAAW6iB,2BA3ChB;AA4CvBC,MAAAA,mBAAmB,EAAC,KAAK9iB,KAAL,CAAWmN,2BAAX,GAAyC,KAAK4V,0BAAL,CAAgC,KAAK/iB,KAAL,CAAWmN,2BAA3C,CAAzC,GAAmH;AA5ChH,KAA3B;AA8CA,UAAM6V,gBAAgB,GAAG;AACrBle,MAAAA,YAAY,EAAEtC,GAAG,CAACJ,QADG;AAErB2C,MAAAA,UAAU,EAAEvC,GAAG,CAACD,MAFK;AAGrByC,MAAAA,mBAAmB,EAAE,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAH3E;AAIrBoB,MAAAA,gBAAgB,EAAE,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAJrE;AAKrBsC,MAAAA,mBAAmB,EAAE,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAL3E;AAMrBwC,MAAAA,qBAAqB,EAAE,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAN/E;AAOrBF,MAAAA,wBAAwB,EAAE,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAPrF;AAQrBiB,MAAAA,8BAA8B,EAAE,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BAR5H;AASrBpC,MAAAA,UAAU,EAAE,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAAtB,OATS;AAUrB8C,MAAAA,mBAAmB,EAAE,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAV3E;AAWrBhC,MAAAA,SAAS,EAAE;AACPF,QAAAA,GAAG,EAAEvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CADtB;AAEPyF,QAAAA,cAAc,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,IAAmC,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAApD,IAAsE,EAF/E;AAGP,iBAAStF,GAAG,CAACJ,QAHN;AAIP,eAAOI,GAAG,CAACD,MAJJ;AAKP,qBAAa,GALN;AAMP,2BAAoB,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAApG,IAAwH,CAAC,CANrI;AAOP,wBAAgBqD,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAA9F,CAAR,IAAuH,CAAC,CAPjI;AAQP,2BAAmBwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAApG,CAAR,IAAgI,CAAC,CAR7I;AASP,2BAAmB,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,GAAkD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDqc,eAAlG,GAAoH,EAThI;AAUP,8BAAsB,KAAKnhB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqD,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAvG,GAA4HrE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAAlI,GAA2M,IAV1N;AAWP,+BAAuB,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,GAAuD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDsC,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IAXxJ;AAYP,gCAAwB,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAA7G,GAA0I3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAAtD,CAAhJ,GAAoO,IAZrP;AAaP,0BAAmB,KAAKtH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAblI;AAcP,oBAAY,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBoC,QAdtB;AAeP;AACA,sCAA+B,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CAhBjL;AAiBP,uBAAe,IAjBR;AAkBP,8BAAsB6C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,IAAmI,CAAC,CAlBnJ;AAmBP,yBAAiByC,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EAnB1J;AAoBP,0BAAkB,KAAKpH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,IAAsD,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAlH,IAAuH,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAA7K,IAA+L,CAAC,CApB3M;AAqBP,+BAAuB,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,IAAsD,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAlH,IAAwH,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBArB9L;AAsBP,oCAA4B,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAA7B,GAA6D7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAArE,GAAuGlO,iBAAiB,CAAC0L,EAtB9I;AAuBPf,QAAAA,YAAY,EAAEob,QAvBP;AAwBPnb,QAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAxBL;AAyBP+R,QAAAA,UAAU,EAAEzR,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,KAAoI7I,aAAa,CAACmnB,WAAlJ,GAAgK,KAAK5iB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,IAAqD,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkDhJ,MAAlD,KAA6D,CAAlH,GAAsH,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,CAAlD,EAAqD0J,UAArD,IAAmE,CAAC,CAA1L,GAA8L,CAAC,CAA/V,GAAmW,CAAC,CAzBzW;AA0BPqK,QAAAA,WAAW,EAAE9b,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,KAAoI7I,aAAa,CAACmnB,WAAlJ,GAAgK,IAAhK,GAAuK;AA1B7K;AAXU,KAAzB;AAyCA,UAAME,cAAc,GAAG;AACnBre,MAAAA,YAAY,EAAEtC,GAAG,CAACJ,QADC;AAEnB2C,MAAAA,UAAU,EAAEvC,GAAG,CAACD,MAFG;AAGnByC,MAAAA,mBAAmB,EAAE,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAH7E;AAInBoB,MAAAA,gBAAgB,EAAE,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAJvE;AAKnBsC,MAAAA,mBAAmB,EAAE,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAL7E;AAMnBwC,MAAAA,qBAAqB,EAAE,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBANjF;AAOnBF,MAAAA,wBAAwB,EAAE,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAPvF;AAQnBiB,MAAAA,8BAA8B,EAAE,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BAR9H;AASnBpC,MAAAA,UAAU,EAAE,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAAtB,OATO;AAUnB8C,MAAAA,mBAAmB,EAAE,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAV7E;AAYnBhC,MAAAA,SAAS,EAAE;AACPF,QAAAA,GAAG,EAAEvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CADtB;AAEPyF,QAAAA,cAAc,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,IAAmC,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAApD,IAAsE,EAF/E;AAGP,iBAAStF,GAAG,CAACJ,QAHN;AAIP,eAAOI,GAAG,CAACD,MAJJ;AAKP,qBAAa,GALN;AAMP,2BAAoB,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAApG,IAAwH,CAAC,CANrI;AAOP,wBAAgBqD,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAA9F,CAAR,IAAuH,CAAC,CAPjI;AAQP,2BAAmBwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAApG,CAAR,IAAgI,CAAC,CAR7I;AASP,2BAAmB,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,GAAkD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDqc,eAAlG,GAAoH,EAThI;AAUP,8BAAsB,KAAKnhB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqD,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAvG,GAA4HrE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAAlI,GAA2M,IAV1N;AAWP,+BAAuB,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,GAAuD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDsC,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IAXxJ;AAYP,gCAAwB,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAA7G,GAA0I3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAAtD,CAAhJ,GAAoO,IAZrP;AAaP,0BAAmB,KAAKtH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAblI;AAcP,oBAAY,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBoC,QAdtB;AAeP;AACA,sCAA+B,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CAhBjL;AAiBP,qBAAa,IAjBN;AAkBP,mBAAW,IAlBJ;AAmBP,8BAAsB6C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,IAAmI,CAAC,CAnBnJ;AAoBP,yBAAiByC,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EApB1J;AAqBP,0BAAkB,KAAKpH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,IAAsD,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAlH,IAAuH,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAA7K,IAA+L,CAAC,CArB3M;AAsBP,+BAAuB,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,IAAsD,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAlH,IAAwH,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAtB9L;AAuBP,oCAA4B,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAA7B,GAA6D7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAArE,GAAuGlO,iBAAiB,CAAC0L,EAvB9I;AAwBPf,QAAAA,YAAY,EAAEmb,MAxBP;AAyBPlb,QAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAzBL;AA0BPkF,QAAAA,YAAY,EAAE,KAAK3L,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsK,iBAA3D,IAA+E,CAAC,CA1BvF;AA2BPoM,QAAAA,UAAU,EAAEzR,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,KAAoI7I,aAAa,CAACmnB,WAAlJ,GAAgK,KAAK5iB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,IAAqD,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkDhJ,MAAlD,KAA6D,CAAlH,GAAsH,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,CAAlD,EAAqD0J,UAArD,IAAmE,CAAC,CAA1L,GAA8L,CAAC,CAA/V,GAAmW,CAAC,CA3BzW;AA4BPqK,QAAAA,WAAW,EAAE9b,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,KAAoI7I,aAAa,CAACmnB,WAAlJ,GAAgK,IAAhK,GAAuK,KA5B7K,CA6BR;;AA7BQ,OAZQ;AA4CnB9V,MAAAA,2BAA2B,EAAE,KAAKnN,KAAL,CAAWmN,2BA5CrB;AA6CnB0V,MAAAA,2BAA2B,EAAC,KAAK7iB,KAAL,CAAW6iB,2BA7CpB;AA8CnBC,MAAAA,mBAAmB,EAAC,KAAK9iB,KAAL,CAAWmN,2BAAX,GAAyC,KAAK4V,0BAAL,CAAgC,KAAK/iB,KAAL,CAAWmN,2BAA3C,CAAzC,GAAmH;AA9CpH,KAAvB;AAiDA,UAAMiW,SAAS,GAAG;AACdzc,MAAAA,UAAU,EAAE,aADE;AACaiJ,MAAAA,SAAS,EAAE,QADxB;AACkCyT,MAAAA,cAAc,EAAE,gBADlD;AAEdlhB,MAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAFf;AAE2BE,MAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QAFtD;AAGdyM,MAAAA,YAAY,EAAE+S,MAHA;AAGQ3b,MAAAA,sBAAsB,EAAE,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D;AAH5D,KAAlB;AAMA,UAAMod,qBAAqB,GAAG;AAC1Bxe,MAAAA,YAAY,EAAEtC,GAAG,CAACJ,QADQ;AAE1B2C,MAAAA,UAAU,EAAEvC,GAAG,CAACD,MAFU;AAG1ByC,MAAAA,mBAAmB,EAAE,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAHtE;AAI1BoB,MAAAA,gBAAgB,EAAE,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,KAAKxC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAJhE;AAK1BsC,MAAAA,mBAAmB,EAAE,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eALtE;AAM1BwC,MAAAA,qBAAqB,EAAE,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAN1E;AAO1BF,MAAAA,wBAAwB,EAAE,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAPhF;AAQ1BiB,MAAAA,8BAA8B,EAAE,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,KAAK5D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,CAAuDM,0BARvH;AAS1BpC,MAAAA,UAAU,EAAE,EAAE,GAAG,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC;AAAtB,OATc;AAU1B8C,MAAAA,mBAAmB,EAAE,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,KAAKrE,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAVtE;AAY1BhC,MAAAA,SAAS,EAAE;AACPF,QAAAA,GAAG,EAAEvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CADtB;AAEPyF,QAAAA,cAAc,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,IAAmC,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAApD,IAAsE,EAF/E;AAGP,iBAAStF,GAAG,CAACJ,QAHN;AAIP,eAAOI,GAAG,CAACD,MAJJ;AAKP,qBAAa,GALN;AAMP,2BAAoB,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAApG,IAAwH,CAAC,CANrI;AAOP,wBAAgBqD,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,IAAgD,KAAK7E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+C,gBAA5B,CAA6CtC,YAA9F,CAAR,IAAuH,CAAC,CAPjI;AAQP,2BAAmBwE,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDrC,eAApG,CAAR,IAAgI,CAAC,CAR7I;AASP,8BAAsB,KAAKzC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,IAAqD,KAAKlF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAvG,GAA4HrE,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoD,qBAA5B,CAAkD8B,kBAAnD,CAAlI,GAA2M,IAT1N;AAUP,+BAAuB,KAAKhH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,GAAuD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDsC,mBAArD,IAA4E,CAAC,CAApI,GAAwI,IAVxJ;AAWP,gCAAwB,KAAKrH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,IAAwD,KAAK/E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAA7G,GAA0I3E,MAAM,CAAC,KAAK3C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiD,wBAA5B,CAAqDuC,0BAAtD,CAAhJ,GAAoO,IAXrP;AAYP,0BAAmB,KAAKtH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,IAAmD,KAAK9E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cAApG,IAAuH,KAZlI;AAaP,oBAAY,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBoC,QAbtB;AAcP;AACA,sCAA+B,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,IAA8D,KAAKhF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkD,8BAA5B,CAA2Dd,0BAA1H,IAAyJ,CAAC,CAfjL;AAgBP,uBAAe,IAhBR;AAiBP,8BAAsB6C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDN,kBAApG,CAAR,IAAmI,CAAC,CAjBnJ;AAkBP,yBAAiByC,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAApG,CAAR,IAA8HzL,iBAAiB,CAAC0L,EAlB1J;AAmBP,0BAAkB,KAAKpH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,IAAsD,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAlH,IAAwH,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDD,cAA9K,IAAgM,CAAC,CAnB5M;AAoBPS,QAAAA,YAAY,EAAEsb,kBApBP;AAqBPrb,QAAAA,UAAU,EAAE,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B;AArBL;AAZe,KAA9B;AAyCA,UAAMyc,eAAe,GAAG,CAAC;AACrB,OAAC3nB,gBAAgB,CAAC+R,KAAlB,GAA0B,WADL;AAErB,OAAC/R,gBAAgB,CAACqkB,KAAlB,GAA0B;AAFL,KAAD,EAIxB;AACI,OAACrkB,gBAAgB,CAAC+R,KAAlB,GAA0B,gBAD9B;AAEI,OAAC/R,gBAAgB,CAACqkB,KAAlB,GAA0B;AAF9B,KAJwB,EAQxB;AACI,OAACrkB,gBAAgB,CAAC+R,KAAlB,GAA0B,YAD9B;AAEI,OAAC/R,gBAAgB,CAACqkB,KAAlB,GAA0B;AAF9B,KARwB,EAYxB;AACI,OAACrkB,gBAAgB,CAAC+R,KAAlB,GAA0B,qBAD9B;AAEI,OAAC/R,gBAAgB,CAACqkB,KAAlB,GAA0B;AAF9B,KAZwB,CAAxB;AAiBA,wBACI,uDACI;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKmB,cAAc,CAACjb,MAAf,GAAwB,CAAxB,gBACG,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,mBAAD;AAAqB,MAAA,cAAc,EAAEib,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,GAGc,EAJnB,eAMI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAwEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,SAAS,EAAC,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,cAAD;AACI,MAAA,WAAW,EAAC,MADhB;AAEI,MAAA,YAAY,EAAE,CAFlB;AAGI,MAAA,UAAU,EAAE,IAHhB;AAII,MAAA,oBAAoB,EAAE,KAAKphB,KAAL,CAAW2f,0BAJrC;AAKI,MAAA,cAAc,EAAE,EALpB;AAMI,MAAA,gBAAgB,EAAE,EANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQI,oBAAC,6BAAD,CACI;AADJ;AAEI,MAAA,cAAc,EAAE,IAFpB;AAGI,MAAA,0BAA0B,EAAE,KAAK3f,KAAL,CAAW2f,0BAH3C;AAII,MAAA,UAAU,EAAE,KAAKtf,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Bod,YAA5B,IAA4C,KAAKlf,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Bge,cAAxE,IAA0F,EAJ1G;AAKI,MAAA,cAAc,EAAE,KAAK9f,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IAAqF,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAjJ,GAAqJ,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAAjL,GAA0MoB,SAL9N,CAMI;AANJ;AAOI,MAAA,eAAe,EAAC,gBAPpB;AAQI,MAAA,gBAAgB,EAAE,KAAKjH,KAAL,CAAW1F,qBARjC;AASI,MAAA,eAAe,EAAE,CAACgb,aAAD,EAAgB6N,MAAhB,KACb,KAAKnjB,KAAL,CAAWrH,sBAAX,CAEI,EACI,GAAG2pB,sBADP;AAEI,WAAGhN;AAFP,OAFJ,EAKO6N,MALP,CAVR,CAiBI;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AA1BJ;AA2BI,MAAA,aAAa,EAAE,KAAKnjB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BshB,8BAA3D,IAA6F,KAAKpjB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BshB,8BAA5B,CAA2Dtd,MAA3D,GAAoE,CAAjK,GAAqK,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BshB,8BAAjM,GAAkO,EA3BrP,CA4BI;AA5BJ;AA6BI,MAAA,mBAAmB,EAAC,eA7BxB;AA8BI,MAAA,SAAS,EAAE,WA9Bf;AA+BI,MAAA,cAAc,EAAE,IA/BpB;AAgCI,MAAA,cAAc,EAAE,IAhCpB;AAiCI,MAAA,eAAe,EAAC,qBAjCpB;AAkCI,MAAA,WAAW,EAAC,oBAlChB;AAmCI,MAAA,gBAAgB,EAAC,wBAnCrB;AAoCI,MAAA,cAAc,EAAC,cApCnB;AAqCI,MAAA,SAAS,EAAE,KAAKzc,SArCpB;AAsCI,MAAA,UAAU,EAAC,WAtCf;AAuCI,MAAA,QAAQ,EAAC,eAvCb;AAwCI,MAAA,cAAc,EAAC,oBAxCnB;AAyCI,MAAA,kBAAkB,EAAC,qBAzCvB;AA0CI,MAAA,UAAU,EAAE,KAAK3G,KAAL,CAAWJ,KAAX,CAAiB6F,UA1CjC;AA2CI,MAAA,UAAU,EAAE,KAAK4d,UA3CrB;AA4CI,MAAA,WAAW,EAAE,KAAK9e,WA5CtB;AA6CI,MAAA,cAAc,EAAE,KAAKmC,cA7CzB;AA8CI,MAAA,SAAS,EAAEwc,eA9Cf;AA+CI,MAAA,SAAS,EAAE,EA/Cf;AAgDI,MAAA,eAAe,EAAE,KAAKljB,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,IAA6B,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAA7B,GAA6D7C,QAAQ,CAAC,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBgK,QAAjB,CAA0B,EAA1B,CAAD,CAAR,KAA4ClO,iBAAiB,CAAC2P,GAA9D,GAAoE,IAApE,GAA2E,KAAxI,GAAgJ,KAhDrK;AAiDI,MAAA,eAAe,EAAE,IAjDrB;AAkDI,MAAA,iBAAiB,EAAE,IAlDvB;AAmDI,MAAA,WAAW,EAAEmV,WAnDjB;AAoDI,MAAA,cAAc,EAAE,IApDpB;AAqDI,MAAA,gBAAgB,EAAE,KAAK/X,wBArD3B;AAsDI,MAAA,IAAI,EAAE,KAAK9I,KAAL,CAAWgJ,IAtDrB;AAuDI,MAAA,IAAI,EAAE,KAAKhJ,KAAL,CAAWiJ,IAvDrB;AAwDI,MAAA,YAAY,EAAE,CAAC,wBAAD,EAA2B,WAA3B,EAAwC,uBAAxC,EAAiE,0BAAjE,EAA6F,qBAA7F,CAxDlB;AAyDI,MAAA,WAAW,EAAE,CACT;AACI0a,QAAAA,KAAK,EAAE,KAAKtjB,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CADX;AAEI8c,QAAAA,WAAW,EAAE,aAFjB;AAGIC,QAAAA,UAAU,EAAE,oBAHhB;AAIIC,QAAAA,MAAM,EAAE,KAAK9jB,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyC4B,oBAAzC,MAAmE,CAAC,CAJhF;AAKIoM,QAAAA,OAAO,EAAE,KAAKvpB,kBALlB;AAMIkI,QAAAA,SAAS,EAAE;AACP2gB,UAAAA,cAAc,EAAE,gBADT;AAEPzT,UAAAA,SAAS,EAAE,QAFJ;AAGPzN,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAHtB;AAIPE,UAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC;AAJpB;AANf,OADS,EAcT;AACIshB,QAAAA,KAAK,EAAE,KAAKtjB,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CADX;AAEI8c,QAAAA,WAAW,EAAE,YAFjB;AAGIC,QAAAA,UAAU,EAAE,eAHhB;AAIIC,QAAAA,MAAM,EAAE,KAAK9jB,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyCyM,cAAzC,MAA6D,CAAC,CAJ1E;AAKIuB,QAAAA,OAAO,EAAE,KAAK7a,aALlB;AAMIxG,QAAAA,SAAS,EAAE;AACP2gB,UAAAA,cAAc,EAAE,gBADT;AAEPzT,UAAAA,SAAS,EAAE,QAFJ;AAGPzN,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAHtB;AAIPE,UAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QAJpB;AAKPkH,UAAAA,SAAS,EAAEiZ;AALJ;AANf,OAdS,EA4BT;AACImB,QAAAA,KAAK,EAAE,KAAKtjB,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CADX;AAEI8c,QAAAA,WAAW,EAAE,YAFjB;AAGIC,QAAAA,UAAU,EAAE,sBAHhB;AAIIC,QAAAA,MAAM,EAAE,KAAK9jB,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyC0M,gBAAzC,MAA+D,CAAC,CAJ5E;AAKIsB,QAAAA,OAAO,EAAE,KAAKhT,eALlB;AAMIrO,QAAAA,SAAS,EAAE;AACP2gB,UAAAA,cAAc,EAAE,gBADT;AAEPzT,UAAAA,SAAS,EAAE,QAFJ;AAGPzN,UAAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAHtB;AAIPE,UAAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBoC,QAJpB;AAKPkH,UAAAA,SAAS,EAAEkZ;AALJ;AANf,OA5BS,CAzDjB;AAoGI,MAAA,UAAU,EAAE,IApGhB;AAqGI,MAAA,aAAa,eACT,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,qDAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,4CAAlB;AAA+D,QAAA,IAAI,EAAC,QAApE;AACI,QAAA,MAAM,EAAE,KAAKziB,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyC2L,SAAzC,MAAwD,CAAC,CADrE;AAEI,oBAAU,KAAKrhB,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAFd,CAGI;AAHJ;AAII,QAAA,OAAO,EAAE,MAAM,KAAK/N,iBAAL,CAAuB6pB,kBAAvB,EAA2ClB,SAA3C,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKA,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAE7kB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,CADJ,eAQI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAqD,QAAA,OAAO,EAAC,MAA7D;AACI,oBAAU,KAAKwD,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CADd,CAEI;AAFJ;AAGI,QAAA,OAAO,EAAE,KAAKkQ,UAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAElZ,MAAvB;AAA+B,QAAA,KAAK,EAAE;AAAE,mBAAS;AAAX,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CARJ,CAtGR;AAsHI,MAAA,eAAe,EAAE,CACb;AACI,sCAAiB,oBAAC,aAAD;AACb,UAAA,UAAU,EAAE,KAAKkC,KAAL,CAAW4e,cAAX,IAA6B,EAD5B;AAEb,UAAA,eAAe,EAAE,KAAKve,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2B,eAA5B,IAA+C,EAFnD;AAGb,UAAA,UAAU,EAAE,KAAK9D,KAAL,CAAWgf,cAAX,IAA6B,EAH5B;AAIb,UAAA,eAAe,EAAE,KAAK3e,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuC,eAA5B,IAA+C,EAJnD;AAKb,UAAA,OAAO,EAAE,KAAK1E,KAAL,CAAWif,oBAAX,IAAmC,EAL/B;AAMb,UAAA,YAAY,EAAE,KAAK5e,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BU,YAA5B,IAA4C,EAN7C;AAOb,UAAA,UAAU,EAAE,KAAK7C,KAAL,CAAWkf,uBAAX,IAAsC,EAPrC;AAQb,UAAA,eAAe,EAAE,KAAK7e,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,EARnD;AASb,UAAA,eAAe,EAAE,KAAK/C,KAAL,CAAWgkB,iBAAX,IAAgC,EATpC;AAUb,UAAA,oBAAoB,EAAE,KAAK3jB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BiC,oBAA5B,IAAoD,EAV7D;AAWb,UAAA,qBAAqB,EAAE,KAAK/D,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B0D,qBAXtC;AAYb,UAAA,0BAA0B,EAAE,KAAKxF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8B,0BAA5B,IAA0D,EAZzE,CAab;AACA;AACA;AACA;AAhBa;AAiBb,UAAA,YAAY,EAAE,KAAKjE,KAAL,CAAWmf,gBAAX,IAA+B,EAjBhC;AAkBb,UAAA,iBAAiB,EAAE,KAAK9e,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmD,iBAA5B,IAAiD,EAlBvD;AAmBb,UAAA,QAAQ,EAAE,KAAKjF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA5B,GAAuClH,mBAAmB,CAAC,KAAKmF,KAAL,CAAWJ,KAAX,CAAiBoC,QAAlB,EAA4B,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAAxD,CAA1D,GAA8H,IAAIH,IAAJ,EAnB3H;AAoBb,UAAA,MAAM,EAAE,KAAK5B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAA5B,GAAqCrH,mBAAmB,CAAC,KAAKmF,KAAL,CAAWJ,KAAX,CAAiBoC,QAAlB,EAA4B,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAxD,CAAxD,GAA0H,IAAIN,IAAJ,EApBrH;AAqBb,UAAA,mBAAmB,EAAE,KAAKwB,mBArBb;AAsBb,UAAA,gBAAgB,EAAE,KAAK3B,gBAtBV;AAuBb,UAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWJ,KAAX,CAAiBoC,QAvBd;AAwBb,UAAA,sBAAsB,EAAE,KAAK4hB,sBAxBhB;AAyBb,UAAA,oBAAoB,EAAE,KAAKjkB,KAAL,CAAW0f,kBAAX,IAAiC,EAzB1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADrB,OADa,CAtHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAyKK,KAAKrf,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Bge,cAA5B,IAA8C,KAAK9f,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4Bge,cAA5B,CAA2Cha,MAA3C,GAAoD,CAAlG,IAAuG,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAAnI,IAA6J,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,GAA4D,CAAzN,gBACG,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASI,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYQ,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,qDAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIK,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDsM,qBAAhD,KAA0EvV,iBAAiB,CAAC2P,GAA/I,iBACG,oBAAC,GAAD,CAAK,IAAL;AAEI,MAAA,SAAS,EAAC,kCAFd,CAGI;AAHJ;AAII,kBAAU,KAAKrL,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAJd;AAIwE,oBAAW,MAJnF;AAKI,MAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyCgM,aAAzC,MAA4D,CAAC,CALzE;AAMI,MAAA,OAAO,EAAE,MAAM,KAAKrL,WAAL,EANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE1Z,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CALR,EA6CS,KAAKqD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDkR,kBAAnG,IACE,KAAK9V,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDkR,kBAAhD,KAAuEpa,iBAAiB,CAAC0L,EAD5F;AAAA;AAEJ;AACA;AACA;AACA;AACI,wBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd;AAEI,kBAAU,KAAKpH,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFd;AAEsE,oBAAW,MAFjF;AAGI,MAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyC8L,MAAzC,MAAqD,CAAC,CAHlE,CAII;AAJJ;AAKI,MAAA,OAAO,EAAE,MAAM,KAAKxhB,KAAL,CAAWzF,0BAAX,CAAsCuoB,cAAtC,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEvmB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAnDR,EAiES,KAAKyD,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDkR,kBAAnG,IACM,KAAK9V,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDkR,kBAAhD,KAAuEpa,iBAAiB,CAAC0L,EADhG;AAAA;AAEJ;AACA;AACA;AACA;AACI,wBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd;AAEI,kBAAU,KAAKpH,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFd;AAE0E,oBAAW,MAFrF;AAGI,MAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyC+L,QAAzC,MAAuD,CAAC,CAHpE;AAII,MAAA,OAAO,EAAE,MAAM,KAAKzhB,KAAL,CAAW9H,uBAAX,CAAmCyqB,gBAAnC,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE5lB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAvER;AAAA;AAsHI;AACA;AACA;AACI,wBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd;AAEI,kBAAU,KAAKiD,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFd;AAE6E,oBAAW,MAFxF;AAGI,MAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyCiM,kBAAzC,MAAiE,CAAC,CAH9E;AAII,MAAA,OAAO,EAAE,MAAM,KAAK3hB,KAAL,CAAWjH,uBAAX,CAAmCkqB,qBAAnC,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,gBAAD;AAAkB,MAAA,SAAS,EAAC,cAA5B;AAA2C,MAAA,KAAK,EAAC,IAAjD;AAAsD,MAAA,MAAM,EAAC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAzHR,EAuJK,KAAKjjB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAAhD,KAAoEpI,UAAU,CAACigB,YAAlI,IACG,KAAKvb,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDuM,kBAAhD,KAAuExV,iBAAiB,CAAC2P,GAD5F,iBAEG,oBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd,CAEI;AAFJ;AAGI,kBAAU,KAAKrL,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAHd;AAG0E,oBAAW,MAHrF;AAII,MAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyCqM,eAAzC,MAA8D,CAAC,CAJ3E;AAKI,MAAA,OAAO,EAAE,MAAM,KAAKvL,iBAAL,EALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMQ,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,MAArB;AAA4B,MAAA,MAAM,EAAC,MAAnC;AAA0C,MAAA,SAAS,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CAzJR,eAsLI,oBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd;AAEI,kBAAU,KAAKxW,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFd;AAE2E,oBAAW,MAFtF;AAGI,MAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyCwM,sBAAzC,MAAqE,CAAC,CAHlF;AAII,MAAA,OAAO,EAAE,MAAM,KAAKroB,oBAAL,CAA0BqoB,sBAA1B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE9kB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAtLJ;AAAA;AAiMI;AACA;AACI,wBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd;AAEI,kBAAU,KAAK4C,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFd;AAE6E,oBAAW,MAFxF,CAGI;AAHJ;AAII,MAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyCkM,cAAzC,MAA6D,CAAC,CAJ1E;AAKI,MAAA,OAAO,EAAE,MAAM,KAAKnQ,cAAL,CAAoB,sBAApB,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,cAAnB;AAAkC,MAAA,KAAK,EAAC,IAAxC;AAA6C,MAAA,MAAM,EAAC,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAnMR,CA2MQ;AA3MR,mBAmNI,oBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd,CAEI;AAFJ;AAGI,kBAAU,KAAKzR,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAHd;AAGkF,oBAAW,MAH7F;AAII,MAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyCsM,uBAAzC,MAAsE,CAAC,CAJnF;AAKI,MAAA,OAAO,EAAE,MAAM,KAAKvL,yBAAL,CAA+B,2BAA/B,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,yBAAD;AAA2B,MAAA,KAAK,EAAC,MAAjC;AAAwC,MAAA,MAAM,EAAC,MAA/C;AAAsD,MAAA,SAAS,EAAC,cAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAnNJ,eAmOI,oBAAC,GAAD,CAAK,IAAL;AACI,MAAA,SAAS,EAAC,kCADd,CAEI;AAFJ;AAGI,kBAAU,KAAKzW,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAHd;AAG+E,oBAAW,MAH1F;AAII,MAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyCuM,oBAAzC,MAAmE,CAAC,CAJhF;AAKI,MAAA,OAAO,EAAE,MAAM,KAAKxL,yBAAL,CAA+B,wBAA/B,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,sBAAD;AAAwB,MAAA,KAAK,EAAC,MAA9B;AAAqC,MAAA,MAAM,EAAC,MAA5C;AAAmD,MAAA,SAAS,EAAC,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAnOJ,eA+PS,oBAAC,aAAD;AACW,MAAA,GAAG,EAAE,IADhB;AAEW,MAAA,IAAI,eACA,uDACA,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,SAAS,EAAC,UAAlC;AAA6C,QAAA,MAAM,EAAE,KAAK9W,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyClH,SAAzC,MAAwD,CAAC,CAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD,CAAK,IAAL;AACI,QAAA,SAAS,EAAC,gDADd;AAEI,oBAAU,KAAKxO,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAFd;AAE0E,sBAAW,MAFrF;AAGI,QAAA,OAAO,EAAE,MAAM,KAAK8H,aAAL,CAAmBC,SAAnB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,OAKiB,KAAKxO,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CALjB,CADJ,CADA,eAUA,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,SAAS,EAAC,UAAlC;AAA6C,QAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyClG,aAAzC,MAA4D,CAAC,CAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD,CAAK,IAAL;AACI,QAAA,SAAS,EAAC,gDADd;AAEI,oBAAU,KAAKxP,KAAL,CAAWJ,KAAX,CAAiBiQ,YAAjB,IAAiC,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBiQ,YAAjB,CAA8B,mBAA9B,CAAjC,GACN,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBiQ,YAAjB,CAA8B,mBAA9B,EAAmD,UAAnD,EAA+D,cAA/D,EAA+E,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B8N,iBAAzG,CADM,GAEJ,KAAK9P,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAJV;AAKI,sBAAW,MALf,CAMI;AANJ;AAOI,QAAA,OAAO,EAAE,MAAM,KAAK7M,iBAAL,CAAuB4V,aAAvB,CAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQI,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,KAAK,EAAC,IAAlD;AAAuD,QAAA,MAAM,EAAC,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,OAQ2E,KAAKxP,KAAL,CAAWJ,KAAX,CAAiBiQ,YAAjB,IAAiC,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBiQ,YAAjB,CAA8B,mBAA9B,CAAjC,GACnE,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBiQ,YAAjB,CAA8B,mBAA9B,EAAmD,UAAnD,EAA+D,cAA/D,EAA+E,KAAK7P,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B8N,iBAAzG,CADmE,GAEjE,KAAK9P,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAVV,CADJ,CAVA,eAwBA,oBAAC,SAAD,CAAW,IAAX;AAAiB,QAAA,EAAE,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,UAAnC;AAA8C,QAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyC1F,UAAzC,MAAyD,CAAC,CAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD,CAAK,IAAL;AACI;AACA,QAAA,SAAS,EAAC,gDAFd;AAGI,oBAAU,KAAKhQ,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAHd;AAII,sBAAW,MAJf,CAKI;AALJ;AAMI,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKsJ,0BAAL,CAAgCC,UAAhC;AAA6C,SANlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOI,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,cAApB;AAAmC,QAAA,KAAK,EAAC,IAAzC;AAA8C,QAAA,MAAM,EAAC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,OAOkE,KAAKhQ,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAPlE,CADJ,CAxBA,eAmCA,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,SAAS,EAAC,UAAlC;AAA6C,QAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyC5D,YAAzC,MAA2D,CAAC,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD,CAAK,IAAL;AACI,QAAA,SAAS,EAAC,gDADd;AAEI,oBAAU,KAAK9R,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAFd;AAEuE,sBAAW,MAFlF;AAGI,QAAA,OAAO,EAAE,MAAM,KAAKoL,gBAAL,CAAsBC,YAAtB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,cAAtB;AAAqC,QAAA,KAAK,EAAC,IAA3C;AAAgD,QAAA,MAAM,EAAC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,OAIoE,KAAK9R,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAJpE,CADJ,CAnCA,eA2CA,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,SAAS,EAAC,UAAlC;AAA6C,QAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyC/D,YAAzC,MAA2D,CAAC,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD,CAAK,IAAL;AACI,QAAA,SAAS,EAAC,gDADd;AAEI,oBAAU,KAAK3R,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAFd;AAE2E,sBAAW,MAFtF,CAGI;AAHJ;AAII,QAAA,OAAO,EAAE,MAAM,KAAKiL,sBAAL,CAA4BC,YAA5B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,cAAtB;AAAqC,QAAA,KAAK,EAAC,IAA3C;AAAgD,QAAA,MAAM,EAAC,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,OAKoE,KAAK3R,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CALpE,CADJ,CA3CA,eAoDA,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,SAAS,EAAC,UAAlC;AAA6C,QAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyCpH,gBAAzC,MAA+D,CAAC,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD,CAAK,IAAL;AACI,QAAA,SAAS,EAAC,gDADd;AAEI,oBAAU,KAAKtO,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAFd;AAEgF,sBAAW,MAF3F;AAGI,QAAA,OAAO,EAAE,MAAM,KAAKjN,eAAL,CAAqB8U,gBAArB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,OAI6B,KAAKtO,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAJ7B,CADJ,CApDA,eA6DA,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,SAAS,EAAC,UAAlC;AAA6C,QAAA,MAAM,EAAE,KAAK9G,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyCtH,UAAzC,MAAyD,CAAC,CAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD,CAAK,IAAL;AACA,QAAA,SAAS,EAAC,gDADV;AAEA,oBAAU,KAAKpO,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAC;AAAL,SAA9B,CAFV;AAEiE,sBAAW,MAF5E;AAGA,QAAA,OAAO,EAAE,MAAM,KAAKvM,cAAL,CAAoBkU,UAApB,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAE3Q,MAAvB;AAA+B,QAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,OAIwD,KAAKuC,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAC;AAAL,OAA9B,CAJxD,CADJ,CA7DA,EAqEK,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,IAAmD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDkF,eAAhD,KAAoEnO,iBAAiB,CAAC2P,GAAzI,iBAEG,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,SAAS,EAAC,WAAlC;AAA+C,QAAA,MAAM,EAAE,KAAK1L,KAAL,CAAWyP,qBAAX,CAAiCsG,OAAjC,CAAyC6L,cAAzC,MAA6D,CAAC,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD,CAAK,IAAL;AACI,QAAA,SAAS,EAAC,gDADd,CAEI;AAFJ;AAGI,oBAAU,KAAKvhB,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAHd;AAII,QAAA,OAAO,EAAE,MAAM,KAAKwP,YAAL,CAAkBsL,cAAlB,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEzkB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,OAKwC,KAAKkD,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CALxC,CADJ,CAvER,CAHf;AAsFW,MAAA,MAAM,EAAE,KAtFnB;AAuFW,MAAA,QAAQ,EAAE,IAvFrB;AAwFW,MAAA,UAAU,EAAC,0BAxFtB;AAyFW,MAAA,OAAO,EAAC,OAzFnB;AA0FW,MAAA,IAAI,EAAEjH,mBA1FjB,CA2FW;AA3FX;AA4FW,MAAA,aAAa,EAAGgE,KAAD,IAAW,KAAKqgB,YAAL,CAAkBrgB,KAAlB,CA5FrC;AA6FW,MAAA,qBAAqB,EAAE,KAAK7D,KAAL,CAAWyP,qBA7F7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/PT,CAZR,CATJ,CADJ,eAyXI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYI,oBAAC,wBAAD;AACI,MAAA,aAAa,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4C6E,cAA3F,IAA6G,KADhI;AAEI,MAAA,IAAI,EAAE,KAAK5H,KAAL,CAAWa,IAFrB;AAGI,MAAA,UAAU,EAAE1J,OAAO,CAAC,KAAKkJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgiB,aAA5B,IAA6C,KAAK9jB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgiB,aAAzE,IAA0F,KAAK9jB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,IAAqD,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA3K,IAAoM,EAArM,EAAyM,KAAKnP,KAAL,CAAWW,SAApN,CAHvB;AAII,MAAA,SAAS,EAAE,KAAKX,KAAL,CAAWW,SAJ1B;AAKI,MAAA,eAAe,EAAE,KAAKF,eAL1B;AAMI,MAAA,cAAc,EAAE,KAAK2jB,cANzB;AAOI,MAAA,aAAa,EAAE,KAAKpc,aAPxB;AAQI,MAAA,cAAc,EAAE,KAAKG,cARzB;AASI,MAAA,UAAU,EAAE,KAAKE,UATrB,CAUI;AAVJ;AAWI,MAAA,eAAe,EAAE,KAAKrI,KAAL,CAAW0e,eAXhC;AAYI,MAAA,kBAAkB,EAAE,KAAK1e,KAAL,CAAWqkB,kBAZnC;AAaI,MAAA,mBAAmB,EAAE,KAAKvE,iBAAL,CAAuB,KAAK9f,KAAL,CAAWskB,eAAlC,KAAsD,EAb/E;AAcI,MAAA,kBAAkB,EAAE,KAAKxE,iBAAL,CAAuB,KAAK9f,KAAL,CAAWukB,mBAAlC,KAA0D,EAdlF;AAeI,MAAA,WAAW,EAAC,UAfhB;AAgBI,MAAA,UAAU,EAAE,KAAKvN,UAhBrB;AAiBI,MAAA,UAAU,EAAE,KAAKhX,KAAL,CAAWiR,UAjB3B;AAkBI,MAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBAlBtC;AAmBI,MAAA,UAAU,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBwC,UAnBjC;AAoBI,MAAA,QAAQ,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBoC,QApB/B;AAqBI,MAAA,QAAQ,EAAE,IArBd;AAsBI,MAAA,UAAU,EAAE,YAtBhB;AAuBI,MAAA,UAAU,EAAE,OAvBhB;AAwBI,MAAA,OAAO,EAAE,MAxBb,CAyBI;AACA;AACA;AACA;AA5BJ;AA6BI,MAAA,kBAAkB,EAAE,KA7BxB;AA8BI,MAAA,kBAAkB,EAAE,IA9BxB;AA+BI,MAAA,UAAU,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBuO,UA/BjC;AAgCI,MAAA,QAAQ,EAAE,IAhCd;AAiCI,MAAA,WAAW,EAAE,IAjCjB;AAkCI,MAAA,SAAS,EACL,KAAKnO,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqiB,wBAnCpC;AAqCI,MAAA,eAAe,EAAE,KAAK1E,iBAAL,CAAuB,KAAK9f,KAAL,CAAWykB,wBAAlC,KAA+D,EArCpF;AAsCI,MAAA,iBAAiB,EAAE,WAtCvB;AAuCI,MAAA,oBAAoB,EAAE,wBAvC1B,CAwCI;AAxCJ;AAyCI,MAAA,YAAY,EACR,KAAKpkB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuiB,mBA1CpC;AA4CI,MAAA,eAAe,EAAE,KAAKrkB,KAAL,CAAWJ,KAAX,CAAiB0kB,eA5CtC;AA6CI,MAAA,SAAS,EAAE,SA7Cf;AA8CI,MAAA,qBAAqB,EAAE,KAAK9J,qBA9ChC;AA+CI,MAAA,0BAA0B,EAAE,KAAKjB,0BA/CrC;AAgDI,MAAA,oBAAoB,EAAE,KAAKkB,oBAhD/B;AAiDI,MAAA,uBAAuB,EAAE,KAAKE,uBAjDlC;AAkDI,MAAA,6BAA6B,EAAE,KAAKhB,6BAlDxC;AAmDI,MAAA,eAAe,EAAE,KAAKV,eAnD1B;AAoDI,MAAA,aAAa,EAAE,KAAK7D,gBApDxB,CAqDA;AArDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CAzXJ,CADJ,CADH,GAicK,EA1mBV,CADA,CAxEJ,CANJ,CADJ,EAksBQ,KAAKzV,KAAL,CAAW4I,UAAX,gBACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE8X,QAAjB;AACI,MAAA,UAAU,EAAE,KAAK1gB,KAAL,CAAW4I,UAD3B;AAEI,MAAA,UAAU,EAAE,KAAKgP,aAFrB;AAGI,MAAA,IAAI,EAAE,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAMM,EAxsBd,EA2sBQ,KAAKvX,KAAL,CAAWJ,KAAX,CAAiBwG,SAAjB,iBACA,oBAAC,aAAD;AACI,MAAA,IAAI,EAAE,KAAKpG,KAAL,CAAWJ,KAAX,CAAiBwG,SAAjB,IAA8B,KAAKzG,KAAL,CAAWyG,SADnD;AAEI,MAAA,IAAI,EAAG,KAAKpG,KAAL,CAAWJ,KAAX,CAAiBkO,SAAjB,IAA8B,KAAK9N,KAAL,CAAWJ,KAAX,CAAiBwX,oBAAhD,GAAwE,IAAxE,GAA+E,IAFzF;AAGI,MAAA,UAAU,EAAE,KAAKrJ,UAHrB;AAII,MAAA,UAAU,EAAE,KAAK/N,KAAL,CAAWJ,KAAX,CAAiBwC,UAJjC;AAKI,MAAA,eAAe,EACX,KAAKpC,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,GACE6U,eADF,GACmB,KAAKtb,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,GAA8F0Z,uBAA9F,GAAsH,EAPjJ;AAQI,MAAA,UAAU,EAAE,KAAKngB,KAAL,CAAWJ,KAAX,CAAiBwX,oBAAjB,GAAwC,KAAKpX,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAxC,GAA6F,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0W,gBAAjB,GACrG,KAAKtW,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADqG,GAEnG,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBiX,gBAAjB,GAAoC,KAAK7W,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAApC,GACI,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBmX,uBAAjB,GAA2C,KAAK/W,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAA3C,GACI,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBoX,oBAAjB,GAAwC,KAAKhX,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAxC,GACI,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkX,cAAjB,IAAmC,oBAAnC,GAA0D,KAAK9W,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAA1D,GACI,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAd3C;AAeI,MAAA,WAAW,EACP,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,GAAkG,KAAKgK,oBAAvG,GACA,KAAKzQ,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,GAA8F,KAAKsL,qBAAnG,GACC,KAAK/R,KAAL,CAAWJ,KAAX,CAAiBqX,0BAAjB,IAA+C,KAAKjX,KAAL,CAAWJ,KAAX,CAAiBsX,uBAAhE,IAA2F,KAAKlX,KAAL,CAAWJ,KAAX,CAAiBwX,oBAA5G,IACG,KAAKpX,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADpC,GAC8F,KAAK4U,gBADnG,GAEA,KAAKjG,gBApBb;AAqBI,MAAA,KAAK,EAAE,KAAKpV,KAAL,CAAWJ,KAAX,CAAiBkO,SArB5B;AAsBI,MAAA,aAAa,EAAE,KAAK6K,aAtBxB;AAuBI,MAAA,YAAY,EAAE,KAAK3Y,KAAL,CAAWJ,KAAX,CAAiBue,YAvBnC;AAwBI,MAAA,WAAW,EAAE,KAAKne,KAAL,CAAW1I,WAxB5B;AAyBI,MAAA,cAAc,EAAE,KAAKqI,KAAL,CAAW8H,cAAX,IAA6B,EAzBjD,CA0BI;AA1BJ;AA2BI,MAAA,QAAQ,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,uBAAhC,IAA2D,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAA3F,IACN,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,wBAD1B,GACsD,IADtD,GAC2D,KAAKtG,KAAL,CAAWJ,KAAX,CAAiBhB,kBAAjB,GAC/D,IAD+D,GACxD,KAAKoB,KAAL,CAAWJ,KAAX,CAAiBkX,cAAjB,IAAmC,oBAAnC,GACP,IADO,GACC,CAAC,KAAK9W,KAAL,CAAWJ,KAAX,CAAiBmX,uBAAjB,IAA4C,KAAK/W,KAAL,CAAWJ,KAAX,CAAiBoX,oBAA9D,KACP,CAAC,KAAKhX,KAAL,CAAWJ,KAAX,CAAiBwX,oBADZ,GACoC,IADpC,GAEP,KAAKpX,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,IACC,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UADlB,IACgC,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAD5D,IAEC,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,KAA6D,CAF9D,IAGC,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA2EtL,iBAAiB,CAACwL,QAH9F,GAGyG,IAHzG,GAID,KAAKlH,KAAL,CAAWJ,KAAX,CAAiB2W,QApC1B;AAqCI,MAAA,YAAY,EAAE,KAAKvW,KAAL,CAAWJ,KAAX,CAAiBkO,SAAjB,gBACV,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAK9N,KAAL,CAAWJ,KAAX,CAAiB2P,SAAnC;AACI,QAAA,aAAa,EAAE,KAAKvP,KAAL,CAAWuG,IAAX,CAAgBC,aADnC;AAEI,QAAA,eAAe,EAAE,KAAKgR,eAF1B;AAGI,QAAA,UAAU,EAAE,KAAKxX,KAAL,CAAWJ,KAAX,CAAiBwC,UAHjC;AAII,QAAA,cAAc,EAAE,KAAKzC,KAAL,CAAW8H,cAAX,IAA6B,EAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU,GAOV,KAAKzH,KAAL,CAAWJ,KAAX,CAAiBwX,oBAAjB,gBACI,oBAAC,gBAAD;AACI,QAAA,SAAS,EAAE,KAAKpX,KAAL,CAAWJ,KAAX,CAAiB2P,SADhC;AAEI,QAAA,UAAU,EAAE,KAAKvP,KAAL,CAAWJ,KAAX,CAAiBwC,UAFjC;AAGI,QAAA,cAAc,EAAE,KAAKzC,KAAL,CAAW8H,cAAX,IAA6B,EAHjD;AAII,QAAA,eAAe,EAAE,KAAK2T,eAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAOM,KAAKpb,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,gBACE,oBAAC,oBAAD;AACI,QAAA,SAAS,EAAE,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB2P,SADhC,CAEI;AAFJ;AAGI,QAAA,UAAU,EAAE,KAAKvP,KAAL,CAAWJ,KAAX,CAAiBwC,UAHjC;AAII,QAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAJjC,CAKI;AACA;AACA;AAPJ;AAQI,QAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBgK,QAR/B;AASI,QAAA,gBAAgB,EAAE,KAAKlE,gBAT3B;AAUI,QAAA,QAAQ,EAAE,KAAK1F,KAAL,CAAWJ,KAAX,CAAiBoC,QAV/B;AAWI,QAAA,UAAU,EAAE,KAAKrC,KAAL,CAAWiR,UAX3B;AAYI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBAZtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAcI,KAAKpP,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,mBAAhC,gBACE,oBAAC,kBAAD;AACI,QAAA,MAAM,EAAE,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB+K,MAAjB,IAA2B,EADvC;AAEI,QAAA,QAAQ,EAAE,KAAKgN,2BAFnB;AAGI,QAAA,IAAI,EAAE,KAAK3X,KAAL,CAAWJ,KAAX,CAAiB0M,WAH3B;AAII,QAAA,MAAM,EAAE,KAAKtM,KAAL,CAAWJ,KAAX,CAAiBsM,aAJ7B;AAKI,QAAA,IAAI,EAAE,KAAKlM,KAAL,CAAWJ,KAAX,CAAiB2kB,SAL3B;AAMI,QAAA,IAAI,EAAE,KAAKvkB,KAAL,CAAWJ,KAAX,CAAiB4kB,SAN3B;AAOI,QAAA,gBAAgB,EAAE,KAAKC,gBAP3B;AAQI,QAAA,WAAW,EAAE,KAAKzkB,KAAL,CAAWJ,KAAX,CAAiB8kB,WAAjB,IAAgC,EARjD;AASI,QAAA,UAAU,EAAE,KAAK1kB,KAAL,CAAWJ,KAAX,CAAiB+kB,UATjC;AAUI,QAAA,UAAU,EAAE,KAAKvM,mBAVrB;AAWI,QAAA,kBAAkB,EAAE,KAAKJ,kBAX7B;AAYI,QAAA,QAAQ,EAAE,KAAKhY,KAAL,CAAWJ,KAAX,CAAiBoC,QAZ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAeI,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkX,cAAjB,IAAmC,oBAAnC,gBACE,oBAAC,eAAD;AACI,QAAA,cAAc,EAAE,KAAK9W,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BzI,cADhD;AAEI,QAAA,qBAAqB,EAAE,KAF3B;AAGI,QAAA,SAAS,EAAE,KAAKsG,KAAL,CAAWqB,uBAH1B;AAII,QAAA,UAAU,EAAElK,OAAO,CAAC,KAAKkJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BzI,cAA3D,IAA6E,EAA9E,EAAkF,KAAKsG,KAAL,CAAWqB,uBAA7F,CAJvB;AAKI,QAAA,eAAe,EAAE,KAAKD,6BAL1B;AAMI,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWJ,KAAX,CAAiBoC,QAN/B;AAOI,QAAA,UAAU,EAAE,KAAKrC,KAAL,CAAWiR,UAP3B;AAQI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBARtC;AASI,QAAA,gBAAgB,EAAE,KAAK1J,gBAT3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAYI,KAAK1F,KAAL,CAAWJ,KAAX,CAAiB0W,gBAAjB,GACF,KAAKtW,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,IAAqD,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkDhJ,MAAlD,KAA6D,CAAlH,gBACI,oBAAC,cAAD;AACI,QAAA,IAAI,EAAG,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,IAAqD,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkDhJ,MAAlD,GAA2D,CAAjH,GACF,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkD,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,CAAkDhJ,MAAlD,GAA2D,CAA7G,CADE,GACgH,EAF1H;AAGI,QAAA,UAAU,EAAE,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,IAAqD,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAAjF,GACR,KAAKnP,KAAL,CAAWilB,UADH,GACgB,EAJhC;AAKI,QAAA,UAAU,EAAC,gBALf;AAMI,QAAA,QAAQ,EAAE,KAAK5kB,KAAL,CAAWJ,KAAX,CAAiBoC,QAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,gBAUI,oBAAC,aAAD;AACI,QAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BE,QAA5B,IAAwC,EADtD;AAEI,QAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgN,qBAA5B,IAAqD,EAFnE;AAGI,QAAA,UAAU,EAAE,KAAK9O,KAAL,CAAWJ,KAAX,CAAiBkC,UAHjC;AAII,QAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBwC,UAJjC;AAKI,QAAA,SAAS,EAAE,KAAKzC,KAAL,CAAW6B,mBAL1B;AAMI,QAAA,eAAe,EAAE,KAAKD,yBAN1B;AAOI,QAAA,mBAAmB,EAAE,KAAKke,iBAAL,CAAuB,KAAK9f,KAAL,CAAWilB,UAAlC,KAAiD,EAP1E;AAQI,QAAA,iBAAiB,EAAE,EARvB;AASI,QAAA,eAAe,EAAE,WATrB;AAUI,QAAA,WAAW,EAAC,UAVhB;AAWI,QAAA,UAAU,EAAC,iBAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,GAwBI,KAAK5kB,KAAL,CAAWJ,KAAX,CAAiBiX,gBAAjB,IAAqC,KAAK7W,KAAL,CAAWJ,KAAX,CAAiBwG,SAAtD,gBACE,oBAAC,QAAD,CACI;AADJ;AAEI,QAAA,eAAe,EAAC,6BAFpB;AAGI,QAAA,IAAI,EAAE,KAAKpG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+iB,cAA5B,IAA8C,EAHxD;AAII,QAAA,UAAU,EAAE/tB,OAAO,CAAC,KAAKkJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+iB,cAA5B,IAA8C,KAAK7kB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+iB,cAA1E,IAA4F,EAA7F,EAAiG,KAAKllB,KAAL,CAAWe,sBAA5G,CAJvB;AAKI,QAAA,SAAS,EAAE,KAAKf,KAAL,CAAWe,sBAL1B;AAMI,QAAA,qBAAqB,EAAE,KAN3B;AAOI,QAAA,UAAU,EAAE,KAAKf,KAAL,CAAWiR,UAP3B;AAQI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBARtC;AASI,QAAA,mBAAmB,EAAE,KAAK8Q,2BAT9B;AAUI,QAAA,UAAU,EAAE,KAAKlgB,KAAL,CAAWJ,KAAX,CAAiBuO,UAVjC;AAWI,QAAA,QAAQ,EAAE,IAXd;AAYI,QAAA,eAAe,EAAE,KAAK1N,4BAZ1B;AAaI,QAAA,UAAU,EAAE,YAbhB;AAcI,QAAA,UAAU,EAAE,OAdhB;AAeI,QAAA,gBAAgB,EAAE,IAftB;AAgBI,QAAA,SAAS,EAAE,gBAhBf;AAiBI,QAAA,gBAAgB,EAAE,KAAKya,kBAjB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAqBI,KAAKlb,KAAL,CAAWJ,KAAX,CAAiBmX,uBAAjB,IAA4C,KAAK/W,KAAL,CAAWJ,KAAX,CAAiBwG,SAA7D,gBACE,oBAAC,qBAAD;AACI,QAAA,4BAA4B,EAAE,KAAKpG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgjB,4BAA5B,IAA4D,EAD9F;AAEI,QAAA,UAAU,EAAE,KAAKnlB,KAAL,CAAWiR,UAF3B;AAGI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBAHtC;AAII,QAAA,0BAA0B,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBwP,qBAJjD;AAKI,QAAA,QAAQ,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAL/B;AAMI,QAAA,SAAS,EAAE,uBANf;AAOI,QAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgK,QAP/B;AAQI,QAAA,aAAa,EAAE,IARnB;AASI,QAAA,iBAAiB,EAAE,KATvB;AAUI,QAAA,gBAAgB,EAAE,KAVtB;AAWI,QAAA,qBAAqB,EAAE,KAX3B;AAYI,QAAA,uBAAuB,EAAE,KAZ7B;AAaI,QAAA,UAAU,EAAE,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBwC,UAbjC;AAcI,QAAA,UAAU,EAAE,2BAdhB;AAeI,QAAA,OAAO,EAAE,EAfb;AAgBI,QAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAhBjC;AAiBI,QAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBmlB,UAjBjC;AAkBI,QAAA,cAAc,EAAE,KAAKplB,KAAL,CAAW8H,cAlB/B;AAmBI,QAAA,SAAS,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB2P,SAnBhC;AAoBI,QAAA,eAAe,EAAE,KAAK6L,eApB1B;AAqBI,QAAA,YAAY,EAAE,KAAK+B,2BArBvB;AAsBI,QAAA,SAAS,EAAE,KAAKxd,KAAL,CAAWyB,uBAtB1B;AAuBI,QAAA,eAAe,EAAE,KAAKD,6BAvB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GA0BI,KAAKnB,KAAL,CAAWJ,KAAX,CAAiBqX,0BAAjB,gBACE,oBAAC,wBAAD;AACI,QAAA,4BAA4B,EAAE,KAAKjX,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgjB,4BAA5B,IAA4D,EAD9F;AAEI,QAAA,UAAU,EAAE,KAAKnlB,KAAL,CAAWiR,UAF3B;AAGI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBAHtC;AAII,QAAA,0BAA0B,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBwP,qBAJjD;AAKI,QAAA,QAAQ,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAL/B;AAMI,QAAA,SAAS,EAAE,uBANf;AAOI,QAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgK,QAP/B;AAQI,QAAA,aAAa,EAAE,IARnB;AASI,QAAA,iBAAiB,EAAE,KATvB;AAUI,QAAA,gBAAgB,EAAE,KAVtB;AAWI,QAAA,qBAAqB,EAAE,KAX3B;AAYI,QAAA,uBAAuB,EAAE,KAZ7B;AAaI,QAAA,UAAU,EAAE,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBwC,UAbjC;AAcI,QAAA,UAAU,EAAE,uBAdhB;AAeI,QAAA,OAAO,EAAE,EAfb;AAgBI,QAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAhBjC;AAiBI,QAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBmlB,UAjBjC;AAkBI,QAAA,cAAc,EAAE,KAAKplB,KAAL,CAAW8H,cAlB/B;AAmBI,QAAA,SAAS,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB2P,SAnBhC;AAoBI,QAAA,eAAe,EAAE,KAAK6L,eApB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAuBI,KAAKpb,KAAL,CAAWJ,KAAX,CAAiBoX,oBAAjB,IAAyC,KAAKhX,KAAL,CAAWJ,KAAX,CAAiBwG,SAA1D,gBACE,oBAAC,kBAAD;AACI,QAAA,yBAAyB,EAAE,KAAKpG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkjB,yBAA5B,IAAyD,EADxF;AAEI,QAAA,UAAU,EAAE,KAAKrlB,KAAL,CAAWiR,UAF3B;AAGI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBAHtC;AAII,QAAA,0BAA0B,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBwP,qBAJjD;AAKI,QAAA,QAAQ,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAL/B;AAMI,QAAA,SAAS,EAAE,oBANf;AAOI,QAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgK,QAP/B;AAQI,QAAA,aAAa,EAAE,IARnB;AASI,QAAA,iBAAiB,EAAE,KATvB;AAUI,QAAA,gBAAgB,EAAE,KAVtB;AAWI,QAAA,qBAAqB,EAAE,KAX3B;AAYI,QAAA,uBAAuB,EAAE,KAZ7B;AAaI,QAAA,UAAU,EAAE,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBwC,UAbjC;AAcI,QAAA,UAAU,EAAE,wBAdhB;AAeI,QAAA,OAAO,EAAE,EAfb;AAgBI,QAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAhBjC;AAiBI,QAAA,cAAc,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmjB,cAjBhD;AAkBI,QAAA,YAAY,EAAE,KAAKjH,wBAlBvB;AAmBI,QAAA,SAAS,EAAE,KAAKre,KAAL,CAAW2B,oBAnB1B;AAoBI,QAAA,eAAe,EAAE,KAAKD,0BApB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAuBI,KAAKrB,KAAL,CAAWJ,KAAX,CAAiBsX,uBAAjB,gBACE,oBAAC,qBAAD;AACI,QAAA,yBAAyB,EAAE,KAAKlX,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkjB,yBAA5B,IAAyD,EADxF;AAEI,QAAA,UAAU,EAAE,KAAKrlB,KAAL,CAAWiR,UAF3B;AAGI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBAHtC;AAII,QAAA,0BAA0B,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBwP,qBAJjD;AAKI,QAAA,QAAQ,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAL/B;AAMI,QAAA,SAAS,EAAE,oBANf;AAOI,QAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBgK,QAP/B;AAQI,QAAA,aAAa,EAAE,IARnB;AASI,QAAA,iBAAiB,EAAE,KATvB;AAUI,QAAA,gBAAgB,EAAE,KAVtB;AAWI,QAAA,qBAAqB,EAAE,KAX3B;AAYI,QAAA,uBAAuB,EAAE,KAZ7B;AAaI,QAAA,UAAU,EAAE,KAAK5J,KAAL,CAAWJ,KAAX,CAAiBwC,UAbjC;AAcI,QAAA,UAAU,EAAE,oBAdhB;AAeI,QAAA,OAAO,EAAE,EAfb;AAgBI,QAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBkC,UAhBjC;AAiBI,QAAA,cAAc,EAAE,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmjB,cAjBhD;AAkBI,QAAA,cAAc,EAAE,KAAKtlB,KAAL,CAAW8H,cAlB/B;AAmBI,QAAA,eAAe,EAAE,KAAK2T,eAnB1B;AAoBI,QAAA,SAAS,EAAE,KAAKpb,KAAL,CAAWJ,KAAX,CAAiB2P,SApBhC;AAqBI,QAAA,kBAAkB,EAAE,KAAKvP,KAAL,CAAWJ,KAAX,CAAiBslB,kBArBzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAwBI,KAAKllB,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,uBAAhC,IAA2D,KAAKtG,KAAL,CAAWJ,KAAX,CAAiBwG,SAA5E,gBACE,oBAAC,QAAD;AACI,QAAA,GAAG,EAAC,uBADR;AAEI,QAAA,eAAe,EAAC,wBAFpB;AAGI,QAAA,IAAI,EAAE,KAAKpG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqjB,iBAA5B,IAAiD,EAH3D;AAII,QAAA,UAAU,EAAEruB,OAAO,CAAC,KAAKkJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqjB,iBAA5B,IAAiD,KAAKnlB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqjB,iBAA7E,IAAkG,EAAnG,EAAuG,KAAKxlB,KAAL,CAAWiB,mBAAlH,CAJvB;AAKI,QAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWiB,mBAL1B,CAMI;AACA;AAPJ;AAQI,QAAA,qBAAqB,EAAE,KAR3B,CASI;AATJ;AAUI,QAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWiR,UAV3B;AAWI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBAXtC;AAYI,QAAA,mBAAmB,EAAE,KAAK6Q,aAZ9B;AAaI,QAAA,iBAAiB,EAAE,KAAKjgB,KAAL,CAAWolB,iBAblC;AAcI,QAAA,SAAS,EAAErF,eAdf;AAeI,QAAA,UAAU,EAAE,KAAK/f,KAAL,CAAWJ,KAAX,CAAiBuO,UAfjC;AAgBI,QAAA,WAAW,EAAE,KAAKnO,KAAL,CAAWxH,0BAhB5B;AAiBI,QAAA,QAAQ,EAAE,IAjBd;AAkBI,QAAA,eAAe,EAAE,KAAKmI,oBAlB1B;AAmBI,QAAA,UAAU,EAAE,YAnBhB;AAoBI,QAAA,UAAU,EAAE,OApBhB;AAqBI,QAAA,gBAAgB,EAAE,IArBtB;AAsBI,QAAA,SAAS,EAAE,eAtBf,CAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAiCK,KAAKX,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAE,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CADX;AAEI,QAAA,IAAI,EAAC,iBAFT;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,QAAQ,EAAGpG,KAAD,IAAW,KAAKmX,eAAL,CAAqBnX,KAArB,CAJzB;AAKI,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CALjB;AAMI,QAAA,KAAK,EAAE,KAAK9G,KAAL,CAAW8H,cAAX,CAA0B,iBAA1B,IAA+C,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B,iBAA1B,CAA/C,GAA8F,EANzG;AAOI,QAAA,WAAW,EAAE,IAPjB;AAQI,QAAA,QAAQ,EAAE,IARd;AASI,QAAA,SAAS,EAAE,GATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADF,GAgBD,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,YAAD;AACI,QAAA,KAAK,EAAE,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CADX;AAEI,QAAA,IAAI,EAAC,kBAFT;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,QAAQ,EAAGpG,KAAD,IAAW,KAAKmX,eAAL,CAAqBnX,KAArB,CAJzB;AAKI,QAAA,WAAW,EAAE,KAAKL,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CALjB;AAMI,QAAA,KAAK,EAAE,KAAK9G,KAAL,CAAW8H,cAAX,CAA0B,kBAA1B,IAAgD,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B,kBAA1B,CAAhD,GAAgG,EAN3G;AAOI,QAAA,WAAW,EAAE,IAPjB;AAQI,QAAA,QAAQ,EAAE,IARd;AASI,QAAA,SAAS,EAAE,GATf;AAUI,QAAA,QAAQ,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,IAA+B,KAAK9B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA3D,IACH,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmDC,MAAnD,KAA6D,CAD1D,IAEH,KAAK9F,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+D,sBAA5B,CAAmD,CAAnD,EAAsDmB,kBAAtD,KAA2EtL,iBAAiB,CAACwL,QAF1F,GAEqG,IAFrG,GAE2G,KAZzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADF,GAoBE,KAAKlH,KAAL,CAAWJ,KAAX,CAAiBhB,kBAAjB,gBACA,uDACH,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,kBAAD;AACA,QAAA,MAAM,EAAE,KAAKoB,KAAL,CAAWJ,KAAX,CAAiB+K,MAAjB,IAA2B,EADnC;AAEA,QAAA,QAAQ,EAAE,KAAKoN,gCAFf;AAGA,QAAA,IAAI,EAAE,KAAK/X,KAAL,CAAWJ,KAAX,CAAiB0M,WAHvB;AAIA,QAAA,MAAM,EAAE,KAAKtM,KAAL,CAAWJ,KAAX,CAAiBsM,aAJzB;AAKA,QAAA,IAAI,EAAE,KAAKlM,KAAL,CAAWJ,KAAX,CAAiB2kB,SALvB;AAMA,QAAA,IAAI,EAAE,KAAKvkB,KAAL,CAAWJ,KAAX,CAAiB4kB,SANvB;AAOA,QAAA,gBAAgB,EAAE,KAAKC,gBAPvB;AAQA,QAAA,WAAW,EAAE,EARb;AASA,QAAA,UAAU,EAAE,KAAKzkB,KAAL,CAAWJ,KAAX,CAAiB+kB,UAAjB,IAA+B,EAT3C,CAUA;AACA;AAXA;AAYA,QAAA,QAAQ,EAAE,KAAK3kB,KAAL,CAAWJ,KAAX,CAAiBoC,QAZ3B;AAaA,QAAA,MAAM,EAAE,IAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAiBA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,2BAAlB;AAA8C,QAAA,OAAO,EAAE,MAAM,KAAK6J,mBAAL,CAAyB,KAAzB,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,aAArB;AAAmC,QAAA,cAAc,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF,CAjBA,CADG,CADA,gBA4BA,0CAKgB,KAAK7L,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,IAA2F,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAA3H,IACA,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADhC,IAC+F,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAD/H,IAEA,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAHnC,IAID;AACA;AACA;AACA;AACA;AACA;AACA,WAAKzG,KAAL,CAAWJ,KAAX,CAAiBuI,aAAjB,KAAmC,IAVlC,IAWD;AACA;AACA,WAAKnI,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,wBAb/B,IAcD,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAd/B,IAeD,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAf3B,IAekD,KAAK3E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B6C,mBAA5B,CAAgDjB,eAAhD,KAAoEpI,UAAU,CAACigB,YAfjI;AAAA;AAgBF;AACD,6DACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACM,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,2BAAlB;AAA8C,QAAA,OAAO,EAAE,MAAM,KAAK3N,eAAL,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAElQ,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,MADA,EAKC,CAAC,KAAKsC,KAAL,CAAWJ,KAAX,CAAiBylB,WAAlB,iBACD,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,2BAAlB;AAA8C,QAAA,OAAO,EAAE,MAAM,KAAKxZ,mBAAL,CAAyB,IAAzB,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAElO,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,oBAEI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,iBAArB;AAAuC,QAAA,cAAc,EAAC,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANA,CADN,eAcU,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,KAAKqC,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,IAA2F,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAA3H,IACF,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAD9B,IAC6F,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAD7H,IAEF,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAF/B,IAGD,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAH3B,IAIgB,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDuC,aAAhD,KAAkEzL,iBAAiB,CAAC2P,GAJpG,CAKiB;AACD;AANhB,SAQD,KAAKrL,KAAL,CAAWJ,KAAX,CAAiBuI,aAAjB,KAAmC,IARlC,IAQ0C,KAAKnI,KAAL,CAAWJ,KAAX,CAAiBsI,WAAjB,KAAiC,IAR3E,IASD,KAAKlI,KAAL,CAAWJ,KAAX,CAAiB0lB,YAAjB,KAAkC,IATjC,iBAUI,oBAAC,gBAAD;AACG,QAAA,IAAI,EAAE,cADT;AAEI,QAAA,SAAS,EAAE,KAAKtlB,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAFf;AAGI,QAAA,WAAW,EAAE,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAHjB;AAII,QAAA,OAAO,EAAE,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB2lB,WAJ9B;AAKG,QAAA,KAAK,EAAE,KAAKvlB,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,GAAkC,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,CAAgC,cAAhC,MAAoDR,SAApD,GAAgE,KAAKjH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,CAAgC,cAAhC,CAAhE,GAAkH,EAApJ,GAAyJ,EALnK;AAMG,QAAA,YAAY,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,GAAkC,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,CAAgC,cAAhC,CAAlC,GAAoF,EANrG;AAOG,QAAA,WAAW,EAAE,IAPhB;AAQI,QAAA,OAAO,EAAE,KARb;AASG,QAAA,YAAY,EAAE,IATjB,CAUG;AAVH;AAWI,QAAA,iBAAiB,EAAE,IAXvB;AAYI,QAAA,gBAAgB,EAAE,IAZtB;AAaI,QAAA,QAAQ,EAAGpH,KAAD,IAAW,KAAKuK,aAAL,CAAmBvK,KAAnB,EAA0B,cAA1B,EAA0C,CAA1C,CAbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXG,CAdV,eA2CM,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKL,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,IACD,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAD/B,IAC8F;AAC/F,WAAKzG,KAAL,CAAWJ,KAAX,CAAiBsI,WAAjB,KAAgC,IAF/B,iBAGO,oBAAC,gBAAD;AACJ,QAAA,IAAI,EAAE,qBADF;AAEJ,QAAA,SAAS,EAAE,KAAKlI,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAFP;AAGJ,QAAA,WAAW,EAAE,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAHT;AAIJ,QAAA,OAAO,EAAE,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B0Z,kBAA5B,IAAkD,EAJvD;AAKJ,QAAA,KAAK,EAAE,KAAK7b,KAAL,CAAW8H,cAAX,CAA0B,qBAA1B,KAAoD,EALvD;AAMJ,QAAA,WAAW,EAAE,IANT;AAOJ,QAAA,OAAO,EAAE,KAPL;AAQJ,QAAA,WAAW,EAAE,KART;AASJ,QAAA,YAAY,EAAE,IATV,CAUJ;AAVI;AAWJ,QAAA,iBAAiB,EAAE,IAXf;AAYJ,QAAA,QAAQ,EAAGpH,KAAD,IAAW,KAAKuK,aAAL,CAAmBvK,KAAnB,EAA0B,qBAA1B,CAZjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJZ,CA3CN,eA+DM,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/DN,eAgEM,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKL,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,IACD,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAD/B,IAEA,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgD4gB,wBAAnG,IACE,KAAKxlB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgD4gB,wBAAhD,KAA6E9pB,iBAAiB,CAAC2P,GAHjG,iBAIG,oBAAC,YAAD;AACI,QAAA,IAAI,EAAE,oBADV;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,KAAK,EAAG,KAAKrL,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDkR,kBAAnG,IACD,KAAK9V,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDkR,kBAAhD,KAAuEpa,iBAAiB,CAAC2P,GADzF,GACgG,KAAKrL,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CADhG,GAED,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CALV;AAMI,QAAA,WAAW,EAAG,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,IAAmD,KAAK5E,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDkR,kBAAnG,IACP,KAAK9V,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B8C,mBAA5B,CAAgDkR,kBAAhD,KAAuEpa,iBAAiB,CAAC2P,GADnF,GAC0F,KAAKrL,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAD1F,GAEP,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CARV;AASI,QAAA,WAAW,EAAE,KATjB;AAUI,QAAA,QAAQ,EAAE,KAVd;AAWI,QAAA,QAAQ,EAAGpG,KAAD,IAAU,KAAKmX,eAAL,CAAqBnX,KAArB,CAXxB,CAYI;AAZJ;AAaI,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAW8H,cAAX,GAA4B,KAAK9H,KAAL,CAAW8H,cAAX,CAA0B,oBAA1B,MAAoD,CAApD,GAAwD,IAAxD,GAA+D,KAA3F,GAAmG,KAbhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CAhEN,CADA,CArBV,CAmIY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnJZ,qBAgNK,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,KAAKzH,KAAL,CAAWJ,KAAX,CAAiBqO,eAAjB,gBACG,oBAAC,SAAD;AACI,QAAA,SAAS,EAAE,KAAKjO,KAAL,CAAWJ,KAAX,CAAiBqO,eADhC;AAEI,QAAA,UAAU,EAAE,KAAKJ,cAFrB;AAGI,QAAA,WAAW,EAAE,KAAKuH,gBAHtB;AAII,QAAA,aAAa,EAAE,KAAKuD,aAJxB;AAKI,QAAA,YAAY,EAAE,KAAK3Y,KAAL,CAAWJ,KAAX,CAAiBue,YALnC,CAMI;AANJ;AAOI,QAAA,WAAW,EAAE,KAAKne,KAAL,CAAW1I,WAP5B;AAQI,QAAA,cAAc,EAAE,KAAKqI,KAAL,CAAW8H,cAAX,IAA6B,EARjD;AASI,QAAA,UAAU,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6lB,UATjC;AAUI,QAAA,SAAS,EACL,KAAKzlB,KAAL,CAAWJ,KAAX,CAAiBkO,SAAjB,gBACI,oBAAC,KAAD;AACI,UAAA,SAAS,EAAE,KAAK9N,KAAL,CAAWJ,KAAX,CAAiB2P,SADhC;AAEI,UAAA,eAAe,EAAE,KAAKmW,oBAF1B;AAGI,UAAA,UAAU,EAAE,KAAK1lB,KAAL,CAAWJ,KAAX,CAAiBwC,UAHjC;AAII,UAAA,cAAc,EAAE,KAAKzC,KAAL,CAAW8H,cAAX,IAA6B,EAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,gBASI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEI,oBAAC,YAAD;AACI,UAAA,KAAK,EAAE,KAAKzH,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoM,eAA5B,CAA4CyX;AAAlD,WAA9B,CADX;AAEI,UAAA,IAAI,EAAE,mBAFV;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,QAAQ,EAAE,KAAKlN,aAJnB;AAKI,UAAA,WAAW,EAAE,KAAKzY,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoM,eAA5B,CAA4CyX;AAAlD,WAA9B,CALjB;AAMI,UAAA,KAAK,EAAE,KAAKhmB,KAAL,CAAWuO,eAAX,GAA6B,KAAKvO,KAAL,CAAWuO,eAAX,CAA2B0X,iBAAxD,GAA4E,EANvF;AAOI,UAAA,WAAW,EAAE,IAPjB;AAQI,UAAA,QAAQ,EAAE,IARd;AASI,UAAA,SAAS,EAAE,KATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CApBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAuCG,EA1CP,CAhNL,EA+PK,KAAK5lB,KAAL,CAAWJ,KAAX,CAAiBgX,gBAAjB,IAAqC,KAAK5W,KAAL,CAAWJ,KAAX,CAAiBgX,gBAAtD,gBACG,oBAAC,QAAD;AACI,QAAA,eAAe,EAAE,wBADrB;AAEI,QAAA,UAAU,EAAE,KAAK5W,KAAL,CAAWJ,KAAX,CAAiBuO,UAFjC;AAGI,QAAA,IAAI,EAAE,KAAKnO,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+jB,gBAHtC;AAII,QAAA,UAAU,EAAE/uB,OAAO,CAAC,KAAKkJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+jB,gBAA5B,IAAgD,KAAK7lB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B+jB,gBAA5E,IAAgG,EAAjG,EAAqG,KAAKlmB,KAAL,CAAWmB,mBAAhH,CAJvB;AAKI,QAAA,SAAS,EAAE,KAAKnB,KAAL,CAAWmB,mBAL1B;AAMI,QAAA,eAAe,EAAE,KAAKD,yBAN1B;AAOI,QAAA,mBAAmB,EAAEuf,0BAPzB;AAQI,QAAA,UAAU,EAAE,KAAKzgB,KAAL,CAAWiR,UAR3B;AASI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBATtC;AAUI,QAAA,UAAU,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBwC,UAVjC;AAWI,QAAA,SAAS,EAAE,QAXf;AAYI,QAAA,QAAQ,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBoC,QAZ/B;AAaI,QAAA,WAAW,EAAE,KAAKhC,KAAL,CAAWhH,kBAb5B;AAcI,QAAA,YAAY,EAAE,KAAK8sB,YAdvB,CAeI;AACA;AAhBJ;AAiBI,QAAA,SAAS,EAAEzD,SAjBf,CAkBI;AAlBJ;AAmBI,QAAA,UAAU,EAAE,YAnBhB;AAoBI,QAAA,UAAU,EAAE,OApBhB;AAqBI,QAAA,gBAAgB,EAAE,IArBtB,CAsBI;AAtBJ;AAuBI,QAAA,QAAQ,EAAE,IAvBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GA0BI,KAAKriB,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,IAA2F,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAA3H,IACG,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADnC,IACkG,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADlI,IAEG,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFpC,IAEmG,KAAKzG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,uBAFnI,IAE8J,KAAKtG,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,wBAF9L,gBAGI,oBAAC,wBAAD;AACI,QAAA,aAAa,EAAE,KAAKtG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,IAA+C,KAAK1C,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BY,eAA5B,CAA4C6E,cAA3F,IAA6G,KADhI;AAEI,QAAA,IAAI,EAAE,KAAK5H,KAAL,CAAWa,IAFrB;AAGI,QAAA,UAAU,EAAE1J,OAAO,CAAC,KAAKkJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgiB,aAA5B,IAA6C,KAAK9jB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgiB,aAAzE,IAA0F,KAAK9jB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAA5B,IAA6C,KAAKtV,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAAnK,IAAoL,EAArL,EAAyL,KAAK3V,KAAL,CAAWW,SAApM,CAHvB;AAII,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWW,SAJ1B;AAKI,QAAA,eAAe,EAAE,KAAKF,eAL1B;AAMI,QAAA,cAAc,EAAE,KAAK2jB,cANzB;AAOI,QAAA,aAAa,EAAE,KAAKpc,aAPxB;AAQI,QAAA,cAAc,EAAE,KAAKG,cARzB;AASI,QAAA,UAAU,EAAE,KAAKE,UATrB;AAUI,QAAA,eAAe,EAAE,KAAKrI,KAAL,CAAW0e,eAVhC;AAWI,QAAA,kBAAkB,EAAE,KAAK1e,KAAL,CAAWqkB,kBAXnC;AAYI,QAAA,mBAAmB,EAAE,KAAKvE,iBAAL,CAAuB,KAAK9f,KAAL,CAAWskB,eAAlC,KAAsD,EAZ/E;AAaI,QAAA,kBAAkB,EAAE,KAAKxE,iBAAL,CAAuB,KAAK9f,KAAL,CAAWukB,mBAAlC,KAA0D,EAblF;AAcI,QAAA,WAAW,EAAC,UAdhB;AAeI,QAAA,kBAAkB,EAAE,KAAK6B,kBAf7B;AAgBI,QAAA,uBAAuB,EAAE,KAAKC,uBAhBlC;AAiBI,QAAA,kBAAkB,EAAE,IAjBxB;AAkBI,QAAA,UAAU,EAAE,KAAKrP,UAlBrB;AAmBI,QAAA,UAAU,EAAE,KAAKhX,KAAL,CAAWiR,UAnB3B;AAoBI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBApBtC;AAqBI,QAAA,UAAU,EAAE,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBwC,UArBjC;AAsBI,QAAA,QAAQ,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBoC,QAtB/B;AAuBI,QAAA,QAAQ,EAAE,IAvBd;AAwBI,QAAA,UAAU,EAAE,YAxBhB;AAyBI,QAAA,UAAU,EAAE,OAzBhB;AA0BI,QAAA,OAAO,EAAE,MA1Bb,CA2BI;AACA;AACA;AACA;AA9BJ;AA+BI,QAAA,kBAAkB,EAAE,IA/BxB;AAgCI,QAAA,UAAU,EAAE,KAAKhC,KAAL,CAAWJ,KAAX,CAAiBuO,UAhCjC;AAiCI,QAAA,QAAQ,EAAE,IAjCd;AAkCI,QAAA,WAAW,EAAE,IAlCjB;AAmCI,QAAA,SAAS,EACL,KAAKnO,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmkB,aAA5B,IACA,KAAKjmB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B4X,gBArCpC;AAuCI,QAAA,eAAe,EAAE,KAAK+F,iBAAL,CAAuB,KAAK9f,KAAL,CAAWykB,wBAAlC,KAA+D,EAvCpF;AAwCI,QAAA,iBAAiB,EAAE,WAxCvB;AAyCI,QAAA,oBAAoB,EAAE,wBAzC1B;AA0CI,QAAA,YAAY,EACR,KAAKpkB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BokB,aAA5B,IACA,KAAKlmB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkY,WA5CpC;AA8CI,QAAA,eAAe,EAAE,KAAKha,KAAL,CAAWJ,KAAX,CAAiB0kB,eA9CtC;AA+CI,QAAA,SAAS,EAAE,SA/Cf;AAgDI,QAAA,qBAAqB,EAAE,KAAK9J,qBAhDhC;AAiDI,QAAA,0BAA0B,EAAE,KAAKjB,0BAjDrC;AAkDI,QAAA,cAAc,EAAE,KAAKvZ,KAAL,CAAWJ,KAAX,CAAiBumB,cAlDrC;AAmDI,QAAA,oBAAoB,EAAE,KAAK1L,oBAnD/B;AAoDI,QAAA,uBAAuB,EAAE,KAAKE,uBApDlC;AAqDI,QAAA,6BAA6B,EAAE,KAAKhB,6BArDxC;AAsDI,QAAA,iBAAiB,EAAE,KAAK3Z,KAAL,CAAWJ,KAAX,CAAiBwmB,iBAtDxC;AAuDI,QAAA,eAAe,EAAE,KAAKnN,eAvD1B;AAwDI,QAAA,SAAS,EAAE,KAAKjZ,KAAL,CAAWJ,KAAX,CAAiBymB,SAxDhC;AAyDI,QAAA,aAAa,EAAE,KAAKjR,gBAzDxB,CA0DA;AA1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,GAgEI,KAAKpV,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,wBAAhC,IAA4D,KAAKtG,KAAL,CAAWJ,KAAX,CAAiBwG,SAA7E,gBACI,oBAAC,QAAD;AACI,QAAA,GAAG,EAAC,uBADR;AAEI,QAAA,eAAe,EAAC,wBAFpB;AAGI,QAAA,IAAI,EAAE,KAAKpG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqjB,iBAA5B,IAAiD,EAH3D;AAII,QAAA,UAAU,EAAEruB,OAAO,CAAC,KAAKkJ,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqjB,iBAA5B,IAAiD,KAAKnlB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqjB,iBAA7E,IAAkG,EAAnG,EAAuG,KAAKxlB,KAAL,CAAWiB,mBAAlH,CAJvB;AAKI,QAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWiB,mBAL1B,CAMI;AACA;AAPJ;AAQI,QAAA,qBAAqB,EAAE,KAR3B,CASI;AATJ;AAUI,QAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWiR,UAV3B;AAWI,QAAA,qBAAqB,EAAE,KAAKjR,KAAL,CAAWyP,qBAXtC;AAYI,QAAA,mBAAmB,EAAE,KAAK6Q,aAZ9B;AAaI,QAAA,iBAAiB,EAAE,KAAKjgB,KAAL,CAAWolB,iBAblC;AAcI,QAAA,SAAS,EAAE/C,SAdf;AAeI,QAAA,WAAW,EAAE,KAAKriB,KAAL,CAAWxH,0BAf5B;AAgBI,QAAA,QAAQ,EAAE,IAhBd;AAiBI,QAAA,eAAe,EAAE,KAAKmI,oBAjB1B;AAkBI,QAAA,UAAU,EAAE,YAlBhB;AAmBI,QAAA,UAAU,EAAE,OAnBhB;AAoBI,QAAA,gBAAgB,EAAE,IApBtB;AAqBI,QAAA,SAAS,EAAE,eArBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAyBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAjbhB,CA1UxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5sBR,EAwiDK,KAAKX,KAAL,CAAWJ,KAAX,CAAiBoO,SAAjB,gBACG,oBAAC,SAAD;AACI,MAAA,SAAS,EAAE,KAAKhO,KAAL,CAAWJ,KAAX,CAAiBoO,SADhC;AAEI,MAAA,UAAU,EAAE,KAAKH,cAFrB;AAGI,MAAA,WAAW,EAAE,KAAKqE,sBAHtB;AAII,MAAA,aAAa,EAAE,KAAKyG,aAJxB;AAKI,MAAA,YAAY,EAAE,KAAK3Y,KAAL,CAAWJ,KAAX,CAAiBue,YALnC,CAMI;AANJ;AAOI,MAAA,WAAW,EAAE,KAAKne,KAAL,CAAW1I,WAP5B;AAQI,MAAA,cAAc,EAAE,KAAKqI,KAAL,CAAW8H,cAAX,IAA6B,EARjD;AASI,MAAA,UAAU,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6lB,UATjC;AAUI,MAAA,SAAS,EACL,KAAKzlB,KAAL,CAAWJ,KAAX,CAAiBkO,SAAjB,gBACI,oBAAC,KAAD;AACI,QAAA,SAAS,EAAE,KAAK9N,KAAL,CAAWJ,KAAX,CAAiB2P,SADhC;AAEI,QAAA,eAAe,EAAE,KAAKmW,oBAF1B;AAGI,QAAA,UAAU,EAAE,KAAK1lB,KAAL,CAAWJ,KAAX,CAAiBwC,UAHjC;AAII,QAAA,cAAc,EAAE,KAAKzC,KAAL,CAAW8H,cAAX,IAA6B,EAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAOI,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB0G,UAAjB,KAAgC,KAAKtG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAhC,gBACA,oBAAC,gBAAD;AACI,QAAA,IAAI,EAAE,qBADV;AAEI,QAAA,SAAS,EAAE,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAFf;AAGI,QAAA,WAAW,EAAE,KAAKzG,KAAL,CAAWuG,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAHjB;AAII,QAAA,OAAO,EAAE,KAAKzG,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B0Z,kBAA5B,IAAkD,EAJ/D;AAKI,QAAA,KAAK,EAAE,KAAK7b,KAAL,CAAW8H,cAAX,CAA0B,qBAA1B,KAAoD,EAL/D;AAMI,QAAA,WAAW,EAAE,IANjB;AAOI,QAAA,OAAO,EAAE,KAPb;AAQI,QAAA,WAAW,EAAE,KARjB;AASI,QAAA,YAAY,EAAE,IATlB,CAUI;AAVJ;AAWI,QAAA,iBAAiB,EAAE,IAXvB;AAYI,QAAA,QAAQ,EAAGpH,KAAD,IAAW,KAAKuK,aAAL,CAAmBvK,KAAnB,EAA0B,qBAA1B,CAZzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,GAgBA,KAAKV,KAAL,CAAW8H,cAAX,CAA0B4K,gBAA1B,IACA,KAAK1S,KAAL,CAAW8H,cAAX,CAA0B4K,gBAA1B,CAA2CtF,GAA3C,CAA+C,CAACuZ,eAAD,EAAkBvc,KAAlB,KAA4B;AACvE,4BAAO,oBAAC,eAAD;AACH,UAAA,KAAK,EAAEA,KADJ;AAEH,UAAA,eAAe,EAAE,CAAC,GAAG,KAAKpK,KAAL,CAAW8H,cAAX,CAA0B4K,gBAA9B,CAFd;AAGH,UAAA,gBAAgB,EAAE,KAAKrS,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BykB,gBAH3C;AAIH,UAAA,uBAAuB,EAAE,KAAKvmB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BykB,gBAJlD;AAKH,UAAA,WAAW,EAAE,KAAKvmB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B0kB,WAA5B,IAA2C,EALrD;AAMH,UAAA,mBAAmB,EAAE,KAAKxmB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B2kB,mBAN9C;AAOH,UAAA,mBAAmB,EAAE,KAAK9mB,KAAL,CAAW8H,cAAX,CAA0Bif,mBAA1B,IAAiD,EAPnE;AAQH,UAAA,kBAAkB,EAAE,KAAK1mB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BkI,kBAA5B,IAAkD,EARnE;AASH,UAAA,gBAAgB,EAAEsc,eAAe,IAC1B,EAVJ;AAWH,UAAA,KAAK,EAAE,KAAKtmB,KAAL,CAAWJ,KAXf;AAYH,UAAA,WAAW,EAAE,KAAK+mB,WAZf;AAaH,UAAA,WAAW,EAAE,KAAKC,WAbf;AAcH,UAAA,mBAAmB,EAAE,KAAKpc,mBAdvB,CAeH;AAfG;AAgBH,UAAA,UAAU,EAAE,KAAKqc,UAhBd;AAiBH,UAAA,cAAc,EAAE,KAAKC,cAjBlB;AAkBH,UAAA,UAAU,EAAE,KAAKhd,UAlBd,CAmBH;AAnBG;AAoBH,UAAA,kBAAkB,EAAE,KAAKid,kBApBtB;AAqBH,UAAA,aAAa,EAAE,KAAK/mB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BgD,mBAA5B,CAAgDyC,cArB5D;AAsBH,UAAA,UAAU,EAAE,IAtBT;AAuBH,UAAA,aAAa,EAAE,IAvBZ;AAwBH,UAAA,cAAc,EAAE,KAAKvH,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BklB,cAA5B,IAA8C,EAxB3D;AAyBH,UAAA,IAAI,EAAE,KAAKhnB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BmlB,IAA5B,IAAoC,EAzBvC;AA0BH,UAAA,UAAU,EAAE,KAAKjnB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BolB,UAA5B,IAAwC,EA1BjD,CA2BP;AA3BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA6BH,OA9BD,CAnCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAsEG,EA9mDR,CADJ;AAonDH;;AAuBDxE,EAAAA,0BAA0B,CAACliB,IAAD,EAAO;AAE9B;AACK;AACA;AACA;AACD;AACH,UAAM2mB,UAAU,GAAG3mB,IAAI,IAAIA,IAAI,CAACuM,GAAL,CAAU4S,MAAD,IAAY;AAC5C,aAAO;AACH,mBAAWA,MAAM,CAACpkB,gBAAgB,CAACqkB,KAAlB,CAAN,CAA+B,KAAK5f,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0B8N,iBAAzD,CADR;AAEH,qBAAY6P,MAAM,CAACpkB,gBAAgB,CAAC6rB,UAAlB,CAAN,KAAsC,QAAtC,GAA+C,kBAAgBzH,MAAM,CAACpkB,gBAAgB,CAAC8rB,UAAlB,CAAtB,GAAoD,SAAnG,GACX1H,MAAM,CAACpkB,gBAAgB,CAAC+rB,QAAlB,CAAN,KAAoC,OAApC,GACC,iBAAe3H,MAAM,CAACpkB,gBAAgB,CAAC+R,KAAlB,CAArB,GAA8C,OAA9C,GAAsDqS,MAAM,CAACpkB,gBAAgB,CAAC8rB,UAAlB,CAA5D,GAA0F,SAD3F,GAEE1H,MAAM,CAACpkB,gBAAgB,CAAC+rB,QAAlB,CAAN,KAAoC,SAApC,GACA,kBAAgB3H,MAAM,CAACpkB,gBAAgB,CAAC+R,KAAlB,CAAtB,GAA+C,SAD/C,GAEA,kBAAgBqS,MAAM,CAACpkB,gBAAgB,CAAC+R,KAAlB,CAAtB,GAA+C,IAP/C;AAOqD,iBAAS,OAP9D;AAOuE,2BAAmBqS,MAAM,CAACpkB,gBAAgB,CAAC+rB,QAAlB;AAPhG,OAAP;AASH,KAV0B,CAA3B;AAWA,UAAMC,QAAQ,GAAG,CAAE,GAAGJ,UAAL,CAAjB;AACA,WAAOI,QAAP;AACH;;AAkgDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACAC,EAAAA,kBAAkB,CAACC,aAAD,EAAgB;AAC9B,QAAI;AAAErY,MAAAA,qBAAF;AAAyBwB,MAAAA,UAAzB;AACAuO,MAAAA,cADA;AAEA1X,MAAAA,cAFA;AAEgB8W,MAAAA,cAFhB;AAEgCK,MAAAA,oBAFhC;AAEsDD,MAAAA,cAFtD;AAGAE,MAAAA,uBAHA;AAGyBC,MAAAA,gBAHzB;AAG2C6E,MAAAA,iBAH3C;AAIA;AACAiB,MAAAA,UALA;AAKYX,MAAAA,eALZ;AAK6BC,MAAAA,mBAL7B;AAKkDE,MAAAA,wBALlD;AAMA/E,MAAAA,kBANA;AAMoBnG,MAAAA,WANpB;AAMiC5Y,MAAAA,SANjC;AAM4C4N,MAAAA,eAN5C;AAM6DiJ,MAAAA,eAN7D;AAM8ErK,MAAAA,2BAN9E;AAM0G0V,MAAAA;AAN1G,QAM0I,KAAK7iB,KANnJ;AAQA,QAAI+nB,IAAI,GAAG,KAAX;AACA,QAAInH,cAAc,GAAG,EAArB;;AAEA,QAAI,KAAKvgB,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAA1B,KAAwCoY,aAAa,CAAC7nB,KAAd,CAAoBoC,QAApB,CAA6BqN,SAAzE,EAAoF;AAChFD,MAAAA,qBAAqB,GAAG,EAAxB;;AACA,UAAI,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBwP,qBAArB,EAA4C;AACxC,aAAKpP,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAjB,CAAuC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAjE,KAA+E0F,MAAM,CAACC,MAAP,CAAc,KAAKhV,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAjB,CAAuC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAjE,CAAd,EAA2FtC,GAA3F,CAA+FpJ,IAAI,IAC9KyL,qBAAqB,CAACnC,IAAtB,CAA2BtJ,IAAI,CAAC8K,YAAhC,CAD2E,CAA/E;AAEH;;AACDmC,MAAAA,UAAU,GAAGjW,aAAa,CAAC,KAAKqF,KAAL,CAAWJ,KAAX,CAAiBwP,qBAAlB,EAAyC,KAAKpP,KAAL,CAAWJ,KAAX,CAAiBoC,QAAjB,CAA0BqN,SAAnE,CAA1B;AACAkR,MAAAA,cAAc,GAAG,KAAKvgB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwG,aAA7C;AAEAof,MAAAA,IAAI,GAAG,IAAP;AACH,KAtB6B,CAuB9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,QAAI,KAAK1nB,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,KAAoCggB,aAAa,CAAC7nB,KAAd,CAAoB6H,cAA5D,EAA4E;AAExEA,MAAAA,cAAc,GAAG,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H,cAAlC;AACAigB,MAAAA,IAAI,GAAG,IAAP;AACH;;AACD,QAAI,KAAK1nB,KAAL,CAAWJ,KAAX,CAAiBsZ,WAAjB,KAAiCuO,aAAa,CAAC7nB,KAAd,CAAoBsZ,WAAzD,EAAsE;AAElEA,MAAAA,WAAW,GAAG,KAAKlZ,KAAL,CAAWJ,KAAX,CAAiBsZ,WAA/B;AACAwO,MAAAA,IAAI,GAAG,IAAP;AACH;;AACD,QAAI,KAAK1nB,KAAL,CAAWJ,KAAX,CAAiBuX,eAAjB,KAAqCsQ,aAAa,CAAC7nB,KAAd,CAAoBuX,eAA7D,EAA8E;AAC1EA,MAAAA,eAAe,GAAG,KAAKnX,KAAL,CAAWJ,KAAX,CAAiBuX,eAAnC;AACAuQ,MAAAA,IAAI,GAAG,IAAP;AACH,KA/C6B,CAgD9B;AAEA;AACA;AACA;;;AACA,QAAI,KAAK1nB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,KAAgC2lB,aAAa,CAAC7nB,KAAd,CAAoBkC,UAAxD,EAAoE;AAChE,YAAM6lB,iBAAiB,GAAG7sB,mBAAmB,CAAC,KAAKkF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BxG,UAA5B,IAA0C,EAA3C,EAA+C,iBAA/C,EAAkE,iBAAlE,EAAqF,WAArF,EAAkG,iBAAlG,EAAqH,KAArH,CAA7C;AACA,YAAMssB,iBAAiB,GAAG9sB,mBAAmB,CAAC,KAAKkF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqD,UAA5B,IAA0C,EAA3C,EAA+C,oBAA/C,EAAqE,oBAArE,EAA2F,WAA3F,EAAwG,oBAAxG,EAA8H,KAA9H,CAA7C,CAFgE,CAGhE;AACA;;AACA,YAAM0iB,uBAAuB,GAAG/sB,mBAAmB,CAAC,KAAKkF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BsD,OAA5B,IAAuC,EAAxC,EAA4C,cAA5C,EAA4D,cAA5D,EAA4E,SAA5E,EAAuF,WAAvF,EAAoG,cAApG,EAAoH,KAApH,CAAnD;AACA,YAAM0iB,0BAA0B,GAAGhtB,mBAAmB,CAAC,KAAKkF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BuD,UAA5B,IAA0C,EAA3C,EAA+C,iBAA/C,EAAkE,iBAAlE,EAAqF,SAArF,EAAgG,WAAhG,EAA6G,iBAA7G,EAAgI,KAAhI,CAAtD;AACA,YAAM0iB,mBAAmB,GAAGjtB,mBAAmB,CAAC,KAAKkF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwD,YAA5B,IAA4C,EAA7C,EAAiD,oBAAjD,EAAuE,eAAvE,EAAwF2B,SAAxF,EAAmGA,SAAnG,EAA8G,IAA9G,CAA/C;AACA,YAAM+gB,oBAAoB,GAAGltB,mBAAmB,CAAC,KAAKkF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4ByD,eAA5B,IAA+C,EAAhD,EAAoD,4BAApD,EAAkF,cAAlF,EAAkG,YAAlG,EAAgH,oBAAhH,EAAsI,KAAtI,CAAhD;AACA,YAAM0iB,WAAW,GAAGntB,mBAAmB,CAAC,KAAKkF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BomB,IAA5B,IAAoC,EAArC,EAAyC,WAAzC,EAAsD,cAAtD,EAAsEjhB,SAAtE,EAAiFA,SAAjF,EAA4F,IAA5F,CAAvC;AACAsX,MAAAA,cAAc,GAAGoJ,iBAAiB,CAAC7W,GAAlB,CAAsB,YAAtB,CAAjB;AACA6N,MAAAA,cAAc,GAAGiJ,iBAAiB,CAAC9W,GAAlB,CAAsB,YAAtB,CAAjB,CAXgE,CAYhE;AACA;;AACA8N,MAAAA,oBAAoB,GAAGiJ,uBAAuB,CAAC/W,GAAxB,CAA4B,YAA5B,CAAvB;AACA+N,MAAAA,uBAAuB,GAAGiJ,0BAA0B,CAAChX,GAA3B,CAA+B,YAA/B,CAA1B;AACAgO,MAAAA,gBAAgB,GAAGiJ,mBAAmB,CAACjX,GAApB,CAAwB,YAAxB,CAAnB;AACA6S,MAAAA,iBAAiB,GAAGqE,oBAAoB,CAAClX,GAArB,CAAyB,YAAzB,CAApB,CAjBgE,CAkBhE;AACA;;AAEA4W,MAAAA,IAAI,GAAG,IAAP;AACH;;AAED,QAAI,KAAK1nB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoM,eAA5B,KAAgDuZ,aAAa,CAAC7nB,KAAd,CAAoBkC,UAApB,CAA+BoM,eAAnF,EAAoG;AAChGA,MAAAA,eAAe,GAAG,KAAKlO,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BoM,eAA9C;AACAwZ,MAAAA,IAAI,GAAG,IAAP;AACH;;AAED,QAAI,KAAK1nB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqmB,aAA5B,IAA6C,KAAKnoB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqmB,aAA5B,KAA8CV,aAAa,CAAC7nB,KAAd,CAAoBkC,UAApB,CAA+BqmB,aAA9H,EAA6I;AACzI,YAAMC,aAAa,GAAG3U,IAAI,CAAC4U,KAAL,CAAW,KAAKroB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BqmB,aAA5B,CAA0CG,QAA1C,CAAmD9kB,KAA9D,CAAtB;AACAygB,MAAAA,eAAe,GAAGmE,aAAa,CAACG,cAAd,GAA+BH,aAAa,CAACG,cAA7C,GAA8D,EAAhF;AACArE,MAAAA,mBAAmB,GAAGkE,aAAa,CAACI,cAAd,CAA6BC,iBAA7B,GAAiDL,aAAa,CAACI,cAAd,CAA6BC,iBAA9E,GAAkG,EAAxH;AACArE,MAAAA,wBAAwB,GAAGgE,aAAa,CAACM,iBAAd,GAAkCN,aAAa,CAACM,iBAAhD,GAAoE,EAA/F;AACA9D,MAAAA,UAAU,GAAGwD,aAAa,CAACO,mBAAd,GAAoCP,aAAa,CAACO,mBAAlD,GAAwE,EAArF;AACA7b,MAAAA,2BAA2B,GAAGsb,aAAa,CAACQ,sBAAd,GAAuCR,aAAa,CAACQ,sBAArD,GAA8E,EAA5G;AACApG,MAAAA,2BAA2B,GAAG4F,aAAa,CAACS,gBAAd,GAAiCT,aAAa,CAACS,gBAA/C,GAAkE,EAAhG;AAEAnB,MAAAA,IAAI,GAAG,IAAP;AAEA,UAAIvlB,GAAG,GAAGvH,wBAAwB,CAAC,KAAKoF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BC,QAA7B,EAAuC,KAAK/B,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BI,MAAnE,EAA2E,KAAKlC,KAAL,CAAWJ,KAAX,CAAiBoC,QAA5F,CAAlC;AACAyF,MAAAA,cAAc,CAAC,UAAD,CAAd,GAA6BtF,GAAG,CAACJ,QAAjC;AACA0F,MAAAA,cAAc,CAAC,QAAD,CAAd,GAA2BtF,GAAG,CAACD,MAA/B;AAEAwlB,MAAAA,IAAI,GAAG,IAAP;AACH;;AACD,QAAG,KAAK1nB,KAAL,CAAWJ,KAAX,CAAiByX,aAAjB,KAAmCoQ,aAAa,CAAC7nB,KAAd,CAAoByX,aAA1D,EAAwE;AACpEqQ,MAAAA,IAAI,GAAG,IAAP;AACH;;AACD,QAAG,KAAK1nB,KAAL,CAAWJ,KAAX,CAAiBkM,OAAjB,KAA6B2b,aAAa,CAAC7nB,KAAd,CAAoBkM,OAApD,EAA4D;AACxD4b,MAAAA,IAAI,GAAG,IAAP;AACH;;AACD,QAAI,KAAK1nB,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B0D,qBAA5B,KAAsDiiB,aAAa,CAAC7nB,KAAd,CAAoBkC,UAApB,CAA+B0D,qBAAzF,EAAgH;AAE5G,YAAMsjB,wBAAwB,GAAGhuB,mBAAmB,CAAC,KAAKkF,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4B0D,qBAA5B,IAAqD,EAAtD,EAA0D,4BAA1D,EAChD,kBADgD,EAC5ByB,SAD4B,EACjBA,SADiB,EACN,KADM,CAApD;AAGAoY,MAAAA,kBAAkB,GAAGyJ,wBAAwB,CAAChY,GAAzB,CAA6B,YAA7B,CAArB;AACH;;AAED,QAAI4W,IAAJ,EAAU;AACNA,MAAAA,IAAI,GAAG,KAAP;AACA,UAAIqB,OAAO,GAAG;AACV3Z,QAAAA,qBADU;AACawB,QAAAA,UADb;AAEVuO,QAAAA,cAFU;AAEM1X,QAAAA,cAFN;AAEsB8W,QAAAA,cAFtB;AAEsCK,QAAAA,oBAFtC;AAE4DD,QAAAA,cAF5D;AAGVE,QAAAA,uBAHU;AAGeC,QAAAA,gBAHf;AAGiC6E,QAAAA,iBAHjC;AAGoDzV,QAAAA,eAHpD;AAIV;AACA0W,QAAAA,UALU;AAKEX,QAAAA,eALF;AAKmBC,QAAAA,mBALnB;AAKwCE,QAAAA,wBALxC;AAKkE/E,QAAAA,kBALlE;AAKsFnG,QAAAA,WALtF;AAKmG/B,QAAAA,eALnG;AAMV3W,QAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWJ,KAAX,CAAiBY,IAAjB,IAAyB,KAAKR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAArD,IAAsE,EANlE;AAOV/U,QAAAA,UAAU,EAAEzJ,OAAO,CAAC,KAAKkJ,KAAL,CAAWJ,KAAX,CAAiBY,IAAjB,IAAyB,KAAKR,KAAL,CAAWJ,KAAX,CAAiBkC,UAAjB,CAA4BwT,aAArD,IAAsE,EAAvE,EAA2E,KAAK3V,KAAL,CAAWW,SAAtF,CAPT;AAQVigB,QAAAA,cARU;AAQMzT,QAAAA,2BARN;AAQmC0V,QAAAA,2BARnC,CASV;AACA;;AAVU,OAAd,CAFM,CAcN;;AACA,UAAI,KAAKxiB,KAAL,CAAWJ,KAAX,CAAiByX,aAAjB,IAAkC,KAAKrX,KAAL,CAAWJ,KAAX,CAAiByX,aAAjB,KAAmC,IAArE,IACI,KAAKrX,KAAL,CAAWJ,KAAX,CAAiBkM,OAAjB,KAA6B,KADrC,CAGI;AACA;AACA;AALJ,QAME;AACE,aAAK5L,QAAL,CAAc,EAAE,GAAG6oB,OAAL;AAAcjiB,UAAAA,SAAS,EAAE,EAAzB;AAA6ByC,UAAAA,sBAAsB,EAAE,EAArD;AAAyDE,UAAAA,oBAAoB,EAAE;AAA/E,SAAd;AACH,OARD,MASK;AACD,aAAKvJ,QAAL,CAAc6oB,OAAd;AACH;AAEJ,KA5BD,MA8BK,IAAI,KAAK/oB,KAAL,CAAWJ,KAAX,CAAiB6H,cAAjB,KAAoCggB,aAAa,CAAC7nB,KAAd,CAAoB6H,cAA5D,EAA4E;AAC7E,WAAKvH,QAAL,CAAc;AAAEuH,QAAAA,cAAc,EAAE,KAAKzH,KAAL,CAAWJ,KAAX,CAAiB6H;AAAnC,OAAd;AACH;AAEJ;;AA64BDuhB,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAI,KAAKlpB,KAAL,CAAWJ,KAAX,CAAiBwG,SAAjB,KAA+B,KAAKpG,KAAL,CAAWJ,KAAX,CAAiBqX,0BAAjB,IAA+C,KAAKjX,KAAL,CAAWJ,KAAX,CAAiBsX,uBAAhE,IAA2F,KAAKlX,KAAL,CAAWJ,KAAX,CAAiBwX,oBAA3I,KAAoK8R,SAAS,CAAC/R,eAAV,KAA8B,KAAlM,IACC+R,SAAS,CAACzhB,cAAV,KAA6B,KAAK9H,KAAL,CAAW8H,cAD7C,EAC8D;AAC1D,aAAO,KAAP;AACH,KAHD,MAGO;AACH,aAAO,IAAP;AACH;AACJ;;AAp/KiC;;AAq2LtC,eAAexQ,OAAO,CAACyI,eAAD,EAAkB;AACpCtI,EAAAA,WADoC;AACvBC,EAAAA,UADuB;AACXC,EAAAA,WADW;AACEC,EAAAA,uBADF;AAC2BC,EAAAA,gBAD3B;AAEpCC,EAAAA,yBAFoC;AAETC,EAAAA,2BAFS;AAEoBC,EAAAA,8BAFpB;AAGpCC,EAAAA,uBAHoC;AAGXC,EAAAA,0BAHW;AAGiBC,EAAAA,0BAHjB;AAG6CC,EAAAA,iBAH7C;AAIpCW,EAAAA,iBAJoC;AAKpC;AACAT,EAAAA,qBANoC;AAMbC,EAAAA,uBANa;AAMYC,EAAAA,uBANZ;AAMqCC,EAAAA,oBANrC;AAM2DC,EAAAA,qBAN3D;AAMkFC,EAAAA,wBANlF;AAM4GC,EAAAA,iBAN5G;AAOpCC,EAAAA,0BAPoC;AAORC,EAAAA,oBAPQ;AAQlCT,EAAAA,sBARkC;AAQVW,EAAAA,sBARU;AAQcC,EAAAA,+BARd;AAQ+CC,EAAAA,sBAR/C;AAQuEC,EAAAA,kBARvE;AAQ2FC,EAAAA,uBAR3F;AASpC;AACAT,EAAAA,wBAVoC;AAUVU,EAAAA,kBAVU;AAUUC,EAAAA,sBAVV;AAUkCC,EAAAA,uBAVlC;AAU2DC,EAAAA,iBAV3D;AAU8EC,EAAAA,cAV9E;AAU8FC,EAAAA,cAV9F;AAWpCC,EAAAA,qBAXoC;AAWbC,EAAAA,yBAXa;AAWcC,EAAAA,eAXd;AAW+BC,EAAAA,2BAX/B;AAW4DC,EAAAA,mCAX5D;AAYpCC,EAAAA,oBAZoC;AAYdC,EAAAA,iBAZc;AAYKC,EAAAA,oBAZL;AAY2BC,EAAAA,2BAZ3B;AAYwDC,EAAAA,6BAZxD;AAYuFC,EAAAA,wBAZvF;AAapCC,EAAAA,0BAboC;AAaTC,EAAAA,cAbS;AAaOC,EAAAA,kBAbP;AAa2BC,EAAAA,kBAb3B;AAcpCC,EAAAA,aAdoC;AActBC,EAAAA,qBAdsB;AAcAC,EAAAA,0BAdA;AAc2BC,EAAAA,kBAd3B;AAc8CC,EAAAA;AAd9C,CAAlB,CAAP,CAeZvD,UAAU,CAAC2I,OAAD,CAfE,CAAf","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Nav,Button,ListGroup } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport {\r\n    Utils as QbUtils,\r\n} from \"@react-awesome-query-builder/ui\";\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl,FormattedMessage } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    filterColumnData,\r\n    getApprovedRecordsAsDraft,\r\n    getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample,\r\n    generateReleasedReport,\r\n    previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\r\n    getSectionForSectionWise, getreportcomments, fetchReportInfoReleaseById, UpdateReportComments,\r\n    getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData,\r\n    fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory, downloadVersionReport,\r\n    viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool, getPatientWiseSample,\r\n    preliminaryReport, releaseReportHistory, onSaveReleaseTestAttachment, onDeleteReleaseTestAttachment, onSaveReleaseTestComment, onDeleteReleaseTestComment,\r\n    generatereport, editReportTemplate, SaveReportTemplate, deleteSamples,filterTransactionList,\r\n    validationforAppendSamples,SaveReleaseComment,openReleaseComments\r\n} from '../../actions';\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, showEsign,\r\n     Lims_JSON_stringify, create_UUID, onSaveMandatoryValidation,checkFilterIsEmptyQueryBuilder,\r\n     removeSpaceFromFirst, sortData } from '../../components/CommonScript';\r\nimport { SampleType, designProperties, ResultEntry, reportCOAType, transactionStatus, attachmentType} from '../../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { Affix } from 'rsuite';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReleaseFilter from './ReleaseFilter';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport EsignStateHandle from '../audittrail/EsignStateHandle';\r\nimport { ContentPanel, ProductList } from '../product/product.styled';\r\nimport { faEdit, faPlus, faExpandArrowsAlt, faEye, faInfoCircle, faPencilAlt, faRecycle, faStore,\r\n     faTrash, faFilePen, faFileCode, faDownload, faFilePdf, faHistory, faFile, faComments,\r\n      faPaperclip,faCalculator,faSync,faSearch,faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { ReactComponent as Generate } from '../../assets/image/generate-certificate.svg'\r\nimport { ReactComponent as ReGenerate } from '../../assets/image/regenerate-icon.svg'\r\nimport { ReactComponent as ResultCorrection } from '../../assets/image/resultcorrection.svg'\r\nimport { ReactComponent as Correction } from '../../assets/image/correctionrelease.svg'\r\nimport { ReactComponent as Comment } from '../../assets/image/comment-edit-svgrepo-com.svg'\r\nimport { ReactComponent as DownloadCertificate } from '../../assets/image/Download Certificate.svg';\r\nimport { ReactComponent as PreliminaryReport } from '../../assets/image/preliminary_report.svg';\r\nimport { ReactComponent as ReportHistory } from '../../assets/image/reporthistory.svg';\r\nimport { ReactComponent as ReleaseTestAttachmentIcon } from '../../assets/image/releasetestattachment.svg';\r\nimport { ReactComponent as ReleaseTestCommentIcon } from '../../assets/image/releasetestcomment.svg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fileViewUrl, reportUrl } from '../../rsapi';\r\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\r\nimport { REPORTTYPE } from \"../../components/Enumeration\";\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport ResultEntryForm from '../ResultEntryBySample/ResultEntryForm';\r\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\r\nimport ReleaseTestAttachment from './ReleaseTestAttachment';\r\nimport ReleaseTestComment from './ReleaseTestComment';\r\nimport VersionHistGrid from './VersionHistGrid';\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport ReleaseReportHistory from './ReleaseReportHistory';\r\nimport { ReactComponent as Preview } from '../../assets/image/Preview.svg';\r\nimport { ReactComponent as TestAttachment } from '../../assets/image/Test Attachment.svg';\r\nimport AddReleaseTestAttachment from './AddReleaseTestAttachment';\r\nimport AddReleaseTestComment from './AddReleaseTestComment';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport SampleGridTab from '../registration/SampleGridTab';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { faTrashAlt, faThumbsUp, faChevronCircleDown } from '@fortawesome/free-solid-svg-icons';//,faUserTimes, faTrash\r\nimport CustomPopover from '../../components/customPopover';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Release extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const outsourceFileDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const reportInfoDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const correctionDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const versionHistoryDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const preliminaryHistoryDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const testAttachmentDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const testCommentDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const sampleGridDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        }\r\n\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            outsourceFileDataState: outsourceFileDataState,\r\n            reportInfoDataState: reportInfoDataState,\r\n            correctionDataState: correctionDataState,\r\n            versionHistoryDataState: versionHistoryDataState,\r\n            preliminaryHistoryDataState: preliminaryHistoryDataState,\r\n            childDataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            SampletypeList: [],\r\n            ProjecttypeList: [],\r\n            ProjectMasterList: [],\r\n            SectionList: [],\r\n            ReporttypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            searchedData: [],\r\n            count: 0,\r\n            SampleGridItem: [],\r\n            combinedSearchField: [],\r\n            npreregno: [],\r\n            ntransactiontestcode: [],\r\n            ntransactionsamplecode: [],\r\n            stateDynamicDesign: [],\r\n            sidebarview: false,\r\n            testAttachmentDataState: testAttachmentDataState,\r\n            testCommentDataState: testCommentDataState,\r\n            sampleGridDataState: sampleGridDataState,\r\n            splitChangeWidthPercentage: 28.6,\r\n            skip: 0,\r\n            take: this.props.Login.settings && parseInt(this.props.Login.settings[3])\r\n            // ,\r\n            // nmultiplesampleinsinglerelease: this.props.Login.masterData.realReportTypeValue && \r\n            //     this.props.Login.masterData.realReportTypeValue.nmultiplesampleinsinglerelease\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"sreportno\", \"susername\", \"stransdisplaystatus\"];\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // expandNextData(y) {\r\n    //     let change = []\r\n    //     let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\r\n\r\n    //     let data = x.data.every(item => {\r\n    //         return item.expanded === true\r\n    //     })\r\n    //     if (data === true) {\r\n    //         change = true\r\n    //     } else {\r\n    //         change = false\r\n    //     }\r\n    //     this.expandFunc({ change: change })\r\n\r\n    // }\r\n    dataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    outsourceFileDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ outsourceFileDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    reportInfoDataChange = (event) => {\r\n\r\n\r\n        this.setState({ reportInfoDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    correctionDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ correctionDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    versionHistoryDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ versionHistoryDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    preliminaryHistoryDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ preliminaryHistoryDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    testAttachmentDataStateChange = (event) => {\r\n        this.setState({ testAttachmentDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\r\n    testCommentDataStateChange = (event) => {\r\n        this.setState({ testCommentDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({ sampleGridDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo,\r\n                realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getReleasedApprovalVersion(inputParam)\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item,\r\n                        realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    };\r\n                    this.props.getReleasedRegistrationType(inputParamData)\r\n                }\r\n            }\r\n\r\n            else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item,\r\n                        realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    }\r\n                    this.props.getReleasedRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getReleasedApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n\r\n\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                // const inputParamData = {\r\n                //     dfrom: obj.fromDate,\r\n                //     dto: obj.toDate,\r\n                //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     masterData: { ...this.props.Login.masterData },\r\n                //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     ndesigntemplatemappingcode: comboData.value,\r\n                //     DesignTemplateMappingValue: comboData.item\r\n                // }\r\n                // this.props.getReleaseFilterBasedTest(inputParamData)\r\n\r\n                let masterData = { ...this.props.Login.masterData, DesignTemplateMappingValue: comboData.item }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getReleasedFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            //Don't Remove\r\n            // else if (fieldName === 'nsectioncode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n            //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             nsectioncode: comboData.value === -1 ? null\r\n            //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //                 : comboData.value,\r\n            //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n            //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            //         }\r\n\r\n            //         this.props.getReleasedFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n            // else if (fieldName === 'njobstatuscode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n            //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: { masterData }\r\n            //         }\r\n            //         this.props.updateStore(updateInfo);\r\n            //     }\r\n            // }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ncoareporttypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\r\n                    let masterData = { ...this.props.Login.masterData, ReportTypeValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            // else {\r\n            //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n            //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n            //         //  const updateInfo = {\r\n            //         //     typeName: DEFAULT_RETURN,\r\n            //         //    data: { masterData }\r\n            //         // }\r\n\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: comboData.value,\r\n            //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n            //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n            //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n            //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n            //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n\r\n            //         }\r\n\r\n            //         this.props.getReleaseFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n    closeFilter = () => {\r\n        let inputValues = {\r\n            fromDate: this.props.Login.masterData.realFromDate || new Date(),//this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date() ,\r\n            toDate: this.props.Login.masterData.realToDate || new Date(),//this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date() ,\r\n            SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\r\n            ReportTypeValue: this.props.Login.masterData.realReportTypeValue || {},\r\n            RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\r\n            RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\r\n            ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\r\n            DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\r\n            FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\r\n            SampleType: this.props.Login.masterData.realSampleTypeList || [],\r\n            ReportType: this.props.Login.masterData.realReportTypeList || [],\r\n            RegType: this.props.Login.masterData.realRegTypeList || [],\r\n            RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\r\n            FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\r\n            ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\r\n            DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false, masterData: { ...this.props.Login.masterData, ...inputValues } },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    viewDownloadFile = (filedata) => {\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                // change: this.props.Login.change,\r\n                // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                    && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                ncoareporthistorycode: filedata.inputData.ncoareporthistorycode ? filedata.inputData.ncoareporthistorycode : -1,\r\n                npreliminaryreporthistorycode: filedata.inputData.npreliminaryreporthistorycode ? filedata.inputData.npreliminaryreporthistorycode : -1,\r\n                //ntransactionstatus: String(transactionStatus.RELEASED),\r\n                //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                //nflag: 2,\r\n                userinfo: this.props.Login.userInfo,\r\n                //sreportcomments: \"\",\r\n                //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                //nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                action: \"DownloadVersionhistory\",\r\n                doAction: \"download\",\r\n                // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                openModal: true,\r\n                userInfo: this.props.Login.userInfo,\r\n                ncontrolCode: filedata.ncontrolCode\r\n            },\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })\r\n\r\n        }\r\n        this.props.downloadVersionReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n    }\r\n\r\n    // downloadPreliminaryHistory = (filedata) => {\r\n\r\n    //     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n    //     const inputParam = {\r\n    //         inputData: {\r\n    //             // change: this.props.Login.change,\r\n    //             // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //             //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //             //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //             npreliminaryreporthistorycode:filedata.inputData.npreliminaryreporthistorycode,\r\n    //             //ntransactionstatus: String(transactionStatus.RELEASED),\r\n    //             //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n    //             // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //             // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //             dfrom: obj.fromDate,\r\n    //             dto: obj.toDate,\r\n    //             //nflag: 2,\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             //sreportcomments: \"\",\r\n    //             //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //             //nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //             sprimarykeyname: \"npreregno\",\r\n    //             action: \"DownloadPreliminaryHistory\",\r\n    //             doAction: \"download\",\r\n    //            // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //             openModal:true,\r\n    //             userInfo: this.props.Login.userInfo,\r\n    //             ncontrolCode:filedata.ncontrolCode\r\n    //         },\r\n    //       //  screenName: this.props.intl.formatMessage({ id: \"IDS_VERSIONHISTORY\" })\r\n\r\n    //     }\r\n    //     this.props.downloadPreliminaryHistory(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n    // }\r\n\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        this.props.Login.change = false\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let realSampleTypeList = this.props.Login.masterData.SampleType || [];\r\n        let realReportTypeList = this.props.Login.masterData.ReportType || [];\r\n        let realRegTypeList = this.props.Login.masterData.RegType || [];\r\n        let realRegSubTypeList = this.props.Login.masterData.RegSubType || [];\r\n        let realFilterStatusList = this.props.Login.masterData.FilterStatus || [];\r\n        let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion || [];\r\n        let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            //  realUserSectionValue, realTestValue,\r\n            realDesignTemplateMappingValue, realReportTypeList, realRegSubTypeList, realRegTypeList,\r\n            realReportTypeValue, realSampleTypeList, realFilterStatusList, realApprovalVersionList, realDesignTemplateMappingList\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n            isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode !== -1) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData\r\n            }\r\n            this.props.getReleasedSample(inputParam,this.state.selectedRecord,this.props.Login.selectedRecord,this.props.Login)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    //end- search logic\r\n    checkFunction = (data) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                arrayfalse: data.arrayfalse,\r\n                childfalsearray: data.childfalsearray\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    checkFunction1 = () => {\r\n        this.setState({\r\n            count: 1\r\n        })\r\n    }\r\n    expandFunc = (change) => {\r\n        let count = change.count;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...this.props.Login.masterData },\r\n                change: change.change,\r\n                isAddPopup: false,\r\n                isEditPopup: this.props.Login.isEditPopup,\r\n                isDeletePopup: this.props.Login.isDeletePopup,\r\n                checkFlag: \"1\",\r\n                count: count,\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n    viewReport = () => {\r\n        if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\r\n            let showReport = true;\r\n            this.setState({ showReport });\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTNOTGENERATED\" }));\r\n        }\r\n    }\r\n\r\n    handleReportNoPageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n    getApprovedSample = (inputParam, ncontrolCode) => {\r\n        if(inputParam.masterData && inputParam.masterData.realReportTypeValue){\r\n            this.props.getApprovedSample(inputParam, ncontrolCode);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n\t// This methods can use for multi select delete samples if required\r\n    // ConfirmDelete = (inputParam) => {\r\n    //     const selectedReleaseHistory = this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory : [];\r\n    //     const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [] ;\r\n    //     const reportTemplateCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nreporttemplatecode\"]))] : [] ;\r\n    //     if(resultArray.length === 1){\r\n    //             if(resultArray[0] === transactionStatus.DRAFT || resultArray[0] === transactionStatus.CORRECTION){\r\n    //                 this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n    //                 this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n    //                 () => this.DeleteSamples(\"delete\", controlId));\r\n    //             } else {\r\n    //                 toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n    //             }\r\n    //     } else if (resultArray.length === 0) {\r\n    //         toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORDSTODELETECANCEL\" }));\r\n    //     } else {\r\n    //         toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORDSWITHSAMESTATUS\" }));\r\n    //     } \r\n    // }\r\n    // DeleteSamples = (action, controlId) => {\r\n    //     // const selectedReleaseHistory = this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory : [];\r\n    //     // const coaParentCode = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ncoaparentcode\"]))] : [] ;\r\n    //     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //     const inputParam = {\r\n    //         inputData: {\r\n    //             ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.ncoaparentcode).join(\",\") : \"-1\",\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             ncontrolCode: controlId,\r\n    //             action: action,\r\n    //             dfrom: obj.fromDate,\r\n    //             dto: obj.toDate,\r\n    //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //             isAddPopup: false,\r\n    //             isEditPopup: false,\r\n    //             isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n    //             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //             nreporttemplatecode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory[0].nreporttemplatecode : -1,\r\n    //             ncoaparenttranscode: this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n    //             npreregno: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\r\n    //             ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.stransactionsamplecode).join(\",\") : \"-1\",\r\n    //             ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.stransactiontestcode).join(\",\") : \"-1\",\r\n    //             nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false\r\n    //         }\r\n    //     }\r\n    //     this.props.deleteSamples(inputParam, this.props.Login.masterData)\r\n    // }\r\n\r\n    ConfirmDelete = (inputParam) => {\r\n        //commented for Draft record only allow to delete by sathish 11_SEP_24\r\n        //if(inputParam.deleteSamples.ntransactionstatus === transactionStatus.DRAFT || inputParam.deleteSamples.ntransactionstatus === transactionStatus.CORRECTION){\r\n        if(inputParam.deleteSamples.ntransactionstatus === transactionStatus.DRAFT){\r\n            this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteSamples(\"delete\", inputParam.controlId, inputParam));\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORD\" }));\r\n        }\r\n    }\r\n\r\n    DeleteSamples = (action, controlId, data) => {\r\n        // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n        // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n        // ALPD-4091 (16-05-2024) Changed RegSubTypeValue to realRegSubTypeValue\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                ncoaparentcode: data.deleteSamples.ncoaparentcode.toString(),\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontrolCode: controlId,\r\n                action: action,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                napprovalversioncode: (this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) || -1,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                isAddPopup: false,\r\n                isEditPopup: false,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                nreporttemplatecode: data.deleteSamples.nreporttemplatecode,\r\n                ncoaparenttranscode: data.deleteSamples.ntransactionstatus,\r\n                npreregno: data.deleteSamples.spreregno,\r\n                ntransactionsamplecode: data.deleteSamples.stransactionsamplecode,\r\n                ntransactiontestcode: data.deleteSamples.stransactiontestcode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                url: this.props.Login.settings[24],\r\n                nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired\r\n            },\r\n            searchRef: this.searchRef   // ALPD-4229 (30-05-2024) Added searchRef to clear search text\r\n        }\r\n        this.props.deleteSamples(inputParam, this.props.Login.masterData)\r\n    } \r\n\r\n    render() {\r\n        // ALPD-4229 (12-06-2024) Added sortData to sort the ReleaseHistory in all scenarios\r\n        this.props.Login.masterData && this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 \r\n            && sortData(this.props.Login.masterData.ReleaseHistory, \"\", 'ncoaparentcode');\r\n        const editReportParam = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"nreportinforeleasecode\", operation: \"update\",//selectedId:,\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: -1, masterData: this.props.Login.masterData, selectedId: this.props.Login.selectedId\r\n        };\r\n        this.feildsForGrid =\r\n            [\r\n                // { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },  \r\n                { \"idsName\": \"IDS_SCREEN\", \"dataField\": \"testname\", \"width\": \"100px\" },\r\n                { \"idsName\": \"IDS_FIELDNAME\", \"dataField\": \"sreportfieldname\", \"width\": \"100px\" },\r\n                { \"idsName\": \"IDS_VALUE\", \"dataField\": \"sreportfieldvalue\", \"width\": \"100px\" }\r\n            ];\r\n\r\n        this.fieldsForReleasedReportGrid =\r\n            [\r\n                { \"idsName\": \"IDS_RELEASENO\", \"dataField\": \"sreleaseno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_VERSIONNO\", \"dataField\": \"nversionno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_ORDERID\", \"dataField\": \"sexternalorderid\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDSITE\", \"dataField\": \"ssitename\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDDATE\", \"dataField\": \"sreleasedate\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDUSER\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n            ];\r\n\r\n        const mandatoryCommentsFields = [{ \"mandatory\": true, \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"sreleasecomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n        ];\r\n        const mandatoryFields = [{ \"mandatory\": true, \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sreportcomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            //  { \"mandatory\": true, \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"ntechniquecode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n            // { \"mandatory\": true, \"idsName\": \"IDS_INTERFACETYPE\", \"dataField\": \"ninterfacetypecode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        ];\r\n\r\n        let resultCorrectionColumnList = [{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" }];\r\n        {this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && \r\n        resultCorrectionColumnList.push(\r\n            { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"150px\" }\r\n        )}\r\n        resultCorrectionColumnList.push(\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_FINALRESULT\", \"dataField\": \"sfinal\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"150px\", \"fieldType\": \"gradeColumn\" },\r\n            //Commented  by sonia ALPD-4275 for Unit Name NA Showing\r\n            //{ \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_RESULTACCURACY\", \"dataField\": \"sresultaccuracyname\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_LOWA\", \"dataField\": \"smina\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_LOWB\", \"dataField\": \"sminb\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_HIGHA\", \"dataField\": \"smaxa\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_HIGHB\", \"dataField\": \"smaxb\", \"width\": \"150px\" },\r\n            /* { \"idsName\": \"IDS_MINLOD\", \"dataField\": \"sminlod\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MAXLOD\", \"dataField\": \"smaxlod\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MINLOQ\", \"dataField\": \"sminloq\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MAXLOQ\", \"dataField\": \"smaxloq\", \"width\": \"150px\" }*/\r\n        )\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let filePath = \"\";\r\n        if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\r\n            filePath = reportUrl();\r\n        } else {\r\n            filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\r\n        }\r\n        // let userStatusCSS = \"\";\r\n        // let activeIconCSS = \"fa fa-check\";\r\n        // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\r\n        //     userStatusCSS = \"outline-secondary\";\r\n        //     activeIconCSS = \"\";\r\n        // }\r\n        // else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\r\n        //     userStatusCSS = \"outline-success\";\r\n        // }\r\n        // else {\r\n        //     userStatusCSS = \"outline-Final\";\r\n        // }\r\n        const filterParam = {\r\n            inputListName: \"ReleaseHistory\",\r\n            selectedObject: \"selectedReleaseHistory\",\r\n            primaryKeyField: \"ncoaparentcode\",\r\n            fetchUrl: \"release/getReleaseHistory\",\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList,\r\n            changeList:[],  // ALPD-4229 (30-05-2024) Removed changeList value to make search filter work correctly\r\n            fecthInputObject: {\r\n                isSearch: true, userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: this.searchFieldList,\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined)\r\n                    || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n        };\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REPORTTYPE\",\r\n                \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" :\r\n                    this.props.Login.masterData.ReportTypeValue ?\r\n                        this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\r\n            }\r\n        ];\r\n        const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"AddSamples\")\r\n            && this.state.controlMap.get('AddSamples').ncontrolcode;\r\n\r\n        const preliminaryId =\r\n            this.state.controlMap.has(\"PreliminaryReport\") &&\r\n            this.state.controlMap.get(\"PreliminaryReport\").ncontrolcode;\r\n        const previewId =\r\n            this.state.controlMap.has(\"PreviewFinalReport\") &&\r\n            this.state.controlMap.get(\"PreviewFinalReport\").ncontrolcode;\r\n        const downloadId =\r\n            this.state.controlMap.has(\"ReleaseReportGeneration\") &&\r\n            this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\r\n        const regenerateId =\r\n            this.state.controlMap.has(\"RegenerateRelease\") &&\r\n            this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\r\n        const viewreportId =\r\n            this.state.controlMap.has(\"ViewReportRelease\") &&\r\n            this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\r\n        const sendtoportalId =\r\n            this.state.controlMap.has(\"SendToPortal\") &&\r\n            this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\r\n        const editId =\r\n            this.state.controlMap.has(\"AppendSamples\") &&\r\n            this.state.controlMap.get(\"AppendSamples\").ncontrolcode;\r\n        const deleteId =\r\n            this.state.controlMap.has(\"RemoveSamples\") &&\r\n            this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\r\n        const patientinfoId =\r\n            this.state.controlMap.has(\"PatientInfo\") &&\r\n            this.state.controlMap.get(\"PatientInfo\").ncontrolcode;\r\n        const ResultCorrectionId =\r\n            this.state.controlMap.has(\"ResultCorrection\") &&\r\n            this.state.controlMap.get(\"ResultCorrection\").ncontrolcode;\r\n        const editResultId =\r\n            this.state.controlMap.has(\"EditResult\") &&\r\n            this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        const editcommentsId =\r\n            this.state.controlMap.has(\"EditComment\") &&\r\n            this.state.controlMap.get(\"EditComment\").ncontrolcode;\r\n        const correctionId =\r\n            this.state.controlMap.has(\"Correction\") &&\r\n            this.state.controlMap.get(\"Correction\").ncontrolcode;\r\n        const releaseHistoryId =\r\n            this.state.controlMap.has(\"ReleaseHistory\") &&\r\n            this.state.controlMap.get(\"ReleaseHistory\").ncontrolcode;\r\n        const downloadVersionHist =\r\n            this.state.controlMap.has(\"DownloadReleaseVersion\") &&\r\n            this.state.controlMap.get(\"DownloadReleaseVersion\").ncontrolcode;\r\n        const downloadReportId =\r\n            this.state.controlMap.has(\"DownloadReport\") &&\r\n            this.state.controlMap.get(\"DownloadReport\").ncontrolcode;\r\n        const reportHistoryId =\r\n            this.state.controlMap.has(\"ReportHistory\") &&\r\n            this.state.controlMap.get(\"ReportHistory\").ncontrolcode;\r\n        const releaseTestAttachmentId =\r\n            this.state.controlMap.has(\"ReleaseTestAttachment\") &&\r\n            this.state.controlMap.get(\"ReleaseTestAttachment\").ncontrolcode;\r\n        const releaseTestCommentId =\r\n            this.state.controlMap.has(\"ReleaseTestComment\") &&\r\n            this.state.controlMap.get(\"ReleaseTestComment\").ncontrolcode;\r\n        const releaseReportHistoryId =\r\n            this.state.controlMap.has(\"ReleaseReportHistory\") &&\r\n            this.state.controlMap.get(\"ReleaseReportHistory\").ncontrolcode;\r\n        const generateid =\r\n            this.state.controlMap.has(\"Generate\") &&\r\n            this.state.controlMap.get(\"Generate\").ncontrolcode;\r\n        const editReportTemplateId =\r\n            this.state.controlMap.has(\"EditReportTemplate\") &&\r\n            this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode;\r\n\r\n        const deleteSampleId = this.props.Login.inputParam && this.state.controlMap.has(\"DeleteSamples\")\r\n            && this.state.controlMap.get('DeleteSamples').ncontrolcode;\r\n\r\n        const releaseCommentId = this.props.Login.inputParam && this.state.controlMap.has(\"ReportComment\")\r\n            && this.state.controlMap.get('ReportComment').ncontrolcode;\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"ntransactionresultcode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editResultId, masterData: this.props.Login.masterData\r\n        };\r\n\r\n        const ReleaseMasterDataParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\r\n            //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\r\n            masterData: { ...this.props.Login.masterData },\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].npreregno) || \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n\r\n                // 'ncoahistorycode':COAHistory\r\n\r\n            }\r\n        };\r\n\r\n        const ApprovedModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            Login: this.props.Login,\r\n            // selectedRecord: { ...this.props.Login.selectedRecord },\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'isAddPopup': true,\r\n                'isPopup': true,\r\n                'ncoareporttype': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                // 'ncoareporttypecode': 1,//parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                // \"nsectioncode\" : this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                \"nsectioncode\" : -1,\r\n\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })\r\n\r\n\r\n            },\r\n            DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\r\n            DynamicDefaultStructureItem:this.state.DynamicDefaultStructureItem,\r\n            extractedColumnList:this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\r\n        };\r\n        const RemoveModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'nneedremove': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\r\n                'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 &&  this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\r\n                ncontrolCode: deleteId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" }),\r\n                spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\r\n                patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false\r\n\r\n            }\r\n        };\r\n        const EditModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'nneededit': true,\r\n                'isPopup': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\r\n                'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 &&  this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\r\n                ncontrolCode: editId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }),\r\n                nsectioncode: this.props.Login.masterData && this.props.Login.masterData.reportSectionCode|| -1,\r\n                spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\r\n                patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false,\r\n               // nismultipleproject: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nismultipleproject) || transactionStatus.NO,\r\n\r\n            },\r\n            DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\r\n            DynamicDefaultStructureItem:this.state.DynamicDefaultStructureItem,\r\n            extractedColumnList:this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\r\n        };\r\n\r\n        const jsonParam = {\r\n            screenName: \"IDS_RELEASE\", operation: \"update\", primaryKeyName: \"ncoaparentcode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId, selectedReleaseHistory: this.props.Login.masterData.selectedReleaseHistory\r\n        };\r\n\r\n        const ResultCorrectionParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'nneedremove': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 &&  this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\r\n                ncontrolCode: ResultCorrectionId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_RESULTCORRECTION\" })\r\n\r\n\r\n\r\n            }\r\n        };\r\n       \r\n\r\n        const reportSubFields = [{\r\n            [designProperties.VALUE]: \"susername\",\r\n            [designProperties.LABEL]: \"IDS_USERNAME\"\r\n        },\r\n        {\r\n            [designProperties.VALUE]: \"sgenerateddate\",\r\n            [designProperties.LABEL]: \"IDS_GENERATEDDATE\"\r\n        },\r\n        {\r\n            [designProperties.VALUE]: \"sversionno\",\r\n            [designProperties.LABEL]: \"IDS_VERSIONNO\"\r\n        },\r\n        {\r\n            [designProperties.VALUE]: \"sreporttemplatename\",\r\n            [designProperties.LABEL]: \"IDS_REPORTTEMPLATE\"\r\n        }\r\n        ];\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        {/* <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_RELEASE\" })}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory}\r\n                                getMasterDetail={(ReleaseSample) =>\r\n                                    this.props.getReleasedDataDetails(\r\n\r\n                                        {\r\n                                            ...ReleaseMasterDataParam,\r\n                                            ...ReleaseSample\r\n                                        }\r\n                                    )\r\n                                }\r\n                                selectedMaster={this.props.Login.masterData.selectedReleaseHistory}\r\n                                primaryKeyField=\"ncoaparentcode\"\r\n                                mainField=\"sreportno\"\r\n                                firstField=\"susername\"\r\n                                secondField=\"sgenerateddate\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={releaseId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getApprovedSample(ApprovedModalParam, releaseId)}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                callCloseFunction={true}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <ReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            ReportType={this.state.ReporttypeList || []}\r\n                                            ReportTypeValue={this.props.Login.masterData.ReportTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            //   UserSection={this.state.UserSectionList || []}\r\n                                            //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            //   Test={this.state.TestList || []}\r\n                                            //  TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col> */}\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                        <SplitterLayout \r\n                            borderColor=\"#999\"\r\n                            primaryIndex={1} \r\n                            percentage={true}\r\n                            secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                            primaryMinSize={30}\r\n                            secondaryMinSize={20}\r\n                        >\r\n                            <TransactionListMasterJsonView\r\n                                // listMasterShowIcon={1}\r\n                                clickIconGroup={true}\r\n                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory || []}\r\n                                selectedMaster={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory : undefined}\r\n                                // selectedMaster={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory !== undefined ? [this.props.Login.masterData.selectedReleaseHistory] : undefined}\r\n                                primaryKeyField=\"ncoaparentcode\"\r\n                                filterColumnData={this.props.filterTransactionList}\r\n                                getMasterDetail={(ReleaseSample, status) =>\r\n                                    this.props.getReleasedDataDetails(\r\n\r\n                                        {\r\n                                            ...ReleaseMasterDataParam,\r\n                                            ...ReleaseSample\r\n                                        }, status\r\n                                    )}\r\n                                // getMasterDetail={this.props.getReleasedDataDetails}\r\n                                // inputParam={{\r\n                                    // ...this.state.subSampleGetParam,\r\n                                    // searchTestRef: this.searchTestRef,\r\n                                    // searchSubSampleRef: this.searchSubSampleRef,\r\n                                    // testskip: this.state.testskip,\r\n                                    // subsampleskip: this.state.subsampleskip,\r\n                                    // resultDataState: this.state.resultDataState,\r\n                                    // activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n                                // }}\r\n                                selectionList={this.props.Login.masterData && this.props.Login.masterData.transactionStatusSelectionList && this.props.Login.masterData.transactionStatusSelectionList.length > 0 ? this.props.Login.masterData.transactionStatusSelectionList : []}\r\n                                // hideQuickSearch={true}\r\n                                selectionColorField=\"scolorhexcode\"\r\n                                mainField={\"sreportno\"}\r\n                                showStatusLink={true}\r\n                                showStatusName={true}\r\n                                statusFieldName=\"stransdisplaystatus\"\r\n                                statusField=\"ntransactionstatus\"\r\n                                selectedListName=\"selectedReleaseHistory\"\r\n                                searchListName=\"searchedData\"\r\n                                searchRef={this.searchRef}\r\n                                objectName=\"releaseno\"\r\n                                listName=\"IDS_RELEASENO\"\r\n                                selectionField=\"ntransactionstatus\"\r\n                                selectionFieldName=\"stransdisplaystatus\"\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                subFields={reportSubFields}\r\n                                moreField={[]}\r\n                                needMultiSelect={this.props.Login.settings && this.props.Login.settings[50] ? parseInt(this.props.Login.settings[50]) === transactionStatus.YES ? true : false : false}\r\n                                showStatusBlink={true}\r\n                                callCloseFunction={true}\r\n                                filterParam={filterParam}\r\n                                subFieldsLabel={true}\r\n                                handlePageChange={this.handleReportNoPageChange}\r\n                                skip={this.state.skip}\r\n                                take={this.state.take}\r\n                                childTabsKey={[\"selectedReleaseHistory\", \"releaseno\", \"ReleasedSampleDetails\", \"ReleasedSubSampleDetails\", \"ReleasedTestDetails\"]}\r\n                                actionIcons={[\r\n                                    {\r\n                                        title: this.props.intl.formatMessage({ id: \"IDS_EDITREPORTTEMPLATE\" }),\r\n                                        controlname: \"faPencilAlt\",\r\n                                        objectName: \"editReportTemplate\",\r\n                                        hidden: this.state.userRoleControlRights.indexOf(editReportTemplateId) === -1,\r\n                                        onClick: this.editReportTemplate,\r\n                                        inputData: {\r\n                                            primaryKeyName: \"ncoaparentcode\",\r\n                                            operation: \"update\",\r\n                                            masterData: this.props.Login.masterData,\r\n                                            userInfo: this.props.Login.userInfo\r\n                                        },\r\n                                    },\r\n                                    {\r\n                                        title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                        controlname: \"faTrashAlt\",\r\n                                        objectName: \"deleteSamples\",\r\n                                        hidden: this.state.userRoleControlRights.indexOf(deleteSampleId) === -1,\r\n                                        onClick: this.ConfirmDelete,\r\n                                        inputData: {\r\n                                            primaryKeyName: \"ncoaparentcode\",\r\n                                            operation: \"delete\",\r\n                                            masterData: this.props.Login.masterData,\r\n                                            userInfo: this.props.Login.userInfo,\r\n                                            controlId: deleteSampleId\r\n                                        },\r\n                                    },\r\n                                    {\r\n                                        title: this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" }),\r\n                                        controlname: \"faComments\",\r\n                                        objectName: \"createReleaseComment\",\r\n                                        hidden: this.state.userRoleControlRights.indexOf(releaseCommentId) === -1,\r\n                                        onClick: this.ReleaseComments,\r\n                                        inputData: {\r\n                                            primaryKeyName: \"ncoaparentcode\",\r\n                                            operation: \"create\",\r\n                                            masterData: this.props.Login.masterData,\r\n                                            userInfo: this.props.Login.userInfo,\r\n                                            controlId: releaseCommentId\r\n                                        },\r\n                                    }\r\n                                ]}\r\n                                needFilter={true}\r\n                                commonActions={\r\n                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                        <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                            hidden={this.state.userRoleControlRights.indexOf(releaseId) === -1}\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                            // data-for=\"tooltip_list_wrap\"\r\n                                            onClick={() => this.getApprovedSample(ApprovedModalParam, releaseId)}>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                        </Button>\r\n                                        <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                            //   data-for=\"tooltip-common-wrap\"\r\n                                            onClick={this.reloadData} >\r\n                                            <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                        </Button>\r\n                                    </ProductList>\r\n                                }\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <ReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            ReportType={this.state.ReporttypeList || []}\r\n                                            ReportTypeValue={this.props.Login.masterData.ReportTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            //   UserSection={this.state.UserSectionList || []}\r\n                                            //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            //   Test={this.state.TestList || []}\r\n                                            //  TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        {/* <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?\r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i>\r\n                                    }\r\n                                </div>\r\n                            </div> */}\r\n                            {/* {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ? */}\r\n                            {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            {/* <Card.Title className=\"product-title-main\"> */}\r\n\r\n                                                {/* {this.props.Login.masterData && this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno !== 0 ?\r\n                                                    this.props.intl.formatMessage({ id: \"IDS_VERSIONNUMBER\" }) + \" : \" + this.props.Login.masterData.nversionno : \"\"} */}\r\n\r\n                                                {/* {( this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.sreportno )\r\n                                                    +  (this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno!==0 ?'-'+ this.props.Login.masterData.nversionno: \"\") } */}\r\n                                            {/* </Card.Title> */}\r\n                                            <Card.Subtitle>\r\n                                                {/* <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}> */}\r\n                                                            {/* <i className={activeIconCSS}></i> */}\r\n                                                            {/* {this.props.Login.masterData.selectedReleaseHistory.stransdisplaystatus}\r\n                                                        </span> */}\r\n\r\n                                                    {/* </h2> */}\r\n\r\n\r\n\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n\r\n\r\n\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_PATIENTINFO\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(patientinfoId) === -1}\r\n                                                                onClick={() => this.patientInfo()}>\r\n                                                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(previewId) === -1}\r\n                                                            onClick={() => this.previewReport(previewId)}\r\n\r\n                                                        >\r\n                                                            \r\n                                                            <Preview />\r\n\r\n                                                        </Nav.Link> */}\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? \r\n                                                                this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                                                                : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })}\r\n                                                            data-place=\"left\"\r\n                                                            // data-tip={this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(preliminaryId) === -1}\r\n                                                            onClick={() => this.preliminaryReport(preliminaryId)}\r\n\r\n                                                        >\r\n                                                            <PreliminaryReport className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        {/* {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE)) && */}\r\n                                                        {\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease\r\n                                                            && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.NO) &&\r\n                                                        // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                //Modified by sonia on 11-06-2024 for JIRA ID:4122 Sample Count Validation\r\n                                                                onClick={() => this.props.validationforAppendSamples(EditModalParam)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faEdit} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                        {/* } */}\r\n                                                        {/* {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE)) && */}\r\n                                                        {\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease\r\n                                                                && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.NO)  &&\r\n                                                        // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                onClick={() => this.props.getRemoveApprovedSample(RemoveModalParam)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrash} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                        {/* } */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                            onClick={() => {\r\n                                                                this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                                    this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\r\n                                                                    ? this.CorrectionComments(downloadId) : this.downloadReleasedFile(downloadId)\r\n                                                            }}>\r\n                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link> */}\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                            onClick={() => { this.downloadReleasedValidation(downloadId) }}>\r\n                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        {\r\n                                                        // this.props.Login.masterData.realSampleTypeValue && (this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES || \r\n                                                        // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \r\n                                                        // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT) &&\r\n                                                            // <Nav.Link\r\n                                                            //     className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            //     data-tip={this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })} data-place=\"left\"\r\n                                                            //     hidden={this.state.userRoleControlRights.indexOf(correctionId) === -1}\r\n                                                            //     onClick={() => this.CorrectionStatus(correctionId)}\r\n                                                            // >\r\n                                                            //     <Correction className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            // </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {\r\n                                                        // (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES || \r\n                                                        // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \r\n                                                        // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT) &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RESULTCORRECTION\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(ResultCorrectionId) === -1}\r\n                                                                onClick={() => this.props.getResultCorrectionData(ResultCorrectionParam)}\r\n                                                            >\r\n                                                                <ResultCorrection className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {/* <Nav.Link\r\n\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(viewreportId) === -1}\r\n                                                            onClick={() => this.viewReport()}>\r\n                                                            <FontAwesomeIcon icon={faExpandArrowsAlt} />\r\n                                                        </Nav.Link> */}\r\n                                                        {/* {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(sendtoportalId) === -1}\r\n                                                                onClick={() => this.sendToPortal(sendtoportalId)}>\r\n                                                                <FontAwesomeIcon icon={faStore} />\r\n                                                            </Nav.Link>\r\n                                                        } */}\r\n\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE &&\r\n                                                            this.props.Login.masterData.realSampleTypeValue.noutsourcerequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REPORTHISTORY\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(reportHistoryId) === -1}\r\n                                                                onClick={() => this.reportHistoryInfo()}>\r\n                                                                    <ReportHistory width='20px' height='20px' className='custon_icons' />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {/* <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(releaseHistoryId) === -1}\r\n                                                                onClick={() => this.reportHistory(releaseHistoryId)}\r\n                                                          \r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faHistory} />                                                                                                                \r\n                                                            </Nav.Link> */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(regenerateId) === -1}\r\n                                                            onClick={() => this.regenerateReleasedFile(regenerateId)}>\r\n                                                            <ReGenerate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(releaseReportHistoryId) === -1}\r\n                                                            onClick={() => this.releaseReportHistory(releaseReportHistoryId)}\r\n                                                        >\r\n                                                            {/* <Correction className=\"custom_icons\" width=\"20\" height=\"20\" /> */}\r\n                                                            <FontAwesomeIcon icon={faHistory} />\r\n                                                        </Nav.Link>\r\n\r\n                                                        {\r\n                                                        // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \r\n                                                        //  this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT ?\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REPORTCORRECTION\" })} data-place=\"left\"\r\n                                                                //  data-for=\"tooltip-common-wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editcommentsId) === -1}\r\n                                                                onClick={() => this.reportcomments('IDS_REPORTCORRECTION')}>\r\n                                                                <Comment className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            </Nav.Link>\r\n                                                            // : \"\"\r\n                                                            }\r\n\r\n                                                        {/* \r\n                                                        {this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue \r\n                                                        && this.props.Login.masterData.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE\r\n                                                        && this.props.Login.settings && (parseInt(this.props.Login.settings[29]) === transactionStatus.YES) &&  \r\n                                                        */}\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASETESTATTACHMENT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(releaseTestAttachmentId) === -1}\r\n                                                            onClick={() => this.releaseTestAttachmentData(\"IDS_RELEASETESTATTACHMENT\")}>\r\n                                                            {/* <FontAwesomeIcon icon={faFile} /> */}\r\n                                                            <ReleaseTestAttachmentIcon width='20px' height='20px' className='custom_icons' />\r\n                                                        </Nav.Link>\r\n                                                        {/* } */}\r\n\r\n                                                        {/* \r\n                                                        {this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue \r\n                                                        && this.props.Login.masterData.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE\r\n                                                        && this.props.Login.settings && (parseInt(this.props.Login.settings[29]) === transactionStatus.YES) &&  \r\n                                                        */}\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASETESTCOMMENT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(releaseTestCommentId) === -1}\r\n                                                            onClick={() => this.releaseTestAttachmentData(\"IDS_RELEASETESTCOMMENT\")}>\r\n                                                            {/* <FontAwesomeIcon icon={faComments} /> */}                                                            \r\n                                                            <ReleaseTestCommentIcon width='20px' height='20px' className='custom_icons' />\r\n                                                        </Nav.Link>\r\n                                                        {/* } */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFINALREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadReportId) === -1}\r\n                                                            onClick={() => this.downloadHistory(downloadReportId)}\r\n                                                        >\r\n                                                            <DownloadCertificate />\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id:\"IDS_SYNC\"})} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(generateid) === -1}\r\n                                                            onClick={() => this.generatereport(generateid)}\r\n                                                           >   <FontAwesomeIcon icon={faSync} /> \r\n                                                             </Nav.Link>  */}\r\n                                                        \r\n                                                             <CustomPopover\r\n                                                                        nav={true}\r\n                                                                        data={\r\n                                                                            <>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(previewId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })} data-place=\"left\"\r\n                                                                                    onClick={() => this.previewReport(previewId)}>\r\n                                                                                    {/* <FontAwesomeIcon icon={faEye} /> */}\r\n                                                                                    <Preview /> {this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(preliminaryId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? \r\n                                                                                        this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                                                                                        : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })}\r\n                                                                                    data-place=\"left\"\r\n                                                                                    // data-tip={this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })} data-place=\"left\"\r\n                                                                                    onClick={() => this.preliminaryReport(preliminaryId)}>\r\n                                                                                    <PreliminaryReport className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? \r\n                                                                                        this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                                                                                        : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item  as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    // className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} \r\n                                                                                    data-place=\"left\"\r\n                                                                                    //  data-for=\"tooltip-common-wrap\"\r\n                                                                                    onClick={() => { this.downloadReleasedValidation(downloadId) }}>\r\n                                                                                    <Generate className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(correctionId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })} data-place=\"left\"\r\n                                                                                    onClick={() => this.CorrectionStatus(correctionId)}>\r\n                                                                                    <Correction className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(regenerateId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                                                    //  data-for=\"tooltip-common-wrap\"                                                                                    \r\n                                                                                    onClick={() => this.regenerateReleasedFile(regenerateId)}>\r\n                                                                                    <ReGenerate className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(downloadReportId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFINALREPORT\" })} data-place=\"left\"\r\n                                                                                    onClick={() => this.downloadHistory(downloadReportId)}>\r\n                                                                                    <DownloadCertificate /> {this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFINALREPORT\" })}\r\n                                                                                    {/* <FontAwesomeIcon icon={faDownload} /> */}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(generateid) === -1}>                                                                            \r\n                                                                                <Nav.Link\r\n                                                                                className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                data-tip={this.props.intl.formatMessage({ id:\"IDS_PORTALSYNC\"})} data-place=\"left\"                                                                                \r\n                                                                                onClick={() => this.generatereport(generateid)}>\r\n                                                                                    <FontAwesomeIcon icon={faSync} className='mr-2' /> {this.props.intl.formatMessage({ id:\"IDS_PORTALSYNC\"})} \r\n                                                                                </Nav.Link> \r\n                                                                            </ListGroup.Item>\r\n                                                                                {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES &&\r\n                                                                                    \r\n                                                                                    <ListGroup.Item as=\"li\" className=\"btn_list \"  hidden={this.state.userRoleControlRights.indexOf(sendtoportalId) === -1}>\r\n                                                                                        <Nav.Link\r\n                                                                                            className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}                                                                                           \r\n                                                                                            onClick={() => this.sendToPortal(sendtoportalId)}>\r\n                                                                                            <FontAwesomeIcon icon={faStore} /> {this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}\r\n                                                                                        </Nav.Link>                                                                                            \r\n                                                                                    </ListGroup.Item>\r\n                                                                                }\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        Button={false}\r\n                                                                        hideIcon={true}\r\n                                                                        btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                        textKey=\"value\"\r\n                                                                        icon={faChevronCircleDown}\r\n                                                                        // toolTip={this.props.intl.formatMessage({ id: \"IDS_CONFIGURE\" })}\r\n                                                                        dynamicButton={(value) => this.actionMethod(value)}\r\n                                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                    />\r\n\r\n                                                    </ProductList>\r\n                                                {/* </div> */}\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            {/* <Row>\r\n                                                <Col md=\"4\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REPORTNO\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                            this.props.Login.masterData.selectedReleaseHistory.sreportno}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n\r\n                                            </Row> */}\r\n                                            <DataGridWithMultipleGrid\r\n                                                needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                data={this.state.data}\r\n                                                dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState)}\r\n                                                dataState={this.state.dataState}\r\n                                                dataStateChange={this.dataStateChange}\r\n                                                expandNextData={this.expandNextData}\r\n                                                checkFunction={this.checkFunction}\r\n                                                checkFunction1={this.checkFunction1}\r\n                                                expandFunc={this.expandFunc}\r\n                                                //expandData={this.expandData}\r\n                                                childDataResult={this.state.childDataResult}\r\n                                                subChildDataResult={this.state.subChildDataResult}\r\n                                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n                                                expandField=\"expanded\"\r\n                                                reloadData={this.reloadData}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                pageable={true}\r\n                                                scrollable={'scrollable'}\r\n                                                gridHeight={'525px'}\r\n                                                gridTop={'10px'}\r\n                                                //   isActionRequired={true}\r\n                                                //   isToolBarRequired={true}\r\n                                                //  isExpandRequired={true}\r\n                                                //   isDownloadRequired={true}\r\n                                                isCheckBoxRequired={false}\r\n                                                isCollapseRequired={true}\r\n                                                selectedId={this.props.Login.selectedId}\r\n                                                hasChild={true}\r\n                                                hasSubChild={true}\r\n                                                childList={\r\n                                                    this.props.Login.masterData.ReleasedSubSampleDetails\r\n                                                }\r\n                                                childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                childMappingField={\"npreregno\"}\r\n                                                subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                                subChildList={\r\n                                                    this.props.Login.masterData.ReleasedTestDetails\r\n                                                }\r\n                                                selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                methodUrl={\"Release\"}\r\n                                                headerSelectionChange={this.headerSelectionChange}\r\n                                                childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                childSelectionChange={this.childSelectionChange}\r\n                                                subChildSelectionChange={this.subChildSelectionChange}\r\n                                                subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                selectionChange={this.selectionChange}\r\n                                                releaseRecord={this.onSaveModalClick}\r\n                                            // viewDownloadFile={this.viewDownloadFile}\r\n                                            />\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"\r\n                            }\r\n                            </SplitterLayout>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div >\r\n                {\r\n                    this.state.showReport ?\r\n                        <DocViewer file={filePath}\r\n                            showReport={this.state.showReport}\r\n                            closeModal={this.closeDocModal}\r\n                            type={\"pdf\"}>\r\n                        </DocViewer>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal || this.state.openModal}\r\n                        size={(this.props.Login.loadEsign || this.props.Login.loadEsignStateHandle) ? \"lg\" : \"xl\"}\r\n                        closeModal={this.closeModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        mandatoryFields={\r\n                            this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) \r\n                            ? mandatoryFields :this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" }) ?mandatoryCommentsFields:\"\"}\r\n                        screenName={this.props.Login.loadEsignStateHandle ? this.props.intl.formatMessage({ id: \"IDS_ESIGN\" }) : this.props.Login.isPatientDetails ?\r\n                            this.props.intl.formatMessage({ id: \"IDS_PATIENTINFO\" })\r\n                            : this.props.Login.isPatientReports ? this.props.intl.formatMessage({ id: \"IDS_REPORTHISTORY\" })\r\n                                : this.props.Login.isReleaseTestAttachment ? this.props.intl.formatMessage({ id: \"IDS_RELEASETESTATTACHMENT\" })\r\n                                    : this.props.Login.isReleaseTestComment ? this.props.intl.formatMessage({ id: \"IDS_RELEASETESTCOMMENT\" })\r\n                                        : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })\r\n                                            : this.props.Login.screenName}\r\n                        onSaveClick={\r\n                            this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) ? this.downloadReleasedFile : \r\n                            this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" })? this.onSaveReleaseComments:\r\n                            (this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle || \r\n                                this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })) ? this.onMandatoryCheck : \r\n                            this.onSaveModalClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        //noSave={this.props.Login.openModalTitle=='versionhistory' ? true : false}\r\n                        hideSave={this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) ||\r\n                            this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\"  ? true:this.props.Login.FilterQueryBuilder\r\n                            ? true : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' \r\n                            ? true : ((this.props.Login.isReleaseTestAttachment || this.props.Login.isReleaseTestComment) \r\n                            && !this.props.Login.loadEsignStateHandle) ? true \r\n                            : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" })\r\n                            && this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory\r\n                            && this.props.Login.masterData.selectedReleaseHistory.length ===1 \r\n                            && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus===transactionStatus.RELEASED ? true \r\n                            :this.props.Login.hideSave}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.Login.loadEsignStateHandle ?\r\n                                <EsignStateHandle\r\n                                    operation={this.props.Login.operation}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    childDataChange={this.childDataChange}\r\n                                />\r\n                                : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) ?\r\n                                    <ReleaseReportHistory\r\n                                        operation={this.props.Login.operation}\r\n                                        // designData={this.props.Login.designData || {}}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        dataResult={this.props.Login.masterData}\r\n                                        //    this.props.Login.dataResult || [] :\r\n                                        //   this.props.Login.dataResult || {}}\r\n                                        //onChangeToggle={this.onChangeToggle}\r\n                                        settings={this.props.Login.settings}\r\n                                        viewDownloadFile={this.viewDownloadFile}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        controlMap={this.state.controlMap}\r\n                                        userRoleControlRights={this.state.userRoleControlRights} />\r\n                                    : this.props.Login.screenName === \"IDS_PATIENTSEARCH\" ?\r\n                                        <FilterQueryBuilder\r\n                                            fields={this.props.Login.fields || {}}\r\n                                            onChange={this.onChangeAwesomeQueryBuilder}\r\n                                            tree={this.props.Login.awesomeTree}\r\n                                            config={this.props.Login.awesomeConfig}\r\n                                            skip={this.props.Login.kendoSkip}\r\n                                            take={this.props.Login.kendoTake}\r\n                                            handlePageChange={this.handlePageChange}\r\n                                            gridColumns={this.props.Login.gridColumns || []}\r\n                                            filterData={this.props.Login.lstPatient}\r\n                                            onRowClick={this.handleKendoRowClick}\r\n                                            handleExecuteClick={this.handleExecuteClick}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                        />\r\n                                        : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ?\r\n                                            <VersionHistGrid\r\n                                                versionHistory={this.props.Login.masterData.versionHistory}\r\n                                                isExportExcelRequired={false}\r\n                                                dataState={this.state.versionHistoryDataState}\r\n                                                dataResult={process(this.props.Login.masterData && this.props.Login.masterData.versionHistory || [], this.state.versionHistoryDataState)}\r\n                                                dataStateChange={this.versionHistoryDataStateChange}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                viewDownloadFile={this.viewDownloadFile}\r\n                                            />\r\n                                            : this.props.Login.isPatientDetails ?\r\n                                            this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length === 1 ?\r\n                                                <SampleInfoView\r\n                                                    data={(this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length > 0) ?\r\n                                                        this.props.Login.masterData.ReleasedSampleDetails[this.props.Login.masterData.ReleasedSampleDetails.length - 1] : {}}\r\n                                                    SingleItem={this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails ?\r\n                                                        this.state.SingleItem : []}\r\n                                                    screenName=\"IDS_SAMPLEINFO\"\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                />\r\n                                                : \r\n                                                <SampleGridTab\r\n                                                    userInfo={this.props.Login.masterData.userInfo || {}}\r\n                                                    GridData={this.props.Login.masterData.ReleasedSampleDetails || []}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    dataState={this.state.sampleGridDataState}\r\n                                                    dataStateChange={this.sampleGridDataStateChange}\r\n                                                    extractedColumnList={this.gridfillingColumn(this.state.SingleItem) || []}\r\n                                                    detailedFieldList={[]}\r\n                                                    primaryKeyField={\"npreregno\"}\r\n                                                    expandField=\"expanded\"\r\n                                                    screenName=\"IDS_PATIENTINFO\"\r\n                                                />\r\n                                                : this.props.Login.isPatientReports && this.props.Login.openModal ?\r\n                                                    <DataGrid\r\n                                                        // key=\"nreleaseoutsourceattachcode\"\r\n                                                        primaryKeyField=\"nreleaseoutsourceattachcode\"\r\n                                                        data={this.props.Login.masterData.PatientReports || []}\r\n                                                        dataResult={process(this.props.Login.masterData.PatientReports && this.props.Login.masterData.PatientReports || [], this.state.outsourceFileDataState)}\r\n                                                        dataState={this.state.outsourceFileDataState}\r\n                                                        isExportExcelRequired={false}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        extractedColumnList={this.fieldsForReleasedReportGrid}\r\n                                                        selectedId={this.props.Login.selectedId}\r\n                                                        pageable={true}\r\n                                                        dataStateChange={this.outsourceFileDataStateChange}\r\n                                                        scrollable={'scrollable'}\r\n                                                        gridHeight={'630px'}\r\n                                                        isActionRequired={true}\r\n                                                        methodUrl={'PatientReports'}\r\n                                                        viewDownloadFile={this.viewSelectedReport}\r\n                                                    >\r\n                                                    </DataGrid>\r\n                                                    : this.props.Login.isReleaseTestAttachment && this.props.Login.openModal ?\r\n                                                        <ReleaseTestAttachment\r\n                                                            ReleaseTestAttachmentDetails={this.props.Login.masterData.ReleaseTestAttachmentDetails || []}\r\n                                                            controlMap={this.state.controlMap}\r\n                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                            storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            methodUrl={'ReleaseTestAttachment'}\r\n                                                            settings={this.props.Login.settings}\r\n                                                            isAddRequired={true}\r\n                                                            isRefreshRequired={false}\r\n                                                            isImportRequired={false}\r\n                                                            isDownloadPDFRequired={false}\r\n                                                            isDownloadExcelRequired={false}\r\n                                                            inputParam={this.props.Login.inputParam}\r\n                                                            screenName={\"IDS_RELEASETESTATTACHMENT\"}\r\n                                                            maxSize={20}\r\n                                                            masterData={this.props.Login.masterData}\r\n                                                            isDataGrid={this.props.Login.isDataGrid}\r\n                                                            selectedRecord={this.state.selectedRecord}\r\n                                                            operation={this.props.Login.operation}\r\n                                                            childDataChange={this.childDataChange}\r\n                                                            deleteRecord={this.deleteReleaseTestAttachment}\r\n                                                            dataState={this.state.testAttachmentDataState}\r\n                                                            dataStateChange={this.testAttachmentDataStateChange}\r\n                                                        />\r\n                                                        : this.props.Login.isAddReleaseTestAttachment ?\r\n                                                            <AddReleaseTestAttachment\r\n                                                                ReleaseTestAttachmentDetails={this.props.Login.masterData.ReleaseTestAttachmentDetails || []}\r\n                                                                controlMap={this.state.controlMap}\r\n                                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                                userInfo={this.props.Login.userInfo}\r\n                                                                methodUrl={'ReleaseTestAttachment'}\r\n                                                                settings={this.props.Login.settings}\r\n                                                                isAddRequired={true}\r\n                                                                isRefreshRequired={false}\r\n                                                                isImportRequired={false}\r\n                                                                isDownloadPDFRequired={false}\r\n                                                                isDownloadExcelRequired={false}\r\n                                                                inputParam={this.props.Login.inputParam}\r\n                                                                screenName={\"ReleaseTestAttachment\"}\r\n                                                                maxSize={20}\r\n                                                                masterData={this.props.Login.masterData}\r\n                                                                isDataGrid={this.props.Login.isDataGrid}\r\n                                                                selectedRecord={this.state.selectedRecord}\r\n                                                                operation={this.props.Login.operation}\r\n                                                                childDataChange={this.childDataChange}\r\n                                                            />\r\n                                                            : this.props.Login.isReleaseTestComment && this.props.Login.openModal ?\r\n                                                                <ReleaseTestComment\r\n                                                                    ReleaseTestCommentDetails={this.props.Login.masterData.ReleaseTestCommentDetails || []}\r\n                                                                    controlMap={this.state.controlMap}\r\n                                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                    storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                                    userInfo={this.props.Login.userInfo}\r\n                                                                    methodUrl={'ReleaseTestComment'}\r\n                                                                    settings={this.props.Login.settings}\r\n                                                                    isAddRequired={true}\r\n                                                                    isRefreshRequired={false}\r\n                                                                    isImportRequired={false}\r\n                                                                    isDownloadPDFRequired={false}\r\n                                                                    isDownloadExcelRequired={false}\r\n                                                                    inputParam={this.props.Login.inputParam}\r\n                                                                    screenName={\"IDS_RELEASETESTCOMMENT\"}\r\n                                                                    maxSize={20}\r\n                                                                    masterData={this.props.Login.masterData}\r\n                                                                    CommentSubType={this.props.Login.masterData.CommentSubType}\r\n                                                                    deleteRecord={this.deleteReleaseTestComment}\r\n                                                                    dataState={this.state.testCommentDataState}\r\n                                                                    dataStateChange={this.testCommentDataStateChange}\r\n                                                                />\r\n                                                                : this.props.Login.isAddReleaseTestComment ?\r\n                                                                    <AddReleaseTestComment\r\n                                                                        ReleaseTestCommentDetails={this.props.Login.masterData.ReleaseTestCommentDetails || []}\r\n                                                                        controlMap={this.state.controlMap}\r\n                                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                        storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                                        userInfo={this.props.Login.userInfo}\r\n                                                                        methodUrl={'ReleaseTestComment'}\r\n                                                                        settings={this.props.Login.settings}\r\n                                                                        isAddRequired={true}\r\n                                                                        isRefreshRequired={false}\r\n                                                                        isImportRequired={false}\r\n                                                                        isDownloadPDFRequired={false}\r\n                                                                        isDownloadExcelRequired={false}\r\n                                                                        inputParam={this.props.Login.inputParam}\r\n                                                                        screenName={\"ReleaseTestComment\"}\r\n                                                                        maxSize={20}\r\n                                                                        masterData={this.props.Login.masterData}\r\n                                                                        CommentSubType={this.props.Login.masterData.CommentSubType}\r\n                                                                        selectedRecord={this.state.selectedRecord}\r\n                                                                        childDataChange={this.childDataChange}\r\n                                                                        operation={this.props.Login.operation}\r\n                                                                        SampleTestComments={this.props.Login.SampleTestComments}\r\n                                                                    />\r\n                                                                    : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" && this.props.Login.openModal ?\r\n                                                                        <DataGrid\r\n                                                                            key=\"reportinforeleasecode\"\r\n                                                                            primaryKeyField=\"nreportinforeleasecode\"\r\n                                                                            data={this.props.Login.masterData.reportinforelease || []}\r\n                                                                            dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState)}\r\n                                                                            dataState={this.state.reportInfoDataState}\r\n                                                                            //dataResult={this.props.selectedWorklist || []}\r\n                                                                            //expandField=\"expanded\"\r\n                                                                            isExportExcelRequired={false}\r\n                                                                            //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                                                                            controlMap={this.state.controlMap}\r\n                                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                            extractedColumnList={this.feildsForGrid}\r\n                                                                            detailedFieldList={this.props.detailedFieldList}\r\n                                                                            editParam={editReportParam}\r\n                                                                            selectedId={this.props.Login.selectedId}\r\n                                                                            fetchRecord={this.props.fetchReportInfoReleaseById}\r\n                                                                            pageable={true}\r\n                                                                            dataStateChange={this.reportInfoDataChange}\r\n                                                                            scrollable={'scrollable'}\r\n                                                                            gridHeight={'630px'}\r\n                                                                            isActionRequired={true}\r\n                                                                            methodUrl={'ReportComment'}\r\n                                                                        // actionIcons={[{\r\n                                                                        //     title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),\r\n                                                                        //     controlname: \"faEye\",\r\n                                                                        //     objectName: \"ExceptionLogs\",\r\n                                                                        //     hidden: -1 === -1,\r\n                                                                        //    onClick: (viewSample) => this.props.viewSample(viewSample)\r\n                                                                        // }]}\r\n                                                                        >\r\n                                                                        </DataGrid>\r\n                                                                         : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) ?\r\n                                                                             <Row>\r\n                                                                                 <Col md={12}>\r\n                                                                                     <FormInput\r\n                                                                                         label={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                                         name=\"sreportcomments\"\r\n                                                                                         type=\"text\"\r\n                                                                                         onChange={(event) => this.onInputOnChange(event)}\r\n                                                                                         placeholder={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                                         value={this.state.selectedRecord[\"sreportcomments\"] ? this.state.selectedRecord[\"sreportcomments\"] : \"\"}\r\n                                                                                         isMandatory={true}\r\n                                                                                         required={true}\r\n                                                                                         maxLength={255}\r\n                                                                                     />\r\n                                                                                </Col>\r\n                                                                             </Row>\r\n                                                                        : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" }) ?\r\n                                                                            <Row>\r\n                                                                                <Col md={12}>\r\n                                                                                    <FormTextarea\r\n                                                                                        label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                                                        name=\"sreleasecomments\"\r\n                                                                                        type=\"text\"\r\n                                                                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                                                        value={this.state.selectedRecord[\"sreleasecomments\"] ? this.state.selectedRecord[\"sreleasecomments\"] : \"\"}\r\n                                                                                        isMandatory={true}\r\n                                                                                        required={true}\r\n                                                                                        maxLength={500}\r\n                                                                                        readOnly={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory\r\n                                                                                            && this.props.Login.masterData.selectedReleaseHistory.length ===1 \r\n                                                                                            && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus===transactionStatus.RELEASED ? true :false}\r\n                                                                                    />\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                            :\r\n                                                                            this.props.Login.FilterQueryBuilder?\r\n                                                                            <>\r\n                                                                         <Row>\r\n                                                                           <FilterQueryBuilder\r\n                                                                           fields={this.props.Login.fields || {}}\r\n                                                                           onChange={this.onComboChangeAwesomeQueryBuilder}\r\n                                                                           tree={this.props.Login.awesomeTree}\r\n                                                                           config={this.props.Login.awesomeConfig}\r\n                                                                           skip={this.props.Login.kendoSkip}\r\n                                                                           take={this.props.Login.kendoTake}\r\n                                                                           handlePageChange={this.handlePageChange}\r\n                                                                           gridColumns={[]}\r\n                                                                           filterData={this.props.Login.lstPatient || []}\r\n                                                                           //onRowClick={this.handleKendoRowClick}\r\n                                                                           //handleExecuteClick={this.handleExecuteClick}\r\n                                                                           userInfo={this.props.Login.userInfo}\r\n                                                                           static={true}\r\n                                                                       />\r\n                                                                         \r\n                                                                         <Col md={3}>\r\n                                                                           <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleExecuteClicks(false)}>\r\n                                                                               {/* <FontAwesomeIcon icon={faCalculator} /> { } */}\r\n                                                                               <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' />\r\n                                                                           </Button>\r\n                                                                           </Col>\r\n                                                                           </Row>\r\n                                                                           </>\r\n                                                                            :\r\n                                                                            <>\r\n                                                                               \r\n                                                                                    \r\n                                                                                    {\r\n                                                                                         (\r\n                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                        // //  this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\r\n                                                                                        // //  (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                        // this.props.Login.masterData.realReportTypeValue\r\n                                                                                        // && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                        //     this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                        // //this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\r\n                                                                                        this.props.Login.isDeletePopup !== true &&\r\n                                                                                        //this.props.Login.isComboCheck !== true &&\r\n                                                                                        //this.props.Login.isEditPopup === true &&\r\n                                                                                        this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) &&\r\n                                                                                        this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE &&\r\n                                                                                       // this.state.DynamicReportFilterTypeItem && this.state.DynamicReportFilterTypeItem.length>0 &&\r\n                                                                                      <>\r\n                                                                                      <Row>\r\n                                                                                            <Col md={3} className='pb-4'>\r\n                                                                                            <Button className=\"btn-user btn-primary-blue\" onClick={() => this.openFilterQuery()}>\r\n                                                                                                <FontAwesomeIcon icon={faSearch} /> { }\r\n                                                                                            {/* <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' /> */}\r\n                                                                                            </Button>\r\n                                                                                            {!this.props.Login.ismandatory &&\r\n                                                                                            <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleExecuteClicks(true)}>\r\n                                                                                                <FontAwesomeIcon icon={faTimes} /> { }\r\n                                                                                                <FormattedMessage id='IDS_CLEARFILTER' defaultMessage='Clear Filter' />\r\n                                                                                            </Button>      \r\n                                                                                             }                                                                                 \r\n                                                                                                </Col>\r\n                                                                                         \r\n                                                                                                <Col md={3} className='pb-4'>\r\n                                                                                        {(this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                        this.props.Login.masterData.realReportTypeValue &&\r\n                                                                                                        (this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES\r\n                                                                                                          //  || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                                         //   this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE\r\n                                                                                                        ) &&\r\n                                                                                        this.props.Login.isDeletePopup !== true && this.props.Login.isEditPopup !== true &&\r\n                                                                                        this.props.Login.isComboCheck !== true  &&\r\n                                                                                             <FormSelectSearch\r\n                                                                                                name={\"nsectioncode\"}\r\n                                                                                                 formLabel={this.props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                                                                                                 placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                                 options={this.props.Login.sectionList}\r\n                                                                                                value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] !== undefined ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\" : \"\"}\r\n                                                                                                defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\"}\r\n                                                                                                isMandatory={true}\r\n                                                                                                 isMulti={false}\r\n                                                                                                isSearchable={true}\r\n                                                                                                // isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                                 closeMenuOnSelect={true}\r\n                                                                                                 alphabeticalSort={true}\r\n                                                                                                 onChange={(event) => this.onComboChange(event, 'nsectioncode', 1)}\r\n                                                                                                    />\r\n                                                                                    }\r\n                                                                                     </Col>\r\n                                                                                    \r\n                                                                                            <Col md={3} className='pb-4'>\r\n                                                                                                {this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }) && \r\n                                                                                                this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" }) && \t// ALPD-4053 (15-05-2024) Added this condition for issue in delete sample popup\r\n                                                                                                this.props.Login.isEditPopup !==true &&\r\n                                                                                                        <FormSelectSearch\r\n                                                                                                    name={\"nreporttemplatecode\"}\r\n                                                                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" })}\r\n                                                                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                                    options={this.props.Login.masterData.reportTemplateList || []}\r\n                                                                                                    value={this.state.selectedRecord[\"nreporttemplatecode\"] || \"\"}\r\n                                                                                                    isMandatory={true}\r\n                                                                                                    isMulti={false}\r\n                                                                                                    isClearable={false}\r\n                                                                                                    isSearchable={true}\r\n                                                                                                    // isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                                                    closeMenuOnSelect={true}\r\n                                                                                                    onChange={(event) => this.onComboChange(event, \"nreporttemplatecode\")}\r\n                                                                                                />\r\n                                                                                            }\r\n                                                                                            </Col>\r\n                                                                                            <Col md={3} className='pb-4'></Col>\r\n                                                                                            <Col md={3} className='pb-4'>\r\n                                                                                            {this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }) &&\r\n                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" }) &&\t// ALPD-4053 (15-05-2024) Added this condition for issue in delete sample popup\r\n                                                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nneedreleaseformattoggle\r\n                                                                                            && this.props.Login.masterData.realReportTypeValue.nneedreleaseformattoggle === transactionStatus.YES) &&\r\n                                                                                                <CustomSwitch\r\n                                                                                                    name={'nisarnowiserelease'}\r\n                                                                                                    type=\"switch\"\r\n                                                                                                    label={(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease\r\n                                                                                                        && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES) ? this.props.intl.formatMessage({ id: \"IDS_ENABLEFORMULTISAMPLERELEASE\" }) \r\n                                                                                                        : this.props.intl.formatMessage({ id: \"IDS_ENABLEFORSINGLESAMPLERELEASE\" })}\r\n                                                                                                    placeholder={(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease\r\n                                                                                                        && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES) ? this.props.intl.formatMessage({ id: \"IDS_ENABLEFORMULTISAMPLERELEASE\" }) \r\n                                                                                                        : this.props.intl.formatMessage({ id: \"IDS_ENABLEFORSINGLESAMPLERELEASE\" })}                            \r\n                                                                                                    isMandatory={false}                       \r\n                                                                                                    required={false}                                   \r\n                                                                                                    onChange={(event)=> this.onInputOnChange(event)}\r\n                                                                                                    // defaultValue ={props.selectedRecord[item.controlName] === 3 ? true :false }\r\n                                                                                                    checked={this.state.selectedRecord ? this.state.selectedRecord[\"nisarnowiserelease\"] === 3 ? true : false : false}\r\n                                                                                                />\r\n                                                                                            }\r\n                                                                                            </Col>\r\n                                                                                        </Row>\r\n                                                                                        {/* <FilterQueryBuilder\r\n                                                                                        fields={this.props.Login.fields || {}}\r\n                                                                                        onChange={this.onComboChangeAwesomeQueryBuilder}\r\n                                                                                        tree={this.props.Login.awesomeTree}\r\n                                                                                        config={this.props.Login.awesomeConfig}\r\n                                                                                        skip={this.props.Login.kendoSkip}\r\n                                                                                        take={this.props.Login.kendoTake}\r\n                                                                                        handlePageChange={this.handlePageChange}\r\n                                                                                        gridColumns={[]}\r\n                                                                                        filterData={this.props.Login.lstPatient || []}\r\n                                                                                        //onRowClick={this.handleKendoRowClick}\r\n                                                                                        //handleExecuteClick={this.handleExecuteClick}\r\n                                                                                        userInfo={this.props.Login.userInfo}\r\n                                                                                        static={true}\r\n                                                                                    /> */}\r\n                                                                                      \r\n                                                                                      {/* <Col md={3}>\r\n                                                                                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleExecuteClicks()}>\r\n                                                                                            <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' />\r\n                                                                                        </Button>\r\n                                                                                        </Col> */}\r\n                                                                                        </>\r\n                                                                                        // <Col md={4}>\r\n                                                                                        //     <FormSelectSearch\r\n                                                                                        //         name={\"nprojecttypecode\"}\r\n                                                                                        //         formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                                                        //         placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                        //         options={this.props.Login.ProjectTypeList}\r\n                                                                                        //         value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                                                        //         defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                                                        //         isMandatory={true}\r\n                                                                                        //         isMulti={false}\r\n                                                                                        //         isSearchable={true}\r\n                                                                                        //         //  isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                        //         closeMenuOnSelect={true}\r\n                                                                                        //         alphabeticalSort={true}\r\n                                                                                        //         onChange={(event) => this.onComboChange(event, 'nprojecttypecode', 1)}\r\n                                                                                        //     />\r\n                                                                                        // </Col>\r\n                                                                                    }\r\n                                                                                    {/* {(this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                        // this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\r\n                                                                                        // (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                        this.props.Login.masterData.realReportTypeValue\r\n                                                                                        && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                            this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                        this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\r\n                                                                                        this.props.Login.isDeletePopup !== true &&\r\n                                                                                        this.props.Login.isComboCheck !== true &&\r\n                                                                                        this.props.Login.isEditPopup !== true &&\r\n                                                                                        this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) &&\r\n\r\n                                                                                        // <Col md={4}>\r\n                                                                                        //     <FormSelectSearch\r\n                                                                                        //         name={\"nprojectmastercode\"}\r\n                                                                                        //         formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                                                                                        //         placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                        //         options={this.props.Login.projectMasterList}\r\n                                                                                        //         value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] !== undefined ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\" : \"\"}\r\n                                                                                        //         defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\"}\r\n                                                                                        //         isMandatory={true}\r\n                                                                                        //         isMulti={false}\r\n                                                                                        //         isSearchable={true}\r\n                                                                                        //         // isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                        //         closeMenuOnSelect={true}\r\n                                                                                        //         alphabeticalSort={true}\r\n                                                                                        //         onChange={(event) => this.onComboChange(event, 'nprojectmastercode', 1)}\r\n                                                                                        //     />\r\n                                                                                        // </Col>\r\n                                                                                    } */}\r\n                                                                                    {/* { (this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                        this.props.Login.masterData.realReportTypeValue &&\r\n                                                                                        (this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                            this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\r\n                                                                                        this.props.Login.isDeletePopup !== true &&\r\n                                                                                        this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true &&\r\n                                                                                         <Col md={4}>\r\n                                                                                             <FormSelectSearch\r\n                                                                                                name={\"nsectioncode\"}\r\n                                                                                                 formLabel={this.props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                                                                                                 placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                                 options={this.props.Login.sectionList}\r\n                                                                                                value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] !== undefined ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\" : \"\"}\r\n                                                                                                defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\"}\r\n                                                                                                isMandatory={true}\r\n                                                                                                 isMulti={false}\r\n                                                                                                isSearchable={true}\r\n                                                                                                // isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                                 closeMenuOnSelect={true}\r\n                                                                                                 alphabeticalSort={true}\r\n                                                                                                 onChange={(event) => this.onComboChange(event, 'nsectioncode', 1)}\r\n                                                                                            />\r\n                                                                                     </Col>\r\n                                                                                    } */}\r\n                                                                                 <Row>\r\n\r\n\r\n                                                                                    {this.props.Login.ReportmodalShow ? (\r\n                                                                                        <ModalShow\r\n                                                                                            modalShow={this.props.Login.ReportmodalShow}\r\n                                                                                            closeModal={this.closeModalShow}\r\n                                                                                            onSaveClick={this.onSaveModalClick}\r\n                                                                                            validateEsign={this.validateEsign}\r\n                                                                                            masterStatus={this.props.Login.masterStatus}\r\n                                                                                            //  mandatoryFields={mandatoryFields}\r\n                                                                                            updateStore={this.props.updateStore}\r\n                                                                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                                                                            modalTitle={this.props.Login.modalTitle}\r\n                                                                                            modalBody={\r\n                                                                                                this.props.Login.loadEsign ?\r\n                                                                                                    <Esign\r\n                                                                                                        operation={this.props.Login.operation}\r\n                                                                                                        onInputOnChange={this.onEsignInputOnChange}\r\n                                                                                                        inputParam={this.props.Login.inputParam}\r\n                                                                                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                                                                                    /> :\r\n\r\n\r\n                                                                                                    <Col md={12}>\r\n\r\n                                                                                                        <FormTextarea\r\n                                                                                                            label={this.props.intl.formatMessage({ id: this.props.Login.masterData.selectedComment.sreportfieldname })}\r\n                                                                                                            name={\"sreportfieldvalue\"}\r\n                                                                                                            type=\"text\"\r\n                                                                                                            onChange={this.onInputChange}\r\n                                                                                                            placeholder={this.props.intl.formatMessage({ id: this.props.Login.masterData.selectedComment.sreportfieldname })}\r\n                                                                                                            value={this.state.selectedComment ? this.state.selectedComment.sreportfieldvalue : \"\"}\r\n                                                                                                            isMandatory={true}\r\n                                                                                                            required={true}\r\n                                                                                                            maxLength={\"500\"}\r\n                                                                                                        />\r\n                                                                                                    </Col>\r\n\r\n                                                                                            }\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        \"\"\r\n                                                                                    )}\r\n\r\n                                                                                </Row>\r\n\r\n                                                                                {this.props.Login.isCorrectionNeed && this.props.Login.isCorrectionNeed ?\r\n                                                                                    <DataGrid\r\n                                                                                        primaryKeyField={\"ntransactionresultcode\"}\r\n                                                                                        selectedId={this.props.Login.selectedId}\r\n                                                                                        data={this.props.Login.masterData.ResultCorrection}\r\n                                                                                        dataResult={process(this.props.Login.masterData.ResultCorrection && this.props.Login.masterData.ResultCorrection || [], this.state.correctionDataState)}\r\n                                                                                        dataState={this.state.correctionDataState}\r\n                                                                                        dataStateChange={this.correctionDataStateChange}\r\n                                                                                        extractedColumnList={resultCorrectionColumnList}\r\n                                                                                        controlMap={this.state.controlMap}\r\n                                                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                        inputParam={this.props.Login.inputParam}\r\n                                                                                        methodUrl={\"Result\"}\r\n                                                                                        userInfo={this.props.Login.userInfo}\r\n                                                                                        fetchRecord={this.props.fetchParameterById}\r\n                                                                                        deleteRecord={this.deleteRecord}\r\n                                                                                        //  reloadData={this.reloadData}\r\n                                                                                        //  addRecord={() => this.props.openProductCategoryModal(\"IDS_PRODUCTCATEGORY\", addId,this.props.Login.settings)}\r\n                                                                                        editParam={editParam}\r\n                                                                                        //  deleteParam={deleteParam}\r\n                                                                                        scrollable={'scrollable'}\r\n                                                                                        gridHeight={'600px'}\r\n                                                                                        isActionRequired={true}\r\n                                                                                        //  isToolBarRequired={true}\r\n                                                                                        pageable={true}\r\n                                                                                    /> :\r\n                                                                                    (this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENT\" && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" ?\r\n                                                                                        <DataGridWithMultipleGrid\r\n                                                                                            needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                                                            data={this.state.data}\r\n                                                                                            dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                                                                            dataState={this.state.dataState}\r\n                                                                                            dataStateChange={this.dataStateChange}\r\n                                                                                            expandNextData={this.expandNextData}\r\n                                                                                            checkFunction={this.checkFunction}\r\n                                                                                            checkFunction1={this.checkFunction1}\r\n                                                                                            expandFunc={this.expandFunc}\r\n                                                                                            childDataResult={this.state.childDataResult}\r\n                                                                                            subChildDataResult={this.state.subChildDataResult}\r\n                                                                                            extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                            subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n                                                                                            expandField=\"expanded\"\r\n                                                                                            handleExpandChange={this.handleExpandChange}\r\n                                                                                            childHandleExpandChange={this.childHandleExpandChange}\r\n                                                                                            isCheckBoxRequired={true}\r\n                                                                                            reloadData={this.reloadData}\r\n                                                                                            controlMap={this.state.controlMap}\r\n                                                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                            inputParam={this.props.Login.inputParam}\r\n                                                                                            userInfo={this.props.Login.userInfo}\r\n                                                                                            pageable={true}\r\n                                                                                            scrollable={'scrollable'}\r\n                                                                                            gridHeight={'600px'}\r\n                                                                                            gridTop={'10px'}\r\n                                                                                            // isActionRequired={true}\r\n                                                                                            //   isToolBarRequired={true}\r\n                                                                                            //  isExpandRequired={true}\r\n                                                                                            //   isDownloadRequired={true}\r\n                                                                                            isCollapseRequired={true}\r\n                                                                                            selectedId={this.props.Login.selectedId}\r\n                                                                                            hasChild={true}\r\n                                                                                            hasSubChild={true}\r\n                                                                                            childList={\r\n                                                                                                this.props.Login.masterData.searchedData2 ||\r\n                                                                                                this.props.Login.masterData.ReleaseSubSample\r\n                                                                                            }\r\n                                                                                            childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                                                            childMappingField={\"npreregno\"}\r\n                                                                                            subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                                                            subChildList={\r\n                                                                                                this.props.Login.masterData.searchedData3 ||\r\n                                                                                                this.props.Login.masterData.ReleaseTest\r\n                                                                                            }\r\n                                                                                            selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                                                            methodUrl={\"Release\"}\r\n                                                                                            headerSelectionChange={this.headerSelectionChange}\r\n                                                                                            childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                                                            childSelectAll={this.props.Login.childSelectAll}\r\n                                                                                            childSelectionChange={this.childSelectionChange}\r\n                                                                                            subChildSelectionChange={this.subChildSelectionChange}\r\n                                                                                            subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                                                            subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                                                                            selectionChange={this.selectionChange}\r\n                                                                                            selectAll={this.props.Login.selectAll}\r\n                                                                                            releaseRecord={this.onSaveModalClick}\r\n                                                                                        // viewDownloadFile={this.viewDownloadFile}\r\n                                                                                        />\r\n                                                                                        :\r\n                                                                                        this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ?\r\n                                                                                            <DataGrid\r\n                                                                                                key=\"reportinforeleasecode\"\r\n                                                                                                primaryKeyField=\"nreportinforeleasecode\"\r\n                                                                                                data={this.props.Login.masterData.reportinforelease || []}\r\n                                                                                                dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState)}\r\n                                                                                                dataState={this.state.reportInfoDataState}\r\n                                                                                                //dataResult={this.props.selectedWorklist || []}\r\n                                                                                                //expandField=\"expanded\"\r\n                                                                                                isExportExcelRequired={false}\r\n                                                                                                //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                                                                                                controlMap={this.state.controlMap}\r\n                                                                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                                extractedColumnList={this.feildsForGrid}\r\n                                                                                                detailedFieldList={this.props.detailedFieldList}\r\n                                                                                                editParam={editParam}\r\n                                                                                                fetchRecord={this.props.fetchReportInfoReleaseById}\r\n                                                                                                pageable={true}\r\n                                                                                                dataStateChange={this.reportInfoDataChange}\r\n                                                                                                scrollable={'scrollable'}\r\n                                                                                                gridHeight={'630px'}\r\n                                                                                                isActionRequired={true}\r\n                                                                                                methodUrl={'ReportComment'}\r\n                                                                                            >\r\n                                                                                            </DataGrid> :\r\n                                                                                            //     <DataGridWithMultipleGrid\r\n                                                                                            //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                                                            //     data={this.state.data}\r\n                                                                                            //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                                                                            //     dataState={this.state.dataState}\r\n                                                                                            //     dataStateChange={this.dataStateChange}\r\n                                                                                            //     expandNextData={this.expandNextData}\r\n                                                                                            //     checkFunction={this.checkFunction}\r\n                                                                                            //     checkFunction1={this.checkFunction1}\r\n                                                                                            //     expandFunc={this.expandFunc}\r\n                                                                                            //     childDataResult={this.state.childDataResult}\r\n                                                                                            //     subChildDataResult={this.state.subChildDataResult}\r\n                                                                                            //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                            //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                                                                            //     expandField=\"expanded\"\r\n                                                                                            //     handleExpandChange={this.handleExpandChange}\r\n                                                                                            //     childHandleExpandChange={this.childHandleExpandChange}\r\n                                                                                            //     isCheckBoxRequired={true}\r\n\r\n                                                                                            //     reloadData={this.reloadData}\r\n                                                                                            //     controlMap={this.state.controlMap}\r\n                                                                                            //     userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                            //     inputParam={this.props.Login.inputParam}\r\n                                                                                            //     userInfo={this.props.Login.userInfo}\r\n                                                                                            //     pageable={true}\r\n                                                                                            //     scrollable={'scrollable'}\r\n                                                                                            //     gridHeight={'600px'}\r\n                                                                                            //     gridTop={'10px'}\r\n                                                                                            //    // isActionRequired={true}\r\n                                                                                            //     //   isToolBarRequired={true}\r\n                                                                                            //     //  isExpandRequired={true}\r\n                                                                                            //     //   isDownloadRequired={true}\r\n                                                                                            //     isCollapseRequired={true}\r\n\r\n                                                                                            //     selectedId={this.props.Login.selectedId}\r\n                                                                                            //     hasChild={true}\r\n                                                                                            //     hasSubChild={true}\r\n                                                                                            //     childList={\r\n                                                                                            //         this.props.Login.masterData.searchedData2 ||\r\n                                                                                            //         this.props.Login.masterData.ReleaseSubSample\r\n                                                                                            //     }\r\n                                                                                            //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                                                            //     childMappingField={\"npreregno\"}\r\n                                                                                            //     subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                                                            //     subChildList={\r\n                                                                                            //         this.props.Login.masterData.searchedData3 ||\r\n                                                                                            //         this.props.Login.masterData.ReleaseTest\r\n                                                                                            //     }\r\n                                                                                            //     selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                                                            //     methodUrl={\"Release\"}\r\n                                                                                            //     headerSelectionChange={this.headerSelectionChange}\r\n                                                                                            //     childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                                                            //     childSelectAll={this.props.Login.childSelectAll}\r\n                                                                                            //     childSelectionChange={this.childSelectionChange}\r\n                                                                                            //     subChildSelectionChange={this.subChildSelectionChange}\r\n                                                                                            //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                                                            //     subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                                                                            //     selectionChange={this.selectionChange}\r\n                                                                                            //     selectAll={this.props.Login.selectAll}\r\n                                                                                            //     releaseRecord={this.onSaveModalClick}\r\n                                                                                            //    // viewDownloadFile={this.viewDownloadFile}\r\n                                                                                            // />\r\n                                                                                            \"\"\r\n                                                                                }\r\n\r\n                                                                                {/* {this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ?\r\n                      <DataGrid \r\n                            key=\"reportinforeleasecode\"\r\n                            primaryKeyField=\"nreportinforeleasecode\"\r\n                            data={this.props.Login.masterData.reportinforelease || []}\r\n                            dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.dataState)}\r\n                            dataState={this.state.dataState}\r\n                            //dataResult={this.props.selectedWorklist || []}\r\n                            //expandField=\"expanded\"\r\n                            isExportExcelRequired = {false}\r\n                            //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                            controlMap={this.state.controlMap}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            extractedColumnList={this.feildsForGrid}\r\n                            detailedFieldList={this.props.detailedFieldList}\r\n                            editParam={editParam}   \r\n                            fetchRecord={this.props.fetchReportInfoReleaseById}                         \r\n                            pageable={true}\r\n                            dataStateChange={this.dataStateChange}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'630px'}\r\n                             isActionRequired={true}\r\n                            methodUrl={'ReportComment'}\r\n                        >\r\n                        </DataGrid>:\r\n                    //     <DataGridWithMultipleGrid\r\n                    //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                    //     data={this.state.data}\r\n                    //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                    //     dataState={this.state.dataState}\r\n                    //     dataStateChange={this.dataStateChange}\r\n                    //     expandNextData={this.expandNextData}\r\n                    //     checkFunction={this.checkFunction}\r\n                    //     checkFunction1={this.checkFunction1}\r\n                    //     expandFunc={this.expandFunc}\r\n                    //     childDataResult={this.state.childDataResult}\r\n                    //     subChildDataResult={this.state.subChildDataResult}\r\n                    //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                    //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                    //     expandField=\"expanded\"\r\n                    //     handleExpandChange={this.handleExpandChange}\r\n                    //     childHandleExpandChange={this.childHandleExpandChange}\r\n                    //     isCheckBoxRequired={true}\r\n\r\n                    //     reloadData={this.reloadData}\r\n                    //     controlMap={this.state.controlMap}\r\n                    //     userRoleControlRights={this.state.userRoleControlRights}\r\n                    //     inputParam={this.props.Login.inputParam}\r\n                    //     userInfo={this.props.Login.userInfo}\r\n                    //     pageable={true}\r\n                    //     scrollable={'scrollable'}\r\n                    //     gridHeight={'600px'}\r\n                    //     gridTop={'10px'}\r\n                    //    // isActionRequired={true}\r\n                    //     //   isToolBarRequired={true}\r\n                    //     //  isExpandRequired={true}\r\n                    //     //   isDownloadRequired={true}\r\n                    //     isCollapseRequired={true}\r\n\r\n                    //     selectedId={this.props.Login.selectedId}\r\n                    //     hasChild={true}\r\n                    //     hasSubChild={true}\r\n                    //     childList={\r\n                    //         this.props.Login.masterData.searchedData2 ||\r\n                    //         this.props.Login.masterData.ReleaseSubSample\r\n                    //     }\r\n                    //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                    //     childMappingField={\"npreregno\"}\r\n                    //     subChildMappingField={\"ntransactionsamplecode\"}\r\n                    //     subChildList={\r\n                    //         this.props.Login.masterData.searchedData3 ||\r\n                    //         this.props.Login.masterData.ReleaseTest\r\n                    //     }\r\n                    //     selectedsubcild={this.props.Login.selectedsubcild}\r\n                    //     methodUrl={\"Release\"}\r\n                    //     headerSelectionChange={this.headerSelectionChange}\r\n                    //     childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                    //     childSelectAll={this.props.Login.childSelectAll}\r\n                    //     childSelectionChange={this.childSelectionChange}\r\n                    //     subChildSelectionChange={this.subChildSelectionChange}\r\n                    //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                    //     subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                    //     selectionChange={this.selectionChange}\r\n                    //     selectAll={this.props.Login.selectAll}\r\n                    //     releaseRecord={this.onSaveModalClick}\r\n                    //    // viewDownloadFile={this.viewDownloadFile}\r\n                    // />\r\n                    \"\"\r\n                        } */}\r\n                                                                            </>\r\n                        }\r\n                    />\r\n                }\r\n                {this.props.Login.modalShow ? (\r\n                    <ModalShow\r\n                        modalShow={this.props.Login.modalShow}\r\n                        closeModal={this.closeModalShow}\r\n                        onSaveClick={this.onSaveModalResultClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        //  mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        modalTitle={this.props.Login.modalTitle}\r\n                        modalBody={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onEsignInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                /> :\r\n                                this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" }) ? \r\n                                <FormSelectSearch\r\n                                    name={\"nreporttemplatecode\"}\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    options={this.props.Login.masterData.reportTemplateList || []}\r\n                                    value={this.state.selectedRecord[\"nreporttemplatecode\"] || \"\"}\r\n                                    isMandatory={true}\r\n                                    isMulti={false}\r\n                                    isClearable={false}\r\n                                    isSearchable={true}\r\n                                    // isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.onComboChange(event, \"nreporttemplatecode\")}\r\n                                />\r\n                                :\r\n                                this.state.selectedRecord.ReleaseParameter &&\r\n                                this.state.selectedRecord.ReleaseParameter.map((parameterResult, index) => {\r\n                                    return <ResultEntryForm\r\n                                        index={index}\r\n                                        ResultParameter={[...this.state.selectedRecord.ReleaseParameter]}\r\n                                        predefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                        defaultPredefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                        gradeValues={this.props.Login.masterData.GradeValues || []}\r\n                                        selectedNumericData={this.props.Login.masterData.selectedNumericData}\r\n                                        selectedResultGrade={this.state.selectedRecord.selectedResultGrade || []}\r\n                                        paremterResultcode={this.props.Login.masterData.paremterResultcode || []}\r\n                                        parameterResults={parameterResult\r\n                                            || []}\r\n                                        Login={this.props.Login}\r\n                                        handleClose={this.handleClose}\r\n                                        onSaveClick={this.onSaveClick}\r\n                                        onResultInputChange={this.onResultInputChange}\r\n                                        //onGradeEvent={this.onGradeEvent}\r\n                                        getFormula={this.getFormula}\r\n                                        onDropTestFile={this.onDropTestFile}\r\n                                        onKeyPress={this.onKeyPress}\r\n                                        //deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\r\n                                        viewAdditionalInfo={this.viewAdditionalInfo}\r\n                                        needSubSample={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                                        needdelete={true}\r\n                                        needmandatory={true}\r\n                                        ResultAccuracy={this.props.Login.masterData.ResultAccuracy || []}\r\n                                        Unit={this.props.Login.masterData.Unit || []}\r\n                                        formFields={this.props.Login.masterData.formFields||[]}\r\n                                    //intl={this.props.intl}\r\n                                    />\r\n                                })\r\n                        }\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n            </>\r\n        );\r\n    }\r\n    onKeyPress = (event, index, paremterResultcode) => {\r\n        if (event.keyCode === 13) {\r\n            for (let i = 0; i < event.target.form.elements.length; i++) {\r\n                if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\r\n                    event.target.form.elements[i].focus();\r\n                    break;\r\n                }\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    onResultInputChange = (parameterResults) => {\r\n        this.setState({\r\n            parameterResults: [...parameterResults],\r\n            isParameterInitialRender: false\r\n            // currentAlertResultCode,\r\n            //  currentntestgrouptestpredefcode\r\n        });\r\n    }\r\n    fields = () => {\r\n\r\n    }\r\n    queryBuilderfillingColumns(data) {\r\n\r\n       // const temparray1 = [\r\n            //(this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n            //this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\r\n            ////{ \"idsName\": \"IDS_SECTION\", \"dataField\": \"s.nsectioncode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" },\r\n           // { \"idsName\": \"IDS_TEST\", \"dataField\": \"rt.ntestgrouptestcode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" }];\r\n        const temparray2 = data && data.map((option) => {\r\n            return {\r\n                \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\r\n                \"dataField\":option[designProperties.RECORDTYPE]==='static'?\"(jsondata->>'\"+option[designProperties.PRIMARYKEY]+\"')::int\":\r\n                 option[designProperties.LISTITEM]==='combo'?\r\n                  \"(jsondata->'\"+option[designProperties.VALUE]+\"'->>'\"+option[designProperties.PRIMARYKEY]+\"')::int\" :\r\n                   option[designProperties.LISTITEM]==='Numeric'?\r\n                   \"(jsondata->>'\"+option[designProperties.VALUE]+\"')::int\":\r\n                   \"(jsondata->>'\"+option[designProperties.VALUE]+\"')\", \"width\": \"200px\", \"filterinputtype\": option[designProperties.LISTITEM]\r\n            };\r\n        });\r\n        const newArray = [ ...temparray2]\r\n        return newArray;\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n        if (fieldName === 'nprojecttypecode') {\r\n            const inputParamData = {\r\n\r\n                nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                nprojecttypecode: comboData.value,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n            }\r\n            this.props.getApprovedProjectByProjectType(inputParamData)\r\n        }\r\n        if (fieldName === 'nprojectmastercode') {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            //let realFromDate = obj.fromDate;\r\n            //let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, //realFromDate, realToDate, \r\n                realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nprojectmastercode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n                // ModalStatusValue: true,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n\r\n            let selectedRecord = { ...this.props.Login.selectedRecord }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData,\r\n                    selectedRecord\r\n\r\n                }\r\n                if (inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || inputData.isneedsection === transactionStatus.YES) {\r\n                    this.props.getSectionForSectionWise(inputParam)\r\n                }\r\n                else {\r\n                    this.props.getReleasedSample(inputParam,this.state.selectedRecord,this.props.Login.selectedRecord,this.props.Login)\r\n                }\r\n            }\r\n        }\r\n        if (fieldName === 'nsectioncode') {\r\n            let filterquery = this.props.Login && this.props.Login.filterquery || undefined;\r\n            if (filterquery !== undefined) {\r\n                let val = removeSpaceFromFirst(filterquery, '')\r\n                let matchs = val && val.match(/''/g);\r\n                filterquery =  matchs!==null && matchs!==undefined && matchs && matchs.length > 1 ? val : val && val.replaceAll(/'/g, \"''\") ;\r\n            }\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let realFromDate = obj.fromDate;\r\n            let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nsectioncode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\r\n                // ModalStatusValue: true,\r\n                screenName: this.props.Login.screenName,\r\n                filterquery: filterquery,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                isSectionCombo:true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData\r\n                }\r\n\r\n                this.props.getReleasedSample(inputParam,this.state.selectedRecord,this.props.Login.selectedRecord,this.props.Login)\r\n            }\r\n        }\r\n    }\r\n    handleExecuteClicks=(isClear)=>{\r\n        const filterquery = this.props.Login.filterquery;\r\n        const filterQueryTreeStr=this.props.Login.filterQueryTreeStr;\r\n        let isMandatory=this.checkMandatoryFilter(filterQueryTreeStr,this.props.Login.awesomeConfig);\r\n        if(isMandatory){\r\n        let isFilterEmpty = checkFilterIsEmptyQueryBuilder(filterQueryTreeStr);\r\n        if(isFilterEmpty){\r\n        let val = removeSpaceFromFirst(filterquery, '')\r\n        let matchs=val && val.match(/''/g)\r\n       // if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n        }\r\n        // ALPD-4091 (16-05-2024) Changed SampleTypeValue to realSampleTypeValue\r\n        // ALPD-4091 (16-05-2024) Changed RegTypeValue to realRegTypeValue\r\n        // ALPD-4091 (16-05-2024) Changed RegSubTypeValue to realRegSubTypeValue\r\n        // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n        // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n        // ALPD-4091 (16-05-2024) Changed TestValue to realTestValue\r\n        // ALPD-4091 (16-05-2024) Changed DesignTemplateMappingValue to realDesignTemplateMappingValue\r\n\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ncoareporttypecode: 1,//parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            nsectioncode: this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue.isneedsection===transactionStatus.YES?this.props.Login.isEditPopup===true?(this.props.Login.masterData&&this.props.Login.masterData.reportSectionCode):this.props.Login.selectedRecord && this.props.Login.selectedRecord.nsectioncode?this.props.Login.selectedRecord.nsectioncode.value:-1:-1,\r\n            napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\r\n            // ModalStatusValue: true,\r\n            isPopup: true,\r\n            isAddPopup: true,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            filterquery: !isClear ? matchs && matchs.length>1 ? val: val && val.replaceAll(/'/g, \"''\"):undefined,\r\n            screenName:this.props.Login.screenNameCopy,\r\n            isClear:isClear,\r\n            awesomeTree:this.props.Login.awesomeTree\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData\r\n            }\r\n\r\n            this.props.getReleasedSample(inputParam,this.state.selectedRecord,this.props.Login.selectedRecord,this.props.Login)\r\n        }\r\n    // } else {\r\n    //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\r\n    // }\r\n              }else{\r\n    toast.warn(this.props.intl.formatMessage({ id: \"IDS_PROVIDEVALUESFORINPUTS\" }));\r\n            }\r\n        }else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CONFIGUREMANDATORYFIELDS\" }));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    checkMandatoryFilter =(treeData,config)=> {\r\n        let ParentItem = { ...treeData };\r\n        let mandatoryList=[];\r\n        let treeDateList=[];\r\n        let isFilterEmpty=false;\r\n            let childArray = ParentItem.children1;\r\n            this.state.DynamicReportFilterTypeItem.map(x=>{\r\n                if( x['ismandatory']){\r\n                mandatoryList.push(x);\r\n                }\r\n            if (childArray && childArray.length > 0 && childArray !== undefined) {\r\n                for (var i = 0; i < childArray.length; i++) {\r\n                    let childData = childArray[i]\r\n                    if (!childData.hasOwnProperty('children1')) {\r\n                       if(config && config.fields[childData.properties.field]['label']===x[designProperties.VALUE] && x['ismandatory']){\r\n                        isFilterEmpty=true;\r\n                        treeDateList.push(childData.properties.field);\r\n                       }\r\n                    } else {\r\n                        if (childData) {\r\n                            ParentItem = checkFilterIsEmptyQueryBuilder(childData)\r\n                            if(!ParentItem){\r\n                                return ParentItem;\r\n                            }\r\n                        } \r\n                    }\r\n                }\r\n            }\r\n        })\r\n        let uniqueSet = new Set(treeDateList);\r\n        let uniqueArray = Array.from(uniqueSet);\r\n        if(uniqueArray.length !== mandatoryList.length){\r\n            isFilterEmpty=false;\r\n        }\r\n        if(mandatoryList.length === 0){\r\n            isFilterEmpty=true;\r\n        }\r\n            return isFilterEmpty;\r\n      }\r\n\r\n\r\n    openFilterQuery=()=>{\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal:true,FilterQueryBuilder:true,screenName:\"IDS_SAMPLEFILTER\",screenNameCopy:this.props.Login.screenNameCopy\r\n      },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let closeModal = true;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let ReportmodalShow = this.props.Login.ReportmodalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedComment = this.props.Login.masterData.selectedComment;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            ReportmodalShow = false;\r\n            selectedRecord = {};\r\n            selectedComment = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign, closeModal, selectedComment, ReportmodalShow },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    generatereport = (generateid) => {\r\n        // if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.DRAFT){\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    \r\n            const inputParam = {\r\n                inputData: {\r\n                    syncaction:\"ManualSyncreport\",\r\n                    userInfo: this.props.Login.userInfo\r\n                },\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_GENERATE\" })\r\n    \r\n            }\r\n            this.props.generatereport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n        //   }else{\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n        //    }\r\n        }\r\n\r\n\r\n\r\n    downloadHistory = (downloadReportId) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED) {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n                const inputParam = {\r\n                    inputData: {\r\n                        // change: this.props.Login.change,\r\n                        // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                        //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                        //ncoareporthistorycode:filedata.inputData.ncoareporthistorycode,\r\n                        //ntransactionstatus: String(transactionStatus.RELEASED),\r\n                        //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                        // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        action: \"Download\",\r\n                        doAction: \"preview\",\r\n                        // ALPD-4091 (16-05-2024) Changed DesignTemplateMappingValue to realDesignTemplateMappingValue\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                        //openModal:true,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        ncontrolCode: downloadReportId\r\n                    },\r\n                    screenName: this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })\r\n\r\n                }\r\n                this.props.downloadHistory(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    previewReport = (previewId) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED) {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                const inputParam = {\r\n                    // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                    // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                    // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                    inputData: {\r\n                        nflag: 2,\r\n                        change: this.props.Login.change,\r\n                        ncontrolcode: previewId,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                        ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                        url: this.props.Login.settings[24],\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                        nreporttypecode: REPORTTYPE.COAPREVIEW,\r\n                        sprimarykeyname: \"npreregno\",\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        action: 'DOWNLOADFILE',\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                        doAction: \"download\",\r\n                        nprojectcode: (this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode) || -1,\r\n                        reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                        isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                        generateReport:this.props.Login.settings[64] &&  parseInt(this.props.Login.settings[64])===transactionStatus.YES ? true:false,  \r\n                  \r\n                        newTabReport:this.props.Login.settings[70] &&  parseInt(this.props.Login.settings[70])===transactionStatus.YES ? true:false,  //Added by sonia on 18-08-2024 for JIRA ID:4716                         //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\r\n                        reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\r\n                        auditAction:\"preview\"\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })\r\n                }\r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openModal: true,\r\n                            modalShow: false,\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            screenName: inputParam.screenName,\r\n                            ncontrolcode: previewId,\r\n                            operation: \"download\"\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_FINALREPORTGEN\" }));\r\n            }\r\n        }\r\n    }\r\n    preliminaryReport = (preliminaryId) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else { \r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.DRAFT || \r\n                this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION) {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                const inputParam = {\r\n                    // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                    // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                    // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n\r\n                    inputData: {\r\n                        nflag: 2,\r\n                        change: this.props.Login.change,\r\n                        ncontrolcode: preliminaryId,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                        ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                        url: this.props.Login.settings[24],\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                        nreporttypecode: REPORTTYPE.COAPRELIMINARY,\r\n                        sprimarykeyname: \"npreregno\",\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        action: 'preliminary',\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                        doAction: \"preliminary\",\r\n                        nprojectcode: (this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode) || -1,\r\n                        reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                        isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\r\n                        ncoaparenttranscode: this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                        isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                        generateReport:this.props.Login.settings[64] &&  parseInt(this.props.Login.settings[64])===transactionStatus.YES ? true:false,  \r\n                  \r\n                        newTabReport:this.props.Login.settings[70] &&  parseInt(this.props.Login.settings[70])===transactionStatus.YES ? true:false,  //Added by sonia on 18-08-2024 for JIRA ID:4716 \r\n                        //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\r\n                        reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\r\n                        auditAction:\"preliminary\"\r\n                        \r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" }),\r\n                    searchRef: this.searchRef   // ALPD-4229 (30-05-2024) Added searchRef to clear search text\r\n                }\r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, preliminaryId)) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openModal: true,\r\n                            modalShow: false,\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            screenName: inputParam.screenName,\r\n                            ncontrolcode: preliminaryId,\r\n                            operation: \"preliminary\"\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.preliminaryReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n                }\r\n            } else {\r\n                let toastAlert = this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORDTO\"})+ \" \"+ (this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? \r\n                    this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                    : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" }));\r\n                toast.warn(toastAlert);\r\n            }\r\n        }\r\n    }\r\n    // previewReport = (previewId) => {\r\n\r\n    //     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //     const inputParam = {\r\n    //         inputData: {\r\n    //             nflag: 2,\r\n    //             change: this.props.Login.change,\r\n    //             ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //             npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //             ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //             url: this.props.Login.settings[24],\r\n    //             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n    //             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //             userinfo: this.props.Login.userInfo,\r\n\r\n    //             nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //             nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //             sprimarykeyname: \"npreregno\",\r\n    //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //             dfrom: obj.fromDate,\r\n    //             dto: obj.toDate,\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             action: 'DOWNLOADFILE',\r\n    //             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //             doAction: \"download\",\r\n\r\n    //         },\r\n    //         userinfo: this.props.Login.userInfo,\r\n    //         screenName: this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })\r\n    //     }\r\n    //     const masterData = this.props.Login.masterData;\r\n    //     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\r\n\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: {\r\n    //                 openModal: true,\r\n    //                 modalShow: false,\r\n    //                 loadEsign: true,\r\n    //                 screenData: { inputParam, masterData },\r\n    //                 screenName: inputParam.screenName,\r\n    //             }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    //     else {\r\n    //         this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n    //                     const updateInfo = {\r\n    //                         typeName: DEFAULT_RETURN,\r\n    //                         data: {\r\n    //                             openModal:true,\r\n    //                             modalShow: false,\r\n    //                             loadEsign: true,\r\n    //                             screenData: { inputParam, masterData },\r\n    //                             screenName: inputParam.screenName,\r\n    //                         }\r\n    //                     }\r\n    //                     this.props.updateStore(updateInfo);\r\n    //                 }\r\n    //                 else {\r\n    //                     this.props.previewAndFinalReport(inputParam, this.props.Login.masterData,inputParam.screenName)\r\n\r\n    //                     const updateInfo = {\r\n    //                         typeName: DEFAULT_RETURN,\r\n    //                         data: {\r\n    //                             openModal:true,\r\n    //                             modalShow: false,\r\n    //                             loadEsign: true,\r\n    //                             screenData: { inputParam, masterData },\r\n    //                             screenName: inputParam.screenName,\r\n    //                             ncontrolcode:previewId\r\n    //                         }\r\n    //                     }\r\n    //                     this.props.updateStore(updateInfo);\r\n    //                 }\r\n    //                 else {\r\n    //                     this.props.previewAndFinalReport(inputParam, this.props.Login.masterData,inputParam.screenName)\r\n\r\n    //     }\r\n    // }\r\n\r\n    downloadReleasedValidation = (downloadId) => {\r\n// ALPD-4118 (15-05-2024) Added code for selection issue when release and edit report template\r\n        const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\");\r\n        let selectedReleaseHistory = [];\r\n        this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && \r\n        this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item));\r\n        // const selectedReleaseHistory = this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.filter(item => item.ncoaparentcode === this.props.Login.masterData.ncoaparentcode) : [];\r\n        const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [] ;\r\n        const versionCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nversionno\"]))] : [] ;\r\n        const reportTemplateCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nreporttemplatecode\"]))] : [] ;\r\n        if(resultArray.length === 1){\r\n            if(reportTemplateCheck.length === 1){\r\n                 if(resultArray[0] === transactionStatus.CORRECTION || (resultArray[0] === transactionStatus.PRELIMINARYRELEASE && (versionCheck.length > 1 || (versionCheck.length === 1 && versionCheck[0] !== -1)))){\r\n                     this.CorrectionComments(downloadId, selectedReleaseHistory);\r\n                 } else {\r\n                    this.downloadReleasedFile(downloadId);\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORDSWITHSAMEREPORTEMPLATE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORDSWITHSAMESTATUS\" }));\r\n        }\r\n    }\r\n\r\n  CorrectionComments = (controlId, selectedReleaseHistory) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData[\"selectedReleaseHistory\"] = selectedReleaseHistory;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadEsign: false,\r\n                screenData: { masterData },\r\n                operation: this.props.Login.operation,\r\n                openModal: true,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }),\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    ReleaseComments = (inputParam) => {\r\n        const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\");\r\n        //let selectedReleaseHistory = [];\r\n       // this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && \r\n        //this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item));\r\n        let masterData = this.props.Login.masterData;\r\n        masterData[\"selectedReleaseHistory\"]=[];\r\n        masterData[\"selectedReleaseHistory\"].push(inputParam[\"createReleaseComment\"])\r\n        //const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [] ;\r\n      //  if(resultArray[0] !== transactionStatus.RELEASED){\r\n        let inputParamData = {\r\n            inputData: {\r\n                ncoaparentcode: inputParam.createReleaseComment.ncoaparentcode,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: {...this.props.Login.masterData},\r\n            selectedRecord: this.state.selectedRecord,\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" })\r\n        }\r\n       this.props.openReleaseComments(inputParamData);\r\n   // }\r\n    // else{\r\n    //  toast.warn(this.props.intl.formatMessage({ id: \"IDS_RELEASEDRECORDNOTALLOWEDTOADDCOMMENT\" }));\r\n    // }\r\n    }\r\n    \r\n    downloadReleasedFile = () => {\r\n// ALPD-4118 (15-05-2024) Added code for selection issue when release and edit report template\r\n        const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\");\r\n        let selectedReleaseHistory = [];\r\n        this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && \r\n        this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item));\r\n\r\n        const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n            // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                ncontrolcode: downloadId,\r\n                ncoaparentcode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.ncoaparentcode).sort().join(\",\") : \"-1\",\r\n                // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                npreregno: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\r\n                // ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactionsamplecode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.stransactionsamplecode).join(\",\") : \"-1\",\r\n                // ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                ntransactiontestcode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.stransactiontestcode).join(\",\") : \"-1\",\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                // ntransactionsamplecode: ntransactionsamplecode,\r\n                //ntransactiontestcode: ntransactiontestcode,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\r\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                nprimarykey: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\r\n                listStatus: selectedReleaseHistory[0].ntransactionstatus,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                // nsectioncode: -1,\r\n                sreportcomments: this.state.selectedRecord && this.state.selectedRecord.sreportcomments ? this.state.selectedRecord.sreportcomments : \"\",\r\n                nversionno: this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno ? this.props.Login.masterData.nversionno : 0,\r\n                action: \"Generatefile\",\r\n                doAction: \"generate\",\r\n                nflag: 2,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode,\r\n                reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\r\n                confirmMessage: this.confirmMessage,\r\n                isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\r\n                ncoaparenttranscode: selectedReleaseHistory[0].ntransactionstatus,\r\n                genericLabel: this.props.Login.genericLabel,\r\n                generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64])===transactionStatus.YES ? true:false,  //Added by sonia on 18-08-2024 for JIRA ID:4716 \r\n                newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70])===transactionStatus.YES ? true:false, //Added by sonia on 18-08-2024 for JIRA ID:4716 \r\n                //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\r\n                reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\r\n                auditAction:\"release\"\r\n            },\r\n            userinfo: this.props.Login.userInfo,\r\n            methodUrl: \"ReleaseAfterCorrection\",\r\n            classUrl: \"release\",\r\n            operation: \"update\",\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })\r\n\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\r\n        //              && this.state.selectedRecord && this.state.selectedRecord.sreportcomments===\"\" || this.state.selectedRecord.sreportcomments===undefined) {\r\n        //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERDESCRIPTION\" }));  \r\n\r\n        // }\r\n        //     else{\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, downloadId)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    ncontrolcode: downloadId,\r\n                    openModal: true,\r\n                    modalShow: false,\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: inputParam.operation,\r\n                    screenName: selectedReleaseHistory.length > 0 && \r\n                    selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION ? this.props.Login.screenName : \r\n                        this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n\r\n        }\r\n        // }\r\n    }\r\n\r\n    reportcomments = () => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            if(this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED\r\n                && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE){\r\n                const inputParam = {\r\n                    // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                    // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                    // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                    inputData: {\r\n                        change: this.props.Login.change,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                        ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                        url: this.props.Login.settings[24],\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        // ntransactionsamplecode: ntransactionsamplecode,\r\n                        //ntransactiontestcode: ntransactiontestcode,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        // nTransStatus: ntransCode,\r\n                        // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                        //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                        //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                        // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                        // ncontrolCode,\r\n                        nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                        nreporttypecode: REPORTTYPE.COAREPORT,\r\n                        sprimarykeyname: \"npreregno\",\r\n                        // nsectioncode: -1,\r\n                        nflag: 2,\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1\r\n                    },\r\n                    userinfo: this.props.Login.userInfo\r\n                }\r\n                this.props.getreportcomments(inputParam.inputData, this.props.Login.masterData)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORDTOEDITREPORTCOMMENTS\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    // regenerateReleasedFile = (action) => {\r\n    regenerateReleasedFile = (regenerateId) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n            const inputParam = {\r\n                // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                inputData: {\r\n                    change: this.props.Login.change,\r\n                    npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                    ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                    sreportno: this.props.Login.masterData.selectedReleaseHistory[0].sreportno,\r\n                    ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\r\n                    ntransactionstatus: String(transactionStatus.RELEASED),\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\r\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                    napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nflag: 2,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    sreportcomments: \"\",\r\n                    nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                    isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                    nreporttypecode: REPORTTYPE.COAREPORT,\r\n                    sprimarykeyname: \"npreregno\",\r\n                    action: \"Regenerate\",\r\n                    doAction: \"download\",\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                    ncontrolcode: regenerateId,\r\n                    nprojectcode: (this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode) || -1,\r\n                    reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                    ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                                && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                    isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                    \r\n                    generateReport:this.props.Login.settings[64] &&  parseInt(this.props.Login.settings[64])===transactionStatus.YES ? true:false,  \r\n                   \r\n                    \r\n                    newTabReport:this.props.Login.settings[70] &&  parseInt(this.props.Login.settings[70])===transactionStatus.YES ? true:false,  //Added by sonia on 18-08-2024 for JIRA ID:4716 \r\n                    //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\r\n                    reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\r\n                    auditAction:\"regenerate\"\r\n                },\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }),\r\n                operation: \"update\"\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, regenerateId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        ncontrolcode: regenerateId,\r\n                        openModal: true,\r\n                        modalShow: false,\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        screenName: inputParam.screenName,\r\n                        operation: inputParam.operation,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n            }\r\n        }\r\n    }\r\n\r\n    CorrectionStatus = (correctionId) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \r\n            const inputParam = {\r\n                // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                inputData: {\r\n                    change: this.props.Login.change,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                    ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                    url: this.props.Login.settings[24],\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    // ntransactionsamplecode: ntransactionsamplecode,\r\n                    //ntransactiontestcode: ntransactiontestcode,\r\n                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                    // nTransStatus: ntransCode,\r\n                    // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                    //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                    //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                    // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                    ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                    // ncontrolCode,\r\n                    nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                    isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                    nreporttypecode: REPORTTYPE.COAREPORT,\r\n                    sprimarykeyname: \"npreregno\",\r\n                    doAction: \"correction\",\r\n                    nflag: 2,\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                    isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\r\n                    genericLabel: this.props.Login.genericLabel\r\n                },\r\n                userinfo: this.props.Login.userInfo,\r\n                methodUrl: \"CorrectionStatus\",\r\n                classUrl: \"release\",\r\n                operation: \"update\",\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        ncontrolcode: correctionId,\r\n                        openModal: true,\r\n                        modalShow: false,\r\n                        loadEsign: true,\r\n                        operation: \"update\",\r\n                        screenData: { inputParam, masterData },\r\n                        screenName: inputParam.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n            }\r\n        }\r\n    }\r\n    //     CorrectionStatus = (correctionId) => {\r\n\r\n    //         let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //         // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \r\n    //         const inputParam = {\r\n    //             inputData: {\r\n    //                 change: this.props.Login.change,\r\n    //                 ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //                 npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //                 ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //                 ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //                 url: this.props.Login.settings[24],\r\n    //                 nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //                 // ntransactionsamplecode: ntransactionsamplecode,\r\n    //                 //ntransactiontestcode: ntransactiontestcode,\r\n\r\n    //                 ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n    //                 // nTransStatus: ntransCode,\r\n    //                 // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n    //                 //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n    //                 //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n    //                 // ntransactionstatus: String(transactionStatus.RELEASED),\r\n    //                 ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //                 nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //                 nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //                 nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //                 nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n    //                 napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //                 nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //                 nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //                 dfrom: obj.fromDate,\r\n    //                 dto: obj.toDate,\r\n    //                 userinfo: this.props.Login.userInfo,\r\n    //                 // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n    //                 // ncontrolCode,\r\n    //                 nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //                 ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //                 nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //                 sprimarykeyname: \"npreregno\",\r\n    //                 doAction: \"correction\",\r\n    //                 nflag: 2,\r\n    //                 ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n    //             },\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             methodUrl: \"CorrectionStatus\",\r\n    //             classUrl: \"release\",\r\n    //             operation: \"update\",\r\n    //             screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n    //         }\r\n    //         const masterData = this.props.Login.masterData;\r\n    //         if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\r\n\r\n    // <<<<<<< .mine\r\n    //             const updateInfo = {\r\n    //                 typeName: DEFAULT_RETURN,\r\n    //                 data: {\r\n    //                     ncontrolcode: correctionId,\r\n    //                     openModal: true,\r\n    //                     modalShow: false,\r\n    //                     loadEsign: true,\r\n    //                     screenData: { inputParam, masterData },\r\n    //                     screenName: inputParam.screenName,\r\n    //                 }\r\n    //             }\r\n    //             this.props.updateStore(updateInfo);\r\n    //         }\r\n    //         else {\r\n    //             this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n    // ||||||| .r76787\r\n    //                         const updateInfo = {\r\n    //                             typeName: DEFAULT_RETURN,\r\n    //                             data: {\r\n    //                                 ncontrolcode:correctionId,\r\n    //                                 openModal:true,\r\n    //                                 modalShow: false,\r\n    //                                 loadEsign: true,\r\n    //                                 screenData: { inputParam, masterData },\r\n    //                                 screenName: inputParam.screenName,\r\n    //                             }\r\n    //                         }\r\n    //                         this.props.updateStore(updateInfo);\r\n    //                     }\r\n    //                     else {\r\n    //                         this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData,inputParam.screenName)\r\n    // =======\r\n    //                         const updateInfo = {\r\n    //                             typeName: DEFAULT_RETURN,\r\n    //                             data: {\r\n    //                                 ncontrolcode:correctionId,\r\n    //                                 openModal:true,\r\n    //                                 modalShow: false,\r\n    //                                 loadEsign: true,\r\n    //                                 operation: \"update\",\r\n    //                                 screenData: { inputParam, masterData },\r\n    //                                 screenName: inputParam.screenName,\r\n    //                             }\r\n    //                         }\r\n    //                         this.props.updateStore(updateInfo);\r\n    //                     }\r\n    //                     else {\r\n    //                         this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData,inputParam.screenName)\r\n    // \r\n\r\n    //         }\r\n\r\n\r\n\r\n    //     }\r\n    onSaveReleaseComments = (saveType, data) => {\r\n            let masterData = this.props.Login.masterData;\r\n            let controlId = this.state.controlMap.has(\"ReportComment\") && this.state.controlMap.get(\"ReportComment\").ncontrolcode;\r\n            let inputParam = {\r\n                inputData: {\r\n                    ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ?\r\n                        this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\r\n                    //nreleasetestcommentcode: this.state.selectedRecord && this.state.selectedRecord.nreleasetestcommentcode || -1,\r\n                    sreleasecomments: this.state.selectedRecord && this.state.selectedRecord.sreleasecomments || \"\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    doAction: \"createReleaseComment\"\r\n                },\r\n                masterData: masterData,\r\n                selectedRecord: this.state.selectedRecord\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlId)) {\r\n    \r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        modalShow: false,\r\n                        openModal: true,\r\n                        ncontrolcode: controlId,\r\n                        screenData: { inputParam, masterData }, \r\n                        saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.SaveReleaseComment(inputParam)\r\n            }\r\n        }\r\n    onSaveModalResultClick = (saveType, data) => {\r\n        if(this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" })){\r\n            let masterData = this.props.Login.masterData;\r\n            let controlId = this.state.controlMap.has(\"EditReportTemplate\") && this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode;\r\n            let inputParam = {\r\n                inputData: {\r\n                    ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ?\r\n                        this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\r\n                    nreporttemplatecode: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode && this.state.selectedRecord.nreporttemplatecode.value,\r\n                    sreporttemplatename: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode && this.state.selectedRecord.nreporttemplatecode.label,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    doAction: \"editReportTemplate\"\r\n                },\r\n                masterData: masterData,\r\n                selectedRecord: this.state.selectedRecord\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlId)) {\r\n    \r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        modalShow: false,\r\n                        openModal: true,\r\n                        ncontrolcode: controlId,\r\n                        screenData: { inputParam, masterData }, \r\n                        saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.SaveReportTemplate(inputParam)\r\n            }\r\n        } else {\r\n            // ALPD-4026 (18-05-2024) Removed state parameterResults value due to sent latest record. State value have old record\r\n            let ReleaseParameter = this.props.Login.parameterResults && this.props.Login.parameterResults;\r\n            // let selectedRecord = this.state.selectedRecord || {};\r\n            // let selectedId = this.props.Login.selectedId || null;\r\n            // let additionalInfo = this.state.selectedRecord.additionalInfo || [];\r\n            const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n            const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n            const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode);\r\n            const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n            const classUrl = \"release\";\r\n            const formData = new FormData();\r\n            let neditable = 0;\r\n            let releaseParameters = [];\r\n            let inputParam = {};\r\n            // let inputData = [];\r\n            let i = 0;\r\n            if (ReleaseParameter !== undefined && ReleaseParameter.length > 0 && ReleaseParameter[0].sresult !== \"\") {\r\n                ReleaseParameter.map((resultData, index) => {\r\n                    let results = {};\r\n                    if (resultData.editable === true) {\r\n                        neditable = 1;\r\n                        switch (resultData.nparametertypecode) {\r\n                            case 1:\r\n                                results[\"jsondata\"] = {\r\n                                    ncalculatedresult: resultData[\"ncalculatedresult\"],\r\n                                    sresult: resultData.sresult,\r\n                                    sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\",\r\n                                    //Modified by sonia on 6th Aug 2024 for JIRA ID:ALPD-4558\r\n                                    sunitname: resultData.unitcode.label,\r\n                                    sresultaccuracyname: resultData.resultaccuracycode.label,\r\n                                    nresultaccuracycode: resultData.resultaccuracycode.value,\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\r\n                                results[\"sresult\"] = resultData.sresult;\r\n                                results[\"sfinal\"] = resultData.sresult !== \"\" ?\r\n                                    numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\r\n                                results[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                                    numericGrade(resultData, results[\"sfinal\"]) : -1;\r\n                                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;                                 \r\n                                results['nunitcode'] = resultData.unitcode.value;  //Modified by sonia on 6th Aug 2024 for JIRA ID:ALPD-4558\r\n    \r\n    \r\n                                break;\r\n                            case 2:\r\n                                results[\"jsondata\"] = {\r\n                                    ncalculatedresult: 4,\r\n                                    sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                    sfinal: Lims_JSON_stringify(resultData.sfinal, false),\r\n                                    sresultcomment: resultData.sresultcomment === 'null' ? \"-\" : resultData.sresultcomment,\r\n                                    salertmessage: resultData.salertmessage,\r\n                                    additionalInfo: resultData['additionalInfo'],\r\n                                    additionalInfoUidata: resultData['additionalInfoUidata'] === undefined ? \"\" : resultData['additionalInfoUidata'],\r\n                                    ntestgrouptestpredefcode: resultData.ntestgrouptestpredefcode\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"sresult\"] = resultData.sresult;\r\n    \r\n                                results[\"ncalculatedresult\"] = 4;\r\n                                results[\"sfinal\"] = resultData.sresult;\r\n                                results[\"ngradecode\"] = resultData.ngradecode;\r\n                                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results['nunitcode'] = resultData.nunitcode;\r\n                                break;\r\n                            case 3:\r\n                                results[\"jsondata\"] = {\r\n                                    ncalculatedresult: 4,\r\n                                    sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                    sfinal: Lims_JSON_stringify(resultData.sresult, false)\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"sresult\"] = resultData.sresult;\r\n                                results[\"ncalculatedresult\"] = 4;\r\n                                results[\"sfinal\"] = resultData.sresult;\r\n                                results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\r\n                                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results['nunitcode'] = resultData.nunitcode;\r\n                                break;\r\n                            case 4:\r\n                                if (resultData.sfinal.length > 0) {\r\n                                    const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                    const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                    const uniquefilename = create_UUID() + '.' + fileExtension;\r\n                                    results[\"jsondata\"] = {\r\n                                        ssystemfilename: uniquefilename,\r\n                                        nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\r\n                                        ncalculatedresult: 4,\r\n                                        sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                        sfinal: Lims_JSON_stringify(resultData.sresult, false)\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"ncalculatedresult\"] = 4;\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                    results[\"sfinal\"] = resultData.sresult;\r\n                                    results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\r\n                                    results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                    results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                    results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                    results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    results[\"ssystemfilename\"] = uniquefilename;\r\n                                    results[\"nfilesize\"] = resultData.sfinal[0] && resultData.sfinal[0].size;\r\n                                    results['nunitcode'] = resultData.nunitcode;\r\n                                    formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\r\n                                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                                    formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\r\n                                    i++;\r\n                                }\r\n                                else {\r\n                                    const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                    const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                    const uniquefilename = \"\";\r\n                                    results[\"jsondata\"] = {\r\n                                        ssystemfilename: uniquefilename,\r\n                                        nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\r\n                                        ncalculatedresult: 4,\r\n                                        sresult: \"\",\r\n                                        sfinal: \"\"\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"ncalculatedresult\"] = 4;\r\n                                    results[\"sresult\"] = \"\";\r\n                                    results[\"sfinal\"] = \"\";\r\n                                    results[\"ngradecode\"] = -1;\r\n                                    results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                    results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                    results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                    results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    results[\"ssystemfilename\"] = \"\";\r\n                                    results[\"nfilesize\"] = \"\";\r\n                                    formData.append(\"uploadedFile\" + index, \"\");\r\n                                    formData.append(\"uniquefilename\" + index, \"\");\r\n                                    formData.append(\"ntransactiontestcode\", \"\");\r\n                                }\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                        if (Object.values(results).length > 0) {\r\n                            releaseParameters.push(results);\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n    \r\n                if (neditable === 0) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        // ALPD-4026 (18-05-2024) Added modalShow as false and commented openModal: false because of not closing the result correction data grid\r\n                        data: { loading: false, \r\n                            // openModal: false, \r\n                            modalShow: false, parameterResults: [], selectedRecord: {} }\r\n                    }\r\n                    return this.props.updateStore(updateInfo);\r\n                }\r\n    \r\n                formData.append(\"filecount\", i);\r\n                formData.append(\"nregtypecode\", nregtypecode);\r\n                formData.append(\"nregsubtypecode\", nregsubtypecode);\r\n                formData.append(\"ncoaparentcode\", this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode);\r\n                formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\r\n                formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\r\n                formData.append(\"resultData\", JSON.stringify(releaseParameters));\r\n\r\n                inputParam = {\r\n                    classUrl: classUrl,\r\n                    methodUrl: \"ReleaseParameter\",\r\n                    inputData: { userinfo: this.props.Login.userInfo, doAction: \"editresult\" },\r\n                    formData: formData,\r\n                    isFileupload: true,\r\n                    operation: \"update\",\r\n                    displayName: this.props.Login.inputParam.displayName, saveType//, postParam\r\n                }\r\n    \r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, editResultId)) {\r\n    \r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            modalShow: false,\r\n                            openModal: true,\r\n                            ncontrolcode: editResultId,\r\n                            screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n    \r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"modalShow\");\r\n                }\r\n            }\r\n            // else {\r\n            //     const updateInfo = {\r\n            //         typeName: DEFAULT_RETURN,\r\n            //         data: { loading: false, openModal: false }\r\n            //     }\r\n            //     return this.props.updateStore(updateInfo);\r\n            // }\r\n            else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERRESULT\" }));\r\n            }\r\n        } \r\n    }\r\n\r\n    onSaveModalClick = () => {\r\n        //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\r\n        if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\r\n            this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\r\n        }\r\n        else {\r\n            let ntransactionsamplecode = \"\"\r\n            let ntransactiontestcode = \"\"\r\n            let npreregno = \"\"\r\n            let seletedRecord = this.state.selectedRecord;\r\n            if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\r\n                if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n                    let sample = this.state.npreregno.filter((c, index) => {\r\n                        return this.state.npreregno.indexOf(c) === index;\r\n                    });\r\n                    let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n                        return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n                    });\r\n                    let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n                        return this.state.ntransactiontestcode.indexOf(c) === index;\r\n                    });\r\n\r\n                    npreregno = sample.map(x => x).join(\",\")\r\n                    ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n                    ntransactiontestcode = test.map(x => x).join(\",\")\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                    const inputParam = {\r\n                    // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                    // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                    // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                        inputData: {\r\n                            change: this.props.Login.change,\r\n                            npreregno: String(npreregno),\r\n                            ntransactionsamplecode: ntransactionsamplecode,\r\n                            ntransactiontestcode: ntransactiontestcode,\r\n                            // ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\r\n                            //     && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\r\n                            ncoaparentcode: this.props.Login.masterData&&this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                                ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode:-1,\r\n                            ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                                && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                            url: this.props.Login.settings[24],\r\n                            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                            dfrom: obj.fromDate,\r\n                            dto: obj.toDate,\r\n                            //  isPopup:true,\r\n                            isAddPopup: false,\r\n                            isEditPopup: false,\r\n                            nflag: 2,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                            doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\r\n                            isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                            nreporttemplatecode: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode ? this.state.selectedRecord.nreporttemplatecode.value : -1,\r\n                            singleSampleInRelease: this.state.selectedRecord && this.state.selectedRecord.nisarnowiserelease && this.state.selectedRecord.nisarnowiserelease === transactionStatus.YES ? \r\n                                this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES ? transactionStatus.NO : transactionStatus.YES : \r\n                                this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease,\r\n                            nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired,\r\n                            nismultipleproject: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nismultipleproject) || transactionStatus.NO,\r\n                            nprojectspecrequired: parseInt(this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired) || transactionStatus.NO, //Added by Dhanushya RI jira id-ALPD-3862 for multiple projects under single release\r\n                            searchRef: this.searchRef   // ALPD-4229 (12-06-2024) Added searchRef to clear searched text\r\n                        },\r\n                        userinfo: this.props.Login.userInfo,\r\n                        methodUrl: \"Release\",\r\n                        classUrl: \"release\",\r\n                        operation: this.props.Login.operation,\r\n                        searchRef: this.searchRef  // ALPD-4229 (30-05-2024) Added searchRef to clear search text\r\n                    }\r\n                    if (this.props.Login.isEditPopup) {\r\n                        inputParam.inputData['nsectioncode'] = this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES ? this.props.Login.masterData && this.props.Login.masterData.reportSectionCode : -1\r\n                        inputParam.inputData['isEditSave'] = true;\r\n                    }\r\n                    const masterData = this.props.Login.masterData;\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true,\r\n                                screenData: { inputParam, masterData, seletedRecord },\r\n                                operation: this.props.Login.operation,\r\n                                screenName: this.props.Login.screenName,\r\n                                ncontrolcode: this.props.Login.ncontrolCode\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        if (this.props.Login.isDeletePopup) {\r\n                            this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n                        }\r\n                        else if (this.props.Login.isEditPopup) {\r\n                           \r\n                            this.props.UpdateApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n                        }\r\n                        else {\r\n                            this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData, seletedRecord)\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n                }\r\n            }\r\n            else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n            }\r\n        }\r\n\r\n    }\r\n    //     onSaveModalClick = () => {\r\n    //         //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\r\n    //         if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\r\n    //             this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\r\n    //         }\r\n    //         else {\r\n    //             let ntransactionsamplecode = \"\"\r\n    //             let ntransactiontestcode = \"\"\r\n    //             let npreregno = \"\"\r\n    //             if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\r\n    //                 if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n    //                     let sample = this.state.npreregno.filter((c, index) => {\r\n    //                         return this.state.npreregno.indexOf(c) === index;\r\n    //                     });\r\n    //                     let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n    //                         return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n    //                     });\r\n    //                     let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n    //                         return this.state.ntransactiontestcode.indexOf(c) === index;\r\n    //                     });\r\n\r\n    //                     npreregno = sample.map(x => x).join(\",\")\r\n    //                     ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n    //                     ntransactiontestcode = test.map(x => x).join(\",\")\r\n    //                     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //                     const inputParam = {\r\n    //                         inputData: {\r\n    //                             change: this.props.Login.change,\r\n    //                             npreregno: String(npreregno),\r\n    //                             ntransactionsamplecode: ntransactionsamplecode,\r\n    //                             ntransactiontestcode: ntransactiontestcode,\r\n    //                             ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\r\n    //                                 && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\r\n    //                             url: this.props.Login.settings[24],\r\n    //                             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //                             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //                             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //                             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //                             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //                             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //                             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //                             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //                             dfrom: obj.fromDate,\r\n    //                             dto: obj.toDate,\r\n    //                             isAddPopup: false,\r\n    //                             isEditPopup: false,\r\n    //                             nflag: 2,\r\n    //                             userinfo: this.props.Login.userInfo,\r\n    //                             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //                             doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\r\n    //                         },\r\n    //                         userinfo: this.props.Login.userInfo,\r\n    //                         methodUrl: \"Release\",\r\n    //                         classUrl: \"release\",\r\n    //                         operation: this.props.Login.operation\r\n    //                     }\r\n\r\n    //                     const masterData = this.props.Login.masterData;\r\n    //                     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n\r\n    //                         const updateInfo = {\r\n    //                             typeName: DEFAULT_RETURN,\r\n    //                             data: {\r\n    //                                 loadEsign: true,\r\n    //                                 screenData: { inputParam, masterData },\r\n    //                                 operation: this.props.Login.operation,\r\n    //                                 screenName: this.props.Login.screenName,\r\n    //                                 ncontrolcode:this.props.Login.ncontrolCode\r\n    //                             }\r\n    //                         }\r\n    //                         this.props.updateStore(updateInfo);\r\n    //                     }\r\n    //                     else {\r\n    //                         if (this.props.Login.isDeletePopup) {\r\n    //                             this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n    //                         }\r\n    //                         else if (this.props.Login.isEditPopup) {\r\n    // <<<<<<< .mine\r\n    //                             this.props.UpdateApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\r\n    // ||||||| .r76787\r\n    //                             this.props.UpdateApprovedSample (this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)  \r\n    // =======\r\n    //                             this.props.UpdateApprovedSample (inputParam.inputData, this.props.Login.masterData)  \r\n    // >>>>>>> .r76792\r\n    //                         }\r\n    //                         else {\r\n    //                             this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData)\r\n    //                         }\r\n    //                     }\r\n\r\n    //                 }\r\n    //                 else {\r\n    //                     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n    //                 }\r\n    //             }\r\n    //             else {\r\n    //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n    //             }\r\n\r\n\r\n    //         }\r\n\r\n    //     }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            SampleGridItem,\r\n            selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n            RegistrationSubTypeList, FilterStatusList, ConfigVersionList,\r\n            //UserSectionList, TestList,\r\n            SingleItem, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem,\r\n            stateDynamicDesign, checkedflag, dataState, selectedComment, isInitialRender, DynamicReportFilterTypeItem,DynamicDefaultStructureItem } = this.state;\r\n\r\n        let bool = false;\r\n        let reportFilePath = \"\";\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            reportFilePath = this.props.Login.masterData.ReportPDFFile;\r\n\r\n            bool = true;\r\n        }\r\n        // else {\r\n        //     if (this.state.dataState === undefined) {\r\n        //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n        //     }\r\n        //     //  const npreregno =  [];\r\n        //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        //     bool = true;\r\n\r\n        // }\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\r\n\r\n            checkedflag = this.props.Login.checkedflag\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.isInitialRender !== previousProps.Login.isInitialRender) {\r\n            isInitialRender = this.props.Login.isInitialRender;\r\n            bool = true;\r\n        }\r\n        // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\r\n\r\n        //     npreregno = this.props.Login.npreregno\r\n        //     bool = true;\r\n        // }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false);\r\n            // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\r\n            // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            ReporttypeList = ReporttypeListMap.get(\"OptionList\");\r\n            // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\r\n            //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            //  UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            //   TestList = TestListMap.get(\"OptionList\");\r\n\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.selectedComment !== previousProps.Login.masterData.selectedComment) {\r\n            selectedComment = this.props.Login.masterData.selectedComment;\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\r\n            DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            DynamicReportFilterTypeItem = dynamicColumn.samplefiltertypefields ? dynamicColumn.samplefiltertypefields : [];\r\n            DynamicDefaultStructureItem = dynamicColumn.defaultstructure ? dynamicColumn.defaultstructure : [];\r\n\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if(this.props.Login.slideOutClose !== previousProps.Login.slideOutClose){\r\n            bool = true;\r\n        }\r\n        if(this.props.Login.isClear !== previousProps.Login.isClear){\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n\r\n        if (bool) {\r\n            bool = false;\r\n            let allData = {\r\n                userRoleControlRights, controlMap,\r\n                SampleGridItem, selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n                RegistrationSubTypeList, FilterStatusList, ConfigVersionList, selectedComment,\r\n                //UserSectionList, TestList,\r\n                SingleItem, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem, stateDynamicDesign, checkedflag, isInitialRender,\r\n                data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n                reportFilePath, DynamicReportFilterTypeItem, DynamicDefaultStructureItem,\r\n                //npreregno: this.state.npreregno || [], ntransactionsamplecode: this.state.ntransactionsamplecode || [],\r\n                //ntransactiontestcode: this.state.ntransactiontestcode || []\r\n            }\r\n            // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\r\n            if (this.props.Login.slideOutClose && this.props.Login.slideOutClose === true \r\n                 && this.props.Login.isClear !== false \r\n\r\n                // && (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true\r\n                // || this.props.Login.isEditPopup && this.props.Login.isEditPopup === true\r\n                // || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true)\r\n            ) {\r\n                this.setState({ ...allData, npreregno: [], ntransactionsamplecode: [], ntransactiontestcode: [] });\r\n            }\r\n            else {\r\n                this.setState(allData);\r\n            }\r\n\r\n        }\r\n\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n    }\r\n    sendToPortal = () => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                url: this.props.Login.settings[24],\r\n                isPortal: true,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                allPreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData\r\n            }\r\n            this.props.getReportForPortal(inputParam)\r\n        }\r\n    }\r\n\r\n    editReportTemplate = (inputParam) => {\r\n        if(inputParam.editReportTemplate.ntransactionstatus === transactionStatus.DRAFT || inputParam.editReportTemplate.ntransactionstatus === transactionStatus.CORRECTION) {\r\n            let inputParamData = {\r\n                inputData: {\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                    ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                    nsectioncode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                    nreporttypecode: REPORTTYPE.COAREPORT,\r\n                    nreporttemplatecode: inputParam.editReportTemplate.nreporttemplatecode,\r\n                    ncoaparentcode: inputParam.editReportTemplate.ncoaparentcode,\r\n                    ncoaparenttranscode: inputParam.editReportTemplate.ntransactionstatus,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1\r\n                },\r\n                ncoaparentcode: inputParam.editReportTemplate.ncoaparentcode,\r\n                nreporttemplatecode: inputParam.editReportTemplate.nreporttemplatecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                selectedRecord: this.state.selectedRecord,\r\n                // screenName: \"IDS_REPORTTEMPLATE\"\r\n            }\r\n            this.props.editReportTemplate(inputParamData)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n        }\r\n    }\r\n    \r\n    reportHistory = () => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.DRAFT) {\r\n                let inputParam = {\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                    stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData\r\n                }\r\n                this.props.versionHistory(inputParam)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n            }\r\n        }\r\n    }\r\n    releaseReportHistory = () => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            //if(this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus!==transactionStatus.DRAFT){\r\n            let inputParam = {\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })\r\n            }\r\n            this.props.releaseReportHistory(inputParam)\r\n            //    }else{\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n            //    }\r\n        }\r\n    }\r\n\r\n    patientInfo = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { isPatientDetails: true, openModal: true, hideSave: true, isAddPopup: false, isEditPopup: false, isDeletePopup: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    reportHistoryInfo = () => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode\r\n                },\r\n                masterData: this.props.Login.masterData\r\n            }\r\n            this.props.viewReportHistory(inputParam);\r\n        }\r\n    }\r\n\r\n    releaseTestAttachmentData = (actionName) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    actionName: actionName\r\n                },\r\n                masterData: this.props.Login.masterData\r\n            }\r\n            this.props.viewReleaseTestAttachment(inputParam);\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData\"]\r\n\r\n        this.props.Login.change = false\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue } = this.props.Login.masterData\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ncoareporttypecode: (realReportTypeValue && realReportTypeValue.ncoareporttypecode) || -1,\r\n            isneedsection: parseInt(realReportTypeValue && realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n\r\n            ntransactionstatus: realFilterStatusValue && ((realFilterStatusValue.ntransactionstatus !== undefined) || (realFilterStatusValue.ntransactionstatus !== '0')) ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode !== -1\r\n        ) {\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n            }\r\n            this.props.getReleasedSample(inputParam,this.state.selectedRecord,this.props.Login.selectedRecord,this.props.Login)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let isPatientDetails = this.props.Login.isPatientDetails;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let hideSave = this.props.Login.hideSave;\r\n        let isAddPopup = this.props.Login.isAddPopup;\r\n        let isEditPopup = this.props.Login.isEditPopup;\r\n        let isDeletePopup = this.props.Login.isDeletePopup;\r\n        let isCorrectionNeed = this.props.Login.isCorrectionNeed;\r\n        let ncontrolcode = this.props.Login.ncontrolcode;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let screenName = this.props.Login.screenName;\r\n        let isPatientReports = this.props.Login.isPatientReports;\r\n        let openModalTitle = this.props.Login.openModalTitle;\r\n        let isReleaseTestAttachment = this.props.Login.isReleaseTestAttachment;\r\n        let isReleaseTestComment = this.props.Login.isReleaseTestComment;\r\n        let isAddReleaseTestAttachment = this.props.Login.isAddReleaseTestAttachment;\r\n        let isAddReleaseTestComment = this.props.Login.isAddReleaseTestComment;\r\n        let isInitialRender = this.props.Login.isInitialRender;\r\n        let loadEsignStateHandle = this.props.Login.loadEsignStateHandle;\r\n        let FilterQueryBuilder= this.props.Login.FilterQueryBuilder;\r\n        let slideOutClose = this.props.Login.slideOutClose; // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        const editReportTemplateId = this.state.controlMap.has(\"EditReportTemplate\") && this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode;\r\n        //let projectMasterList =[];\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                // openModal = false;\r\n                isPatientDetails = false;\r\n                hideSave = false;\r\n                isAddPopup = false;\r\n                isEditPopup = false;\r\n                isDeletePopup = true;  //Modified by sonia on 7th Aug 2024 for JIRA ID:ALPD-4576\r\n                isCorrectionNeed = false;\r\n                isPatientReports = false;\r\n                isReleaseTestAttachment = false;\r\n                isReleaseTestComment = false;\r\n               // screenName = undefined;\r\n                selectedRecord = {};\r\n                FilterQueryBuilder=false;\r\n            }\r\n            else {\r\n                slideOutClose = false;\r\n                if (ncontrolcode && (ncontrolcode === editResultId || ncontrolcode === editReportTemplateId)) {\r\n                    modalShow = true;\r\n                    if(ncontrolcode === editReportTemplateId){\r\n                        openModal = false;\r\n                    }\r\n                }\r\n                if (this.props.Login.screenName !== undefined && this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n                    // || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) \r\n                    || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })) {\r\n                    openModal = false;\r\n                  //  screenName = undefined;\r\n                }\r\n                loadEsign = false;\r\n                // selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n                FilterQueryBuilder=false;\r\n            }\r\n        }\r\n        // When using EsignStateHandle component\r\n        else if (this.props.Login.loadEsignStateHandle) {\r\n            loadEsignStateHandle = false;\r\n        } else if(this.props.Login.FilterQueryBuilder){\r\n          \r\n            FilterQueryBuilder=false;\r\n            screenName=this.props.Login.screenNameCopy;\r\n            \r\n        }\r\n        else {\r\n            openModal = (isAddReleaseTestAttachment === true || isAddReleaseTestComment === true) ? true : false;\r\n            isPatientDetails = false;\r\n            hideSave = false;\r\n            isAddPopup = false;\r\n            isEditPopup = false;\r\n            isDeletePopup = false;\r\n            isCorrectionNeed = false;\r\n            isPatientReports = false;\r\n            isReleaseTestAttachment = isAddReleaseTestAttachment === true ? true : false;\r\n            isReleaseTestComment = isAddReleaseTestComment === true ? true : false;\r\n            //screenName = undefined;\r\n            selectedRecord = {};\r\n            openModalTitle = undefined;\r\n            isAddReleaseTestAttachment = false;\r\n            isAddReleaseTestComment = false;\r\n            isInitialRender = false;\r\n            FilterQueryBuilder = false;\r\n            slideOutClose = true;\r\n        }\r\n        // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\r\n        // if((this.props.Login.loadEsign && this.props.Login.loadEsign===false) && (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true ||\r\n        //     this.props.Login.isEditPopup && this.props.Login.isEditPopup === true)){\r\n        //     slideOutClose = true;\r\n        // }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, modalShow, loadEsign, screenName, selectedRecord, selectedId: null, isPatientDetails, hideSave, isAddPopup, isEditPopup, isDeletePopup,\r\n                isCorrectionNeed, isPatientReports, openModalTitle, isReleaseTestAttachment, isReleaseTestComment, isAddReleaseTestAttachment, isAddReleaseTestComment, isInitialRender, loadEsignStateHandle,\r\n                FilterQueryBuilder, slideOutClose\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    \r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n\r\n        let modalShow = this.props.Login.modalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let ReportmodalShow = this.props.Login.ReportmodalShow;\r\n        // const editResultId =this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            ReportmodalShow = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign, ReportmodalShow },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    closeDocModal = () => {\r\n        let openModal = false;\r\n        let showReport = false;\r\n        let selectedRecord = {};\r\n        this.setState({ showReport, openModal, selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = {...this.state.selectedRecord} || {};\r\n        if(event.target.type === \"checkbox\"){\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;   \r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onChangeAwesomeQueryBuilder = (immutableTree, config) => {\r\n        //let selectedRecord = this.state.selectedRecord || {};\r\n        const filterquery = QbUtils.sqlFormat(immutableTree, config);\r\n        const filterQueryTreeStr = QbUtils.getTree(immutableTree);\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                awesomeTree: immutableTree, awesomeConfig: config, filterquery, filterQueryTreeStr\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n        // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\r\n    };\r\n\r\n    onComboChangeAwesomeQueryBuilder = (immutableTree, config,event) => {\r\n    //     let isMandatory=false;\r\n    //    if(event.type==='REMOVE_RULE'){\r\n    //     this.state.DynamicReportFilterTypeItem.map(x=>{\r\n    //         if(x[designProperties.VALUE]===config.fields[event.affectedField]['label'] && x['ismandatory']){\r\n    //             isMandatory=true;\r\n    //         }\r\n    //     })\r\n    //    }\r\n    //    if(!isMandatory){\r\n        const filterquery = QbUtils.sqlFormat(immutableTree, config);\r\n        const filterQueryTreeStr = QbUtils.getTree(immutableTree);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                awesomeTree: immutableTree, awesomeConfig: config, \r\n                filterquery, filterQueryTreeStr//,immutableTreeCopy:immutableTree,configCopy:config\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n    // }else{\r\n    //     const filterquery =this.props.Login.filterquery;\r\n    //     const filterQueryTreeStr =this.props.Login.filterQueryTreeStr;\r\n    //     const updateInfo = {\r\n    //         typeName: DEFAULT_RETURN,\r\n    //         data: {\r\n    //             awesomeTree: this.props.Login.immutableTreeCopy, awesomeConfig: this.props.Login.configCopy, \r\n    //             filterquery, filterQueryTreeStr\r\n    //         }\r\n    //     }\r\n    //     this.props.updateStore(updateInfo)\r\n    //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\r\n    // }\r\n    };\r\n\r\n    handleExecuteClick = (event) => {\r\n        //const selectedRecord = this.state.selectedRecord\r\n        const filterquery = this.props.Login.filterquery\r\n        if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\r\n            const inputparam = {\r\n                component: this.props.Login.seletedFilterComponent,\r\n                userinfo: this.props.Login.userInfo,\r\n                filterquery: filterquery,\r\n                // selectedRecord:this.state.selectedRecord\r\n            }\r\n            this.props.getPatientFilterExecuteData(inputparam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    handleKendoRowClick = (event) => {\r\n        let patientinfo = event.dataItem;\r\n        const component = this.props.Login.seletedFilterComponent;\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        const inputparam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            Login: this.props.Login,\r\n            selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n            'dfrom': obj.fromDate,\r\n            'dto': obj.toDate,\r\n            'npreregno': \"0\",\r\n            'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n            \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            'userinfo': this.props.Login.userInfo,\r\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n            'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            'isAddPopup': true,\r\n            'isPopup': true,\r\n            'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }),\r\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            userinfo: this.props.Login.userInfo,\r\n            patientinfo: event.dataItem,\r\n            spatientid: event.dataItem.spatientid\r\n            // selectedRecord:this.state.selectedRecord\r\n        }\r\n        // if (component[\"childFields\"]) {\r\n        //     const index = this.props.Login.masterIndex;\r\n        //     let selectedRecord = this.state.selectedMaster || {};\r\n\r\n        //     component[\"childFields\"].map(item => {\r\n        //         let data = item1[item.columnname];\r\n        //         if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n        //             //combocontrol\r\n        //             data = { label: item1[item.sdisplaymember], value: item1[item.svaluemember] };\r\n        //         }\r\n        //         else if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n        //             //Date picker control\r\n        //             data = rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, data);\r\n        //         }\r\n        //         selectedRecord[index][item.columnname] = data;\r\n        //     })\r\n\r\n\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: { selectedMaster: selectedRecord, loadCustomSearchFilter: false, }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     const newdata = {\r\n        //         label: item1[component['displaymember']],\r\n        //         value: item1[component['valuemember']], item: { jsondata: { ...item1, jsondata: { ...item1 } } }\r\n        //     };\r\n\r\n        //     this.onComboChange(newdata, component, component['label']);\r\n        // }\r\n        this.props.getPatientWiseSample(inputparam)\r\n    };\r\n\r\n    onInputChange = (event) => {\r\n        let selectedComment = this.props.Login.masterData.selectedComment || {};\r\n        selectedComment[event.target.name] = event.target.value;\r\n        const coaFileInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { selectedComment },\r\n        };\r\n        this.props.updateStore(coaFileInfo);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        let ncontrolcode = this.props.Login.ncontrolcode;\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        let modalName = \"\";\r\n        if (ncontrolcode && ncontrolcode === editResultId) {\r\n            modalName = \"modalShow\";\r\n        }\r\n        else {\r\n            modalName = \"openModal\";\r\n        }\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignforRelease(inputParam, modalName);\r\n    }\r\n\r\n    selectionChange = (event, nflag, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (nflag === undefined) {\r\n            this.state.dataResult.data.map(item => {\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n\r\n            })\r\n            let preregno = event.dataItem.npreregno\r\n            let ncoahistorycode = event.dataItem.ncoahistorycode\r\n            let ssystemfilename = event.dataItem.ssystemfilename\r\n            const coaFileInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { ncoahistorycode, ssystemfilename },\r\n            };\r\n            this.props.updateStore(coaFileInfo);\r\n            this.childHeaderSelectionChange(event, preregno, checkedflag)\r\n        }\r\n        else {\r\n            let data = []\r\n            event.dataItems.map(item => {\r\n                data.push({ \"npreregno\": item.npreregno })\r\n            })\r\n            this.childHeaderSelectionChange(event, data, checkedflag)\r\n        }\r\n    }\r\n\r\n    childHeaderSelectionChange = (event, preregno, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let subsamplecode = [];\r\n        let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno\r\n        if (npreregno.length === 0 || npreregno.length === undefined) {\r\n            this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\r\n\r\n                item.selected = checked\r\n                if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                    subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                }\r\n\r\n            })\r\n            this.props.Login.masterData.ReleaseSample.map(data => {\r\n                if (data.npreregno === npreregno) {\r\n                    data.selected = checked\r\n                }\r\n            })\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n        else {\r\n            npreregno.map(value => {\r\n                this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\r\n                    item.selected = checked\r\n                    if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                        subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                    }\r\n                })\r\n\r\n            })\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n    }\r\n\r\n    subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let transactionsamplecode = subsamplecode;\r\n        if (subsamplecode !== undefined) {\r\n            //  transactionsamplecode = subsamplecode\r\n            let recievedPreRegNo = undefined;\r\n            let recievedTransactionSampleCode = undefined;\r\n            let recievedTransactionTestCode = undefined;\r\n            transactionsamplecode.map(value => {\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\r\n                    let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\r\n                    let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\r\n                    let sendData = {\r\n                        npreregno : nPreRegNo,\r\n                        ntransactionsamplecode: nTransactionSampleCode,\r\n                        ntransactiontestcode: nTransactionTestCode\r\n                    }\r\n                    // this.collectData(item, checkedflag)\r\n                    // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n                    let sentData = this.collectData(item, sendData);\r\n                    recievedPreRegNo = sentData.npreregno;\r\n                    recievedTransactionSampleCode = sentData.ntransactionsamplecode;\r\n                    recievedTransactionTestCode = sentData.ntransactiontestcode;\r\n                    return item;\r\n                })\r\n            })\r\n            this.setState({\r\n                npreregno: checkedflag === false ? [] : recievedPreRegNo,\r\n                ntransactionsamplecode: checkedflag === false ? [] : recievedTransactionSampleCode, \r\n                ntransactiontestcode: checkedflag === false ? [] : recievedTransactionTestCode\r\n            });\r\n        }\r\n        else {\r\n            let recievedPreRegNo = undefined;\r\n            let recievedTransactionSampleCode = undefined;\r\n            let recievedTransactionTestCode = undefined;\r\n            event.dataItems.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\r\n                    let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\r\n                    let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\r\n                    let sendData = {\r\n                        npreregno : nPreRegNo,\r\n                        ntransactionsamplecode: nTransactionSampleCode,\r\n                        ntransactiontestcode: nTransactionTestCode\r\n                    }\r\n                    // this.collectData(item, checkedflag)\r\n                    // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n                    let sentData = this.collectData(item, sendData);\r\n                    recievedPreRegNo = sentData.npreregno;\r\n                    recievedTransactionSampleCode = sentData.ntransactionsamplecode;\r\n                    recievedTransactionTestCode = sentData.ntransactiontestcode;\r\n                    return item;\r\n                })\r\n            )\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\r\n                if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\r\n                return item.selected === true;\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n            this.setState({\r\n                npreregno: checkedflag === false ? [] : recievedPreRegNo,\r\n                ntransactionsamplecode: checkedflag === false ? [] : recievedTransactionSampleCode, \r\n                ntransactiontestcode: checkedflag === false ? [] : recievedTransactionTestCode\r\n            });\r\n        }\r\n    }\r\n\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (event.dataItems.length !== 0) {\r\n            this.state.dataResult.data.map(item => {\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n            this.selectionChange(event, 1, checked);\r\n        }\r\n        else {\r\n            this.setState({ npreregno: [], ntransactionsamplecode: [], ntransactiontestcode: [] })\r\n        }\r\n    }\r\n\r\n    childSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                item.selected = checked;\r\n            }\r\n        })\r\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n            return item.slected === true\r\n        })\r\n        if (data === true) {\r\n            this.props.Login.masterData.ReleaseSample.map(item => {\r\n                if (event.dataItem.npreregno === item.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n\r\n            let recievedPreRegNo = undefined;\r\n            let recievedTransactionSampleCode = undefined;\r\n            let recievedTransactionTestCode = undefined;\r\n\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\r\n                    let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\r\n                    let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\r\n                    let sendData = {\r\n                        npreregno : nPreRegNo,\r\n                        ntransactionsamplecode: nTransactionSampleCode,\r\n                        ntransactiontestcode: nTransactionTestCode\r\n                    }\r\n                    // this.collectData(item)\r\n                    // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n                    let sentData = this.collectData(item, sendData);\r\n                    recievedPreRegNo = sentData.npreregno;\r\n                    recievedTransactionSampleCode = sentData.ntransactionsamplecode;\r\n                    recievedTransactionTestCode = sentData.ntransactiontestcode;\r\n                }\r\n            })\r\n            this.setState({\r\n                npreregno: recievedPreRegNo,\r\n                ntransactionsamplecode: recievedTransactionSampleCode, \r\n                ntransactiontestcode: recievedTransactionTestCode\r\n            });\r\n        }\r\n        else {\r\n            let recievedPreRegNo = undefined;\r\n            let recievedTransactionSampleCode = undefined;\r\n            let recievedTransactionTestCode = undefined;\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\r\n                    let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\r\n                    let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\r\n                    let sendData = {\r\n                        npreregno : nPreRegNo,\r\n                        ntransactionsamplecode: nTransactionSampleCode,\r\n                        ntransactiontestcode: nTransactionTestCode\r\n                    }\r\n                    // this.collectData(item)\r\n                    // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n                    let sentData = this.collectData(item, sendData);\r\n                    recievedPreRegNo = sentData.npreregno;\r\n                    recievedTransactionSampleCode = sentData.ntransactionsamplecode;\r\n                    recievedTransactionTestCode = sentData.ntransactiontestcode;\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n                return item.selected === true\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n            this.setState({\r\n                npreregno: recievedPreRegNo,\r\n                ntransactionsamplecode: recievedTransactionSampleCode, \r\n                ntransactiontestcode: recievedTransactionTestCode\r\n            });\r\n        }\r\n    }\r\n\r\n    subChildSelectionChange = (event) => {\r\n        let x = []\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let recievedPreRegNo = undefined;\r\n        let recievedTransactionSampleCode = undefined;\r\n        let recievedTransactionTestCode = undefined;\r\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = checked;\r\n                let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\r\n                let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\r\n                let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\r\n                let sendData = {\r\n                    npreregno : nPreRegNo,\r\n                    ntransactionsamplecode: nTransactionSampleCode,\r\n                    ntransactiontestcode: nTransactionTestCode\r\n                }\r\n                // this.collectData(item)\r\n                // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n                let sentData = this.collectData(item, sendData);\r\n                recievedPreRegNo = sentData.npreregno;\r\n                recievedTransactionSampleCode = sentData.ntransactionsamplecode;\r\n                recievedTransactionTestCode = sentData.ntransactiontestcode;\r\n            }\r\n        })\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n\r\n            if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\r\n                    x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y = x.filter(t => t.selected === true);\r\n        if (x.length === y.length) {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false\r\n                }\r\n            })\r\n        }\r\n        this.state.dataResult.data.map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno) {\r\n                if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\r\n                    x = this.props.Login.masterData.ReleaseSubSample[item.npreregno]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y1 = x.filter(t => t.selected === true);\r\n        if (x.length === y1.length) {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === y1[0].npreregno) {\r\n                    this.state.dataResult.data[i].selected = true\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === event.dataItem.npreregno) {\r\n                    this.state.dataResult.data[i].selected = false\r\n                }\r\n            })\r\n        }\r\n        this.setState({\r\n            npreregno: recievedPreRegNo,\r\n            ntransactionsamplecode: recievedTransactionSampleCode, \r\n            ntransactiontestcode: recievedTransactionTestCode\r\n        });\r\n    }\r\n\r\n    // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n    collectData = (item, recievedData) => {\r\n        //     let npreregno = this.state.npreregno || []\r\n        //     let ntransactionsamplecode = this.state.ntransactionsamplecode || []\r\n        //     let ntransactiontestcode = this.state.ntransactiontestcode || []\r\n        let npreregno = recievedData.npreregno || []\r\n        let ntransactionsamplecode = recievedData.ntransactionsamplecode || []\r\n        let ntransactiontestcode = recievedData.ntransactiontestcode || []    \r\n        if (item.selected === true) {\r\n            if (!npreregno.includes(item.npreregno)) {\r\n                npreregno.push(item.npreregno)\r\n            }\r\n            if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                ntransactionsamplecode.push(item.ntransactionsamplecode)\r\n            }\r\n            if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                ntransactiontestcode.push(item.ntransactiontestcode)\r\n            }\r\n        }\r\n        else {\r\n                const preregno = npreregno.filter(data => data !== item.npreregno);\r\n                npreregno = preregno;\r\n                const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\r\n                ntransactionsamplecode = transactionsamplecode;\r\n                const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode);\r\n                ntransactiontestcode = transactiontestcode;\r\n        }\r\n        //     this.setState({\r\n        //         npreregno: checkedflag === false ? [] : npreregno,\r\n        //         ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode, ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\r\n        //     })\r\n        let returnData = {\r\n            npreregno, ntransactionsamplecode, ntransactiontestcode\r\n        }\r\n        return returnData;\r\n    }\r\n\r\n    viewSelectedReport = (filedata) => {\r\n        delete (filedata.inputData.userinfo);\r\n        const inputParam = {\r\n            inputData: {\r\n                releasedcoareport: filedata.inputData,\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontrolCode: filedata.ncontrolCode\r\n            },\r\n            classUrl: \"release\",\r\n            operation: \"view\",\r\n            methodUrl: \"ReleasedCOAReport\",\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n\r\n    childDataChange = (selectedRecord) => {\r\n        let isInitialRender = false;\r\n        this.setState({\r\n            selectedRecord: {\r\n                ...selectedRecord\r\n            },\r\n            isInitialRender\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.props.Login.openModal && (this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle) && nextState.isInitialRender === false &&\r\n            (nextState.selectedRecord !== this.state.selectedRecord)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onMandatoryCheck = () => {\r\n        const mandatoryFields = this.props.Login.loadEsignStateHandle ?\r\n            [\r\n                { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"esignpassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_REASON\", \"dataField\": \"esignreason\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"esigncomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                // { \"idsName\": \"IDS_CHECKAGREE\",\"dataField\": \"agree\",  \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"checkbox\" },\r\n\r\n            ]\r\n            :\r\n            this.props.Login.isAddReleaseTestAttachment ? [\r\n                { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                //  { \"idsName\": \"IDS_HEADER\", \"dataField\": \"sheader\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            ] : this.props.Login.isAddReleaseTestComment ?\r\n                this.state.selectedRecord && this.state.selectedRecord[\"ncommentsubtypecode\"] && this.state.selectedRecord[\"ncommentsubtypecode\"].value === 3 ?\r\n                    [\r\n                        { \"idsName\": \"IDS_COMMENTNAME\", \"dataField\": \"scommentsubtype\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_ABBREVIATIONNAME\", \"dataField\": \"spredefinedname\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                        { \"idsName\": \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" }\r\n                    ]\r\n                    :\r\n                    [\r\n                        { \"idsName\": \"IDS_COMMENTNAME\", \"dataField\": \"scommentsubtype\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                        { \"idsName\": \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" }\r\n                    ] : (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) && this.props.Login.masterData \r\n                        && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE\r\n                        && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection!==transactionStatus.YES) ? \r\n                    [\r\n                            { \"mandatory\": true, \"idsName\": \"IDS_REPORTTEMPLATE\", \"dataField\": \"nreporttemplatecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },                 \r\n                    ] : (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) && this.props.Login.masterData \r\n                            && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE\r\n                            && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection===transactionStatus.YES)\r\n                            ? [                                { \"mandatory\": true, \"idsName\": \"IDS_SECTION\", \"dataField\": \"nsectioncode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },                 \r\n\r\n                                { \"mandatory\": true, \"idsName\": \"IDS_REPORTTEMPLATE\", \"dataField\": \"nreporttemplatecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n                        ]: [];\r\n            {(this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) && this.props.Login.masterData \r\n            && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE)\r\n            && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection!==transactionStatus.YES\r\n            && this.props.Login.masterData && this.props.Login.masterData.reportTemplateList && this.props.Login.masterData.reportTemplateList.length === 0 \r\n                ? \r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATEISNOTFOUND\" })) : \r\n                onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields,\r\n                    this.props.Login.loadEsignStateHandle ? this.validateEsign : this.props.Login.isAddReleaseTestAttachment ? this.onSaveTestAttachment\r\n                        : this.props.Login.isAddReleaseTestComment ? this.onSaveTestComment : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) ?\r\n                        this.onSaveModalClick : \"\", \r\n                        (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) ? this.props.Login.loadEsign : this.props.Login.loadEsignStateHandle));\r\n                }\r\n    }\r\n\r\n    onSaveTestAttachment = (saveType, formRef) => {\r\n        const formData = new FormData();\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const userInfo = this.props.Login.userInfo;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let fileArray = [];\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            if (this.state.operation === 'create') {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                        selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData[\"nformcode\"] = userInfo.nformcode;\r\n                    tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n                    tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n                    tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n                    tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n                    tempData[\"nusercode\"] = userInfo.nusercode;\r\n                    tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n                    tempData[\"jsondata\"] = {\r\n                        stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\r\n                        susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\r\n                        suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\r\n                        nfilesize: file.size,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                        slinkname: \"\",\r\n                        sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n                        sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\r\n                    }\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    fileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                        selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\r\n                    tempData[\"nformcode\"] = userInfo.nformcode;\r\n                    tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n                    tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n                    tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n                    tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n                    tempData[\"nusercode\"] = userInfo.nusercode;\r\n                    tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n                    tempData[\"jsondata\"] = {\r\n                        stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\r\n                        susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\r\n                        suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\r\n                        nfilesize: file.size,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                        slinkname: \"\",\r\n                        sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n                        sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\r\n                    }\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    formData.append(\"filecount\", acceptedFiles.length);\r\n                    isFileEdited = transactionStatus.YES;\r\n\r\n                    fileArray.push(tempData);\r\n                });\r\n            }\r\n        } else {\r\n            let tempData = {};\r\n            tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\r\n            tempData[\"nformcode\"] = userInfo.nformcode;\r\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n            tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n            tempData[\"nusercode\"] = userInfo.nusercode;\r\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n            tempData[\"jsondata\"] = {\r\n                stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\r\n                susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\r\n                suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\r\n                nfilesize: selectedRecord.size,\r\n                ssystemfilename: selectedRecord.ssystemfilename,\r\n                sfilename: Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                slinkname: \"\",\r\n                sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n                sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0 \r\n            }\r\n            fileArray.push(tempData);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"releasetestattachment\", JSON.stringify(fileArray));\r\n        formData.append(\"nattachmenttypecode\", attachmentType.FTP);\r\n        formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\r\n        formData.append(\"ncontrolcode\", this.props.Login.ncontrolCode);\r\n        formData.append(\"userinfo\", JSON.stringify({\r\n            ...userInfo,\r\n            sformname: Lims_JSON_stringify(userInfo.sformname),\r\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n        }));\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...userInfo,\r\n                    sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                },\r\n                doAction: \"editReleaseTestAttachment\",\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: this.props.Login.operation,\r\n                classUrl: \"release\",\r\n                saveType: saveType,\r\n                formRef: formRef,\r\n                methodUrl: \"ReleaseTestAttachment\",\r\n                selectedRecord: this.state.selectedRecord,\r\n                screenName: this.props.Login.screenName,\r\n                masterData: this.props.Login.masterData\r\n            }\r\n        };\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    screenData: { inputParam },\r\n                    loadEsignStateHandle: true,\r\n                    ncontrolcode: this.props.Login.ncontrolCode\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.onSaveReleaseTestAttachment(inputParam);\r\n        }\r\n    }\r\n\r\n    deleteReleaseTestAttachment = (deleteParam) => {\r\n        const url = \"release/deleteReleaseTestAttachment\";\r\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && \r\n            this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\r\n            let releasetestattachment = {\r\n                \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\r\n                \"npreregno\": deleteParam.selectedRecord.npreregno,\r\n                \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\r\n                \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\r\n                \"nreleasetestattachmentcode\": deleteParam.selectedRecord.nreleasetestattachmentcode\r\n            }\r\n            let inputParam = {\r\n                inputData: {\r\n                    releasetestattachment,\r\n                    url,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.Login.screenName,\r\n                    masterData: this.props.Login.masterData,\r\n                    doAction: \"deleteReleaseTestAttachment\",\r\n                    selectedRecord: this.state.selectedRecord\r\n                }\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        screenData: { inputParam },\r\n                        loadEsignStateHandle: true,\r\n                        ncontrolcode: deleteParam.ncontrolCode\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.onDeleteReleaseTestAttachment(inputParam);\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n        }\r\n    }\r\n\r\n    onSaveTestComment = (saveType, formRef) => {\r\n        const formData = new FormData();\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const userInfo = this.props.Login.userInfo;\r\n        const inputData = {};\r\n        let commentArray = [];\r\n        let comment = {};\r\n        comment[\"nreleasetestcommentcode\"] = selectedRecord.selectedReleaseTestComment && selectedRecord.selectedReleaseTestComment.nreleasetestcommentcode\r\n        comment[\"nformcode\"] = userInfo.nformcode;\r\n        comment[\"npreregno\"] = selectedRecord.npreregno.value;\r\n        comment[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n        comment[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n        comment[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n        comment[\"nusercode\"] = userInfo.nusercode;\r\n        comment[\"nuserrolecode\"] = userInfo.nuserrole;\r\n        comment[\"ncommentsubtypecode\"] = selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.value;\r\n        comment[\"nsampletestcommentscode\"] = selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.value !== \"\" ? selectedRecord.nsampletestcommentscode.value : '-1';\r\n        comment[\"jsondata\"] = {\r\n            scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\",\r\n            nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n            stestsynonym: selectedRecord.stestsynonym,\r\n            scommentsubtype: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.label,\r\n            spredefinedname: selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.label !== \"\" ? selectedRecord.nsampletestcommentscode.label : '-',\r\n            ncommentsubtypecode: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode,\r\n            nsampletestcommentscode: selectedRecord.nsampletestcommentscode ? selectedRecord.nsampletestcommentscode : '-'\r\n        }\r\n        comment[\"nsamplecommentscode\"] = selectedRecord.nsamplecommentscode ? selectedRecord.nsamplecommentscode.value : -1;\r\n        commentArray.push(comment);\r\n        inputData[\"testcomment\"] = commentArray;\r\n        // }\r\n        formData.append(\"userinfo\", JSON.stringify({\r\n            ...userInfo,\r\n            sformname: Lims_JSON_stringify(userInfo.sformname),\r\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n        }));\r\n        formData.append(\"releasetestcomment\", JSON.stringify(commentArray));\r\n        formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...userInfo,\r\n                    sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                },\r\n                doAction: \"editReleaseTestComment\",\r\n                formData: formData,\r\n                operation: this.props.Login.operation,\r\n                classUrl: \"release\",\r\n                saveType: saveType,\r\n                formRef: formRef,\r\n                methodUrl: \"ReleaseTestComment\",\r\n                selectedRecord: this.state.selectedRecord,\r\n                screenName: this.props.Login.screenName,\r\n                masterData: this.props.Login.masterData\r\n            }\r\n        };\r\n        if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsignStateHandle: true,\r\n                    screenData: { inputParam },\r\n                    ncontrolcode: this.props.Login.ncontrolCode\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.onSaveReleaseTestComment(inputParam);\r\n        }\r\n    }\r\n\r\n    deleteReleaseTestComment = (deleteParam) => {\r\n        const url = \"release/deleteReleaseTestComment\";\r\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && \r\n            this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\r\n            let releasetestcomment = {\r\n                \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\r\n                \"npreregno\": deleteParam.selectedRecord.npreregno,\r\n                \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\r\n                \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\r\n                \"nreleasetestcommentcode\": deleteParam.selectedRecord.nreleasetestcommentcode\r\n            }\r\n            let inputParam = {\r\n                inputData: {\r\n                    releasetestcomment,\r\n                    url,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.Login.screenName,\r\n                    masterData: this.props.Login.masterData,\r\n                    doAction: \"deleteReleaseTestComment\",\r\n                    selectedRecord: this.state.selectedRecord\r\n                }\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsignStateHandle: true,\r\n                        screenData: { inputParam },\r\n                        ncontrolcode: deleteParam.ncontrolCode\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.onDeleteReleaseTestComment(inputParam);\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample,\r\n    getApprovedSample,\r\n    //, generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\r\n    previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample, getSectionForSectionWise, getreportcomments,\r\n    fetchReportInfoReleaseById, UpdateReportComments\r\n    , generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData,\r\n    //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\r\n    getSectionForSectionWise, fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory,\r\n    downloadVersionReport, viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool,\r\n    getPatientWiseSample, preliminaryReport, releaseReportHistory, onSaveReleaseTestAttachment, onDeleteReleaseTestAttachment, onSaveReleaseTestComment,\r\n    onDeleteReleaseTestComment,generatereport, editReportTemplate, SaveReportTemplate, \r\n    deleteSamples,filterTransactionList,validationforAppendSamples,SaveReleaseComment,openReleaseComments\r\n})(injectIntl(Release));"]},"metadata":{},"sourceType":"module"}