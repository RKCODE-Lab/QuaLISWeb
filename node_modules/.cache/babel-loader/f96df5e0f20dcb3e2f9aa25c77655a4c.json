{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\components\\\\data-grid\\\\DataGridWithSelection.jsx\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl'; //import { Grid, GridColumn as Column,GridNoRecords } from '@progress/kendo-react-grid';\n\nimport { Grid, GridColumn as Column, GridNoRecords, GridColumnMenuFilter } from '@progress/kendo-react-grid';\nimport { AtTableWrap, FontIconWrap } from '../data-grid/data-grid.styles';\nimport { loadMessages, LocalizationProvider } from '@progress/kendo-react-intl';\nimport ColumnMenu from './ColumnMenu';\nimport { process } from '@progress/kendo-data-query';\nimport { Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRemoveFormat, faTimes, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faClosedCaptioning } from '@fortawesome/free-regular-svg-icons';\n\nclass DataGridWithSelection extends React.Component {\n  columnProps(field) {\n    if (this.props.dataState) {\n      if (!this.props.hideColumnFilter) {\n        const returntype = {\n          field: field,\n          columnMenu: ColumnMenu,\n          headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\n        };\n        return returntype;\n      }\n    }\n  }\n\n  isColumnActive(field, dataState) {\n    return GridColumnMenuFilter.active(field, dataState.filter);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AtTableWrap, {\n      className: \"at-list-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LocalizationProvider, {\n      language: this.props.userInfo.slanguagetypecode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid // data={this.props.data}\n    , Object.assign({\n      sortable: true,\n      data: this.props.dataState ? process(this.props.data || [], {\n        sort: this.props.dataState.sort,\n        filter: this.props.dataState.filter,\n        group: this.props.dataState.group\n      }).data : this.props.data,\n      style: {\n        height: '400px'\n      },\n      selectedField: \"selected\",\n      onSelectionChange: this.props.selectionChange,\n      onHeaderSelectionChange: this.props.headerSelectionChange,\n      onRowClick: this.props.rowClick // ADDed by Neeraj-ALPD-5136\n      //WorkList Screen -> Including filter in Data selection Kendo Grid \n      //Command by neeraj\n      ,\n      onDataStateChange: this.props.dataStateChange\n    }, this.props.dataState, {\n      scrollable: this.props.scrollable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(GridNoRecords, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_NORECORDSAVAILABLE\"\n    })), !this.props.isHidemulipleselect ? /*#__PURE__*/React.createElement(Column, {\n      field: \"selected\",\n      width: \"50px\",\n      title: this.props.title,\n      headerSelectionValue: this.props.selectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 41\n      }\n    }) : \"\", this.props.extractedColumnList.map((item, index) => /*#__PURE__*/React.createElement(Column, Object.assign({\n      key: index,\n      width: item.width,\n      title: this.props.intl.formatMessage({\n        id: item.idsName\n      })\n    }, this.columnProps(item.dataField), {\n      cell: row => /*#__PURE__*/React.createElement(\"td\", {\n        \"data-tip\": row[\"dataItem\"][item.dataField],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 49\n        }\n      }, item.isIdsField ? /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: row[\"dataItem\"][item.dataField],\n        defaultMessage: row[\"dataItem\"][item.dataField],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 57\n        }\n      }) : row[\"dataItem\"][item.dataField]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }\n    }))), // ADDed by Neeraj-ALPD-5136\n    //WorkList Screen -> Including filter in Data selection Kendo Grid \n    //Command by neeraj\n    //start\n    this.props.isActionRequired ? /*#__PURE__*/React.createElement(Column, {\n      locked: true,\n      headerClassName: \"text-center\",\n      title: this.props.intl.formatMessage({\n        id: 'IDS_ACTION'\n      }),\n      sort: false,\n      cell: row => /*#__PURE__*/React.createElement(\"td\", {\n        className: `k-grid-content-sticky k-command-cell pl-0 selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''`,\n        style: {\n          left: '0',\n          right: '0',\n          borderRightWidth: '1px',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FontIconWrap, {\n        className: \"d-font-icon action-icons-wrap\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REMOVE\"\n        }),\n        \"data-place\": \"top\",\n        onClick: () => this.props.handleClickDelete(row),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 61\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 45\n      }\n    }) : \"\" //--end\n    ))))));\n  }\n\n}\n\nexport default injectIntl(DataGridWithSelection);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/components/data-grid/DataGridWithSelection.jsx"],"names":["React","FormattedMessage","injectIntl","Grid","GridColumn","Column","GridNoRecords","GridColumnMenuFilter","AtTableWrap","FontIconWrap","loadMessages","LocalizationProvider","ColumnMenu","process","Col","Row","FontAwesomeIcon","faRemoveFormat","faTimes","faTrashAlt","faClosedCaptioning","DataGridWithSelection","Component","columnProps","field","props","dataState","hideColumnFilter","returntype","columnMenu","headerClassName","isColumnActive","active","filter","render","userInfo","slanguagetypecode","data","sort","group","height","selectionChange","headerSelectionChange","rowClick","dataStateChange","scrollable","intl","formatMessage","id","isHidemulipleselect","title","selectAll","extractedColumnList","map","item","index","width","idsName","dataField","row","isIdsField","isActionRequired","left","right","borderRightWidth","textAlign","handleClickDelete"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n//import { Grid, GridColumn as Column,GridNoRecords } from '@progress/kendo-react-grid';\r\nimport { Grid, GridColumn as Column, GridNoRecords, GridColumnMenuFilter } from '@progress/kendo-react-grid';\r\nimport { AtTableWrap, FontIconWrap } from '../data-grid/data-grid.styles';\r\nimport { loadMessages, LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport ColumnMenu from './ColumnMenu';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRemoveFormat, faTimes, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faClosedCaptioning } from '@fortawesome/free-regular-svg-icons';\r\n\r\nclass DataGridWithSelection extends React.Component {\r\n\r\n\r\n    columnProps(field) {\r\n        if (this.props.dataState) {\r\n            if (!this.props.hideColumnFilter) {\r\n                const returntype = {\r\n                    field: field,\r\n                    columnMenu: ColumnMenu,\r\n                    headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\r\n                }\r\n                return returntype;\r\n            }\r\n        }\r\n    }\r\n\r\n    isColumnActive(field, dataState) {\r\n        return GridColumnMenuFilter.active(field, dataState.filter)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <AtTableWrap className=\"at-list-table\">\r\n                    <LocalizationProvider language={this.props.userInfo.slanguagetypecode}>\r\n                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                        <Row noGutters={true}>\r\n                            <Col md=\"12\">\r\n                                <Grid\r\n                                    // data={this.props.data}\r\n                                    sortable\r\n                                    data={this.props.dataState ? process(this.props.data || [],\r\n                                        {\r\n                                            sort: this.props.dataState.sort,\r\n                                            filter: this.props.dataState.filter,\r\n                                            group: this.props.dataState.group\r\n                                        }).data : this.props.data}\r\n                                    style={{ height: '400px' }}\r\n                                    selectedField=\"selected\"\r\n                                    onSelectionChange={this.props.selectionChange}\r\n                                    onHeaderSelectionChange={this.props.headerSelectionChange}\r\n                                    onRowClick={this.props.rowClick}\r\n                                    // ADDed by Neeraj-ALPD-5136\r\n                                    //WorkList Screen -> Including filter in Data selection Kendo Grid \r\n                                    //Command by neeraj\r\n                                    onDataStateChange={this.props.dataStateChange}\r\n                                    {...this.props.dataState}\r\n                                    scrollable={this.props.scrollable}\r\n\r\n                                >\r\n\r\n                                    <GridNoRecords>\r\n                                        {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                                    </GridNoRecords>\r\n                                    {!this.props.isHidemulipleselect ?\r\n                                        <Column\r\n                                            field=\"selected\"\r\n                                            width=\"50px\"\r\n                                            title={this.props.title}\r\n                                            headerSelectionValue={this.props.selectAll}\r\n                                        /> : \"\"}\r\n                                    {this.props.extractedColumnList.map((item, index) =>\r\n                                        <Column key={index}\r\n                                            width={item.width}\r\n                                            title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                            {...this.columnProps(item.dataField)}\r\n                                            cell={(row) => (\r\n                                                <td data-tip={row[\"dataItem\"][item.dataField]}>\r\n                                                    {item.isIdsField ?\r\n                                                        <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                                        : row[\"dataItem\"][item.dataField]}\r\n                                                </td>\r\n                                            )} />\r\n                                    )}\r\n                                    {   // ADDed by Neeraj-ALPD-5136\r\n                                        //WorkList Screen -> Including filter in Data selection Kendo Grid \r\n                                        //Command by neeraj\r\n                                        //start\r\n                                        this.props.isActionRequired ?\r\n                                            <Column\r\n                                                locked\r\n                                                headerClassName=\"text-center\"\r\n                                                title={this.props.intl.formatMessage({ id: 'IDS_ACTION' })}\r\n                                                sort={false}\r\n                                                cell={(row) => (\r\n                                                    <td className={`k-grid-content-sticky k-command-cell pl-0 selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''`} style={{ left: '0', right: '0', borderRightWidth: '1px', textAlign: 'center' }}>\r\n                                                        <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REMOVE\" })} data-place=\"top\"\r\n                                                            onClick={() => this.props.handleClickDelete(row)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faTimes} />\r\n                                                        </FontIconWrap>\r\n                                                    </td>\r\n                                                )} />\r\n                                            : \"\"\r\n                                        //--end\r\n                                    }\r\n\r\n                                </Grid>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalizationProvider >\r\n                </AtTableWrap>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default injectIntl(DataGridWithSelection);"]},"metadata":{},"sourceType":"module"}