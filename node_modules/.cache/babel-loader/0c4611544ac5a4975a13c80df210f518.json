{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\ApprovalTask.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { process } from '@progress/kendo-data-query';\n\nclass ApprovalTask extends React.Component {\n  render() {\n    const extractedColumnList = [];\n\n    if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample) {\n      extractedColumnList.push({\n        \"idsName\": this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode] : \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"width\": \"155px\"\n      });\n    } else {\n      extractedColumnList.push({\n        \"idsName\": this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode] : \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"width\": \"155px\"\n      });\n    }\n\n    extractedColumnList.push( //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"1%\" },\n    {\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PREANALYSISTIME\",\n      \"dataField\": \"spreanalysistime\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_PREPARATIONTIME\",\n      \"dataField\": \"spreparationtime\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_ANALYSISTIME\",\n      \"dataField\": \"sanalysistime\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_MISCELLANEOUSTIME\",\n      \"dataField\": \"smisctime\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_USER\",\n      \"dataField\": \"sanalyst\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_COMMENTS\",\n      \"dataField\": \"scomments\",\n      \"width\": \"200px\"\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nresultusedtaskcode\",\n      data: this.props.ResultUsedTasks,\n      dataResult: process(this.props.ResultUsedTasks || [], this.props.dataState),\n      dataState: this.props.dataState,\n      dataStateChange: this.props.dataStateChange,\n      extractedColumnList: extractedColumnList,\n      userInfo: this.props.userInfo,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      pageable: true,\n      isActionRequired: false,\n      selectedId: this.props.selectedId,\n      isToolBarRequired: false,\n      scrollable: \"scrollable\",\n      gridHeight: \"550px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(ApprovalTask);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/approval/ApprovalTask.jsx"],"names":["React","Row","Col","injectIntl","DataGrid","process","ApprovalTask","Component","render","extractedColumnList","props","masterData","nneedsubsample","push","genericLabel","userInfo","slanguagetypecode","ResultUsedTasks","dataState","dataStateChange","controlMap","userRoleControlRights","inputParam","selectedId"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\n\r\nclass ApprovalTask extends React.Component {\r\n\r\n    render() {\r\n        const extractedColumnList = [];\r\n        if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample){\r\n            extractedColumnList.push({\"idsName\":this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]:\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n        }\r\n        else{\r\n            extractedColumnList.push({\"idsName\":this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]:\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n        }\r\n         extractedColumnList.push (\r\n            //{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"1%\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_PREANALYSISTIME\", \"dataField\": \"spreanalysistime\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_PREPARATIONTIME\", \"dataField\": \"spreparationtime\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_ANALYSISTIME\", \"dataField\": \"sanalysistime\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_MISCELLANEOUSTIME\", \"dataField\": \"smisctime\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_USER\", \"dataField\": \"sanalyst\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\" }\r\n         );\r\n\r\n        return (\r\n            <>\r\n                <Row noGutters={\"true\"}>\r\n                    <Col md={12}>\r\n                        <DataGrid\r\n                            primaryKeyField={\"nresultusedtaskcode\"}\r\n                            data={this.props.ResultUsedTasks}\r\n                            dataResult={process(this.props.ResultUsedTasks || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                            extractedColumnList={extractedColumnList}\r\n                            userInfo={this.props.userInfo}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            pageable={true}\r\n                            isActionRequired={false}\r\n                            selectedId={this.props.selectedId}\r\n                            isToolBarRequired={false}\r\n                            scrollable={\"scrollable\"}\r\n                            gridHeight={\"550px\"}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(ApprovalTask);"]},"metadata":{},"sourceType":"module"}