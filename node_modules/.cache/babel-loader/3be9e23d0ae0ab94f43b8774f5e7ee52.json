{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { sortData } from '../components/CommonScript';\nexport function fetchById(languagesParam) {\n  return function (dispatch) {\n    let primaryKeyField = 0;\n    let findIndex = 0;\n    let fieldName = \"\";\n    let selectedJsondata;\n    let jsondataKeys;\n    let URL;\n\n    if (languagesParam.masterData.headername == \"Menu\") {\n      URL = rsapi.post(\"language/getActiveMenuByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nmenucode\": languagesParam.languagesRow.nmenucode\n      });\n      primaryKeyField = languagesParam.languagesRow.nmenucode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Module\") {\n      URL = rsapi.post(\"language/getActiveModuleByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nmodulecode\": languagesParam.languagesRow.nmodulecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nmodulecode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Forms\") {\n      URL = rsapi.post(\"language/getActiveFormByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nformcode\": languagesParam.languagesRow.nformcode\n      });\n      primaryKeyField = languagesParam.languagesRow.nformcode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Transaction Status\") {\n      URL = rsapi.post(\"language/getActiveTransactionStatusByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ntranscode\": languagesParam.languagesRow.ntranscode\n      });\n      primaryKeyField = languagesParam.languagesRow.ntranscode;\n      jsondataKeys = Object.keys(languagesParam.languagesRow.jsondata);\n      fieldName = jsondataKeys;\n    } else if (languagesParam.masterData.headername == \"Control Master\") {\n      URL = rsapi.post(\"language/getActiveControlMasterByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ncontrolcode\": languagesParam.languagesRow.ncontrolcode\n      });\n      primaryKeyField = languagesParam.languagesRow.ncontrolcode;\n      fieldName = \"scontrolids\";\n    } else if (languagesParam.masterData.headername == \"Approval Sub Type\") {\n      URL = rsapi.post(\"language/getActiveApprovalSubTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"napprovalsubtypecode\": languagesParam.languagesRow.napprovalsubtypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.napprovalsubtypecode;\n      fieldName = \"approvalsubtypename\";\n    } else if (languagesParam.masterData.headername == \"Sample Type\") {\n      URL = rsapi.post(\"language/getActiveSampleTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nsampletypecode\": languagesParam.languagesRow.nsampletypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nsampletypecode;\n      fieldName = \"sampletypename\";\n    } else if (languagesParam.masterData.headername == \"Template Design\") {\n      URL = rsapi.post(\"language/getActiveTemplateTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ntemplatetypecode\": languagesParam.languagesRow.ntemplatetypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.ntemplatetypecode;\n      fieldName = \"stemplatetypename\";\n    } else if (languagesParam.masterData.headername == \"Period\") {\n      URL = rsapi.post(\"language/getActivePeriodByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nperiodcode\": languagesParam.languagesRow.nperiodcode\n      });\n      primaryKeyField = languagesParam.languagesRow.nperiodcode;\n      fieldName = \"speriodname\";\n    } else if (languagesParam.masterData.headername == \"Gender\") {\n      URL = rsapi.post(\"language/getActiveGenderByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ngendercode\": languagesParam.languagesRow.ngendercode\n      });\n      primaryKeyField = languagesParam.languagesRow.ngendercode;\n      fieldName = \"sgendername\";\n    } else if (languagesParam.masterData.headername == \"Grade\") {\n      URL = rsapi.post(\"language/getActiveGradeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ngradecode\": languagesParam.languagesRow.ngradecode\n      });\n      primaryKeyField = languagesParam.languagesRow.ngradecode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Scheduler Type\") {\n      URL = rsapi.post(\"language/getActiveSchedulerTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nschedulertypecode\": languagesParam.languagesRow.nschedulertypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nschedulertypecode;\n      fieldName = \"sschedulertypename\";\n    } else if (languagesParam.masterData.headername == \"Query Builder Tables\") {\n      URL = rsapi.post(\"language/getActiveQueryBuilderTablesByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nquerybuildertablecode\": languagesParam.languagesRow.nquerybuildertablecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nquerybuildertablecode;\n      fieldName = \"tablename\";\n    } else if (languagesParam.masterData.headername == \"Query Builder Views\") {\n      URL = rsapi.post(\"language/getActiveQueryBuilderViewsByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nquerybuilderviewscode\": languagesParam.languagesRow.nquerybuilderviewscode\n      });\n      primaryKeyField = languagesParam.languagesRow.nquerybuilderviewscode;\n      fieldName = \"displayname\";\n    } else if (languagesParam.masterData.headername == \"Query Builder Views Columns\") {\n      URL = rsapi.post(\"language/getActiveQueryBuilderViewsColumnsByID\", {\n        \"languagesParam\": languagesParam.languagesRow.jsondata.findIndex(item => item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\"),\n        \"userinfo\": languagesParam.userInfo,\n        \"sviewname\": languagesParam.languagesRow.sviewname\n      });\n      primaryKeyField = languagesParam.languagesRow.jsondata.findIndex(item => item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\");\n      findIndex = languagesParam.languagesRow.jsondata.findIndex(item => item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\");\n      fieldName = \"displayname\";\n    } else if (languagesParam.masterData.headername == \"Multilingual Masters\") {\n      URL = rsapi.post(\"language/getActiveMultilingualMastersByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nmultilingualmasterscode\": languagesParam.languagesRow.nmultilingualmasterscode\n      });\n      primaryKeyField = languagesParam.languagesRow.nmultilingualmasterscode;\n      fieldName = \"sdisplayname\";\n    } else if (languagesParam.masterData.headername == \"Material Type\") {\n      URL = rsapi.post(\"language/getActiveMaterialTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"nmaterialtypecode\": languagesParam.languagesRow.nmaterialtypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.nmaterialtypecode;\n      fieldName = \"smaterialtypename\";\n    } else if (languagesParam.masterData.headername == \"Interface Type\") {\n      URL = rsapi.post(\"language/getActiveInterfaceTypeByID\", {\n        \"languagesParam\": languagesParam.languagesRow.sdisplayname,\n        \"userinfo\": languagesParam.userInfo,\n        \"ninterfacetypecode\": languagesParam.languagesRow.ninterfacetypecode\n      });\n      primaryKeyField = languagesParam.languagesRow.ninterfacetypecode;\n      fieldName = \"sinterfacetypename\";\n    }\n\n    dispatch(initRequest(true));\n    Axios.all([URL]).then(response => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          selectedRecord: { ...languagesParam.selectedRecord,\n            ...response[0].data.sjsondata,\n            ...response[0].data,\n            ...response[0].data.jsondata,\n            fieldName,\n            selectedJsondata,\n            findIndex\n          },\n          operation: languagesParam.operation,\n          openModal: true,\n          screenName: languagesParam.screenName,\n          ncontrolcode: languagesParam.ncontrolCode,\n          loading: false,\n          selectedId: primaryKeyField,\n          data: undefined,\n          dataState: undefined\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function comboService(methodParam) {\n  return function (dispatch) {\n    let URL;\n    let needHeader;\n\n    if (methodParam.inputData.sdisplayname == \"Menu\") {\n      URL = rsapi.post(\"language/getMenuComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmenucode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Module\") {\n      URL = rsapi.post(\"language/getModuleComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmodulecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Forms\") {\n      URL = rsapi.post(\"language/getFormComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nformcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Transaction Status\") {\n      URL = rsapi.post(\"language/getTransactionStatusComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ntranscode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Control Master\") {\n      URL = rsapi.post(\"language/getControlMasterComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ncontrolcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Approval Sub Type\") {\n      URL = rsapi.post(\"language/getApprovalSubTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"napprovalsubtypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Sample Type\") {\n      URL = rsapi.post(\"language/getSampleTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nsampletypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Template Design\") {\n      URL = rsapi.post(\"language/getTemplateTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ntemplatetypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Period\") {\n      URL = rsapi.post(\"language/getPeriodComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nperiodcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Gender\") {\n      URL = rsapi.post(\"language/getGenderComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ngendercode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Grade\") {\n      URL = rsapi.post(\"language/getGradeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ngradecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Scheduler Type\") {\n      URL = rsapi.post(\"language/getSchedulerTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nschedulertypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Query Builder Tables\") {\n      URL = rsapi.post(\"language/getQueryBuilderTablesComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nquerybuildertablecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Query Builder Views\") {\n      URL = rsapi.post(\"language/getQueryBuilderViewsComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nquerybuilderviewscode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.sdisplayname == \"Query Builder Views Columns\" || methodParam.masterData.headername == \"Query Builder Views Columns\") {\n      URL = rsapi.post(\"language/getQueryBuilderViewsColumnsComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"sviewname\": methodParam.inputData.sdisplayname\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Material Config\") {\n      URL = rsapi.post(\"language/getMaterialConfigComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmaterialconfigcode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Multilingual Masters\") {\n      URL = rsapi.post(\"language/getMultilingualMastersComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmultilingualmasterscode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Material Type\") {\n      URL = rsapi.post(\"language/getMaterialTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"nmaterialtypecode\": methodParam.inputData.primarykey\n      });\n    } else if (methodParam.inputData.sdisplayname == \"Interface Type\") {\n      URL = rsapi.post(\"language/getInterfaceTypeComboService\", {\n        \"userinfo\": methodParam.userinfo,\n        \"ninterfacetypecode\": methodParam.inputData.primarykey\n      });\n    }\n\n    dispatch(initRequest(true));\n    Axios.all([URL]).then(response => {\n      let masterData;\n      const selectedRecord = methodParam.sdisplayname;\n      masterData = { ...methodParam.inputData.item,\n        ...response[0].data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          selectedRecord,\n          masterData,\n          loading: false,\n          data: undefined,\n          dataState: undefined\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/LanguagesAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","sortData","fetchById","languagesParam","dispatch","primaryKeyField","findIndex","fieldName","selectedJsondata","jsondataKeys","URL","masterData","headername","post","languagesRow","sdisplayname","userInfo","nmenucode","nmodulecode","nformcode","ntranscode","Object","keys","jsondata","ncontrolcode","napprovalsubtypecode","nsampletypecode","ntemplatetypecode","nperiodcode","ngendercode","ngradecode","nschedulertypecode","nquerybuildertablecode","nquerybuilderviewscode","item","displayname","slanguagetypecode","sviewname","nmultilingualmasterscode","nmaterialtypecode","ninterfacetypecode","all","then","response","type","payload","selectedRecord","data","sjsondata","operation","openModal","screenName","ncontrolCode","loading","selectedId","undefined","dataState","catch","error","status","message","warn","comboService","methodParam","needHeader","inputData","userinfo","primarykey"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios'\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData } from '../components/CommonScript';\r\n\r\nexport function fetchById(languagesParam) {\r\n    return function (dispatch) {\r\n        let primaryKeyField = 0;\r\n        let findIndex = 0;\r\n        let fieldName = \"\";\r\n        let selectedJsondata;\r\n        let jsondataKeys;\r\n        let URL;\r\n        if (languagesParam.masterData.headername == \"Menu\") {\r\n            URL = rsapi.post(\"language/getActiveMenuByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nmenucode\": languagesParam.languagesRow.nmenucode })\r\n            primaryKeyField = languagesParam.languagesRow.nmenucode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Module\") {\r\n            URL = rsapi.post(\"language/getActiveModuleByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nmodulecode\": languagesParam.languagesRow.nmodulecode })\r\n            primaryKeyField = languagesParam.languagesRow.nmodulecode\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Forms\") {\r\n            URL = rsapi.post(\"language/getActiveFormByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nformcode\": languagesParam.languagesRow.nformcode })\r\n            primaryKeyField = languagesParam.languagesRow.nformcode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Transaction Status\") {\r\n            URL = rsapi.post(\"language/getActiveTransactionStatusByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ntranscode\": languagesParam.languagesRow.ntranscode })\r\n            primaryKeyField = languagesParam.languagesRow.ntranscode;\r\n            jsondataKeys = Object.keys(languagesParam.languagesRow.jsondata)\r\n            fieldName = jsondataKeys;\r\n        } else if (languagesParam.masterData.headername == \"Control Master\") {\r\n            URL = rsapi.post(\"language/getActiveControlMasterByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ncontrolcode\": languagesParam.languagesRow.ncontrolcode })\r\n            primaryKeyField = languagesParam.languagesRow.ncontrolcode;\r\n            fieldName = \"scontrolids\";\r\n        } else if (languagesParam.masterData.headername == \"Approval Sub Type\") {\r\n            URL = rsapi.post(\"language/getActiveApprovalSubTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"napprovalsubtypecode\": languagesParam.languagesRow.napprovalsubtypecode })\r\n            primaryKeyField = languagesParam.languagesRow.napprovalsubtypecode;\r\n            fieldName = \"approvalsubtypename\";\r\n        } else if (languagesParam.masterData.headername == \"Sample Type\") {\r\n            URL = rsapi.post(\"language/getActiveSampleTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nsampletypecode\": languagesParam.languagesRow.nsampletypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nsampletypecode;\r\n            fieldName = \"sampletypename\";\r\n        } else if (languagesParam.masterData.headername == \"Template Design\") {\r\n            URL = rsapi.post(\"language/getActiveTemplateTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ntemplatetypecode\": languagesParam.languagesRow.ntemplatetypecode })\r\n            primaryKeyField = languagesParam.languagesRow.ntemplatetypecode;\r\n            fieldName = \"stemplatetypename\";\r\n        } else if (languagesParam.masterData.headername == \"Period\") {\r\n            URL = rsapi.post(\"language/getActivePeriodByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nperiodcode\": languagesParam.languagesRow.nperiodcode })\r\n            primaryKeyField = languagesParam.languagesRow.nperiodcode;\r\n            fieldName = \"speriodname\";\r\n        } else if (languagesParam.masterData.headername == \"Gender\") {\r\n            URL = rsapi.post(\"language/getActiveGenderByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ngendercode\": languagesParam.languagesRow.ngendercode })\r\n            primaryKeyField = languagesParam.languagesRow.ngendercode;\r\n            fieldName = \"sgendername\";\r\n        } else if (languagesParam.masterData.headername == \"Grade\") {\r\n            URL = rsapi.post(\"language/getActiveGradeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ngradecode\": languagesParam.languagesRow.ngradecode })\r\n            primaryKeyField = languagesParam.languagesRow.ngradecode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Scheduler Type\") {\r\n            URL = rsapi.post(\"language/getActiveSchedulerTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nschedulertypecode\": languagesParam.languagesRow.nschedulertypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nschedulertypecode;\r\n            fieldName = \"sschedulertypename\";\r\n        } else if (languagesParam.masterData.headername == \"Query Builder Tables\") {\r\n            URL = rsapi.post(\"language/getActiveQueryBuilderTablesByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nquerybuildertablecode\": languagesParam.languagesRow.nquerybuildertablecode })\r\n            primaryKeyField = languagesParam.languagesRow.nquerybuildertablecode;\r\n            fieldName = \"tablename\";\r\n        } else if (languagesParam.masterData.headername == \"Query Builder Views\") {\r\n            URL = rsapi.post(\"language/getActiveQueryBuilderViewsByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nquerybuilderviewscode\": languagesParam.languagesRow.nquerybuilderviewscode })\r\n            primaryKeyField = languagesParam.languagesRow.nquerybuilderviewscode;\r\n            fieldName = \"displayname\";\r\n        } else if (languagesParam.masterData.headername == \"Query Builder Views Columns\") {\r\n            URL = rsapi.post(\"language/getActiveQueryBuilderViewsColumnsByID\", { \"languagesParam\": languagesParam.languagesRow.jsondata.findIndex((item) => (item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\")), \"userinfo\": languagesParam.userInfo, \"sviewname\": languagesParam.languagesRow.sviewname })\r\n            primaryKeyField = languagesParam.languagesRow.jsondata.findIndex((item) => (item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\"));\r\n            findIndex = languagesParam.languagesRow.jsondata.findIndex((item) => (item.displayname[languagesParam.userInfo.slanguagetypecode] == languagesParam.languagesRow.sdisplayname ? item : \"\"));\r\n            fieldName = \"displayname\";\r\n        } else if (languagesParam.masterData.headername == \"Multilingual Masters\") {\r\n            URL = rsapi.post(\"language/getActiveMultilingualMastersByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nmultilingualmasterscode\": languagesParam.languagesRow.nmultilingualmasterscode })\r\n            primaryKeyField = languagesParam.languagesRow.nmultilingualmasterscode;\r\n            fieldName = \"sdisplayname\";\r\n        } else if (languagesParam.masterData.headername == \"Material Type\") {\r\n            URL = rsapi.post(\"language/getActiveMaterialTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"nmaterialtypecode\": languagesParam.languagesRow.nmaterialtypecode })\r\n            primaryKeyField = languagesParam.languagesRow.nmaterialtypecode;\r\n            fieldName = \"smaterialtypename\";\r\n        } else if (languagesParam.masterData.headername == \"Interface Type\") {\r\n            URL = rsapi.post(\"language/getActiveInterfaceTypeByID\", { \"languagesParam\": languagesParam.languagesRow.sdisplayname, \"userinfo\": languagesParam.userInfo, \"ninterfacetypecode\": languagesParam.languagesRow.ninterfacetypecode })\r\n            primaryKeyField = languagesParam.languagesRow.ninterfacetypecode;\r\n            fieldName = \"sinterfacetypename\";\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        selectedRecord: {\r\n                            ...languagesParam.selectedRecord,\r\n                            ...response[0].data.sjsondata,\r\n                            ...response[0].data,\r\n                            ...response[0].data.jsondata, fieldName,\r\n                            selectedJsondata,\r\n                            findIndex\r\n                        },\r\n\r\n                        operation: languagesParam.operation,\r\n                        openModal: true,\r\n                        screenName: languagesParam.screenName,\r\n                        ncontrolcode: languagesParam.ncontrolCode,\r\n                        loading: false, selectedId: primaryKeyField,\r\n                        data: undefined, dataState: undefined,\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function comboService(methodParam) {\r\n    return function (dispatch) {\r\n        let URL;\r\n        let needHeader;\r\n        if (methodParam.inputData.sdisplayname == \"Menu\") {\r\n            URL = rsapi.post(\"language/getMenuComboService\", { \"userinfo\": methodParam.userinfo, \"nmenucode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Module\") {\r\n            URL = rsapi.post(\"language/getModuleComboService\", { \"userinfo\": methodParam.userinfo, \"nmodulecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Forms\") {\r\n            URL = rsapi.post(\"language/getFormComboService\", { \"userinfo\": methodParam.userinfo, \"nformcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Transaction Status\") {\r\n            URL = rsapi.post(\"language/getTransactionStatusComboService\", { \"userinfo\": methodParam.userinfo, \"ntranscode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Control Master\") {\r\n            URL = rsapi.post(\"language/getControlMasterComboService\", { \"userinfo\": methodParam.userinfo, \"ncontrolcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Approval Sub Type\") {\r\n            URL = rsapi.post(\"language/getApprovalSubTypeComboService\", { \"userinfo\": methodParam.userinfo, \"napprovalsubtypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Sample Type\") {\r\n            URL = rsapi.post(\"language/getSampleTypeComboService\", { \"userinfo\": methodParam.userinfo, \"nsampletypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Template Design\") {\r\n            URL = rsapi.post(\"language/getTemplateTypeComboService\", { \"userinfo\": methodParam.userinfo, \"ntemplatetypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Period\") {\r\n            URL = rsapi.post(\"language/getPeriodComboService\", { \"userinfo\": methodParam.userinfo, \"nperiodcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Gender\") {\r\n            URL = rsapi.post(\"language/getGenderComboService\", { \"userinfo\": methodParam.userinfo, \"ngendercode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Grade\") {\r\n            URL = rsapi.post(\"language/getGradeComboService\", { \"userinfo\": methodParam.userinfo, \"ngradecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Scheduler Type\") {\r\n            URL = rsapi.post(\"language/getSchedulerTypeComboService\", { \"userinfo\": methodParam.userinfo, \"nschedulertypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Query Builder Tables\") {\r\n            URL = rsapi.post(\"language/getQueryBuilderTablesComboService\", { \"userinfo\": methodParam.userinfo, \"nquerybuildertablecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Query Builder Views\") {\r\n            URL = rsapi.post(\"language/getQueryBuilderViewsComboService\", { \"userinfo\": methodParam.userinfo, \"nquerybuilderviewscode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if ((methodParam.sdisplayname == \"Query Builder Views Columns\" || methodParam.masterData.headername == \"Query Builder Views Columns\")) {\r\n            URL = rsapi.post(\"language/getQueryBuilderViewsColumnsComboService\", { \"userinfo\": methodParam.userinfo, \"sviewname\": methodParam.inputData.sdisplayname })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Material Config\") {\r\n            URL = rsapi.post(\"language/getMaterialConfigComboService\", { \"userinfo\": methodParam.userinfo, \"nmaterialconfigcode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Multilingual Masters\") {\r\n            URL = rsapi.post(\"language/getMultilingualMastersComboService\", { \"userinfo\": methodParam.userinfo, \"nmultilingualmasterscode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Material Type\") {\r\n            URL = rsapi.post(\"language/getMaterialTypeComboService\", { \"userinfo\": methodParam.userinfo, \"nmaterialtypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        else if (methodParam.inputData.sdisplayname == \"Interface Type\") {\r\n            URL = rsapi.post(\"language/getInterfaceTypeComboService\", { \"userinfo\": methodParam.userinfo, \"ninterfacetypecode\": methodParam.inputData.primarykey })\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL])\r\n            .then(response => {\r\n                let masterData;\r\n                const selectedRecord = methodParam.sdisplayname;\r\n                masterData = {\r\n                    ...methodParam.inputData.item,\r\n                    ...response[0].data\r\n                };\r\n                sortData(masterData)\r\n                dispatch({ type: DEFAULT_RETURN, payload: { selectedRecord, masterData, loading: false, data: undefined, dataState: undefined } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}