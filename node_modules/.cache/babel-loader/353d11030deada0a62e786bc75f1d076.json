{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\basemaster\\\\AddSample.jsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport '@progress/kendo-react-animation';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst AddSample = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SAMPLE\"\n    }),\n    name: \"ssamplearno\",\n    type: \"text\",\n    onChange: event => props.onInputChange(event),\n    onKeyUp: event => props.onKeyUp(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SAMPLE\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"ssamplearno\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }))), props.isneedSubSampleQty === true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nsampleqty\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SAMPLEQTY\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nsampleqty\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SAMPLEQTY\"\n    }),\n    strict: true,\n    min: 0,\n    maxLength: 11,\n    onChange: value => props.onNumericInputChange(value, \"nsampleqty\"),\n    noStyle: true,\n    precision: 2,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nunitcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_UNIT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.unitMaster,\n    value: props.selectedRecord[\"nunitcode\"],\n    isMandatory: false,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nunitcode', 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  })))) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default injectIntl(AddSample);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/basemaster/AddSample.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormNumericInput","FormSelectSearch","AddSample","props","intl","formatMessage","id","event","onInputChange","onKeyUp","selectedRecord","isneedSubSampleQty","value","onNumericInputChange","unitMaster","onComboChange"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\n\r\nconst AddSample = (props) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={12}>\r\n          <FormInput\r\n            label={props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n            name={\"ssamplearno\"}\r\n            type=\"text\"\r\n            onChange={(event) => props.onInputChange(event)}\r\n            onKeyUp={(event) => props.onKeyUp(event)}\r\n            placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n            value={props.selectedRecord ? props.selectedRecord[\"ssamplearno\"] : \"\"}\r\n            isMandatory={true}\r\n            required={true}\r\n            maxLength={\"50\"}\r\n          />\r\n        </Col>\r\n\r\n      </Row>\r\n      {props.isneedSubSampleQty === true ?\r\n        <>\r\n          < Row >\r\n            <Col md={6}>\r\n              <FormNumericInput\r\n                name={\"nsampleqty\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_SAMPLEQTY\" })}\r\n                type=\"number\"\r\n                value={props.selectedRecord[\"nsampleqty\"]}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLEQTY\" })}\r\n                strict={true}\r\n                min={0}\r\n                maxLength={11}\r\n                onChange={(value) => props.onNumericInputChange(value, \"nsampleqty\")}\r\n                noStyle={true}\r\n                precision={2}\r\n                className=\"form-control\"\r\n                errors=\"Please provide a valid number.\"\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormSelectSearch\r\n                name={\"nunitcode\"}\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                options={props.unitMaster}\r\n                value={props.selectedRecord[\"nunitcode\"]}\r\n                isMandatory={false}\r\n                isClearable={false}\r\n                isMulti={false}\r\n                isSearchable={true}\r\n                isDisabled={false}\r\n                closeMenuOnSelect={true}\r\n                onChange={(event) => props.onComboChange(event, 'nunitcode', 0)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n        :\r\n        <></>\r\n      }\r\n\r\n    </>)\r\n}\r\nexport default injectIntl(AddSample);\r\n"]},"metadata":{},"sourceType":"module"}