{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{DEFAULT_RETURN,UPDATE_LANGUAGE,REQUEST_INIT}from'./LoginTypes';import rsapi from\"../rsapi\";import{intl}from'../components/App';import{toast}from'react-toastify';import{constructjsonOptionList,constructOptionList,rearrangeDateFormat}from'../components/CommonScript';import{getHomeDashBoard}from'./DashBoardTypeAction';import{getListStaticDashBoard}from'./StaticDashBoardAction';import{getListAlert}from'./AlertViewAction';import{getRandomColor}from'../components/header/headerutils';export var initRequest=function initRequest(loading){return{type:REQUEST_INIT,payload:loading};};export var navPage=function navPage(data){return function(dispatch){dispatch({type:DEFAULT_RETURN,payload:{navigation:data}});};};export var changeLanguage=function changeLanguage(language,selectedRecord,loginType){return function(dispatch){var loginTypeMap=constructjsonOptionList(loginType||[],\"nlogintypecode\",\"sdisplayname\",false,false,true,undefined,'jsondata',true,language);dispatch({type:UPDATE_LANGUAGE,payload:_defineProperty({language:language,selectedRecord:selectedRecord,loginTypeList:loginTypeMap.get(\"OptionList\")},\"selectedRecord\",_objectSpread(_objectSpread({},selectedRecord),{},{nlogintypecode:loginTypeMap.get(\"DefaultValue\")?loginTypeMap.get(\"DefaultValue\"):\"\"}))});};};export var clickOnLoginButton=function clickOnLoginButton(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputData.url,inputData).then(function(response){var returnStr=response.data[\"rtn\"];if(returnStr.toUpperCase()===\"SUCCESS\"){var responseData=response.data;var PassFlag=responseData.PassFlag;dispatch({type:DEFAULT_RETURN,payload:{openCPModal:response.data.PassFlag===6||PassFlag===55?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:PassFlag===6?\"IDS_CREATEPASSWORD\":PassFlag===55?\"IDS_CHANGEPASSWORD\":\"\",PassFlag:PassFlag,userInfo:{nlogintypecode:inputData.nlogintypecode}}});if(responseData.PassFlag!==6&&responseData.PassFlag!==55){var inputParam={userInfo:responseData.UserInfo,menuDesign:responseData.MenuDesign,navigation:inputData.navigation,userRoleControlRights:responseData.UserRoleControlRights,userFormControlProperties:responseData.UserFormControlproperties,transactionValidation:responseData.TransactionValidation,displayName:\"\",userMultiRole:responseData.UserMultiRole,settings:responseData.Settings,sdmselnsettings:responseData.SDMSELNSettings,deputyUser:response.data.DeputyUser,deputyUserRole:response.data.DeputyUserRole,isDeputyLogin:false,loading:false,userImagePath:responseData.UserImagePath,//profileColor: \"#002699\",\nprofileColor:responseData.UserImagePath===\"\"?getRandomColor([240,360],[90,100],[0,95],[1,1]):\"#ff0000\",idleneed:true};dispatch({type:DEFAULT_RETURN,payload:inputParam});dispatch(getListStaticDashBoard(responseData.UserInfo,1));// dispatch(getHomeDashBoard(responseData.UserInfo, 0, false));\ndispatch(getListAlert(responseData.UserInfo,true));if(responseData.PasswordAlertDay){toast.info(intl.formatMessage({id:\"IDS_PASSWORDEXPIRY\"})+\" \"+responseData.PasswordAlertDay+\" \"+intl.formatMessage({id:\"IDS_DAY\"}));}}}else{toast.warn(intl.formatMessage({id:returnStr}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var submitChangeRole=function submitChangeRole(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getuserscreenrightsmenu\",inputParam).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{userInfo:response.data.UserInfo,menuDesign:response.data.MenuDesign,userRoleControlRights:response.data.UserRoleControlRights,userMultiRole:response.data.UserMultiRole,deputyUser:response.data.DeputyUser,deputyUserRole:response.data.DeputyUserRole,loading:false,masterData:[],displayName:\"\",navigation:\"home\",inputParam:{},openRoleBox:false}});dispatch(getListStaticDashBoard(response.data.UserInfo,1));dispatch(getHomeDashBoard(response.data.UserInfo,0,false));dispatch(getListAlert(response.data.UserInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var updateStore=function updateStore(updateInfo){return function(dispatch){if(updateInfo.data.loadEsign===true){dispatch(initRequest(true));rsapi.post(\"/timezone/getLocalTimeByZone\",{\"userinfo\":updateInfo.data.screenData.inputParam.inputData.userinfo}).then(function(response){dispatch({type:updateInfo.typeName,payload:_objectSpread(_objectSpread({serverTime:rearrangeDateFormat(updateInfo.data.screenData.inputParam.inputData.userinfo,response.data)},updateInfo.data),{},{masterStatus:\"\",errorCode:undefined,loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});}else{dispatch({type:updateInfo.typeName,payload:_objectSpread(_objectSpread({},updateInfo.data),{},{masterStatus:\"\",errorCode:undefined})});}};};export var getChangeUserRole=function getChangeUserRole(userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getchangerole\",{\"userinfo\":userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},response.data),{},{loading:false})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getLoginDetails=function getLoginDetails(){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getloginInfo\",{}).then(function(response){// let loginType = [];\n// response.data.LoginType.map(type => {\n//     loginType\n// })\nvar languageMap=constructOptionList(response.data.Language||[],\"slanguagetypecode\",\"slanguagename\",false,false,true);var defaultLanguage=languageMap.get(\"DefaultValue\")?languageMap.get(\"DefaultValue\"):undefined;var languageCode=defaultLanguage?defaultLanguage.value:\"en-US\";var loginTypeMap=constructjsonOptionList(response.data.LoginType||[],\"nlogintypecode\",\"sdisplayname\",false,false,true,undefined,'jsondata',true,languageCode);dispatch({type:DEFAULT_RETURN,payload:{loginTypes:response.data.LoginType,loginTypeList:loginTypeMap.get(\"OptionList\"),languageList:languageMap.get(\"OptionList\"),selectedRecord:{nlogintypecode:loginTypeMap.get(\"DefaultValue\")?loginTypeMap.get(\"DefaultValue\"):\"\",nlanguagecode:defaultLanguage||\"\"},language:defaultLanguage.value,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getUserSiteAndRole=function getUserSiteAndRole(inputParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getloginvalidation\",_objectSpread({},inputParam)).then(function(response){var roleMap=constructOptionList(response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");var siteMap=constructOptionList(response.data.Site||[],\"nusersitecode\",\"ssitename\",false,false,true,\"ndefaultsite\");var loggeInLoginTypeCode=response.data.Users.nlogintypecode;var logintypecode=inputParam.logintype.filter(function(x){return x.value===loggeInLoginTypeCode;});if(inputParam.logintype.length>0&&logintypecode.length===0){logintypecode=inputParam.logintype;loggeInLoginTypeCode=logintypecode[0].value;}dispatch({type:DEFAULT_RETURN,payload:{loginUserRole:roleMap.get(\"OptionList\"),loginUserSite:siteMap.get(\"OptionList\"),selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\",nusersitecode:siteMap.get(\"DefaultValue\")?siteMap.get(\"DefaultValue\"):siteMap.get(\"OptionList\")?siteMap.get(\"OptionList\")[0]:\"\",nusercode:response.data.Users.nusercode,nlogintypecode:logintypecode?logintypecode[0]:\"\"}),openCPModal:response.data.PassFlag===6?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:\"IDS_CREATEPASSWORD\",loading:false,PassFlag:response.data.PassFlag,createPwdRecord:{},userInfo:{nlogintypecode:loggeInLoginTypeCode}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:[],loginUserSite:[],selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusermultirolecode:\"\",nusersitecode:\"\"})}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var createPassword=function createPassword(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/createnewpassword\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,createPwdRecord:{}}});toast.success(intl.formatMessage({id:\"IDS_PASSWORDCREATEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var changepassword=function changepassword(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/changepassword\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:false,loading:false,createPwdRecord:{},navigation:\"login\"}});toast.success(intl.formatMessage({id:\"IDS_PASSWORDCHANGEDSUCCESSFULLY\"}));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var getPassWordPolicy=function getPassWordPolicy(nuserrolecode){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getPassWordPolicy\",{nuserrolecode:nuserrolecode}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openCPModal:true,loading:false,createPwdRecord:{},screenName:\"IDS_CHANGEPASSWORD\",passwordPolicy:response.data.PasswordPolicy}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var changeOwner=function changeOwner(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/changeOwner\",_objectSpread({},inputData)).then(function(response){var responseData=response.data;var inputParam={userInfo:responseData.UserInfo,menuDesign:responseData.MenuDesign,userRoleControlRights:responseData.UserRoleControlRights,userFormControlProperties:responseData.UserFormControlproperties,transactionValidation:responseData.TransactionValidation,displayName:\"\",userMultiRole:responseData.UserMultiRole,isDeputyLogin:true,// settings: responseData.Settings,\n// deputyUser: response.data.DeputyUser,\n// deputyUserRole: response.data.DeputyUserRole,\nloading:false,masterData:[],navigation:\"home\",inputParam:{},openRoleBox:false,userImagePath:responseData.UserImagePath,profileColor:responseData.UserImagePath===\"\"?getRandomColor([240,360],[90,100],[0,95],[1,1]):\"#ff0000\",idleneed:true};dispatch({type:DEFAULT_RETURN,payload:inputParam});dispatch(getListStaticDashBoard(response.data.UserInfo,1));dispatch(getHomeDashBoard(response.data.UserInfo,0,false));dispatch(getListAlert(response.data.UserInfo));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export var logOutAuditAction=function logOutAuditAction(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post('login/insertAuditAction',_objectSpread(_objectSpread({},inputData),{},{nFlag:2})).then(function(response){dispatch(navPage(\"login\"));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var elnLoginAction=function elnLoginAction(inputParam,serverUrl,uiUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(serverUrl,_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(response!==null&&response.data.objResponse!==null){if(response.data.objResponse.status){if(uiUrl){var user=response;var elnURL=uiUrl+\"#\"+user.data.username+\"$\"+user.data.password;window.open(elnURL,'_blank');}else{toast.info(intl.FormattedMessage({id:\"IDS_ELNUIURLNOTAVAILABLE\"}));}}else{toast.info(response.data.objResponse.information);}// if(!$(\"#appsdetails\").is(\":hidden\")){\n//     $('#appsdetails').addClass(\"dp-none\");\n// }\n};}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var sdmsLoginAction=function sdmsLoginAction(inputParam,serverUrl,sdmsUIUrl){return function(dispatch){dispatch(initRequest(true));rsapi.post(serverUrl,_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(response!==null&&response.data.status){if(response.data.status){var sdmsURL=sdmsUIUrl+\"?un=\"+response.data.username+\"&pd=\"+response.data.password+\"&sc=\"+inputParam.sSiteCode;window.open(sdmsURL,'_blank');}else{toast.info(response.Message);}}else{toast.info(intl.FormattedMessage({id:\"IDS_CHECKSYNCSERVICE\"}));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var getUsersiteRole=function getUsersiteRole(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post('login/changeSite',{\"usersSite\":inputParam.selectedRecord.nusersitecode.item}).then(function(response){var roleMap=constructOptionList(response.data.UserMultiRole||[],\"nusermultirolecode\",\"suserrolename\",false,false,true,\"ndefaultrole\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,loginUserRole:roleMap.get(\"OptionList\"),selectedRecord:_objectSpread(_objectSpread({},inputParam.selectedRecord),{},{nusermultirolecode:roleMap.get(\"DefaultValue\")?roleMap.get(\"DefaultValue\"):roleMap.get(\"OptionList\")?roleMap.get(\"OptionList\")[0]:\"\"})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export var checkPassword=function checkPassword(inputParam,selectedRecord){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/login/getlogintypevalidation\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{nusercode:response.data.Users.nusercode}),userInfo:{nlogintypecode:inputParam.nlogintypecode},openCPModal:response.data.PassFlag===6?true:false,passwordPolicy:response.data.PasswordPolicy,screenName:\"IDS_CREATEPASSWORD\",loading:false,PassFlag:response.data.PassFlag,createPwdRecord:{}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/LoginAction.js"],"names":["DEFAULT_RETURN","UPDATE_LANGUAGE","REQUEST_INIT","rsapi","intl","toast","constructjsonOptionList","constructOptionList","rearrangeDateFormat","getHomeDashBoard","getListStaticDashBoard","getListAlert","getRandomColor","initRequest","loading","type","payload","navPage","data","dispatch","navigation","changeLanguage","language","selectedRecord","loginType","loginTypeMap","undefined","loginTypeList","get","nlogintypecode","clickOnLoginButton","inputData","post","url","then","response","returnStr","toUpperCase","responseData","PassFlag","openCPModal","passwordPolicy","PasswordPolicy","screenName","userInfo","inputParam","UserInfo","menuDesign","MenuDesign","userRoleControlRights","UserRoleControlRights","userFormControlProperties","UserFormControlproperties","transactionValidation","TransactionValidation","displayName","userMultiRole","UserMultiRole","settings","Settings","sdmselnsettings","SDMSELNSettings","deputyUser","DeputyUser","deputyUserRole","DeputyUserRole","isDeputyLogin","userImagePath","UserImagePath","profileColor","idleneed","PasswordAlertDay","info","formatMessage","id","warn","catch","error","status","message","submitChangeRole","masterData","openRoleBox","updateStore","updateInfo","loadEsign","screenData","userinfo","typeName","serverTime","masterStatus","errorCode","getChangeUserRole","getLoginDetails","languageMap","Language","defaultLanguage","languageCode","value","LoginType","loginTypes","languageList","nlanguagecode","getUserSiteAndRole","roleMap","siteMap","Site","loggeInLoginTypeCode","Users","logintypecode","logintype","filter","x","length","loginUserRole","loginUserSite","nusermultirolecode","nusersitecode","nusercode","createPwdRecord","createPassword","success","changepassword","getPassWordPolicy","nuserrolecode","changeOwner","logOutAuditAction","nFlag","elnLoginAction","serverUrl","uiUrl","objResponse","user","elnURL","username","password","window","open","FormattedMessage","information","sdmsLoginAction","sdmsUIUrl","sdmsURL","sSiteCode","Message","getUsersiteRole","item","checkPassword"],"mappings":"qUAAA,OACIA,cADJ,CAEIC,eAFJ,CAGIC,YAHJ,KAIO,cAJP,CAKA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,OACIC,IADJ,KAEO,mBAFP,CAGA,OACIC,KADJ,KAEO,gBAFP,CAGA,OACIC,uBADJ,CAEIC,mBAFJ,CAEyBC,mBAFzB,KAGO,4BAHP,CAIA,OACIC,gBADJ,KAEO,uBAFP,CAGA,OACIC,sBADJ,KAEO,yBAFP,CAGA,OACIC,YADJ,KAEO,mBAFP,CAGA,OACIC,cADJ,KAEO,kCAFP,CAIA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAa,CACpC,MAAO,CACHC,IAAI,CAAEb,YADH,CAEHc,OAAO,CAAEF,OAFN,CAAP,CAIH,CALM,CAOP,MAAO,IAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,QAAU,UAAAC,QAAQ,CAAI,CACzCA,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLI,UAAU,CAAEF,IADP,CAFJ,CAAD,CAAR,CAMH,CAPsB,EAAhB,CASP,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,CAAWC,cAAX,CAA2BC,SAA3B,QAAyC,UAACL,QAAD,CAAc,CACjF,GAAMM,CAAAA,YAAY,CAAGnB,uBAAuB,CAACkB,SAAS,EAAI,EAAd,CAAkB,gBAAlB,CACxC,cADwC,CACxB,KADwB,CACjB,KADiB,CACV,IADU,CACJE,SADI,CACO,UADP,CACmB,IADnB,CACyBJ,QADzB,CAA5C,CAEAH,QAAQ,CAAC,CACLJ,IAAI,CAAEd,eADD,CAELe,OAAO,kBACHM,QAAQ,CAARA,QADG,CAEHC,cAAc,CAAdA,cAFG,CAGHI,aAAa,CAAEF,YAAY,CAACG,GAAb,CAAiB,YAAjB,CAHZ,kDAKIL,cALJ,MAMCM,cAAc,CAAEJ,YAAY,CAACG,GAAb,CAAiB,cAAjB,EAAmCH,YAAY,CAACG,GAAb,CAAiB,cAAjB,CAAnC,CAAsE,EANvF,GAFF,CAAD,CAAR,CAYH,CAf6B,EAAvB,CAiBP,MAAO,IAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,SAAD,CAAe,CAC7C,MAAO,UAACZ,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAWD,SAAS,CAACE,GAArB,CAA0BF,SAA1B,EACKG,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAMC,CAAAA,SAAS,CAAGD,QAAQ,CAACjB,IAAT,CAAc,KAAd,CAAlB,CACA,GAAIkB,SAAS,CAACC,WAAV,KAA4B,SAAhC,CAA2C,CACvC,GAAMC,CAAAA,YAAY,CAAGH,QAAQ,CAACjB,IAA9B,CACA,GAAMqB,CAAAA,QAAQ,CAAGD,YAAY,CAACC,QAA9B,CACApB,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLwB,WAAW,CAAEL,QAAQ,CAACjB,IAAT,CAAcqB,QAAd,GAA2B,CAA3B,EAAgCA,QAAQ,GAAK,EAA7C,CAAkD,IAAlD,CAAyD,KADjE,CAELE,cAAc,CAAEN,QAAQ,CAACjB,IAAT,CAAcwB,cAFzB,CAGLC,UAAU,CAAEJ,QAAQ,GAAK,CAAb,CAAiB,oBAAjB,CAAwCA,QAAQ,GAAK,EAAb,CAAkB,oBAAlB,CAAyC,EAHxF,CAILA,QAAQ,CAARA,QAJK,CAKLK,QAAQ,CAAE,CACNf,cAAc,CAAEE,SAAS,CAACF,cADpB,CALL,CAFJ,CAAD,CAAR,CAYA,GAAIS,YAAY,CAACC,QAAb,GAA0B,CAA1B,EAA+BD,YAAY,CAACC,QAAb,GAA0B,EAA7D,CAAiE,CAC7D,GAAMM,CAAAA,UAAU,CAAG,CACfD,QAAQ,CAAEN,YAAY,CAACQ,QADR,CAEfC,UAAU,CAAET,YAAY,CAACU,UAFV,CAGf5B,UAAU,CAAEW,SAAS,CAACX,UAHP,CAIf6B,qBAAqB,CAAEX,YAAY,CAACY,qBAJrB,CAKfC,yBAAyB,CAAEb,YAAY,CAACc,yBALzB,CAMfC,qBAAqB,CAAEf,YAAY,CAACgB,qBANrB,CAOfC,WAAW,CAAE,EAPE,CAQfC,aAAa,CAAElB,YAAY,CAACmB,aARb,CASfC,QAAQ,CAAEpB,YAAY,CAACqB,QATR,CAUfC,eAAe,CAAEtB,YAAY,CAACuB,eAVf,CAWfC,UAAU,CAAE3B,QAAQ,CAACjB,IAAT,CAAc6C,UAXX,CAYfC,cAAc,CAAE7B,QAAQ,CAACjB,IAAT,CAAc+C,cAZf,CAafC,aAAa,CAAE,KAbA,CAcfpD,OAAO,CAAE,KAdM,CAefqD,aAAa,CAAE7B,YAAY,CAAC8B,aAfb,CAgBf;AACAC,YAAY,CAAE/B,YAAY,CAAC8B,aAAb,GAA+B,EAA/B,CAAoCxD,cAAc,CAAC,CAAC,GAAD,CAAM,GAAN,CAAD,CAAa,CAAC,EAAD,CAAK,GAAL,CAAb,CAAwB,CAAC,CAAD,CAAI,EAAJ,CAAxB,CAAiC,CAAC,CAAD,CAAI,CAAJ,CAAjC,CAAlD,CAA6F,SAjB5F,CAkBf0D,QAAQ,CAAE,IAlBK,CAAnB,CAoBAnD,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE6B,UAFJ,CAAD,CAAR,CAKA1B,QAAQ,CAACT,sBAAsB,CAAC4B,YAAY,CAACQ,QAAd,CAAwB,CAAxB,CAAvB,CAAR,CACA;AACA3B,QAAQ,CAACR,YAAY,CAAC2B,YAAY,CAACQ,QAAd,CAAwB,IAAxB,CAAb,CAAR,CACA,GAAIR,YAAY,CAACiC,gBAAjB,CAAmC,CAC/BlE,KAAK,CAACmE,IAAN,CAAWpE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAE,oBADsB,CAAnB,EAEN,GAFM,CAEApC,YAAY,CAACiC,gBAFb,CAEgC,GAFhC,CAEsCnE,IAAI,CAACqE,aAAL,CAAmB,CAChEC,EAAE,CAAE,SAD4D,CAAnB,CAFjD,EAKH,CACJ,CACJ,CApDD,IAoDO,CACHrE,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEtC,SADsB,CAAnB,CAAX,EAGH,CACJ,CA5DL,EA6DKwC,KA7DL,CA6DW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CA7EL,EA8EH,CAhFD,CAiFH,CAlFM,CAoFP,MAAO,IAAM8D,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACnC,UAAD,CAAgB,CAC5C,MAAO,UAAC1B,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,gCAAX,CAA6Ca,UAA7C,EACKX,IADL,CACU,SAAAC,QAAQ,CAAI,CACdhB,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACL4B,QAAQ,CAAET,QAAQ,CAACjB,IAAT,CAAc4B,QADnB,CAELC,UAAU,CAAEZ,QAAQ,CAACjB,IAAT,CAAc8B,UAFrB,CAGLC,qBAAqB,CAAEd,QAAQ,CAACjB,IAAT,CAAcgC,qBAHhC,CAILM,aAAa,CAAErB,QAAQ,CAACjB,IAAT,CAAcuC,aAJxB,CAKLK,UAAU,CAAE3B,QAAQ,CAACjB,IAAT,CAAc6C,UALrB,CAMLC,cAAc,CAAE7B,QAAQ,CAACjB,IAAT,CAAc+C,cANzB,CAOLnD,OAAO,CAAE,KAPJ,CAQLmE,UAAU,CAAE,EARP,CASL1B,WAAW,CAAE,EATR,CAULnC,UAAU,CAAE,MAVP,CAWLyB,UAAU,CAAE,EAXP,CAYLqC,WAAW,CAAE,KAZR,CAFJ,CAAD,CAAR,CAiBA/D,QAAQ,CAACT,sBAAsB,CAACyB,QAAQ,CAACjB,IAAT,CAAc4B,QAAf,CAAyB,CAAzB,CAAvB,CAAR,CACA3B,QAAQ,CAACV,gBAAgB,CAAC0B,QAAQ,CAACjB,IAAT,CAAc4B,QAAf,CAAyB,CAAzB,CAA4B,KAA5B,CAAjB,CAAR,CACA3B,QAAQ,CAACR,YAAY,CAACwB,QAAQ,CAACjB,IAAT,CAAc4B,QAAf,CAAb,CAAR,CACH,CAtBL,EAuBK8B,KAvBL,CAuBW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CAvCL,EAwCH,CA1CD,CA2CH,CA5CM,CA8CP,MAAO,IAAMiE,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,UAAD,QAAgB,UAAAjE,QAAQ,CAAI,CACnD,GAAIiE,UAAU,CAAClE,IAAX,CAAgBmE,SAAhB,GAA8B,IAAlC,CAAwC,CACpClE,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,8BAAX,CAA2C,CACvC,WAAYoD,UAAU,CAAClE,IAAX,CAAgBoE,UAAhB,CAA2BzC,UAA3B,CAAsCd,SAAtC,CAAgDwD,QADrB,CAA3C,EAGKrD,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdhB,QAAQ,CAAC,CACLJ,IAAI,CAAEqE,UAAU,CAACI,QADZ,CAELxE,OAAO,8BACHyE,UAAU,CAAEjF,mBAAmB,CAAC4E,UAAU,CAAClE,IAAX,CAAgBoE,UAAhB,CAA2BzC,UAA3B,CAAsCd,SAAtC,CAAgDwD,QAAjD,CAA2DpD,QAAQ,CAACjB,IAApE,CAD5B,EAEAkE,UAAU,CAAClE,IAFX,MAGHwE,YAAY,CAAE,EAHX,CAIHC,SAAS,CAAEjE,SAJR,CAKHZ,OAAO,CAAE,KALN,EAFF,CAAD,CAAR,CAUH,CAdL,EAeK8D,KAfL,CAeW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CA/BL,EAgCH,CAlCD,IAkCO,CACHC,QAAQ,CAAC,CACLJ,IAAI,CAAEqE,UAAU,CAACI,QADZ,CAELxE,OAAO,gCACAoE,UAAU,CAAClE,IADX,MAEHwE,YAAY,CAAE,EAFX,CAGHC,SAAS,CAAEjE,SAHR,EAFF,CAAD,CAAR,CAQH,CACJ,CA7C0B,EAApB,CA+CP,MAAO,IAAMkE,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAChD,QAAD,CAAc,CAC3C,MAAO,UAACzB,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,sBAAX,CAAmC,CAC/B,WAAYY,QADmB,CAAnC,EAGKV,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdhB,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,gCACAmB,QAAQ,CAACjB,IADT,MAEHJ,OAAO,CAAE,KAFN,EAFF,CAAD,CAAR,CAOH,CAXL,EAYK8D,KAZL,CAYW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CA5BL,EA6BH,CA/BD,CAgCH,CAjCM,CAmCP,MAAO,IAAM2E,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACjC,MAAO,UAAC1E,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,qBAAX,CAAkC,EAAlC,EACKE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd;AACA;AACA;AACA;AACA,GAAM2D,CAAAA,WAAW,CAAGvF,mBAAmB,CAAC4B,QAAQ,CAACjB,IAAT,CAAc6E,QAAd,EAA0B,EAA3B,CAA+B,mBAA/B,CAAoD,eAApD,CAAqE,KAArE,CAA4E,KAA5E,CAAmF,IAAnF,CAAvC,CACA,GAAIC,CAAAA,eAAe,CAAGF,WAAW,CAAClE,GAAZ,CAAgB,cAAhB,EAAkCkE,WAAW,CAAClE,GAAZ,CAAgB,cAAhB,CAAlC,CAAoEF,SAA1F,CACA,GAAIuE,CAAAA,YAAY,CAAGD,eAAe,CAAGA,eAAe,CAACE,KAAnB,CAA2B,OAA7D,CACA,GAAMzE,CAAAA,YAAY,CAAGnB,uBAAuB,CAAC6B,QAAQ,CAACjB,IAAT,CAAciF,SAAd,EAA2B,EAA5B,CAAgC,gBAAhC,CAAkD,cAAlD,CAAkE,KAAlE,CAAyE,KAAzE,CAAgF,IAAhF,CAAsFzE,SAAtF,CAAiG,UAAjG,CAA6G,IAA7G,CAAmHuE,YAAnH,CAA5C,CAEA9E,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLoF,UAAU,CAAEjE,QAAQ,CAACjB,IAAT,CAAciF,SADrB,CAELxE,aAAa,CAAEF,YAAY,CAACG,GAAb,CAAiB,YAAjB,CAFV,CAGLyE,YAAY,CAAEP,WAAW,CAAClE,GAAZ,CAAgB,YAAhB,CAHT,CAILL,cAAc,CAAE,CACZM,cAAc,CAAEJ,YAAY,CAACG,GAAb,CAAiB,cAAjB,EAAmCH,YAAY,CAACG,GAAb,CAAiB,cAAjB,CAAnC,CAAsE,EAD1E,CAEZ0E,aAAa,CAAEN,eAAe,EAAI,EAFtB,CAJX,CAQL1E,QAAQ,CAAC0E,eAAe,CAACE,KARpB,CASLpF,OAAO,CAAE,KATJ,CAFJ,CAAD,CAAR,CAcH,CAzBL,EA0BK8D,KA1BL,CA0BW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CA1CL,EA2CH,CA7CD,CA8CH,CA/CM,CAiDP,MAAO,IAAMqF,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAC1D,UAAD,CAAatB,cAAb,CAAgC,CAC9D,MAAO,UAACJ,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,2BAAX,kBACOa,UADP,GAGKX,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACd,GAAMqE,CAAAA,OAAO,CAAGjG,mBAAmB,CAAC4B,QAAQ,CAACjB,IAAT,CAAcuC,aAAd,EAA+B,EAAhC,CAAoC,oBAApC,CAA0D,eAA1D,CAA2E,KAA3E,CAAkF,KAAlF,CAAyF,IAAzF,CAA+F,cAA/F,CAAnC,CACA,GAAMgD,CAAAA,OAAO,CAAGlG,mBAAmB,CAAC4B,QAAQ,CAACjB,IAAT,CAAcwF,IAAd,EAAsB,EAAvB,CAA2B,eAA3B,CAA4C,WAA5C,CAAyD,KAAzD,CAAgE,KAAhE,CAAuE,IAAvE,CAA6E,cAA7E,CAAnC,CACA,GAAIC,CAAAA,oBAAoB,CAAGxE,QAAQ,CAACjB,IAAT,CAAc0F,KAAd,CAAoB/E,cAA/C,CACA,GAAIgF,CAAAA,aAAa,CAAGhE,UAAU,CAACiE,SAAX,CAAqBC,MAArB,CAA4B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACd,KAAF,GAAYS,oBAAhB,EAA7B,CAApB,CACA,GAAI9D,UAAU,CAACiE,SAAX,CAAqBG,MAArB,CAA8B,CAA9B,EAAmCJ,aAAa,CAACI,MAAd,GAAyB,CAAhE,CAAmE,CAC/DJ,aAAa,CAAGhE,UAAU,CAACiE,SAA3B,CACAH,oBAAoB,CAAGE,aAAa,CAAC,CAAD,CAAb,CAAiBX,KAAxC,CACH,CACD/E,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLkG,aAAa,CAAEV,OAAO,CAAC5E,GAAR,CAAY,YAAZ,CADV,CAELuF,aAAa,CAAEV,OAAO,CAAC7E,GAAR,CAAY,YAAZ,CAFV,CAGLL,cAAc,gCACPA,cADO,MAEV6F,kBAAkB,CAAEZ,OAAO,CAAC5E,GAAR,CAAY,cAAZ,EAChB4E,OAAO,CAAC5E,GAAR,CAAY,cAAZ,CADgB,CACc4E,OAAO,CAAC5E,GAAR,CAAY,YAAZ,EAA4B4E,OAAO,CAAC5E,GAAR,CAAY,YAAZ,EAA0B,CAA1B,CAA5B,CAA2D,EAHnF,CAIVyF,aAAa,CAAEZ,OAAO,CAAC7E,GAAR,CAAY,cAAZ,EACX6E,OAAO,CAAC7E,GAAR,CAAY,cAAZ,CADW,CACmB6E,OAAO,CAAC7E,GAAR,CAAY,YAAZ,EAA4B6E,OAAO,CAAC7E,GAAR,CAAY,YAAZ,EAA0B,CAA1B,CAA5B,CAA2D,EALnF,CAMV0F,SAAS,CAAEnF,QAAQ,CAACjB,IAAT,CAAc0F,KAAd,CAAoBU,SANrB,CAOVzF,cAAc,CAAEgF,aAAa,CAAGA,aAAa,CAAC,CAAD,CAAhB,CAAsB,EAPzC,EAHT,CAYLrE,WAAW,CAAEL,QAAQ,CAACjB,IAAT,CAAcqB,QAAd,GAA2B,CAA3B,CAA+B,IAA/B,CAAsC,KAZ9C,CAaLE,cAAc,CAAEN,QAAQ,CAACjB,IAAT,CAAcwB,cAbzB,CAcLC,UAAU,CAAE,oBAdP,CAeL7B,OAAO,CAAE,KAfJ,CAgBLyB,QAAQ,CAAEJ,QAAQ,CAACjB,IAAT,CAAcqB,QAhBnB,CAiBLgF,eAAe,CAAE,EAjBZ,CAkBL3E,QAAQ,CAAE,CACNf,cAAc,CAAE8E,oBADV,CAlBL,CAFJ,CAAD,CAAR,CAyBH,CArCL,EAsCK/B,KAtCL,CAsCW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAELoG,aAAa,CAAE,EAFV,CAGLC,aAAa,CAAE,EAHV,CAIL5F,cAAc,gCACPA,cADO,MAEV6F,kBAAkB,CAAE,EAFV,CAGVC,aAAa,CAAE,EAHL,EAJT,CAFJ,CAAD,CAAR,CAaA,GAAIxC,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CA7DL,EA8DH,CAhED,CAiEH,CAlEM,CAoEP,MAAO,IAAMsG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAC3E,UAAD,CAAgB,CAC1C,MAAO,UAAC1B,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,0BAAX,kBACOa,UADP,GAGKX,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdhB,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLwB,WAAW,CAAE,KADR,CAEL1B,OAAO,CAAE,KAFJ,CAGLyG,eAAe,CAAE,EAHZ,CAFJ,CAAD,CAAR,CAQAlH,KAAK,CAACoH,OAAN,CAAcrH,IAAI,CAACqE,aAAL,CAAmB,CAC7BC,EAAE,CAAE,iCADyB,CAAnB,CAAd,EAGH,CAfL,EAgBKE,KAhBL,CAgBW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CAhCL,EAiCH,CAnCD,CAoCH,CArCM,CAuCP,MAAO,IAAMwG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAC7E,UAAD,CAAgB,CAC1C,MAAO,UAAC1B,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,uBAAX,kBACOa,UADP,GAGKX,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdhB,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLwB,WAAW,CAAE,KADR,CAEL1B,OAAO,CAAE,KAFJ,CAGLyG,eAAe,CAAE,EAHZ,CAILnG,UAAU,CAAE,OAJP,CAFJ,CAAD,CAAR,CASAf,KAAK,CAACoH,OAAN,CAAcrH,IAAI,CAACqE,aAAL,CAAmB,CAC7BC,EAAE,CAAE,iCADyB,CAAnB,CAAd,EAGH,CAhBL,EAiBKE,KAjBL,CAiBW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CAjCL,EAkCH,CApCD,CAqCH,CAtCM,CAwCP,MAAO,IAAMyG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,aAAD,CAAmB,CAChD,MAAO,UAACzG,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,0BAAX,CAAuC,CACnC4F,aAAa,CAAbA,aADmC,CAAvC,EAGK1F,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdhB,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLwB,WAAW,CAAE,IADR,CAEL1B,OAAO,CAAE,KAFJ,CAGLyG,eAAe,CAAE,EAHZ,CAIL5E,UAAU,CAAE,oBAJP,CAKLF,cAAc,CAAEN,QAAQ,CAACjB,IAAT,CAAcwB,cALzB,CAFJ,CAAD,CAAR,CAUH,CAdL,EAeKkC,KAfL,CAeW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CA/BL,EAgCH,CAlCD,CAmCH,CApCM,CAsCP,MAAO,IAAM2G,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAC9F,SAAD,CAAe,CACtC,MAAO,UAACZ,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,oBAAX,kBACOD,SADP,GAGKG,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACd,GAAMG,CAAAA,YAAY,CAAGH,QAAQ,CAACjB,IAA9B,CACA,GAAM2B,CAAAA,UAAU,CAAG,CACfD,QAAQ,CAAEN,YAAY,CAACQ,QADR,CAEfC,UAAU,CAAET,YAAY,CAACU,UAFV,CAGfC,qBAAqB,CAAEX,YAAY,CAACY,qBAHrB,CAIfC,yBAAyB,CAAEb,YAAY,CAACc,yBAJzB,CAKfC,qBAAqB,CAAEf,YAAY,CAACgB,qBALrB,CAMfC,WAAW,CAAE,EANE,CAOfC,aAAa,CAAElB,YAAY,CAACmB,aAPb,CAQfS,aAAa,CAAE,IARA,CASf;AACA;AACA;AACApD,OAAO,CAAE,KAZM,CAafmE,UAAU,CAAE,EAbG,CAcf7D,UAAU,CAAE,MAdG,CAefyB,UAAU,CAAE,EAfG,CAgBfqC,WAAW,CAAE,KAhBE,CAiBff,aAAa,CAAE7B,YAAY,CAAC8B,aAjBb,CAkBfC,YAAY,CAAE/B,YAAY,CAAC8B,aAAb,GAA+B,EAA/B,CAAoCxD,cAAc,CAAC,CAAC,GAAD,CAAM,GAAN,CAAD,CAAa,CAAC,EAAD,CAAK,GAAL,CAAb,CAAwB,CAAC,CAAD,CAAI,EAAJ,CAAxB,CAAiC,CAAC,CAAD,CAAI,CAAJ,CAAjC,CAAlD,CAA6F,SAlB5F,CAmBf0D,QAAQ,CAAE,IAnBK,CAAnB,CAqBAnD,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE6B,UAFJ,CAAD,CAAR,CAIA1B,QAAQ,CAACT,sBAAsB,CAACyB,QAAQ,CAACjB,IAAT,CAAc4B,QAAf,CAAyB,CAAzB,CAAvB,CAAR,CACA3B,QAAQ,CAACV,gBAAgB,CAAC0B,QAAQ,CAACjB,IAAT,CAAc4B,QAAf,CAAyB,CAAzB,CAA4B,KAA5B,CAAjB,CAAR,CACA3B,QAAQ,CAACR,YAAY,CAACwB,QAAQ,CAACjB,IAAT,CAAc4B,QAAf,CAAb,CAAR,CACH,CAjCL,EAkCK8B,KAlCL,CAkCW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CAlDL,EAmDH,CArDD,CAsDH,CAvDM,CAyDP,MAAO,IAAM4G,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAC/F,SAAD,CAAe,CAC5C,MAAO,UAACZ,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,yBAAX,gCACOD,SADP,MAEIgG,KAAK,CAAE,CAFX,IAIK7F,IAJL,CAIU,SAAAC,QAAQ,CAAI,CACdhB,QAAQ,CAACF,OAAO,CAAC,OAAD,CAAR,CAAR,CACH,CANL,EAOK2D,KAPL,CAOW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAEO,CACH1E,KAAK,CAACsE,IAAN,CAAWE,KAAK,CAAC1C,QAAN,CAAejB,IAA1B,EACH,CACJ,CAnBL,EAoBH,CAtBD,CAuBH,CAxBM,CA0BP,MAAO,IAAM8G,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACnF,UAAD,CAAaoF,SAAb,CAAwBC,KAAxB,CAAkC,CAC5D,MAAO,UAAC/G,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAWiG,SAAX,kBACOpF,UADP,GAGKX,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdhB,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIqB,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACjB,IAAT,CAAciH,WAAd,GAA8B,IAAvD,CAA6D,CACzD,GAAIhG,QAAQ,CAACjB,IAAT,CAAciH,WAAd,CAA0BrD,MAA9B,CAAsC,CAClC,GAAIoD,KAAJ,CAAW,CACP,GAAIE,CAAAA,IAAI,CAAGjG,QAAX,CACA,GAAIkG,CAAAA,MAAM,CAAGH,KAAK,CAAG,GAAR,CAAcE,IAAI,CAAClH,IAAL,CAAUoH,QAAxB,CAAmC,GAAnC,CAAyCF,IAAI,CAAClH,IAAL,CAAUqH,QAAhE,CACAC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAoB,QAApB,EACH,CAJD,IAIO,CACHhI,KAAK,CAACmE,IAAN,CAAWpE,IAAI,CAACsI,gBAAL,CAAsB,CAC7BhE,EAAE,CAAE,0BADyB,CAAtB,CAAX,EAGH,CACJ,CAVD,IAUO,CACHrE,KAAK,CAACmE,IAAN,CAAWrC,QAAQ,CAACjB,IAAT,CAAciH,WAAd,CAA0BQ,WAArC,EACH,CACD;AACA;AACA;AACH,EAEJ,CA7BL,EA8BK/D,KA9BL,CA8BW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMAT,KAAK,CAACwE,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAtCL,EAuCH,CAzCD,CA0CH,CA3CM,CA6CP,MAAO,IAAM6D,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAC/F,UAAD,CAAaoF,SAAb,CAAwBY,SAAxB,CAAsC,CACjE,MAAO,UAAC1H,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAWiG,SAAX,kBACOpF,UADP,GAGKX,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdhB,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAIqB,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACjB,IAAT,CAAc4D,MAAvC,CAA+C,CAC3C,GAAI3C,QAAQ,CAACjB,IAAT,CAAc4D,MAAlB,CAA0B,CACtB,GAAMgE,CAAAA,OAAO,CAAGD,SAAS,CAAG,MAAZ,CAAqB1G,QAAQ,CAACjB,IAAT,CAAcoH,QAAnC,CAA8C,MAA9C,CAAuDnG,QAAQ,CAACjB,IAAT,CAAcqH,QAArE,CAAgF,MAAhF,CAAyF1F,UAAU,CAACkG,SAApH,CACAP,MAAM,CAACC,IAAP,CAAYK,OAAZ,CAAqB,QAArB,EACH,CAHD,IAGO,CACHzI,KAAK,CAACmE,IAAN,CAAWrC,QAAQ,CAAC6G,OAApB,EACH,CACJ,CAPD,IAOO,CACH3I,KAAK,CAACmE,IAAN,CAAWpE,IAAI,CAACsI,gBAAL,CAAsB,CAC7BhE,EAAE,CAAE,sBADyB,CAAtB,CAAX,EAGH,CACJ,CAtBL,EAuBKE,KAvBL,CAuBW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMAT,KAAK,CAACwE,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CA/BL,EAgCH,CAlCD,CAmCH,CApCM,CAuCP,MAAO,IAAMkE,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACpG,UAAD,CAAgB,CAC3C,MAAO,UAAC1B,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,kBAAX,CAA+B,CAC3B,YAAaa,UAAU,CAACtB,cAAX,CAA0B8F,aAA1B,CAAwC6B,IAD1B,CAA/B,EAGKhH,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACd,GAAMqE,CAAAA,OAAO,CAAGjG,mBAAmB,CAAC4B,QAAQ,CAACjB,IAAT,CAAcuC,aAAd,EAA+B,EAAhC,CAAoC,oBAApC,CAA0D,eAA1D,CAA2E,KAA3E,CAAkF,KAAlF,CAAyF,IAAzF,CAA+F,cAA/F,CAAnC,CAEAtC,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAELoG,aAAa,CAAEV,OAAO,CAAC5E,GAAR,CAAY,YAAZ,CAFV,CAGLL,cAAc,gCACPsB,UAAU,CAACtB,cADJ,MAEV6F,kBAAkB,CAAEZ,OAAO,CAAC5E,GAAR,CAAY,cAAZ,EAChB4E,OAAO,CAAC5E,GAAR,CAAY,cAAZ,CADgB,CACc4E,OAAO,CAAC5E,GAAR,CAAY,YAAZ,EAA4B4E,OAAO,CAAC5E,GAAR,CAAY,YAAZ,EAA0B,CAA1B,CAA5B,CAA2D,EAHnF,EAHT,CAFJ,CAAD,CAAR,CAcH,CApBL,EAqBKgD,KArBL,CAqBW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMAT,KAAK,CAACwE,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CA7BL,EA8BH,CAhCD,CAiCH,CAlCM,CAoCP,MAAO,IAAMoE,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACtG,UAAD,CAAatB,cAAb,CAAgC,CACzD,MAAO,UAACJ,QAAD,CAAc,CACjBA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAV,KAAK,CAAC6B,IAAN,CAAW,+BAAX,kBACOa,UADP,GAGKX,IAHL,CAGU,SAAAC,QAAQ,CAAI,CACdhB,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLO,cAAc,gCACPA,cADO,MAEV+F,SAAS,CAAEnF,QAAQ,CAACjB,IAAT,CAAc0F,KAAd,CAAoBU,SAFrB,EADT,CAKL1E,QAAQ,CAAE,CACNf,cAAc,CAAEgB,UAAU,CAAChB,cADrB,CALL,CAQLW,WAAW,CAAEL,QAAQ,CAACjB,IAAT,CAAcqB,QAAd,GAA2B,CAA3B,CAA+B,IAA/B,CAAsC,KAR9C,CASLE,cAAc,CAAEN,QAAQ,CAACjB,IAAT,CAAcwB,cATzB,CAULC,UAAU,CAAE,oBAVP,CAWL7B,OAAO,CAAE,KAXJ,CAYLyB,QAAQ,CAAEJ,QAAQ,CAACjB,IAAT,CAAcqB,QAZnB,CAaLgF,eAAe,CAAE,EAbZ,CAFJ,CAAD,CAAR,CAkBH,CAtBL,EAuBK3C,KAvBL,CAuBW,SAAAC,KAAK,CAAI,CACZ1D,QAAQ,CAAC,CACLJ,IAAI,CAAEf,cADD,CAELgB,OAAO,CAAE,CACLF,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA,GAAI+D,KAAK,CAAC1C,QAAN,CAAe2C,MAAf,GAA0B,GAA9B,CAAmC,CAC/BzE,KAAK,CAACwE,KAAN,CAAYzE,IAAI,CAACqE,aAAL,CAAmB,CAC3BC,EAAE,CAAEG,KAAK,CAACE,OADiB,CAAnB,CAAZ,EAGH,CAJD,IAIO,CACH1E,KAAK,CAACsE,IAAN,CAAWvE,IAAI,CAACqE,aAAL,CAAmB,CAC1BC,EAAE,CAAEG,KAAK,CAAC1C,QAAN,CAAejB,IADO,CAAnB,CAAX,EAGH,CACJ,CAvCL,EAwCH,CA1CD,CA2CH,CA5CM","sourcesContent":["import {\r\n    DEFAULT_RETURN,\r\n    UPDATE_LANGUAGE,\r\n    REQUEST_INIT\r\n} from './LoginTypes';\r\nimport rsapi from \"../rsapi\";\r\nimport {\r\n    intl\r\n} from '../components/App';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    constructjsonOptionList,\r\n    constructOptionList, rearrangeDateFormat\r\n} from '../components/CommonScript';\r\nimport {\r\n    getHomeDashBoard\r\n} from './DashBoardTypeAction';\r\nimport {\r\n    getListStaticDashBoard\r\n} from './StaticDashBoardAction';\r\nimport {\r\n    getListAlert\r\n} from './AlertViewAction'\r\nimport {\r\n    getRandomColor\r\n} from '../components/header/headerutils';\r\n\r\nexport const initRequest = (loading) => {\r\n    return {\r\n        type: REQUEST_INIT,\r\n        payload: loading\r\n    }\r\n}\r\n\r\nexport const navPage = (data) => dispatch => {\r\n    dispatch({\r\n        type: DEFAULT_RETURN,\r\n        payload: {\r\n            navigation: data\r\n        }\r\n    });\r\n}\r\n\r\nexport const changeLanguage = (language, selectedRecord, loginType) => (dispatch) => {\r\n    const loginTypeMap = constructjsonOptionList(loginType || [], \"nlogintypecode\",\r\n        \"sdisplayname\", false, false, true, undefined, 'jsondata', true, language);\r\n    dispatch({\r\n        type: UPDATE_LANGUAGE,\r\n        payload: {\r\n            language,\r\n            selectedRecord,\r\n            loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n            selectedRecord: {\r\n                ...selectedRecord,\r\n                nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\"\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const clickOnLoginButton = (inputData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputData.url, inputData)\r\n            .then(response => {\r\n                const returnStr = response.data[\"rtn\"];\r\n                if (returnStr.toUpperCase() === \"SUCCESS\") {\r\n                    const responseData = response.data;\r\n                    const PassFlag = responseData.PassFlag;\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openCPModal: response.data.PassFlag === 6 || PassFlag === 55 ? true : false,\r\n                            passwordPolicy: response.data.PasswordPolicy,\r\n                            screenName: PassFlag === 6 ? \"IDS_CREATEPASSWORD\" : PassFlag === 55 ? \"IDS_CHANGEPASSWORD\" : \"\",\r\n                            PassFlag,\r\n                            userInfo: {\r\n                                nlogintypecode: inputData.nlogintypecode\r\n                            }\r\n                        }\r\n                    });\r\n                    if (responseData.PassFlag !== 6 && responseData.PassFlag !== 55) {\r\n                        const inputParam = {\r\n                            userInfo: responseData.UserInfo,\r\n                            menuDesign: responseData.MenuDesign,\r\n                            navigation: inputData.navigation,\r\n                            userRoleControlRights: responseData.UserRoleControlRights,\r\n                            userFormControlProperties: responseData.UserFormControlproperties,\r\n                            transactionValidation: responseData.TransactionValidation,\r\n                            displayName: \"\",\r\n                            userMultiRole: responseData.UserMultiRole,\r\n                            settings: responseData.Settings,\r\n                            sdmselnsettings: responseData.SDMSELNSettings,\r\n                            deputyUser: response.data.DeputyUser,\r\n                            deputyUserRole: response.data.DeputyUserRole,\r\n                            isDeputyLogin: false,\r\n                            loading: false,\r\n                            userImagePath: responseData.UserImagePath,\r\n                            //profileColor: \"#002699\",\r\n                            profileColor: responseData.UserImagePath === \"\" ? getRandomColor([240, 360], [90, 100], [0, 95], [1, 1]) : \"#ff0000\",\r\n                            idleneed: true\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: inputParam\r\n                        });\r\n\r\n                        dispatch(getListStaticDashBoard(responseData.UserInfo, 1));\r\n                        // dispatch(getHomeDashBoard(responseData.UserInfo, 0, false));\r\n                        dispatch(getListAlert(responseData.UserInfo, true));\r\n                        if (responseData.PasswordAlertDay) {\r\n                            toast.info(intl.formatMessage({\r\n                                id: \"IDS_PASSWORDEXPIRY\"\r\n                            }) + \" \" + responseData.PasswordAlertDay + \" \" + intl.formatMessage({\r\n                                id: \"IDS_DAY\"\r\n                            }))\r\n                        }\r\n                    }\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: returnStr\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const submitChangeRole = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getuserscreenrightsmenu\", inputParam)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        userInfo: response.data.UserInfo,\r\n                        menuDesign: response.data.MenuDesign,\r\n                        userRoleControlRights: response.data.UserRoleControlRights,\r\n                        userMultiRole: response.data.UserMultiRole,\r\n                        deputyUser: response.data.DeputyUser,\r\n                        deputyUserRole: response.data.DeputyUserRole,\r\n                        loading: false,\r\n                        masterData: [],\r\n                        displayName: \"\",\r\n                        navigation: \"home\",\r\n                        inputParam: {},\r\n                        openRoleBox: false\r\n                    }\r\n                });\r\n                dispatch(getListStaticDashBoard(response.data.UserInfo, 1));\r\n                dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\r\n                dispatch(getListAlert(response.data.UserInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const updateStore = (updateInfo) => dispatch => {\r\n    if (updateInfo.data.loadEsign === true) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/timezone/getLocalTimeByZone\", {\r\n            \"userinfo\": updateInfo.data.screenData.inputParam.inputData.userinfo\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: updateInfo.typeName,\r\n                    payload: {\r\n                        serverTime: rearrangeDateFormat(updateInfo.data.screenData.inputParam.inputData.userinfo, response.data),\r\n                        ...updateInfo.data,\r\n                        masterStatus: \"\",\r\n                        errorCode: undefined,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    } else {\r\n        dispatch({\r\n            type: updateInfo.typeName,\r\n            payload: {\r\n                ...updateInfo.data,\r\n                masterStatus: \"\",\r\n                errorCode: undefined\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getChangeUserRole = (userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getchangerole\", {\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        ...response.data,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getLoginDetails = () => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getloginInfo\", {})\r\n            .then(response => {\r\n                // let loginType = [];\r\n                // response.data.LoginType.map(type => {\r\n                //     loginType\r\n                // })\r\n                const languageMap = constructOptionList(response.data.Language || [], \"slanguagetypecode\", \"slanguagename\", false, false, true);\r\n                let defaultLanguage = languageMap.get(\"DefaultValue\") ? languageMap.get(\"DefaultValue\") : undefined;\r\n                let languageCode = defaultLanguage ? defaultLanguage.value : \"en-US\";\r\n                const loginTypeMap = constructjsonOptionList(response.data.LoginType || [], \"nlogintypecode\", \"sdisplayname\", false, false, true, undefined, 'jsondata', true, languageCode);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loginTypes: response.data.LoginType,\r\n                        loginTypeList: loginTypeMap.get(\"OptionList\"),\r\n                        languageList: languageMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            nlogintypecode: loginTypeMap.get(\"DefaultValue\") ? loginTypeMap.get(\"DefaultValue\") : \"\",\r\n                            nlanguagecode: defaultLanguage || \"\"\r\n                        },\r\n                        language:defaultLanguage.value,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getUserSiteAndRole = (inputParam, selectedRecord) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getloginvalidation\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                const roleMap = constructOptionList(response.data.UserMultiRole || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n                const siteMap = constructOptionList(response.data.Site || [], \"nusersitecode\", \"ssitename\", false, false, true, \"ndefaultsite\");\r\n                let loggeInLoginTypeCode = response.data.Users.nlogintypecode;\r\n                let logintypecode = inputParam.logintype.filter(x => x.value === loggeInLoginTypeCode);\r\n                if (inputParam.logintype.length > 0 && logintypecode.length === 0) {\r\n                    logintypecode = inputParam.logintype;\r\n                    loggeInLoginTypeCode = logintypecode[0].value;\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loginUserRole: roleMap.get(\"OptionList\"),\r\n                        loginUserSite: siteMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\",\r\n                            nusersitecode: siteMap.get(\"DefaultValue\") ?\r\n                                siteMap.get(\"DefaultValue\") : siteMap.get(\"OptionList\") ? siteMap.get(\"OptionList\")[0] : \"\",\r\n                            nusercode: response.data.Users.nusercode,\r\n                            nlogintypecode: logintypecode ? logintypecode[0] : \"\"\r\n                        },\r\n                        openCPModal: response.data.PassFlag === 6 ? true : false,\r\n                        passwordPolicy: response.data.PasswordPolicy,\r\n                        screenName: \"IDS_CREATEPASSWORD\",\r\n                        loading: false,\r\n                        PassFlag: response.data.PassFlag,\r\n                        createPwdRecord: {},\r\n                        userInfo: {\r\n                            nlogintypecode: loggeInLoginTypeCode\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: [],\r\n                        loginUserSite: [],\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusermultirolecode: \"\",\r\n                            nusersitecode: \"\"\r\n                        }\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const createPassword = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/createnewpassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        createPwdRecord: {}\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_PASSWORDCREATEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changepassword = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/changepassword\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: false,\r\n                        loading: false,\r\n                        createPwdRecord: {},\r\n                        navigation: \"login\"\r\n                    }\r\n                });\r\n                toast.success(intl.formatMessage({\r\n                    id: \"IDS_PASSWORDCHANGEDSUCCESSFULLY\"\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getPassWordPolicy = (nuserrolecode) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getPassWordPolicy\", {\r\n            nuserrolecode\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openCPModal: true,\r\n                        loading: false,\r\n                        createPwdRecord: {},\r\n                        screenName: \"IDS_CHANGEPASSWORD\",\r\n                        passwordPolicy: response.data.PasswordPolicy\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const changeOwner = (inputData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/changeOwner\", {\r\n            ...inputData\r\n        })\r\n            .then(response => {\r\n                const responseData = response.data;\r\n                const inputParam = {\r\n                    userInfo: responseData.UserInfo,\r\n                    menuDesign: responseData.MenuDesign,\r\n                    userRoleControlRights: responseData.UserRoleControlRights,\r\n                    userFormControlProperties: responseData.UserFormControlproperties,\r\n                    transactionValidation: responseData.TransactionValidation,\r\n                    displayName: \"\",\r\n                    userMultiRole: responseData.UserMultiRole,\r\n                    isDeputyLogin: true,\r\n                    // settings: responseData.Settings,\r\n                    // deputyUser: response.data.DeputyUser,\r\n                    // deputyUserRole: response.data.DeputyUserRole,\r\n                    loading: false,\r\n                    masterData: [],\r\n                    navigation: \"home\",\r\n                    inputParam: {},\r\n                    openRoleBox: false,\r\n                    userImagePath: responseData.UserImagePath,\r\n                    profileColor: responseData.UserImagePath === \"\" ? getRandomColor([240, 360], [90, 100], [0, 95], [1, 1]) : \"#ff0000\",\r\n                    idleneed: true\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: inputParam\r\n                });\r\n                dispatch(getListStaticDashBoard(response.data.UserInfo, 1));\r\n                dispatch(getHomeDashBoard(response.data.UserInfo, 0, false));\r\n                dispatch(getListAlert(response.data.UserInfo));\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const logOutAuditAction = (inputData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('login/insertAuditAction', {\r\n            ...inputData,\r\n            nFlag: 2\r\n        })\r\n            .then(response => {\r\n                dispatch(navPage(\"login\"))\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const elnLoginAction = (inputParam, serverUrl, uiUrl) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(serverUrl, {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (response !== null && response.data.objResponse !== null) {\r\n                    if (response.data.objResponse.status) {\r\n                        if (uiUrl) {\r\n                            let user = response;\r\n                            let elnURL = uiUrl + \"#\" + user.data.username + \"$\" + user.data.password;\r\n                            window.open(elnURL, '_blank');\r\n                        } else {\r\n                            toast.info(intl.FormattedMessage({\r\n                                id: \"IDS_ELNUIURLNOTAVAILABLE\"\r\n                            }))\r\n                        }\r\n                    } else {\r\n                        toast.info(response.data.objResponse.information);\r\n                    }\r\n                    // if(!$(\"#appsdetails\").is(\":hidden\")){\r\n                    //     $('#appsdetails').addClass(\"dp-none\");\r\n                    // }\r\n                };\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const sdmsLoginAction = (inputParam, serverUrl, sdmsUIUrl) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(serverUrl, {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (response !== null && response.data.status) {\r\n                    if (response.data.status) {\r\n                        const sdmsURL = sdmsUIUrl + \"?un=\" + response.data.username + \"&pd=\" + response.data.password + \"&sc=\" + inputParam.sSiteCode;\r\n                        window.open(sdmsURL, '_blank');\r\n                    } else {\r\n                        toast.info(response.Message);\r\n                    }\r\n                } else {\r\n                    toast.info(intl.FormattedMessage({\r\n                        id: \"IDS_CHECKSYNCSERVICE\"\r\n                    }));\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const getUsersiteRole = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post('login/changeSite', {\r\n            \"usersSite\": inputParam.selectedRecord.nusersitecode.item\r\n        })\r\n            .then(response => {\r\n                const roleMap = constructOptionList(response.data.UserMultiRole || [], \"nusermultirolecode\", \"suserrolename\", false, false, true, \"ndefaultrole\");\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loginUserRole: roleMap.get(\"OptionList\"),\r\n                        selectedRecord: {\r\n                            ...inputParam.selectedRecord,\r\n                            nusermultirolecode: roleMap.get(\"DefaultValue\") ?\r\n                                roleMap.get(\"DefaultValue\") : roleMap.get(\"OptionList\") ? roleMap.get(\"OptionList\")[0] : \"\"\r\n\r\n\r\n                        },\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport const checkPassword = (inputParam, selectedRecord) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/login/getlogintypevalidation\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedRecord: {\r\n                            ...selectedRecord,\r\n                            nusercode: response.data.Users.nusercode\r\n                        },\r\n                        userInfo: {\r\n                            nlogintypecode: inputParam.nlogintypecode\r\n                        },\r\n                        openCPModal: response.data.PassFlag === 6 ? true : false,\r\n                        passwordPolicy: response.data.PasswordPolicy,\r\n                        screenName: \"IDS_CREATEPASSWORD\",\r\n                        loading: false,\r\n                        PassFlag: response.data.PassFlag,\r\n                        createPwdRecord: {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}