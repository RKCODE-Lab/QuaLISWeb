{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{FormattedMessage,injectIntl}from'react-intl';import{process}from'@progress/kendo-data-query';import{faSave}from'@fortawesome/free-regular-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Button,Row,Col}from'react-bootstrap';import FormSelectSearch from'../form-select-search/form-select-search.component';import DataGrid from'../data-grid/data-grid.component';var ParameterMapping=/*#__PURE__*/function(_React$Component){_inherits(ParameterMapping,_React$Component);var _super=_createSuper(ParameterMapping);function ParameterMapping(props){var _this;_classCallCheck(this,ParameterMapping);_this=_super.call(this,props);var dataState={skip:0,take:10,group:[{field:'schildparametername'}]};_this.state={dataState:dataState,dataResult:[],selectedRecord:{}};return _this;}_createClass(ParameterMapping,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:this.props.inputColumnList[0].idsName}),name:this.props.inputColumnList[0].dataField,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.props[this.props.inputColumnList[0].listName]//optionId={this.props.inputColumnList[0].optionId}\n//optionValue={this.props.inputColumnList[0].optionValue}\n,value:this.props.selectedRecord[this.props.inputColumnList[0].dataField],closeMenuOnSelect:true,isMulti:false,isSearchable:true,isDisabled:false,isMandatory:true,isClearable:false//alphabeticalSort={true}\n,onChange:function onChange(value){return _this2.props.handleChange(value,_this2.props.inputColumnList[0].dataField);}}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:this.props.inputColumnList[1].idsName}),name:this.props.inputColumnList[1].dataField,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.props[this.props.inputColumnList[1].listName]//optionId={this.props.inputColumnList[1].optionId}\n//optionValue={this.props.inputColumnList[1].optionValue}\n,value:this.props.selectedRecord[this.props.inputColumnList[1].dataField],closeMenuOnSelect:true,isSearchable:true,isMandatory:true,isMulti:false,isClearable:false//alphabeticalSort={true}\n,onChange:function onChange(value){return _this2.props.handleChange(value,_this2.props.inputColumnList[1].dataField);}}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:this.props.inputColumnList[2].idsName}),name:this.props.inputColumnList[2].dataField,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.props[this.props.inputColumnList[2].listName]//optionId={this.props.inputColumnList[2].optionId}\n//optionValue={this.props.inputColumnList[2].optionValue}\n,value:this.props.selectedRecord[this.props.inputColumnList[2].dataField],closeMenuOnSelect:true,isSearchable:true,isMandatory:true,isMulti:false,isClearable:false// alphabeticalSort={true}\n,onChange:function onChange(value){return _this2.props.handleChange(value,_this2.props.inputColumnList[2].dataField);}}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end pad-15\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this2.props.addParametersInDataGrid(_this2.props.selectedRecord);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADD\",defaultMessage:\"Add\"}))),/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nreportparametercode\",data:this.props.mappingGridData||[],dataResult:process(this.props.mappingGridData||[],this.state.dataState),dataState:this.state.dataState,dataStateChange:function dataStateChange(event){return _this2.setState({dataState:event.dataState});}//extractedColumnList={this.props.mappingGridColumnList}\n,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,inputParam:this.props.inputParam,userInfo:this.props.userInfo,deleteRecordWORights:this.props.deleteRecordWORights,pageable:false,scrollable:\"scrollable\",isActionRequired:true,isToolBarRequired:false,selectedId:null,hideColumnFilter:true,hasControlWithOutRights:true,showdeleteRecordWORights:true,gridHeight:'300px',extractedColumnList:this.props.detailedFieldList,onSwitchChange:this.props.bindActionParameter,groupable:false// switchParam={{methodUrl:''}}\n}))));}}]);return ParameterMapping;}(React.Component);export default injectIntl(ParameterMapping);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/add-design/parameter-mapping.component.jsx"],"names":["React","FormattedMessage","injectIntl","process","faSave","FontAwesomeIcon","Button","Row","Col","FormSelectSearch","DataGrid","ParameterMapping","props","dataState","skip","take","group","field","state","dataResult","selectedRecord","intl","formatMessage","id","inputColumnList","idsName","dataField","listName","value","handleChange","addParametersInDataGrid","mappingGridData","event","setState","controlMap","userRoleControlRights","inputParam","userInfo","deleteRecordWORights","detailedFieldList","bindActionParameter","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { FormattedMessage, injectIntl} from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { faSave } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Row, Col} from 'react-bootstrap';\r\n\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\nimport DataGrid from '../data-grid/data-grid.component';\r\n\r\nclass ParameterMapping extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n            group: [{ field: 'schildparametername' }]\r\n        };\r\n        this.state = {\r\n            dataState:dataState, dataResult:[],\r\n            selectedRecord: {},\r\n            \r\n        }\r\n    }\r\n\r\n    render() {    \r\n       return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[0].idsName })}\r\n                            name={this.props.inputColumnList[0].dataField}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\"})}                             \r\n                            options={this.props[this.props.inputColumnList[0].listName]}\r\n                            //optionId={this.props.inputColumnList[0].optionId}\r\n                            //optionValue={this.props.inputColumnList[0].optionValue}\r\n                            value={this.props.selectedRecord[this.props.inputColumnList[0].dataField] }\r\n                            closeMenuOnSelect={true}  \r\n                            isMulti={false}                        \r\n                            isSearchable={true}\r\n                            isDisabled={false}                          \r\n                            isMandatory={true}\r\n                            isClearable={false}\r\n                            //alphabeticalSort={true}\r\n                            onChange={value => this.props.handleChange(value, this.props.inputColumnList[0].dataField)}\r\n                           \r\n                        />\r\n\r\n                        <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[1].idsName })}\r\n                                name={this.props.inputColumnList[1].dataField}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\"})}                             \r\n                                options={this.props[this.props.inputColumnList[1].listName]}\r\n                                //optionId={this.props.inputColumnList[1].optionId}\r\n                                //optionValue={this.props.inputColumnList[1].optionValue}\r\n                                value={this.props.selectedRecord[this.props.inputColumnList[1].dataField] }\r\n                                closeMenuOnSelect={true}                          \r\n                                isSearchable={true}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isClearable={false}\r\n                                //alphabeticalSort={true}\r\n                                onChange={value => this.props.handleChange(value, this.props.inputColumnList[1].dataField)}\r\n                            \r\n                            />\r\n                    \r\n                        <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[2].idsName })}\r\n                                name={this.props.inputColumnList[2].dataField}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\"})}                             \r\n                                options={this.props[this.props.inputColumnList[2].listName]}\r\n                                //optionId={this.props.inputColumnList[2].optionId}\r\n                                //optionValue={this.props.inputColumnList[2].optionValue}\r\n                                value={this.props.selectedRecord[this.props.inputColumnList[2].dataField] }\r\n                                closeMenuOnSelect={true}                          \r\n                                isSearchable={true}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isClearable={false}\r\n                               // alphabeticalSort={true}\r\n                                onChange={value => this.props.handleChange(value, this.props.inputColumnList[2].dataField)}\r\n                            \r\n                            />         \r\n\r\n                        {/* <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: this.props.inputColumnList[3].idsName })}\r\n                                name={this.props.inputColumnList[3].dataField}\r\n                                placeholder=\"Please Select...\"                           \r\n                                options={this.props[this.props.inputColumnList[3].listName]}\r\n                                optionId={this.props.inputColumnList[3].optionId}\r\n                                optionValue={this.props.inputColumnList[3].optionValue}\r\n                                value={this.props.selectedRecord[this.props.inputColumnList[3].dataField] }\r\n                                closeMenuOnSelect={true}                          \r\n                                isSearchable={true}\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isClearable={false}\r\n                                alphabeticalSort={true}\r\n                                onChange={value => this.props.handleChange(value, this.props.inputColumnList[3].dataField)}\r\n                            \r\n                            />      */}\r\n                 \r\n                    <div className = \"d-flex justify-content-end pad-15\">\r\n                        <Button className=\"btn-user btn-primary-blue\"\r\n                            onClick={() => this.props.addParametersInDataGrid(this.props.selectedRecord)}>\r\n                            <FontAwesomeIcon icon={faSave} /> { }\r\n                            <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                        </Button>\r\n                    </div>\r\n               \r\n                   <DataGrid   primaryKeyField={\"nreportparametercode\"}\r\n                                data={this.props.mappingGridData || []}\r\n                                dataResult={process(this.props.mappingGridData || [], this.state.dataState)}\r\n                                dataState={this.state.dataState}\r\n                                dataStateChange={(event)=> this.setState({dataState: event.dataState})}                                                           \r\n                                //extractedColumnList={this.props.mappingGridColumnList}\r\n                                controlMap={this.props.controlMap}\r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.userInfo}\r\n                                deleteRecordWORights={this.props.deleteRecordWORights} \r\n                                pageable={false}\r\n                                scrollable={\"scrollable\"}                                            \r\n                                isActionRequired={true}\r\n                                isToolBarRequired={false}\r\n                                selectedId={null}\r\n                                hideColumnFilter={true}\r\n                                hasControlWithOutRights={true}\r\n                                showdeleteRecordWORights={true}\r\n                                gridHeight={'300px'}\r\n                                extractedColumnList={this.props.detailedFieldList}\r\n                                onSwitchChange = {this.props.bindActionParameter}\r\n                                groupable={false}\r\n                               // switchParam={{methodUrl:''}}\r\n                            />\r\n                </Col>\r\n            </Row>\r\n            {/* <Row>\r\n                <Col>\r\n\r\n                    <b><FormattedMessage id='IDS_ACTIONPARAMETER' defaultMessage='Action Parameter' /></b>\r\n                   \r\n                    <DataGrid   primaryKeyField={\"nreportparameteractioncode\"}\r\n                                data={this.props.actionGridData || []}\r\n                                dataResult={this.props.actionGridData || []}\r\n                                //dataState={this.state.dataState}\r\n                                //dataStateChange={(event)=> this.setState({dataState: event.dataState})}                                                           \r\n                                extractedColumnList={this.props.actionGridColumnList}\r\n                                controlMap={this.props.controlMap}\r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.userInfo}\r\n                                deleteRecordWORights={this.props.deleteActionParameter} \r\n                                pageable={false}\r\n                                scrollable={\"scrollable\"}                                            \r\n                                isActionRequired={true}\r\n                                isToolBarRequired={false}\r\n                                //selectedId={this.props.selectedId}\r\n                                hideColumnFilter={true}\r\n                                hasControlWithOutRights={true}\r\n                                showdeleteRecordWORights={true}\r\n                                gridHeight={'300px'}\r\n                            />\r\n                    </Col>\r\n                </Row> */}\r\n            </>\r\n        );        \r\n    }\r\n\r\n  \r\n}\r\nexport default injectIntl(ParameterMapping);\r\n"]},"metadata":{},"sourceType":"module"}