{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN,REQUEST_FAILURE}from'./LoginTypes';import{sortData}from'../components/CommonScript';import{initRequest}from'./LoginAction';import{toast}from'react-toastify';import{intl}from'../components/App';export function sendRequest(obj){return function(dispatch){dispatch(initRequest(true));var newMap=_objectSpread({},obj.inputData);var masterData=obj.masterData;var selectedRecord=obj.selectedRecord;var query=obj.sqlquery;rsapi.post(obj.url,_objectSpread(_objectSpread({},newMap),{},{userinfo:obj.userinfo,query:query,whereCondition:newMap.whereCondition,parameters:obj.parameters})).then(function(response){masterData['consoleData']=response.data;newMap['whereCondition']=obj.inputData.whereCondition;// selectedRecord['filterNew']\ndispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedRecord:selectedRecord,newMap:newMap}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getQualisForms(obj){return function(dispatch){dispatch(initRequest(true));var userinfo=obj.userinfo;var selectedRecord=obj.selectedRecord;selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{\"ParamValue\":\"\"});var Parameters=obj.Parameters;var constructApiData=obj.constructApiData;var masterData=obj.masterData;rsapi.post('/apiservice/getQualisForms',{'userinfo':userinfo,'napiservicecode':selectedRecord.napiservicecode.value}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);masterData['SelectedApi']=selectedRecord['napiservicecode'];if(selectedRecord['napiservicecode'].value<3){constructApiData=obj.constructApiData;}else{constructApiData=[];}if(!response.data.needdisplayparam){Parameters=undefined;}masterData['consoleData']=[];masterData=_objectSpread(_objectSpread({},masterData),{},{Parameters:Parameters});selectedRecord['filterNew']=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,selectedRecord:selectedRecord,userinfo:userinfo,//constructApiData:[]\nconstructApiData:constructApiData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getQualisFormsFields(obj){return function(dispatch){dispatch(initRequest(true));var userinfo=obj.userinfo;var selectedRecord=_objectSpread(_objectSpread({},obj.selectedRecord),{},{'filterNew':[]});selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{\"ParamValue\":\"\"});var masterData=_objectSpread({},obj.masterData);rsapi.post('/apiservice/getQualisFormFields',{'userinfo':userinfo,'nformcode':selectedRecord.nformcode.value}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{'lstquerybilderColumns':response.data,'SelectedForm':_objectSpread({},selectedRecord['nformcode']),'consoleData':[]});selectedRecord['filterNew']=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getCustomQuery(obj){return function(dispatch){dispatch(initRequest(true));var userinfo=obj.userinfo;var selectedRecord=obj.selectedRecord;selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{\"ParamValue\":\"\"});var constructApiData=obj.constructApiData;var masterData=obj.masterData;rsapi.post('/apiservice/getCustomQuery',{'userinfo':userinfo,'napiservicecode':selectedRecord.napiservicecode.value}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);masterData['SelectedApi']=selectedRecord['napiservicecode'];masterData['SelectedSQLQuery']=response.data.SelectedSQLQuery;masterData['Columns']=response.data.Columns;masterData['Parameters']=response.data.Parameters;constructApiData=obj.constructApiData;masterData['consoleData']=[];selectedRecord['filterNew']=[];//ALPD-3801\nselectedRecord[\"nsqlquerycode\"]={\"item\":response.data.SelectedSQLQuery.item,\"label\":response.data.SelectedSQLQuery.label,\"value\":response.data.SelectedSQLQuery.value};masterData['needdisplayparam']=response.data.needdisplayparam;dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,selectedRecord:selectedRecord,userinfo:userinfo,constructApiData:constructApiData}});}).catch(function(response){console.log(\"error:\",response);if(response.response.status===500){dispatch({type:REQUEST_FAILURE,payload:{error:response.message,loading:false// openPortal:this.props.Login.openPortal,\n//openModal:inputParam.openPortal?false:true\n}});}});};}export function getCustomQueryName(obj){return function(dispatch){dispatch(initRequest(true));var userinfo=obj.userinfo;//ALPD-3801\nvar selectedRecord=_objectSpread(_objectSpread({},obj.selectedRecord),{},{\"ParamValue\":\"\"});var masterData=_objectSpread({},obj.masterData);rsapi.post('/apiservice/getCustomQueryName',{'userinfo':userinfo,'nsqlquerycode':selectedRecord.nsqlquerycode.value}).then(function(response){masterData=_objectSpread({},masterData);masterData['SelectedSQLQuery']=response.data.SelectedSQLQuery;//ALPD-3801\nmasterData['Parameters']=response.data.Parameters;masterData['needdisplayparam']=response.data.needdisplayparam;masterData['Columns']=response.data.Columns;masterData['consoleData']=[];selectedRecord['filterNew']=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,selectedRecord:selectedRecord}});}).catch(function(response){console.log(\"error:\",response);if(response.response.status===500){dispatch({type:REQUEST_FAILURE,payload:{error:response.message,loading:false// openPortal:this.props.Login.openPortal,\n//openModal:inputParam.openPortal?false:true\n}});}});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/APIServiceAction.js"],"names":["rsapi","DEFAULT_RETURN","REQUEST_FAILURE","sortData","initRequest","toast","intl","sendRequest","obj","dispatch","newMap","inputData","masterData","selectedRecord","query","sqlquery","post","url","userinfo","whereCondition","parameters","then","response","data","type","payload","loading","catch","error","getQualisForms","Parameters","constructApiData","napiservicecode","value","needdisplayparam","undefined","getQualisFormsFields","nformcode","getCustomQuery","SelectedSQLQuery","Columns","item","label","console","log","status","message","getCustomQueryName","nsqlquerycode"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN,REQUEST_FAILURE } from './LoginTypes';\r\nimport { sortData } from '../components/CommonScript';\r\nimport { initRequest } from './LoginAction';\r\nimport { toast } from 'react-toastify';\r\nimport { intl } from '../components/App';\r\n\r\n\r\nexport function sendRequest(obj) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const newMap={...obj.inputData}\r\n        const masterData=obj.masterData\r\n        const selectedRecord=obj.selectedRecord\r\n        const query = obj.sqlquery\r\n        rsapi.post(obj.url, {...newMap , userinfo: obj.userinfo ,query , whereCondition: newMap.whereCondition,parameters:obj.parameters} )\r\n            .then(response => {\r\n                masterData['consoleData']=response.data\r\n                newMap['whereCondition']=obj.inputData.whereCondition\r\n                // selectedRecord['filterNew']\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData,selectedRecord,newMap}, loading: false\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN,payload: { loading: false }})\r\n            })\r\n    }\r\n}\r\n\r\nexport function getQualisForms(obj) {\r\n    return function (dispatch) {     \r\n        dispatch(initRequest(true));\r\n       const userinfo=obj.userinfo\r\n       let selectedRecord=obj.selectedRecord\r\n       selectedRecord={...selectedRecord,\"ParamValue\":\"\"}\r\n    let Parameters=obj.Parameters\r\n       let constructApiData = obj.constructApiData\r\n       let masterData=obj.masterData\r\n        rsapi.post('/apiservice/getQualisForms', {'userinfo':userinfo,'napiservicecode':selectedRecord.napiservicecode.value} )\r\n            .then(response => {\r\n                masterData={...masterData,\r\n                    ...response.data,\r\n                    // lstquerybilderColumns: response.data.lstquerybilderColumns.map((item, index) => {\r\n                    //         return { label: item.scolumndisplayname, value: index, item: { ...item } }})\r\n                }\r\n                masterData['SelectedApi']=selectedRecord['napiservicecode']\r\n                if(selectedRecord['napiservicecode'].value < 3){   \r\n                    constructApiData = obj.constructApiData\r\n                }\r\n                else{\r\n                    constructApiData = []\r\n                }\r\n             \r\n                if(!response.data.needdisplayparam){\r\n                    Parameters=undefined\r\n                }\r\n                \r\n                masterData['consoleData']=[]\r\n                masterData={...masterData,Parameters}\r\n                selectedRecord['filterNew']=[]\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData},\r\n                        loading: false,\r\n                        selectedRecord,\r\n                        userinfo,\r\n                        //constructApiData:[]\r\n                        constructApiData\r\n                        \r\n                       \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getQualisFormsFields(obj) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n       const userinfo=obj.userinfo\r\n       let selectedRecord={...obj.selectedRecord,'filterNew':[]}\r\n       selectedRecord={...selectedRecord,\"ParamValue\":\"\"}\r\n\r\n       let masterData={...obj.masterData}\r\n        rsapi.post('/apiservice/getQualisFormFields', {'userinfo':userinfo,'nformcode':selectedRecord.nformcode.value} )\r\n            .then(response => {\r\n                masterData={...masterData,'lstquerybilderColumns':response.data,\r\n                'SelectedForm':{...selectedRecord['nformcode']},'consoleData':[]}\r\n                selectedRecord['filterNew']=[]\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData} ,\r\n                        loading: false,\r\n                        selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getCustomQuery(obj) {\r\n    return function (dispatch) {     \r\n        dispatch(initRequest(true));\r\n       const userinfo=obj.userinfo\r\n       let selectedRecord=obj.selectedRecord\r\n        selectedRecord={...selectedRecord,\"ParamValue\":\"\"}\r\n       let constructApiData = obj.constructApiData\r\n       let masterData=obj.masterData\r\n        rsapi.post('/apiservice/getCustomQuery', {'userinfo':userinfo,'napiservicecode':selectedRecord.napiservicecode.value} )\r\n            .then(response => {\r\n                masterData={...masterData,\r\n                    ...response.data,\r\n                }\r\n                masterData['SelectedApi']=selectedRecord['napiservicecode']\r\n                masterData['SelectedSQLQuery'] = response.data.SelectedSQLQuery\r\n                masterData['Columns']=response.data.Columns\r\n                masterData['Parameters']=response.data.Parameters\r\n                constructApiData = obj.constructApiData\r\n                masterData['consoleData']=[]\r\n                selectedRecord['filterNew']=[]\r\n\t\t\t\t//ALPD-3801\r\n                selectedRecord[\"nsqlquerycode\"]={\"item\":response.data.SelectedSQLQuery.item,\r\n                \"label\":response.data.SelectedSQLQuery.label,\r\n                \"value\":response.data.SelectedSQLQuery.value\r\n               }\r\n               masterData['needdisplayparam']=response.data.needdisplayparam\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData},\r\n                        loading: false,\r\n                        selectedRecord,\r\n                        userinfo,\r\n                        constructApiData\r\n                    }\r\n                });\r\n            })\r\n            .catch(response => {\r\n                console.log(\"error:\", response);\r\n                if (response.response.status === 500) {\r\n                  dispatch({\r\n                    type: REQUEST_FAILURE,\r\n                    payload: {\r\n                      error: response.message,\r\n                      loading: false,\r\n                      // openPortal:this.props.Login.openPortal,\r\n                      //openModal:inputParam.openPortal?false:true\r\n                    }\r\n                  });\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getCustomQueryName(obj) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n       const userinfo=obj.userinfo\r\n        //ALPD-3801\r\n       let selectedRecord={...obj.selectedRecord,\"ParamValue\":\"\"}\r\n       let masterData={...obj.masterData}\r\n        rsapi.post('/apiservice/getCustomQueryName', {'userinfo':userinfo,'nsqlquerycode':selectedRecord.nsqlquerycode.value} )\r\n            .then(response => {\r\n                masterData={...masterData}\r\n                masterData['SelectedSQLQuery'] = response.data.SelectedSQLQuery\r\n\t\t\t\t//ALPD-3801\r\n                masterData['Parameters'] = response.data.Parameters\r\n                masterData['needdisplayparam'] = response.data.needdisplayparam\r\n                masterData['Columns']=response.data.Columns\r\n                masterData['consoleData']=[]\r\n                selectedRecord['filterNew']=[]\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData} ,\r\n                        loading: false,\r\n                        selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(response => {\r\n                console.log(\"error:\", response);\r\n                if (response.response.status === 500) {\r\n                  dispatch({\r\n                    type: REQUEST_FAILURE,\r\n                    payload: {\r\n                      error: response.message,\r\n                      loading: false,\r\n                      // openPortal:this.props.Login.openPortal,\r\n                      //openModal:inputParam.openPortal?false:true\r\n                    }\r\n                  });\r\n                }            })\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}