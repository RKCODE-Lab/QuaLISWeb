{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { toast } from 'react-toastify';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nexport function getTransactionDetail(inputData) {\n  return function (dispatch) {\n    let inputParamData = {\n      userinfo: inputData.userinfo,\n      fromDate: inputData.fromDate,\n      toDate: inputData.toDate,\n      viewTypecode: inputData.viewTypecode,\n      transFilterType: inputData.transFilterType,\n      sregistereddate: inputData.sregistereddate\n    };\n    dispatch(initRequest(true));\n    return rsapi.post(\"flextransaction/getTrendChartDate\", inputParamData).then(response => {\n      let masterData = { ...inputData.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          skip: inputData.skip,\n          take: inputData.take\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getFilterTransactionDetailsRecords(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"flextransaction/getFilterTransactionDetailsRecords\", { ...inputData.inputData\n    }).then(response => {\n      let masterData = { ...inputData.masterData,\n        ...response.data,\n        ViewType: inputData.masterData.breadCrumbViewType.item\n      };\n\n      if (inputData.searchRef !== undefined && inputData.searchRef.current !== null) {\n        inputData.searchRef.current.value = \"\";\n        masterData['searchedTransactionDetails'] = undefined;\n      }\n\n      let resetDataGridPage = false;\n\n      if (masterData.TransactionDetails && masterData.TransactionDetails.length < inputData.detailSkip) {\n        resetDataGridPage = true;\n      } else {\n        resetDataGridPage = false;\n      }\n\n      let respObject = {\n        masterData,\n        loading: false,\n        showFilter: false,\n        resetDataGridPage\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: { ...respObject,\n          skip: 0,\n          take: 20\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function ViewTransactionDetails(masterData, userInfo, details, screenName) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"flextransaction/getTransactionDetails\", {\n      ntransactionsampleresultno: details.ntransactionsampleresultno,\n      userinfo: userInfo\n    }).then(response => {\n      let Details = JSON.parse(response.data['ViewTransactionDetails'][0].jsondata.value);\n      let valueShow = [];\n      response.data['FieldName'].map(x => {\n        valueShow.push({ ...x,\n          svalue: Details[x.sfieldname] === \"\" || Details[x.sfieldname] === null ? '-' : Details[x.sfieldname],\n          ntransactionsampleresultno: details.ntransactionsampleresultno\n        });\n        return null;\n      });\n      masterData['ViewTransactionDetails'] = [];\n      masterData['ViewTransactionDetails'] = valueShow;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          details: details,\n          masterData,\n          selectedId: details.ntransactionsampleresultno,\n          screenName,\n          loading: false,\n          openModal: true\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getexportdata(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"flextransaction/getExportData\", { ...inputData.inputData\n    }).then(response => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          resultStatus: response.data[\"ExportExcel\"] || '',\n          loading: false\n        }\n      });\n\n      if (response.data[\"ExportExcel\"] === \"Success\") {\n        document.getElementById(\"download_data\").setAttribute(\"href\", response.data[\"ExportExcelPath\"]);\n        document.getElementById(\"download_data\").click();\n      } else {\n        toast.warn(response.data[\"ExportExcel\"]);\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function viewFlextTransactionReport(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"flextransaction/viewFlextTransactionReport\", { ...inputParam.inputData\n    }).then(response => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          resultStatus: response.data[\"ExportExcel\"] || '',\n          loading: false\n        }\n      });\n\n      if (response.data[\"ExportExcel\"] === \"Success\") {\n        document.getElementById(\"download_data\").setAttribute(\"href\", response.data[\"ExportExcelPath\"]);\n        document.getElementById(\"download_data\").click();\n      } else {\n        toast.warn(response.data[\"ExportExcel\"]);\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/actions/FlexTransactionAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","initRequest","intl","getTransactionDetail","inputData","dispatch","inputParamData","userinfo","fromDate","toDate","viewTypecode","transFilterType","sregistereddate","post","then","response","masterData","data","type","payload","loading","skip","take","catch","error","status","formatMessage","id","message","warn","getFilterTransactionDetailsRecords","ViewType","breadCrumbViewType","item","searchRef","undefined","current","value","resetDataGridPage","TransactionDetails","length","detailSkip","respObject","showFilter","ViewTransactionDetails","userInfo","details","screenName","ntransactionsampleresultno","Details","JSON","parse","jsondata","valueShow","map","x","push","svalue","sfieldname","selectedId","openModal","getexportdata","resultStatus","document","getElementById","setAttribute","click","viewFlextTransactionReport","inputParam"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\n\r\n\r\n\r\nexport function getTransactionDetail(inputData) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            userinfo: inputData.userinfo,\r\n            fromDate: inputData.fromDate,\r\n            toDate: inputData.toDate,\r\n            viewTypecode: inputData.viewTypecode,\r\n            transFilterType: inputData.transFilterType,\r\n            sregistereddate: inputData.sregistereddate\r\n        }\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"flextransaction/getTrendChartDate\", inputParamData)\r\n            .then(response => {\r\n                let masterData = { ...inputData.masterData, ...response.data };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false, skip: inputData.skip, take: inputData.take\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getFilterTransactionDetailsRecords(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"flextransaction/getFilterTransactionDetailsRecords\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data,\r\n                    ViewType: inputData.masterData.breadCrumbViewType.item\r\n                }\r\n\r\n                if (inputData.searchRef !== undefined && inputData.searchRef.current !== null) {\r\n                    inputData.searchRef.current.value = \"\";\r\n                    masterData['searchedTransactionDetails'] = undefined;\r\n                }\r\n                let resetDataGridPage = false;\r\n                if (masterData.TransactionDetails && masterData.TransactionDetails.length < inputData.detailSkip) {\r\n                    resetDataGridPage = true\r\n                } else {\r\n                    resetDataGridPage = false\r\n                }\r\n                let respObject = {\r\n\r\n                    masterData,\r\n                    loading: false,\r\n                    showFilter: false,\r\n                    resetDataGridPage\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { ...respObject, skip: 0, take: 20 } })\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function ViewTransactionDetails(masterData, userInfo, details, screenName) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"flextransaction/getTransactionDetails\", { ntransactionsampleresultno: details.ntransactionsampleresultno, userinfo: userInfo })\r\n            .then(response => {\r\n                let Details = JSON.parse(response.data['ViewTransactionDetails'][0].jsondata.value)\r\n                let valueShow = [];\r\n                response.data['FieldName'].map(x => {\r\n                    valueShow.push({\r\n                        ...x, svalue: (Details[x.sfieldname] === \"\" || Details[x.sfieldname] === null) ? '-' : Details[x.sfieldname],\r\n                        ntransactionsampleresultno: details.ntransactionsampleresultno\r\n                    })\r\n                    return null;\r\n                })\r\n                masterData['ViewTransactionDetails'] = [];\r\n                masterData['ViewTransactionDetails'] = valueShow\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        details: details,\r\n                        masterData,\r\n                        selectedId: details.ntransactionsampleresultno,\r\n                        screenName,\r\n                        loading: false,\r\n                        openModal: true,\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getexportdata(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"flextransaction/getExportData\", { ...inputData.inputData })\r\n            .then(response => {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        resultStatus: response.data[\"ExportExcel\"] || '',\r\n                        loading: false,\r\n\r\n                    }\r\n                })\r\n                if (response.data[\"ExportExcel\"] === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data[\"ExportExcelPath\"]);\r\n                    document.getElementById(\"download_data\").click();\r\n                }\r\n                else {\r\n                    toast.warn(response.data[\"ExportExcel\"]);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function viewFlextTransactionReport(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"flextransaction/viewFlextTransactionReport\", { ...inputParam.inputData })\r\n        .then(response => {\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    resultStatus: response.data[\"ExportExcel\"] || '',\r\n                    loading: false,\r\n\r\n                }\r\n            })\r\n            if (response.data[\"ExportExcel\"] === \"Success\") {\r\n                document.getElementById(\"download_data\").setAttribute(\"href\", response.data[\"ExportExcelPath\"]);\r\n                document.getElementById(\"download_data\").click();\r\n            }\r\n            else {\r\n                toast.warn(response.data[\"ExportExcel\"]);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            if (error.response.status === 500) {\r\n                toast.error(error.message);\r\n            }\r\n            else {\r\n                toast.warn(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}