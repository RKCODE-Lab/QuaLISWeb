{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\Row.jsx\";\nimport React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { ROW } from \"./constants\";\nimport DropArea from \"./DropArea.jsx\";\nimport Column from \"./Column\";\nimport \"./styles.css\";\nconst style = {};\n\nconst DynamicRow = _ref => {\n  let {\n    data,\n    components,\n    handleDrop,\n    path,\n    indexrow,\n    onclickcomponent,\n    selectedFieldRecord\n  } = _ref;\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: ROW,\n    item: {\n      type: ROW,\n      children: data.children,\n      path\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(ref);\n\n  const renderColumn = (column, currentPath) => {\n    return /*#__PURE__*/React.createElement(Column, {\n      key: column.id,\n      data: column,\n      components: components,\n      handleDrop: handleDrop,\n      path: currentPath,\n      onclickcomponent: onclickcomponent,\n      selectedFieldRecord: selectedFieldRecord,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: { ...style,\n      opacity\n    },\n    className: \"base draggable row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, data.children.map((column, index) => {\n    const currentPath = `${path}-${index}`;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: column.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DropArea, {\n      data: {\n        path: currentPath,\n        childrenCount: data.children.length\n      },\n      onDrop: handleDrop,\n      className: \"horizontalDrag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }), renderColumn(column, currentPath));\n  }), /*#__PURE__*/React.createElement(DropArea, {\n    data: {\n      path: `${path}-${data.children.length}`,\n      childrenCount: data.children.length\n    },\n    onDrop: handleDrop,\n    className: \"horizontalDrag\",\n    isLast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DynamicRow;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/droparea/Row.jsx"],"names":["React","useRef","useDrag","ROW","DropArea","Column","style","DynamicRow","data","components","handleDrop","path","indexrow","onclickcomponent","selectedFieldRecord","ref","isDragging","drag","type","item","children","collect","monitor","opacity","renderColumn","column","currentPath","id","map","index","childrenCount","length"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { ROW } from \"./constants\";\r\nimport DropArea from \"./DropArea.jsx\";\r\nimport Column from \"./Column\";\r\nimport \"./styles.css\"\r\n\r\nconst style = {};\r\nconst DynamicRow = ({ data, components, handleDrop, path, indexrow, onclickcomponent, selectedFieldRecord }) => {\r\n  const ref = useRef(null);\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    \r\n    type: ROW,\r\n    item: {\r\n      type: ROW,\r\n      children: data.children,\r\n      path\r\n    },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(ref);\r\n\r\n  const renderColumn = (column, currentPath) => {\r\n    return (\r\n      <Column\r\n        key={column.id}\r\n        data={column}\r\n        components={components}\r\n        handleDrop={handleDrop}\r\n        path={currentPath}\r\n        onclickcomponent={onclickcomponent}\r\n        selectedFieldRecord={selectedFieldRecord}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} style={{ ...style, opacity }} className=\"base draggable row\">\r\n      {/* {\"Row\"}{indexrow} */}\r\n      <div className=\"columns\">\r\n        {data.children.map((column, index) => {\r\n          const currentPath = `${path}-${index}`;\r\n\r\n          return (\r\n            <React.Fragment key={column.id}>\r\n              <DropArea\r\n                data={{\r\n                  path: currentPath,\r\n                  childrenCount: data.children.length,\r\n                }}\r\n                onDrop={handleDrop}\r\n                className=\"horizontalDrag\"\r\n              />\r\n              {renderColumn(column, currentPath)}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n        <DropArea\r\n          data={{\r\n            path: `${path}-${data.children.length}`,\r\n            childrenCount: data.children.length\r\n          }}\r\n          onDrop={handleDrop}\r\n          className=\"horizontalDrag\"\r\n          isLast\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DynamicRow;\r\n"]},"metadata":{},"sourceType":"module"}