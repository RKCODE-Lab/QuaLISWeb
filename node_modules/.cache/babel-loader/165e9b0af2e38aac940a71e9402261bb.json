{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Card,Media,ListGroup,Form}from'react-bootstrap';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{getSelectedAlert}from'../../actions';import{process}from'@progress/kendo-data-query';import DataGrid from'../../components/data-grid/data-grid.component';import{ListMasterWrapper}from'../../components/list-master/list-master.styles';import{ListView}from'@progress/kendo-react-listview';import{ClientList,ContentPanel,MediaHeader}from'../../components/App.styles';import'react-perfect-scrollbar/dist/css/styles.css';import PerfectScrollbar from'react-perfect-scrollbar';import{AtTableWrap}from'../../components/data-grid/data-grid.styles';import{ProductList}from'../product/product.styled';import'./Alert.css';import{Tooltip}from'@progress/kendo-react-tooltip';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var AlertSlide=/*#__PURE__*/function(_React$Component){_inherits(AlertSlide,_React$Component);var _super=_createSuper(AlertSlide);function AlertSlide(_props){var _this;_classCallCheck(this,AlertSlide);_this=_super.call(this,_props);_this.ListDesign=function(props){var item=props.dataItem;var labelColor=['label-orange','label-green','label-yellow','label-purple'];return/*#__PURE__*/React.createElement(Tooltip,{position:\"bottom\",anchorElement:\"target\",openDelay:100,parentTitle:true},/*#__PURE__*/React.createElement(ListGroup.Item,{key:\"listKey_\".concat(props.index),as:\"li\",onClick:function onClick(){return _this.listItemClick(item);},className:\"list-bgcolor \".concat(_this.props.Login.selectedAlertView?_this.props.Login.selectedAlertView[\"nsqlquerycode\"]===item[\"nsqlquerycode\"]?\"active\":\"\":\"\")},/*#__PURE__*/React.createElement(Media,{tilte:item.sscreenheader},/*#__PURE__*/React.createElement(Media.Body,{className:\"d-flex p-2\"},/*#__PURE__*/React.createElement(MediaHeader,{title:item.sscreenheader},item.sscreenheader)),/*#__PURE__*/React.createElement(Form.Check.Label,{className:\"label-circle1 mr-3 label-circle \".concat(labelColor[props.index%4]),htmlFor:\"tm_customCheck_\".concat(props.index)},item.ncount))));};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.gridColumnList=[];var dataState={skip:0,take:10};_this.state={data:[],dataResult:[],dataState:dataState,controlMap:new Map(),userRoleControlRights:[],currentPageNo:0,openModal:false};_this.searchRef=React.createRef();return _this;}// dataStateChange = (event) => {\n//     this.setState({\n//         dataResult: process(this.props.Login.selectedAlertView1, event.data),\n//         dataState: event.data\n//     });\n// }\n_createClass(AlertSlide,[{key:\"render\",value:function render(){var _this2=this;var gridColumnList=[];if(this.props.Login.selectedAlertView1&&this.props.Login.selectedAlertView1.length>0){Object.keys(this.props.Login.selectedAlertView1[0]).forEach(function(key){gridColumnList.push({\"idsName\":_this2.props.intl.formatMessage({id:key}),\"dataField\":key,\"width\":\"300px\"// \"isIdsField\":key.includes(\"STATUS\")\n});});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap wide-grid\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMasterWrapper,{className:\"accordian-dropdown\"},/*#__PURE__*/React.createElement(ClientList,{className:\"product-list list_rightborder\"},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"height-xl height-xxd no-bottom-pad\"},/*#__PURE__*/React.createElement(ListGroup,{as:\"ul\"},/*#__PURE__*/React.createElement(ListView,{data:this.props.Login.alert,item:function item(props){return _this2.ListDesign(props);}}))))))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(ProductList,{className:\"panel-main-content\"},this.props.Login.alert&&this.props.Login.alert.length>0&&this.props.Login.selectedAlertView?/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,{className:\"p-1\"},/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main ml-2\"},this.props.Login.selectedAlertView.sscreenheader)),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nsqlquerycode\",data:this.props.Login.selectedAlertView1,dataResult:process(this.props.Login.selectedAlertView1,this.state.dataState),dataState:this.state.dataState,dataStateChange:function dataStateChange(event){return _this2.setState({dataState:event.dataState});},extractedColumnList:gridColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,userInfo:this.props.Login.userInfo,pageable:true,scrollable:\"scrollable\",isComponent:false,isActionRequired:false,isToolBarRequired:true,hideColumnFilter:false,isRefreshRequired:false,selectedId:0,gridHeight:'calc(100vh - 170px)'// name=\"IDS_ALERTVIEW\"\n})))),\" \"):\"\")))));}// closeModal = () => {\n//     let openModalForHomeDashBoard = this.props.Login.openModalForHomeDashBoard;\n//     openModalForHomeDashBoard = false;\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: { openModalForHomeDashBoard }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n},{key:\"listItemClick\",value:function listItemClick(item){if(item!==undefined&&item.nsqlquerycode>0){this.props.getSelectedAlert(item,this.props.Login.userInfo);}}// componentDidUpdate (previousProps){\n//     if(this.props.Login.selectedAlertView1!==previousProps.selectedAlertView1){\n//         this.setState({dataState:{skip:0, take:this.state.dataState.take}})\n//     }\n// }\n//  componentDidUpdate(previousProps) {\n//     if (this.props.Login.selectedRecordStatic !== previousProps.Login.selectedRecordStatic) {\n//          this.setState({ selectedRecordStatic: this.props.Login.selectedRecordStatic });\n//      }\n//      if (this.props.Login.openModalForHomeDashBoard !== previousProps.Login.openModalForHomeDashBoard) {\n//          this.setState({ openModal: this.props.Login.openModalForHomeDashBoard });\n//      }\n//  } \n}]);return AlertSlide;}(React.Component);export default connect(mapStateToProps,{getSelectedAlert:getSelectedAlert})(injectIntl(AlertSlide));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/dashboardtypes/AlertSlide.jsx"],"names":["React","Row","Col","Card","Media","ListGroup","Form","connect","injectIntl","getSelectedAlert","process","DataGrid","ListMasterWrapper","ListView","ClientList","ContentPanel","MediaHeader","PerfectScrollbar","AtTableWrap","ProductList","Tooltip","mapStateToProps","state","Login","AlertSlide","props","ListDesign","item","dataItem","labelColor","index","listItemClick","selectedAlertView","sscreenheader","ncount","formRef","createRef","extractedColumnList","gridColumnList","dataState","skip","take","data","dataResult","controlMap","Map","userRoleControlRights","currentPageNo","openModal","searchRef","selectedAlertView1","length","Object","keys","forEach","key","push","intl","formatMessage","id","alert","event","setState","userInfo","undefined","nsqlquerycode","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Media, ListGroup, Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n     getSelectedAlert\r\n} from '../../actions';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { ListMasterWrapper } from '../../components/list-master/list-master.styles';\r\nimport { ListView } from '@progress/kendo-react-listview';\r\nimport { ClientList, ContentPanel, MediaHeader } from '../../components/App.styles';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { AtTableWrap } from '../../components/data-grid/data-grid.styles';\r\nimport { ProductList } from '../product/product.styled';\r\nimport './Alert.css';\r\nimport { Tooltip } from '@progress/kendo-react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\nclass AlertSlide extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.gridColumnList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10\r\n        };\r\n\r\n        this.state = {\r\n            data: [],\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            controlMap: new Map(), userRoleControlRights: [],\r\n            currentPageNo: 0,\r\n            openModal: false\r\n        }\r\n        this.searchRef = React.createRef();\r\n    }\r\n    // dataStateChange = (event) => {\r\n    //     this.setState({\r\n    //         dataResult: process(this.props.Login.selectedAlertView1, event.data),\r\n    //         dataState: event.data\r\n    //     });\r\n    // }\r\n\r\n    ListDesign = props => {\r\n        let item = props.dataItem;\r\n        const labelColor = ['label-orange', 'label-green', 'label-yellow', 'label-purple'];\r\n        return (\r\n            <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                <ListGroup.Item key={`listKey_${props.index}`} as=\"li\" onClick={() => this.listItemClick(item)}\r\n                    className={`list-bgcolor ${this.props.Login.selectedAlertView ? this.props.Login.selectedAlertView[\"nsqlquerycode\"] === item[\"nsqlquerycode\"] ? \"active\" : \"\" : \"\"}`}>\r\n                    <Media tilte={item.sscreenheader}>\r\n                        {/* <Form.Check.Label className={`mr-3 label-circle ${labelColor[props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{item.sscreenheader && item.sscreenheader.substring(0, 1).toUpperCase()}</Form.Check.Label> */}\r\n\r\n                        <Media.Body className=\"d-flex p-2\">\r\n                            <MediaHeader title={item.sscreenheader}>\r\n                                {item.sscreenheader}\r\n                            </MediaHeader>\r\n                            {/* <h5 tilte={item.sscreenheader}>{item.sscreenheader}</h5> */}\r\n                            {/* <div className=\"pl-1\"> <Badge pill bsPrefix=\"badge_colour\">{item.ncount}</Badge></div> */}\r\n                        </Media.Body>\r\n\r\n                        <Form.Check.Label className={`label-circle1 mr-3 label-circle ${labelColor[props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{item.ncount}</Form.Check.Label>\r\n                        {/* <div style={{ \"font-size\": \"70%!important\" }}>\r\n                        <Badge pill variant=\"danger\">{item.ncount}</Badge>\r\n                    </div> */}\r\n                    </Media>\r\n                </ListGroup.Item>\r\n            </Tooltip>\r\n\r\n        )\r\n    }\r\n    render() {\r\n\r\n        const gridColumnList = [];\r\n        if (this.props.Login.selectedAlertView1 && this.props.Login.selectedAlertView1.length > 0) {\r\n            Object.keys(this.props.Login.selectedAlertView1[0]).forEach(key => {\r\n                gridColumnList.push(\r\n                    {\r\n                        \"idsName\": this.props.intl.formatMessage({ id: key }),\r\n                        \"dataField\": key,\r\n                        \"width\": \"300px\",\r\n                        // \"isIdsField\":key.includes(\"STATUS\")\r\n                    }\r\n                );\r\n            });\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap wide-grid\">\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            {/* <div className=\"list-fixed-wrap\"> */}\r\n                                {/* <> */}\r\n                                    {/* <> */}\r\n                                        <ListMasterWrapper className={\"accordian-dropdown\"}>\r\n                                            <ClientList className=\"product-list list_rightborder\">\r\n                                                <PerfectScrollbar>\r\n                                                    <div className = \"height-xl height-xxd no-bottom-pad\">\r\n                                                        <ListGroup as=\"ul\">\r\n                                                            <ListView\r\n                                                                data={this.props.Login.alert}\r\n                                                                item={(props) => this.ListDesign(props)}\r\n                                                            />\r\n                                                        </ListGroup>\r\n                                                    </div>\r\n                                                </PerfectScrollbar>\r\n\r\n                                            </ClientList>\r\n                                        </ListMasterWrapper>\r\n                                    {/* </> */}\r\n                                {/* </> */}\r\n                            {/* </div> */}\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <ProductList className=\"panel-main-content\">\r\n                                {this.props.Login.alert && this.props.Login.alert.length > 0 && this.props.Login.selectedAlertView ?\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            <Card.Header className=\"p-1\">\r\n                                                <Card.Title className=\"product-title-main ml-2\">{this.props.Login.selectedAlertView.sscreenheader}</Card.Title>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <AtTableWrap className=\"at-list-table\">\r\n                                                    <DataGrid\r\n                                                        primaryKeyField={\"nsqlquerycode\"}\r\n                                                        data={this.props.Login.selectedAlertView1}\r\n                                                        dataResult={process(this.props.Login.selectedAlertView1,this.state.dataState)}\r\n                                                        dataState={this.state.dataState}\r\n                                                        dataStateChange={(event) => this.setState({ dataState: event.dataState })}\r\n                                                        extractedColumnList={gridColumnList}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        pageable={true}\r\n                                                        scrollable={\"scrollable\"}\r\n                                                        isComponent={false}\r\n                                                        isActionRequired={false}\r\n                                                        isToolBarRequired={true}\r\n                                                        hideColumnFilter={false}\r\n                                                        isRefreshRequired={false}\r\n                                                        selectedId={0}\r\n                                                        gridHeight={'calc(100vh - 170px)'}\r\n                                                    // name=\"IDS_ALERTVIEW\"\r\n                                                    />\r\n                                                </AtTableWrap>\r\n                                            </Card.Body>\r\n                                        </Card> </ContentPanel> : \"\"}\r\n                            </ProductList>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    // closeModal = () => {\r\n    //     let openModalForHomeDashBoard = this.props.Login.openModalForHomeDashBoard;\r\n    //     openModalForHomeDashBoard = false;\r\n    //     const updateInfo = {\r\n    //         typeName: DEFAULT_RETURN,\r\n    //         data: { openModalForHomeDashBoard }\r\n    //     }\r\n    //     this.props.updateStore(updateInfo);\r\n    // }\r\n\r\n    listItemClick(item) {\r\n        if (item !== undefined && item.nsqlquerycode > 0) {\r\n\r\n            this.props.getSelectedAlert(item, this.props.Login.userInfo);\r\n\r\n        }\r\n    }\r\n    // componentDidUpdate (previousProps){\r\n    //     if(this.props.Login.selectedAlertView1!==previousProps.selectedAlertView1){\r\n    //         this.setState({dataState:{skip:0, take:this.state.dataState.take}})\r\n    //     }\r\n    // }\r\n\r\n        //  componentDidUpdate(previousProps) {\r\n        //     if (this.props.Login.selectedRecordStatic !== previousProps.Login.selectedRecordStatic) {\r\n        //          this.setState({ selectedRecordStatic: this.props.Login.selectedRecordStatic });\r\n        //      }\r\n        //      if (this.props.Login.openModalForHomeDashBoard !== previousProps.Login.openModalForHomeDashBoard) {\r\n        //          this.setState({ openModal: this.props.Login.openModalForHomeDashBoard });\r\n        //      }\r\n        //  } \r\n}\r\n\r\nexport default connect(mapStateToProps, {getSelectedAlert\r\n})(injectIntl(AlertSlide));"]},"metadata":{},"sourceType":"module"}