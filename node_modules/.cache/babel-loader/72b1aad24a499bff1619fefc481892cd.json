{"ast":null,"code":"import React from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';var ChangePassWord=function ChangePassWord(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_LOGINID\"}),name:\"sloginid\",type:\"text\",error:\"*\",placeholder:props.intl.formatMessage({id:\"IDS_LOGINID\"}),value:props.sloginid,readOnly:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"soldpassword\",label:props.intl.formatMessage({id:\"IDS_OLDPASSWORD\"}),type:\"password\",required:true,isMandatory:\"*\",placeholder:props.intl.formatMessage({id:\"IDS_OLDPASSWORD\"}),onChange:function onChange(event){return props.onInputChange(event);},value:props.createPwdRecord.soldpassword?props.createPwdRecord.soldpassword:\"\"}),/*#__PURE__*/React.createElement(FormInput,{name:\"snewpassword\",label:props.intl.formatMessage({id:\"IDS_NEWPASSWORD\"}),type:\"password\",required:true,isMandatory:\"*\",placeholder:props.intl.formatMessage({id:\"IDS_NEWPASSWORD\"}),onChange:function onChange(event){return props.onInputChange(event);},value:props.createPwdRecord.snewpassword?props.createPwdRecord.snewpassword:\"\"}),/*#__PURE__*/React.createElement(FormInput,{name:\"sconfirmpassword\",label:props.intl.formatMessage({id:\"IDS_CONFIRMPASSWORD\"}),type:\"password\",required:true,isMandatory:\"*\",placeholder:props.intl.formatMessage({id:\"IDS_CONFIRMPASSWORD\"}),onChange:function onChange(event){return props.onInputChange(event);},value:props.createPwdRecord.sconfirmpassword?props.createPwdRecord.sconfirmpassword:\"\"}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"spassworddescription\",rows:\"2\",value:props.msg})));};export default injectIntl(ChangePassWord);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/Login/ChangePassWord.js"],"names":["React","Col","Row","injectIntl","FormInput","FormTextarea","ChangePassWord","props","intl","formatMessage","id","sloginid","event","onInputChange","createPwdRecord","soldpassword","snewpassword","sconfirmpassword","msg"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\nconst ChangePassWord = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={ props.intl.formatMessage({ id:\"IDS_LOGINID\"}) }  \r\n                    name=\"sloginid\" type=\"text\" error=\"*\" \r\n                    placeholder={ props.intl.formatMessage({ id:\"IDS_LOGINID\"}) } \r\n                    value={ props.sloginid }\r\n                    readOnly = {true} \r\n                />\r\n                <FormInput\r\n                    name=\"soldpassword\" \r\n                    label={ props.intl.formatMessage({ id:\"IDS_OLDPASSWORD\"}) }\r\n                    type=\"password\"\r\n                    required={ true }\r\n                    isMandatory={\"*\"}\r\n                    placeholder={ props.intl.formatMessage({ id:\"IDS_OLDPASSWORD\"}) }\r\n                    onChange = { (event) => props.onInputChange(event) }\r\n                    value={props.createPwdRecord.soldpassword? props.createPwdRecord.soldpassword: \"\"}\r\n                />\r\n                <FormInput\r\n                    name=\"snewpassword\" \r\n                    label={ props.intl.formatMessage({ id:\"IDS_NEWPASSWORD\"}) }\r\n                    type=\"password\"\r\n                    required={ true }\r\n                    isMandatory={\"*\"}\r\n                    placeholder={ props.intl.formatMessage({ id:\"IDS_NEWPASSWORD\"}) }\r\n                    onChange = { (event) => props.onInputChange(event) }\r\n                    value={props.createPwdRecord.snewpassword? props.createPwdRecord.snewpassword: \"\"}\r\n                />\r\n                <FormInput\r\n                    name=\"sconfirmpassword\"\r\n                    label={ props.intl.formatMessage({ id:\"IDS_CONFIRMPASSWORD\"}) } \r\n                    type=\"password\" \r\n                    required={ true }\r\n                    isMandatory={\"*\"}\r\n                    placeholder={ props.intl.formatMessage({ id:\"IDS_CONFIRMPASSWORD\"}) }\r\n                    onChange = { (event) => props.onInputChange(event) }\r\n                    value={props.createPwdRecord.sconfirmpassword? props.createPwdRecord.sconfirmpassword: \"\"}\r\n                />\r\n                <FormTextarea\r\n                    name=\"spassworddescription\" \r\n                    rows=\"2\" \r\n                    value={props.msg}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(ChangePassWord);"]},"metadata":{},"sourceType":"module"}