{"ast":null,"code":"import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{constructOptionList}from'../components/CommonScript';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{intl}from'../components/App';import{sortData,getComboLabelValue}from\"../components/CommonScript\";export function plantgroupsite(nformcode,userInfo){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"plantgroup/getPlantGroupSite\",{\"nformcode\":nformcode,userinfo:userInfo}).then(function(response){var constructType=constructOptionList(response.data||[],\"nsitecode\",\"ssitecode\",undefined,undefined,false);var fustionsite=constructType.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:true,fusionplantSite:fustionsite,screenName:\"IDS_FUSIONPLANT\",operation:\"create\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function plantgroupdepartment(nsitecode,userInfo){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"plantgroup/getPlantGroupDepartment\",{\"nsitecode\":nsitecode,userinfo:userInfo}).then(function(response){var constructType=constructOptionList(response.data||[],\"nplantcode\",\"splantshortdesc\",undefined,undefined,false);var fusionplant=constructType.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:true,fusionparentplants:fusionplant,screenName:\"IDS_FUSIONPLANT\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function fusionplantchild(ssitecode,splantparentcode,userInfo){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"plantgroup/getPlantGroupDepartmentchild\",{\"ssitecode\":ssitecode,\"splantparentcode\":splantparentcode,update:0,userinfo:userInfo}).then(function(response){var constructType=constructOptionList(response.data||[],\"nplantcode\",\"splantshortdesc\",undefined,undefined,false);var fusionplant=constructType.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:true,fusionchildplants:fusionplant,screenName:\"IDS_FUSIONPLANT\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getActivePlantGroupById(editplantgroupId,userInfo){return function(dispatch){dispatch(initRequest(true));var nformcode=editplantgroupId.ncontrolCode;var ssitecode=editplantgroupId.editRow.nmappingsite;var splantparentcode=editplantgroupId.editRow.nparentcode;var getActivePlantGroupById=rsapi.post(\"/plantgroup/getActivePlantGroupById\",{editplantgroupId:editplantgroupId,nplantgroupcode:editplantgroupId.editRow.nplantgroupcode,userinfo:editplantgroupId.userInfo});var fustionsite=rsapi.post(\"/plantgroup/getPlantGroupSite\",{\"nformcode\":nformcode,\"userinfo\":userInfo});var fusionparentplant=rsapi.post(\"/plantgroup/getPlantGroupDepartment\",{\"nsitecode\":ssitecode,\"userinfo\":userInfo});var fusionchildplant=rsapi.post(\"/plantgroup/getPlantGroupDepartmentchild\",{\"ssitecode\":ssitecode,\"splantparentcode\":splantparentcode,update:1,userinfo:userInfo});var urlArray=[];urlArray=[getActivePlantGroupById,fustionsite,fusionparentplant,fusionchildplant];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var splantchildcode=[];var selectedRecord={};var fustionsiteconstruct=constructOptionList(response[1].data||[],\"nmappingsite\",\"ssitecode\",undefined,undefined,false);var fustionplantconstruct=constructOptionList(response[2].data||[],\"nplantcode\",\"splantshortdesc\",undefined,undefined,false);var fustionchildconstruct=constructOptionList(response[3].data||[],\"nplantcode\",\"splantshortdesc\",undefined,undefined,false);var fustionsite=fustionsiteconstruct.get(\"OptionList\");var fusionparent=fustionplantconstruct.get(\"OptionList\");var fustionchild=fustionchildconstruct.get(\"OptionList\");selectedRecord=response[0].data;selectedRecord[\"ssitecode\"]=getComboLabelValue(response[0].data,response[1].data,\"nmappingsite\",\"ssitecode\");selectedRecord[\"splantparentcode\"]=getComboLabelValue(response[0].data,response[2].data,\"nparentcode\",\"sparentsplantname\");splantchildcode.push({\"value\":response[0].data.nchildcode,\"label\":response[0].data.schildsplantname});selectedRecord[\"splantchildcode\"]=splantchildcode[0];// selectedRecord[\"splantchildcode\"] =[getComboLabelValue(response[0].data[0],response[3].data, \n// \"schildcode\", \"childsplantcode\")];     \n// ssitecode.push({\n//     \"value\": response[0].data[\"ssitecode\"],\n//     \"label\": response[0].data[\"ssitecode\"]\n// });\n//selectedRecord[\"ssitecode\"]=ssitecode;\n// selectedRecord[\"splantparentcode\"]=selectedRecord [0].parentsplantcode;\n// selectedRecord[\"splantchildcode\"]=selectedRecord [0].childsplantcode;\n//const fusionplant = constructType.get(\"OptionList\");\ndispatch({type:DEFAULT_RETURN,payload:{loading:false,openModal:true,fusionplantSite:fustionsite,fusionparentplants:fusionparent,fusionchildplants:fustionchild,selectedRecord:selectedRecord,ncontrolCode:editplantgroupId.ncontrolCode,screenName:\"IDS_FUSIONPLANT\",operation:\"update\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}// export function getActivePlantGroupById(editplantgroupId,nplantgroupcode,userInfo) {\n//     return function (dispatch) {\n//         dispatch(initRequest(true));\n//         return rsapi.post(\"plantgroup/getActivePlantGroupById\",{editplantgroupId:editplantgroupId,nplantgroupcode:editplantgroupId.editRow.nplantgroupcode,userinfo: userInfo})\n//             .then(response => {\n//                 const constructType = constructOptionList(response.data || [], \"ssitecode\",\n//                 \"ssitecode\", undefined, undefined, false);\n//                 const fustionsite = constructType.get(\"OptionList\");\n//                 let selectedRecord =  {};\n//                 selectedRecord = response.data;    \n//                 selectedRecord[\"fusionplantSite\"] = getComboLabelValue(selectedRecord,selectedRecord [0].ssitecod, \n//                 \"ssitecod\", \"ssitecod\");      \n//                 selectedRecord[\"ssitecode\"]=selectedRecord [0].ssitecode;\n//                 selectedRecord[\"splantparentcode\"]=selectedRecord [0].parentsplantcode;\n//                 selectedRecord[\"splantchildcode\"]=selectedRecord [0].childsplantcode;\n//                 //const fusionplant = constructType.get(\"OptionList\");\n//                 dispatch({\n//                     type: DEFAULT_RETURN, payload: {\n//                         loading: false, openModal:true, \n//                         fusionplantSite:fustionsite,\n//                         selectedRecord:selectedRecord,\n//                         screenName:\"IDS_FUSIONPLANT\"\n//                     }\n//                 });\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//     }\n// }","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/PlantgroupAction.js"],"names":["rsapi","DEFAULT_RETURN","constructOptionList","toast","Axios","initRequest","intl","sortData","getComboLabelValue","plantgroupsite","nformcode","userInfo","dispatch","post","userinfo","then","response","constructType","data","undefined","fustionsite","get","type","payload","loading","openModal","fusionplantSite","screenName","operation","catch","error","status","message","warn","plantgroupdepartment","nsitecode","fusionplant","fusionparentplants","fusionplantchild","ssitecode","splantparentcode","update","fusionchildplants","getActivePlantGroupById","editplantgroupId","ncontrolCode","editRow","nmappingsite","nparentcode","nplantgroupcode","fusionparentplant","fusionchildplant","urlArray","all","splantchildcode","selectedRecord","fustionsiteconstruct","fustionplantconstruct","fustionchildconstruct","fusionparent","fustionchild","push","nchildcode","schildsplantname"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {constructOptionList} from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { sortData,getComboLabelValue } from \"../components/CommonScript\";\r\n\r\n \r\nexport function plantgroupsite(nformcode,userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"plantgroup/getPlantGroupSite\",{\"nformcode\":nformcode,userinfo: userInfo})\r\n            .then(response => {\r\n                const constructType = constructOptionList(response.data || [], \"nsitecode\",\r\n                \"ssitecode\", undefined, undefined, false);\r\n\r\n                const fustionsite = constructType.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, openModal:true,\r\n                        fusionplantSite:fustionsite,\r\n                        screenName:\"IDS_FUSIONPLANT\",\r\n                        operation: \"create\"\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function plantgroupdepartment(nsitecode,userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"plantgroup/getPlantGroupDepartment\",{\"nsitecode\":nsitecode,userinfo: userInfo})\r\n            .then(response => {\r\n                const constructType = constructOptionList(response.data || [], \"nplantcode\",\r\n                \"splantshortdesc\", undefined, undefined, false);\r\n\r\n                const fusionplant = constructType.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, openModal:true,\r\n                        fusionparentplants:fusionplant,\r\n                        screenName:\"IDS_FUSIONPLANT\"\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function fusionplantchild(ssitecode,splantparentcode,userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"plantgroup/getPlantGroupDepartmentchild\",{\"ssitecode\":ssitecode,\"splantparentcode\":splantparentcode,update:0,userinfo: userInfo})\r\n            .then(response => {\r\n                const constructType = constructOptionList(response.data || [], \"nplantcode\",\r\n                \"splantshortdesc\", undefined, undefined, false);\r\n\r\n                const fusionplant = constructType.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, openModal:true,\r\n                        fusionchildplants:fusionplant,\r\n                        screenName:\"IDS_FUSIONPLANT\",\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getActivePlantGroupById(editplantgroupId,userInfo) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const nformcode=editplantgroupId.ncontrolCode;\r\n        const ssitecode=editplantgroupId.editRow.nmappingsite;\r\n        const splantparentcode=editplantgroupId.editRow.nparentcode;\r\n        const getActivePlantGroupById = rsapi.post(\"/plantgroup/getActivePlantGroupById\",{editplantgroupId:editplantgroupId,\r\n            nplantgroupcode:editplantgroupId.editRow.nplantgroupcode,userinfo: editplantgroupId.userInfo});\r\n        \r\n        const fustionsite = rsapi.post(\"/plantgroup/getPlantGroupSite\", {\"nformcode\":nformcode,\r\n            \"userinfo\": userInfo\r\n        });\r\n\r\n        const fusionparentplant = rsapi.post(\"/plantgroup/getPlantGroupDepartment\", {\"nsitecode\":ssitecode,\r\n            \"userinfo\": userInfo\r\n        });\r\n        const fusionchildplant = rsapi.post(\"/plantgroup/getPlantGroupDepartmentchild\", {\"ssitecode\":ssitecode,\r\n        \"splantparentcode\":splantparentcode,update:1,userinfo: userInfo});\r\n\r\n        let urlArray = [];\r\n        urlArray = [getActivePlantGroupById, fustionsite, fusionparentplant, fusionchildplant];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let splantchildcode=[];\r\n                let selectedRecord =  {};\r\n\r\n                const fustionsiteconstruct = constructOptionList(response[1].data || [], \"nmappingsite\",\r\n                \"ssitecode\", undefined, undefined, false);\r\n\r\n                const fustionplantconstruct = constructOptionList(response[2].data || [], \"nplantcode\",\r\n                \"splantshortdesc\", undefined, undefined, false);\r\n\r\n                const fustionchildconstruct = constructOptionList(response[3].data || [], \"nplantcode\",\r\n                \"splantshortdesc\", undefined, undefined, false);\r\n\r\n                const fustionsite = fustionsiteconstruct.get(\"OptionList\");\r\n                const fusionparent = fustionplantconstruct.get(\"OptionList\");\r\n                const fustionchild = fustionchildconstruct.get(\"OptionList\");\r\n\r\n                selectedRecord =response[0].data;    \r\n                selectedRecord[\"ssitecode\"] = getComboLabelValue(response[0].data,response[1].data, \r\n                \"nmappingsite\", \"ssitecode\");      \r\n                selectedRecord[\"splantparentcode\"] = getComboLabelValue(response[0].data,response[2].data, \r\n                \"nparentcode\", \"sparentsplantname\"); \r\n\r\n                splantchildcode.push({\r\n                        \r\n                    \"value\":response[0].data.nchildcode,\r\n                    \"label\":response[0].data.schildsplantname\r\n\r\n                });\r\n                selectedRecord[\"splantchildcode\"] = splantchildcode[0];\r\n\r\n                // selectedRecord[\"splantchildcode\"] =[getComboLabelValue(response[0].data[0],response[3].data, \r\n                // \"schildcode\", \"childsplantcode\")];     \r\n                \r\n                // ssitecode.push({\r\n                //     \"value\": response[0].data[\"ssitecode\"],\r\n                //     \"label\": response[0].data[\"ssitecode\"]\r\n                // });\r\n\r\n                 //selectedRecord[\"ssitecode\"]=ssitecode;\r\n                // selectedRecord[\"splantparentcode\"]=selectedRecord [0].parentsplantcode;\r\n                // selectedRecord[\"splantchildcode\"]=selectedRecord [0].childsplantcode;\r\n\r\n                //const fusionplant = constructType.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, openModal:true, \r\n                        fusionplantSite:fustionsite,\r\n                        fusionparentplants:fusionparent,\r\n                        fusionchildplants:fustionchild,\r\n                        selectedRecord:selectedRecord,\r\n                        ncontrolCode: editplantgroupId.ncontrolCode,\r\n                        screenName:\"IDS_FUSIONPLANT\",\r\n                        operation:\"update\"\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// export function getActivePlantGroupById(editplantgroupId,nplantgroupcode,userInfo) {\r\n//     return function (dispatch) {\r\n//         dispatch(initRequest(true));\r\n//         return rsapi.post(\"plantgroup/getActivePlantGroupById\",{editplantgroupId:editplantgroupId,nplantgroupcode:editplantgroupId.editRow.nplantgroupcode,userinfo: userInfo})\r\n//             .then(response => {\r\n//                 const constructType = constructOptionList(response.data || [], \"ssitecode\",\r\n//                 \"ssitecode\", undefined, undefined, false);\r\n\r\n//                 const fustionsite = constructType.get(\"OptionList\");\r\n//                 let selectedRecord =  {};\r\n\r\n//                 selectedRecord = response.data;    \r\n//                 selectedRecord[\"fusionplantSite\"] = getComboLabelValue(selectedRecord,selectedRecord [0].ssitecod, \r\n//                 \"ssitecod\", \"ssitecod\");      \r\n\r\n//                 selectedRecord[\"ssitecode\"]=selectedRecord [0].ssitecode;\r\n//                 selectedRecord[\"splantparentcode\"]=selectedRecord [0].parentsplantcode;\r\n//                 selectedRecord[\"splantchildcode\"]=selectedRecord [0].childsplantcode;\r\n\r\n//                 //const fusionplant = constructType.get(\"OptionList\");\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN, payload: {\r\n//                         loading: false, openModal:true, \r\n//                         fusionplantSite:fustionsite,\r\n//                         selectedRecord:selectedRecord,\r\n//                         screenName:\"IDS_FUSIONPLANT\"\r\n//                     }\r\n//                 });\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n\r\n//             })\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}