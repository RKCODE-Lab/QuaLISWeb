{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\pages\\\\configurationmaster\\\\AddYear.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport { injectIntl } from 'react-intl';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nconst AddYear = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"syear\",\n    label: props.intl.formatMessage({\n      id: \"IDS_YEAR\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_YEAR\"\n    }),\n    selected: props.selectedRecord.syear // showYearDropdown={true}\n    ,\n    dateFormat: \"yyyy\",\n    isClearable: false,\n    onChange: date => props.handleFilterDateChange(\"syear\", date),\n    value: props.selectedRecord.syear,\n    showYearPicker: true,\n    isMandatory: true //minDate={new Date(new Date().getFullYear() - 1, 12, 31)}\n    ,\n    maxDate: new Date(2999, 12, 30) // scrollableYearDropdown={true}\n    ,\n    yearDropdownItemNumber: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sdescription\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\",\n    maxLength: 250,\n    onChange: event => props.onInputOnChange(event),\n    isMandatory: false,\n    required: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddYear);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/configurationmaster/AddYear.jsx"],"names":["React","Row","Col","FormTextarea","injectIntl","DateTimePicker","AddYear","props","intl","formatMessage","id","selectedRecord","syear","date","handleFilterDateChange","Date","event","onInputOnChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,cAAP,MAA2B,8DAA3B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA2BI,oBAAC,cAAD;AACI,IAAA,IAAI,EAAE,OADV;AAEI,IAAA,KAAK,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFX;AAGI,IAAA,SAAS,EAAC,cAHd;AAII,IAAA,eAAe,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJrB;AAKI,IAAA,QAAQ,EAAEH,KAAK,CAACI,cAAN,CAAqBC,KALnC,CAMI;AANJ;AAOI,IAAA,UAAU,EAAE,MAPhB;AAQI,IAAA,WAAW,EAAE,KARjB;AASI,IAAA,QAAQ,EAAEC,IAAI,IAAIN,KAAK,CAACO,sBAAN,CAA6B,OAA7B,EAAsCD,IAAtC,CATtB;AAUI,IAAA,KAAK,EAAEN,KAAK,CAACI,cAAN,CAAqBC,KAVhC;AAWI,IAAA,cAAc,MAXlB;AAYI,IAAA,WAAW,EAAE,IAZjB,CAaI;AAbJ;AAcI,IAAA,OAAO,EAAE,IAAIG,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAdb,CAeI;AAfJ;AAgBI,IAAA,sBAAsB,EAAE,CAhB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,CADJ,eA+CI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAE,cADV;AAEI,IAAA,KAAK,EAAER,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFX;AAGI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAHjB;AAII,IAAA,KAAK,EAAEH,KAAK,CAACI,cAAN,GAAuBJ,KAAK,CAACI,cAAN,CAAqB,cAArB,CAAvB,GAA8D,EAJzE;AAKI,IAAA,SAAS,EAAE,GALf;AAMI,IAAA,QAAQ,EAAGK,KAAD,IAAWT,KAAK,CAACU,eAAN,CAAsBD,KAAtB,CANzB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,QAAQ,EAAE,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA/CJ,CADJ;AA8DH,CA/DD;;AAgEA,eAAeZ,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nconst AddYear = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                {/* <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                    name={\"syear\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"syear\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={4}\r\n                /> */}\r\n                {/* <FormNumericInput\r\n                //     name=\"syear\"\r\n                //     label={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                //     placeholder={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                //     type=\"number\"\r\n                //     value={props.selectedRecord ? props.selectedRecord[\"syear\"] : \"\"}                   \r\n                //     strict={true}\r\n                //     maxLength={4}\r\n                //     onChange={(event) => props.onNumericInputOnChange(event, 'syear')}\r\n                //     noStyle={true}\r\n                //     precision={0}\r\n                //     className=\"form-control\"                   \r\n                //     isMandatory={true}\r\n                //     // errors=\"Please provide a valid number.\"\r\n                // /> */}\r\n                <DateTimePicker\r\n                    name={\"syear\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                    className='form-control'\r\n                    placeholderText={props.intl.formatMessage({ id: \"IDS_YEAR\" })}\r\n                    selected={props.selectedRecord.syear}\r\n                    // showYearDropdown={true}\r\n                    dateFormat={\"yyyy\"}\r\n                    isClearable={false}\r\n                    onChange={date => props.handleFilterDateChange(\"syear\", date)}\r\n                    value={props.selectedRecord.syear}\r\n                    showYearPicker\r\n                    isMandatory={true}\r\n                    //minDate={new Date(new Date().getFullYear() - 1, 12, 31)}\r\n                    maxDate={new Date(2999, 12, 30)}\r\n                    // scrollableYearDropdown={true}\r\n                    yearDropdownItemNumber={5}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    name={\"sdescription\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    maxLength={250}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddYear);"]},"metadata":{},"sourceType":"module"}