{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\BarcodeTemplate\\\\AddBarcodeTemplate.jsx\";\nimport React from \"react\";\nimport { Col, Nav, Row } from \"react-bootstrap\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { NavHeader } from '../../components/sidebar/sidebar.styles';\nimport { ContentPanel, ListWrapper } from './../userroletemplate/userroletemplate.styles';\nimport FormInput from '../../components/form-input/form-input.component';\n\nclass AddBarcodeTemplate extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"nformcode\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SELECTSCREEN\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.qualisList || [],\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nformcode\"] : \"\",\n      isMandatory: true,\n      required: true,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: false,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, \"nformcode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"ncontrolcode\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SELECTSCREENCONTROL\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.controlList || [],\n      value: this.props.selectedRecord[\"ncontrolcode\"] ? this.props.selectedRecord[\"ncontrolcode\"] : \"\",\n      isMandatory: true,\n      required: true,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: false,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, \"ncontrolcode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"   \", /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_ASKNUMBEROFBARCODEWANTTOPRINT\"\n      }),\n      type: \"switch\",\n      name: \"nbarcodeprint\",\n      onChange: event => this.props.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECT\"\n      }),\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nbarcodeprint\"] === 3 ? true : false : false // isMandatory={this.props.extractedColumnList[2].mandatory}\n      //  required={this.props.extractedColumnList[2].mandatory}\n      ,\n      checked: this.props.selectedRecord ? this.props.selectedRecord[\"nbarcodeprint\"] === 3 ? true : false : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 44\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, \"   \", /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_QUERYBASEDPRINTBARCODE\"\n      }),\n      type: \"switch\",\n      name: \"nsqlqueryneed\",\n      onChange: event => this.props.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECT\"\n      }),\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nsqlqueryneed\"] === 3 ? true : false : false // isMandatory={this.props.extractedColumnList[2].mandatory}\n      //  required={this.props.extractedColumnList[2].mandatory}\n      ,\n      checked: this.props.selectedRecord ? this.props.selectedRecord[\"nsqlqueryneed\"] === 3 ? true : false : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 44\n      }\n    })))), this.props.selectedRecord[\"nsqlqueryneed\"] === 3 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_FILTERBASEDSQLQUERY\"\n      }),\n      type: \"switch\",\n      name: \"nfiltersqlqueryneed\",\n      onChange: event => this.props.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECT\"\n      }),\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nfiltersqlqueryneed\"] === 3 ? true : false : false // isMandatory={this.props.extractedColumnList[2].mandatory}\n      //  required={this.props.extractedColumnList[2].mandatory}\n      ,\n      checked: this.props.selectedRecord ? this.props.selectedRecord[\"nfiltersqlqueryneed\"] === 3 ? true : false : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    })), this.props.selectedRecord[\"nfiltersqlqueryneed\"] !== 3 && /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      name: \"nsqlquerycode\",\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_SELECTQUERY\"\n      }),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      options: this.props.SqlQuery || [],\n      value: this.props.selectedRecord ? this.props.selectedRecord[\"nsqlquerycode\"] : \"\",\n      isMandatory: true,\n      required: true,\n      isMulti: false,\n      isSearchable: true,\n      isDisabled: false,\n      closeMenuOnSelect: true,\n      onChange: event => this.props.onComboChange(event, \"nsqlquerycode\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }))) : \"\", /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_NEEDSCREENFILTER\"\n      }),\n      type: \"switch\",\n      name: \"nneedconfiguration\",\n      onChange: event => this.props.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECT\"\n      }),\n      defaultValue: this.props.selectedRecord ? this.props.selectedRecord[\"nneedconfiguration\"] === 3 ? true : false : false // isMandatory={this.props.extractedColumnList[2].mandatory}\n      //  required={this.props.extractedColumnList[2].mandatory}\n      ,\n      checked: this.props.selectedRecord ? this.props.selectedRecord[\"nneedconfiguration\"] === 3 ? true : false : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    })), this.props.selectedRecord && this.props.selectedRecord[\"nneedconfiguration\"] === 3 ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addMaterial\",\n      className: \"add-txt-btn\" //hidden={props.userRoleControlRights.indexOf(addMaterialId) === -1}\n      ,\n      onClick: () => this.props.AddFilterDesign(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 41\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDSCREENFILTERDESIGN\",\n      defaultMessage: this.props.intl.formatMessage({\n        id: \"IDS_ADDSCREENFILTERDESIGN\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }))))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"tree-view1 border-left tree-left \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, this.props.selectedRecord.lstFilterlevel ? this.props.selectedRecord.lstFilterlevel.map((input, i) => /*#__PURE__*/React.createElement(ListWrapper, {\n      key: i,\n      className: \"form-label-group tree-level list_get\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(NavHeader, {\n      className: \"line\",\n      style: {\n        width: (i + 1) * 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 45\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(NavHeader, {\n      id: i,\n      value: this.props.selectedRecord.totalLevel,\n      className: \"add_field_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 45\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(NavHeader, {\n      className: \"levelcolour\",\n      md: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_LEVEL\"\n    }), \" \", i + 1), /*#__PURE__*/React.createElement(ListWrapper, {\n      style: {\n        marginLeft: (i + 8) * 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      className: \"input_custom\",\n      value: input.slabelname,\n      id: \"levelname\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 49\n      }\n    })))) : \"\"))))));\n  }\n\n}\n\nexport default injectIntl(AddBarcodeTemplate);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/BarcodeTemplate/AddBarcodeTemplate.jsx"],"names":["React","Col","Nav","Row","FormattedMessage","injectIntl","FormSelectSearch","CustomSwitch","FontAwesomeIcon","faPlus","NavHeader","ContentPanel","ListWrapper","FormInput","AddBarcodeTemplate","Component","constructor","render","props","intl","formatMessage","id","qualisList","selectedRecord","event","onComboChange","controlList","onInputOnChange","SqlQuery","AddFilterDesign","lstFilterlevel","map","input","i","width","totalLevel","marginLeft","slabelname"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Col, Nav, Row } from \"react-bootstrap\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavHeader } from '../../components/sidebar/sidebar.styles';\r\nimport { ContentPanel, ListWrapper } from './../userroletemplate/userroletemplate.styles';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\nclass AddBarcodeTemplate extends React.Component {\r\n    constructor() {\r\n        super()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            name={\"nformcode\"}\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTSCREEN\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props.qualisList || []}\r\n                            value={this.props.selectedRecord ? this.props.selectedRecord[\"nformcode\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            onChange={(event) => this.props.onComboChange(event, \"nformcode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            name={\"ncontrolcode\"}\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTSCREENCONTROL\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={this.props.controlList || []}\r\n                            value={this.props.selectedRecord[\"ncontrolcode\"] ? this.props.selectedRecord[\"ncontrolcode\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            onChange={(event) => this.props.onComboChange(event, \"ncontrolcode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <Row>\r\n                            <Col md={6}>   <CustomSwitch\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_ASKNUMBEROFBARCODEWANTTOPRINT\" })}\r\n                                type=\"switch\"\r\n                                name={\"nbarcodeprint\"}\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECT\" })}\r\n                                defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nbarcodeprint\"] === 3 ? true : false : false}\r\n                                // isMandatory={this.props.extractedColumnList[2].mandatory}\r\n                                //  required={this.props.extractedColumnList[2].mandatory}\r\n                                checked={this.props.selectedRecord ? this.props.selectedRecord[\"nbarcodeprint\"] === 3 ? true : false : false}\r\n                            /></Col>\r\n                            <Col md={6}>   <CustomSwitch\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_QUERYBASEDPRINTBARCODE\" })}\r\n                                type=\"switch\"\r\n                                name={\"nsqlqueryneed\"}\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECT\" })}\r\n                                defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nsqlqueryneed\"] === 3 ? true : false : false}\r\n                                // isMandatory={this.props.extractedColumnList[2].mandatory}\r\n                                //  required={this.props.extractedColumnList[2].mandatory}\r\n                                checked={this.props.selectedRecord ? this.props.selectedRecord[\"nsqlqueryneed\"] === 3 ? true : false : false}\r\n                            /></Col>\r\n\r\n                        </Row>\r\n\r\n                    </Col>\r\n                    {/* <Col md={12}>\r\n                     \r\n                    </Col> */}\r\n\r\n\r\n                    {this.props.selectedRecord[\"nsqlqueryneed\"] === 3 ?\r\n                        <>\r\n                            <Col md={12}>\r\n                                <CustomSwitch\r\n                                    label={this.props.intl.formatMessage({ id: \"IDS_FILTERBASEDSQLQUERY\" })}\r\n                                    type=\"switch\"\r\n                                    name={\"nfiltersqlqueryneed\"}\r\n                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECT\" })}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nfiltersqlqueryneed\"] === 3 ? true : false : false}\r\n                                    // isMandatory={this.props.extractedColumnList[2].mandatory}\r\n                                    //  required={this.props.extractedColumnList[2].mandatory}\r\n                                    checked={this.props.selectedRecord ? this.props.selectedRecord[\"nfiltersqlqueryneed\"] === 3 ? true : false : false}\r\n                                />\r\n                            </Col>\r\n                            {this.props.selectedRecord[\"nfiltersqlqueryneed\"] !== 3 &&\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        name={\"nsqlquerycode\"}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTQUERY\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={this.props.SqlQuery || []}\r\n                                        value={this.props.selectedRecord ? this.props.selectedRecord[\"nsqlquerycode\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={true}\r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange={(event) => this.props.onComboChange(event, \"nsqlquerycode\")}\r\n                                    />\r\n                                </Col>\r\n                            }\r\n\r\n\r\n                        </>\r\n                        : \"\"}\r\n                    <Col md={12}>\r\n                        <CustomSwitch\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_NEEDSCREENFILTER\" })}\r\n                            type=\"switch\"\r\n                            name={\"nneedconfiguration\"}\r\n                            onChange={(event) => this.props.onInputOnChange(event)}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECT\" })}\r\n                            defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nneedconfiguration\"] === 3 ? true : false : false}\r\n                            // isMandatory={this.props.extractedColumnList[2].mandatory}\r\n                            //  required={this.props.extractedColumnList[2].mandatory}\r\n                            checked={this.props.selectedRecord ? this.props.selectedRecord[\"nneedconfiguration\"] === 3 ? true : false : false}\r\n                        />\r\n                    </Col>\r\n                    {this.props.selectedRecord && this.props.selectedRecord[\"nneedconfiguration\"] === 3 ?\r\n                        <Col md={12}>\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <Nav.Link name=\"addMaterial\" className=\"add-txt-btn\" //hidden={props.userRoleControlRights.indexOf(addMaterialId) === -1}\r\n                                        onClick={() => this.props.AddFilterDesign()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                                        <FormattedMessage id=\"IDS_ADDSCREENFILTERDESIGN\" defaultMessage={this.props.intl.formatMessage({ id: \"IDS_ADDSCREENFILTERDESIGN\" })} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                        </Col> : <></>}\r\n                    {<ContentPanel className=\"panel-main-content\">\r\n                        <ListWrapper className=\"card-body\">\r\n                            <React.Fragment>\r\n                                <ListWrapper className=\"tree-view1 border-left tree-left \">\r\n                                    {this.props.selectedRecord.lstFilterlevel ? this.props.selectedRecord.lstFilterlevel.map((input, i) =>\r\n                                        <ListWrapper key={i} className=\"form-label-group tree-level list_get\">\r\n                                            <NavHeader className=\"line\" style={{ width: (i + 1) * 10 }}> </NavHeader>\r\n                                            <NavHeader id={i} value={this.props.selectedRecord.totalLevel}\r\n                                                className=\"add_field_button\">+</NavHeader>\r\n                                            {/* <NavHeader className=\"levelcolour\" md={1}>Level {i + 1}</NavHeader>  */}\r\n                                            <NavHeader className=\"levelcolour\" md={1}>{this.props.intl.formatMessage({ id: \"IDS_LEVEL\" })} {i + 1}</NavHeader>\r\n                                            <ListWrapper style={{ marginLeft: (i + 8) * 10 }}>\r\n                                                <FormInput className=\"input_custom\" value={input.slabelname} id=\"levelname\" type=\"text\" />\r\n                                            </ListWrapper>\r\n                                        </ListWrapper>\r\n                                    ) : \"\"\r\n                                    }\r\n                                </ListWrapper>\r\n                            </React.Fragment>\r\n                        </ListWrapper>\r\n                    </ContentPanel>}\r\n                </Row>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(AddBarcodeTemplate);"]},"metadata":{},"sourceType":"module"}