{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{AtTableWrap}from'../client-group.styles';import{FormattedMessage,injectIntl}from'react-intl';import{Grid,GridColumn as Column,GridNoRecords}from'@progress/kendo-react-grid';import{process}from'@progress/kendo-data-query';// import ReactTooltip from 'react-tooltip';\nimport{Card,Col,FormGroup,FormLabel,Row}from'react-bootstrap';import{FormControlStatic}from'./data-grid.styles';import{parse}from'@fortawesome/fontawesome-svg-core';import SingleSelectionDataGrid from'./SingleSelectionDataGrid';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{updateStore}from'../../actions';import{connect}from'react-redux';var SimpleGridWithSelection=/*#__PURE__*/function(_React$Component){_inherits(SimpleGridWithSelection,_React$Component);var _super=_createSuper(SimpleGridWithSelection);function SimpleGridWithSelection(_props){var _this;_classCallCheck(this,SimpleGridWithSelection);_this=_super.call(this,_props);_this.expandChange=function(event){var change=[];var childfalsearray=_this.props.Login.childfalsearray||[];var isExpanded=event.dataItem.expanded===undefined?event.dataItem.aggregates:event.dataItem.expanded;if(_this.props.hasSubChild&&event.value===true){event.dataItem.expanded=!isExpanded;_this.setState({showChild:false});_this.detailBand(event);}else{event.dataItem.expanded=!isExpanded;childfalsearray.push(event.dataItem);change=false;_this.setState({isExpanded:isExpanded});}// let childfalsearray=this.props.Login.childfalsearray||[]\n//  childfalsearray.push(event.dataItem)\nvar parentData=_this.props.childList?_this.props.childList.every(function(item){return item.expanded===true;}):_this.props.dataResult.every(function(item){return item.expanded===true;});if(parentData===true){change=true;}else{change=false;}var updateInfo={typeName:DEFAULT_RETURN,data:{change:change,childfalsearray:childfalsearray,checkFlag:\"2\"}};_this.props.updateStore(updateInfo);};_this.detailBand=function(props){return/*#__PURE__*/React.createElement(Row,{bsPrefix:\"margin_class\"},/*#__PURE__*/React.createElement(Col,{md:12},_this.props.hasSubChild?/*#__PURE__*/React.createElement(SingleSelectionDataGrid,{hasSubChild:_this.props.hasSubChild,subChildDataResult:_this.props.subChildDataResult&&_this.props.subChildDataResult||[],extractedColumnList:_this.props.subChildColumnList,subChildSelectionChange:_this.props.subChildSelectionChange,subChildList:props.dataItem?_this.props.subChildList[props.dataItem[_this.props.subChildMappingField]]||[]:_this.props.subChildList[props[_this.props.subChildMappingField]]||[],subChildHeaderSelectionChange:_this.props.subChildHeaderSelectionChange,subChildSelectAll:_this.props.subChildSelectAll,selectedsubcild:_this.props.selectedsubcild}):\"\"),\" \");};console.log('--->---1');_this.subChildColumnList=[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"ssamplearno\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}// { \"idsName\": \"IDS_SAMPLENAME\", \"dataField\": \"Sample Name\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\n//  { \"idsName\": \"IDS_CONTAINERTYPE\", \"dataField\": \"Container Type\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\n];_this.state={status:false};_this.setState({status:false});return _this;}// expandChange = (event) => {\n//      const isExpanded =true\n//     //     event.dataItem.expanded === undefined ?\n//     //         event.dataItem.aggregates : event.dataItem.expanded;\n//     // if (this.props.hasSubChild && event.value === true) {\n//         event.dataItem.expanded = true;\n//         this.props.childHandleExpandChange(event, this.props.dataState)\n//     // }\n//     // else {\n//     //     event.dataItem.expanded = !isExpanded;\n//          this.setState({ isExpanded });\n//     // }\n// }\n// componentDidMount() {\n//     // this.expandData1.bind(this);\n//     this.expandData1=() => {\n//         console.log(\"dash-->>\", this.foo12._data[0].expanded)\n//         //this.foo.onExpandChange();\n//         let expanded = this.foo12._data[0].dataItem.expanded\n//         this.setState({ expanded: true })\n//         this.foo12._data.map((item, i) => {\n//             this.foo12._data[i].dataItem['expanded'] = {}\n//             this.foo12._data[i].dataItem['expanded'] = true\n//             this.detailBand(this.foo12._data[i]);\n//         })\n//     }\n//  }      \n_createClass(SimpleGridWithSelection,[{key:\"componentDidMount\",value:function componentDidMount(){// this.expandData1.bind(this);\nconsole.log('--->---2');// this.expandData1();\n}},{key:\"expandData1\",value:function expandData1(){var _this2=this;this.setState({expanded:true});this.foo12._data.map(function(item,i){if(_this2.foo12._data[i].dataItem['expanded']===undefined||_this2.foo12._data[i].dataItem['expanded']!==true){_this2.foo12._data[i].dataItem['expanded']=true;}else{_this2.foo12._data[i].dataItem['expanded']=false;}_this2.detailBand(_this2.foo12._data[i]);});if(this.props.Login.childfalsearray&&this.props.Login.childfalsearray.length!==0){this.props.Login.childfalsearray.map(function(item){item['expanded']=true;_this2.detailBand(item);});}}},{key:\"render\",value:function render(){var _this3=this;console.log(\"detailband\",\"14\");return/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(Grid//    data={this.props.childDataResult}\n// ref={this.props.foo1}\n,{ref:function ref(foo12){return _this3.foo12=foo12;},data:process(this.props.childList,{skip:0,take:this.props.childList.length}),selectedField:\"selected\",expandField:this.props.expandField?this.props.expandField:false,detail:this.props.hideDetailBand?false:this.detailBand,onExpandChange:this.expandChange,onSelectionChange:this.props.childSelectionChange,onHeaderSelectionChange:this.props.headerSelectionChange,scrollable:this.props.scrollable,selectable:{enabled:true,drag:false,cell:false,mode:'multiple'},onRowClick:this.props.rowClick},/*#__PURE__*/React.createElement(Column,{field:\"selected\",width:\"50px\",title:this.props.title//   headerSelectionValue={this.props.selectAll}\n,headerSelectionValue:Object.values(this.props.childList).every(function(dd){return dd.selected===true;})?true:false}),this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(Column,{key:index,title:_this3.props.intl.formatMessage({id:item.idsName}),cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{//data-for=\"tooltip-samplegrid-wrap\"\n\"data-tip\":row[\"dataItem\"][item.dataField]},item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):row[\"dataItem\"][item.dataField]);}});})));}}]);return SimpleGridWithSelection;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{updateStore:updateStore})(injectIntl(SimpleGridWithSelection));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/data-grid/SimpleGridWithSelection.jsx"],"names":["React","AtTableWrap","FormattedMessage","injectIntl","Grid","GridColumn","Column","GridNoRecords","process","Card","Col","FormGroup","FormLabel","Row","FormControlStatic","parse","SingleSelectionDataGrid","DEFAULT_RETURN","updateStore","connect","SimpleGridWithSelection","props","expandChange","event","change","childfalsearray","Login","isExpanded","dataItem","expanded","undefined","aggregates","hasSubChild","value","setState","showChild","detailBand","push","parentData","childList","every","item","dataResult","updateInfo","typeName","data","checkFlag","subChildDataResult","subChildColumnList","subChildSelectionChange","subChildList","subChildMappingField","subChildHeaderSelectionChange","subChildSelectAll","selectedsubcild","console","log","state","status","foo12","_data","map","i","length","skip","take","expandField","hideDetailBand","childSelectionChange","headerSelectionChange","scrollable","enabled","drag","cell","mode","rowClick","title","Object","values","dd","selected","extractedColumnList","index","intl","formatMessage","id","idsName","row","dataField","isIdsField","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { AtTableWrap } from '../client-group.styles';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Grid, GridColumn as Column, GridNoRecords } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport { Card, Col, FormGroup, FormLabel, Row } from 'react-bootstrap';\r\nimport { FormControlStatic } from './data-grid.styles';\r\nimport { parse } from '@fortawesome/fontawesome-svg-core';\r\nimport SingleSelectionDataGrid from './SingleSelectionDataGrid';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    updateStore\r\n } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n \r\nclass SimpleGridWithSelection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log('--->---1')\r\n\r\n        this.subChildColumnList = [{ \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ssamplearno\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            // { \"idsName\": \"IDS_SAMPLENAME\", \"dataField\": \"Sample Name\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n            //  { \"idsName\": \"IDS_CONTAINERTYPE\", \"dataField\": \"Container Type\", \"width\": \"100px\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\r\n        ];\r\n        this.state = {\r\n            status: false\r\n        }\r\n            \r\n        this.setState({status:false})\r\n    }\r\n    // expandChange = (event) => {\r\n    //      const isExpanded =true\r\n    //     //     event.dataItem.expanded === undefined ?\r\n    //     //         event.dataItem.aggregates : event.dataItem.expanded;\r\n\r\n    //     // if (this.props.hasSubChild && event.value === true) {\r\n    //         event.dataItem.expanded = true;\r\n    //         this.props.childHandleExpandChange(event, this.props.dataState)\r\n    //     // }\r\n    //     // else {\r\n    //     //     event.dataItem.expanded = !isExpanded;\r\n    //          this.setState({ isExpanded });\r\n    //     // }\r\n    // }\r\n    // componentDidMount() {\r\n    //     // this.expandData1.bind(this);\r\n    //     this.expandData1=() => {\r\n    //         console.log(\"dash-->>\", this.foo12._data[0].expanded)\r\n    //         //this.foo.onExpandChange();\r\n    //         let expanded = this.foo12._data[0].dataItem.expanded\r\n    //         this.setState({ expanded: true })\r\n    //         this.foo12._data.map((item, i) => {\r\n    //             this.foo12._data[i].dataItem['expanded'] = {}\r\n    //             this.foo12._data[i].dataItem['expanded'] = true\r\n    //             this.detailBand(this.foo12._data[i]);\r\n             \r\n         \r\n    //         })\r\n    //     }\r\n \r\n    //  }      \r\n    componentDidMount() {\r\n        // this.expandData1.bind(this);\r\n        console.log('--->---2')\r\n       // this.expandData1();\r\n \r\n     }   \r\n    expandChange = (event) => {\r\n        let change=[]\r\n\r\n        let childfalsearray=this.props.Login.childfalsearray||[]\r\n\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ?\r\n                event.dataItem.aggregates : event.dataItem.expanded;\r\n\r\n        if (this.props.hasSubChild && event.value === true) {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.setState({showChild: false})\r\n\r\n            this.detailBand(event);\r\n\r\n\r\n        }\r\n        else {\r\n            event.dataItem.expanded = !isExpanded;\r\n            childfalsearray.push(event.dataItem)\r\n            change = false\r\n\r\n            this.setState({ isExpanded });\r\n        }\r\n        // let childfalsearray=this.props.Login.childfalsearray||[]\r\n        //  childfalsearray.push(event.dataItem)\r\n         let parentData =\r\n         this.props.childList ? this.props.childList.every(item => {\r\n             return item.expanded === true\r\n         }) : this.props.dataResult.every(item => {\r\n             return item.expanded === true\r\n         })\r\n     if (parentData === true) {\r\n          change = true\r\n     }\r\n     else {\r\n          change = false\r\n     }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                change: change,\r\n                childfalsearray: childfalsearray,\r\n                checkFlag:\"2\"\r\n                \r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    expandData1() {\r\n       \r\n        this.setState({ expanded: true })\r\n            this.foo12._data.map((item, i) => {\r\n        \r\n                if ((this.foo12._data[i].dataItem['expanded'] === undefined) || (this.foo12._data[i].dataItem['expanded'] !== true)) {\r\n                    this.foo12._data[i].dataItem['expanded'] = true\r\n\r\n                }\r\n                else {\r\n                    this.foo12._data[i].dataItem['expanded'] = false\r\n\r\n                }\r\n                this.detailBand(this.foo12._data[i]);\r\n            \r\n                \r\n            \r\n        \r\n            })\r\n        \r\n            if (this.props.Login.childfalsearray&&this.props.Login.childfalsearray.length!==0) {\r\n                \r\n            this.props.Login.childfalsearray.map(item =>{\r\n                item['expanded'] = true \r\n                this.detailBand(item)})\r\n\r\n    }\r\n\r\n    }\r\n    detailBand = (props) => {\r\n        return (\r\n            <Row bsPrefix=\"margin_class\">\r\n                <Col md={12}>\r\n                    { this.props.hasSubChild ?\r\n                        <SingleSelectionDataGrid \r\n                                hasSubChild={this.props.hasSubChild}\r\n                                subChildDataResult={this.props.subChildDataResult && this.props.subChildDataResult || []}\r\n                                extractedColumnList={this.props.subChildColumnList}\r\n                                subChildSelectionChange={this.props.subChildSelectionChange}\r\n                            subChildList={props.dataItem ? this.props.subChildList[(props.dataItem[this.props.subChildMappingField])] || []\r\n                                : this.props.subChildList[(props[this.props.subChildMappingField])] || []}\r\n                                subChildHeaderSelectionChange={this.props.subChildHeaderSelectionChange}\r\n                            subChildSelectAll={this.props.subChildSelectAll}\r\n                            selectedsubcild={this.props.selectedsubcild}\r\n\r\n                            />\r\n                            \r\n                           :\"\" }\r\n                </Col> </Row>\r\n        )\r\n    }\r\n    render() {\r\n        console.log(\"detailband\",\"14\")\r\n        return (\r\n\r\n            <AtTableWrap className=\"at-list-table\">\r\n                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip-samplegrid-wrap\" /> */}\r\n                {/* <Tooltip openDelay={100} position=\"auto\" tooltipClassName=\"ad-tooltip\" anchorElement=\"element\" parentTitle={true}> */}\r\n                <Grid\r\n                //    data={this.props.childDataResult}\r\n                    // ref={this.props.foo1}\r\n                    ref={foo12 => this.foo12 = foo12}\r\n                    data={process(this.props.childList, { skip: 0, take: this.props.childList.length })}\r\n                    selectedField=\"selected\"\r\n                    expandField={this.props.expandField ? this.props.expandField : false}\r\n                    detail={this.props.hideDetailBand ? false : this.detailBand}\r\n                    onExpandChange={this.expandChange}\r\n                    onSelectionChange={this.props.childSelectionChange}\r\n                    onHeaderSelectionChange={this.props.headerSelectionChange}\r\n                    scrollable={this.props.scrollable}\r\n                    selectable={{\r\n                        enabled: true,\r\n                        drag: false,\r\n                        cell: false,\r\n                        mode: 'multiple'\r\n                      }} \r\n                     onRowClick={this.props.rowClick}>\r\n                    <Column\r\n                        field=\"selected\"\r\n                        width=\"50px\"\r\n                        title={this.props.title}\r\n                        //   headerSelectionValue={this.props.selectAll}\r\n                        headerSelectionValue={Object.values(this.props.childList).every((dd) => {\r\n                            return dd.selected === true\r\n                        }) ? true : false\r\n                        }\r\n                    />\r\n                    {/* <Column type='checkbox' width='50'></Column> */}\r\n\r\n                    {this.props.extractedColumnList.map((item, index) =>\r\n                        <Column key={index}\r\n                            title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                            cell={(row) => (\r\n                                <td \r\n                                //data-for=\"tooltip-samplegrid-wrap\"\r\n                                    data-tip={row[\"dataItem\"][item.dataField]}>\r\n                                    {/* title={row[\"dataItem\"][item.dataField]}> */}\r\n                                    {item.isIdsField ? <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                        : row[\"dataItem\"][item.dataField]}\r\n                                </td>)}\r\n                        />\r\n                    )}\r\n                </Grid>\r\n                {/* </Tooltip>           */}\r\n            </AtTableWrap>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{updateStore})(injectIntl(SimpleGridWithSelection));\r\n"]},"metadata":{},"sourceType":"module"}