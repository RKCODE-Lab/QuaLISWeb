{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import FormInput from'../../components/form-input/form-input.component';import{Row,Col,Card,Nav,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt,faThumbsUp}from'@fortawesome/free-solid-svg-icons';import{connect}from'react-redux';import'../../assets/./styles/tree.css';import React,{Component}from'react';import{NavHeader}from'../../components/sidebar/sidebar.styles';import{ContentPanel,ListWrapper}from'./../userroletemplate/userroletemplate.styles';import{callService,crudMaster,updateStore,addModel,validateEsignCredential,fetchRecordByTemplateID,getTemplateMasterTree,filterColumnData,getSampleTypeProductCategory,getStudyTemplateByCategoryType}from'../../actions';import{injectIntl}from'react-intl';import{toast}from'react-toastify';import{sortData,getControlMap,showEsign,constructOptionList}from'../../components/CommonScript';import ListMaster from'../../components/list-master/list-master.component';import TemplateMasterFilter from'./../templatemaster/TemplateMasterFilter';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import Esign from'../audittrail/Esign';// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import{transactionStatus}from'../../components/Enumeration';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport BreadcrumbComponent from'../../components/Breadcrumb.Component';import{Affix}from'rsuite';// import ReactTooltip from 'react-tooltip';\nvar templatemaster=/*#__PURE__*/function(_Component){_inherits(templatemaster,_Component);var _super=_createSuper(templatemaster);function templatemaster(props){var _this;_classCallCheck(this,templatemaster);_this=_super.call(this,props);_this.closeModel=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"approve\"){loadEsign=false;openModal=false;}else{loadEsign=false;}}else{openModal=false;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(event,fieldName){//if (event !== null) {\nvar filterSelectedRecord=_this.state.filterSelectedRecord||{};filterSelectedRecord[fieldName]=event;if(fieldName===\"sampleType\"){var url='templatemaster/getSampleTypeComboChange';var inputData={userinfo:_this.props.Login.userInfo,nsampletypecode:event.item[\"nsampletypecode\"]};filterSelectedRecord[\"sampletype\"]=event;var inputParam={inputData:inputData,url:url};_this.props.getSampleTypeProductCategory(filterSelectedRecord,inputParam,_this.props.Login.masterData);}else{//categoryType\nvar masterData=_this.props.Login.masterData;masterData[\"SelectedCategoryFilter\"]=event.item;//masterData[\"SelectedCategory\"] = event.item;\nmasterData[\"SelectedSample\"]=_this.props.Login.masterData.SelectedSampleFilter;//masterData[\"selectedValues\"].ncategorycode = event.value;\nfilterSelectedRecord[\"categorytype\"]=event;var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:masterData,filterSelectedRecord:filterSelectedRecord}};_this.props.updateStore(updateInfo);}};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.ConfirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteRecord(\"delete\",deleteId);});};_this.onFilterSubmit=function(){var filterSelectedRecord=_this.state.filterSelectedRecord||{};var url='templatemaster/getTemplateMasterVersion';var dummyNumber=-12;_this.searchRef.current.value=\"\";var inputData={userinfo:_this.props.Login.userInfo,nsampletypecode:filterSelectedRecord[\"sampletype\"]?filterSelectedRecord[\"sampletype\"].value:dummyNumber,ncategorycode:filterSelectedRecord[\"categorytype\"]?filterSelectedRecord[\"categorytype\"].value:dummyNumber,nformcode:filterSelectedRecord[\"categorytype\"]?filterSelectedRecord[\"categorytype\"][\"item\"][\"nformcode\"]:dummyNumber};var inputParam={url:url,inputData:inputData};_this.props.getStudyTemplateByCategoryType(inputParam,_this.props.Login.masterData,filterSelectedRecord,true);};_this.approveRecord=function(operation,ncontrolCode){var selectedRecord=_this.props.Login.selectedRecord?_this.props.Login.selectedRecord:\"\";///const selected = this.props.Login.masterData[\"selected\"];\nvar selected=_this.props.Login.masterData.SelectedTreeVersionTemplate;if(selectedRecord[\"ntransactionstatus\"]===transactionStatus.APPROVED||selectedRecord[\"ntransactionstatus\"]===transactionStatus.RETIRED){toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTOAPPROVE\"}));}else{var inputData=[];inputData={\"userinfo\":_this.props.Login.userInfo,\"ntreeversiontempcode\":selected.ntreeversiontempcode,// \"ncategorycode\": this.props.Login.masterData.selectedValues[\"ncategorycode\"],\n// \"nformcode\": this.props.Login.masterData.selectedValues[\"nformcode\"],\n\"ncategorycode\":parseInt(_this.props.Login.masterData.SelectedCategory[_this.props.Login.masterData.SelectedCategoryFilterTextLabel]),\"nformcode\":parseInt(_this.props.Login.masterData.SelectedCategory.nformcode),\"ntemplatecode\":selected.ntemplatecode?selected.ntemplatecode:undefined};var postParam={inputListName:\"lstTreeversionTemplate\",//selectedObject: \"selectedTempVersion\",\nselectedObject:\"SelectedTreeVersionTemplate\",primaryKeyField:\"ntreeversiontempcode\",primaryKeyValue:selected.ntreeversiontempcode,fetchUrl:\"templatemaster/getTemplateVersionById\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={methodUrl:\"TemplateMasterVersion\",classUrl:_this.props.Login.inputParam.classUrl,inputData:inputData,operation:operation,postParam:postParam};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,openModal:true,screenData:{inputParam:inputParam,masterData:masterData},operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.deleteRecord=function(operation,ncontrolCode){// const selected = this.props.Login.masterData[\"selected\"];\nvar selected=_this.props.Login.masterData.SelectedTreeVersionTemplate;var selectedLevel=_this.props.Login.masterData.lstTemplateMasterlevel;if(_this.props.Login.selectedRecord[\"ntransactionstatus\"]===transactionStatus.APPROVED||_this.props.Login.selectedRecord[\"ntransactionstatus\"]===transactionStatus.RETIRED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTRECORDTODELETE\"}));}else{var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData={\"userinfo\":_this.props.Login.userInfo,\"ntreeversiontempcode\":selected.ntreeversiontempcode,\"ntreecontrolcode\":selectedLevel.map(function(item){return item.ntreecontrolcode;}).join(\",\"),// \"ncategorycode\": this.props.Login.masterData.selectedValues[\"ncategorycode\"],\n// \"nformcode\": this.props.Login.masterData.selectedValues[\"nformcode\"]\n\"ncategorycode\":parseInt(_this.props.Login.masterData.SelectedCategory[_this.props.Login.masterData.SelectedCategoryFilterTextLabel]),\"nformcode\":parseInt(_this.props.Login.masterData.SelectedCategory.nformcode),\"nsampletypecode\":parseInt(_this.props.Login.masterData.SelectedTreeVersionTemplate.nsampletypecode)};var postParam={inputListName:\"lstTreeversionTemplate\",//selectedObject: \"selectedTempVersion\",\nselectedObject:\"SelectedTreeVersionTemplate\",primaryKeyField:\"ntreeversiontempcode\",primaryKeyValue:selected.ntreeversiontempcode,fetchUrl:\"templatemaster/getTemplateVersionById\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={methodUrl:\"TemplateMaster\",classUrl:_this.props.Login.inputParam.classUrl,inputData:inputData,operation:operation,postParam:postParam};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,openModal:true,screenData:{inputParam:inputParam,masterData:masterData},operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.saveTMTreetemplate=function(saveType,formRef){var listTemplateMasterTree=[];var levelno=0;//const selected = this.props.Login.masterData[\"selected\"];\nvar selected=_this.props.Login.masterData.SelectedTreeVersionTemplate;var selectedLevel=_this.props.Login.masterData.lstTemplateMasterlevel;for(var index=0;index<_this.props.Login.totalLevel;index++){levelno=index+1;if(_this.props.Login.selectedRecord[index]){listTemplateMasterTree.push(_this.props.Login.selectedRecord[index].toString());}else{return toast.info(_this.props.intl.formatMessage({id:\"IDS_PLESEENTERTHELEVEL\"})+levelno);}}var inputData=[];var methodUrl=\"\";inputData={\"userinfo\":_this.props.Login.userInfo,\"ncategorycode\":parseInt(_this.props.Login.masterData.SelectedCategory[_this.props.Login.masterData.SelectedCategoryFilterTextLabel]),\"nformcode\":parseInt(_this.props.Login.masterData.SelectedCategory.nformcode),\"ntreecontrolcode\":selectedLevel.map(function(item){return item.ntreecontrolcode;}).join(\",\"),\"ntemplatecode\":selected?selected.ntemplatecode:-1,\"ntreeversiontempcode\":selected?selected.ntreeversiontempcode:-1,\"specname\":_this.props.Login.selectedInput.sversiondescription,\"treetemptranstestgroup\":listTemplateMasterTree,\"nsampletypecode\":parseInt(_this.props.Login.masterData.SelectedSample[\"nsampletypecode\"])};var postParam=undefined;if(_this.props.Login.operation===\"create\"){methodUrl=\"Templatemaster\";}else{methodUrl=\"EditTemplatemasterSubmit\";postParam={inputListName:\"lstTreeversionTemplate\",selectedObject:\"selectedTempVersion\",primaryKeyField:\"ntreeversiontempcode\"};}var inputParam={methodUrl:methodUrl,classUrl:_this.props.Login.inputParam.classUrl,inputData:inputData,operation:_this.props.Login.operation,searchRef:_this.searchRef,formRef:formRef,postParam:postParam};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.onInputOnChange=function(event,levelno){var selectedRecord=_this.props.Login.selectedRecord||{};var selectedInput=_this.props.Login.selectedInput||{};if(levelno===\"version\"){selectedInput[event.target.name]=event.target.value;}else{if(event.target.value.trim()!==\"\"){selectedRecord[levelno]=event.target.value;}else{selectedRecord[levelno]=undefined;}}var updateInfo={typeName:DEFAULT_RETURN,data:{selectedInput:selectedInput,selectedRecord:selectedRecord}};_this.props.updateStore(updateInfo);};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.reloadData=function(){console.log(\"stdy pla reload:\",_this.props.Login.masterData,_this.state.selectedRecord);_this.searchRef.current.value=\"\";var url='templatemaster/getTemplateMasterVersion';var dummyNumber=-12;var inputData={userinfo:_this.props.Login.userInfo,nsampletypecode:_this.props.Login.masterData.SelectedSample?_this.props.Login.masterData.SelectedSample.nsampletypecode:dummyNumber,ncategorycode:_this.props.Login.masterData.SelectedCategory?_this.props.Login.masterData.SelectedCategory[_this.props.Login.masterData.SelectedCategoryFilterTextLabel]:dummyNumber,nformcode:_this.props.Login.masterData.SelectedCategory?_this.props.Login.masterData.SelectedCategory.nformcode:dummyNumber};var masterData=_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{searchedData:undefined});var inputParam={url:url,inputData:inputData};_this.props.getStudyTemplateByCategoryType(inputParam,masterData,_this.state.selectedRecord,false);//--------------------------------------------------\n// this.searchRef.current.value = \"\";\n// const inputParam = {\n//     inputData: { \"userinfo\": this.props.Login.userInfo },\n//     classUrl: \"templatemaster\",\n//     methodUrl: \"TemplateMaster\",\n//     userInfo: this.props.Login.userInfo,\n//     displayName: \"IDS_STUDYPLANTEMPLATE\"\n// };\n// this.props.callService(inputParam);\n//////////////////---------------------------\n};_this.state={openModal:false,userRoleControlRights:[],templateTreeData:[],TMvalues:[{TMvalue:\"\"}],selected:{},selectedValues:undefined,error:\"\",controlMap:new Map()};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.searchFieldList=[\"stransdisplaystatus\",\"sversionstatus\",\"sversiondescription\"];return _this;}_createClass(templatemaster,[{key:\"appendInputLevel\",value:function appendInputLevel(e){if(this.props.Login.selectedRecord[this.props.Login.id]!==undefined){if(this.props.Login.id<9){var totalLevel=this.props.Login.totalLevel?this.props.Login.totalLevel:1;var id=parseInt(this.props.Login.id)+1;var totalid=totalLevel;if(totalid===id){var newInput=\"input-\".concat(totalLevel);var templateTreeData=this.props.Login.templateTreeData.concat([newInput]);var updateInfo={typeName:DEFAULT_RETURN,data:{templateTreeData:templateTreeData,totalLevel:totalLevel+1,id:id}};this.props.updateStore(updateInfo);}}}else{toast.info(this.props.intl.formatMessage({id:\"IDS_PLSENTERTEMPLATELEVEL\"}));}}},{key:\"removeTree\",value:function removeTree(event,i){var selectedRecord=this.props.Login.selectedRecord?this.props.Login.selectedRecord:\"\";var totalLevel=this.props.Login.totalLevel?this.props.Login.totalLevel:1;var templateTreeData=this.props.Login.templateTreeData;templateTreeData.splice(i,10);if(selectedRecord[i]){for(var j=i;j<totalLevel;j++){delete selectedRecord[j];};}var updateInfo={typeName:DEFAULT_RETURN,data:{templateTreeData:templateTreeData,selectedRecord:selectedRecord,totalLevel:i,id:i-1}};this.props.updateStore(updateInfo);}// onComboChange = (event, fieldname) => {\n//     if (event !== null) {\n//         let uRL = \"\";\n//         let inputData = [];\n//         if (fieldname === \"sampleType\") {\n//             uRL = 'templatemaster/getSampleTypeProductCatrgory';\n//             inputData = {\n//                 userinfo: this.props.Login.userInfo,\n//                 nsampletypecode: event.item[\"nsampletypecode\"]\n//             }\n//         }\n//         else {\n//             uRL = 'templatemaster/getTemplateMasterVersion';\n//             inputData = {\n//                 userinfo: this.props.Login.userInfo,\n//                 nsampletypecode: event.item[\"nsampletypecode\"],\n//                 ncategorycode: event.item[this.props.Login.masterData.categoryValuemember],\n//                 nformcode: event.item[\"nformcode\"]\n//             }\n//         }\n//         rsapi.post(uRL, inputData)\n//             .then(response => {\n//                 const categroyLable = response.data.lstcategory ? Object.keys(response.data.lstcategory)[0] : this.props.Login.masterData.categroyLable;\n//                 const categoryValuemember = response.data.lstcategory ? Object.keys(response.data.lstcategory[categroyLable][0])[0] : this.props.Login.masterData.categoryValuemember;\n//                 const categoryDisplaymemeber = response.data.lstcategory ? Object.keys(response.data.lstcategory[categroyLable][0])[1] : this.props.Login.masterData.categoryDisplaymemeber;\n//                 const selectedValues = this.props.Login.masterData.selectedValues || [];\n//                 const selectedRecord = this.props.Login.selectedRecord || {};\n//                 let Taglstcategory;\n//                 if (response.data.lstcategory) {\n//                     Taglstcategory = constructOptionList(response.data.lstcategory[categroyLable] || [], categoryValuemember,\n//                         categoryDisplaymemeber, categoryValuemember, \"ascending\", undefined);\n//                 }\n//                 // let TaglstSampleType;\n//                 // if (response.data.lstSampleType) {\n//                 //     TaglstSampleType = constructOptionList(response.data.lstSampleType || [], \"nsampletypecode\",\n//                 //         \"ssampletypename\", \"nsampletypecode\", \"ascending\", undefined);\n//                 // }\n//                 selectedValues[\"nsampletypecode\"] = event.item[\"nsampletypecode\"] ? event.item[\"nsampletypecode\"] : this.props.Login.masterData.selectedValues[\"nsampletypecode\"];\n//                 selectedValues[\"nformcode\"] = (fieldname === \"sampleType\") ? response.data.lstcategory ?\n//                     response.data.lstcategory[categroyLable][0][\"nformcode\"] : event.item[\"nformcode\"] ? event.item[\"nformcode\"] :\n//                         this.props.Login.masterData.selectedValues[\"nformcode\"] : this.props.Login.masterData.selectedValues[\"nformcode\"];\n//                 selectedValues[\"ncategorycode\"] = (fieldname === \"sampleType\") ? Taglstcategory ?\n//                     Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember] : this.props.Login.masterData.selectedValues[\"ncategorycode\"]\n//                         ? event.item[this.props.Login.masterData.categoryValuemember] : \"\" :\n//                     event.item[this.props.Login.masterData.categoryValuemember] ? event.item[this.props.Login.masterData.categoryValuemember] : \"\";\n//                 if (response.data.lstTreeversionTemplate) {\n//                     sortData(response.data.lstTreeversionTemplate, \"descending\", \"ntreeversiontempcode\")\n//                 }\n//                 if (response.data.lstTemplateMasterlevel) {\n//                     sortData(response.data.lstTemplateMasterlevel, \"ascending\", \"nlevelno\")\n//                 }\n//                 selectedRecord[\"ntransactionstatus\"] = response.data.lstTreeversionTemplate.length > 0 ? response.data.lstTreeversionTemplate[0][\"ntransactionstatus\"] : \"\"\n//                 this.setState({\n//                     selectedSampleType: (fieldname === \"sampleType\" ? parseInt(event.value) : this.state.selectedSampleType)\n//                 });\n//                 this.props.Login.masterData[\"defaultsampletype\"] = (fieldname === \"sampleType\") ? event : response.data.lstSampleType ? response.data.lstSampleType.length > 0 ?\n//                     {\n//                         \"value\": response.data.lstSampleType[0][\"nsampletypecode\"],\n//                         \"label\": response.data.lstSampleType[0][\"ssampletypename\"]\n//                     } : this.props.Login.masterData.defaultsampletype : this.props.Login.masterData.defaultsampletype;\n//                 // this.props.Login.masterData[\"lstSampleType\"] = TaglstSampleType ? TaglstSampleType.get(\"OptionList\") : this.props.Login.masterData.lstSampleType;\n//                 this.props.Login.masterData[\"lstcategory\"] = Taglstcategory ? Taglstcategory.get(\"OptionList\") : fieldname === \"cateogryType\" ? this.props.Login.masterData[\"lstcategory\"] : \"\";\n//                 this.props.Login.masterData[\"lstTreeversionTemplate\"] = response.data.lstTreeversionTemplate ? response.data.lstTreeversionTemplate : \"\";\n//                 this.props.Login.masterData[\"lstTemplateMasterlevel\"] = response.data.lstTemplateMasterlevel ? response.data.lstTemplateMasterlevel : \"\";\n//                 this.props.Login.masterData[\"selected\"] = response.data.lstTreeversionTemplate ? response.data.lstTreeversionTemplate.length > 0 ?\n//                     response.data.lstTreeversionTemplate[0] : {} : this.props.Login.masterData[\"selected\"];\n//                 this.props.Login.masterData[\"selectedValues\"] = selectedValues;\n//                 this.props.Login.masterData[\"defaultCatogoryType\"] = (fieldname === \"cateogryType\") ? event : Taglstcategory ? Taglstcategory.get(\"OptionList\") ? {\n//                     \"value\": Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember],\n//                     \"label\": Taglstcategory.get(\"OptionList\")[0].item[categoryDisplaymemeber]\n//                 } : this.props.Login.masterData.defaultCatogoryType : this.props.Login.masterData.defaultCatogoryType;\n//                 this.props.Login.masterData[\"categroyLable\"] = categroyLable;\n//                 this.props.Login.masterData[\"categoryValuemember\"] = categoryValuemember;\n//                 this.props.Login.masterData[\"categoryDisplaymemeber\"] = categoryDisplaymemeber;\n//                 this.props.Login.masterData[\"searchedData\"] = undefined;\n//                 this.searchRef.current.value = \"\";\n//                 const updateInfo = {\n//                     typeName: DEFAULT_RETURN,\n//                     data: { masterData: this.props.Login.masterData, selectedRecord }\n//                 }\n//                 this.props.updateStore(updateInfo);\n//             })\n//             .catch(error => {\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.info(error.response.data);\n//                 }\n//             })\n//     }\n// }\n},{key:\"render\",value:function render(){var _this2=this;var _this$props$Login=this.props.Login,masterData=_this$props$Login.masterData,userInfo=_this$props$Login.userInfo,openModal=_this$props$Login.openModal,templateTreeData=_this$props$Login.templateTreeData,selectedInput=_this$props$Login.selectedInput,selectedRecord=_this$props$Login.selectedRecord,totalLevel=_this$props$Login.totalLevel;var _this$props$Login$mas=this.props.Login.masterData,lstTreeversionTemplate=_this$props$Login$mas.lstTreeversionTemplate,lstTemplateMasterlevel=_this$props$Login$mas.lstTemplateMasterlevel;var addId=this.state.controlMap.has(\"AddTempalateMaster\")&&this.state.controlMap.get(\"AddTempalateMaster\").ncontrolcode;var editId=this.state.controlMap.has(\"EditTempalateMaster\")&&this.state.controlMap.get(\"EditTempalateMaster\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteTempalateMaster\")&&this.state.controlMap.get(\"DeleteTempalateMaster\").ncontrolcode;var approveId=this.state.controlMap.has(\"ApproveTempalateMaster\")&&this.state.controlMap.get(\"ApproveTempalateMaster\").ncontrolcode;lstTemplateMasterlevel=lstTemplateMasterlevel?sortData(lstTemplateMasterlevel,'ascending','nlevelno'):[];var filterParam={inputListName:\"lstTreeversionTemplate\",selectedObject:\"selectedTempVersion\",primaryKeyField:\"ntreeversiontempcode\",fetchUrl:\"templatemaster/getTemplateVersionById\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};var mandatoryFields=[{\"mandatory\":true,\"idsName\":\"IDS_TEMPLATENAME\",\"dataField\":\"sversiondescription\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];var breadCrumbData=this.generateBreadCrumData()||[];var selected=this.props.Login.masterData.SelectedTreeVersionTemplate;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster,{masterData:masterData,formatMessage:this.props.intl.formatMessage,screenName:this.props.intl.formatMessage({id:\"IDS_TEMPLATE\"}),masterList:this.props.Login.masterData.searchedData||lstTreeversionTemplate,userInfo:this.props.Login.userInfo,getMasterDetail:function getMasterDetail(TMvalue){return _this2.props.getTemplateMasterTree(TMvalue,masterData,userInfo);}//selectedMaster={this.props.Login.masterData.selected}\n,selectedMaster:selected,primaryKeyField:\"ntreeversiontempcode\",mainField:\"sversiondescription\",firstField:\"sversiondescription\",secondField:\"stransdisplaystatus\",isIDSField:\"No\",openModal:function openModal(){return _this2.props.addModel(\"create\",addId,_this2.props.Login.masterData.lstcategory,selectedInput);}// needAccordianFilter={true}\n,userRoleControlRights:this.state.userRoleControlRights,filterColumnData:this.props.filterColumnData,filterParam:filterParam,searchRef:this.searchRef,addId:addId,reloadData:this.reloadData,hidePaging:true,needAccordianFilter:false,showFilterIcon:true,showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,filterComponent:[{\"IDS_TEMPLATEMASTERFILTER\":/*#__PURE__*/React.createElement(TemplateMasterFilter,{formatMessage:this.props.intl.formatMessage,filterSampleType:this.state.TaglstSampleType||[],filterCateogryType:this.state.Taglstcategory||[],catogryValuemember:this.props.Login.masterData.SelectedCategoryFilterTextLabel||\"\",categoryDisplaymemeber:this.props.Login.masterData.SelectedCategoryFilterValueLabel||\"\"//labelName={this.state.selectedRecord.categroyLable || \"\"}\n,labelName:this.props.Login.masterData.lstcategory&&Object.keys(this.props.Login.masterData.lstcategory)[0]||this.state.filterSelectedRecord&&this.state.filterSelectedRecord.categroyLable,selectedInput:this.state.selectedInput||[],onComboChange:this.onComboChange,filterSelectedRecord:this.state.filterSelectedRecord||{},defaultsampletype:this.props.Login.masterData.SelectedSampleFilter&&{label:this.props.Login.masterData.SelectedSampleFilter.ssampletypename,value:this.props.Login.masterData.SelectedSampleFilter.nsampletypecode,item:this.props.Login.masterData.SelectedSampleFilter},defaultCatogoryType:this.props.Login.masterData.SelectedCategoryFilter&&{label:this.props.Login.masterData.SelectedCategoryFilter[this.props.Login.masterData.SelectedCategoryFilterValueLabel],value:this.props.Login.masterData.SelectedCategoryFilter[this.props.Login.masterData.SelectedCategoryFilterTextLabel],item:this.props.Login.masterData.SelectedCategoryFilter}})}]})),this.props.Login.masterData.selectedTempVersion&&selected?/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(ListWrapper,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"product-title-main\"},selected.sversiondescription))),/*#__PURE__*/React.createElement(Card.Subtitle,{className:\"readonly-text font-weight-normal\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:8,className:\"d-flex\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"product-title-sub\"},\"Version : \",selected.nversionno===-1?\"-\":selected.nversionno),/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined \".concat(selected.ntransactionstatus===transactionStatus.DRAFT?\"outline-secondary\":selected.ntransactionstatus===transactionStatus.APPROVED?\"outline-success\":\"outline-danger\",\" btn-sm mx-md-3 mx-sm-2\")},selected.stransdisplaystatus)),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(Nav,{style:{float:\"right\"}},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})//    data-for=\"tooltip_list_wrap\"\n//onClick={() => this.props.fetchRecordByTemplateID(\"ntreeversiontempcode\", selected.ntreeversiontempcode, \"update\", selectedRecord, selectedInput, userInfo, editId)}\n,onClick:function onClick(){return _this2.props.fetchRecordByTemplateID(\"ntreeversiontempcode\",selected.ntreeversiontempcode,\"update\",{ntransactionstatus:_this2.props.Login.masterData[\"lstTemplateMasterlevel\"][0][\"ntransactionstatus\"]},{},userInfo,editId);},hidden:this.state.userRoleControlRights.indexOf(editId)===-1},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 \",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"})// data-for=\"tooltip_list_wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this2.ConfirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_APPROVE\"})//    data-for=\"tooltip_list_wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(approveId)===-1,onClick:function onClick(){return _this2.approveRecord(\"approve\",approveId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp}))))))))),/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(ListWrapper,{className:\"card-body\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"tree-view1 border-left tree-left \"},lstTemplateMasterlevel?lstTemplateMasterlevel.map(function(input,i){return/*#__PURE__*/React.createElement(ListWrapper,{key:i,className:\"form-label-group tree-level list_get\"},/*#__PURE__*/React.createElement(NavHeader,{className:\"line\",style:{width:(i+1)*10}},\" \"),/*#__PURE__*/React.createElement(NavHeader,{id:i,value:totalLevel,className:\"add_field_button\"},\"+\"),/*#__PURE__*/React.createElement(NavHeader,{className:\"levelcolour\",md:1},\"Level \",i+1),/*#__PURE__*/React.createElement(ListWrapper,{style:{marginLeft:(i+8)*10}},/*#__PURE__*/React.createElement(FormInput,{className:\"input_custom\",value:input.slabelname,id:\"levelname\",type:\"text\"})));}):\"\"))))):\"\")),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{operation:this.props.Login.operation,onSaveClick:this.saveTMTreetemplate,validateEsign:this.validateEsign,esign:this.props.Login.loadEsign,screenName:\"IDS_TEMPLATEMASTER\",closeModal:this.closeModel,selectedRecord:this.props.Login.loadEsign?this.state.selectedRecord:selectedInput,mandatoryFields:mandatoryFields,show:openModal,inputParam:this.props.Login.inputParam,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation//formatMessage={this.props.intl.formatMessage}\n,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_TEMPLATENAME\"}),name:\"sversiondescription\",as:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event,\"version\");},placeholder:this.props.intl.formatMessage({id:\"IDS_TEMPLATENAME\"}),defaultValue:selectedInput?selectedInput[\"sversiondescription\"]:\"\",isMandatory:true,required:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ListWrapper,{className:\"tree-view border-left\"},templateTreeData?templateTreeData.map(function(input,i){return/*#__PURE__*/React.createElement(ListWrapper,{className:\"form-label-group tree-level\"},/*#__PURE__*/React.createElement(NavHeader,{className:\"line\",style:{width:(i+1)*10}},\" \"),/*#__PURE__*/React.createElement(NavHeader,{id:i,value:totalLevel,className:\"add_field_button\"},\"+\"),/*#__PURE__*/React.createElement(NavHeader,{md:1},\"level \",/*#__PURE__*/React.createElement(NavHeader,{className:\"tree-value\"},i+1)),/*#__PURE__*/React.createElement(Nav,{className:\"btn mr-2 action-icons-wrap\",style:{float:\"right\",visibility:i===0?'hidden':'visible'},onClick:function onClick(event){return _this2.removeTree(event,i);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,className:\"ActionIconColor\"})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,style:{marginLeft:(i+3)*10}},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"slabelname\",type:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event,i);},placeholder:_this2.props.intl.formatMessage({id:\"IDS_ENTERTEMPLATELEVEL\"}),defaultValue:selectedRecord?selectedRecord[i]:\"\",maxLength:50})))));}):\"\"),/*#__PURE__*/React.createElement(NavHeader,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(e){return _this2.appendInputLevel(e);},className:\"btn btn-circle solid-blue\",role:\"button\"},\"+\"))))}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.filterSelectedRecord!==previousProps.Login.filterSelectedRecord){this.setState({filterSelectedRecord:this.props.Login.filterSelectedRecord});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){if(this.props.Login.masterData!==previousProps.Login.masterData){var userRoleControlRights=this.state.userRoleControlRights||[];var controlMap=this.state.controlMap||{};var filterSelectedRecord=this.state.filterSelectedRecord||{};// if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) \n// {\nif(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);//}\nvar selectedValues={};var categroyLable=this.props.Login.masterData.categroyLable?this.props.Login.masterData.categroyLable:this.props.Login.masterData.lstcategory?Object.keys(this.props.Login.masterData.lstcategory)[0]:\"\";var categoryValuemember=this.props.Login.masterData.SelectedCategoryFilterTextLabel;var categoryDisplaymemeber=this.props.Login.masterData.SelectedCategoryFilterValueLabel;filterSelectedRecord[\"ntransactionstatus\"]=this.props.Login.masterData.lstTemplateMasterlevel?this.props.Login.masterData.lstTemplateMasterlevel.length>0?this.props.Login.masterData.lstTemplateMasterlevel[0][\"ntransactionstatus\"]:this.props.Login.filterSelectedRecord?this.props.Login.filterSelectedRecord[\"ntransactionstatus\"]:[]:[];var TaglstSampleType=[];var Taglstcategory=[];// if (this.props.Login.masterData.lstSampleType) {\n//     sortData(this.props.Login.masterData.lstSampleType, \"descending\", \"nsorter\");\n// }\nif(this.props.Login.masterData.lstSampleType&&!this.props.Login.masterData.lstSampleType[0].item){var sampleTypeMap=constructOptionList(this.props.Login.masterData.lstSampleType||[],\"nsampletypecode\",\"ssampletypename\",\"nsorter\",\"ascending\",undefined);TaglstSampleType=sampleTypeMap.get(\"OptionList\");}if(this.props.Login.masterData.lstcategory&&this.props.Login.masterData.lstcategory[categroyLable]){var categoryTypeMap=this.props.Login.masterData.lstcategory[categroyLable]?constructOptionList(this.props.Login.masterData.lstcategory[categroyLable]||[],categoryValuemember,categoryDisplaymemeber,categoryValuemember,\"ascending\",undefined):this.props.Login.masterData.lstcategory;Taglstcategory=categoryTypeMap.get(\"OptionList\");}if(this.props.Login.masterData.lstTemplateMasterlevel){sortData(this.props.Login.masterData.lstTemplateMasterlevel,\"ascending\",\"nlevelno\");}selectedValues[\"ncategorycode\"]=this.props.Login.masterData.selectedValues?this.props.Login.masterData.selectedValues[\"ncategorycode\"]:Taglstcategory.length>0?Taglstcategory[0].item[categoryValuemember]:-2;selectedValues[\"nformcode\"]=this.props.Login.masterData.selectedValues?this.props.Login.masterData.selectedValues[\"nformcode\"]:Taglstcategory.length>0?Taglstcategory[0].item[\"nformcode\"]:-2;selectedValues[\"nsampletypecode\"]=TaglstSampleType.length>0?TaglstSampleType[0].item[\"nsampletypecode\"]:this.props.Login.masterData.selectedValues?this.props.Login.masterData.selectedValues[\"nsampletypecode\"]:-2;filterSelectedRecord[\"categroyLable\"]=categroyLable;filterSelectedRecord[\"categoryValuemember\"]=categoryValuemember;filterSelectedRecord[\"categoryDisplaymemeber\"]=categoryDisplaymemeber;filterSelectedRecord[\"sampletype\"]=TaglstSampleType[0];filterSelectedRecord[\"categorytype\"]=Taglstcategory[0];this.setState({TaglstSampleType:TaglstSampleType,Taglstcategory:Taglstcategory,filterSelectedRecord:filterSelectedRecord,userRoleControlRights:userRoleControlRights?userRoleControlRights:this.state.userRoleControlRights,controlMap:controlMap?controlMap:this.state.controlMap});}}else{if(this.props.Login.masterData.lstcategory!==previousProps.Login.masterData.lstcategory){this.setState({Taglstcategory:this.props.Login.Taglstcategory});}}}// componentDidUpdate1(previousProps) {\n//     if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n//         this.setState({ selectedRecord: this.props.Login.selectedRecord });\n//     }\n//     if (this.props.Login.masterData !== previousProps.Login.masterData) {\n//         // if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n//         //     this.setState({ selectedRecord: this.props.Login.selectedRecord });\n//         // }\n//         const userRoleControlRights = this.state.userRoleControlRights || [];\n//         let controlMap = this.state.controlMap || {};\n//         let selectedRecord = this.state.selectedRecord || {};\n//         if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n//             if (this.props.Login.userRoleControlRights) {\n//                 this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\n//                     userRoleControlRights.push(item.ncontrolcode))\n//             }\n//             controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\n//             // selectedRecord[\"defaultsampletype\"] =  this.props.Login.masterData && this.props.Login.masterData.defaultsampletype ? this.props.Login.masterData.defaultsampletype : TaglstSampleType ? {\n//             //     \"value\": TaglstSampleType.get(\"OptionList\")[0].item[\"nsampletypecode\"],\n//             //     \"label\": TaglstSampleType.get(\"OptionList\")[0].item[\"ssampletypename\"]\n//             // } : \"\";\n//             // selectedRecord[\"defaultCatogoryType\"] = this.props.Login.masterData && this.props.Login.masterData.defaultCatogoryType && this.props.Login.masterData.defaultCatogoryType !== \"\" ?\n//             //                 this.props.Login.masterData.defaultCatogoryType : Taglstcategory ? Taglstcategory.get(\"OptionList\").length > 0 ? {\n//             //                     \"value\": Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember],\n//             //                     \"label\": Taglstcategory.get(\"OptionList\")[0].item[categoryDisplaymemeber]\n//             //                 } : \"\" : \"\";\n//         }\n//        // const selectedRecord = {}; \n//         const selectedInput = {}; const selectedValues = {};\n//         const categroyLable = this.props.Login.masterData.categroyLable ? this.props.Login.masterData.categroyLable : this.props.Login.masterData.lstcategory ? Object.keys(this.props.Login.masterData.lstcategory)[0] : \"\";\n//         const categoryValuemember = this.props.Login.masterData.categoryValuemember ? this.props.Login.masterData.categoryValuemember : this.props.Login.masterData.lstcategory ? Object.keys(this.props.Login.masterData.lstcategory[categroyLable][0])[0] : \"\";\n//         const categoryDisplaymemeber = this.props.Login.masterData.categoryDisplaymemeber ? this.props.Login.masterData.categoryDisplaymemeber : this.props.Login.masterData.lstcategory ? Object.keys(this.props.Login.masterData.lstcategory[categroyLable][0])[1] : \"\";\n//         selectedRecord[\"ntransactionstatus\"] = this.props.Login.masterData.lstTemplateMasterlevel ? this.props.Login.masterData.lstTemplateMasterlevel.length > 0 ?\n//             this.props.Login.masterData.lstTemplateMasterlevel[0][\"ntransactionstatus\"] :\n//             this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ntransactionstatus\"] : [] : [];\n//         let TaglstSampleType;\n//         let Taglstcategory;\n//         if (this.props.Login.masterData.lstSampleType && !this.props.Login.masterData.lstSampleType[0].item) {\n//             TaglstSampleType = constructOptionList(this.props.Login.masterData.lstSampleType || [], \"nsampletypecode\",\n//                 \"ssampletypename\", \"nsampletypecode\", \"ascending\", undefined);\n//         }\n//         if (this.props.Login.masterData.lstcategory && this.props.Login.masterData.lstcategory[categroyLable]) {\n//             Taglstcategory = this.props.Login.masterData.lstcategory[categroyLable] ? constructOptionList(this.props.Login.masterData.lstcategory[categroyLable]\n//                 || [], categoryValuemember, categoryDisplaymemeber, categoryValuemember, \"ascending\", undefined) : this.props.Login.masterData.lstcategory;\n//         }\n//         if (this.props.Login.masterData.lstTemplateMasterlevel) {\n//             sortData(this.props.Login.masterData.lstTemplateMasterlevel, \"ascending\", \"nlevelno\")\n//         }\n//         selectedValues[\"ncategorycode\"] = this.props.Login.masterData.selectedValues ? this.props.Login.masterData.selectedValues[\"ncategorycode\"] : Taglstcategory ?\n//             Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember] : -2;\n//         selectedValues[\"nformcode\"] = this.props.Login.masterData.selectedValues ? this.props.Login.masterData.selectedValues[\"nformcode\"] : Taglstcategory ?\n//             Taglstcategory.get(\"OptionList\")[0].item[\"nformcode\"] : -2;\n//         selectedValues[\"nsampletypecode\"] = TaglstSampleType ? TaglstSampleType.get(\"OptionList\").length > 0\n//             ? TaglstSampleType.get(\"OptionList\")[0].item[\"nsampletypecode\"] : this.props.Login.masterData.selectedValues\n//                 ? this.props.Login.masterData.selectedValues[\"nsampletypecode\"] : -2 : this.props.Login.masterData.selectedValues ? this.props.Login.masterData.selectedValues[\"nsampletypecode\"] : -2;\n//             // selectedRecord[\"defaultsampletype\"] = this.state.selectedRecord ?  this.state.selectedRecord.defaultsampletype \n//             //         : this.props.Login.masterData.defaultsampletype ? this.props.Login.masterData.defaultsampletype : TaglstSampleType ? {\n//             //     \"value\": TaglstSampleType.get(\"OptionList\")[0].item[\"nsampletypecode\"],\n//             //     \"label\": TaglstSampleType.get(\"OptionList\")[0].item[\"ssampletypename\"], item:TaglstSampleType.get(\"OptionList\")[0]\n//             // } : \"\";\n//             // selectedRecord[\"defaultCatogoryType\"] = this.state.selectedRecord ?  this.state.selectedRecord.defaultCatogoryType \n//             // : this.props.Login.masterData.defaultCatogoryType && this.props.Login.masterData.defaultCatogoryType !== \"\" ?\n//             //                 this.props.Login.masterData.defaultCatogoryType : Taglstcategory ? Taglstcategory.get(\"OptionList\").length > 0 ? {\n//             //                     \"value\": Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember],\n//             //                     \"label\": Taglstcategory.get(\"OptionList\")[0].item[categoryDisplaymemeber], item: Taglstcategory.get(\"OptionList\")[0]\n//             //                 } : \"\" : \"\";\n//         let openModal = false;\n//         this.props.Login.masterData[\"lstcategory\"] = Taglstcategory ? Taglstcategory.get(\"OptionList\") : this.props.Login.masterData.lstcategory;\n//         this.props.Login.masterData[\"lstTreeversionTemplate\"] = this.props.Login.masterData.lstTreeversionTemplate ? this.props.Login.masterData.lstTreeversionTemplate : this.props.Login.masterData[\"lstTreeversionTemplate\"];\n//         this.props.Login.masterData[\"lstTemplateMasterlevel\"] = this.props.Login.masterData.lstTemplateMasterlevel ? this.props.Login.masterData.lstTemplateMasterlevel : this.props.Login.masterData[\"lstTemplateMasterlevel\"];\n//         this.props.Login.masterData[\"selected\"] = this.props.Login.masterData[\"selectedTempVersion\"] ? this.props.Login.masterData[\"selectedTempVersion\"] :\n//             this.props.Login.masterData[\"selected\"];\n//        // this.props.Login.masterData[\"selectedValues\"] = selectedValues;\n//         this.props.Login.masterData[\"defaultCatogoryType\"] = this.props.Login.masterData.defaultCatogoryType \n//              && this.props.Login.masterData.defaultCatogoryType !== \"\" ?\n//             this.props.Login.masterData.defaultCatogoryType : Taglstcategory ? Taglstcategory.get(\"OptionList\").length > 0 ? {\n//                 \"value\": Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember],\n//                 \"label\": Taglstcategory.get(\"OptionList\")[0].item[categoryDisplaymemeber],\n//                 \"item\": Taglstcategory.get(\"OptionList\")[0].item\n//             } : \"\" : \"\";\n//         this.props.Login.masterData[\"categroyLable\"] = categroyLable;\n//         this.props.Login.masterData[\"categoryValuemember\"] = categoryValuemember;\n//         this.props.Login.masterData[\"categoryDisplaymemeber\"] = categoryDisplaymemeber;\n//         this.props.Login.masterData[\"lstSampleType\"] = TaglstSampleType ? TaglstSampleType.get(\"OptionList\") : this.props.Login.masterData.lstSampleType ? this.props.Login.masterData.lstSampleType : -2;\n//         this.props.Login.masterData[\"defaultsampletype\"] = this.props.Login.masterData.defaultsampletype ? this.props.Login.masterData.defaultsampletype : TaglstSampleType ? {\n//             \"value\": TaglstSampleType.get(\"OptionList\")[0].item[\"nsampletypecode\"],\n//             \"label\": TaglstSampleType.get(\"OptionList\")[0].item[\"ssampletypename\"],\n//             \"item\": TaglstSampleType.get(\"OptionList\")[0].item\n//         } : -2;\n//         //let filterData = this.generateBreadCrumData();\n//         this.setState({//filterData,\n//             selectedRecord, userRoleControlRights: userRoleControlRights ? userRoleControlRights : this.state.userRoleControlRights,\n//             controlMap: controlMap ? controlMap : this.state.controlMap,\n//             selected: this.props.Login.masterData.lstTreeversionTemplate ? this.props.Login.masterData.lstTreeversionTemplate.length > 0 ?\n//                 this.props.Login.masterData.lstTreeversionTemplate[0] : {} : this.state.selected,\n//             selectedSampleType: TaglstSampleType ? TaglstSampleType.get(\"OptionList\")[0][\"nsampletypecode\"] : this.state.selectedSampleType,\n//         });\n//         const updateInfo = {\n//             typeName: DEFAULT_RETURN,\n//             data: { openModal, masterData: this.props.Login.masterData, selectedRecord, selectedInput }\n//         }\n//         this.props.updateStore(updateInfo);\n//     }\n// }\n},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var breadCrumbData=[];if(this.props.Login.masterData){breadCrumbData.push({\"label\":\"IDS_SAMPLETYPE\",// \"value\": this.props.Login.masterData.defaultsampletype && this.props.Login.masterData.defaultsampletype.label || '-';\n\"value\":this.props.Login.masterData.SelectedSample&&this.props.Login.masterData.SelectedSample.ssampletypename||'-'},{\"label\":\"IDS_PRODUCTCATEGORY\",//  \"value\": this.props.Login.masterData.defaultCatogoryType && this.props.Login.masterData.defaultCatogoryType.label || '-'\n\"value\":this.props.Login.masterData.SelectedCategory&&this.props.Login.masterData.SelectedCategory[this.props.Login.masterData.SelectedCategoryFilterValueLabel]||'-'});}return breadCrumbData;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";props.Login.openModal=false;}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";props.Login.openModal=false;}if(!props.Login.loadEsign){return{selectedRecord:_objectSpread(_objectSpread({},state.selectedRecord),{},{esigncomments:'',esignpassword:''})};}return null;}}]);return templatemaster;}(Component);var mapStatetoProps=function mapStatetoProps(state){return{Login:state.Login};};export default connect(mapStatetoProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,addModel:addModel,fetchRecordByTemplateID:fetchRecordByTemplateID,getTemplateMasterTree:getTemplateMasterTree,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData,getSampleTypeProductCategory:getSampleTypeProductCategory,getStudyTemplateByCategoryType:getStudyTemplateByCategoryType})(injectIntl(templatemaster));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/templatemaster/templatemaster.component.jsx"],"names":["FormInput","Row","Col","Card","Nav","Button","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","connect","React","Component","NavHeader","ContentPanel","ListWrapper","callService","crudMaster","updateStore","addModel","validateEsignCredential","fetchRecordByTemplateID","getTemplateMasterTree","filterColumnData","getSampleTypeProductCategory","getStudyTemplateByCategoryType","injectIntl","toast","sortData","getControlMap","showEsign","constructOptionList","ListMaster","TemplateMasterFilter","SlideOutModal","DEFAULT_RETURN","Esign","ConfirmMessage","transactionStatus","BreadcrumbComponent","Affix","templatemaster","props","closeModel","loadEsign","Login","openModal","operation","updateInfo","typeName","data","onComboChange","event","fieldName","filterSelectedRecord","state","url","inputData","userinfo","userInfo","nsampletypecode","item","inputParam","masterData","SelectedSampleFilter","openFilter","showFilter","closeFilter","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","onFilterSubmit","dummyNumber","searchRef","current","value","ncategorycode","nformcode","approveRecord","ncontrolCode","selectedRecord","selected","SelectedTreeVersionTemplate","APPROVED","RETIRED","info","ntreeversiontempcode","parseInt","SelectedCategory","SelectedCategoryFilterTextLabel","ntemplatecode","undefined","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","fetchUrl","fecthInputObject","methodUrl","classUrl","userRoleControlRights","screenData","selectedLevel","lstTemplateMasterlevel","warn","map","ntreecontrolcode","join","saveTMTreetemplate","saveType","formRef","listTemplateMasterTree","levelno","index","totalLevel","push","toString","selectedInput","sversiondescription","SelectedSample","onInputOnChange","target","name","trim","onEsignInputOnChange","type","checked","setState","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","reloadData","console","log","searchedData","templateTreeData","TMvalues","TMvalue","selectedValues","error","controlMap","Map","createRef","searchFieldList","e","totalid","newInput","concat","i","splice","j","lstTreeversionTemplate","addId","has","get","ncontrolcode","editId","approveId","filterParam","mandatoryFields","breadCrumbData","generateBreadCrumData","length","lstcategory","TaglstSampleType","Taglstcategory","SelectedCategoryFilterValueLabel","Object","keys","categroyLable","ssampletypename","SelectedCategoryFilter","selectedTempVersion","nversionno","ntransactionstatus","DRAFT","stransdisplaystatus","float","indexOf","input","width","marginLeft","slabelname","visibility","removeTree","appendInputLevel","previousProps","values","categoryValuemember","categoryDisplaymemeber","lstSampleType","sampleTypeMap","categoryTypeMap","masterStatus","errorCode","esigncomments","esignpassword","mapStatetoProps"],"mappings":"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","sourcesContent":["import FormInput from '../../components/form-input/form-input.component';\r\nimport { Row, Col, Card, Nav, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faThumbsUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport '../../assets/./styles/tree.css';\r\nimport React, { Component } from 'react';\r\nimport { NavHeader } from '../../components/sidebar/sidebar.styles';\r\nimport { ContentPanel, ListWrapper } from './../userroletemplate/userroletemplate.styles';\r\nimport {\r\n    callService, crudMaster, updateStore, addModel, validateEsignCredential,\r\n    fetchRecordByTemplateID, getTemplateMasterTree, filterColumnData, getSampleTypeProductCategory,\r\n    getStudyTemplateByCategoryType\r\n} from '../../actions';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { sortData, getControlMap, showEsign, constructOptionList } from '../../components/CommonScript';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport TemplateMasterFilter from './../templatemaster/TemplateMasterFilter';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport Esign from '../audittrail/Esign';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nclass templatemaster extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openModal: false,\r\n            userRoleControlRights: [],\r\n            templateTreeData: [],\r\n            TMvalues: [{ TMvalue: \"\" }],\r\n            selected: {},\r\n            selectedValues: undefined,\r\n            error: \"\",\r\n            controlMap: new Map()\r\n        }\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.searchFieldList = [\"stransdisplaystatus\", \"sversionstatus\", \"sversiondescription\"];\r\n    }\r\n\r\n\r\n    closeModel = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    appendInputLevel(e) {\r\n        if (this.props.Login.selectedRecord[this.props.Login.id] !== undefined) {\r\n            if (this.props.Login.id < 9) {\r\n                const totalLevel = this.props.Login.totalLevel ? this.props.Login.totalLevel : 1;\r\n                let id = parseInt(this.props.Login.id) + 1;\r\n                let totalid = totalLevel;\r\n                if (totalid === id) {\r\n                    var newInput = `input-${totalLevel}`;\r\n                    var templateTreeData = this.props.Login.templateTreeData.concat([newInput])\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { templateTreeData, totalLevel: totalLevel + 1, id }\r\n                    }\r\n\r\n                    this.props.updateStore(updateInfo)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_PLSENTERTEMPLATELEVEL\" }));\r\n        }\r\n    }\r\n\r\n    removeTree(event, i) {\r\n        const selectedRecord = this.props.Login.selectedRecord ? this.props.Login.selectedRecord : \"\";\r\n        const totalLevel = this.props.Login.totalLevel ? this.props.Login.totalLevel : 1;\r\n        let templateTreeData = this.props.Login.templateTreeData\r\n        templateTreeData.splice(i, 10);\r\n\r\n        if (selectedRecord[i]) {\r\n            for (let j = i; j < totalLevel; j++) {\r\n                delete selectedRecord[j];\r\n            };\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { templateTreeData, selectedRecord, totalLevel: i, id: i - 1 }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    // onComboChange = (event, fieldname) => {\r\n    //     if (event !== null) {\r\n    //         let uRL = \"\";\r\n    //         let inputData = [];\r\n    //         if (fieldname === \"sampleType\") {\r\n    //             uRL = 'templatemaster/getSampleTypeProductCatrgory';\r\n    //             inputData = {\r\n    //                 userinfo: this.props.Login.userInfo,\r\n    //                 nsampletypecode: event.item[\"nsampletypecode\"]\r\n    //             }\r\n    //         }\r\n    //         else {\r\n    //             uRL = 'templatemaster/getTemplateMasterVersion';\r\n    //             inputData = {\r\n    //                 userinfo: this.props.Login.userInfo,\r\n    //                 nsampletypecode: event.item[\"nsampletypecode\"],\r\n    //                 ncategorycode: event.item[this.props.Login.masterData.categoryValuemember],\r\n    //                 nformcode: event.item[\"nformcode\"]\r\n    //             }\r\n    //         }\r\n    //         rsapi.post(uRL, inputData)\r\n    //             .then(response => {\r\n    //                 const categroyLable = response.data.lstcategory ? Object.keys(response.data.lstcategory)[0] : this.props.Login.masterData.categroyLable;\r\n    //                 const categoryValuemember = response.data.lstcategory ? Object.keys(response.data.lstcategory[categroyLable][0])[0] : this.props.Login.masterData.categoryValuemember;\r\n    //                 const categoryDisplaymemeber = response.data.lstcategory ? Object.keys(response.data.lstcategory[categroyLable][0])[1] : this.props.Login.masterData.categoryDisplaymemeber;\r\n    //                 const selectedValues = this.props.Login.masterData.selectedValues || [];\r\n    //                 const selectedRecord = this.props.Login.selectedRecord || {};\r\n    //                 let Taglstcategory;\r\n\r\n    //                 if (response.data.lstcategory) {\r\n    //                     Taglstcategory = constructOptionList(response.data.lstcategory[categroyLable] || [], categoryValuemember,\r\n    //                         categoryDisplaymemeber, categoryValuemember, \"ascending\", undefined);\r\n    //                 }\r\n    //                 // let TaglstSampleType;\r\n    //                 // if (response.data.lstSampleType) {\r\n    //                 //     TaglstSampleType = constructOptionList(response.data.lstSampleType || [], \"nsampletypecode\",\r\n    //                 //         \"ssampletypename\", \"nsampletypecode\", \"ascending\", undefined);\r\n    //                 // }\r\n\r\n    //                 selectedValues[\"nsampletypecode\"] = event.item[\"nsampletypecode\"] ? event.item[\"nsampletypecode\"] : this.props.Login.masterData.selectedValues[\"nsampletypecode\"];\r\n    //                 selectedValues[\"nformcode\"] = (fieldname === \"sampleType\") ? response.data.lstcategory ?\r\n    //                     response.data.lstcategory[categroyLable][0][\"nformcode\"] : event.item[\"nformcode\"] ? event.item[\"nformcode\"] :\r\n    //                         this.props.Login.masterData.selectedValues[\"nformcode\"] : this.props.Login.masterData.selectedValues[\"nformcode\"];\r\n\r\n    //                 selectedValues[\"ncategorycode\"] = (fieldname === \"sampleType\") ? Taglstcategory ?\r\n    //                     Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember] : this.props.Login.masterData.selectedValues[\"ncategorycode\"]\r\n    //                         ? event.item[this.props.Login.masterData.categoryValuemember] : \"\" :\r\n    //                     event.item[this.props.Login.masterData.categoryValuemember] ? event.item[this.props.Login.masterData.categoryValuemember] : \"\";\r\n\r\n    //                 if (response.data.lstTreeversionTemplate) {\r\n    //                     sortData(response.data.lstTreeversionTemplate, \"descending\", \"ntreeversiontempcode\")\r\n    //                 }\r\n    //                 if (response.data.lstTemplateMasterlevel) {\r\n    //                     sortData(response.data.lstTemplateMasterlevel, \"ascending\", \"nlevelno\")\r\n    //                 }\r\n\r\n    //                 selectedRecord[\"ntransactionstatus\"] = response.data.lstTreeversionTemplate.length > 0 ? response.data.lstTreeversionTemplate[0][\"ntransactionstatus\"] : \"\"\r\n\r\n    //                 this.setState({\r\n    //                     selectedSampleType: (fieldname === \"sampleType\" ? parseInt(event.value) : this.state.selectedSampleType)\r\n\r\n    //                 });\r\n    //                 this.props.Login.masterData[\"defaultsampletype\"] = (fieldname === \"sampleType\") ? event : response.data.lstSampleType ? response.data.lstSampleType.length > 0 ?\r\n    //                     {\r\n    //                         \"value\": response.data.lstSampleType[0][\"nsampletypecode\"],\r\n    //                         \"label\": response.data.lstSampleType[0][\"ssampletypename\"]\r\n    //                     } : this.props.Login.masterData.defaultsampletype : this.props.Login.masterData.defaultsampletype;\r\n    //                 // this.props.Login.masterData[\"lstSampleType\"] = TaglstSampleType ? TaglstSampleType.get(\"OptionList\") : this.props.Login.masterData.lstSampleType;\r\n    //                 this.props.Login.masterData[\"lstcategory\"] = Taglstcategory ? Taglstcategory.get(\"OptionList\") : fieldname === \"cateogryType\" ? this.props.Login.masterData[\"lstcategory\"] : \"\";\r\n    //                 this.props.Login.masterData[\"lstTreeversionTemplate\"] = response.data.lstTreeversionTemplate ? response.data.lstTreeversionTemplate : \"\";\r\n    //                 this.props.Login.masterData[\"lstTemplateMasterlevel\"] = response.data.lstTemplateMasterlevel ? response.data.lstTemplateMasterlevel : \"\";\r\n    //                 this.props.Login.masterData[\"selected\"] = response.data.lstTreeversionTemplate ? response.data.lstTreeversionTemplate.length > 0 ?\r\n    //                     response.data.lstTreeversionTemplate[0] : {} : this.props.Login.masterData[\"selected\"];\r\n    //                 this.props.Login.masterData[\"selectedValues\"] = selectedValues;\r\n\r\n    //                 this.props.Login.masterData[\"defaultCatogoryType\"] = (fieldname === \"cateogryType\") ? event : Taglstcategory ? Taglstcategory.get(\"OptionList\") ? {\r\n    //                     \"value\": Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember],\r\n    //                     \"label\": Taglstcategory.get(\"OptionList\")[0].item[categoryDisplaymemeber]\r\n    //                 } : this.props.Login.masterData.defaultCatogoryType : this.props.Login.masterData.defaultCatogoryType;\r\n\r\n    //                 this.props.Login.masterData[\"categroyLable\"] = categroyLable;\r\n    //                 this.props.Login.masterData[\"categoryValuemember\"] = categoryValuemember;\r\n    //                 this.props.Login.masterData[\"categoryDisplaymemeber\"] = categoryDisplaymemeber;\r\n    //                 this.props.Login.masterData[\"searchedData\"] = undefined;\r\n    //                 this.searchRef.current.value = \"\";\r\n    //                 const updateInfo = {\r\n    //                     typeName: DEFAULT_RETURN,\r\n    //                     data: { masterData: this.props.Login.masterData, selectedRecord }\r\n    //                 }\r\n    //                 this.props.updateStore(updateInfo);\r\n    //             })\r\n    //             .catch(error => {\r\n\r\n    //                 if (error.response.status === 500) {\r\n    //                     toast.error(error.message);\r\n    //                 }\r\n    //                 else {\r\n    //                     toast.info(error.response.data);\r\n    //                 }\r\n    //             })\r\n    //     }\r\n    // }\r\n\r\n    onComboChange = (event, fieldName) => {\r\n        //if (event !== null) {\r\n        const filterSelectedRecord = this.state.filterSelectedRecord || {};\r\n        filterSelectedRecord[fieldName] = event;\r\n\r\n        if (fieldName === \"sampleType\") {\r\n            const url = 'templatemaster/getSampleTypeComboChange';\r\n            const inputData = {\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: event.item[\"nsampletypecode\"]\r\n            }\r\n            filterSelectedRecord[\"sampletype\"] = event;\r\n            const inputParam = { inputData, url };\r\n            this.props.getSampleTypeProductCategory(filterSelectedRecord, inputParam,\r\n                this.props.Login.masterData)\r\n\r\n        }\r\n        else {\r\n\r\n            //categoryType\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            masterData[\"SelectedCategoryFilter\"] = event.item;\r\n            //masterData[\"SelectedCategory\"] = event.item;\r\n            masterData[\"SelectedSample\"] = this.props.Login.masterData.SelectedSampleFilter;\r\n            //masterData[\"selectedValues\"].ncategorycode = event.value;\r\n            filterSelectedRecord[\"categorytype\"] = event;\r\n            const updateInfo = { typeName: DEFAULT_RETURN, data: { masterData, filterSelectedRecord } };\r\n\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { masterData, userInfo, openModal, templateTreeData, selectedInput, selectedRecord, totalLevel } = this.props.Login;\r\n        let { lstTreeversionTemplate, //selected, \r\n            lstTemplateMasterlevel } = this.props.Login.masterData;\r\n        const addId = this.state.controlMap.has(\"AddTempalateMaster\") && this.state.controlMap.get(\"AddTempalateMaster\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditTempalateMaster\") && this.state.controlMap.get(\"EditTempalateMaster\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteTempalateMaster\") && this.state.controlMap.get(\"DeleteTempalateMaster\").ncontrolcode;\r\n        const approveId = this.state.controlMap.has(\"ApproveTempalateMaster\") && this.state.controlMap.get(\"ApproveTempalateMaster\").ncontrolcode;\r\n        lstTemplateMasterlevel = lstTemplateMasterlevel ? sortData(lstTemplateMasterlevel,'ascending','nlevelno') :[];\r\n\r\n        const filterParam = {\r\n            inputListName: \"lstTreeversionTemplate\", selectedObject: \"selectedTempVersion\", primaryKeyField: \"ntreeversiontempcode\",\r\n            fetchUrl: \"templatemaster/getTemplateVersionById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n        const mandatoryFields = [\r\n            { \"mandatory\": true, \"idsName\": \"IDS_TEMPLATENAME\", \"dataField\": \"sversiondescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n\r\n        ];\r\n\r\n        const breadCrumbData = this.generateBreadCrumData() || [];\r\n\r\n        const selected = this.props.Login.masterData.SelectedTreeVersionTemplate;\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n\r\n                    }\r\n                    {/* <Preloader loading={loading} /> */}\r\n                    {/* <div className=\"client-listing-wrap mtop-4\"> */}\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                masterData={masterData}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_TEMPLATE\" })}\r\n                                masterList={this.props.Login.masterData.searchedData || lstTreeversionTemplate}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                getMasterDetail={(TMvalue) => this.props.getTemplateMasterTree(TMvalue, masterData, userInfo)}\r\n                                //selectedMaster={this.props.Login.masterData.selected}\r\n                                selectedMaster={selected}\r\n                                primaryKeyField=\"ntreeversiontempcode\"\r\n                                mainField=\"sversiondescription\"\r\n                                firstField=\"sversiondescription\"\r\n                                secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"No\"\r\n                                openModal={() => this.props.addModel(\"create\", addId, this.props.Login.masterData.lstcategory, selectedInput)}\r\n                                // needAccordianFilter={true}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                searchRef={this.searchRef}\r\n                                addId={addId}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n\r\n\r\n                                needAccordianFilter={false}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_TEMPLATEMASTERFILTER\":\r\n                                            <TemplateMasterFilter\r\n                                                formatMessage={this.props.intl.formatMessage}\r\n                                                filterSampleType={this.state.TaglstSampleType || []}\r\n                                                filterCateogryType={this.state.Taglstcategory || []}\r\n                                                catogryValuemember={this.props.Login.masterData.SelectedCategoryFilterTextLabel || \"\"}\r\n                                                categoryDisplaymemeber={this.props.Login.masterData.SelectedCategoryFilterValueLabel || \"\"}\r\n                                                //labelName={this.state.selectedRecord.categroyLable || \"\"}\r\n                                                labelName={(this.props.Login.masterData.lstcategory && Object.keys(this.props.Login.masterData.lstcategory)[0])\r\n                                                    || (this.state.filterSelectedRecord && this.state.filterSelectedRecord.categroyLable)}\r\n                                                selectedInput={this.state.selectedInput || []}\r\n                                                onComboChange={this.onComboChange}\r\n                                                filterSelectedRecord={this.state.filterSelectedRecord || {}}\r\n                                                defaultsampletype={this.props.Login.masterData.SelectedSampleFilter\r\n                                                    && {\r\n                                                        label: this.props.Login.masterData.SelectedSampleFilter.ssampletypename,\r\n                                                    value: this.props.Login.masterData.SelectedSampleFilter.nsampletypecode,\r\n                                                    item: this.props.Login.masterData.SelectedSampleFilter\r\n                                                }}\r\n\r\n                                                defaultCatogoryType={this.props.Login.masterData.SelectedCategoryFilter\r\n                                                    && {\r\n                                                        label: this.props.Login.masterData.SelectedCategoryFilter[this.props.Login.masterData.SelectedCategoryFilterValueLabel],\r\n                                                    value: this.props.Login.masterData.SelectedCategoryFilter[this.props.Login.masterData.SelectedCategoryFilterTextLabel],\r\n                                                    item: this.props.Login.masterData.SelectedCategoryFilter\r\n                                                }}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n\r\n                        {/* {this.props.Login.masterData.selectedTempVersion && lstTreeversionTemplate && lstTreeversionTemplate.length > 0 ? */}\r\n\r\n                        {this.props.Login.masterData.selectedTempVersion && selected ?\r\n                            <Col md={8}>\r\n                                <ListWrapper className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        {/* {(selected) && */}\r\n                                        <Card.Header>\r\n                                            <Card.Title>\r\n                                                <>\r\n                                                    <h1 className=\"product-title-main\">{selected.sversiondescription}</h1>\r\n                                                </>\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle className=\"readonly-text font-weight-normal\">\r\n                                                <Row>\r\n                                                    <Col md={8} className=\"d-flex\">\r\n                                                        <h3 className=\"product-title-sub\">Version : {selected.nversionno === -1 ? \"-\" : selected.nversionno}</h3>\r\n                                                        <span className={`btn btn-outlined ${selected.ntransactionstatus === transactionStatus.DRAFT ? \"outline-secondary\" : selected.ntransactionstatus === transactionStatus.APPROVED ? \"outline-success\" : \"outline-danger\"} btn-sm mx-md-3 mx-sm-2`}>\r\n                                                            {selected.stransdisplaystatus}</span>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                        <Nav style={{ float: \"right\" }}>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            //    data-for=\"tooltip_list_wrap\"\r\n                                                                //onClick={() => this.props.fetchRecordByTemplateID(\"ntreeversiontempcode\", selected.ntreeversiontempcode, \"update\", selectedRecord, selectedInput, userInfo, editId)}\r\n                                                                onClick={() => this.props.fetchRecordByTemplateID(\"ntreeversiontempcode\", selected.ntreeversiontempcode, \"update\",\r\n                                                                    { ntransactionstatus: this.props.Login.masterData[\"lstTemplateMasterlevel\"][0][\"ntransactionstatus\"] },\r\n                                                                    {}, userInfo, editId)}\r\n\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}>\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2 \"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                               // data-for=\"tooltip_list_wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                                                {/* <ConfirmDialog\r\n                                                                            name=\"deleteMessage\"\r\n                                                                            message=\"Are you sure?\"\r\n                                                                            doLabel=\"Ok\"\r\n                                                                            doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                            icon={faTrashAlt}\r\n                                                                            // title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                            hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                            handleClickDelete={() => this.deleteRecord(\"delete\", deleteId)}\r\n                                                                        /> */}\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                            //    data-for=\"tooltip_list_wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                onClick={() => this.approveRecord(\"approve\", approveId)}>\r\n                                                                <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                            </Nav.Link>\r\n                                                        </Nav>\r\n                                                        {/* </Tooltip> */}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        {/* } */}\r\n                                    </Card>\r\n                                </ListWrapper>\r\n\r\n                                {<ContentPanel className=\"panel-main-content\">\r\n                                    <ListWrapper className=\"card-body\">\r\n                                        <React.Fragment>\r\n                                            <ListWrapper className=\"tree-view1 border-left tree-left \">\r\n                                                {lstTemplateMasterlevel ? lstTemplateMasterlevel.map((input, i) =>\r\n                                                    <ListWrapper key={i} className=\"form-label-group tree-level list_get\">\r\n                                                        <NavHeader className=\"line\" style={{ width: (i + 1) * 10 }}> </NavHeader>\r\n                                                        <NavHeader id={i} value={totalLevel}\r\n                                                            className=\"add_field_button\">+</NavHeader>\r\n                                                        <NavHeader className=\"levelcolour\" md={1}>Level {i + 1}</NavHeader>\r\n                                                        <ListWrapper style={{ marginLeft: (i + 8) * 10 }}>\r\n                                                            <FormInput className=\"input_custom\" value={input.slabelname} id=\"levelname\" type=\"text\" />\r\n                                                        </ListWrapper>\r\n                                                    </ListWrapper>\r\n                                                ) : \"\"\r\n                                                }\r\n                                            </ListWrapper>\r\n                                        </React.Fragment>\r\n                                    </ListWrapper>\r\n                                </ContentPanel>}\r\n                            </Col>\r\n                            : \"\"}\r\n                    </Row >\r\n                    {/* </div> */}\r\n                </ListWrapper>\r\n\r\n                {this.props.Login.openModal ?\r\n                    < SlideOutModal\r\n                        operation={this.props.Login.operation}\r\n                        onSaveClick={this.saveTMTreetemplate}\r\n                        validateEsign={this.validateEsign}\r\n                        esign={this.props.Login.loadEsign}\r\n                        screenName=\"IDS_TEMPLATEMASTER\"\r\n                        closeModal={this.closeModel}\r\n                        selectedRecord={this.props.Login.loadEsign ? this.state.selectedRecord : selectedInput}\r\n                        mandatoryFields={mandatoryFields}\r\n                        show={openModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                //formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onEsignInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <FormInput\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                                        name={\"sversiondescription\"}\r\n                                        as=\"text\"\r\n                                        onChange={(event) => this.onInputOnChange(event, \"version\")}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_TEMPLATENAME\" })}\r\n                                        defaultValue={selectedInput ? selectedInput[\"sversiondescription\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={12}>\r\n                                    <ListWrapper className=\"tree-view border-left\">\r\n                                        {templateTreeData ?\r\n                                            templateTreeData.map((input, i) =>\r\n                                                <ListWrapper className=\"form-label-group tree-level\">\r\n                                                    <NavHeader className=\"line\" style={{ width: (i + 1) * 10 }}> </NavHeader>\r\n                                                    <NavHeader id={i} value={totalLevel}\r\n                                                        className=\"add_field_button\">+</NavHeader>\r\n                                                    <NavHeader md={1}>level <NavHeader className=\"tree-value\">{i + 1}</NavHeader>\r\n\r\n                                                    </NavHeader>\r\n                                                    <Nav className=\"btn mr-2 action-icons-wrap\" style={{ float: \"right\", visibility: i === 0 ? 'hidden' : 'visible' }} onClick={(event) => this.removeTree(event, i)}>\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} className=\"ActionIconColor\" />\r\n                                                    </Nav>\r\n                                                    <Row>\r\n                                                        <Col md={12} style={{ marginLeft: (i + 3) * 10 }}>\r\n                                                            <Col md={12}>\r\n                                                                <FormInput\r\n                                                                    name={\"slabelname\"}\r\n                                                                    type=\"text\"\r\n                                                                    onChange={(event) => this.onInputOnChange(event, i)}\r\n                                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_ENTERTEMPLATELEVEL\" })}\r\n                                                                    defaultValue={selectedRecord ? selectedRecord[i] : \"\"}\r\n                                                                    maxLength={50}\r\n                                                                />\r\n                                                            </Col>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListWrapper>\r\n                                            ) : \"\"}\r\n                                    </ListWrapper>\r\n                                    <NavHeader>\r\n                                        <Button onClick={(e) => this.appendInputLevel(e)} className=\"btn btn-circle solid-blue\" role=\"button\">+</Button>\r\n                                    </NavHeader>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(\"delete\", deleteId));\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n\r\n        const filterSelectedRecord = this.state.filterSelectedRecord || {};\r\n        const url = 'templatemaster/getTemplateMasterVersion';\r\n        const dummyNumber = -12;\r\n        this.searchRef.current.value = \"\";\r\n        const inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: filterSelectedRecord[\"sampletype\"] ? filterSelectedRecord[\"sampletype\"].value : dummyNumber,\r\n            ncategorycode: filterSelectedRecord[\"categorytype\"] ? filterSelectedRecord[\"categorytype\"].value : dummyNumber,\r\n            nformcode: filterSelectedRecord[\"categorytype\"] ? filterSelectedRecord[\"categorytype\"][\"item\"][\"nformcode\"] : dummyNumber\r\n        }\r\n        const inputParam = { url, inputData };\r\n        this.props.getStudyTemplateByCategoryType(inputParam, this.props.Login.masterData, filterSelectedRecord, true);\r\n    }\r\n\r\n    approveRecord = (operation, ncontrolCode) => {\r\n        const selectedRecord = this.props.Login.selectedRecord ? this.props.Login.selectedRecord : \"\";\r\n        ///const selected = this.props.Login.masterData[\"selected\"];\r\n        const selected = this.props.Login.masterData.SelectedTreeVersionTemplate;\r\n        if (selectedRecord[\"ntransactionstatus\"] === transactionStatus.APPROVED || selectedRecord[\"ntransactionstatus\"] === transactionStatus.RETIRED) {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\" }));\r\n        }\r\n        else {\r\n            let inputData = [];\r\n            inputData = {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"ntreeversiontempcode\": selected.ntreeversiontempcode,\r\n                // \"ncategorycode\": this.props.Login.masterData.selectedValues[\"ncategorycode\"],\r\n                // \"nformcode\": this.props.Login.masterData.selectedValues[\"nformcode\"],\r\n                \"ncategorycode\": parseInt(this.props.Login.masterData.SelectedCategory[this.props.Login.masterData.SelectedCategoryFilterTextLabel]),\r\n                \"nformcode\": parseInt(this.props.Login.masterData.SelectedCategory.nformcode),\r\n                \"ntemplatecode\": selected.ntemplatecode ? selected.ntemplatecode : undefined,\r\n            }\r\n\r\n            const postParam = {\r\n                inputListName: \"lstTreeversionTemplate\",\r\n                //selectedObject: \"selectedTempVersion\",\r\n                selectedObject: \"SelectedTreeVersionTemplate\",\r\n                primaryKeyField: \"ntreeversiontempcode\",\r\n                primaryKeyValue: selected.ntreeversiontempcode,\r\n                fetchUrl: \"templatemaster/getTemplateVersionById\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const inputParam = {\r\n                methodUrl: \"TemplateMasterVersion\",\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                inputData: inputData,\r\n                operation: operation,\r\n                postParam\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, openModal: true, screenData: { inputParam, masterData },\r\n                        operation: operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //to delete a recored\r\n    deleteRecord = (operation, ncontrolCode) => {\r\n        // const selected = this.props.Login.masterData[\"selected\"];\r\n        const selected = this.props.Login.masterData.SelectedTreeVersionTemplate;\r\n        const selectedLevel = this.props.Login.masterData.lstTemplateMasterlevel\r\n        if (this.props.Login.selectedRecord[\"ntransactionstatus\"] === transactionStatus.APPROVED || this.props.Login.selectedRecord[\"ntransactionstatus\"] === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTODELETE\" }));\r\n        }\r\n        else {\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData = {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"ntreeversiontempcode\": selected.ntreeversiontempcode,\r\n                \"ntreecontrolcode\": selectedLevel.map(item => item.ntreecontrolcode).join(\",\"),\r\n                // \"ncategorycode\": this.props.Login.masterData.selectedValues[\"ncategorycode\"],\r\n                // \"nformcode\": this.props.Login.masterData.selectedValues[\"nformcode\"]\r\n                \"ncategorycode\": parseInt(this.props.Login.masterData.SelectedCategory[this.props.Login.masterData.SelectedCategoryFilterTextLabel]),\r\n                \"nformcode\": parseInt(this.props.Login.masterData.SelectedCategory.nformcode),\r\n                \"nsampletypecode\": parseInt(this.props.Login.masterData.SelectedTreeVersionTemplate.nsampletypecode),\r\n\r\n            }\r\n\r\n\r\n            const postParam = {\r\n                inputListName: \"lstTreeversionTemplate\",\r\n                //selectedObject: \"selectedTempVersion\",\r\n                selectedObject: \"SelectedTreeVersionTemplate\",\r\n                primaryKeyField: \"ntreeversiontempcode\",\r\n                primaryKeyValue: selected.ntreeversiontempcode,\r\n                fetchUrl: \"templatemaster/getTemplateVersionById\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n\r\n            const inputParam = {\r\n                methodUrl: \"TemplateMaster\",\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                inputData: inputData,\r\n                operation: operation,\r\n                postParam\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, openModal: true, screenData: { inputParam, masterData },\r\n                        operation: operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    saveTMTreetemplate = (saveType, formRef) => {\r\n        let listTemplateMasterTree = [];\r\n        let levelno = 0;\r\n        //const selected = this.props.Login.masterData[\"selected\"];\r\n        const selected = this.props.Login.masterData.SelectedTreeVersionTemplate;\r\n        const selectedLevel = this.props.Login.masterData.lstTemplateMasterlevel\r\n\r\n        for (let index = 0; index < this.props.Login.totalLevel; index++) {\r\n            levelno = index + 1;\r\n            if (this.props.Login.selectedRecord[index]) {\r\n                listTemplateMasterTree.push((this.props.Login.selectedRecord[index]).toString())\r\n            }\r\n            else {\r\n                return toast.info(this.props.intl.formatMessage({ id: \"IDS_PLESEENTERTHELEVEL\" }) + levelno);\r\n            }\r\n        }\r\n\r\n        let inputData = [];\r\n        let methodUrl = \"\";\r\n        inputData = {\r\n            \"userinfo\": this.props.Login.userInfo,\r\n            \"ncategorycode\": parseInt(this.props.Login.masterData.SelectedCategory[this.props.Login.masterData.SelectedCategoryFilterTextLabel]),\r\n            \"nformcode\": parseInt(this.props.Login.masterData.SelectedCategory.nformcode),\r\n            \"ntreecontrolcode\": selectedLevel.map(item => item.ntreecontrolcode).join(\",\"),\r\n            \"ntemplatecode\": selected ? selected.ntemplatecode : -1,\r\n            \"ntreeversiontempcode\": selected ? selected.ntreeversiontempcode : -1,\r\n            \"specname\": this.props.Login.selectedInput.sversiondescription,\r\n            \"treetemptranstestgroup\": listTemplateMasterTree,\r\n            \"nsampletypecode\": parseInt(this.props.Login.masterData.SelectedSample[\"nsampletypecode\"])\r\n        }\r\n\r\n        let postParam = undefined;\r\n\r\n        if (this.props.Login.operation === \"create\") {\r\n            methodUrl = \"Templatemaster\";\r\n        }\r\n        else {\r\n            methodUrl = \"EditTemplatemasterSubmit\";\r\n            postParam = { inputListName: \"lstTreeversionTemplate\", selectedObject: \"selectedTempVersion\", primaryKeyField: \"ntreeversiontempcode\" };\r\n        }\r\n\r\n        const inputParam = {\r\n            methodUrl: methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            searchRef: this.searchRef, formRef, postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event, levelno) => {\r\n        const selectedRecord = this.props.Login.selectedRecord || {};\r\n        const selectedInput = this.props.Login.selectedInput || {};\r\n        if (levelno === \"version\") {\r\n            selectedInput[event.target.name] = event.target.value;\r\n        }\r\n        else {\r\n            if (event.target.value.trim() !== \"\") {\r\n                selectedRecord[levelno] = event.target.value;\r\n            }\r\n            else {\r\n                selectedRecord[levelno] = undefined;\r\n            }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { selectedInput, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onEsignInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    reloadData = () => {\r\n\r\n        console.log(\"stdy pla reload:\", this.props.Login.masterData, this.state.selectedRecord);\r\n        this.searchRef.current.value = \"\";\r\n        const url = 'templatemaster/getTemplateMasterVersion';\r\n        const dummyNumber = -12;\r\n        const inputData = {\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nsampletypecode: this.props.Login.masterData.SelectedSample ? this.props.Login.masterData.SelectedSample.nsampletypecode :dummyNumber,\r\n                        ncategorycode: this.props.Login.masterData.SelectedCategory ? this.props.Login.masterData.SelectedCategory[this.props.Login.masterData.SelectedCategoryFilterTextLabel] :dummyNumber,\r\n                        nformcode: this.props.Login.masterData.SelectedCategory ? this.props.Login.masterData.SelectedCategory.nformcode : dummyNumber,\r\n\r\n                    }\r\n        const masterData = {...this.props.Login.masterData, searchedData:undefined}\r\n        const inputParam = {url, inputData};\r\n        this.props.getStudyTemplateByCategoryType(inputParam, masterData, this.state.selectedRecord, false) ;\r\n        //--------------------------------------------------\r\n        // this.searchRef.current.value = \"\";\r\n        // const inputParam = {\r\n        //     inputData: { \"userinfo\": this.props.Login.userInfo },\r\n        //     classUrl: \"templatemaster\",\r\n        //     methodUrl: \"TemplateMaster\",\r\n        //     userInfo: this.props.Login.userInfo,\r\n        //     displayName: \"IDS_STUDYPLANTEMPLATE\"\r\n        // };\r\n\r\n        // this.props.callService(inputParam);\r\n        //////////////////---------------------------\r\n       \r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.filterSelectedRecord !== previousProps.Login.filterSelectedRecord) {\r\n            this.setState({ filterSelectedRecord: this.props.Login.filterSelectedRecord });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n                const userRoleControlRights = this.state.userRoleControlRights || [];\r\n                let controlMap = this.state.controlMap || {};\r\n                let filterSelectedRecord = this.state.filterSelectedRecord || {};\r\n\r\n                // if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) \r\n                // {\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]\r\n                        && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                            userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n                //}\r\n                const selectedValues = {};\r\n                const categroyLable = this.props.Login.masterData.categroyLable ? this.props.Login.masterData.categroyLable : this.props.Login.masterData.lstcategory ? Object.keys(this.props.Login.masterData.lstcategory)[0] : \"\";\r\n                const categoryValuemember = this.props.Login.masterData.SelectedCategoryFilterTextLabel;\r\n                const categoryDisplaymemeber = this.props.Login.masterData.SelectedCategoryFilterValueLabel;\r\n\r\n                filterSelectedRecord[\"ntransactionstatus\"] = this.props.Login.masterData.lstTemplateMasterlevel ? this.props.Login.masterData.lstTemplateMasterlevel.length > 0 ?\r\n                    this.props.Login.masterData.lstTemplateMasterlevel[0][\"ntransactionstatus\"] :\r\n                    this.props.Login.filterSelectedRecord ? this.props.Login.filterSelectedRecord[\"ntransactionstatus\"] : [] : [];\r\n\r\n                let TaglstSampleType = [];\r\n                let Taglstcategory = [];\r\n\r\n                // if (this.props.Login.masterData.lstSampleType) {\r\n                //     sortData(this.props.Login.masterData.lstSampleType, \"descending\", \"nsorter\");\r\n                // }\r\n                if (this.props.Login.masterData.lstSampleType && !this.props.Login.masterData.lstSampleType[0].item) {\r\n                    const sampleTypeMap = constructOptionList(this.props.Login.masterData.lstSampleType || [], \"nsampletypecode\",\r\n                        \"ssampletypename\", \"nsorter\", \"ascending\", undefined);\r\n                    TaglstSampleType = sampleTypeMap.get(\"OptionList\");\r\n                }\r\n                if (this.props.Login.masterData.lstcategory && this.props.Login.masterData.lstcategory[categroyLable]) {\r\n                    const categoryTypeMap = this.props.Login.masterData.lstcategory[categroyLable] ? constructOptionList(this.props.Login.masterData.lstcategory[categroyLable]\r\n                        || [], categoryValuemember, categoryDisplaymemeber, categoryValuemember, \"ascending\", undefined) : this.props.Login.masterData.lstcategory;\r\n                    Taglstcategory = categoryTypeMap.get(\"OptionList\");\r\n                }\r\n                if (this.props.Login.masterData.lstTemplateMasterlevel) {\r\n                    sortData(this.props.Login.masterData.lstTemplateMasterlevel, \"ascending\", \"nlevelno\")\r\n                }\r\n\r\n                selectedValues[\"ncategorycode\"] = this.props.Login.masterData.selectedValues ? this.props.Login.masterData.selectedValues[\"ncategorycode\"] :\r\n                    Taglstcategory.length > 0 ? Taglstcategory[0].item[categoryValuemember] : -2;\r\n\r\n                selectedValues[\"nformcode\"] = this.props.Login.masterData.selectedValues ? this.props.Login.masterData.selectedValues[\"nformcode\"] : Taglstcategory.length > 0 ?\r\n                    Taglstcategory[0].item[\"nformcode\"] : -2;\r\n\r\n                selectedValues[\"nsampletypecode\"] = TaglstSampleType.length > 0 ?\r\n                    TaglstSampleType[0].item[\"nsampletypecode\"] : this.props.Login.masterData.selectedValues\r\n                        ? this.props.Login.masterData.selectedValues[\"nsampletypecode\"] : -2\r\n\r\n                filterSelectedRecord[\"categroyLable\"] = categroyLable;\r\n                filterSelectedRecord[\"categoryValuemember\"] = categoryValuemember;\r\n                filterSelectedRecord[\"categoryDisplaymemeber\"] = categoryDisplaymemeber;\r\n                filterSelectedRecord[\"sampletype\"] = TaglstSampleType[0];\r\n                filterSelectedRecord[\"categorytype\"] = Taglstcategory[0];\r\n                this.setState({\r\n                    TaglstSampleType, Taglstcategory,\r\n                    filterSelectedRecord,\r\n                    userRoleControlRights: userRoleControlRights ? userRoleControlRights : this.state.userRoleControlRights,\r\n                    controlMap: controlMap ? controlMap : this.state.controlMap\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.Login.masterData.lstcategory !== previousProps.Login.masterData.lstcategory) {\r\n                this.setState({ Taglstcategory: this.props.Login.Taglstcategory })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // componentDidUpdate1(previousProps) {\r\n    //     if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n    //         this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n    //     }\r\n    //     if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n    //         // if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n    //         //     this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n    //         // }\r\n    //         const userRoleControlRights = this.state.userRoleControlRights || [];\r\n    //         let controlMap = this.state.controlMap || {};\r\n    //         let selectedRecord = this.state.selectedRecord || {};\r\n\r\n    //         if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n    //             if (this.props.Login.userRoleControlRights) {\r\n    //                 this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n    //                     userRoleControlRights.push(item.ncontrolcode))\r\n    //             }\r\n    //             controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n    //             // selectedRecord[\"defaultsampletype\"] =  this.props.Login.masterData && this.props.Login.masterData.defaultsampletype ? this.props.Login.masterData.defaultsampletype : TaglstSampleType ? {\r\n    //             //     \"value\": TaglstSampleType.get(\"OptionList\")[0].item[\"nsampletypecode\"],\r\n    //             //     \"label\": TaglstSampleType.get(\"OptionList\")[0].item[\"ssampletypename\"]\r\n    //             // } : \"\";\r\n\r\n    //             // selectedRecord[\"defaultCatogoryType\"] = this.props.Login.masterData && this.props.Login.masterData.defaultCatogoryType && this.props.Login.masterData.defaultCatogoryType !== \"\" ?\r\n    //             //                 this.props.Login.masterData.defaultCatogoryType : Taglstcategory ? Taglstcategory.get(\"OptionList\").length > 0 ? {\r\n    //             //                     \"value\": Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember],\r\n    //             //                     \"label\": Taglstcategory.get(\"OptionList\")[0].item[categoryDisplaymemeber]\r\n    //             //                 } : \"\" : \"\";\r\n    //         }\r\n    //        // const selectedRecord = {}; \r\n    //         const selectedInput = {}; const selectedValues = {};\r\n    //         const categroyLable = this.props.Login.masterData.categroyLable ? this.props.Login.masterData.categroyLable : this.props.Login.masterData.lstcategory ? Object.keys(this.props.Login.masterData.lstcategory)[0] : \"\";\r\n    //         const categoryValuemember = this.props.Login.masterData.categoryValuemember ? this.props.Login.masterData.categoryValuemember : this.props.Login.masterData.lstcategory ? Object.keys(this.props.Login.masterData.lstcategory[categroyLable][0])[0] : \"\";\r\n    //         const categoryDisplaymemeber = this.props.Login.masterData.categoryDisplaymemeber ? this.props.Login.masterData.categoryDisplaymemeber : this.props.Login.masterData.lstcategory ? Object.keys(this.props.Login.masterData.lstcategory[categroyLable][0])[1] : \"\";\r\n\r\n    //         selectedRecord[\"ntransactionstatus\"] = this.props.Login.masterData.lstTemplateMasterlevel ? this.props.Login.masterData.lstTemplateMasterlevel.length > 0 ?\r\n    //             this.props.Login.masterData.lstTemplateMasterlevel[0][\"ntransactionstatus\"] :\r\n    //             this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"ntransactionstatus\"] : [] : [];\r\n\r\n    //         let TaglstSampleType;\r\n    //         let Taglstcategory;\r\n    //         if (this.props.Login.masterData.lstSampleType && !this.props.Login.masterData.lstSampleType[0].item) {\r\n    //             TaglstSampleType = constructOptionList(this.props.Login.masterData.lstSampleType || [], \"nsampletypecode\",\r\n    //                 \"ssampletypename\", \"nsampletypecode\", \"ascending\", undefined);\r\n    //         }\r\n    //         if (this.props.Login.masterData.lstcategory && this.props.Login.masterData.lstcategory[categroyLable]) {\r\n    //             Taglstcategory = this.props.Login.masterData.lstcategory[categroyLable] ? constructOptionList(this.props.Login.masterData.lstcategory[categroyLable]\r\n    //                 || [], categoryValuemember, categoryDisplaymemeber, categoryValuemember, \"ascending\", undefined) : this.props.Login.masterData.lstcategory;\r\n    //         }\r\n    //         if (this.props.Login.masterData.lstTemplateMasterlevel) {\r\n    //             sortData(this.props.Login.masterData.lstTemplateMasterlevel, \"ascending\", \"nlevelno\")\r\n    //         }\r\n\r\n    //         selectedValues[\"ncategorycode\"] = this.props.Login.masterData.selectedValues ? this.props.Login.masterData.selectedValues[\"ncategorycode\"] : Taglstcategory ?\r\n    //             Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember] : -2;\r\n\r\n    //         selectedValues[\"nformcode\"] = this.props.Login.masterData.selectedValues ? this.props.Login.masterData.selectedValues[\"nformcode\"] : Taglstcategory ?\r\n    //             Taglstcategory.get(\"OptionList\")[0].item[\"nformcode\"] : -2;\r\n\r\n    //         selectedValues[\"nsampletypecode\"] = TaglstSampleType ? TaglstSampleType.get(\"OptionList\").length > 0\r\n    //             ? TaglstSampleType.get(\"OptionList\")[0].item[\"nsampletypecode\"] : this.props.Login.masterData.selectedValues\r\n    //                 ? this.props.Login.masterData.selectedValues[\"nsampletypecode\"] : -2 : this.props.Login.masterData.selectedValues ? this.props.Login.masterData.selectedValues[\"nsampletypecode\"] : -2;\r\n\r\n\r\n    //             // selectedRecord[\"defaultsampletype\"] = this.state.selectedRecord ?  this.state.selectedRecord.defaultsampletype \r\n    //             //         : this.props.Login.masterData.defaultsampletype ? this.props.Login.masterData.defaultsampletype : TaglstSampleType ? {\r\n    //             //     \"value\": TaglstSampleType.get(\"OptionList\")[0].item[\"nsampletypecode\"],\r\n    //             //     \"label\": TaglstSampleType.get(\"OptionList\")[0].item[\"ssampletypename\"], item:TaglstSampleType.get(\"OptionList\")[0]\r\n    //             // } : \"\";\r\n\r\n    //             // selectedRecord[\"defaultCatogoryType\"] = this.state.selectedRecord ?  this.state.selectedRecord.defaultCatogoryType \r\n    //             // : this.props.Login.masterData.defaultCatogoryType && this.props.Login.masterData.defaultCatogoryType !== \"\" ?\r\n    //             //                 this.props.Login.masterData.defaultCatogoryType : Taglstcategory ? Taglstcategory.get(\"OptionList\").length > 0 ? {\r\n    //             //                     \"value\": Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember],\r\n    //             //                     \"label\": Taglstcategory.get(\"OptionList\")[0].item[categoryDisplaymemeber], item: Taglstcategory.get(\"OptionList\")[0]\r\n    //             //                 } : \"\" : \"\";\r\n    //         let openModal = false;\r\n    //         this.props.Login.masterData[\"lstcategory\"] = Taglstcategory ? Taglstcategory.get(\"OptionList\") : this.props.Login.masterData.lstcategory;\r\n    //         this.props.Login.masterData[\"lstTreeversionTemplate\"] = this.props.Login.masterData.lstTreeversionTemplate ? this.props.Login.masterData.lstTreeversionTemplate : this.props.Login.masterData[\"lstTreeversionTemplate\"];\r\n    //         this.props.Login.masterData[\"lstTemplateMasterlevel\"] = this.props.Login.masterData.lstTemplateMasterlevel ? this.props.Login.masterData.lstTemplateMasterlevel : this.props.Login.masterData[\"lstTemplateMasterlevel\"];\r\n    //         this.props.Login.masterData[\"selected\"] = this.props.Login.masterData[\"selectedTempVersion\"] ? this.props.Login.masterData[\"selectedTempVersion\"] :\r\n    //             this.props.Login.masterData[\"selected\"];\r\n    //        // this.props.Login.masterData[\"selectedValues\"] = selectedValues;\r\n    //         this.props.Login.masterData[\"defaultCatogoryType\"] = this.props.Login.masterData.defaultCatogoryType \r\n    //              && this.props.Login.masterData.defaultCatogoryType !== \"\" ?\r\n    //             this.props.Login.masterData.defaultCatogoryType : Taglstcategory ? Taglstcategory.get(\"OptionList\").length > 0 ? {\r\n    //                 \"value\": Taglstcategory.get(\"OptionList\")[0].item[categoryValuemember],\r\n    //                 \"label\": Taglstcategory.get(\"OptionList\")[0].item[categoryDisplaymemeber],\r\n    //                 \"item\": Taglstcategory.get(\"OptionList\")[0].item\r\n    //             } : \"\" : \"\";\r\n    //         this.props.Login.masterData[\"categroyLable\"] = categroyLable;\r\n    //         this.props.Login.masterData[\"categoryValuemember\"] = categoryValuemember;\r\n    //         this.props.Login.masterData[\"categoryDisplaymemeber\"] = categoryDisplaymemeber;\r\n    //         this.props.Login.masterData[\"lstSampleType\"] = TaglstSampleType ? TaglstSampleType.get(\"OptionList\") : this.props.Login.masterData.lstSampleType ? this.props.Login.masterData.lstSampleType : -2;\r\n    //         this.props.Login.masterData[\"defaultsampletype\"] = this.props.Login.masterData.defaultsampletype ? this.props.Login.masterData.defaultsampletype : TaglstSampleType ? {\r\n    //             \"value\": TaglstSampleType.get(\"OptionList\")[0].item[\"nsampletypecode\"],\r\n    //             \"label\": TaglstSampleType.get(\"OptionList\")[0].item[\"ssampletypename\"],\r\n    //             \"item\": TaglstSampleType.get(\"OptionList\")[0].item\r\n    //         } : -2;\r\n\r\n\r\n\r\n    //         //let filterData = this.generateBreadCrumData();\r\n    //         this.setState({//filterData,\r\n    //             selectedRecord, userRoleControlRights: userRoleControlRights ? userRoleControlRights : this.state.userRoleControlRights,\r\n    //             controlMap: controlMap ? controlMap : this.state.controlMap,\r\n    //             selected: this.props.Login.masterData.lstTreeversionTemplate ? this.props.Login.masterData.lstTreeversionTemplate.length > 0 ?\r\n    //                 this.props.Login.masterData.lstTreeversionTemplate[0] : {} : this.state.selected,\r\n    //             selectedSampleType: TaglstSampleType ? TaglstSampleType.get(\"OptionList\")[0][\"nsampletypecode\"] : this.state.selectedSampleType,\r\n\r\n    //         });\r\n\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: { openModal, masterData: this.props.Login.masterData, selectedRecord, selectedInput }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    // }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    // \"value\": this.props.Login.masterData.defaultsampletype && this.props.Login.masterData.defaultsampletype.label || '-';\r\n                    \"value\": (this.props.Login.masterData.SelectedSample && this.props.Login.masterData.SelectedSample.ssampletypename) || '-'\r\n                },\r\n                {\r\n                    \"label\": \"IDS_PRODUCTCATEGORY\",\r\n                    //  \"value\": this.props.Login.masterData.defaultCatogoryType && this.props.Login.masterData.defaultCatogoryType.label || '-'\r\n                    \"value\": (this.props.Login.masterData.SelectedCategory && this.props.Login.masterData.SelectedCategory[this.props.Login.masterData.SelectedCategoryFilterValueLabel]) || '-'\r\n                }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n                props.Login.openModal = false;\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n            props.Login.openModal = false;\r\n        }\r\n        if (!props.Login.loadEsign) {\r\n            return { selectedRecord: { ...state.selectedRecord , esigncomments: '', esignpassword: '' } }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\nexport default connect(mapStatetoProps, {\r\n    callService, crudMaster, updateStore, addModel,\r\n    fetchRecordByTemplateID, getTemplateMasterTree, validateEsignCredential, filterColumnData,\r\n    getSampleTypeProductCategory, getStudyTemplateByCategoryType\r\n})(injectIntl(templatemaster));\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}