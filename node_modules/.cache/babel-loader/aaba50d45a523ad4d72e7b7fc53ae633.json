{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var AddOpenDate=function AddOpenDate(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntranscode\",formLabel:props.intl.formatMessage({id:\"IDS_STATUS\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.Status,value:props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\",defaultValue:props.selectedRecord[\"ntranscode\"],isMulti:false,isSearchable:true,isMandatory:true,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntranscode',1);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dopendate\",label:props.intl.formatMessage({id:\"IDS_OPENDATE\"}),className:\"form-control\",selected:props.selectedRecord[\"dopendate\"],dateFormat:props.userInfo.ssitedate,minDate:props.currentTime,isClearable:false,required:true,isMandatory:true,onChange:function onChange(date){return props.handleDateChange(\"dopendate\",date);},value:props.selectedRecord[\"dopendate\"]})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_REASON\"}),name:\"sopenreason\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_OPENREASON\"}),value:props.selectedRecord?props.selectedRecord[\"sopenreason\"]:\"\",rows:\"2\",isMandatory:false,required:false,maxLength:\"255\"})));};export default injectIntl(AddOpenDate);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/instrumentmanagement/AddOpenDate.jsx"],"names":["React","injectIntl","Row","Col","DateTimePicker","FormTextarea","FormSelectSearch","AddOpenDate","props","intl","formatMessage","id","Status","selectedRecord","event","onComboChange","userInfo","ssitedate","currentTime","date","handleDateChange","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst AddOpenDate=(props)=>{\r\n    return(\r\n        <Row>\r\n\r\n        <Col md={12}>\r\n        <FormSelectSearch\r\n                               name={\"ntranscode\"}\r\n                               formLabel={ props.intl.formatMessage({ id:\"IDS_STATUS\"})}                                \r\n                               placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                               options={ props.Status}\r\n                               value = { props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\" }\r\n                              defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                               isMulti={false}\r\n                               isSearchable={true}\r\n                               isMandatory={true}\r\n                               isDisabled={false}\r\n                               closeMenuOnSelect={true}\r\n                               alphabeticalSort={true}\r\n                              onChange = {(event)=> props.onComboChange(event, 'ntranscode',1)}                               \r\n                          />\r\n        </Col>\r\n\r\n        <Col md={12}>\r\n        <DateTimePicker\r\n                             name={\"dopendate\"} \r\n                             label={ props.intl.formatMessage({ id:\"IDS_OPENDATE\"})}                     \r\n                             className='form-control'\r\n                             selected={props.selectedRecord[\"dopendate\"]}\r\n                             dateFormat  ={props.userInfo.ssitedate}\r\n                             minDate={props.currentTime}\r\n                             isClearable={false}\r\n                             required={true}\r\n                             isMandatory={true}\r\n                             onChange={date => props.handleDateChange(\"dopendate\", date)}\r\n                            value={props.selectedRecord[\"dopendate\"]}\r\n                            />\r\n                         </Col>\r\n\r\n                            {/* <Col md={6}>\r\n                            <FormSelectSearch\r\n                                   name={\"ntzopendate\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.TimeZoneList}\r\n                                  // optionId=\"ntimezonecode\"\r\n                                  // optionValue=\"stimezoneid\"\r\n                                   value = { props.selectedRecord[\"ntzopendate\"] }\r\n                                   defaultValue={props.selectedRecord[\"ntzopendate\"]}\r\n                                   isMandatory={false}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                  // isClearable={false}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'ntzopendate',1)}                               \r\n                              />                    \r\n\r\n        </Col> */}\r\n        <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_REASON\" })}\r\n                    name={\"sopenreason\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_OPENREASON\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sopenreason\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n    </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddOpenDate);"]},"metadata":{},"sourceType":"module"}