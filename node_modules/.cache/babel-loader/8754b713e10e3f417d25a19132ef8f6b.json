{"ast":null,"code":"import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import DataGrid from'../../../components/data-grid/data-grid.component';import DateTimePicker from'../../../components/date-time-picker/date-time-picker.component';import{callService}from'../../../actions';import{convertDateValuetoString,getControlMap,getEndOfDay,getStartOfDay,rearrangeDateFormat}from'../../../components/CommonScript';import{ListWrapper}from'../../../components/client-group.styles';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var ReScheduleLog=/*#__PURE__*/function(_React$Component){_inherits(ReScheduleLog,_React$Component);var _super=_createSuper(ReScheduleLog);function ReScheduleLog(props){var _this;_classCallCheck(this,ReScheduleLog);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;var dateObj={};if(dateName===\"fromdate\"){dateObj=convertDateValuetoString(dateValue,_this.props.Login.masterData.toDate,_this.props.Login.userInfo,true);}else{dateObj=convertDateValuetoString(_this.props.Login.masterData.toDate,dateValue,_this.props.Login.userInfo,true);}var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:dateObj.fromDate,toDate:dateObj.toDate},classUrl:'reschedulelog',methodUrl:\"ReScheduleLog\",displayName:\"IDS_TRAININGRESCHEDULELOG\",userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.reloadData=function(selectedRecord,isDateChange){var fromDate=_this.props.Login.masterData.FromDate;var toDate=_this.props.Login.masterData.ToDate;var obj=convertDateValuetoString(fromDate,toDate,_this.props.Login.userInfo,true);var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:obj.fromDate,toDate:obj.toDate},classUrl:'reschedulelog',methodUrl:\"ReScheduleLog\",displayName:\"IDS_TRAININGRESCHEDULELOG\",userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.searchRef=React.createRef();var dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:dataState,userRoleControlRights:[],controlMap:new Map(),showSaveContinue:true};_this.extractedColumnList=[{\"idsName\":\"IDS_TRAINERNAME\",\"dataField\":\"strainername\",\"width\":\"200px\"},{\"idsName\":\"IDS_SCHEDULEDATE\",\"dataField\":\"sscheduledate\",\"width\":\"300px\"},{\"idsName\":\"IDS_RESCHEDULEDATE\",\"dataField\":\"srescheduledate\",\"width\":\"250px\"},{\"idsName\":\"IDS_RESCHEDULECREATEDDATE\",\"dataField\":\"screateddate\",\"width\":\"250px\"},{\"idsName\":\"IDS_REASON\",\"dataField\":\"scomments\",\"width\":\"250px\"}];return _this;}_createClass(ReScheduleLog,[{key:\"render\",value:function render(){var _this2=this;var fromDate=\"\";var toDate=\"\";if(this.props.Login.masterData&&this.props.Login.masterData.FromDate){fromDate=this.state.selectedRecord[\"fromdate\"]&&getStartOfDay(this.state.selectedRecord[\"fromdate\"])||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.FromDate);toDate=this.state.selectedRecord[\"todate\"]&&getEndOfDay(this.state.selectedRecord[\"todate\"])||rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecord[\"fromdate\"]||fromDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this2.handleDateChange(\"fromdate\",date);},value:this.state.selectedRecord[\"fromdate\"]||fromDate})),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"todate\",label:this.props.intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.state.selectedRecord[\"todate\"]||toDate,dateFormat:this.props.Login.userInfo.ssitedate,isClearable:false,onChange:function onChange(date){return _this2.handleDateChange(\"todate\",date);},value:this.state.selectedRecord[\"todate\"]||toDate}))),this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"ntrainingreschedulecode\",data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,scrollable:\"scrollable\",pageable:true,isComponent:true,gridHeight:'600px',isToolBarRequired:true,expandField:\"expanded\",selectedId:0}):\"\"))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData.TrainingRescheduleLog,dataResult:process(this.props.Login.masterData.TrainingRescheduleLog||[],this.state.dataState)});}else{if(this.props.Login.masterData.TrainingRescheduleLog){this.setState({data:this.props.Login.masterData.TrainingRescheduleLog,dataState:{skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5},dataResult:process(this.props.Login.masterData.TrainingRescheduleLog||[],{skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5})});}}}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return ReScheduleLog;}(React.Component);export default connect(mapStateToProps,{callService:callService})(injectIntl(ReScheduleLog));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/competencemanagement/reschedulelog/ReScheduleLog.jsx"],"names":["React","connect","injectIntl","Row","Col","toast","process","DataGrid","DateTimePicker","callService","convertDateValuetoString","getControlMap","getEndOfDay","getStartOfDay","rearrangeDateFormat","ListWrapper","mapStateToProps","state","Login","ReScheduleLog","props","dataStateChange","event","setState","dataResult","data","dataState","handleDateChange","dateName","dateValue","selectedRecord","Date","dateObj","masterData","toDate","userInfo","inputParam","inputData","fromDate","classUrl","methodUrl","displayName","reloadData","isDateChange","FromDate","ToDate","obj","searchRef","createRef","skip","take","settings","parseInt","masterStatus","error","userRoleControlRights","controlMap","Map","showSaveContinue","extractedColumnList","intl","formatMessage","id","ssitedate","date","previousProps","nformcode","Object","values","map","item","push","ncontrolcode","TrainingRescheduleLog","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nimport DateTimePicker from '../../../components/date-time-picker/date-time-picker.component';\r\nimport {callService} from '../../../actions';\r\nimport { convertDateValuetoString, getControlMap, getEndOfDay, getStartOfDay, rearrangeDateFormat } from '../../../components/CommonScript';\r\nimport { ListWrapper } from '../../../components/client-group.styles';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass ReScheduleLog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.searchRef = React.createRef();\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showSaveContinue: true\r\n        };\r\n\r\n        this.extractedColumnList = [\r\n               { \"idsName\": \"IDS_TRAINERNAME\", \"dataField\": \"strainername\", \"width\": \"200px\" },\r\n               { \"idsName\": \"IDS_SCHEDULEDATE\", \"dataField\": \"sscheduledate\", \"width\": \"300px\" },\r\n               { \"idsName\": \"IDS_RESCHEDULEDATE\", \"dataField\": \"srescheduledate\", \"width\": \"250px\" },\r\n               { \"idsName\": \"IDS_RESCHEDULECREATEDDATE\", \"dataField\": \"screateddate\", \"width\": \"250px\" },\r\n               { \"idsName\": \"IDS_REASON\", \"dataField\": \"scomments\", \"width\": \"250px\" }\r\n\r\n        ];\r\n       \r\n\r\n\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let fromDate = \"\";\r\n        let toDate = \"\";\r\n\r\n        if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\r\n            fromDate = (this.state.selectedRecord[\"fromdate\"] && getStartOfDay(this.state.selectedRecord[\"fromdate\"])) || rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.FromDate);\r\n            toDate = (this.state.selectedRecord[\"todate\"] && getEndOfDay(this.state.selectedRecord[\"todate\"])) || rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.ToDate);\r\n        }\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <Row>\r\n                                <Col md={3}>\r\n                                    <DateTimePicker\r\n                                        name={\"fromdate\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"fromdate\"] || fromDate}\r\n                                        dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"fromdate\", date)}\r\n                                        value={this.state.selectedRecord[\"fromdate\"] || fromDate}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <DateTimePicker\r\n                                        name={\"todate\"}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"todate\"] || toDate}\r\n                                        dateFormat={this.props.Login.userInfo.ssitedate}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"todate\", date)}\r\n                                        value={this.state.selectedRecord[\"todate\"] || toDate}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={\"ntrainingreschedulecode\"}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    scrollable={\"scrollable\"}\r\n                                    pageable={true}\r\n                                    isComponent={true}\r\n                                    gridHeight={'600px'}\r\n                                    isToolBarRequired={true}\r\n                                    expandField=\"expanded\"\r\n                                    selectedId={0}\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData.TrainingRescheduleLog,\r\n                    dataResult: process(this.props.Login.masterData.TrainingRescheduleLog || [], this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                if (this.props.Login.masterData.TrainingRescheduleLog) {\r\n                    this.setState({\r\n                        data: this.props.Login.masterData.TrainingRescheduleLog,\r\n                        dataState : {skip:0,take:this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5},\r\n                        dataResult: process(this.props.Login.masterData.TrainingRescheduleLog || [], {skip:0,take:this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}),\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n\r\n       let dateObj = {};\r\n       if (dateName === \"fromdate\") {\r\n            dateObj = convertDateValuetoString(dateValue, this.props.Login.masterData.toDate, this.props.Login.userInfo, true);\r\n       }\r\n       else{\r\n            dateObj = convertDateValuetoString(this.props.Login.masterData.toDate, dateValue, this.props.Login.userInfo, true);\r\n       }\r\n\r\n       const inputParam = {\r\n                                inputData: {\r\n                                    \"userinfo\": this.props.Login.userInfo,\r\n                                    fromDate:dateObj.fromDate, \r\n                                    toDate:dateObj.toDate,\r\n                                },\r\n                                classUrl: 'reschedulelog',\r\n                                methodUrl: \"ReScheduleLog\",\r\n                                displayName: \"IDS_TRAININGRESCHEDULELOG\",\r\n                                userInfo: this.props.Login.userInfo\r\n                            };\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    reloadData = (selectedRecord, isDateChange) => {\r\n        let fromDate = this.props.Login.masterData.FromDate;\r\n        let toDate = this.props.Login.masterData.ToDate;       \r\n        let obj = convertDateValuetoString(fromDate,toDate, this.props.Login.userInfo, true);\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate:obj.fromDate, \r\n                toDate:obj.toDate,\r\n            },\r\n            classUrl: 'reschedulelog',\r\n            methodUrl: \"ReScheduleLog\",\r\n            displayName: \"IDS_TRAININGRESCHEDULELOG\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {callService})(injectIntl(ReScheduleLog));"]},"metadata":{},"sourceType":"module"}