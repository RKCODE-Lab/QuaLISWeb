{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\ResultEntryParamCommetsForm.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport { intl } from '../../components/App';\nimport { MediaHeader, MediaLabel, MediaSubHeader } from '../../components/App.styles';\n\nconst ResultEntryParamCommetsForm = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Object.values(props.selecteRecord).length > 0 ? /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MediaHeader, {\n    className: `labelfont`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }, \"Test:\", \" \" + props.selecteRecord.stestsynonym), /*#__PURE__*/React.createElement(MediaSubHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MediaLabel, {\n    className: `labelfont`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }, \"Parameter: \", props.selecteRecord.sparametersynonym)))) : \"\", /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"parametercomments\",\n    label: \"\",\n    placeholder: intl.formatMessage({\n      id: \"IDS_PARAMETERCOMMENTS\"\n    }),\n    type: \"text\",\n    value: Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.sresultcomment : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: 255,\n    onChange: event => props.onInputChange(event, \"sresultcomment\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(ResultEntryParamCommetsForm);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryParamCommetsForm.jsx"],"names":["React","Row","Col","injectIntl","FormTextarea","intl","MediaHeader","MediaLabel","MediaSubHeader","ResultEntryParamCommetsForm","props","Object","values","selecteRecord","length","stestsynonym","sparametersynonym","formatMessage","id","sresultcomment","event","onInputChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,cAAlC,QAAwD,6BAAxD;;AAEA,MAAMC,2BAA2B,GAAIC,KAAD,IAAW;AAC3C,sBACI,0CACKC,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,aAApB,EAAmCC,MAAnC,GAA4C,CAA5C,gBACG,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAG,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA2C,MAAMJ,KAAK,CAACG,aAAN,CAAoBE,YAArE,CAFJ,eAGI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAG,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgDL,KAAK,CAACG,aAAN,CAAoBG,iBAApE,CADJ,CAHJ,CADJ,CADH,GAWK,EAZV,eAcI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAE,mBADV;AAEI,IAAA,KAAK,EAAE,EAFX;AAGI,IAAA,WAAW,EAAEX,IAAI,CAACY,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,CAHjB;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,KAAK,EAAEP,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,aAApB,EAAmCC,MAAnC,GAA4C,CAA5C,GAAgDJ,KAAK,CAACG,aAAN,CAAoBM,cAApE,GAAqF,EALhG;AAMI,IAAA,WAAW,EAAE,KANjB;AAOI,IAAA,QAAQ,EAAE,IAPd;AAQI,IAAA,SAAS,EAAE,GARf;AASI,IAAA,QAAQ,EAAGC,KAAD,IAAWV,KAAK,CAACW,aAAN,CAAoBD,KAApB,EAA2B,gBAA3B,CATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAdJ,CADJ;AAgCH,CAjCD;;AAkCA,eAAejB,UAAU,CAACM,2BAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { intl } from '../../components/App';\r\nimport { MediaHeader, MediaLabel, MediaSubHeader } from '../../components/App.styles';\r\n\r\nconst ResultEntryParamCommetsForm = (props) => {\r\n    return (\r\n        <>\r\n            {Object.values(props.selecteRecord).length > 0 ?\r\n                <Row className=\"mb-4\">\r\n                    <Col md={12}>\r\n\r\n                        <MediaHeader className={`labelfont`}>Test:{\" \" + props.selecteRecord.stestsynonym}</MediaHeader>\r\n                        <MediaSubHeader>\r\n                            <MediaLabel className={`labelfont`}>Parameter: {props.selecteRecord.sparametersynonym}</MediaLabel>\r\n                        </MediaSubHeader>\r\n                    </Col>\r\n                </Row>\r\n\r\n                : \"\"}\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        name={\"parametercomments\"}\r\n                        label={\"\"}\r\n                        placeholder={intl.formatMessage({ id: \"IDS_PARAMETERCOMMENTS\" })}\r\n                        type=\"text\"\r\n                        value={Object.values(props.selecteRecord).length > 0 ? props.selecteRecord.sresultcomment : \"\"}\r\n                        isMandatory={false}\r\n                        required={true}\r\n                        maxLength={255}\r\n                        onChange={(event) => props.onInputChange(event, \"sresultcomment\")}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(ResultEntryParamCommetsForm);\r\n"]},"metadata":{},"sourceType":"module"}