{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\form-textarea\\\\form-textarea.component.jsx\";\nimport React from 'react';\nimport './form-textarea.styles';\nimport { Form } from 'react-bootstrap';\nimport { ltrim, whitespaceTrim } from '../CommonScript';\n\nconst FormTextarea = ({\n  name,\n  type,\n  placeholder,\n  onChange,\n  className,\n  value,\n  // error,\n  errors,\n  isMandatory,\n  children,\n  rows,\n  label,\n  defaultValue,\n  readOnly,\n  isDisabled,\n  isInvalid,\n  charLength,\n  onBlur,\n  ...props\n}) => /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Form.Group, {\n  className: \"floating-label\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Form.Control, {\n  as: \"textarea\",\n  id: name,\n  name: name,\n  placeholder: placeholder,\n  rows: rows,\n  onChange: onChange,\n  value: value,\n  className: className,\n  defaultValue: defaultValue,\n  maxLength: props.maxLength,\n  required: props.required,\n  readOnly: readOnly,\n  disabled: isDisabled,\n  autoComplete: \"off\",\n  isInvalid: isInvalid // onBlur={onBlur? (e)=>{ onChange(whitespaceTrim(e)) ;onBlur(e)}:(e)=>{  onChange(whitespaceTrim(e))}}\n  ,\n  onBlur: onBlur,\n  onBlurCapture: onBlur ? e => {\n    onChange(whitespaceTrim(e));\n    onBlur(e);\n  } : e => {\n    onChange && onChange(whitespaceTrim(e));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(Form.Label, {\n  htmlFor: name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }\n}, label, isMandatory && /*#__PURE__*/React.createElement(\"sup\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 63\n  }\n}, \"*\")), props.showCharCount && /*#__PURE__*/React.createElement(\"aside\", {\n  style: {\n    fontSize: \"small\",\n    float: \"right\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  class: \"length\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }\n}, charLength ? charLength : value ? value.length : 0), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }\n}, \"/\"), /*#__PURE__*/React.createElement(\"span\", {\n  class: \"limit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }\n}, props.maxLength)), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n  type: \"invalid\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }\n}, errors)));\n\nFormTextarea.defaultProps = {\n  rows: \"2\",\n  className: \"\"\n};\nexport default FormTextarea;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/form-textarea/form-textarea.component.jsx"],"names":["React","Form","ltrim","whitespaceTrim","FormTextarea","name","type","placeholder","onChange","className","value","errors","isMandatory","children","rows","label","defaultValue","readOnly","isDisabled","isInvalid","charLength","onBlur","props","maxLength","required","e","showCharCount","fontSize","float","length","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './form-textarea.styles';\r\nimport { Form } from 'react-bootstrap';\r\nimport { ltrim, whitespaceTrim } from '../CommonScript';\r\nconst FormTextarea = ({\r\n    name,\r\n    type,\r\n    placeholder,\r\n    onChange,\r\n    className,\r\n    value,\r\n    // error,\r\n    errors,\r\n    isMandatory,\r\n    children,\r\n    rows,\r\n    label,\r\n    defaultValue,\r\n    readOnly,\r\n    isDisabled,\r\n    isInvalid,\r\n    charLength,\r\n    onBlur,\r\n    ...props\r\n}) => (\r\n    <React.Fragment>\r\n        <Form.Group className=\"floating-label\">\r\n            <Form.Control as=\"textarea\"\r\n                id={name}\r\n                name={name}\r\n                placeholder={placeholder}\r\n                rows={rows}\r\n                onChange={onChange}\r\n                value={  value }\r\n                className={className}\r\n                defaultValue={defaultValue}\r\n                maxLength={props.maxLength}\r\n                required={props.required}\r\n                readOnly={readOnly}\r\n                disabled={isDisabled}\r\n                autoComplete=\"off\"\r\n                isInvalid={isInvalid} \r\n               // onBlur={onBlur? (e)=>{ onChange(whitespaceTrim(e)) ;onBlur(e)}:(e)=>{  onChange(whitespaceTrim(e))}}\r\n               onBlur={onBlur}\r\n               onBlurCapture={onBlur?(e)=>{onChange(whitespaceTrim(e));onBlur(e)}:(e)=>{onChange&& onChange(whitespaceTrim(e))} }\r\n               />\r\n            <Form.Label htmlFor={name}>{label}{isMandatory && <sup>*</sup>}</Form.Label>\r\n            {props.showCharCount &&\r\n                <aside style={{ fontSize: \"small\", float: \"right\" }}>\r\n                    <span class=\"length\">{charLength ? charLength : value ? value.length : 0}</span>\r\n                    <span>/</span>\r\n                    <span class=\"limit\">{props.maxLength}</span>\r\n                </aside>\r\n            }\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {errors}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n    </React.Fragment>\r\n);\r\n\r\nFormTextarea.defaultProps = {\r\n    rows: \"2\",\r\n    className: \"\"\r\n}\r\nexport default FormTextarea;"]},"metadata":{},"sourceType":"module"}