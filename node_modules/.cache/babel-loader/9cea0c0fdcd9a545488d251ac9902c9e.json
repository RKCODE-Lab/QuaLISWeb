{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\AddImportSampleCountData.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { injectIntl } from 'react-intl';\n\nconst AddImportSampleCountData = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SAMPLECOUNT\"\n    }),\n    name: \"nsamplecount\",\n    type: \"numeric\",\n    onChange: event => props.onNumericInputChange(event.target.value, \"nsamplecount\"),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SAMPLECOUNT\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"nsamplecount\"] ? props.selectedRecord[\"nsamplecount\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddImportSampleCountData);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/registration/AddImportSampleCountData.jsx"],"names":["React","Row","Col","FormInput","injectIntl","AddImportSampleCountData","props","intl","formatMessage","id","event","onNumericInputChange","target","value","selectedRecord"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,wBAAwB,GAAIC,KAAD,IAAW;AACxC,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CADX;AAEI,IAAA,IAAI,EAAE,cAFV;AAGI,IAAA,IAAI,EAAC,SAHT;AAII,IAAA,QAAQ,EAAGC,KAAD,IAAWJ,KAAK,CAACK,oBAAN,CAA2BD,KAAK,CAACE,MAAN,CAAaC,KAAxC,EAA8C,cAA9C,CAJzB;AAKI,IAAA,WAAW,EAAEP,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALjB;AAMI,IAAA,KAAK,EAAEH,KAAK,CAACQ,cAAN,IAAwBR,KAAK,CAACQ,cAAN,CAAqB,cAArB,CAAxB,GAA+DR,KAAK,CAACQ,cAAN,CAAqB,cAArB,CAA/D,GAAsG,EANjH;AAOI,IAAA,WAAW,EAAE,IAPjB;AAQI,IAAA,QAAQ,EAAE,IARd;AASI,IAAA,SAAS,EAAE,KATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAmBH,CApBD;;AAsBA,eAAeV,UAAU,CAACC,wBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst AddImportSampleCountData = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_SAMPLECOUNT\" })}\r\n                    name= \"nsamplecount\"\r\n                    type=\"numeric\"\r\n                    onChange={(event) => props.onNumericInputChange(event.target.value,\"nsamplecount\")}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLECOUNT\" })}\r\n                    value={props.selectedRecord && props.selectedRecord[\"nsamplecount\"] ? props.selectedRecord[\"nsamplecount\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n            </Col>\r\n        </Row>\r\n\r\n        \r\n    );\r\n};\r\n\r\nexport default injectIntl(AddImportSampleCountData);"]},"metadata":{},"sourceType":"module"}