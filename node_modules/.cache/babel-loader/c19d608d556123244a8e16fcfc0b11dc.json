{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\TestReportInfo.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport { injectIntl } from 'react-intl';\n\nconst TestReportInfo = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sconfirmstatement\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CONFIRMSTATEMENT\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_CONFIRMSTATEMENT\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sconfirmstatement\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sdecisionrule\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DECISIONRULE\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DECISIONRULE\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sdecisionrule\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"ssopdescription\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SOPDESCRIPTION\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SOPDESCRIPTION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"ssopdescription\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"stestcondition\",\n    label: props.intl.formatMessage({\n      id: \"IDS_TESTCONDITION\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TESTCONDITION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"stestcondition\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sdeviationcomments\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DEVIATIONCOMMENTS\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEVIATIONCOMMENTS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sdeviationcomments\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"smethodstandard\",\n    label: props.intl.formatMessage({\n      id: \"IDS_METHODSTANDARD\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_METHODSTANDARD\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"smethodstandard\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sreference\",\n    label: props.intl.formatMessage({\n      id: \"IDS_REFERENCE\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_REFERENCE\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sreference\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(TestReportInfo);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/testmanagement/TestReportInfo.jsx"],"names":["React","Row","Col","FormTextarea","injectIntl","TestReportInfo","props","intl","formatMessage","id","event","onInputOnChange","selectedRecord"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst TestReportInfo = (props) => {\r\n    return (\r\n        <Row>         \r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    name={\"sconfirmstatement\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_CONFIRMSTATEMENT\" })}\r\n                    onChange={(event) => props.onInputOnChange(event,1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_CONFIRMSTATEMENT\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sconfirmstatement\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={500}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    name={\"sdecisionrule\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DECISIONRULE\" })}\r\n                    onChange={(event) => props.onInputOnChange(event,1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DECISIONRULE\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sdecisionrule\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={255}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    name={\"ssopdescription\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_SOPDESCRIPTION\" })}\r\n                    onChange={(event) => props.onInputOnChange(event,1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SOPDESCRIPTION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"ssopdescription\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={500}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    name={\"stestcondition\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_TESTCONDITION\" })}\r\n                    onChange={(event) => props.onInputOnChange(event,1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_TESTCONDITION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"stestcondition\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={500}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    name={\"sdeviationcomments\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_DEVIATIONCOMMENTS\" })}\r\n                    onChange={(event) => props.onInputOnChange(event,1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DEVIATIONCOMMENTS\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sdeviationcomments\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={500}\r\n                />\r\n            </Col>    \r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    name={\"smethodstandard\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_METHODSTANDARD\" })}\r\n                    onChange={(event) => props.onInputOnChange(event,1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_METHODSTANDARD\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"smethodstandard\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={255}\r\n                />\r\n            </Col>  \r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    name={\"sreference\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_REFERENCE\" })}\r\n                    onChange={(event) => props.onInputOnChange(event,1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_REFERENCE\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sreference\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={255}\r\n                />\r\n            </Col>              \r\n        </Row>  \r\n    );\r\n\r\n}\r\nexport default injectIntl(TestReportInfo);"]},"metadata":{},"sourceType":"module"}