{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\joballocation\\\\JobAllocation.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { toast } from 'react-toastify';\nimport { convertDateValuetoString, rearrangeDateFormat, constructOptionList, getControlMap, sortData, getSameRecordFromTwoArrays, showEsign, convertDateTimetoStringDBFormat, validatePhoneNumber } from '../../components/CommonScript';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { Button, Col, Row, Card, Nav } from 'react-bootstrap';\nimport { updateStore, callService, crudMaster, validateEsignforJobAllocation, ReceiveinLabStatusWise, getRegTypeJobAllocation, getRegSubTypeJobAllocation, getAppConfigVersionJobAllocation, getFilterStatusJobAllocation, getSectionJobAllocation, getTestStatusJobAllocation, getFilterStatusSectionJobAllocation, getDesignTemplateJobAllocation, getJobAllcationFilterSubmit, getJobAllocationSubSampleDetail, getJobAllocationTestDetail, getTestChildTabDetailJobAllocation, getAllottedTestWise, getAllotAnotherUserTestWise, getRescheduleTestWise, getInstrument, getUsers, ViewAnalystCalendar, CancelTestWise, AllotJobAction, AllotAnotherUserAction, RescheduleJobAction, getSubSampleChildTabDetail, getSampleChildTabDetail, getCommentsCombo, getAttachmentCombo, filterTransactionList, getAnalystCalenderBasedOnUser } from '../../actions';\nimport JobAllocationFilter from './JobAllocationFilter';\nimport SplitterLayout from \"react-splitter-layout\";\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport { transactionStatus, SideBarSeqno, SideBarTabIndex, designProperties } from '../../components/Enumeration';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { ProductList } from '../testmanagement/testmaster-styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync, faEye, faLink, faChevronRight, faComments, faClock, faCalendar } from '@fortawesome/free-solid-svg-icons';\nimport { ContentPanel } from '../../components/App.styles';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { ReactComponent as ReceivedInLab } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/receivedlab.svg\";\nimport { ReactComponent as Allotted } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/allotted.svg\";\nimport { ReactComponent as AnotherUser } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/allotanotheruser.svg\";\nimport { ReactComponent as Reject } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\"; // import { ReactComponent as Analystcalendar } from '../../assets/image/Analystcalendar.svg';\n// import { ReactComponent as Instrumentcalendar } from '../../assets/image/instrumentcalendar.svg';\n\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport Esign from \"../audittrail/Esign\";\nimport AddJobAllocation from './AddJobAllocation';\nimport AllotAnotherUser from './AllotAnotherUser';\nimport SampleInfoView from '../approval/SampleInfoView';\nimport SampleInfoGrid from '../approval/SampleInfoGrid';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport Attachments from '../attachmentscomments/attachments/Attachments';\nimport Comments from '../attachmentscomments/comments/Comments';\nimport { onSaveSampleAttachment, onSaveTestAttachment, onSaveSubSampleAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\nimport { onSaveSampleComments, onSaveTestComments, onSaveSubSampleComments } from '../attachmentscomments/comments/CommentFunctions'; // import AnalystCalenderBasedOnUser from './AnalystCalenderBasedOnUser'\n\nimport NewJobAlloct from './NewJobAlloct';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass JobAllocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.parentScheduleState = data => {\n      this.setState({\n        data: data\n      }); // this.state.\n    };\n\n    this.handleSamplePageChange = e => {\n      this.setState({\n        sampleskip: e.skip,\n        sampletake: e.take\n      });\n    };\n\n    this.handleSubSamplePageChange = e => {\n      this.setState({\n        subsampleskip: e.skip,\n        subsampletake: e.take\n      });\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.onTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n      const tabseqno = tabProps.tabSequence;\n\n      if (tabseqno == SideBarSeqno.TEST) {\n        if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\n          let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n\n          if (activeTestTab === \"IDS_TESTVIEW\") {\n            let arr = [];\n            JASelectedTest && JASelectedTest.map(item => {\n              if (!arr.includes(item.ntransactionstatus)) {\n                arr.push(item.ntransactionstatus);\n              }\n            });\n            let transstatus = arr.map(nsectioncode => nsectioncode).join(\",\");\n\n            if (transstatus.includes(\"20\")) {\n              let inputData = {\n                masterData: this.props.Login.masterData,\n                JASelectedTest: JASelectedTest,\n                ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n                userinfo: this.props.Login.userInfo,\n                activeTestTab: activeTestTab,\n                screenName: activeTestTab,\n                testCommentDataState: this.state.testCommentDataState,\n                testAttachmentDataState: this.state.testAttachmentDataState,\n                testViewDataState: this.state.testViewDataState,\n                activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\n                activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\n              };\n              this.props.getTestChildTabDetailJobAllocation(inputData, true);\n            } else {\n              toast.warn(this.props.intl.formatMessage({\n                id: \"IDS_SELECTALLOTTEST\"\n              }));\n            }\n          } else {\n            let inputData = {\n              masterData: this.props.Login.masterData,\n              JASelectedTest: JASelectedTest,\n              ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n              npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n              userinfo: this.props.Login.userInfo,\n              activeTestTab: activeTestTab,\n              screenName: activeTestTab,\n              testCommentDataState: this.state.testCommentDataState,\n              testAttachmentDataState: this.state.testAttachmentDataState,\n              testViewDataState: this.state.testViewDataState,\n              activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\n              activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\n            };\n            this.props.getTestChildTabDetailJobAllocation(inputData, true);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      } else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSubSample: this.props.Login.masterData.JASelectedSubSample,\n            ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSubSampleTab: activeTestTab,\n            subsampleCommentDataState: this.state.subsampleCommentDataState,\n            subsampleAttachmentDataState: this.state.subsampleAttachmentDataState\n          };\n          this.props.getSubSampleChildTabDetail(inputData);\n        }\n      } else {\n        if (activeTestTab !== this.props.Login.activeTestTab) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            selectedSample: this.props.Login.masterData.JASelectedSample,\n            npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            screenName: activeTestTab,\n            activeSampleTab: activeTestTab\n          };\n          this.props.getSampleChildTabDetail(inputData);\n        }\n      }\n    };\n\n    this.changePropertyViewClose = id => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          activeTabIndex: undefined,\n          activeTestTab: undefined,\n          activeTabId: id\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.changePropertyView = (index, event, status) => {\n      let id = false;\n\n      if (event && event.ntransactiontestcode) {\n        id = event.ntransactiontestcode;\n      } else if (event && event.ntransactionsamplecode) {\n        id = event.ntransactionsamplecode;\n      } else if (event && event.npreregno) {\n        id = event.npreregno;\n      }\n\n      let activeTabIndex;\n      let activeTabId;\n\n      if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\n      }\n\n      if (status != \"click\") {\n        if (index === SideBarTabIndex.ATTACHMENTS) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTATTACHMENTS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.COMMENTS) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTCOMMENTS\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.TESTVIEW) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_TESTVIEW\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else if (index === SideBarTabIndex.ANALYSTCALENDAR) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: \"IDS_ANALYSTCALENDAR\",\n            activeTabIndex,\n            activeTabId\n          };\n          this.onTabChange(tabProps);\n        } else {\n          if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\n                activeTabId: id\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        }\n      }\n    };\n\n    this.sideNavDetail = screenName => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      return screenName === \"IDS_ATTACHMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        tabDetail: this.attachmentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1541,\n          columnNumber: 17\n        }\n      }) : screenName === \"IDS_COMMENTS\" ? /*#__PURE__*/React.createElement(CustomTabs, {\n        activeKey: this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\",\n        tabDetail: this.commentTabDetail(),\n        destroyInactiveTabPane: true,\n        onTabChange: this.onTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1543,\n          columnNumber: 21\n        }\n      }) : screenName === \"IDS_SAMPLEDETAILS\" ? this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length > 0 ? this.props.Login.masterData.JASelectedSample[this.props.Login.masterData.JASelectedSample.length - 1] : {},\n        SingleItem: this.state.SingleItem,\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1546,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(SampleInfoGrid, {\n        selectedSample: this.props.Login.masterData.JASelectedSample,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleGridDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_SAMPLEGRID\",\n        expandField: \"expanded\",\n        jsonField: \"jsondata\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1553,\n          columnNumber: 29\n        }\n      }) : screenName === \"IDS_ALLOTTEDTEST\" ? this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length > 0 ? this.props.Login.masterData.TestView[this.props.Login.masterData.TestView.length - 1] : {},\n        SingleItem: this.state.testItem,\n        screenName: \"IDS_TESTVIEW\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1568,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(SampleInfoGrid, {\n        primaryKeyField: \"ntransactiontestcode\",\n        selectedSample: this.props.Login.masterData.TestView,\n        dataState: this.state.testGridDataState,\n        dataStateChange: this.testGridDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        detailedFieldList: this.gridfillingColumn(this.state.DynamicTestGridMoreField) || [],\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_TESTGRID\",\n        expandField: \"expanded\",\n        jsonField: \"jsondata\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1575,\n          columnNumber: 33\n        }\n      }) // : screenName === \"IDS_ANALYSTCALENDAR\" ?\n      //     <Scheduler data={this.state.data}  defaultDate={new Date()}>\n      //         <DayView numberOfDays={3} />\n      //         <WeekView />\n      //         <MonthView />   \n      //     </Scheduler>        \n      : \"\";\n    };\n\n    this.attachmentTabDetail = () => {\n      const attachmentTabMap = new Map();\n      let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let {\n        testskip,\n        testtake,\n        subsampleskip,\n        subsampletake\n      } = this.state;\n      let testList = this.props.Login.masterData.JA_TEST || [];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      let ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\n      attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        tabSequence: SideBarSeqno.TEST,\n        screenName: \"IDS_TESTATTACHMENTS\",\n        selectedMaster: \"JASelectedTest\",\n        onSaveClick: this.onAttachmentSaveClick,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDATTACHEMENT\",\n        attachments: this.props.Login.masterData.RegistrationTestAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        fetchRecord: this.props.getAttachmentCombo,\n        addName: \"AddTestAttachment\",\n        editName: \"EditTestAttachment\",\n        deleteName: \"DeleteTestAttachment\",\n        viewName: \"ViewTestAttachment\",\n        methodUrl: \"TestAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        subFields: [{\n          [designProperties.VALUE]: \"stestsynonym\"\n        }, {\n          [designProperties.VALUE]: \"dcreateddate\"\n        }],\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\",\n          masterList: selectedTestList\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1613,\n          columnNumber: 53\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        screenName: \"IDS_SUBSAMPLEATTACHMENTS\",\n        onSaveClick: this.onAttachmentSaveClick,\n        selectedMaster: \"JASelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationSampleAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        masterList: this.props.Login.masterData.JASelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        viewFile: this.props.viewAttachment,\n        addName: \"AddSubSampleAttachment\",\n        editName: \"EditSubSampleAttachment\",\n        deleteName: \"DeleteSubSampleAttachment\",\n        viewName: \"ViewSubSampleAttachment\",\n        methodUrl: \"SubSampleAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        skip: this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0,\n        take: this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights\n        },\n        editParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.JA_SUBSAMPLE || []\n        },\n        selectedListName: \"IDS_SUBSAMPLE\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1658,\n          columnNumber: 62\n        }\n      }));\n      attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SAMPLEATTACHMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        selectedMaster: \"JASelectedSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        onSaveClick: this.onAttachmentSaveClick,\n        masterList: this.props.Login.masterData.JASelectedSample,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDATTACHEMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        addName: \"AddSampleAttachment\",\n        editName: \"EditSampleAttachment\",\n        deleteName: \"DeleteSampleAttachment\",\n        viewName: \"ViewSampleAttachment\",\n        methodUrl: \"SampleAttachment\",\n        nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: this.props.Login.screenName\n        },\n        editParam: {\n          methodUrl: \"SampleAttachment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.JASelectedSample\n        },\n        selectedListName: \"IDS_SAMPLE\",\n        displayName: \"sarno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1702,\n          columnNumber: 13\n        }\n      }));\n      return attachmentTabMap;\n    };\n\n    this.commentTabDetail = () => {\n      const commentTabMap = new Map();\n      let {\n        testskip,\n        testtake,\n        subsampleskip,\n        subsampletake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n      const ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\n      subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\n      commentTabMap.set(\"IDS_TESTCOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_TESTCOMMENTS\",\n        tabSequence: SideBarSeqno.TEST,\n        selectedMaster: selectedTestList,\n        onSaveClick: this.onCommentsSaveClick,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationTestComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDCOMMENTS\",\n        addName: \"AddTestComment\",\n        editName: \"EditTestComment\",\n        deleteName: \"DeleteTestComment\",\n        methodUrl: \"TestComment\",\n        isTestComment: false,\n        primaryKeyField: \"ntestcommentcode\",\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testDataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\",\n          operation: \"update\",\n          masterList: selectedTestList,\n          ncontrolCode: editTestCommentsId\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1763,\n          columnNumber: 47\n        }\n      }));\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SUBSAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SUBSAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"JASelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationSampleComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        addName: \"AddSubSampleComment\",\n        editName: \"EditSubSampleComment\",\n        deleteName: \"DeleteSubSampleComment\",\n        methodUrl: \"SubSampleComment\",\n        masterData: this.props.Login.masterData,\n        isTestComment: false,\n        masterList: this.props.Login.masterData.JASelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nsamplecommentcode\",\n        dataState: this.state.subsampleCommentDataState,\n        dataStateChange: this.subsampleDataStateChange,\n        deleteParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.JA_SUBSAMPLE || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SUBSAMPLE\",\n        displayName: \"ssamplearno\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1810,\n          columnNumber: 56\n        }\n      }));\n      commentTabMap.set(\"IDS_SAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SAMPLECOMMENTS\",\n        tabSequence: SideBarSeqno.SAMPLE,\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"JASelectedSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterData: this.props.Login.masterData,\n        addName: \"AddSampleComment\",\n        editName: \"EditSampleComment\",\n        deleteName: \"DeleteSampleComment\",\n        methodUrl: \"SampleComment\",\n        isTestComment: false,\n        masterList: this.props.Login.masterData.JASelectedSample,\n        masterAlertStatus: \"IDS_SELECTSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nregcommentcode\",\n        dataState: this.state.sampleCommentDataState,\n        dataStateChange: this.sampleDataStateChange,\n        deleteParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SampleComment\",\n          npreregno,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.JASelectedSample || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SAMPLE\",\n        displayName: \"sarno\",\n        selectedId: this.props.Login.selectedId || null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1856,\n          columnNumber: 49\n        }\n      }));\n      return commentTabMap;\n    };\n\n    this.testDataStateChange = event => {\n      switch (this.props.Login.activeTestTab) {\n        case \"IDS_TESTCOMMENTS\":\n          this.setState({\n            testCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTATTACHMENTS\":\n          this.setState({\n            testAttachmentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTVIEW\":\n          this.setState({\n            testViewDataState: event.testViewDataState\n          });\n          break;\n\n        default:\n          this.setState({\n            testAttachmentDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.subsampleDataStateChange = event => {\n      switch (this.props.Login.activeSubSampleTab) {\n        case \"IDS_SUBSAMPLECOMMENTS\":\n          this.setState({\n            subsampleCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SUBSAMPLEATTACHMENTS\":\n          this.setState({\n            subsampleAttachmentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            subsampleAttachmentDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleDataStateChange = event => {\n      switch (this.props.Login.activeSampleTab) {\n        case \"IDS_SAMPLECOMMENTS\":\n          this.setState({\n            sampleCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLEATTACHMENTS\":\n          this.setState({\n            sampleAttachmentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            sampleAttachmentDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.testGridDataStateChange = event => {\n      this.setState({\n        testGridDataState: event.dataState\n      });\n    };\n\n    this.onInputSwitchOnChange = event => {\n      if (event.target.name == \"PopupNav\") {\n        this.setState({\n          enablePropertyPopup: !this.state.enablePropertyPopup\n        });\n      } else {\n        this.setState({\n          enableAutoClick: !this.state.enableAutoClick\n        });\n      }\n    };\n\n    this.onSampleTabChange = tabProps => {\n      const activeSampleTab = tabProps.screenName;\n\n      if (activeSampleTab !== this.props.Login.activeSampleTab) {\n        let inputData = {\n          masterData: this.props.Login.masterData,\n          JASelectedSample: this.props.Login.masterData.JASelectedSample,\n          npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          screenName: activeSampleTab,\n          activeSampleTab\n        };\n        this.props.getSampleChildTabDetail(inputData);\n      }\n    };\n\n    this.onSubSampleTabChange = tabProps => {\n      const activeSubSampleTab = tabProps.screenName;\n\n      if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\n        let inputData = {\n          masterData: this.props.Login.masterData,\n          JASelectedSubSample: this.props.Login.masterData.JASelectedSubSample,\n          ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          screenName: activeSubSampleTab,\n          activeSubSampleTab,\n          subsampleAttachmentDataState: this.state.subsampleAttachmentDataState,\n          subSampleCommentDataState: this.state.subsampleCommentDataState\n        };\n        this.props.getSubSampleChildTabDetail(inputData);\n      }\n    };\n\n    this.onTestTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n\n      if (activeTestTab !== this.props.Login.activeTestTab) {\n        if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\n            npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\n            JASelectedTest: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest : \"\",\n            userinfo: this.props.Login.userInfo,\n            activeTestTab: activeTestTab,\n            screenName: activeTestTab,\n            testCommentDataState: this.state.testCommentDataState\n          };\n          this.props.getTestChildTabDetailJobAllocation(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      }\n    };\n\n    this.onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let {\n        testskip,\n        testtake,\n        sampleskip,\n        sampletake\n      } = this.state;\n      let testList = [...this.props.Login.masterData.JA_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n      let sampleList = [...this.props.Login.masterData.JA_SAMPLE];\n      sampleList = sampleList.slice(sampleskip, sampleskip + sampletake);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n\n      if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\n      } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveTestAttachment(saveParam, selectedTestList);\n      } else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.JASelectedSubSample);\n      }\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: this.props.Login.operation,\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\n      }\n    };\n\n    this.onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = [...this.props.Login.masterData.JA_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n      if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          isTestComment: this.props.isTestComment,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveTestComments(saveParam, selectedTestList);\n      }\n\n      if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\n        let sampleList = [];\n\n        if (this.props.Login.masterData.searchedSubSample !== undefined) {\n          sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake), \"npreregno\");\n        } else {\n          sampleList = this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake);\n        }\n\n        let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          isTestComment: this.props.isTestComment,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSubSampleComments(saveParam, acceptList);\n      }\n\n      if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\n        let sampleList = [];\n\n        if (this.props.Login.masterData.searchedSample !== undefined) {\n          sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake), \"npreregno\");\n        } else {\n          sampleList = this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake);\n        }\n\n        let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          isTestComment: this.props.isTestComment,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSampleComments(saveParam, acceptList);\n      }\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: this.props.Login.operation,\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\n      }\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultSampleTypeValue: comboData.item\n            };\n            this.props.getRegTypeJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.defaultRegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              defaultRegTypeValue: comboData.item\n            };\n            this.props.getRegSubTypeJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nneedtemplatebasedflow: comboData.item.nneedtemplatebasedflow,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                defaultRegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getAppConfigVersionJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'napprovalconfigversioncode') {\n          if (comboData.value !== this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) {\n            inputParamData = {\n              nflag: 5,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalconfigversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                defaultApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus.toString()\n            };\n            this.props.getDesignTemplateJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.defaultUserSectionValue.nsectioncode) {\n            inputParamData = {\n              nflag: 6,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode,\n              nsectioncode: comboData.value === 0 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value.toString(),\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                defaultUserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus.toString()\n            };\n            this.props.getSectionJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'ntransactionstatus') {\n          if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\n            inputParamData = {\n              nflag: 7,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                defaultFilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              ntransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value.toString()\n            };\n            this.props.getFilterStatusJobAllocation(inputParamData);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.defaultTestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              defaultTestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          if (comboData.value !== this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) {\n            let masterData = { ...this.props.Login.masterData,\n              defaultDesignTemplateMappingValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.defaultUserSectionValue.nsectioncode\n            };\n            this.props.getTestStatusJobAllocation(inputParamData);\n          }\n        }\n      }\n    };\n\n    this.handleFilterDateChange = (dateName, dateValue) => {\n      let fromdate = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let todate = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, todate, this.props.Login.userInfo);\n        fromdate = obj.fromDate;\n        todate = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(fromdate, dateValue, this.props.Login.userInfo);\n        fromdate = obj.fromDate;\n        todate = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.defaultRegTypeValue && this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\n          nneedtemplatebasedflow: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedtemplatebasedflow,\n          fromdate: String(fromdate),\n          todate: String(todate),\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getAppConfigVersionJobAllocation(inputParam);\n    };\n\n    this.onReload = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\n      let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\n      let defaultSampleTypeValue = this.props.Login.masterData.realSampleTypeValue;\n      let defaultRegTypeValue = this.props.Login.masterData.realRegTypeValue;\n      let defaultRegSubTypeValue = this.props.Login.masterData.realRegSubTypeValue;\n      let defaultFilterStatusValue = this.props.Login.masterData.realFilterStatusValue;\n      let defaultApprovalVersionValue = this.props.Login.masterData.realApprovalVersionValue;\n      let defaultUserSectionValue = this.props.Login.masterData.realUserSectionValue;\n      let defaultTestValue = this.props.Login.masterData.realTestValue;\n      let defaultDesignTemplateMappingValue = this.props.Login.masterData.realDesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        defaultSampleTypeValue,\n        defaultRegTypeValue,\n        defaultRegSubTypeValue,\n        defaultFilterStatusValue,\n        defaultApprovalVersionValue,\n        defaultUserSectionValue,\n        defaultTestValue,\n        defaultDesignTemplateMappingValue\n      };\n      let inputData = {\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        checkBoxOperation: 3 //ntype: 2\n\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && defaultFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== undefined) {\n        inputData['fromdate'] = obj.fromDate;\n        inputData['todate'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          sampleskip: this.state.sampleskip,\n          sampletake: this.state.sampletake,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          testAttachmentDataState: this.state.testAttachmentDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          testViewDataState: this.state.testViewDataState\n        };\n        this.props.getJobAllcationFilterSubmit(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\n      let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\n      let realSampleTypeValue = this.props.Login.masterData.defaultSampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.defaultRegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.defaultRegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.defaultFilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.defaultApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.defaultUserSectionValue;\n      let realTestValue = this.props.Login.masterData.defaultTestValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.defaultDesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue\n      };\n      let inputData = {\n        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue && this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.defaultRegTypeValue && this.props.Login.masterData.defaultRegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue && this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.defaultApprovalVersionValue ? this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.defaultUserSectionValue ? this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.defaultUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.defaultTestValue ? this.props.Login.masterData.defaultTestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n        activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        checkBoxOperation: 3 //ntype: 2\n\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== undefined) {\n        inputData['fromdate'] = obj.fromDate;\n        inputData['todate'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          testAttachmentDataState: this.state.testAttachmentDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          testViewDataState: this.state.testViewDataState\n        };\n        this.props.getJobAllcationFilterSubmit(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.CancelStatus = cancelId => {\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n\n      if (JASelectedTest && JASelectedTest.length > 0) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let inputParam = {};\n        let arr = [];\n        JASelectedTest && JASelectedTest.map(item => {\n          if (!arr.includes(item.nsectioncode)) {\n            arr.push(item.nsectioncode);\n          }\n        });\n        let Map = {\n          fromdate: obj.fromDate,\n          todate: obj.toDate,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          // ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),\n          ntransactionstatus: \"0\",\n          nsectioncode: arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\",\n          ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n          npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n          ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\n          ntransactiontestcode: JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\",\n          ncontrolcode: cancelId,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n          checkBoxOperation: 3,\n          ntype: 1,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.Login.screenName,\n          activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n          activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n          activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\"\n        };\n        inputParam = {\n          inputData: Map,\n          postParamList: this.postParamList,\n          classUrl: \"joballocation\",\n          operation: 'cancel',\n          methodUrl: \"Test\",\n          action: \"canceltest\"\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, cancelId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true,\n              parentPopUpSize: 'lg',\n              screenName: this.props.Login.screenName,\n              operation: 'cancel'\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.CancelTestWise(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.onJobAllocationTestWise = action => {\n      if (action.scontrolname === \"Analyst Calendar\") {\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n        let inputParam = {};\n        let Map = {\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode,\n          ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n          transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n          ncontrolcode: action.ncontrolcode,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.Login.screenName,\n          operation: \"ViewAnalystCalendar\",\n          openModal: true\n        };\n        inputParam = {\n          inputData: Map\n        };\n        this.props.ViewAnalystCalendar(inputParam);\n      } else if (action.scontrolname === \"Instrument Calendar\") {}\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputParam = {};\n\n      if (this.props.Login.operation === \"AllotJob\") {\n        //inputParam = this.onSaveAllotJobInSchedule(saveType, formRef);\n        inputParam = this.onSaveAllotJob(saveType, formRef);\n      } else if (this.props.Login.operation === \"AllotAnotherUser\") {\n        inputParam = this.onSaveAllotAnotherUser(saveType, formRef);\n      } else if (this.props.Login.operation === \"Reschedule\") {\n        inputParam = this.onSaveReschedule(saveType, formRef);\n      }\n    };\n\n    this.onSaveAllotJobInSchedule = (saveType, formRef) => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let obj = {};\n      let allotjob = this.state.selectedRecord;\n      const data1 = this.state.data;\n      const data = this.state.data.filter(x => x.insertRecord); // obj[\"allotjobdata\"] = {\n      //     \"Technique\": {\n      //         label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n      //         value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\n      //     },\n      //     \"Users\": {\n      //         label: allotjob.nusercode.label,\n      //         value: allotjob.nusercode.value\n      //     },\n      //     \"UserStartDate\": convertDateTimetoStringDBFormat(data[0].start, this.props.Login.userInfo),\n      //     \"UserEndDate\": convertDateTimetoStringDBFormat(data[0].end, this.props.Login.userInfo),\n      //     \"InstrumentCategory\": {\n      //         label: \"\",\n      //         value: data[0].InstrumentCategory || -1\n      //     },\n      //     \"Instrument\": {\n      //         label: \"\",\n      //         value: data[0].Instrument || -1\n      //     },\n      //     \"InstrumentStartDate\": data[0].InstrumentCategory && data[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(data[0].start, this.props.Login.userInfo) : \"\",\n      //     \"InstrumentEndDate\": data[0].InstrumentCategory && data[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(data[0].end, this.props.Login.userInfo) : \"\",\n      //     \"Comments\": data[0].description || \"\"\n      // }\n      // obj[\"allotjobuidata\"] = {\n      //     \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n      //     \"Users\": allotjob.nusercode.label,\n      //     \"UserStartDate\": obj[\"allotjobdata\"].UserStartDate,\n      //     \"UserEndDate\": obj[\"allotjobdata\"].UserEndDate,\n      //     // \"UserHoldDuration\": allotjob.suserholdduration,\n      //     //\"UserPeriod\": allotjob.nuserperiodcode.label,\n      //     // \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\n      //     //  \"Instrument\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\n      //     \"InstrumentStartDate\": obj[\"allotjobdata\"].InstrumentStartDate || \"\",\n      //     \"InstrumentEndDate\": obj[\"allotjobdata\"].InstrumentEndDate || \"\",\n      //     //  \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n      //     // \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n      //     \"Comments\": obj[\"allotjobdata\"].description || \"\"\n      // }\n\n      const josnArray = [];\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n      let arr = [];\n      this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(item => {\n        if (!arr.includes(item.nsectioncode)) {\n          arr.push(item.nsectioncode);\n        }\n      });\n      JASelectedTest && JASelectedTest.map(item => {\n        const sleectedData = data.filter(x => x.ntransactiontestcode === item.ntransactiontestcode);\n\n        if (sleectedData.length > 0) {\n          const val = {\n            \"Technique\": {\n              label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n              value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\n            },\n            \"Users\": {\n              label: allotjob.nusercode.label,\n              value: allotjob.nusercode.value\n            },\n            \"UserStartDate\": convertDateTimetoStringDBFormat(sleectedData[0].start, this.props.Login.userInfo),\n            \"UserEndDate\": convertDateTimetoStringDBFormat(sleectedData[0].end, this.props.Login.userInfo),\n            \"InstrumentCategory\": {\n              label: \"\",\n              value: sleectedData[0].InstrumentCategory || -1\n            },\n            \"Instrument\": {\n              label: \"\",\n              value: sleectedData[0].Instrument || -1\n            },\n            \"InstrumentStartDate\": sleectedData[0].InstrumentCategory && sleectedData[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(sleectedData[0].start, this.props.Login.userInfo) : \"\",\n            \"InstrumentEndDate\": sleectedData[0].InstrumentCategory && sleectedData[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(sleectedData[0].end, this.props.Login.userInfo) : \"\",\n            \"Comments\": sleectedData[0].description || \"\"\n          };\n          const valJsonUi = {\n            \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n            \"Users\": allotjob.nusercode.label,\n            \"UserStartDate\": val.UserStartDate,\n            \"UserEndDate\": val.UserEndDate,\n            \"InstrumentStartDate\": val.InstrumentStartDate || \"\",\n            \"InstrumentEndDate\": val.InstrumentEndDate || \"\",\n            \"Comments\": val.description || \"\"\n          };\n          const objJobAllocation = {};\n          objJobAllocation['jsondata'] = val;\n          objJobAllocation['jsonuidata'] = valJsonUi;\n          objJobAllocation[\"ninstrumentcategorycode\"] = val.InstrumentCategory.value;\n          objJobAllocation[\"ninstrumentcode\"] = val.Instrument.value;\n          objJobAllocation[\"nusercode\"] = allotjob.nusercode.value;\n          objJobAllocation[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\n          objJobAllocation[\"ntransactionsamplecode\"] = item.ntransactionsamplecode;\n          objJobAllocation[\"ntransactiontestcode\"] = item.ntransactiontestcode;\n          objJobAllocation[\"npreregno\"] = item.npreregno;\n          josnArray.push(objJobAllocation);\n        }\n      }); // JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"allotjobdata\"]);\n      //JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"allotjobuidata\"]);\n\n      JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n      JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\n      JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\n      JobAllocationData[\"ssectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\n      JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\n      JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n      JobAllocationData[\"JobAllocation\"] = josnArray;\n      JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n      JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n      JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n      JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n      JobAllocationData[\"activeSampleTab\"] = \"IDS_SAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeSubSampleTab\"] = \"IDS_SUBSAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeTestTab\"] = \"IDS_TESTATTACHMENTS\";\n      inputParam = {\n        classUrl: \"joballocation\",\n        methodUrl: \"Create\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: JobAllocationData,\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParamList: this.postParamList,\n        action: \"allotjob\"\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"Job Allocation\"\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n        this.setState({\n          data: []\n        });\n      } else {\n        //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        this.props.AllotJobAction(inputParam);\n        this.setState({\n          data: []\n        });\n      }\n    };\n\n    this.onSaveAllotJob = (saveType, formRef) => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let obj = {};\n      let allotjob = this.state.selectedRecord;\n      obj[\"allotjobdata\"] = {\n        \"Technique\": {\n          label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n          value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\n        },\n        \"Users\": {\n          label: allotjob.nusercode.label,\n          value: allotjob.nusercode.value\n        },\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": {\n          label: allotjob.nuserperiodcode.label,\n          value: allotjob.nuserperiodcode.value\n        },\n        \"InstrumentCategory\": {\n          label: allotjob.ninstrumentcatcode.label,\n          value: allotjob.ninstrumentcatcode.value\n        },\n        \"Instrument\": {\n          label: allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\n          value: allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\n        },\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": {\n          label: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n          value: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\n        },\n        \"Comments\": allotjob.scomments\n      };\n      obj[\"allotjobuidata\"] = {\n        \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n        \"Users\": allotjob.nusercode.label,\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": allotjob.nuserperiodcode.label,\n        \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\n        \"Instrument\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n        \"Comments\": allotjob.scomments\n      };\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n      let arr = [];\n      JASelectedTest && JASelectedTest.map(item => {\n        if (!arr.includes(item.nsectioncode)) {\n          arr.push(item.nsectioncode);\n        }\n      });\n      JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"allotjobdata\"]);\n      JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"allotjobuidata\"]);\n      JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n      JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\n      JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\n      JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\n      JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n      JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\n      JobAllocationData[\"ninstrumentcatcode\"] = allotjob.ninstrumentcatcode.value;\n      JobAllocationData[\"ninstrumentcode\"] = allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\n      JobAllocationData[\"ninstrumentperiodcode\"] = allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1;\n      JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      JobAllocationData[\"ntype\"] = 1;\n      JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n      JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n      JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n      JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n      JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\n      inputParam = {\n        classUrl: \"joballocation\",\n        methodUrl: \"Create\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: JobAllocationData,\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParamList: this.postParamList,\n        action: \"allotjob\"\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"Job Allocation\"\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.AllotJobAction(inputParam);\n      }\n    };\n\n    this.onSaveAllotAnotherUser = (saveType, formRef) => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let obj = {};\n      let allotjob = this.state.selectedRecord;\n      obj[\"anotheruserdata\"] = {\n        \"Users\": {\n          label: allotjob.nusercode.label,\n          value: allotjob.nusercode.value\n        },\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": {\n          label: allotjob.nuserperiodcode.label,\n          value: allotjob.nuserperiodcode.value\n        },\n        \"Comments\": allotjob.scomments\n      };\n      obj[\"anotheruseruidata\"] = {\n        \"Users\": allotjob.nusercode.label,\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": allotjob.nuserperiodcode.label,\n        \"Comments\": allotjob.scomments\n      };\n      let arr = [];\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n      JASelectedTest && JASelectedTest.map(item => {\n        if (!arr.includes(item.nsectioncode)) {\n          arr.push(item.nsectioncode);\n        }\n      });\n      JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"anotheruserdata\"]);\n      JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"anotheruseruidata\"]);\n      JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n      JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\"; //JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\n\n      JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\n      JobAllocationData[\"ntechniquecode\"] = -1;\n      JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n      JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\n      JobAllocationData[\"ninstrumentcatcode\"] = -1;\n      JobAllocationData[\"ninstrumentcode\"] = -1;\n      JobAllocationData[\"ninstrumentperiodcode\"] = -1;\n      JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      JobAllocationData[\"ntype\"] = 1;\n      JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n      JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n      JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n      JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n      JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\n      inputParam = {\n        classUrl: \"joballocation\",\n        methodUrl: \"Create\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: JobAllocationData,\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParamList: this.postParamList,\n        action: \"allotanotheruser\"\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"Job Allocation\"\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.AllotAnotherUserAction(inputParam);\n      }\n    };\n\n    this.onSaveReschedule = (saveType, formRef) => {\n      let inputParam = {};\n      let JobAllocationData = {};\n      let obj = {};\n      let allotjob = this.state.selectedRecord;\n      obj[\"rescheduledata\"] = {\n        \"Technique\": {\n          label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n          value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\n        },\n        \"Users\": {\n          label: allotjob.nusercode.label,\n          value: allotjob.nusercode.value\n        },\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": {\n          label: allotjob.nuserperiodcode.label,\n          value: allotjob.nuserperiodcode.value\n        },\n        \"InstrumentCategory\": {\n          label: allotjob.ninstrumentcatcode.label,\n          value: allotjob.ninstrumentcatcode.value\n        },\n        \"Instrument\": {\n          label: allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\n          value: allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\n        },\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": {\n          label: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n          value: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\n        },\n        \"Comments\": allotjob.scomments\n      };\n      obj[\"reschdeuleuidata\"] = {\n        \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\n        \"Users\": allotjob.nusercode.label,\n        \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\n        \"UserEndDate\": \"\",\n        \"UserHoldDuration\": allotjob.suserholdduration,\n        \"UserPeriod\": allotjob.nuserperiodcode.label,\n        \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\n        \"Instrument\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || \"NA\",\n        \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\n        \"InstrumentEndDate\": \"\",\n        \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\n        \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\n        \"Comments\": allotjob.scomments\n      };\n      let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n      let arr = [];\n      JASelectedTest && JASelectedTest.map(item => {\n        if (!arr.includes(item.nsectioncode)) {\n          arr.push(item.nsectioncode);\n        }\n      });\n      JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"rescheduledata\"]);\n      JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"reschdeuleuidata\"]);\n      JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\n      JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\n      JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\"; //JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\n\n      JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\n      JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\n      JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\n      JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\n      JobAllocationData[\"ninstrumentcatcode\"] = allotjob.ninstrumentcatcode.value;\n      JobAllocationData[\"ninstrumentcode\"] = allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\n      JobAllocationData[\"ninstrumentperiodcode\"] = allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1;\n      JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      JobAllocationData[\"ntype\"] = 1;\n      JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\n      JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\n      JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\n      JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\n      JobAllocationData[\"masterData\"] = this.props.Login.masterData;\n      JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\n      JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\n      inputParam = {\n        classUrl: \"joballocation\",\n        methodUrl: \"Create\",\n        displayName: this.props.Login.inputParam.displayName,\n        inputData: JobAllocationData,\n        selectedId: this.state.selectedRecord[\"njoballocationcode\"],\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        searchRef: this.searchRef,\n        postParamList: this.postParamList,\n        action: \"reschedule\"\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.intl.formatMessage({\n              id: \"Job Allocation\"\n            }),\n            operation: this.props.Login.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.RescheduleJobAction(inputParam);\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let isOpen = this.props.Login.isOpen;\n      let selectedRecord = this.props.Login.selectedRecord; // if (this.state.openAnalystCalendar) {\n      //     this.setState({ openAnalystCalendar: false })\n      // }\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"AllotAnotherUser\" || this.props.Login.operation === \"Reschedule\") {\n          loadEsign = false;\n          openModal = true;\n          isOpen = false; //selectedRecord[\"agree\"] = 4;\n\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        } else {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          isOpen,\n          InstrumentCategory: [],\n          Instrument: [],\n          masterData: { ...this.props.Login.masterData,\n            analystCalenderData: []\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignforJobAllocation(inputParam, \"openModal\");\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (fieldName === \"ntechniquecode\") {\n        selectedRecord[\"ntechniquecode\"] = comboData;\n\n        if (comboData != null) {\n          this.props.getUsers(this.state.selectedRecord.ntechniquecode.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName, this.props.Login.masterData);\n        } else {\n          this.setState({\n            selectedRecord\n          });\n        }\n      } else if (fieldName === \"nusercode\") {\n        selectedRecord[\"nusercode\"] = comboData;\n        this.props.getAnalystCalenderBasedOnUser(comboData.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord); //this.setState({ selectedRecord });     \n      } else if (fieldName === \"ninstrumentcatcode\") {\n        selectedRecord[\"ninstrumentcatcode\"] = comboData;\n        this.props.getInstrument(this.state.selectedRecord.ninstrumentcatcode.value, selectedRecord.ninstrumentcatcode.item.ncalibrationreq, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\n      } else if (fieldName === \"ninstrumentcode\") {\n        selectedRecord[\"ninstrumentcode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"nuserperiodcode\") {\n        selectedRecord[\"nuserperiodcode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"ninstrumentperiodcode\") {\n        selectedRecord[\"ninstrumentperiodcode\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.name === \"suserholdduration\" || event.target.name === \"sinstrumentholdduration\") {\n        if (event.target.value !== \"\") {\n          event.target.value = validatePhoneNumber(event.target.value);\n          selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.getCommentsCombo = event => {\n      if (this.props.Login.JASelectedTest && this.props.Login.JASelectedTest.length > 0) {\n        this.props.getCommentsCombo(...event);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTESTTOADDCOMMENTS\"\n        }));\n      }\n    };\n\n    this.handleDataChange = ({\n      created,\n      updated,\n      deleteted\n    }) => {\n      let scheduleData = {};\n      let postParam = undefined;\n      let formRef = {};\n\n      if (created.length > 0) {\n        const aa = created.concat(created.map(item => Object.assign({}, item, {})));\n        scheduleData[\"allotjob\"] = {\n          \"jsondata\": aa[0]\n        };\n        formRef = {\n          \"current\": \"form\"\n        };\n        let saveType = 1;\n        const inputParam = {\n          classUrl: \"joballocation\",\n          methodUrl: \"AssignJob\",\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          operation: \"create\",\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          isClearSearch: this.props.Login.isClearSearch\n        };\n        const masterData = this.props.Login.masterData;\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      } else if (updated.length > 0) {} else if (deleteted.length > 0) {}\n    };\n\n    this.searchSampleRef = React.createRef();\n    this.searchSubSampleRef = React.createRef();\n    this.searchTestRef = React.createRef();\n    this.formRef = React.createRef();\n    this.state = {\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      sampleAttachmentDataState: {},\n      sampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      subsampleAttachmentDataState: {},\n      subsampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testAttachmentDataState: {},\n      testCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testViewDataState: {},\n      dataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      oldComboData: {},\n      selectedRecord: {},\n      filterSampleParam: {},\n      filterSubSampleParam: {},\n      filterTestParam: {},\n      operation: \"\",\n      showTest: true,\n      showSample: false,\n      showSubSample: false,\n      sampleListColumns: [],\n      subSampleListColumns: [],\n      testListColumns: [],\n      TableExpandableItem: [],\n      SingleItem: [],\n      testItem: [],\n      SampleGridItem: [],\n      SampleGridExpandableItem: [],\n      sampleListMainField: [],\n      subSampleListMainField: [],\n      testListMainField: [],\n      testMoreField: [],\n      firstPane: 0,\n      paneHeight: 0,\n      secondPaneHeight: 0,\n      tabPane: 0,\n      SampletypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      ConfigVersionList: [],\n      UserSectionList: [],\n      TestList: [],\n      DynamicDesignMappingList: [],\n      sampleskip: 0,\n      sampletake: this.props.Login.settings && this.props.Login.settings[3],\n      subsampleskip: 0,\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12],\n      testskip: 0,\n      testtake: this.props.Login.settings && this.props.Login.settings[12],\n      splitChangeWidthPercentage: 28.6,\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      DynamicSampleColumns: [],\n      DynamicSubSampleColumns: [],\n      DynamicTestColumns: [],\n      enableAutoClick: false,\n      enablePropertyPopup: false,\n      propertyPopupWidth: \"60\",\n      data: [],\n      subSampleGetParam: {},\n      openAnalystCalendar: false,\n      data: []\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height - 50\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Rendering the component only if \n    // passed props value is changed\n    if (nextState.data.length > 0 && nextState.data === this.state.data) {\n      return false;\n    } else {\n      return true;\n    }\n  } // openAnalystCalendar = () => {\n  //     this.setState({ openAnalystCalendar: true })\n  // }\n\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let JA_SampleList = this.props.Login.masterData.JA_SAMPLE ? sortData(this.props.Login.masterData.JA_SAMPLE, 'descending', 'nregistrationsectioncode') : [];\n    let JA_SubSampleList = this.props.Login.masterData.JA_SUBSAMPLE ? this.props.Login.masterData.JA_SUBSAMPLE : [];\n    let JA_TestList = this.props.Login.masterData.JA_TEST ? this.props.Login.masterData.JA_TEST : [];\n    const receiveId = this.state.controlMap.has(\"ReceiveinLab\") ? this.state.controlMap.get(\"ReceiveinLab\").ncontrolcode : -1;\n    const allotId = this.state.controlMap.has(\"Allotted\") ? this.state.controlMap.get(\"Allotted\").ncontrolcode : -1;\n    const anotherUserId = this.state.controlMap.has(\"AllotAnotherUser\") ? this.state.controlMap.get(\"AllotAnotherUser\").ncontrolcode : -1;\n    const rescheduleId = this.state.controlMap.has(\"Reschedule\") ? this.state.controlMap.get(\"Reschedule\").ncontrolcode : -1;\n    const cancelId = this.state.controlMap.has(\"Cancel\") ? this.state.controlMap.get(\"Cancel\").ncontrolcode : -1;\n    const allotCalenderId = this.state.controlMap.has(\"AllotCalender\") ? this.state.controlMap.get(\"AllotCalender\").ncontrolcode : -1;\n    let subSampleGetJAParam = {\n      masterData: this.props.Login.masterData,\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n      ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n      ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n      fromdate: obj.fromDate,\n      todate: obj.toDate,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n      activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\n      activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      searchSubSampleRef: this.searchSubSampleRef,\n      searchTestRef: this.searchTestRef,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n      checkBoxOperation: 3,\n      activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n    };\n    let testGetJAParam = {\n      masterData: this.props.Login.masterData,\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n      ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n      ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n      npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\n      nsectioncode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(sample => sample.nsectioncode).join(\",\"),\n      activeTestTab: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\n      activeSampleTab: this.props.Login.activeTestTab || 'IDS_SAMPLEINFO',\n      activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      testCommentDataState: this.state.testCommentDataState,\n      // activeTabIndex: this.state.enableAutoClick ? 4 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n      activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n    };\n    let testChildGetJAParam = {\n      masterData: this.props.Login.masterData,\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n      ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n      ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n      npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\n      ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n      activeTestTab: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\n      fromdate: obj.fromDate,\n      todate: obj.toDate,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n      // activeTabIndex: this.state.enableAutoClick ? 4 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n      activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0\n    };\n    this.postParamList = [{\n      filteredListName: \"searchedSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSampleRef,\n      primaryKeyField: \"nregistrationsectioncode\",\n      fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\n      fecthInputObject: { ...this.state.subSampleGetParam,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        searchSubSampleRef: this.searchSubSampleRef,\n        searchTestRef: this.searchTestRef,\n        testCommentDataState: this.state.testCommentDataState,\n        testAttachmentDataState: this.state.testAttachmentDataState,\n        sampleGridDataState: this.state.sampleGridDataState,\n        testGridDataState: this.state.testGridDataState\n      },\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTest\"\n      }],\n      selectedObject: \"JASelectedSample\",\n      inputListName: \"JA_SAMPLE\",\n      updatedListname: \"JASelectedSample\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\", \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\", \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\n    }, {\n      filteredListName: \"searchedSubSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSubSampleRef,\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"joballocation/getJobAllocationTestDetails\",\n      fecthInputObject: { ...this.state.testGetJAParam,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        searchSubSampleRef: this.searchSubSampleRef,\n        searchTestRef: this.searchTestRef,\n        testCommentDataState: this.state.testCommentDataState,\n        testAttachmentDataState: this.state.testAttachmentDataState,\n        sampleGridDataState: this.state.sampleGridDataState,\n        testGridDataState: this.state.testGridDataState\n      },\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTest\"\n      }],\n      selectedObject: \"JASelectedSubSample\",\n      inputListName: \"JA_SUBSAMPLE\",\n      updatedListname: \"JASelectedSubSample\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\", \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\", \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\n    }, {\n      filteredListName: \"searchedTest\",\n      updatedListname: \"JASelectedTest\",\n      clearFilter: \"no\",\n      searchRef: this.searchTestRef,\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      fecthInputObject: { ...this.state.testGetJAParam,\n        searchTestRef: this.searchTestRef,\n        testskip: this.state.testskip,\n        subsampleskip: this.state.subsampleskip,\n        testGridDataState: this.state.testGridDataState\n      },\n      selectedObject: \"JASelectedTest\",\n      inputListName: \"JA_TEST\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\", \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\", \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\n    }];\n\n    if (this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"Reschedule\") {\n      if (this.state.selectedRecord.ninstrumentcatcode && this.state.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA) {\n        this.validationColumnList = [{\n          \"idsName\": \"IDS_USERS\",\n          \"dataField\": \"nusercode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_STARTDATETIME\",\n          \"dataField\": \"duserblockfromdatetime\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_HOLDDURATION\",\n          \"dataField\": \"suserholdduration\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_PERIOD\",\n          \"dataField\": \"nuserperiodcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }];\n      } else {\n        this.validationColumnList = [{\n          \"idsName\": \"IDS_USERS\",\n          \"dataField\": \"nusercode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_STARTDATETIME\",\n          \"dataField\": \"duserblockfromdatetime\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_HOLDDURATION\",\n          \"dataField\": \"suserholdduration\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_PERIOD\",\n          \"dataField\": \"nuserperiodcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_INSTRUMENTCATEGORY\",\n          \"dataField\": \"ninstrumentcatcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_INSTRUMENTID\",\n          \"dataField\": \"ninstrumentcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_STARTDATETIME\",\n          \"dataField\": \"dinstblockfromdatetime\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"selectbox\"\n        }, {\n          \"idsName\": \"IDS_HOLDDURATION\",\n          \"dataField\": \"sinstrumentholdduration\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_ENTER\",\n          \"controlType\": \"textbox\"\n        }, {\n          \"idsName\": \"IDS_PERIOD\",\n          \"dataField\": \"ninstrumentperiodcode\",\n          \"width\": \"200px\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        }];\n      }\n    } else if (this.props.Login.operation === \"AllotJobCalendar\") {\n      this.validationColumnList = [{\n        \"idsName\": \"IDS_USERS\",\n        \"dataField\": \"nusercode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }];\n    } else if (this.props.Login.operation === \"AllotAnotherUser\") {\n      this.validationColumnList = [{\n        \"idsName\": \"IDS_USERS\",\n        \"dataField\": \"nusercode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_STARTDATETIME\",\n        \"dataField\": \"duserblockfromdatetime\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_HOLDDURATION\",\n        \"dataField\": \"suserholdduration\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_PERIOD\",\n        \"dataField\": \"nuserperiodcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }];\n    }\n\n    const mandatoryFields = [];\n\n    if (this.validationColumnList && this.validationColumnList.length > 0) {\n      this.validationColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n    }\n\n    let breadCrumbData = [];\n    breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_TESTSTATUS\",\n      \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.stransdisplaystatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.stransdisplaystatus || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_SECTION\",\n      \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" : this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_TEST\",\n      \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" : this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n    }];\n    const testDesign = /*#__PURE__*/React.createElement(ContentPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0 sm-pager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      cardHead: 94,\n      masterList: this.props.Login.masterData.searchedTest || JA_TestList,\n      selectedMaster: this.props.Login.masterData.JASelectedTest,\n      primaryKeyField: \"ntransactiontestcode\",\n      getMasterDetail: (event, status) => {\n        this.props.getTestChildTabDetailJobAllocation(event, status);\n        this.changePropertyView(2, event, \"click\");\n      },\n      inputParam: testChildGetJAParam,\n      additionalParam: [],\n      mainField: \"stestsynonym\",\n      selectedListName: \"JASelectedTest\",\n      objectName: \"test\",\n      listName: \"IDS_TEST\",\n      pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n      showStatusLink: true,\n      subFieldsLabel: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      needMultiSelect: true,\n      subFields: this.state.testListColumns || [],\n      moreField: this.state.testMoreField,\n      needValidation: false,\n      showStatusName: true,\n      needFilter: false,\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedTest\",\n      searchRef: this.searchTestRef,\n      filterParam: this.state.filterTestParam,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      childTabsKey: [\"TestView\", \"RegistrationTestComment\", \"RegistrationTestAttachment\"],\n      handlePageChange: this.handleTestPageChange,\n      buttonCount: 5,\n      skip: this.state.testskip,\n      take: this.state.testtake,\n      showMoreResetList: true,\n      showMoreResetListName: \"JA_SAMPLE\",\n      selectionList: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n      selectionColorField: \"scolorhexcode\",\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ALLOTJOB\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(allotId) === -1,\n        onClick: () => this.AllotJobStatus(allotId, this.state.testskip, this.state.testtake, 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Allotted, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ALLOTJOBINCALENDER\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(allotCalenderId) === -1,\n        onClick: () => this.AllotJobStatus(allotCalenderId, this.state.testskip, this.state.testtake, 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCalendar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ALLOTANOTHERUSER\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(anotherUserId) === -1,\n        onClick: () => this.AllotAnotherUserStatus(anotherUserId, this.state.testskip, this.state.testtake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(AnotherUser, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_RESCHEDULE\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(rescheduleId) === -1,\n        onClick: () => this.RescheduleStatus(rescheduleId, this.state.testskip, this.state.testtake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faClock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_CANCEL\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(cancelId) === -1,\n        onClick: () => this.CancelStatus(cancelId, this.state.testskip, this.state.testtake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Reject, {\n        className: \"custom_icons\",\n        width: \"15\",\n        height: \"15\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 41\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 21\n      }\n    }))));\n    let mainDesign = \"\";\n\n    if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\n      mainDesign = /*#__PURE__*/React.createElement(SplitterLayout, {\n        borderColor: \"#999\",\n        primaryIndex: 1,\n        percentage: true,\n        secondaryInitialSize: this.state.splitChangeWidthPercentage,\n        primaryMinSize: 40,\n        secondaryMinSize: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          borderBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: \"inline-block\",\n          marginTop: \"1%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 29\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_SUBSAMPLE\"\n      })))), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"p-0 sm-pager\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n        cardHead: 94,\n        masterList: this.props.Login.masterData.searchedSubSample || JA_SubSampleList,\n        selectedMaster: this.props.Login.masterData.JASelectedSubSample,\n        primaryKeyField: \"ntransactionsamplecode\" //secondaryKeyField = \"nsectioncode\"\n        ,\n        getMasterDetail: (event, status) => {\n          this.props.getJobAllocationTestDetail(event, status);\n          this.state.enableAutoClick && this.changePropertyView(2, event, \"click\");\n        },\n        inputParam: testGetJAParam,\n        filterColumnData: this.props.filterTransactionList,\n        searchListName: \"searchedSubSample\",\n        secondarySelection: this.props.Login.secondarySelection || \"\",\n        searchRef: this.searchSubSampleRef,\n        filterParam: { ...this.state.filterSubSampleParam,\n          childRefs: [{\n            ref: this.searchTestRef,\n            childFilteredListName: \"searchedTest\"\n          }]\n        },\n        additionalParam: ['napprovalversioncode'],\n        showStatusLink: true,\n        showStatusName: false,\n        statusFieldName: \"stransdisplaystatus\",\n        statusField: \"ntransactionstatus\",\n        mainField: \"ssamplearno\",\n        selectedListName: \"JASelectedSubSample\",\n        objectName: \"subsample\",\n        listName: \"IDS_SUBSAMPLE\",\n        needValidation: true,\n        validationKey: \"napprovalversioncode\",\n        validationFailMsg: \"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",\n        subFields: this.state.DynamicSubSampleColumns,\n        skip: this.state.subsampleskip,\n        take: this.state.subsampletake,\n        pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)) //selectionField=\"ntransactionstatus\"\n        //selectionFieldName=\"stransdisplaystatus\"\n        ,\n        needMultiSelect: true //selectionColorField=\"scolorhexcode\"\n        ,\n        subFieldsLabel: false,\n        handlePageChange: this.handleSubSamplePageChange,\n        selectionList: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n        childTabsKey: [// \"RegistrationAttachment\", \n        \"JA_TEST\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"],\n        needFilter: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 25\n        }\n      }))), testDesign);\n    } else {\n      mainDesign = testDesign;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      className: \"toolbar-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      percentage: true,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      primaryMinSize: 30,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar-top-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      listMasterShowIcon: 1,\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      masterList: this.props.Login.masterData.searchedSample || JA_SampleList,\n      selectedMaster: this.props.Login.masterData.JASelectedSample,\n      primaryKeyField: \"nregistrationsectioncode\",\n      filterColumnData: this.props.filterTransactionList,\n      getMasterDetail: (event, status) => {\n        this.props.getJobAllocationSubSampleDetail(event, status);\n        this.state.enableAutoClick && this.changePropertyView(4, event, \"click\");\n      },\n      inputParam: subSampleGetJAParam,\n      selectionList: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : [],\n      selectionColorField: \"scolorhexcode\",\n      mainField: \"sarno\",\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      selectedListName: \"JASelectedSample\",\n      searchListName: \"searchedSample\",\n      searchRef: this.searchSampleRef,\n      objectName: \"sample\",\n      listName: \"IDS_SAMPLE\",\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: this.state.DynamicSampleColumns,\n      needMultiSelect: true,\n      showStatusBlink: true,\n      filterParam: { ...this.state.filterSampleParam,\n        childRefs: [{\n          ref: this.searchSubSampleRef,\n          childFilteredListName: \"searchedSubSample\"\n        }, {\n          ref: this.searchTestRef,\n          childFilteredListName: \"searchedTest\"\n        }]\n      },\n      subFieldsLabel: false,\n      handlePageChange: this.handleSamplePageChange,\n      skip: this.state.sampleskip,\n      take: this.state.sampletake,\n      childTabsKey: [\"RegistrationAttachment\", \"RegistrationComment\", \"JA_SUBSAMPLE\", \"JA_TEST\", \"RegistrationSampleAttachment\", \"RegistrationSampleComment\", \"JASelectedSubSample\", \"JASelectedTest\"],\n      needFilter: true,\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_RECEIVEINLAB\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(receiveId) === -1,\n        onClick: () => this.ReceiveinLabStatus(receiveId, this.state.sampleskip, this.state.sampletake),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(ReceivedInLab, {\n        className: \"custom_icons\",\n        width: \"25\",\n        height: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        variant: \"link\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }),\n        \"data-for\": \"tooltip-common-wrap\",\n        onClick: () => this.onReload(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        style: {\n          \"width\": \"0.6!important\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 61\n        }\n      }))),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(JobAllocationFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.defaultSampleTypeValue || {},\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.defaultRegTypeValue || {},\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue || {},\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.defaultApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.defaultUserSectionValue || [],\n          JobStatus: this.props.Login.masterData.JobStatus || [],\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.defaultTestValue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.defaultFilterStatusValue || [],\n          DynamicDesignMapping: this.state.DynamicDesignMappingList || [],\n          DesignTemplateMappingValue: this.props.Login.masterData.defaultDesignTemplateMappingValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleFilterDateChange: this.handleFilterDateChange,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 74\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.state.showTest === true || this.state.showSubSample === true ? {\n        display: \"block\",\n        background: \"#FFFF\"\n      } : {\n        display: \"none\",\n        background: \"#FFFF\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 45\n      }\n    }, mainDesign)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      style: {\n        width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: ` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyViewClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 178\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-common  ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 4 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-common  ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 45\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ALLOTTEDTEST\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_ALLOTTEDTEST\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-attachment  ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 41\n      }\n    }, this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-grid-tab  ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 41\n      }\n    }, this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEDETAILS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(8),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ALLOTTEDTEST\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ATTACHMENTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_AUTOSHOW\"\n      }),\n      type: \"switch\",\n      name: \"Auto Click\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enableAutoClick,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enableAutoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_POPUPNAV\"\n      }),\n      type: \"switch\",\n      name: \"PopupNav\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enablePropertyPopup,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enablePropertyPopup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 45\n      }\n    })))))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      esign: this.props.Login.loadEsign,\n      hideSave: this.props.Login.operation === \"IDS_VIEWANALYSTCALENDAR\" ? true : false,\n      onSaveClick: this.onSaveClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      size: this.props.Login.operation === \"IDS_VIEWANALYSTCALENDAR\" ? \"xl\" : \"lg\",\n      selectedRecord: this.state.selectedRecord || {},\n      showSaveContinue: this.state.showSaveContinue,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 33\n        }\n      }) : //  this.state.openAnalystCalendar ?\n      //     <AnalystCalenderBasedOnUser userData={this.props.Login.masterData.analystCalenderData} /> :\n      this.props.Login.operation === \"AllotJobCalendar\" ? /*#__PURE__*/React.createElement(NewJobAlloct, {\n        selectedRecord: this.state.selectedRecord || {},\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        Technique: this.props.Login.Technique,\n        Users: this.props.Login.Users,\n        userData: this.props.Login.masterData.analystCalenderData,\n        InstrumentCategory: this.props.Login.InstrumentCategory,\n        Instrument: this.props.Login.Instrument,\n        currentTime: this.props.Login.currentTime || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        selectedTest: this.props.Login.masterData.JASelectedTest,\n        parentScheduleState: this.parentScheduleState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 37\n        }\n      }) : this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"Reschedule\" ? /*#__PURE__*/React.createElement(AddJobAllocation, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        Technique: this.props.Login.Technique,\n        Users: this.props.Login.Users,\n        UsersPeriod: this.props.Login.UsersPeriod,\n        InstrumentCategory: this.props.Login.InstrumentCategory,\n        Instrument: this.props.Login.Instrument,\n        InstrumentPeriod: this.props.Login.InstrumentPeriod,\n        currentTime: this.props.Login.currentTime || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        openAnalystCalendar: this.openAnalystCalendar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 33\n        }\n      }) : this.props.Login.operation === \"AllotAnotherUser\" ? /*#__PURE__*/React.createElement(AllotAnotherUser, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        Technique: this.props.Login.Technique,\n        Users: this.props.Login.Users,\n        UsersPeriod: this.props.Login.UsersPeriod,\n        currentTime: this.props.Login.currentTime || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 37\n        }\n      }) //    ) : this.props.Login.operation ===\"ViewAnalystCalendar\" ? (\n      //         <>\n      //             <Row>\n      //                 <Col md={12}>\n      //                 <FormSelectSearch\n      //                     formLabel={this.props.intl.formatMessage({ id: \"IDS_USERS\" })}\n      //                     isSearchable={true}\n      //                     name={\"nusercode\"}\n      //                     isDisabled={false}\n      //                     placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n      //                     isMandatory={true}\n      //                     isClearable={false}\n      //                     options={this.props.Login.Users}\n      //                     value = {this.state.selectedRecord[\"nusercode\"] || \"\" }\n      //                     defaultValue={this.state.selectedRecord[\"nusercode\"]}\n      //                     onChange={(event)=>this.onComboChange(event, \"nusercode\")}\n      //                     closeMenuOnSelect={true}\n      //                 />\n      //                 </Col>\n      //             </Row>\n      //             <Scheduler data={this.state.data}  defaultDate={new Date()}>\n      //                 <DayView numberOfDays={3} style={{zorder:25000}}/>\n      //                 <WeekView />\n      //                 <MonthView />\n      //             </Scheduler>\n      //             {/* <AnalystCalendar\n      //                 UserData={this.props.Login.masterData.UserData}\n      //                 operation={this.props.Login.operation}\n      //                 inputParam={this.props.inputParam}\n      //                 userInfo={this.props.Login.userInfo}\n      //             /> */}\n      //         </>                             \n      //    ): (\n      : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  ReceiveinLabStatus(receiveId, sampleskip, sampletake) {\n    let sampleList = [];\n\n    if (this.props.Login.masterData.searchedSample !== undefined) {\n      sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake), \"nregistrationsectioncode\");\n    } else {\n      sampleList = this.props.Login.masterData.JA_SAMPLE && this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake);\n    }\n\n    let receiveList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\n\n    if (receiveList && receiveList.length > 0) {\n      let tempsection = 0;\n      let sectionvalue = 0;\n      let bflag = true;\n      let sampleList = this.props.Login.masterData.JASelectedSample;\n      sampleList.forEach(item => {\n        sectionvalue = item.nsectioncode;\n\n        if (tempsection !== sectionvalue && tempsection !== 0) {\n          bflag = false;\n        } else {\n          tempsection = sectionvalue;\n        }\n      });\n\n      if (bflag) {\n        let JASelectedSample = this.props.Login.masterData.JASelectedSample;\n\n        if (this.props.Login.masterData.JASelectedSubSample.length !== 0) {\n          let JASelectedSubSample = this.props.Login.masterData.JASelectedSubSample;\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          let arr = [];\n          JASelectedSample && JASelectedSample.map(item => {\n            if (!arr.includes(item.nsectioncode)) {\n              arr.push(item.nsectioncode);\n            }\n          });\n          let inputParam = {};\n          let Map = {\n            nflag: 3,\n            ncheck: 1,\n            fromdate: obj.fromDate,\n            todate: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n            ntransactionstatus: \"0\",\n            ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n            npreregno: JASelectedSample ? JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"\",\n            ntransactionsamplecode: JASelectedSubSample ? JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\n            nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\n            ncontrolcode: receiveId,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n            checkBoxOperation: 3,\n            ntype: 2,\n            userinfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            screenName: this.props.Login.screenName,\n            activeSampleTab: \"IDS_SAMPLEATTACHMENTS\",\n            activeSubSampleTab: \"IDS_SUBSAMPLEATTACHMENTS\",\n            activeTestTab: \"IDS_TESTATTACHMENTS\"\n          };\n          inputParam = {\n            inputData: Map,\n            postParamList: this.postParamList,\n            classUrl: \"joballocation\",\n            operation: 'Create',\n            methodUrl: \"ReceiveinLab\",\n            action: \"receiveinlab\"\n          };\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, receiveId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openModal: true,\n                parentPopUpSize: 'lg',\n                screenName: this.props.Login.screenName,\n                operation: 'Create'\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.ReceiveinLabStatusWise(inputParam);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSUBSAMPLESTORECEIVE\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMESECTIONSAMPLES\"\n        }));\n      }\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTSAMPLES\"\n      }));\n    }\n  }\n\n  checkRegisterSamples(sample) {\n    return sample.ntransactionstatus === transactionStatus.REGISTER;\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      testListColumns,\n      testSearchField,\n      subsampleSearchField,\n      sampleSearchField,\n      SingleItem,\n      testItem,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      testAttachmentDataState,\n      testCommentDataState,\n      testViewDataState,\n      activeTabIndex,\n      activeTabId,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      DynamicDesignMappingList,\n      sampleskip,\n      sampletake,\n      subsampleskip,\n      subsampletake,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicTestGridMoreField,\n      DynamicSampleColumns,\n      DynamicSubSampleColumns,\n      DynamicTestColumns,\n      DynamicGridMoreField,\n      data\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n          group: [{\n            field: 'sarno'\n          }]\n        };\n        testAttachmentDataState = dataState;\n        testCommentDataState = dataState;\n        testViewDataState = dataState;\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\n      activeTabIndex = this.props.Login.activeTabIndex;\n      activeTabId = this.props.Login.activeTabId;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"stransdisplaystatus\", undefined, undefined, false);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, false);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, false);\n      const DynamicDesignMappingListMap = constructOptionList(this.props.Login.masterData.DynamicDesignMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", \"nsorter\", 'ascending', 'ndesigntemplatemappingcode', false);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      DynamicDesignMappingList = DynamicDesignMappingListMap.get(\"OptionList\");\n      bool = true;\n      sampleskip = this.props.Login.sampleskip === undefined ? sampleskip : this.props.Login.sampleskip;\n      sampletake = this.props.Login.sampletake || sampletake;\n      subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip;\n      subsampletake = this.props.Login.subsampletake || subsampletake;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        stransdisplaystatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      };\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\n        testAttachmentDataState = this.props.Login.testAttachmentDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.testViewDataState && this.props.Login.testViewDataState !== previousProps.Login.testViewDataState) {\n        testViewDataState = this.props.Login.testViewDataState;\n      }\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n      DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n      subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n      testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n      DynamicTestGridItem = dynamicColumn.testgriditem ? dynamicColumn.testgriditem : [];\n      DynamicTestGridMoreField = dynamicColumn.testgridmoreitem ? dynamicColumn.testgridmoreitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      testItem = dynamicColumn.testdisplayfields ? dynamicColumn.testdisplayfields : [];\n      testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.UserData !== undefined) {\n      if (this.props.Login.masterData.UserData !== previousProps.Login.masterData.UserData) {\n        for (let i = 0; i < this.props.Login.masterData.UserData.length; i++) {\n          data.push(this.props.Login.masterData.UserData[i].jsonuidata);\n        }\n\n        data = data.map(dataItem => ({\n          start: parseAdjust(dataItem.UserStartDate),\n          end: parseAdjust(dataItem.UserEndDate),\n          title: dataItem.Comments\n        }));\n        bool = true; //this.setState({data:data});\n      }\n    }\n\n    const filterSampleParam = {\n      inputListName: \"JA_SAMPLE\",\n      selectedObject: \"JASelectedSample\",\n      primaryKeyField: \"nregistrationsectioncode\",\n      fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\n      isMultiSort: true,\n      multiSortData: [{\n        pkey: 'ntransactionsamplecode',\n        list: 'JA_SUBSAMPLE'\n      }, {\n        pkey: 'ntransactiontestcode',\n        list: 'JA_TEST'\n      }],\n      sampleskip: 0,\n      subsampleskip: 0,\n      testskip: 0,\n      sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      fecthInputObject: {\n        masterData: this.props.Login.masterData,\n        ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n        //nsectioncode: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.nsectioncode).join(\",\"),\n        //npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\n        samplesearch: 1,\n        checkBoxOperation: 3,\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: sampleSearchField,\n      changeList: [\"JA_SUBSAMPLE\", \"JA_TEST\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"JASelectedSample\", \"JASelectedSubSample\", \"JASelectedTest\"]\n    };\n    const filterSubSampleParam = {\n      inputListName: \"JA_SUBSAMPLE\",\n      selectedObject: \"JASelectedSubSample\",\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"joballocation/getJobAllocationTestDetails\",\n      isMultiSort: true,\n      multiSortData: [{\n        pkey: 'ntransactiontestcode',\n        list: 'JA_TEST'\n      }],\n      sampleskip: this.state.sampleskip,\n      subsampleskip: 0,\n      testskip: 0,\n      sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      fecthInputObject: {\n        masterData: this.props.Login.masterData,\n        userinfo: this.props.Login.userInfo,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n        checkBoxOperation: 3,\n        npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\n        nsectioncode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(x => x.nsectioncode).join(\",\"),\n        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: subsampleSearchField,\n      changeList: [\"JA_TEST\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"JASelectedSubSample\", \"JASelectedTest\"]\n    };\n    const filterTestParam = {\n      inputListName: \"JA_TEST\",\n      selectedObject: \"JASelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      sampleskip: this.state.sampleskip,\n      subsampleskip: this.state.subsampleskip,\n      testskip: 0,\n      sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\n      subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\n      fecthInputObject: {\n        ntransactiontestcode: this.props.Login.masterData && this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n        checkBoxOperation: 3,\n        activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: testSearchField,\n      changeList: [\"RegistrationTestAttachment\", \"RegistrationTestComment\"]\n    };\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        testListColumns,\n        testSearchField,\n        subsampleSearchField,\n        sampleSearchField,\n        SingleItem,\n        testItem,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        testAttachmentDataState,\n        testCommentDataState,\n        testViewDataState,\n        activeTabIndex,\n        activeTabId,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        DynamicDesignMappingList,\n        sampleskip,\n        sampletake,\n        subsampleskip,\n        subsampletake,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicTestGridMoreField,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridMoreField,\n        data,\n        filterTestParam,\n        filterSubSampleParam,\n        filterSampleParam\n      });\n    }\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] || \"-\",\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  AllotJobStatus(allotId, testskip, testtake, type) {\n    let testList = [];\n\n    if (this.props.Login.masterData.searchedTest !== undefined) {\n      testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n    } else {\n      testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n    }\n\n    let allotList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n    if (allotList && allotList.length > 0) {\n      let testList = this.props.Login.masterData.JASelectedTest;\n      let tempsection = 0;\n      let sectionvalue = 0;\n      let sectionflag = true;\n      testList.forEach(item => {\n        sectionvalue = item.nsectioncode;\n\n        if (sectionvalue !== tempsection && tempsection !== 0) {\n          sectionflag = false;\n        } else {\n          tempsection = sectionvalue;\n        }\n      });\n      let tempinstrument = 0;\n      let instrumentvalue = 0;\n      let instrumentcategoryflag = true;\n      testList.forEach(item => {\n        instrumentvalue = item.ninstrumentcatcode;\n\n        if (instrumentvalue !== tempinstrument && tempinstrument !== 0) {\n          instrumentcategoryflag = false;\n        } else {\n          tempinstrument = instrumentvalue;\n        }\n      });\n\n      if (sectionflag) {\n        if (instrumentcategoryflag) {\n          let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          let arr = [];\n          JASelectedTest && JASelectedTest.map(item => {\n            if (!arr.includes(item.nsectioncode)) {\n              arr.push(item.nsectioncode);\n            }\n          });\n          let inputParam = {};\n          let Map = {\n            fromdate: obj.fromDate,\n            todate: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\n            //nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n            nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\n            ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n            npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n            ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\n            transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n            ntransactiontestcode: 0,\n            ncontrolcode: allotId,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n            checkBoxOperation: 3,\n            userinfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            operation: type === 1 ? 'AllotJob' : 'AllotJobCalendar'\n          };\n          inputParam = {\n            inputData: Map\n          };\n          this.props.getAllottedTestWise(inputParam);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMEINSTRUMENTCATEGORYTEST\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMESECTIONTEST\"\n        }));\n      }\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTTEST\"\n      }));\n    }\n  }\n\n  AllotAnotherUserStatus(anotherUserId, testskip, testtake) {\n    let testList = [];\n\n    if (this.props.Login.masterData.searchedTest !== undefined) {\n      testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n    } else {\n      testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n    }\n\n    let anotherUserList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n    if (anotherUserList && anotherUserList.length === 1) {\n      let tempsection = 0;\n      let sectionvalue = 0;\n      let bflag = true;\n      let testList = this.props.Login.masterData.JASelectedTest;\n      testList.forEach(item => {\n        sectionvalue = item.nsectioncode;\n\n        if (sectionvalue !== tempsection && tempsection !== 0) {\n          bflag = false;\n        } else {\n          tempsection = sectionvalue;\n        }\n      });\n\n      if (bflag) {\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let arr = [];\n        JASelectedTest && JASelectedTest.map(item => {\n          if (!arr.includes(item.nsectioncode)) {\n            arr.push(item.nsectioncode);\n          }\n        });\n        let inputParam = {};\n        let Map = {\n          fromdate: obj.fromDate,\n          todate: obj.toDate,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n          ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\n          //nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n          nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\n          ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n          npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n          ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\n          transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n          ntransactiontestcode: 0,\n          ncontrolcode: anotherUserId,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n          checkBoxOperation: 3,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          operation: 'AllotAnotherUser'\n        };\n        inputParam = {\n          inputData: Map\n        };\n        this.props.getAllotAnotherUserTestWise(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMESECTIONTEST\"\n        }));\n      }\n    } else if (anotherUserList && anotherUserList.length > 1) {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTSINGLETEST\"\n      }));\n    } else if (anotherUserList && anotherUserList.length === 0) {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTTEST\"\n      }));\n    }\n  }\n\n  RescheduleStatus(rescheduleId, testskip, testtake) {\n    let testList = [];\n\n    if (this.props.Login.masterData.searchedTest !== undefined) {\n      testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\n    } else {\n      testList = this.props.Login.masterData.JA_TEST && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\n    }\n\n    let rescheuleList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\n\n    if (rescheuleList && rescheuleList.length > 0) {\n      let tempsection = 0;\n      let sectionvalue = 0;\n      let sectionflag = true;\n      let testList = this.props.Login.masterData.JASelectedTest;\n      testList.forEach(item => {\n        sectionvalue = item.nsectioncode;\n\n        if (sectionvalue !== tempsection && tempsection !== 0) {\n          sectionflag = false;\n        } else {\n          tempsection = sectionvalue;\n        }\n      });\n      let tempinstrument = 0;\n      let instrumentvalue = 0;\n      let instrumentcategoryflag = true;\n      testList.forEach(item => {\n        instrumentvalue = item.ninstrumentcatcode;\n\n        if (instrumentvalue !== tempinstrument && tempinstrument !== 0) {\n          instrumentcategoryflag = false;\n        } else {\n          tempinstrument = instrumentvalue;\n        }\n      });\n\n      if (sectionflag) {\n        if (instrumentcategoryflag) {\n          let JASelectedTest = this.props.Login.masterData.JASelectedTest; //let JASelectedSample = this.props.Login.masterData.JASelectedSample;\n\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          let arr = [];\n          JASelectedTest && JASelectedTest.map(item => {\n            if (!arr.includes(item.nsectioncode)) {\n              arr.push(item.nsectioncode);\n            }\n          });\n          let inputParam = {};\n          let Map = {\n            fromdate: obj.fromDate,\n            todate: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\n            //nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n            nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\n            ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\n            npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n            ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\n            transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n            ntransactiontestcode: 0,\n            ncontrolcode: rescheduleId,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n            checkBoxOperation: 3,\n            AllotAnotherUser: false,\n            userinfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            operation: 'Reschedule'\n          };\n          inputParam = {\n            inputData: Map\n          };\n          this.props.getRescheduleTestWise(inputParam);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMEINSTRUMENTCATEGORYTEST\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMESECTIONTEST\"\n        }));\n      }\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_SELECTTEST\"\n      }));\n    }\n  }\n\n  getActiveTestURL() {\n    let url = \"attachment/getTestAttachment\";\n\n    switch (this.props.Login.activeTestTab) {\n      case \"IDS_TESTATTACHMENTS\":\n        url = \"attachment/getTestAttachment\";\n        break;\n\n      case \"IDS_TESTCOMMENTS\":\n        url = \"comments/getTestComment\";\n        break;\n\n      default:\n        url = \"comments/getTestComment\";\n        break;\n    }\n\n    return url;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignforJobAllocation,\n  ReceiveinLabStatusWise,\n  getRegTypeJobAllocation,\n  getRegSubTypeJobAllocation,\n  getAppConfigVersionJobAllocation,\n  getFilterStatusJobAllocation,\n  getSectionJobAllocation,\n  getTestStatusJobAllocation,\n  getFilterStatusSectionJobAllocation,\n  getDesignTemplateJobAllocation,\n  getJobAllcationFilterSubmit,\n  getJobAllocationSubSampleDetail,\n  getJobAllocationTestDetail,\n  getTestChildTabDetailJobAllocation,\n  getAllottedTestWise,\n  getAllotAnotherUserTestWise,\n  getRescheduleTestWise,\n  getInstrument,\n  getUsers,\n  ViewAnalystCalendar,\n  CancelTestWise,\n  AllotJobAction,\n  AllotAnotherUserAction,\n  RescheduleJobAction,\n  getSubSampleChildTabDetail,\n  getSampleChildTabDetail,\n  getCommentsCombo,\n  getAttachmentCombo,\n  filterTransactionList,\n  getAnalystCalenderBasedOnUser\n})(injectIntl(JobAllocation));\nexport const currentYear = new Date().getFullYear();\nexport const parseAdjust = eventDate => {\n  const date = new Date(eventDate);\n  date.setFullYear(currentYear);\n  return date;\n};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/joballocation/JobAllocation.jsx"],"names":["React","connect","injectIntl","BreadcrumbComponent","toast","convertDateValuetoString","rearrangeDateFormat","constructOptionList","getControlMap","sortData","getSameRecordFromTwoArrays","showEsign","convertDateTimetoStringDBFormat","validatePhoneNumber","ListWrapper","Button","Col","Row","Card","Nav","updateStore","callService","crudMaster","validateEsignforJobAllocation","ReceiveinLabStatusWise","getRegTypeJobAllocation","getRegSubTypeJobAllocation","getAppConfigVersionJobAllocation","getFilterStatusJobAllocation","getSectionJobAllocation","getTestStatusJobAllocation","getFilterStatusSectionJobAllocation","getDesignTemplateJobAllocation","getJobAllcationFilterSubmit","getJobAllocationSubSampleDetail","getJobAllocationTestDetail","getTestChildTabDetailJobAllocation","getAllottedTestWise","getAllotAnotherUserTestWise","getRescheduleTestWise","getInstrument","getUsers","ViewAnalystCalendar","CancelTestWise","AllotJobAction","AllotAnotherUserAction","RescheduleJobAction","getSubSampleChildTabDetail","getSampleChildTabDetail","getCommentsCombo","getAttachmentCombo","filterTransactionList","getAnalystCalenderBasedOnUser","JobAllocationFilter","SplitterLayout","TransactionListMasterJsonView","transactionStatus","SideBarSeqno","SideBarTabIndex","designProperties","DEFAULT_RETURN","ProductList","FontAwesomeIcon","faSync","faEye","faLink","faChevronRight","faComments","faClock","faCalendar","ContentPanel","CustomSwitch","SlideOutModal","Esign","AddJobAllocation","AllotAnotherUser","SampleInfoView","SampleInfoGrid","CustomTabs","Attachments","Comments","onSaveSampleAttachment","onSaveTestAttachment","onSaveSubSampleAttachment","onSaveSampleComments","onSaveTestComments","onSaveSubSampleComments","NewJobAlloct","mapStateToProps","state","Login","JobAllocation","Component","constructor","props","parentScheduleState","data","setState","handleSamplePageChange","e","sampleskip","skip","sampletake","take","handleSubSamplePageChange","subsampleskip","subsampletake","handleTestPageChange","testskip","testtake","paneSizeChange","d","splitChangeWidthPercentage","onTabChange","tabProps","activeTestTab","screenName","tabseqno","tabSequence","TEST","masterData","JASelectedTest","length","arr","map","item","includes","ntransactionstatus","push","transstatus","nsectioncode","join","inputData","ntransactiontestcode","String","npreregno","JASelectedSample","userinfo","userInfo","testCommentDataState","testAttachmentDataState","testViewDataState","activeTabIndex","activeTabId","warn","intl","formatMessage","id","SUBSAMPLE","selectedSubSample","JASelectedSubSample","ntransactionsamplecode","activeSubSampleTab","subsampleCommentDataState","subsampleAttachmentDataState","selectedSample","activeSampleTab","changePropertyViewClose","updateInfo","typeName","undefined","changePropertyView","index","event","status","window","innerWidth","enableAutoClick","ATTACHMENTS","COMMENTS","TESTVIEW","ANALYSTCALENDAR","sideNavDetail","testList","searchedTests","JA_TEST","editTestCommentsId","controlMap","has","get","ncontrolcode","slice","selectedTestList","test","attachmentTabDetail","commentTabDetail","SingleItem","sampleGridDataState","sampleGridDataStateChange","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","inputParam","TestView","testItem","testGridDataState","testGridDataStateChange","DynamicTestGridItem","DynamicTestGridMoreField","attachmentTabMap","Map","sample","subsampleList","JA_SUBSAMPLE","selectedSubSampleList","set","onAttachmentSaveClick","userRoleControlRights","RegistrationTestAttachment","deleteAttachment","nneedsubsample","VALUE","methodUrl","esignRights","masterList","realRegSubTypeValue","RegistrationSampleAttachment","viewAttachment","attachmentskip","attachmenttake","settings","parseInt","SAMPLE","RegistrationAttachment","commentTabMap","onCommentsSaveClick","RegistrationTestComment","testDataStateChange","operation","ncontrolCode","selectedId","RegistrationSampleComment","subsampleDataStateChange","RegistrationComment","sampleCommentDataState","sampleDataStateChange","dataState","sampleAttachmentDataState","onInputSwitchOnChange","target","name","enablePropertyPopup","onSampleTabChange","onSubSampleTabChange","subSampleCommentDataState","onTestTabChange","toString","preregno","saveType","formRef","selectedRecord","sampleList","JA_SAMPLE","selectedSampleList","saveParam","selectedMaster","x","nformcode","loadEsign","screenData","isTestComment","searchedSubSample","acceptList","searchedSample","onFilterComboChange","comboData","fieldName","obj","fromDate","toDate","inputParamData","value","defaultSampleTypeValue","nsampletypecode","nflag","fromdate","todate","defaultRegTypeValue","nregtypecode","defaultRegSubTypeValue","nregsubtypecode","nneedtemplatebasedflow","defaultApprovalVersionValue","napprovalconfigversioncode","RegSubTypeValue","defaultFilterStatusValue","FilterStatus","defaultUserSectionValue","ndesigntemplatemappingcode","defaultDesignTemplateMappingValue","UserSection","defaultTestValue","ntestcode","dfrom","dto","napprovalversioncode","FilterStatusValue","stransactionstatus","handleFilterDateChange","dateName","dateValue","Date","onReload","realFromDate","realToDate","realSampleTypeValue","realRegTypeValue","realFilterStatusValue","realApprovalVersionValue","realUserSectionValue","realTestValue","realDesignTemplateMappingValue","napprovalconfigcode","section","checkBoxOperation","stransdisplaystatus","searchSampleRef","searchSubSampleRef","searchTestRef","onFilterSubmit","CancelStatus","cancelId","ntype","postParamList","classUrl","action","openModal","parentPopUpSize","onJobAllocationTestWise","scontrolname","transactiontestcode","onSaveClick","onSaveAllotJob","onSaveAllotAnotherUser","onSaveReschedule","onSaveAllotJobInSchedule","JobAllocationData","allotjob","data1","filter","insertRecord","josnArray","sleectedData","val","label","ntechniquecode","nusercode","start","end","InstrumentCategory","Instrument","description","valJsonUi","UserStartDate","UserEndDate","InstrumentStartDate","InstrumentEndDate","objJobAllocation","displayName","searchRef","duserblockfromdatetime","suserholdduration","nuserperiodcode","ninstrumentcatcode","ninstrumentcode","dinstblockfromdatetime","sinstrumentholdduration","ninstrumentperiodcode","scomments","JSON","stringify","closeModal","isOpen","analystCalenderData","validateEsign","sreason","password","handleDateChange","onComboChange","ncalibrationreq","onInputOnChange","onNumericInputOnChange","handleDataChange","created","updated","deleteted","scheduleData","postParam","aa","concat","Object","assign","isClearSearch","createRef","masterStatus","error","oldComboData","filterSampleParam","filterSubSampleParam","filterTestParam","showTest","showSample","showSubSample","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","firstPane","paneHeight","secondPaneHeight","tabPane","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","ConfigVersionList","UserSectionList","TestList","DynamicDesignMappingList","sampleSearchField","subsampleSearchField","testSearchField","DynamicSampleColumns","DynamicSubSampleColumns","DynamicTestColumns","propertyPopupWidth","subSampleGetParam","openAnalystCalendar","getDerivedStateFromProps","multilingualMsg","componentDidMount","parentHeight","height","clientHeight","shouldComponentUpdate","nextProps","nextState","render","JA_SampleList","JA_SubSampleList","JA_TestList","receiveId","allotId","anotherUserId","rescheduleId","allotCalenderId","subSampleGetJAParam","testGetJAParam","testChildGetJAParam","filteredListName","clearFilter","primaryKeyField","fetchUrl","fecthInputObject","childRefs","ref","childFilteredListName","selectedObject","inputListName","updatedListname","unchangeList","NA","validationColumnList","mandatoryFields","forEach","mandatory","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","RegTypeValue","sregsubtypename","ssectionname","UserSectionValue","stestsynonym","TestValue","testDesign","borderBottom","display","searchedTest","split","setting","ALL","indexOf","AllotJobStatus","AllotAnotherUserStatus","RescheduleStatus","mainDesign","marginTop","secondarySelection","showFilter","openFilter","closeFilter","ReceiveinLabStatus","JobStatus","background","width","showSaveContinue","Technique","Users","currentTime","UsersPeriod","InstrumentPeriod","receiveList","tempsection","sectionvalue","bflag","ncheck","checkRegisterSamples","REGISTER","componentDidUpdate","previousProps","selectedFilter","bool","values","nsubsampleneed","NO","group","field","SampletypeListMap","SampleType","RegistrationTypeListMap","RegistrationType","RegistrationSubTypeListMap","RegistrationSubType","FilterStatusListMap","ConfigVersionListMap","ApprovalConfigVersion","UserSectionListMap","TestListMap","Test","DynamicDesignMappingListMap","DynamicDesignMapping","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","parse","findIndex","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","samplesearchfields","subsamplesearchfields","testListFields","testsearchfields","samplegriditem","samplegridmoreitem","testgriditem","testgridmoreitem","sampledisplayfields","testdisplayfields","testlistmoreitems","FromDate","ToDate","UserData","i","jsonuidata","dataItem","parseAdjust","title","isMultiSort","multiSortData","pkey","list","samplesearch","searchFieldList","changeList","getActiveTestURL","temparray","option","LABEL","slanguagetypecode","type","allotList","sectionflag","tempinstrument","instrumentvalue","instrumentcategoryflag","subsample","anotherUserList","rescheuleList","url","currentYear","getFullYear","eventDate","date","setFullYear"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { toast } from 'react-toastify';\r\nimport { convertDateValuetoString, rearrangeDateFormat, constructOptionList, getControlMap, sortData, getSameRecordFromTwoArrays, showEsign, convertDateTimetoStringDBFormat, validatePhoneNumber } from '../../components/CommonScript';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { Button, Col, Row, Card, Nav } from 'react-bootstrap';\r\nimport {\r\n    updateStore, callService, crudMaster, validateEsignforJobAllocation, ReceiveinLabStatusWise, getRegTypeJobAllocation, getRegSubTypeJobAllocation,\r\n    getAppConfigVersionJobAllocation, getFilterStatusJobAllocation, getSectionJobAllocation, getTestStatusJobAllocation, getFilterStatusSectionJobAllocation, getDesignTemplateJobAllocation,\r\n    getJobAllcationFilterSubmit, getJobAllocationSubSampleDetail, getJobAllocationTestDetail, getTestChildTabDetailJobAllocation, getAllottedTestWise, getAllotAnotherUserTestWise, getRescheduleTestWise, getInstrument, getUsers,\r\n    ViewAnalystCalendar, CancelTestWise, AllotJobAction, AllotAnotherUserAction, RescheduleJobAction, getSubSampleChildTabDetail, getSampleChildTabDetail, getCommentsCombo, getAttachmentCombo, filterTransactionList, getAnalystCalenderBasedOnUser\r\n} from '../../actions';\r\nimport JobAllocationFilter from './JobAllocationFilter';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport { transactionStatus, SideBarSeqno, SideBarTabIndex, designProperties } from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { ProductList } from '../testmanagement/testmaster-styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSync, faEye, faLink, faChevronRight, faComments, faClock, faCalendar } from '@fortawesome/free-solid-svg-icons';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { ReactComponent as ReceivedInLab } from '../../assets/image/receivedlab.svg';\r\nimport { ReactComponent as Allotted } from '../../assets/image/allotted.svg';\r\nimport { ReactComponent as AnotherUser } from '../../assets/image/allotanotheruser.svg';\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg';\r\n// import { ReactComponent as Analystcalendar } from '../../assets/image/Analystcalendar.svg';\r\n// import { ReactComponent as Instrumentcalendar } from '../../assets/image/instrumentcalendar.svg';\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport AddJobAllocation from './AddJobAllocation';\r\nimport AllotAnotherUser from './AllotAnotherUser';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport SampleInfoGrid from '../approval/SampleInfoGrid';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveSampleAttachment, onSaveTestAttachment, onSaveSubSampleAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport { onSaveSampleComments, onSaveTestComments, onSaveSubSampleComments } from '../attachmentscomments/comments/CommentFunctions';\r\n// import AnalystCalenderBasedOnUser from './AnalystCalenderBasedOnUser'\r\nimport NewJobAlloct from './NewJobAlloct';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass JobAllocation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n        this.state = {\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            sampleAttachmentDataState: {},\r\n            sampleCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            subsampleAttachmentDataState: {},\r\n            subsampleCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testAttachmentDataState: {},\r\n            testCommentDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testViewDataState: {},\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            oldComboData: {},\r\n            selectedRecord: {},\r\n            filterSampleParam: {},\r\n            filterSubSampleParam: {},\r\n            filterTestParam: {},\r\n            operation: \"\",\r\n            showTest: true,\r\n            showSample: false,\r\n            showSubSample: false,\r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            testItem: [],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            firstPane: 0,\r\n            paneHeight: 0,\r\n            secondPaneHeight: 0,\r\n            tabPane: 0,\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            ConfigVersionList: [],\r\n            UserSectionList: [],\r\n            TestList: [],\r\n            DynamicDesignMappingList: [],\r\n            sampleskip: 0,\r\n            sampletake: this.props.Login.settings && this.props.Login.settings[3],\r\n            subsampleskip: 0,\r\n            subsampletake: this.props.Login.settings && this.props.Login.settings[12],\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            splitChangeWidthPercentage: 28.6,\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            DynamicSampleColumns: [],\r\n            DynamicSubSampleColumns: [],\r\n            DynamicTestColumns: [],\r\n            enableAutoClick: false,\r\n            enablePropertyPopup: false,\r\n            propertyPopupWidth: \"60\",\r\n            data: [],\r\n            subSampleGetParam: {},\r\n            openAnalystCalendar: false,\r\n            data: []\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n    parentScheduleState = (data) => {\r\n        this.setState({ data: data })\r\n        // this.state.\r\n    }\r\n\r\n\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        // Rendering the component only if \r\n        // passed props value is changed\r\n        if (nextState.data.length > 0 && nextState.data === this.state.data) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    // openAnalystCalendar = () => {\r\n    //     this.setState({ openAnalystCalendar: true })\r\n    // }\r\n\r\n\r\n\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        let JA_SampleList = this.props.Login.masterData.JA_SAMPLE ? sortData(this.props.Login.masterData.JA_SAMPLE, 'descending', 'nregistrationsectioncode') : [];\r\n        let JA_SubSampleList = this.props.Login.masterData.JA_SUBSAMPLE ? this.props.Login.masterData.JA_SUBSAMPLE : [];\r\n        let JA_TestList = this.props.Login.masterData.JA_TEST ? this.props.Login.masterData.JA_TEST : [];\r\n\r\n        const receiveId = this.state.controlMap.has(\"ReceiveinLab\") ? this.state.controlMap.get(\"ReceiveinLab\").ncontrolcode : -1;\r\n        const allotId = this.state.controlMap.has(\"Allotted\") ? this.state.controlMap.get(\"Allotted\").ncontrolcode : -1;\r\n        const anotherUserId = this.state.controlMap.has(\"AllotAnotherUser\") ? this.state.controlMap.get(\"AllotAnotherUser\").ncontrolcode : -1;\r\n        const rescheduleId = this.state.controlMap.has(\"Reschedule\") ? this.state.controlMap.get(\"Reschedule\").ncontrolcode : -1;\r\n        const cancelId = this.state.controlMap.has(\"Cancel\") ? this.state.controlMap.get(\"Cancel\").ncontrolcode : -1;\r\n        const allotCalenderId = this.state.controlMap.has(\"AllotCalender\") ? this.state.controlMap.get(\"AllotCalender\").ncontrolcode : -1;\r\n\r\n\r\n        let subSampleGetJAParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            searchSubSampleRef: this.searchSubSampleRef,\r\n            searchTestRef: this.searchTestRef,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            checkBoxOperation: 3,\r\n            activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n        }\r\n\r\n        let testGetJAParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            nsectioncode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(sample => sample.nsectioncode).join(\",\"),\r\n            activeTestTab: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\r\n            activeSampleTab: this.props.Login.activeTestTab || 'IDS_SAMPLEINFO',\r\n            activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            // activeTabIndex: this.state.enableAutoClick ? 4 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\r\n            activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n\r\n        }\r\n\r\n        let testChildGetJAParam = {\r\n            masterData: this.props.Login.masterData,\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n            npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestTab: this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS',\r\n            fromdate: obj.fromDate,\r\n            todate: obj.toDate,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            // activeTabIndex: this.state.enableAutoClick ? 4 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\r\n            activeTabIndex : this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n        }\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"nregistrationsectioncode\",\r\n                fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\r\n                fecthInputObject: {\r\n                    ...this.state.subSampleGetParam,\r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    sampleGridDataState: this.state.sampleGridDataState,\r\n                    testGridDataState: this.state.testGridDataState\r\n                },\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"JASelectedSample\",\r\n                inputListName: \"JA_SAMPLE\",\r\n                updatedListname: \"JASelectedSample\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\",\r\n                    \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\",\r\n                    \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\r\n            },\r\n            {\r\n                filteredListName: \"searchedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"joballocation/getJobAllocationTestDetails\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetJAParam,\r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    searchSubSampleRef: this.searchSubSampleRef,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    sampleGridDataState: this.state.sampleGridDataState,\r\n                    testGridDataState: this.state.testGridDataState\r\n\r\n                },\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                selectedObject: \"JASelectedSubSample\",\r\n                inputListName: \"JA_SUBSAMPLE\",\r\n                updatedListname: \"JASelectedSubSample\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\",\r\n                    \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\",\r\n                    \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\r\n            },\r\n            {\r\n                filteredListName: \"searchedTest\",\r\n                updatedListname: \"JASelectedTest\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: {\r\n                    ...this.state.testGetJAParam,\r\n                    searchTestRef: this.searchTestRef,\r\n                    testskip: this.state.testskip,\r\n                    subsampleskip: this.state.subsampleskip,\r\n                    testGridDataState: this.state.testGridDataState\r\n                },\r\n                selectedObject: \"JASelectedTest\",\r\n                inputListName: \"JA_TEST\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"SampleType\", \"realRegTypeValue\", \"RegTypeValue\", \"RegType\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"RegSubType\",\r\n                    \"realDesignTemplateMappingValue\", \"DesignTemplateMappingValue\", \"DynamicDesignMapping\", \"realFilterStatusValue\", \"FilterStatusValue\", \"FilterStatus\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"ApprovalVersion\", \"realUserSectionValue\", \"UserSectionValue\", \"UserSection\",\r\n                    \"realTestValue\", \"TestValue\", \"Test\", \"fromDate\", \"toDate\"]\r\n\r\n\r\n            }\r\n        ];\r\n\r\n\r\n\r\n        if (this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"Reschedule\") {\r\n            if (this.state.selectedRecord.ninstrumentcatcode && this.state.selectedRecord.ninstrumentcatcode.value === transactionStatus.NA) {\r\n                this.validationColumnList = [\r\n                    { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                   { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"duserblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                   { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"suserholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                   { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"nuserperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n                ]\r\n            } else {\r\n                this.validationColumnList = [\r\n                    { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                   { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"duserblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                   { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"suserholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                   { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"nuserperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                   { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"ninstrumentcatcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                   { \"idsName\": \"IDS_INSTRUMENTID\", \"dataField\": \"ninstrumentcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                   { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"dinstblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                   { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"sinstrumentholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                   { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"ninstrumentperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n                ]\r\n            }\r\n        } else if(this.props.Login.operation === \"AllotJobCalendar\"){\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            ]\r\n        }\r\n        \r\n        else if (this.props.Login.operation === \"AllotAnotherUser\") {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_STARTDATETIME\", \"dataField\": \"duserblockfromdatetime\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_HOLDDURATION\", \"dataField\": \"suserholdduration\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_PERIOD\", \"dataField\": \"nuserperiodcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n            ]\r\n        }\r\n\r\n        const mandatoryFields = [];\r\n        if (this.validationColumnList && this.validationColumnList.length > 0) {\r\n            this.validationColumnList.forEach(item => item.mandatory === true ?\r\n                mandatoryFields.push(item) : \"\"\r\n            );\r\n        }\r\n\r\n        let breadCrumbData = [];\r\n        breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            },\r\n            {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_TESTSTATUS\",\r\n                \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.stransdisplaystatus || \"NA\" :\r\n                    this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.stransdisplaystatus || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_SECTION\",\r\n                \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n                    this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_TEST\",\r\n                \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n                    this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n            }\r\n\r\n        ];\r\n       \r\n\r\n        const testDesign = <ContentPanel>\r\n            <Card>\r\n                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                    <span style={{ display: \"inline-block\" }}>\r\n                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                    </span>\r\n\r\n\r\n                </Card.Header>\r\n                <Card.Body className='p-0 sm-pager' >\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={94}\r\n                        masterList={this.props.Login.masterData.searchedTest || JA_TestList}\r\n                        selectedMaster={this.props.Login.masterData.JASelectedTest}\r\n                        primaryKeyField=\"ntransactiontestcode\"\r\n                        getMasterDetail={(event, status) => { this.props.getTestChildTabDetailJobAllocation(event, status); this.changePropertyView(2, event, \"click\") }}\r\n                        inputParam={testChildGetJAParam}\r\n                        additionalParam={[]}\r\n                        mainField=\"stestsynonym\"\r\n                        selectedListName=\"JASelectedTest\"\r\n                        objectName=\"test\"\r\n                        listName=\"IDS_TEST\"\r\n                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        showStatusLink={true}\r\n                        subFieldsLabel={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        needMultiSelect={true}\r\n                        subFields={this.state.testListColumns || []}\r\n                        moreField={this.state.testMoreField}\r\n                        needValidation={false}\r\n                        showStatusName={true}\r\n                        needFilter={false}\r\n                        filterColumnData={this.props.filterTransactionList}\r\n                        searchListName=\"searchedTest\"\r\n                        searchRef={this.searchTestRef}\r\n                        filterParam={this.state.filterTestParam}\r\n                        selectionField=\"ntransactionstatus\"\r\n                        selectionFieldName=\"stransdisplaystatus\"\r\n                        childTabsKey={[\"TestView\", \"RegistrationTestComment\", \"RegistrationTestAttachment\"]}\r\n                        handlePageChange={this.handleTestPageChange}\r\n                        buttonCount={5}\r\n                        skip={this.state.testskip}\r\n                        take={this.state.testtake}\r\n                        showMoreResetList={true}\r\n                        showMoreResetListName=\"JA_SAMPLE\"\r\n                        selectionList={this.props.Login.masterData.realFilterStatusValue\r\n                            && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus\r\n                            === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                        selectionColorField=\"scolorhexcode\"\r\n                        commonActions={\r\n                            <>\r\n                                <ProductList className=\"d-flex product-category float-right\">\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ALLOTJOB\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(allotId) === -1}\r\n                                        onClick={() => this.AllotJobStatus(allotId, this.state.testskip, this.state.testtake,1)} >\r\n                                        <Allotted className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ALLOTJOBINCALENDER\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(allotCalenderId) === -1}\r\n                                        onClick={() => this.AllotJobStatus(allotCalenderId, this.state.testskip, this.state.testtake,2)} >\r\n                                        <FontAwesomeIcon icon={faCalendar} />\r\n                                    </Nav.Link>\r\n\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ALLOTANOTHERUSER\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(anotherUserId) === -1}\r\n                                        onClick={() => this.AllotAnotherUserStatus(anotherUserId, this.state.testskip, this.state.testtake)} >\r\n                                        <AnotherUser className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n                                    </Nav.Link>\r\n\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_RESCHEDULE\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(rescheduleId) === -1}\r\n                                        onClick={() => this.RescheduleStatus(rescheduleId, this.state.testskip, this.state.testtake)} >\r\n                                        <FontAwesomeIcon icon={faClock} />\r\n                                    </Nav.Link>\r\n\r\n\r\n\r\n                                    <Nav.Link\r\n                                        className=\"btn btn-circle outline-grey ml-2\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                        hidden={this.state.userRoleControlRights.indexOf(cancelId) === -1}\r\n                                        onClick={() => this.CancelStatus(cancelId, this.state.testskip, this.state.testtake)} >\r\n                                        <Reject className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                    </Nav.Link>\r\n                                </ProductList>\r\n\r\n                            </>\r\n                        }\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </ContentPanel>\r\n\r\n        let mainDesign = \"\";\r\n        if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\r\n            mainDesign = <SplitterLayout borderColor=\"#999\"\r\n                primaryIndex={1} percentage={true}\r\n                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                primaryMinSize={40}\r\n                secondaryMinSize={30}\r\n            >\r\n                <Card >\r\n                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                        </span>\r\n                    </Card.Header>\r\n                    <Card.Body className='p-0 sm-pager'>\r\n                        <TransactionListMasterJsonView\r\n                            cardHead={94}\r\n                            masterList={this.props.Login.masterData.searchedSubSample || JA_SubSampleList}\r\n                            selectedMaster={this.props.Login.masterData.JASelectedSubSample}\r\n                            primaryKeyField=\"ntransactionsamplecode\"\r\n                            //secondaryKeyField = \"nsectioncode\"\r\n                            getMasterDetail={(event, status) => { this.props.getJobAllocationTestDetail(event, status); this.state.enableAutoClick && this.changePropertyView(2, event, \"click\") }}\r\n                            inputParam={testGetJAParam}\r\n                            filterColumnData={this.props.filterTransactionList}\r\n                            searchListName=\"searchedSubSample\"\r\n                            secondarySelection = {this.props.Login.secondarySelection||\"\"}\r\n                            searchRef={this.searchSubSampleRef}\r\n                            filterParam={{\r\n                                ...this.state.filterSubSampleParam,\r\n                                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }]\r\n                            }}\r\n                            additionalParam={['napprovalversioncode']}\r\n                            showStatusLink={true}\r\n                            showStatusName={false}\r\n                            statusFieldName=\"stransdisplaystatus\"\r\n                            statusField=\"ntransactionstatus\"\r\n                            mainField=\"ssamplearno\"\r\n                            selectedListName=\"JASelectedSubSample\"\r\n                            objectName=\"subsample\"\r\n                            listName=\"IDS_SUBSAMPLE\"\r\n                            needValidation={true}\r\n                            validationKey=\"napprovalversioncode\"\r\n                            validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                            subFields={this.state.DynamicSubSampleColumns}\r\n                            skip={this.state.subsampleskip}\r\n                            take={this.state.subsampletake}\r\n                            pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                            //selectionField=\"ntransactionstatus\"\r\n                            //selectionFieldName=\"stransdisplaystatus\"\r\n                            needMultiSelect={true}\r\n                            //selectionColorField=\"scolorhexcode\"\r\n                            subFieldsLabel={false}\r\n                            handlePageChange={this.handleSubSamplePageChange}\r\n                            selectionList={this.props.Login.masterData.realFilterStatusValue\r\n                                && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                            childTabsKey={[\r\n                                // \"RegistrationAttachment\", \r\n                                \"JA_TEST\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]}\r\n                            needFilter={false}                         \r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n                {testDesign}\r\n            </SplitterLayout>\r\n        } else {\r\n            mainDesign = testDesign\r\n        }\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    <Row noGutters={true} className=\"toolbar-top\">\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                <div className={`tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"}`}>\r\n\r\n                                    <SplitterLayout borderColor=\"#999\"\r\n                                        primaryIndex={1} percentage={true}\r\n                                        secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                        primaryMinSize={30}\r\n                                        secondaryMinSize={20}\r\n                                    >\r\n                                        <div className='toolbar-top-inner'>\r\n                                            <TransactionListMasterJsonView\r\n                                                listMasterShowIcon={1}\r\n                                                clickIconGroup={true}\r\n                                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                                masterList={this.props.Login.masterData.searchedSample || JA_SampleList}\r\n                                                selectedMaster={this.props.Login.masterData.JASelectedSample}\r\n                                                primaryKeyField=\"nregistrationsectioncode\"\r\n                                                filterColumnData={this.props.filterTransactionList}\r\n                                                getMasterDetail={(event, status) => { this.props.getJobAllocationSubSampleDetail(event, status); this.state.enableAutoClick && this.changePropertyView(4, event, \"click\") }}\r\n                                                inputParam={subSampleGetJAParam}\r\n                                                selectionList={this.props.Login.masterData.realFilterStatusValue\r\n                                                    && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === transactionStatus.ALL ? this.props.Login.masterData.FilterStatus : []}\r\n                                                selectionColorField=\"scolorhexcode\"\r\n                                                mainField={\"sarno\"}\r\n                                                showStatusLink={true}\r\n                                                showStatusName={true}\r\n                                                statusFieldName=\"stransdisplaystatus\"\r\n                                                statusField=\"ntransactionstatus\"\r\n                                                selectedListName=\"JASelectedSample\"\r\n                                                searchListName=\"searchedSample\"\r\n                                                searchRef={this.searchSampleRef}\r\n                                                objectName=\"sample\"\r\n                                                listName=\"IDS_SAMPLE\"\r\n                                                selectionField=\"ntransactionstatus\"\r\n                                                selectionFieldName=\"stransdisplaystatus\"\r\n                                                showFilter={this.props.Login.showFilter}\r\n                                                openFilter={this.openFilter}\r\n                                                closeFilter={this.closeFilter}\r\n                                                onFilterSubmit={this.onFilterSubmit}\r\n                                                subFields={this.state.DynamicSampleColumns}\r\n                                                needMultiSelect={true}\r\n                                                showStatusBlink={true}\r\n                                                filterParam={{\r\n                                                    ...this.state.filterSampleParam,\r\n                                                    childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" },\r\n                                                    { ref: this.searchTestRef, childFilteredListName: \"searchedTest\" }],\r\n                                                }}\r\n                                                subFieldsLabel={false}\r\n                                                handlePageChange={this.handleSamplePageChange}\r\n                                                skip={this.state.sampleskip}\r\n                                                take={this.state.sampletake}\r\n                                                childTabsKey={[\"RegistrationAttachment\", \"RegistrationComment\", \"JA_SUBSAMPLE\",\r\n                                                    \"JA_TEST\", \"RegistrationSampleAttachment\", \"RegistrationSampleComment\", \"JASelectedSubSample\", \"JASelectedTest\"]}\r\n                                                needFilter={true}\r\n                                                commonActions={\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RECEIVEINLAB\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(receiveId) === -1}\r\n                                                            onClick={() => this.ReceiveinLabStatus(receiveId, this.state.sampleskip, this.state.sampletake)} >\r\n                                                            <ReceivedInLab className=\"custom_icons\" width=\"25\" height=\"30\" />\r\n                                                        </Nav.Link>\r\n\r\n                                                        <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                            data-for=\"tooltip-common-wrap\"\r\n                                                            onClick={() => this.onReload()} >\r\n                                                            <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                        </Button>\r\n                                                    </ProductList>\r\n                                                }\r\n                                                filterComponent={[\r\n                                                    {\r\n                                                        \"Sample Filter\": <JobAllocationFilter\r\n                                                            SampleType={this.state.SampletypeList || []}\r\n                                                            SampleTypeValue={this.props.Login.masterData.defaultSampleTypeValue || {}}\r\n                                                            RegType={this.state.RegistrationTypeList || []}\r\n                                                            RegTypeValue={this.props.Login.masterData.defaultRegTypeValue || {}}\r\n                                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                                            RegSubTypeValue={this.props.Login.masterData.defaultRegSubTypeValue || {}}\r\n                                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                                            ApprovalVersionValue={this.props.Login.masterData.defaultApprovalVersionValue || []}\r\n                                                            UserSection={this.state.UserSectionList || []}\r\n                                                            UserSectionValue={this.props.Login.masterData.defaultUserSectionValue || []}\r\n                                                            JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                                            Test={this.state.TestList || []}\r\n                                                            TestValue={this.props.Login.masterData.defaultTestValue || []}\r\n                                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                                            FilterStatusValue={this.props.Login.masterData.defaultFilterStatusValue || []}\r\n                                                            DynamicDesignMapping={this.state.DynamicDesignMappingList || []}\r\n                                                            DesignTemplateMappingValue={this.props.Login.masterData.defaultDesignTemplateMappingValue || []}\r\n                                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                                            onFilterComboChange={this.onFilterComboChange}\r\n                                                            handleFilterDateChange={this.handleFilterDateChange}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                                        />\r\n                                                    }\r\n                                                ]}\r\n\r\n                                            />\r\n                                        </div>\r\n                                        <div>\r\n                                            <div style={this.state.showTest === true || this.state.showSubSample === true ?\r\n                                                { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                                {mainDesign}\r\n                                            </div>\r\n                                        </div>\r\n                                    </SplitterLayout>\r\n                                </div>\r\n                                <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`} >\r\n                                    <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`} style={{ width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\" }}>\r\n                                        <span className={` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`} onClick={() => this.changePropertyViewClose(false)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                                        <div className={` vertical-tab-content-common  ${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 4 ? this.sideNavDetail(\"IDS_SAMPLEDETAILS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-common  ${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`}>\r\n                                            <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_ALLOTTEDTEST\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 8 ? this.sideNavDetail(\"IDS_ALLOTTEDTEST\") : \"\"}\r\n                                        </div>\r\n\r\n                                        <div className={` vertical-tab-content-attachment  ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_ATTACHMENTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-grid-tab  ${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 3 ? this.sideNavDetail(\"IDS_COMMENTS\") : \"\"}\r\n                                        </div>\r\n                                        {/* <div className={` vertical-tab-content-grid-tab  ${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 9 ? this.sideNavDetail(\"IDS_ANALYSTCALENDAR\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-grid-tab  ${this.state.activeTabIndex && this.state.activeTabIndex == 10 ? 'active' : \"\"}`}>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 10 ? this.sideNavDetail(\"IDS_INSTRUMENTCALENDAR\") : \"\"}\r\n                                        </div> */}\r\n\r\n                                    </div>\r\n                                    <div className='tab-head'>\r\n                                        <ul>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 4 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(4)}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_SAMPLEDETAILS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 8 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(8)}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ALLOTTEDTEST\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(2)}>\r\n                                                <FontAwesomeIcon icon={faLink} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ATTACHMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 3 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(3)}>\r\n                                                <FontAwesomeIcon icon={faComments} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            {/* <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 9 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(9)}>\r\n                                                <Analystcalendar className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ANALYSTCALENDAR\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 10 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(10)}>\r\n                                                <Instrumentcalendar className=\"custom_icons\" width=\"20\" height=\"30\" />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_INSTRUMENTCALENDAR\" })}\r\n                                                </span>\r\n                                            </li> */}\r\n\r\n                                        </ul>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_AUTOSHOW\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"Auto Click\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enableAutoClick}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enableAutoClick}\r\n                                            />\r\n                                        </span>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_POPUPNAV\" })}\r\n                                                type=\"switch\"\r\n                                                name={\"PopupNav\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enablePropertyPopup}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enablePropertyPopup}\r\n                                            />\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </ListWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        hideSave={this.props.Login.operation === \"IDS_VIEWANALYSTCALENDAR\" ? true : false}\r\n                        onSaveClick={this.onSaveClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        size={this.props.Login.operation ===\"IDS_VIEWANALYSTCALENDAR\"? \"xl\":\"lg\"}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        showSaveContinue={this.state.showSaveContinue}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ? (\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                            ) :\r\n                            //  this.state.openAnalystCalendar ?\r\n                            //     <AnalystCalenderBasedOnUser userData={this.props.Login.masterData.analystCalenderData} /> :\r\n                                this.props.Login.operation === \"AllotJobCalendar\"  ? (\r\n                                    <NewJobAlloct\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onComboChange={this.onComboChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        Technique={this.props.Login.Technique}\r\n                                        Users={this.props.Login.Users}\r\n                                        userData={this.props.Login.masterData.analystCalenderData}\r\n                                        InstrumentCategory={this.props.Login.InstrumentCategory}\r\n                                        Instrument={this.props.Login.Instrument}\r\n                                        currentTime={this.props.Login.currentTime || []}\r\n                                        operation={this.props.Login.operation}\r\n                                        inputParam={this.props.inputParam}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        selectedTest={this.props.Login.masterData.JASelectedTest}\r\n                                        parentScheduleState={this.parentScheduleState}\r\n                                      \r\n                                      \r\n\r\n                                    />\r\n                                      \r\n                                ):  this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"Reschedule\" ?\r\n                                <AddJobAllocation\r\n                                onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                Technique={this.props.Login.Technique}\r\n                                Users={this.props.Login.Users}\r\n                                UsersPeriod={this.props.Login.UsersPeriod}\r\n                                InstrumentCategory={this.props.Login.InstrumentCategory} \r\n                                Instrument={this.props.Login.Instrument}                                 \r\n                                InstrumentPeriod={this.props.Login.InstrumentPeriod}\r\n                                currentTime={this.props.Login.currentTime || []}\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                openAnalystCalendar={this.openAnalystCalendar}\r\n\r\n                            /> : this.props.Login.operation === \"AllotAnotherUser\" ? (\r\n                                    <AllotAnotherUser\r\n                                        onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onComboChange={this.onComboChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        Technique ={this.props.Login.Technique}\r\n                                        Users={this.props.Login.Users}\r\n                                        UsersPeriod={this.props.Login.UsersPeriod}\r\n                                        currentTime={this.props.Login.currentTime || []}\r\n                                        operation={this.props.Login.operation}\r\n                                        inputParam={this.props.inputParam}\r\n                                        userInfo={this.props.Login.userInfo}\r\n\r\n                                    />\r\n                                    //    ) : this.props.Login.operation ===\"ViewAnalystCalendar\" ? (\r\n                                    //         <>\r\n                                    //             <Row>\r\n                                    //                 <Col md={12}>\r\n                                    //                 <FormSelectSearch\r\n                                    //                     formLabel={this.props.intl.formatMessage({ id: \"IDS_USERS\" })}\r\n                                    //                     isSearchable={true}\r\n                                    //                     name={\"nusercode\"}\r\n                                    //                     isDisabled={false}\r\n                                    //                     placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    //                     isMandatory={true}\r\n                                    //                     isClearable={false}\r\n                                    //                     options={this.props.Login.Users}\r\n                                    //                     value = {this.state.selectedRecord[\"nusercode\"] || \"\" }\r\n                                    //                     defaultValue={this.state.selectedRecord[\"nusercode\"]}\r\n                                    //                     onChange={(event)=>this.onComboChange(event, \"nusercode\")}\r\n                                    //                     closeMenuOnSelect={true}\r\n                                    //                 />\r\n                                    //                 </Col>\r\n                                    //             </Row>\r\n\r\n                                    //             <Scheduler data={this.state.data}  defaultDate={new Date()}>\r\n                                    //                 <DayView numberOfDays={3} style={{zorder:25000}}/>\r\n                                    //                 <WeekView />\r\n                                    //                 <MonthView />\r\n\r\n                                    //             </Scheduler>\r\n\r\n                                    //             {/* <AnalystCalendar\r\n                                    //                 UserData={this.props.Login.masterData.UserData}\r\n                                    //                 operation={this.props.Login.operation}\r\n                                    //                 inputParam={this.props.inputParam}\r\n                                    //                 userInfo={this.props.Login.userInfo}\r\n\r\n                                    //             /> */}\r\n                                    //         </>                             \r\n                                    //    ): (\r\n                                ) : (\r\n                                    \"\"\r\n                                )\r\n                        }\r\n                    /> : \"\"}\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    ReceiveinLabStatus(receiveId, sampleskip, sampletake) {\r\n        let sampleList = [];\r\n        if (this.props.Login.masterData.searchedSample !== undefined) {\r\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake), \"nregistrationsectioncode\");\r\n        } else {\r\n            sampleList = this.props.Login.masterData.JA_SAMPLE && this.props.Login.masterData.JA_SAMPLE.slice(sampleskip, sampleskip + sampletake);\r\n        }\r\n        let receiveList = getSameRecordFromTwoArrays(sampleList || [], this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n        if (receiveList && receiveList.length > 0) {\r\n            let tempsection = 0;\r\n            let sectionvalue = 0;\r\n            let bflag = true;\r\n            let sampleList = this.props.Login.masterData.JASelectedSample;\r\n            sampleList.forEach((item) => {\r\n                sectionvalue = item.nsectioncode;\r\n                if (tempsection !== sectionvalue && tempsection !== 0) {\r\n                    bflag = false;\r\n                } else {\r\n                    tempsection = sectionvalue\r\n                }\r\n            });\r\n\r\n            if (bflag) {\r\n                let JASelectedSample = this.props.Login.masterData.JASelectedSample;\r\n                if (this.props.Login.masterData.JASelectedSubSample.length !== 0) {\r\n                    let JASelectedSubSample = this.props.Login.masterData.JASelectedSubSample;\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                    let arr = [];\r\n                    JASelectedSample && JASelectedSample.map((item) => {\r\n                        if (!arr.includes(item.nsectioncode)) {\r\n                            arr.push(item.nsectioncode)\r\n                        }\r\n                    }\r\n                    )\r\n                    let inputParam = {};\r\n                    let Map = {\r\n                        nflag: 3,\r\n                        ncheck: 1,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        ntransactionstatus: \"0\",\r\n                        ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\r\n                        npreregno: JASelectedSample ? JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                        ntransactionsamplecode: JASelectedSubSample ? JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\r\n                        nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\r\n                        ncontrolcode: receiveId,\r\n                        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                        checkBoxOperation: 3,\r\n                        ntype:2,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        screenName: this.props.Login.screenName,\r\n                        activeSampleTab: \"IDS_SAMPLEATTACHMENTS\",\r\n                        activeSubSampleTab: \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                        activeTestTab: \"IDS_TESTATTACHMENTS\"\r\n                    }\r\n                    inputParam = {\r\n                        inputData: Map,\r\n                        postParamList: this.postParamList,\r\n                        classUrl: \"joballocation\",\r\n                        operation: 'Create',\r\n                        methodUrl: \"ReceiveinLab\",\r\n                        action: \"receiveinlab\",\r\n\r\n                    }\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, receiveId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true,\r\n                                screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                                openModal: true,\r\n                                parentPopUpSize: 'lg',\r\n                                screenName: this.props.Login.screenName,\r\n                                operation: 'Create'\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    } else {\r\n                        this.props.ReceiveinLabStatusWise(inputParam);\r\n                    }\r\n\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSUBSAMPLESTORECEIVE\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONSAMPLES\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLES\" }));\r\n        }\r\n    }\r\n\r\n    checkRegisterSamples(sample) {\r\n        return (sample.ntransactionstatus === transactionStatus.REGISTER)\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            testListColumns, testSearchField, subsampleSearchField, sampleSearchField,\r\n            SingleItem, testItem, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            testAttachmentDataState, testCommentDataState, testViewDataState, activeTabIndex, activeTabId,\r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList, DynamicDesignMappingList, sampleskip, sampletake, subsampleskip, subsampletake, testskip, testtake, selectedFilter,\r\n            DynamicGridItem, DynamicTestGridItem, DynamicTestGridMoreField, DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns,\r\n            DynamicGridMoreField, data } = this.state;\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] }\r\n\r\n                testAttachmentDataState = dataState\r\n                testCommentDataState = dataState\r\n                testViewDataState = dataState\r\n\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n            activeTabIndex = this.props.Login.activeTabIndex;\r\n            activeTabId = this.props.Login.activeTabId;\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"stransdisplaystatus\", undefined, undefined, false);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, false);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, false);\r\n            const DynamicDesignMappingListMap = constructOptionList(this.props.Login.masterData.DynamicDesignMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", \"nsorter\", 'ascending', 'ndesigntemplatemappingcode', false);\r\n\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            DynamicDesignMappingList = DynamicDesignMappingListMap.get(\"OptionList\");\r\n\r\n            bool = true;\r\n            sampleskip = this.props.Login.sampleskip === undefined ? sampleskip : this.props.Login.sampleskip\r\n            sampletake = this.props.Login.sampletake || sampletake\r\n\r\n            subsampleskip = this.props.Login.subsampleskip === undefined ? subsampleskip : this.props.Login.subsampleskip\r\n            subsampletake = this.props.Login.subsampletake || subsampletake\r\n\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, stransdisplaystatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n\r\n            if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\r\n                testAttachmentDataState = this.props.Login.testAttachmentDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.testViewDataState && this.props.Login.testViewDataState !== previousProps.Login.testViewDataState) {\r\n                testViewDataState = this.props.Login.testViewDataState;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n\r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n            testSearchField = dynamicColumn.testListFields.testsearchfields ? dynamicColumn.testListFields.testsearchfields : [];\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n            DynamicTestGridItem = dynamicColumn.testgriditem ? dynamicColumn.testgriditem : [];\r\n            DynamicTestGridMoreField = dynamicColumn.testgridmoreitem ? dynamicColumn.testgridmoreitem : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testItem = dynamicColumn.testdisplayfields ? dynamicColumn.testdisplayfields : [];\r\n            testMoreField = dynamicColumn.testListFields.testlistmoreitems ? dynamicColumn.testListFields.testlistmoreitems : [];\r\n            testListColumns = dynamicColumn.testListFields.testlistitem ? dynamicColumn.testListFields.testlistitem : [];\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.UserData !== undefined) {\r\n            if (this.props.Login.masterData.UserData !== previousProps.Login.masterData.UserData) {\r\n                for (let i = 0; i < this.props.Login.masterData.UserData.length; i++) {\r\n                    data.push(this.props.Login.masterData.UserData[i].jsonuidata);\r\n                }\r\n                data = data.map(dataItem => ({\r\n                    start: parseAdjust(dataItem.UserStartDate),\r\n                    end: parseAdjust(dataItem.UserEndDate),\r\n                    title: dataItem.Comments\r\n\r\n                }))\r\n                bool = true;\r\n                //this.setState({data:data});\r\n            }\r\n        }\r\n\r\n        const filterSampleParam = {\r\n            inputListName: \"JA_SAMPLE\",\r\n            selectedObject: \"JASelectedSample\",\r\n            primaryKeyField: \"nregistrationsectioncode\",\r\n            fetchUrl: \"joballocation/getJobAllocationSubSampleDetails\",\r\n            isMultiSort:true,\r\n            multiSortData:[{pkey:'ntransactionsamplecode', list:'JA_SUBSAMPLE'},{pkey:'ntransactiontestcode', list:'JA_TEST'}],\r\n            sampleskip: 0,\r\n            subsampleskip: 0,\r\n            testskip: 0,\r\n            sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            fecthInputObject: {\r\n                masterData: this.props.Login.masterData,\r\n                ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                //nsectioncode: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.nsectioncode).join(\",\"),\r\n                //npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\r\n                samplesearch:1,\r\n                checkBoxOperation: 3,\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: sampleSearchField,\r\n            changeList: [\r\n                \"JA_SUBSAMPLE\", \"JA_TEST\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\",\r\n                \"JASelectedSample\", \"JASelectedSubSample\", \"JASelectedTest\"]\r\n        };\r\n\r\n        const filterSubSampleParam = {\r\n            inputListName: \"JA_SUBSAMPLE\",\r\n            selectedObject: \"JASelectedSubSample\",\r\n            primaryKeyField: \"ntransactionsamplecode\",\r\n            fetchUrl: \"joballocation/getJobAllocationTestDetails\",\r\n            isMultiSort:true,\r\n            multiSortData:[{pkey:'ntransactiontestcode', list:'JA_TEST'}],\r\n            sampleskip: this.state.sampleskip,\r\n            subsampleskip: 0,\r\n            testskip: 0,\r\n            sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            fecthInputObject: {\r\n                masterData: this.props.Login.masterData,\r\n                userinfo: this.props.Login.userInfo,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                checkBoxOperation: 3,\r\n                npreregno: this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\"),\r\n                nsectioncode: this.props.Login.masterData.JASelectedSubSample && this.props.Login.masterData.JASelectedSubSample.map(x => x.nsectioncode).join(\",\"),\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"\r\n\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: subsampleSearchField,\r\n            changeList: [\"JA_TEST\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\",\r\n                \"JASelectedSubSample\", \"JASelectedTest\"]\r\n        };\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"JA_TEST\",\r\n            selectedObject: \"JASelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),            \r\n            sampleskip: this.state.sampleskip,\r\n            subsampleskip: this.state.subsampleskip,\r\n            testskip: 0,\r\n            sampletake: this.props.Login.settings && parseInt(this.props.Login.settings[3]),\r\n            subsampletake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12] ? this.props.Login.settings[12] : 10,\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData && this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue\r\n                    && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue\r\n                    && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue\r\n                    && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                checkBoxOperation: 3,\r\n                activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: testSearchField,\r\n            changeList: [\"RegistrationTestAttachment\", \"RegistrationTestComment\"]\r\n\r\n        }\r\n\r\n\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                testListColumns, testSearchField, subsampleSearchField, sampleSearchField,\r\n                SingleItem, testItem, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                testAttachmentDataState, testCommentDataState, testViewDataState, activeTabIndex, activeTabId,\r\n                selectedRecord, SampletypeList, RegistrationTypeList,\r\n                RegistrationSubTypeList, FilterStatusList,\r\n                ConfigVersionList, UserSectionList, TestList, DynamicDesignMappingList,\r\n                sampleskip, sampletake, subsampleskip, subsampletake, testskip, testtake, selectedFilter,\r\n                DynamicGridItem, DynamicTestGridItem, DynamicTestGridMoreField, DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns,\r\n                DynamicGridMoreField, data, filterTestParam, filterSubSampleParam, filterSampleParam\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSamplePageChange = e => {\r\n        this.setState({\r\n            sampleskip: e.skip,\r\n            sampletake: e.take\r\n        });\r\n    };\r\n\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({\r\n            subsampleskip: e.skip,\r\n            subsampletake: e.take\r\n        });\r\n    }\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        const tabseqno = tabProps.tabSequence;\r\n        if (tabseqno == SideBarSeqno.TEST) {\r\n            if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\r\n                let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n\r\n                \r\n                   if (activeTestTab === \"IDS_TESTVIEW\") {\r\n                    let arr=[];\r\n                    JASelectedTest && JASelectedTest.map((item) => {\r\n                        if (!arr.includes(item.ntransactionstatus)) {\r\n                            arr.push(item.ntransactionstatus)\r\n                        }\r\n                    });\r\n                    let transstatus= arr.map(nsectioncode => nsectioncode).join(\",\");\r\n                    if (transstatus.includes(\"20\")) {\r\n                        let inputData = {\r\n                            masterData: this.props.Login.masterData,\r\n                            JASelectedTest: JASelectedTest,\r\n                            ntransactiontestcode: this.props.Login.masterData.JASelectedTest ?\r\n                                String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                            npreregno: this.props.Login.masterData.JASelectedSample ?\r\n                                this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                            userinfo: this.props.Login.userInfo,\r\n                            activeTestTab: activeTestTab,\r\n                            screenName: activeTestTab,\r\n                            testCommentDataState: this.state.testCommentDataState,\r\n                            testAttachmentDataState: this.state.testAttachmentDataState,\r\n                            testViewDataState: this.state.testViewDataState,\r\n                            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                            activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\r\n                        }\r\n                        this.props.getTestChildTabDetailJobAllocation(inputData, true)\r\n                    } else {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLOTTEST\" }))\r\n                    }\r\n                } else {\r\n                    let inputData = {\r\n                        masterData: this.props.Login.masterData,\r\n                        JASelectedTest: JASelectedTest,\r\n                        ntransactiontestcode: this.props.Login.masterData.JASelectedTest ?\r\n                            String(this.props.Login.masterData.JASelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                        npreregno: this.props.Login.masterData.JASelectedSample ?\r\n                            this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                        userinfo: this.props.Login.userInfo,\r\n                        activeTestTab: activeTestTab,\r\n                        screenName: activeTestTab,\r\n                        testCommentDataState: this.state.testCommentDataState,\r\n                        testAttachmentDataState: this.state.testAttachmentDataState,\r\n                        testViewDataState: this.state.testViewDataState,\r\n                        activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                        activeTabId: tabProps.activeTabId ? tabProps.activeTabId : this.state.activeTabId\r\n                    }\r\n                    this.props.getTestChildTabDetailJobAllocation(inputData, true)\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n        else if (tabseqno == SideBarSeqno.SUBSAMPLE) {\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSubSample: this.props.Login.masterData.JASelectedSubSample,\r\n                    ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSubSampleTab: activeTestTab,\r\n                    subsampleCommentDataState: this.state.subsampleCommentDataState,\r\n                    subsampleAttachmentDataState: this.state.subsampleAttachmentDataState,\r\n                }\r\n                this.props.getSubSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (activeTestTab !== this.props.Login.activeTestTab) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    selectedSample: this.props.Login.masterData.JASelectedSample,\r\n                    npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: activeTestTab,\r\n                    activeSampleTab: activeTestTab\r\n                }\r\n                this.props.getSampleChildTabDetail(inputData)\r\n            }\r\n        }\r\n    }\r\n\r\n    changePropertyViewClose = (id) => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n                activeTabId: id\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    changePropertyView = (index, event, status) => {\r\n\r\n        let id = false;\r\n        if (event && event.ntransactiontestcode) {\r\n            id = event.ntransactiontestcode\r\n        } else if (event && event.ntransactionsamplecode) {\r\n            id = event.ntransactionsamplecode\r\n        } else if (event && event.npreregno) {\r\n            id = event.npreregno\r\n        }\r\n\r\n        let activeTabIndex\r\n        let activeTabId\r\n        if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n            activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n        }\r\n        if (status != \"click\") {\r\n            if (index === SideBarTabIndex.ATTACHMENTS) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTATTACHMENTS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else if (index === SideBarTabIndex.COMMENTS) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTCOMMENTS\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else if (index === SideBarTabIndex.TESTVIEW) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_TESTVIEW\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            } else if (index === SideBarTabIndex.ANALYSTCALENDAR) {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: \"IDS_ANALYSTCALENDAR\",\r\n                    activeTabIndex,\r\n                    activeTabId\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n            else {\r\n                if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            activeTabIndex: this.state.activeTabIndex !== index ? index : id ? index : false,\r\n                            activeTabId: id\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    sideNavDetail = (screenName) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        return (\r\n            screenName === \"IDS_ATTACHMENTS\" ?\r\n                <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\"} tabDetail={this.attachmentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                : screenName === \"IDS_COMMENTS\" ?\r\n                    <CustomTabs activeKey={this.props.Login.activeTestTab || \"IDS_TESTCOMMENTS\"} tabDetail={this.commentTabDetail()} destroyInactiveTabPane={true} onTabChange={this.onTabChange} />\r\n                    : screenName === \"IDS_SAMPLEDETAILS\" ?\r\n                        this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length === 1 ?\r\n                            <SampleInfoView\r\n                                data={this.props.Login.masterData.JASelectedSample && this.props.Login.masterData.JASelectedSample.length > 0\r\n                                    ? this.props.Login.masterData.JASelectedSample[this.props.Login.masterData.JASelectedSample.length - 1] : {}}\r\n                                SingleItem={this.state.SingleItem}\r\n                                screenName=\"IDS_SAMPLEINFO\"\r\n                                userInfo={this.props.Login.userInfo}\r\n                            /> :\r\n                            <SampleInfoGrid\r\n                                selectedSample={this.props.Login.masterData.JASelectedSample}\r\n                                dataState={this.state.sampleGridDataState}\r\n                                dataStateChange={this.sampleGridDataStateChange}\r\n                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                screenName=\"IDS_SAMPLEGRID\"\r\n                                expandField=\"expanded\"\r\n                                jsonField={\"jsondata\"}\r\n                            />\r\n                        : screenName === \"IDS_ALLOTTEDTEST\" ?\r\n                                    \r\n                            this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length === 1 ?\r\n                                <SampleInfoView\r\n                                    data={this.props.Login.masterData.TestView && this.props.Login.masterData.TestView.length > 0\r\n                                        ? this.props.Login.masterData.TestView[this.props.Login.masterData.TestView.length - 1] : {}}\r\n                                    SingleItem={this.state.testItem}\r\n                                    screenName=\"IDS_TESTVIEW\"\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                /> :\r\n                                <SampleInfoGrid\r\n                                    primaryKeyField={\"ntransactiontestcode\"}\r\n                                    selectedSample={this.props.Login.masterData.TestView}\r\n                                    dataState={this.state.testGridDataState}\r\n                                    dataStateChange={this.testGridDataStateChange}\r\n                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n                                    detailedFieldList={this.gridfillingColumn(this.state.DynamicTestGridMoreField) || []}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    screenName=\"IDS_TESTGRID\"\r\n                                    expandField=\"expanded\"\r\n                                    jsonField={\"jsondata\"}\r\n                                />\r\n                            // : screenName === \"IDS_ANALYSTCALENDAR\" ?\r\n                            //     <Scheduler data={this.state.data}  defaultDate={new Date()}>\r\n                            //         <DayView numberOfDays={3} />\r\n                            //         <WeekView />\r\n                            //         <MonthView />   \r\n                            //     </Scheduler>        \r\n                            : \"\"\r\n        )\r\n    }\r\n\r\n    attachmentTabDetail = () => {\r\n        const attachmentTabMap = new Map();\r\n        let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let { testskip, testtake, subsampleskip, subsampletake } = this.state\r\n        let testList = this.props.Login.masterData.JA_TEST || [];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ?\r\n            this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n\r\n        attachmentTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n            tabSequence={SideBarSeqno.TEST}\r\n            screenName=\"IDS_TESTATTACHMENTS\"\r\n            selectedMaster=\"JASelectedTest\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n            attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            addName={\"AddTestAttachment\"}\r\n            editName={\"EditTestAttachment\"}\r\n            deleteName={\"DeleteTestAttachment\"}\r\n            viewName={\"ViewTestAttachment\"}\r\n            methodUrl={\"TestAttachment\"}\r\n            nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n            subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"dcreateddate\" }]}\r\n            userInfo={this.props.Login.userInfo}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestAttachment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTATTACHMENTS\",\r\n                masterList: selectedTestList\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n        />)\r\n\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            attachmentTabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n                tabSequence={SideBarSeqno.SUBSAMPLE}\r\n                screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                selectedMaster=\"JASelectedSubSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                masterList={this.props.Login.masterData.JASelectedSubSample}\r\n                masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                viewFile={this.props.viewAttachment}\r\n                addName={\"AddSubSampleAttachment\"}\r\n                editName={\"EditSubSampleAttachment\"}\r\n                deleteName={\"DeleteSubSampleAttachment\"}\r\n                viewName={\"ViewSubSampleAttachment\"}\r\n                methodUrl={\"SubSampleAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n                take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SubSampleAttachment\",\r\n                        ntransactionsamplecode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.JA_SUBSAMPLE || []\r\n\r\n                }}\r\n                selectedListName=\"IDS_SUBSAMPLE\"\r\n                displayName=\"ssamplearno\"\r\n            />)\r\n        attachmentTabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                tabSequence={SideBarSeqno.SAMPLE}\r\n                selectedMaster=\"JASelectedSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={this.props.Login.masterData.JASelectedSample}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.JASelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_SAMPLE\"\r\n                displayName=\"sarno\"\r\n            />)\r\n        return attachmentTabMap;\r\n    }\r\n\r\n\r\n    commentTabDetail = () => {\r\n        const commentTabMap = new Map();\r\n        let { testskip, testtake, subsampleskip, subsampletake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.JA_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        let npreregno = this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        const ntransactionsamplecode = this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        let subsampleList = this.props.Login.masterData.JA_SUBSAMPLE || [];\r\n        subsampleList = subsampleList.slice(subsampleskip, subsampleskip + subsampletake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n\r\n        commentTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n            screenName=\"IDS_TESTCOMMENTS\"\r\n            tabSequence={SideBarSeqno.TEST}\r\n            selectedMaster={selectedTestList}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterList={selectedTestList}\r\n            masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n            addName={\"AddTestComment\"}\r\n            editName={\"EditTestComment\"}\r\n            deleteName={\"DeleteTestComment\"}\r\n            methodUrl={\"TestComment\"}\r\n            isTestComment={false}\r\n            primaryKeyField={\"ntestcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            masterData={this.props.Login.masterData}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"TestComment\",\r\n                ntransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_TESTCOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: selectedTestList,\r\n                ncontrolCode: editTestCommentsId\r\n            }}\r\n            selectedListName=\"IDS_TESTS\"\r\n            displayName=\"stestsynonym\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n        this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n            commentTabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n                screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n                tabSequence={SideBarSeqno.SUBSAMPLE}\r\n                onSaveClick={this.onCommentsSaveClick}\r\n                selectedMaster=\"JASelectedSubSample\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n                fetchRecord={this.props.getCommentsCombo}\r\n                addName={\"AddSubSampleComment\"}\r\n                editName={\"EditSubSampleComment\"}\r\n                deleteName={\"DeleteSubSampleComment\"}\r\n                methodUrl={\"SubSampleComment\"}\r\n                masterData={this.props.Login.masterData}\r\n                isTestComment={false}\r\n                masterList={this.props.Login.masterData.JASelectedSubSample}\r\n                masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n                primaryKeyField={\"nsamplecommentcode\"}\r\n                dataState={this.state.subsampleCommentDataState}\r\n                dataStateChange={this.subsampleDataStateChange}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SubSampleComment\",\r\n                        ntransactionsamplecode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                    operation: \"update\",\r\n                    masterList: this.props.Login.masterData.JA_SUBSAMPLE || [],\r\n                    ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n                }}\r\n                selectedListName=\"IDS_SUBSAMPLE\"\r\n                displayName=\"ssamplearno\"\r\n                selectedId={this.props.Login.selectedId || null}\r\n            />)\r\n        commentTabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            tabSequence={SideBarSeqno.SAMPLE}\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"JASelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            masterData={this.props.Login.masterData}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.JASelectedSample}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.sampleCommentDataState}\r\n            dataStateChange={this.sampleDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.JASelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SAMPLE\"\r\n            displayName=\"sarno\"\r\n            selectedId={this.props.Login.selectedId || null}\r\n        />)\r\n\r\n        return commentTabMap;\r\n    }\r\n\r\n    testDataStateChange = (event) => {\r\n        switch (this.props.Login.activeTestTab) {\r\n\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTVIEW\":\r\n                this.setState({\r\n                    testViewDataState: event.testViewDataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    subsampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSubSampleTab) {\r\n\r\n            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                this.setState({\r\n                    subsampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    subsampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    subsampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n\r\n            case \"IDS_SAMPLECOMMENTS\":\r\n                this.setState({\r\n                    sampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    sampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    testGridDataStateChange = (event) => {\r\n        this.setState({\r\n            testGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    onInputSwitchOnChange = (event) => {\r\n        if (event.target.name == \"PopupNav\") {\r\n            this.setState({\r\n                enablePropertyPopup: !this.state.enablePropertyPopup\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                enableAutoClick: !this.state.enableAutoClick\r\n            })\r\n        }\r\n    }\r\n\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode] || \"-\", \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    onSampleTabChange = (tabProps) => {\r\n        const activeSampleTab = tabProps.screenName;\r\n        if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                JASelectedSample: this.props.Login.masterData.JASelectedSample,\r\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSampleTab,\r\n                activeSampleTab\r\n            }\r\n            this.props.getSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    onSubSampleTabChange = (tabProps) => {\r\n        const activeSubSampleTab = tabProps.screenName;\r\n        if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                JASelectedSubSample: this.props.Login.masterData.JASelectedSubSample,\r\n                ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSubSampleTab,\r\n                activeSubSampleTab,\r\n                subsampleAttachmentDataState: this.state.subsampleAttachmentDataState,\r\n                subSampleCommentDataState: this.state.subsampleCommentDataState,\r\n            }\r\n            this.props.getSubSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    onTestTabChange = (tabProps) => {\r\n        const activeTestTab = tabProps.screenName;\r\n        if (activeTestTab !== this.props.Login.activeTestTab) {\r\n            if (this.props.Login.masterData.JASelectedTest && this.props.Login.masterData.JASelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(test => test.ntransactiontestcode).join(\",\").toString() : \"\",\r\n                    npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(preregno => preregno.npreregno).join(\",\").toString() : \"\",\r\n                    JASelectedTest: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest : \"\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab: activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                }\r\n                this.props.getTestChildTabDetailJobAllocation(inputData, true);\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake, sampleskip, sampletake } = this.state\r\n        let testList = [...this.props.Login.masterData.JA_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        let sampleList = [...this.props.Login.masterData.JA_SAMPLE];\r\n        sampleList = sampleList.slice(sampleskip, sampleskip + sampletake);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\r\n        } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n        }\r\n\r\n        else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.JASelectedSubSample);\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n        }\r\n    }\r\n\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake } = this.state\r\n        let testList = [...this.props.Login.masterData.JA_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.JASelectedTest ? this.props.Login.masterData.JASelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n        }\r\n        if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n                sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake), \"npreregno\");\r\n            } else {\r\n                sampleList = this.props.Login.masterData.JA_SUBSAMPLE.slice(this.state.subsampleskip, this.state.subsampleskip + this.state.subsampletake);\r\n            }\r\n            let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSubSample, \"ntransactionsamplecode\");\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactionsamplecode: this.props.Login.masterData.JASelectedSubSample ? this.props.Login.masterData.JASelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleComments(saveParam, acceptList);\r\n        }\r\n\r\n        if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\r\n            let sampleList = [];\r\n            if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake), \"npreregno\");\r\n            } else {\r\n                sampleList = this.props.Login.masterData.JA_SAMPLE.slice(this.state.sampleskip, this.state.sampleskip + this.state.sampletake);\r\n            }\r\n            let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.JASelectedSample, \"nregistrationsectioncode\");\r\n\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                npreregno: this.props.Login.masterData.JASelectedSample ? this.props.Login.masterData.JASelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSampleComments(saveParam, acceptList);\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        defaultSampleTypeValue: comboData.item\r\n                    };\r\n                    this.props.getRegTypeJobAllocation(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultRegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        defaultRegTypeValue: comboData.item\r\n\r\n\r\n                    }\r\n                    this.props.getRegSubTypeJobAllocation(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nneedtemplatebasedflow: comboData.item.nneedtemplatebasedflow,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            defaultRegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getAppConfigVersionJobAllocation(inputParamData)\r\n                }\r\n            } else if (fieldName === 'napprovalconfigversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) {\r\n\r\n                    inputParamData = {\r\n                        nflag: 5,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalconfigversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, defaultApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus.toString(),\r\n                    }\r\n                    this.props.getDesignTemplateJobAllocation(inputParamData)\r\n\r\n                }\r\n            } else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultUserSectionValue.nsectioncode) {\r\n                    inputParamData = {\r\n                        nflag: 6,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        nsectioncode: comboData.value === 0 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value.toString(),\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, defaultUserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus.toString(),\r\n                    }\r\n\r\n                    this.props.getSectionJobAllocation(inputParamData);\r\n                }\r\n            } else if (fieldName === 'ntransactionstatus') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\r\n\r\n                    inputParamData = {\r\n                        nflag: 7,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalconfigversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, defaultFilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        ntransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value.toString()\r\n\r\n                    }\r\n\r\n                    this.props.getFilterStatusJobAllocation(inputParamData);\r\n                }\r\n            } else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultTestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, defaultTestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            } else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                if (comboData.value !== this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) {\r\n                    let masterData = { ...this.props.Login.masterData, defaultDesignTemplateMappingValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            } else {\r\n                if (comboData.value !== this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) {\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.defaultRegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.defaultUserSectionValue.nsectioncode,\r\n                    }\r\n\r\n                    this.props.getTestStatusJobAllocation(inputParamData);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleFilterDateChange = (dateName, dateValue) => {\r\n\r\n\r\n        let fromdate = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let todate = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, todate, this.props.Login.userInfo)\r\n            fromdate = obj.fromDate\r\n            todate = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(fromdate, dateValue, this.props.Login.userInfo)\r\n            fromdate = obj.fromDate\r\n            todate = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.defaultRegTypeValue && this.props.Login.masterData.defaultRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedtemplatebasedflow,\r\n                fromdate: String(fromdate),\r\n                todate: String(todate),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getAppConfigVersionJobAllocation(inputParam)\r\n    }\r\n\r\n    onReload = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n\r\n        let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n\r\n        let defaultSampleTypeValue = this.props.Login.masterData.realSampleTypeValue\r\n        let defaultRegTypeValue = this.props.Login.masterData.realRegTypeValue\r\n        let defaultRegSubTypeValue = this.props.Login.masterData.realRegSubTypeValue\r\n        let defaultFilterStatusValue = this.props.Login.masterData.realFilterStatusValue\r\n        let defaultApprovalVersionValue = this.props.Login.masterData.realApprovalVersionValue\r\n        let defaultUserSectionValue = this.props.Login.masterData.realUserSectionValue\r\n        let defaultTestValue = this.props.Login.masterData.realTestValue\r\n        let defaultDesignTemplateMappingValue = this.props.Login.masterData.realDesignTemplateMappingValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, defaultSampleTypeValue, defaultRegTypeValue, defaultRegSubTypeValue, defaultFilterStatusValue, defaultApprovalVersionValue, defaultUserSectionValue, defaultTestValue, defaultDesignTemplateMappingValue }\r\n        let inputData = {\r\n            nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            checkBoxOperation: 3,\r\n            //ntype: 2\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && defaultFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== undefined) {\r\n\r\n            inputData['fromdate'] = obj.fromDate;\r\n            inputData['todate'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                sampleskip: this.state.sampleskip,\r\n                sampletake: this.state.sampletake,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                testAttachmentDataState: this.state.testAttachmentDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                testViewDataState: this.state.testViewDataState\r\n\r\n            }\r\n            this.props.getJobAllcationFilterSubmit(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n\r\n        let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n\r\n        let realSampleTypeValue = this.props.Login.masterData.defaultSampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.defaultRegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.defaultRegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.defaultFilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.defaultApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.defaultUserSectionValue\r\n        let realTestValue = this.props.Login.masterData.defaultTestValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.defaultDesignTemplateMappingValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue }\r\n        let inputData = {\r\n            nsampletypecode: (this.props.Login.masterData.defaultSampleTypeValue && this.props.Login.masterData.defaultSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.defaultRegTypeValue && this.props.Login.masterData.defaultRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.defaultFilterStatusValue && this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.defaultFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.defaultApprovalVersionValue ? this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.defaultApprovalVersionValue && this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.defaultApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.defaultUserSectionValue ? this.props.Login.masterData.defaultUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.defaultUserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.defaultTestValue ? this.props.Login.masterData.defaultTestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.defaultRegSubTypeValue && this.props.Login.masterData.defaultRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.defaultDesignTemplateMappingValue && this.props.Login.masterData.defaultDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            checkBoxOperation: 3,\r\n            //ntype: 2\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.stransdisplaystatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== undefined) {\r\n\r\n            inputData['fromdate'] = obj.fromDate;\r\n            inputData['todate'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                testAttachmentDataState: this.state.testAttachmentDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                testViewDataState: this.state.testViewDataState\r\n\r\n            }\r\n            this.props.getJobAllcationFilterSubmit(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    AllotJobStatus(allotId, testskip, testtake,type) {\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST\r\n                && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let allotList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if (allotList && allotList.length > 0) {\r\n            let testList = this.props.Login.masterData.JASelectedTest;\r\n\r\n            let tempsection = 0;\r\n            let sectionvalue = 0;\r\n            let sectionflag = true;\r\n            testList.forEach((item) => {\r\n                sectionvalue = item.nsectioncode;\r\n                if (sectionvalue !== tempsection && tempsection !== 0) {\r\n                    sectionflag = false;\r\n                } else {\r\n                    tempsection = sectionvalue;\r\n                }\r\n            });\r\n\r\n            let tempinstrument = 0;\r\n            let instrumentvalue = 0;\r\n            let instrumentcategoryflag = true;\r\n            testList.forEach((item) => {\r\n                instrumentvalue = item.ninstrumentcatcode;\r\n                if (instrumentvalue !== tempinstrument && tempinstrument !== 0) {\r\n                    instrumentcategoryflag = false;\r\n                } else {\r\n                    tempinstrument = instrumentvalue;\r\n                }\r\n            });\r\n\r\n\r\n            if (sectionflag) {\r\n                if (instrumentcategoryflag) {\r\n                    let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n\r\n                    let arr = [];\r\n                    JASelectedTest && JASelectedTest.map((item) => {\r\n                        if (!arr.includes(item.nsectioncode)) {\r\n                            arr.push(item.nsectioncode)\r\n                        }\r\n                    }\r\n                    )\r\n\r\n                    let inputParam = {};\r\n                    let Map = {\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\r\n                        //nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                        nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\r\n                        ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\r\n                        npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                        ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\r\n                        transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                        ntransactiontestcode: 0,\r\n                        ncontrolcode: allotId,\r\n                        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                        checkBoxOperation: 3,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        operation: type===1?'AllotJob':'AllotJobCalendar'\r\n                    }\r\n                    inputParam = {\r\n                        inputData: Map,\r\n                    }\r\n                    this.props.getAllottedTestWise(inputParam);\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMEINSTRUMENTCATEGORYTEST\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONTEST\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n        }\r\n    }\r\n\r\n    AllotAnotherUserStatus(anotherUserId, testskip, testtake) {\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST\r\n                && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let anotherUserList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if (anotherUserList && anotherUserList.length === 1) {\r\n\r\n            let tempsection = 0;\r\n            let sectionvalue = 0;\r\n            let bflag = true;\r\n\r\n            let testList = this.props.Login.masterData.JASelectedTest;\r\n            testList.forEach((item) => {\r\n                sectionvalue = item.nsectioncode;\r\n\r\n                if (sectionvalue !== tempsection && tempsection !== 0) {\r\n                    bflag = false;\r\n                } else {\r\n                    tempsection = sectionvalue;\r\n                }\r\n            });\r\n\r\n\r\n\r\n            if (bflag) {\r\n                let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                let arr = [];\r\n                JASelectedTest && JASelectedTest.map((item) => {\r\n                    if (!arr.includes(item.nsectioncode)) {\r\n                        arr.push(item.nsectioncode)\r\n                    }\r\n                }\r\n                )\r\n                let inputParam = {};\r\n                let Map = {\r\n                    fromdate: obj.fromDate,\r\n                    todate: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                    ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\r\n                    //nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                    nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\r\n                    ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\r\n                    npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                    ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\r\n                    transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                    ntransactiontestcode: 0,\r\n                    ncontrolcode: anotherUserId,\r\n                    nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                    nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                    checkBoxOperation: 3,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    operation: 'AllotAnotherUser'\r\n                }\r\n                inputParam = {\r\n                    inputData: Map,\r\n                }\r\n                this.props.getAllotAnotherUserTestWise(inputParam);\r\n\r\n\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONTEST\" }));\r\n            }\r\n        } else if(anotherUserList && anotherUserList.length >1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSINGLETEST\" }));\r\n        }else if(anotherUserList && anotherUserList.length ===0){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n        }\r\n    }\r\n\r\n    RescheduleStatus(rescheduleId, testskip, testtake) {\r\n        let testList = [];\r\n        if (this.props.Login.masterData.searchedTest !== undefined) {\r\n            testList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake), \"ntransactiontestcode\");\r\n        } else {\r\n            testList = this.props.Login.masterData.JA_TEST\r\n                && this.props.Login.masterData.JA_TEST.slice(testskip, testskip + testtake);\r\n        }\r\n        let rescheuleList = getSameRecordFromTwoArrays(testList || [], this.props.Login.masterData.JASelectedTest, \"ntransactiontestcode\");\r\n        if (rescheuleList && rescheuleList.length > 0) {\r\n\r\n            let tempsection = 0;\r\n            let sectionvalue = 0;\r\n            let sectionflag = true;\r\n            let testList = this.props.Login.masterData.JASelectedTest;\r\n            testList.forEach((item) => {\r\n                sectionvalue = item.nsectioncode;\r\n                if (sectionvalue !== tempsection && tempsection !== 0) {\r\n                    sectionflag = false;\r\n                } else {\r\n                    tempsection = sectionvalue;\r\n                }\r\n            });\r\n\r\n            let tempinstrument = 0;\r\n            let instrumentvalue = 0;\r\n            let instrumentcategoryflag = true;\r\n            testList.forEach((item) => {\r\n                instrumentvalue = item.ninstrumentcatcode;\r\n                if (instrumentvalue !== tempinstrument && tempinstrument !== 0) {\r\n                    instrumentcategoryflag = false;\r\n                } else {\r\n                    tempinstrument = instrumentvalue;\r\n                }\r\n            });\r\n\r\n            if (sectionflag) {\r\n                if (instrumentcategoryflag) {\r\n                    let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n                    //let JASelectedSample = this.props.Login.masterData.JASelectedSample;\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                    let arr = [];\r\n                    JASelectedTest && JASelectedTest.map((item) => {\r\n                        if (!arr.includes(item.nsectioncode)) {\r\n                            arr.push(item.nsectioncode)\r\n                        }\r\n                    }\r\n                    )\r\n                    let inputParam = {};\r\n                    let Map = {\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalversioncode,\r\n                        //nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                        nsectioncode: arr.map(nsectioncode => nsectioncode).join(\",\"),\r\n                        ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\r\n                        npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                        ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\r\n                        transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                        ntransactiontestcode: 0,\r\n                        ncontrolcode: rescheduleId,\r\n                        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                        checkBoxOperation: 3,\r\n                        AllotAnotherUser: false,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        operation: 'Reschedule'\r\n                    }\r\n                    inputParam = {\r\n                        inputData: Map,\r\n                    }\r\n                    this.props.getRescheduleTestWise(inputParam);\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMEINSTRUMENTCATEGORYTEST\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMESECTIONTEST\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }));\r\n        }\r\n    }\r\n\r\n    CancelStatus = (cancelId) => {\r\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n        if (JASelectedTest && JASelectedTest.length > 0) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n            let inputParam = {};\r\n            let arr = [];\r\n            \r\n            JASelectedTest && JASelectedTest.map((item) => {\r\n                    if (!arr.includes(item.nsectioncode)) {\r\n                        arr.push(item.nsectioncode)\r\n                    }\r\n                }\r\n                )\r\n            let Map = {\r\n                fromdate: obj.fromDate,\r\n                todate: obj.toDate,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n               // ntransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus.toString(),\r\n                ntransactionstatus:\"0\",\r\n                nsectioncode: arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\",\r\n                ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\r\n                npreregno: JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n                ntransactionsamplecode: JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\",\r\n                ntransactiontestcode: JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\",\r\n                ncontrolcode: cancelId,\r\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n                checkBoxOperation: 3,\r\n                ntype: 1,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                screenName: this.props.Login.screenName,\r\n                activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n                activeSampleTab: this.props.Login.activeTestTab || \"IDS_SAMPLEATTACHMENTS\",\r\n                activeSubSampleTab: this.props.Login.activeTestTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n\r\n            }\r\n            inputParam = {\r\n                inputData: Map,\r\n                postParamList: this.postParamList,\r\n                classUrl: \"joballocation\",\r\n                operation: 'cancel',\r\n                methodUrl: \"Test\",\r\n                action: \"canceltest\",\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, cancelId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        parentPopUpSize: 'lg',\r\n                        screenName: this.props.Login.screenName,\r\n                        operation: 'cancel'\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.CancelTestWise(inputParam);\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    onJobAllocationTestWise = (action) => {\r\n        if (action.scontrolname === \"Analyst Calendar\") {\r\n            let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n            let inputParam = {};\r\n            let Map = {\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode,\r\n                ntestcode: this.props.Login.masterData.realTestValue.ntestcode,\r\n                transactiontestcode: JASelectedTest ? JASelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n                ncontrolcode: action.ncontrolcode,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                screenName: this.props.Login.screenName,\r\n                operation: \"ViewAnalystCalendar\",\r\n                openModal: true,\r\n\r\n            }\r\n            inputParam = {\r\n                inputData: Map,\r\n            }\r\n            this.props.ViewAnalystCalendar(inputParam);\r\n\r\n        } else if (action.scontrolname === \"Instrument Calendar\") {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        if (this.props.Login.operation === \"AllotJob\") {\r\n            //inputParam = this.onSaveAllotJobInSchedule(saveType, formRef);\r\n             inputParam = this.onSaveAllotJob(saveType, formRef);\r\n        } else if (this.props.Login.operation === \"AllotAnotherUser\") {\r\n            inputParam = this.onSaveAllotAnotherUser(saveType, formRef);\r\n        } else if (this.props.Login.operation === \"Reschedule\") {\r\n            inputParam = this.onSaveReschedule(saveType, formRef);\r\n        }\r\n    }\r\n    onSaveAllotJobInSchedule = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        let JobAllocationData = {};\r\n        let obj = {};\r\n        let allotjob = this.state.selectedRecord;\r\n        const data1 = this.state.data\r\n        const data = this.state.data.filter(x => x.insertRecord)\r\n\r\n\r\n\r\n\r\n\r\n        // obj[\"allotjobdata\"] = {\r\n        //     \"Technique\": {\r\n        //         label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n        //         value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\r\n        //     },\r\n        //     \"Users\": {\r\n        //         label: allotjob.nusercode.label,\r\n        //         value: allotjob.nusercode.value\r\n        //     },\r\n        //     \"UserStartDate\": convertDateTimetoStringDBFormat(data[0].start, this.props.Login.userInfo),\r\n        //     \"UserEndDate\": convertDateTimetoStringDBFormat(data[0].end, this.props.Login.userInfo),\r\n        //     \"InstrumentCategory\": {\r\n        //         label: \"\",\r\n        //         value: data[0].InstrumentCategory || -1\r\n        //     },\r\n        //     \"Instrument\": {\r\n        //         label: \"\",\r\n        //         value: data[0].Instrument || -1\r\n        //     },\r\n        //     \"InstrumentStartDate\": data[0].InstrumentCategory && data[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(data[0].start, this.props.Login.userInfo) : \"\",\r\n        //     \"InstrumentEndDate\": data[0].InstrumentCategory && data[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(data[0].end, this.props.Login.userInfo) : \"\",\r\n        //     \"Comments\": data[0].description || \"\"\r\n\r\n\r\n        // }\r\n\r\n        // obj[\"allotjobuidata\"] = {\r\n        //     \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n        //     \"Users\": allotjob.nusercode.label,\r\n        //     \"UserStartDate\": obj[\"allotjobdata\"].UserStartDate,\r\n        //     \"UserEndDate\": obj[\"allotjobdata\"].UserEndDate,\r\n        //     // \"UserHoldDuration\": allotjob.suserholdduration,\r\n        //     //\"UserPeriod\": allotjob.nuserperiodcode.label,\r\n        //     // \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\r\n        //     //  \"Instrument\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\r\n        //     \"InstrumentStartDate\": obj[\"allotjobdata\"].InstrumentStartDate || \"\",\r\n        //     \"InstrumentEndDate\": obj[\"allotjobdata\"].InstrumentEndDate || \"\",\r\n        //     //  \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\r\n        //     // \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n        //     \"Comments\": obj[\"allotjobdata\"].description || \"\"\r\n        // }\r\n\r\n        const josnArray = [];\r\n\r\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n        let arr = [];\r\n        this.props.Login.masterData.JASelectedSample &&\r\n            this.props.Login.masterData.JASelectedSample.map((item) => {\r\n                if (!arr.includes(item.nsectioncode)) {\r\n                    arr.push(item.nsectioncode)\r\n                }\r\n\r\n\r\n            }\r\n            )\r\n\r\n\r\n\r\n\r\n        JASelectedTest && JASelectedTest.map((item) => {\r\n\r\n\r\n            const sleectedData = data.filter(x => x.ntransactiontestcode === item.ntransactiontestcode)\r\n\r\n            if (sleectedData.length > 0) {\r\n                const val = {\r\n                    \"Technique\": {\r\n                        label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                        value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\r\n                    },\r\n                    \"Users\": {\r\n                        label: allotjob.nusercode.label,\r\n                        value: allotjob.nusercode.value\r\n                    },\r\n                    \"UserStartDate\": convertDateTimetoStringDBFormat( sleectedData[0].start, this.props.Login.userInfo),\r\n                    \"UserEndDate\": convertDateTimetoStringDBFormat(sleectedData[0].end, this.props.Login.userInfo),\r\n                    \"InstrumentCategory\": {\r\n                        label: \"\",\r\n                        value: sleectedData[0].InstrumentCategory || -1\r\n                    },\r\n                    \"Instrument\": {\r\n                        label: \"\",\r\n                        value: sleectedData[0].Instrument || -1\r\n                    },\r\n                    \"InstrumentStartDate\": sleectedData[0].InstrumentCategory && sleectedData[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(sleectedData[0].start, this.props.Login.userInfo) : \"\",\r\n                    \"InstrumentEndDate\": sleectedData[0].InstrumentCategory && sleectedData[0].InstrumentCategory !== -1 ? convertDateTimetoStringDBFormat(sleectedData[0].end, this.props.Login.userInfo) : \"\",\r\n                    \"Comments\": sleectedData[0].description || \"\"\r\n                }\r\n\r\n                const valJsonUi = {\r\n                    \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                    \"Users\": allotjob.nusercode.label,\r\n                    \"UserStartDate\": val.UserStartDate,\r\n                    \"UserEndDate\": val.UserEndDate,\r\n                    \"InstrumentStartDate\": val.InstrumentStartDate || \"\",\r\n                    \"InstrumentEndDate\": val.InstrumentEndDate || \"\",\r\n                    \"Comments\": val.description || \"\"\r\n                }\r\n\r\n                const objJobAllocation = {}\r\n\r\n                objJobAllocation['jsondata'] = val\r\n                objJobAllocation['jsonuidata'] = valJsonUi\r\n                objJobAllocation[\"ninstrumentcategorycode\"] = val.InstrumentCategory.value;\r\n                objJobAllocation[\"ninstrumentcode\"] = val.Instrument.value;\r\n                objJobAllocation[\"nusercode\"] = allotjob.nusercode.value;\r\n                objJobAllocation[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\r\n                objJobAllocation[\"ntransactionsamplecode\"] = item.ntransactionsamplecode\r\n                objJobAllocation[\"ntransactiontestcode\"] = item.ntransactiontestcode\r\n                objJobAllocation[\"npreregno\"] = item.npreregno\r\n\r\n                josnArray.push(objJobAllocation)\r\n            }\r\n        }\r\n        )\r\n\r\n\r\n        // JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"allotjobdata\"]);\r\n        //JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"allotjobuidata\"]);\r\n        JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\r\n        JobAllocationData[\"ssectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\r\n        JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\r\n\r\n        JobAllocationData[\"JobAllocation\"] = josnArray;\r\n\r\n\r\n        JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n        JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\r\n        JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        JobAllocationData[\"masterData\"] = this.props.Login.masterData;\r\n        JobAllocationData[\"activeSampleTab\"] = \"IDS_SAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeSubSampleTab\"] = \"IDS_SUBSAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeTestTab\"] = \"IDS_TESTATTACHMENTS\";\r\n\r\n\r\n        inputParam = {\r\n            classUrl: \"joballocation\",\r\n            methodUrl: \"Create\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: JobAllocationData,\r\n            selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef,\r\n            searchRef: this.searchRef,\r\n            postParamList: this.postParamList,\r\n            action: \"allotjob\"\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\" }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n\r\n            this.setState({ data: [] })\r\n        } else {\r\n            //this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            this.props.AllotJobAction(inputParam);\r\n            this.setState({ data: [] })\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    onSaveAllotJob = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        let JobAllocationData = {};\r\n        let obj = {};\r\n        let allotjob = this.state.selectedRecord;\r\n\r\n        obj[\"allotjobdata\"] = {\r\n            \"Technique\": {\r\n                label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\r\n            },\r\n            \"Users\": {\r\n                label: allotjob.nusercode.label,\r\n                value: allotjob.nusercode.value\r\n            },\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": {\r\n                label: allotjob.nuserperiodcode.label,\r\n                value: allotjob.nuserperiodcode.value\r\n            },\r\n\r\n            \"InstrumentCategory\": {\r\n                label: allotjob.ninstrumentcatcode.label,\r\n                value: allotjob.ninstrumentcatcode.value\r\n            },\r\n            \"Instrument\": {\r\n                label: allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\r\n                value: allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\r\n            },\r\n            \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\r\n            \"InstrumentEndDate\": \"\",\r\n            \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\r\n            \"InstrumentPeriod\": {\r\n                label: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n                value: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\r\n            },\r\n\r\n            \"Comments\": allotjob.scomments\r\n\r\n\r\n        }\r\n\r\n        obj[\"allotjobuidata\"] = {\r\n            \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n            \"Users\": allotjob.nusercode.label,\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": allotjob.nuserperiodcode.label,\r\n            \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\r\n            \"Instrument\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\r\n            \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\r\n            \"InstrumentEndDate\": \"\",\r\n            \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\r\n            \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n            \"Comments\": allotjob.scomments\r\n        }\r\n\r\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n        let arr = [];\r\n        JASelectedTest && JASelectedTest.map((item) => {\r\n                if (!arr.includes(item.nsectioncode)) {\r\n                    arr.push(item.nsectioncode)\r\n                }\r\n            }\r\n            )\r\n        JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"allotjobdata\"]);\r\n        JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"allotjobuidata\"]);\r\n        JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\r\n        JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\r\n        JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\r\n        JobAllocationData[\"ninstrumentcatcode\"] = allotjob.ninstrumentcatcode.value;\r\n        JobAllocationData[\"ninstrumentcode\"] = allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\r\n        JobAllocationData[\"ninstrumentperiodcode\"] = allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1;\r\n        JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n        JobAllocationData[\"ntype\"] = 1;    \r\n        JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\r\n        JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        JobAllocationData[\"masterData\"] = this.props.Login.masterData;\r\n        JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\r\n\r\n\r\n\r\n        inputParam = {\r\n            classUrl: \"joballocation\",\r\n            methodUrl: \"Create\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: JobAllocationData,\r\n            selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef,\r\n            searchRef: this.searchRef,\r\n            postParamList: this.postParamList,\r\n            action: \"allotjob\"\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\" }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.AllotJobAction(inputParam);\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    onSaveAllotAnotherUser = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        let JobAllocationData = {};\r\n        let obj = {};\r\n        let allotjob = this.state.selectedRecord;\r\n\r\n        obj[\"anotheruserdata\"] = {\r\n            \"Users\": {\r\n                label: allotjob.nusercode.label,\r\n                value: allotjob.nusercode.value\r\n            },\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": {\r\n                label: allotjob.nuserperiodcode.label,\r\n                value: allotjob.nuserperiodcode.value\r\n            },\r\n            \"Comments\": allotjob.scomments\r\n        }\r\n\r\n        obj[\"anotheruseruidata\"] = {\r\n            \"Users\": allotjob.nusercode.label,\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": allotjob.nuserperiodcode.label,\r\n            \"Comments\": allotjob.scomments\r\n        }\r\n\r\n        let arr = [];\r\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n        JASelectedTest && JASelectedTest.map((item) => {\r\n                if (!arr.includes(item.nsectioncode)) {\r\n                    arr.push(item.nsectioncode)\r\n                }\r\n            }\r\n            )\r\n        JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"anotheruserdata\"]);\r\n        JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"anotheruseruidata\"]);\r\n        JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        //JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\r\n        JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntechniquecode\"] = -1;\r\n        JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\r\n        JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\r\n        JobAllocationData[\"ninstrumentcatcode\"] = -1;\r\n        JobAllocationData[\"ninstrumentcode\"] = -1;\r\n        JobAllocationData[\"ninstrumentperiodcode\"] = -1;\r\n        JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n        JobAllocationData[\"ntype\"] = 1;    \r\n        JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\r\n        JobAllocationData[\"masterData\"] = this.props.Login.masterData;\r\n        JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\r\n\r\n        inputParam = {\r\n            classUrl: \"joballocation\",\r\n            methodUrl: \"Create\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: JobAllocationData,\r\n            selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n            operation: this.props.Login.operation, saveType, formRef,\r\n            searchRef: this.searchRef,\r\n            postParamList: this.postParamList,\r\n            action: \"allotanotheruser\"\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\" }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.AllotAnotherUserAction(inputParam);\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    onSaveReschedule = (saveType, formRef) => {\r\n        let inputParam = {};\r\n        let JobAllocationData = {};\r\n        let obj = {};\r\n        let allotjob = this.state.selectedRecord;\r\n\r\n        obj[\"rescheduledata\"] = {\r\n            \"Technique\": {\r\n                label: allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n                value: allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1\r\n            },\r\n            \"Users\": {\r\n                label: allotjob.nusercode.label,\r\n                value: allotjob.nusercode.value\r\n            },\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": {\r\n                label: allotjob.nuserperiodcode.label,\r\n                value: allotjob.nuserperiodcode.value\r\n            },\r\n\r\n            \"InstrumentCategory\": {\r\n                label: allotjob.ninstrumentcatcode.label,\r\n                value: allotjob.ninstrumentcatcode.value\r\n            },\r\n            \"Instrument\": {\r\n                label: allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || 'NA',\r\n                value: allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1\r\n            },\r\n            \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\r\n            \"InstrumentEndDate\": \"\",\r\n            \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\r\n            \"InstrumentPeriod\": {\r\n                label: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n                value: allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1\r\n            },\r\n\r\n            \"Comments\": allotjob.scomments\r\n\r\n\r\n        }\r\n        obj[\"reschdeuleuidata\"] = {\r\n            \"Technique\": allotjob.ntechniquecode && allotjob.ntechniquecode.label || 'NA',\r\n            \"Users\": allotjob.nusercode.label,\r\n            \"UserStartDate\": convertDateTimetoStringDBFormat(allotjob.duserblockfromdatetime, this.props.Login.userInfo),\r\n            \"UserEndDate\": \"\",\r\n            \"UserHoldDuration\": allotjob.suserholdduration,\r\n            \"UserPeriod\": allotjob.nuserperiodcode.label,\r\n            \"InstrumentCategory\": allotjob.ninstrumentcatcode.label,\r\n            \"Instrument\": allotjob.ninstrumentcode && allotjob.ninstrumentcode.label || \"NA\",\r\n            \"InstrumentStartDate\": allotjob.dinstblockfromdatetime ? convertDateTimetoStringDBFormat(allotjob.dinstblockfromdatetime, this.props.Login.userInfo) : \"\",\r\n            \"InstrumentEndDate\": \"\",\r\n            \"InstrumentHoldDuration\": allotjob.sinstrumentholdduration || -1,\r\n            \"InstrumentPeriod\": allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.label || 'NA',\r\n            \"Comments\": allotjob.scomments\r\n\r\n        }\r\n\r\n        let JASelectedTest = this.props.Login.masterData.JASelectedTest;\r\n        let arr = [];\r\n        JASelectedTest && JASelectedTest.map((item) => {\r\n                if (!arr.includes(item.nsectioncode)) {\r\n                    arr.push(item.nsectioncode)\r\n                }\r\n            }\r\n            )\r\n        JobAllocationData[\"jsondata\"] = JSON.stringify(obj[\"rescheduledata\"]);\r\n        JobAllocationData[\"jsonuidata\"] = JSON.stringify(obj[\"reschdeuleuidata\"]);\r\n        JobAllocationData[\"npreregno\"] = JASelectedTest ? JASelectedTest.map(sample => sample.npreregno).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactionsamplecode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactionsamplecode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntransactiontestcode\"] = JASelectedTest ? JASelectedTest.map(sample => sample.ntransactiontestcode).join(\",\") : \"\";\r\n        //JobAllocationData[\"nsectioncode\"] = this.props.Login.masterData.realUserSectionValue.nsectioncode;\r\n        JobAllocationData[\"nsectioncode\"] = arr ? arr.map(nsectioncode => nsectioncode).join(\",\") : \"\";\r\n        JobAllocationData[\"ntechniquecode\"] = allotjob.ntechniquecode && allotjob.ntechniquecode.value || -1;\r\n        JobAllocationData[\"nusercode\"] = allotjob.nusercode.value;\r\n        JobAllocationData[\"nuserperiodcode\"] = allotjob.nuserperiodcode.value;\r\n        JobAllocationData[\"ninstrumentcatcode\"] = allotjob.ninstrumentcatcode.value;\r\n        JobAllocationData[\"ninstrumentcode\"] = allotjob.ninstrumentcode && allotjob.ninstrumentcode.value || -1;\r\n        JobAllocationData[\"ninstrumentperiodcode\"] = allotjob.ninstrumentperiodcode && allotjob.ninstrumentperiodcode.value || -1;\r\n        JobAllocationData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n        JobAllocationData[\"ntype\"] = 1;    \r\n        JobAllocationData[\"userinfo\"] = this.props.Login.userInfo;\r\n        JobAllocationData[\"nregtypecode\"] = this.props.Login.masterData.realRegTypeValue.nregtypecode;\r\n        JobAllocationData[\"nregsubtypecode\"] = this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode;\r\n        JobAllocationData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n        JobAllocationData[\"masterData\"] = this.props.Login.masterData;\r\n        JobAllocationData[\"activeSampleTab\"] = this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeSubSampleTab\"] = this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\";\r\n        JobAllocationData[\"activeTestTab\"] = this.props.Login.activeTestTab || 'IDS_TESTATTACHMENTS';\r\n\r\n        inputParam = {\r\n            classUrl: \"joballocation\",\r\n            methodUrl: \"Create\",\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: JobAllocationData,\r\n            selectedId: this.state.selectedRecord[\"njoballocationcode\"],\r\n            operation: this.props.Login.operation, saveType, formRef,\r\n            searchRef: this.searchRef,\r\n            postParamList: this.postParamList,\r\n            action: \"reschedule\"\r\n\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: \"Job Allocation\" }),\r\n                    operation: this.props.Login.operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.RescheduleJobAction(inputParam);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getActiveTestURL() {\r\n        let url = \"attachment/getTestAttachment\"\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n            default:\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let isOpen = this.props.Login.isOpen;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        // if (this.state.openAnalystCalendar) {\r\n        //     this.setState({ openAnalystCalendar: false })\r\n        // }\r\n         if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"AllotJob\" || this.props.Login.operation === \"AllotAnotherUser\" || this.props.Login.operation === \"Reschedule\") {\r\n                loadEsign = false;\r\n                openModal = true;\r\n                isOpen = false;\r\n                //selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason'] = \"\";\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, selectedId: null, isOpen,\r\n                InstrumentCategory: [], Instrument: [], masterData: { ...this.props.Login.masterData, analystCalenderData: [] }\r\n            },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignforJobAllocation(inputParam, \"openModal\");\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (fieldName === \"ntechniquecode\") {\r\n            selectedRecord[\"ntechniquecode\"] = comboData;\r\n            if (comboData != null) {\r\n                this.props.getUsers(this.state.selectedRecord.ntechniquecode.value,\r\n                    this.props.Login.masterData, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName, this.props.Login.masterData);\r\n            } else {\r\n                this.setState({ selectedRecord });\r\n            }\r\n        }else if (fieldName === \"nusercode\") {\r\n            selectedRecord[\"nusercode\"] = comboData;  \r\n            this.props.getAnalystCalenderBasedOnUser(comboData.value,this.props.Login.masterData,  this.props.Login.userInfo, selectedRecord)        \r\n            //this.setState({ selectedRecord });     \r\n        } else if (fieldName === \"ninstrumentcatcode\") {\r\n            selectedRecord[\"ninstrumentcatcode\"] = comboData;\r\n            this.props.getInstrument(this.state.selectedRecord.ninstrumentcatcode.value, selectedRecord.ninstrumentcatcode.item.ncalibrationreq, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\r\n        } else if (fieldName === \"ninstrumentcode\") {\r\n            selectedRecord[\"ninstrumentcode\"] = comboData;\r\n            this.setState({ selectedRecord });\r\n        } else if (fieldName === \"nuserperiodcode\") {\r\n            selectedRecord[\"nuserperiodcode\"] = comboData;\r\n            this.setState({ selectedRecord });\r\n        } else if (fieldName === \"ninstrumentperiodcode\") {\r\n            selectedRecord[\"ninstrumentperiodcode\"] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.name === \"suserholdduration\" || event.target.name === \"sinstrumentholdduration\") {\r\n            if (event.target.value !== \"\") {\r\n                event.target.value = validatePhoneNumber(event.target.value);\r\n                selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n\r\n            }\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n\r\n    getCommentsCombo = (event) => {\r\n\r\n        if (this.props.Login.JASelectedTest && this.props.Login.JASelectedTest.length > 0) {\r\n            this.props.getCommentsCombo(...event);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTESTTOADDCOMMENTS\" }))\r\n        }\r\n    }\r\n\r\n    handleDataChange = ({ created, updated, deleteted }) => {\r\n        let scheduleData = {};\r\n        let postParam = undefined;\r\n        let formRef = {};\r\n        if (created.length > 0) {\r\n\r\n            const aa = created.concat(created.map(item => Object.assign({}, item, {})));\r\n            scheduleData[\"allotjob\"] = { \"jsondata\": aa[0] };\r\n            formRef = { \"current\": \"form\" };\r\n\r\n            let saveType = 1;\r\n            const inputParam = {\r\n                classUrl: \"joballocation\",\r\n                methodUrl: \"AssignJob\",\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                operation: \"create\",\r\n                saveType, formRef, postParam, searchRef: this.searchRef,\r\n                isClearSearch: this.props.Login.isClearSearch\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n\r\n\r\n\r\n        } else if (updated.length > 0) {\r\n\r\n        } else if (deleteted.length > 0) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignforJobAllocation, ReceiveinLabStatusWise, getRegTypeJobAllocation, getRegSubTypeJobAllocation,\r\n    getAppConfigVersionJobAllocation, getFilterStatusJobAllocation, getSectionJobAllocation, getTestStatusJobAllocation, getFilterStatusSectionJobAllocation, getDesignTemplateJobAllocation,\r\n    getJobAllcationFilterSubmit, getJobAllocationSubSampleDetail, getJobAllocationTestDetail, getTestChildTabDetailJobAllocation, getAllottedTestWise, getAllotAnotherUserTestWise, getRescheduleTestWise, getInstrument, getUsers,\r\n    ViewAnalystCalendar, CancelTestWise, AllotJobAction, AllotAnotherUserAction, RescheduleJobAction, getSubSampleChildTabDetail, getSampleChildTabDetail, getCommentsCombo, getAttachmentCombo, filterTransactionList, getAnalystCalenderBasedOnUser\r\n})(injectIntl(JobAllocation))\r\n\r\nexport const currentYear = new Date().getFullYear();\r\n\r\nexport const parseAdjust = eventDate => {\r\n    const date = new Date(eventDate);\r\n    date.setFullYear(currentYear);\r\n    return date;\r\n};"]},"metadata":{},"sourceType":"module"}