{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../form-input/form-input.component';import FormTextarea from'../form-textarea/form-textarea.component';var AddType1Component=function AddType1Component(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:props.extractedColumnList[0].idsName}),name:props.extractedColumnList[0].dataField,type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:props.extractedColumnList[0].idsName}),value:props.selectedRecord?props.selectedRecord[props.extractedColumnList[0].dataField]||\"\":\"\",isMandatory:props.extractedColumnList[0].mandatory,required:props.extractedColumnList[0].mandatory,maxLength:props.extractedColumnList[0].fieldLength})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:props.extractedColumnList[1].idsName}),name:props.extractedColumnList[1].dataField,onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:props.extractedColumnList[1].idsName}),value:props.selectedRecord?props.selectedRecord[props.extractedColumnList[1].dataField]||\"\":\"\",rows:\"2\",isMandatory:props.extractedColumnList[1].mandatory,required:props.extractedColumnList[1].mandatory,maxLength:props.extractedColumnList[1].fieldLength})));};export default injectIntl(AddType1Component);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/components/type1component/AddType1Component.js"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","AddType1Component","props","intl","formatMessage","id","extractedColumnList","idsName","dataField","event","onInputOnChange","selectedRecord","mandatory","fieldLength"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,UAAR,KAA0B,YAA1B,CACA,OAAQC,GAAR,CAAaC,GAAb,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CAE7B,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,SAAD,EACI,KAAK,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAACH,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BC,OAAlC,CAAzB,CADX,CAEI,IAAI,CAAEL,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BE,SAFvC,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAACC,KAAD,QAASP,CAAAA,KAAK,CAACQ,eAAN,CAAsBD,KAAtB,CAAT,EAJd,CAKI,WAAW,CAAEP,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAACH,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BC,OAAlC,CAAzB,CALjB,CAMI,KAAK,CAAGL,KAAK,CAACS,cAAN,CAAuBT,KAAK,CAACS,cAAN,CAAqBT,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BE,SAAlD,GAAiE,EAAxF,CAA4F,EANxG,CAOI,WAAW,CAAIN,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BM,SAPhD,CAQI,QAAQ,CAAEV,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BM,SAR3C,CASI,SAAS,CAAEV,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BO,WAT5C,EADJ,CADJ,cAcI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACI,KAAK,CAAEX,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAACH,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BC,OAAlC,CAAzB,CADX,CAEI,IAAI,CAAEL,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BE,SAFvC,CAGI,QAAQ,CAAE,kBAACC,KAAD,QAASP,CAAAA,KAAK,CAACQ,eAAN,CAAsBD,KAAtB,CAAT,EAHd,CAII,WAAW,CAAEP,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAACH,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BC,OAAlC,CAAzB,CAJjB,CAKI,KAAK,CAAGL,KAAK,CAACS,cAAN,CAAuBT,KAAK,CAACS,cAAN,CAAqBT,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BE,SAAlD,GAAiE,EAAxF,CAA4F,EALxG,CAMI,IAAI,CAAC,GANT,CAOI,WAAW,CAAGN,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BM,SAP/C,CAQI,QAAQ,CAAEV,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BM,SAR3C,CASI,SAAS,CAAEV,KAAK,CAACI,mBAAN,CAA0B,CAA1B,EAA6BO,WAT5C,EADJ,CAdJ,CADJ,CAgCP,CAlCD,CAoCA,cAAejB,CAAAA,UAAU,CAACK,iBAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport {injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport FormTextarea from '../form-textarea/form-textarea.component';\r\n\r\nconst AddType1Component = (props) => {\r\n\r\n        return(\r\n            <Row>                                \r\n                <Col md={12}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id:props.extractedColumnList[0].idsName})}\r\n                        name={props.extractedColumnList[0].dataField}\r\n                        type=\"text\"\r\n                        onChange={(event)=>props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id:props.extractedColumnList[0].idsName})}\r\n                        value ={props.selectedRecord ? props.selectedRecord[props.extractedColumnList[0].dataField]  || \"\": \"\"}\r\n                        isMandatory = {props.extractedColumnList[0].mandatory}\r\n                        required={props.extractedColumnList[0].mandatory}\r\n                        maxLength={props.extractedColumnList[0].fieldLength}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        label={props.intl.formatMessage({ id:props.extractedColumnList[1].idsName})}\r\n                        name={props.extractedColumnList[1].dataField}\r\n                        onChange={(event)=>props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id:props.extractedColumnList[1].idsName})}\r\n                        value ={props.selectedRecord ? props.selectedRecord[props.extractedColumnList[1].dataField]  || \"\": \"\"}\r\n                        rows=\"2\"\r\n                        isMandatory= {props.extractedColumnList[1].mandatory} \r\n                        required={props.extractedColumnList[1].mandatory}\r\n                        maxLength={props.extractedColumnList[1].fieldLength}\r\n                        >\r\n                    </FormTextarea>\r\n                </Col>\r\n            </Row>\r\n                                    \r\n     )   \r\n}\r\n\r\nexport default injectIntl(AddType1Component);"]},"metadata":{},"sourceType":"module"}