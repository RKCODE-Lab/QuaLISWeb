{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import DropZone from'../../../components/dropzone/dropzone.component';import{Row,Col,Form}from'react-bootstrap';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import{attachmentType}from'../../../components/Enumeration';import FormInput from'../../../components/form-input/form-input.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';var AddTraineeDocFile=function AddTraineeDocFile(props){var _props$selectedRecord=props.selectedRecord,nattachmenttypecode=_props$selectedRecord.nattachmenttypecode,disabled=_props$selectedRecord.disabled;var sdescrption=nattachmenttypecode===attachmentType.LINK?\"slinkdescription\":\"sfiledesc\";return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Check,{name:\"nattachmenttypecode\",type:\"radio\",id:\"AddFiles\",label:props.intl.formatMessage({id:\"IDS_FTP\"}),inline:true,onChange:function onChange(event){return props.onInputOnChange(event,attachmentType.FTP);},checked:nattachmenttypecode===attachmentType.FTP?true:false,disabled:disabled}),/*#__PURE__*/React.createElement(Form.Check,{name:\"nattachmenttypecode\",type:\"radio\",id:\"AddLink\",label:props.intl.formatMessage({id:\"IDS_LINK\"}),inline:true,onChange:function onChange(event){return props.onInputOnChange(event,attachmentType.LINK);},checked:nattachmenttypecode===attachmentType.LINK?true:false,disabled:disabled})),props.selectedRecord&&nattachmenttypecode===attachmentType.FTP&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(DropZone,{name:\"sfilename\",label:props.label,isMandatory:true,maxFiles:props.maxFiles,minSize:0,maxSize:props.maxSize,onDrop:function onDrop(event){return props.onDrop(event,\"sfilename\",props.maxFiles);},actionType:props.actionType,deleteAttachment:props.deleteAttachment,multiple:props.multiple,editFiles:props.selectedRecord?props.selectedRecord:{},fileSizeName:\"nfilesize\",fileName:\"sfilename\"}),/*#__PURE__*/React.createElement(FormTextarea,{name:sdescrption,type:\"text\",label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[sdescrption]&&props.selectedRecord[sdescrption],isMandatory:false,required:true,maxLength:255,onChange:function onChange(event){return props.onInputOnChange(event);}})),props.selectedRecord&&nattachmenttypecode===attachmentType.LINK&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormInput,{name:\"slinkfilename\",label:props.intl.formatMessage({id:\"IDS_FILENAME\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_FILENAME\"}),value:props.selectedRecord?props.selectedRecord[\"slinkfilename\"]:\"\",isMandatory:\"*\",required:true,maxLength:100}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_LINKNAME\"}),isSearchable:true,name:\"nlinkcode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,showOption:true,options:props.linkMaster||[],optionId:\"nlinkcode\",optionValue:\"slinkname\",value:props.selectedRecord[\"nlinkcode\"],onChange:function onChange(value){return props.onComboChange(value,\"nlinkcode\",1);},alphabeticalSort:true}),/*#__PURE__*/React.createElement(FormTextarea,{name:sdescrption,type:\"text\",label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[sdescrption]&&props.selectedRecord[sdescrption],isMandatory:false,required:true,maxLength:255,onChange:function onChange(event){return props.onInputOnChange(event);}}))));};export default injectIntl(AddTraineeDocFile);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/competencemanagement/trainingupdate/AddTraineeDocFile.jsx"],"names":["React","injectIntl","DropZone","Row","Col","Form","FormTextarea","attachmentType","FormInput","FormSelectSearch","AddTraineeDocFile","props","selectedRecord","nattachmenttypecode","disabled","sdescrption","LINK","intl","formatMessage","id","event","onInputOnChange","FTP","label","maxFiles","maxSize","onDrop","actionType","deleteAttachment","multiple","linkMaster","value","onComboChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../../components/dropzone/dropzone.component';\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport { attachmentType } from '../../../components/Enumeration';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\n\r\n\r\nconst AddTraineeDocFile = props => {\r\n    const { nattachmenttypecode, disabled } = props.selectedRecord;\r\n    const sdescrption = nattachmenttypecode === attachmentType.LINK ? \"slinkdescription\" : \"sfiledesc\";\r\n\r\n    return (\r\n        <Row>\r\n            <Col md=\"12\">\r\n                <Form.Group>\r\n                    <Form.Check\r\n                        name=\"nattachmenttypecode\"\r\n                        type=\"radio\"\r\n                        id=\"AddFiles\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_FTP\" })}\r\n                        inline={true}\r\n                        onChange={(event) => props.onInputOnChange(event, attachmentType.FTP)}\r\n                        checked={nattachmenttypecode === attachmentType.FTP ? true : false}\r\n                        disabled={disabled}\r\n                    >\r\n                    </Form.Check>\r\n                    <Form.Check\r\n                        name=\"nattachmenttypecode\"\r\n                        type=\"radio\"\r\n                        id=\"AddLink\"\r\n                        label={props.intl.formatMessage({ id: \"IDS_LINK\" })}\r\n                        inline={true}\r\n                        onChange={(event) => props.onInputOnChange(event, attachmentType.LINK)}\r\n                        checked={nattachmenttypecode === attachmentType.LINK ? true : false}\r\n                        disabled={disabled}\r\n                    >\r\n                    </Form.Check>\r\n                </Form.Group>\r\n                {props.selectedRecord && nattachmenttypecode === attachmentType.FTP &&\r\n                    <>\r\n                        <DropZone\r\n                            name={\"sfilename\"}\r\n                            label={props.label}\r\n                            isMandatory={true}\r\n                            maxFiles={props.maxFiles}\r\n                            minSize={0}\r\n                            maxSize={props.maxSize}\r\n                            onDrop={(event) => props.onDrop(event, \"sfilename\", props.maxFiles)}\r\n                            actionType={props.actionType}\r\n                            deleteAttachment={props.deleteAttachment}\r\n                            multiple={props.multiple}\r\n                            editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                            fileSizeName=\"nfilesize\"\r\n                            fileName=\"sfilename\"\r\n                        />\r\n                        <FormTextarea\r\n                            name={sdescrption}\r\n                            type=\"text\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            value={props.selectedRecord[sdescrption] && props.selectedRecord[sdescrption]}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={255}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                        >\r\n                        </FormTextarea>\r\n                    </>\r\n                }\r\n\r\n                {props.selectedRecord && nattachmenttypecode === attachmentType.LINK &&\r\n                    <>\r\n                        <FormInput\r\n                            name={\"slinkfilename\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"slinkfilename\"] : \"\"}\r\n                            isMandatory=\"*\"\r\n                            required={true}\r\n                            maxLength={100}\r\n                        />\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_LINKNAME\" })}\r\n                            isSearchable={true}\r\n                            name={\"nlinkcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            showOption={true}\r\n                            options={props.linkMaster || []}\r\n                            optionId='nlinkcode'\r\n                            optionValue='slinkname'\r\n                            value={props.selectedRecord[\"nlinkcode\"]}\r\n                            onChange={value => props.onComboChange(value, \"nlinkcode\", 1)}\r\n                            alphabeticalSort={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                        <FormTextarea\r\n                            name={sdescrption}\r\n                            type=\"text\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            value={props.selectedRecord[sdescrption] && props.selectedRecord[sdescrption]}\r\n                            isMandatory={false}\r\n                            required={true}\r\n                            maxLength={255}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                        >\r\n                        </FormTextarea>\r\n\r\n                    </>}\r\n\r\n\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddTraineeDocFile);"]},"metadata":{},"sourceType":"module"}