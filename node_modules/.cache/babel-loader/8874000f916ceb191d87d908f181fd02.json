{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\testmanagement\\\\AddRulesCopy.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col, Row } from 'react-bootstrap';\nimport { transactionStatus } from '../../components/Enumeration';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component'; //ALPD-4984\n//Added by Neeraj \n\nconst AddRulesCopy = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PRODUCTCATEGORY\"\n    }),\n    isSearchable: true,\n    name: \"nproductcatcode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    showOption: true,\n    options: props.getProductCategory || [],\n    optionId: \"label\",\n    optionValue: \"value\",\n    value: props.selectedRecord[\"nproductcatcode\"] || \"\",\n    onChange: value => props.onComboChange(value, \"nproductcatcode\"),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })), props.selectedRecord && props.selectedRecord[\"nproductcatcode\"] && props.selectedRecord[\"nproductcatcode\"].item && props.selectedRecord[\"nproductcatcode\"].item.ncategorybasedflow === transactionStatus.NO ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PRODUCT\"\n    }),\n    isSearchable: true,\n    name: \"nproductcode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    showOption: true,\n    options: props.getProductList || [],\n    optionId: \"label\",\n    optionValue: \"value\",\n    value: props.selectedRecord[\"nproductcode\"] || \"\",\n    onChange: value => props.onComboChange(value, \"nproductcode\"),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })) : \"\", /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_ROOT\"\n    }),\n    isSearchable: true,\n    name: \"ntemplatemanipulationcode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    showOption: true,\n    options: props.getProfileRoot || [],\n    optionId: \"label\",\n    optionValue: \"value\",\n    value: props.selectedRecord[\"ntemplatemanipulationcode\"] || \"\",\n    onChange: value => props.onComboChange(value, \"ntemplatemanipulationcode\"),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SPECIFICATION\"\n    }),\n    isSearchable: true,\n    name: \"nallottedspeccode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    showOption: true,\n    options: props.getSpecificationList || [],\n    optionId: \"label\",\n    optionValue: \"value\",\n    value: props.selectedRecord[\"nallottedspeccode\"] || \"\",\n    onChange: value => props.onComboChange(value, \"nallottedspeccode\"),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), props.selectedRecord && props.selectedRecord[\"nallottedspeccode\"] && props.selectedRecord[\"nallottedspeccode\"].item && props.selectedRecord[\"nallottedspeccode\"].item.ncomponentrequired === transactionStatus.YES ? /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_COMPONENT\"\n    }),\n    isSearchable: true,\n    name: \"ncomponentcode\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    showOption: true,\n    options: props.getComponentList || [],\n    optionId: \"label\",\n    optionValue: \"value\",\n    value: props.selectedRecord[\"ncomponentcode\"] || \"\",\n    onChange: value => props.onComboChange(value, \"ncomponentcode\"),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })) : \"\", /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormMultiSelect, {\n    name: \"ntestgrouprulesenginecode\",\n    label: props.intl.formatMessage({\n      id: \"IDS_RULESENGINENAME\"\n    }),\n    options: props.getRulesList || [],\n    optionId: \"value\",\n    optionValue: \"label\",\n    value: props.selectedRecord && props.selectedRecord[\"ntestgrouprulesenginecode\"] || [],\n    isMandatory: true,\n    isClearable: true,\n    disableSearch: false,\n    disabled: false,\n    closeMenuOnSelect: false,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, \"ntestgrouprulesenginecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddRulesCopy);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/testmanagement/AddRulesCopy.jsx"],"names":["React","injectIntl","FormSelectSearch","Col","Row","transactionStatus","FormMultiSelect","AddRulesCopy","props","intl","formatMessage","id","getProductCategory","selectedRecord","value","onComboChange","item","ncategorybasedflow","NO","getProductList","getProfileRoot","getSpecificationList","ncomponentrequired","YES","getComponentList","getRulesList","event"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\n\r\n\r\n//ALPD-4984\r\n//Added by Neeraj \r\nconst AddRulesCopy = (props) => {\r\n    return (\r\n        <Row>\r\n             <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_PRODUCTCATEGORY\" })}\r\n                    isSearchable={true}\r\n                    name={\"nproductcatcode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    showOption={true}\r\n                    options={props.getProductCategory || []}\r\n                    optionId='label'\r\n                    optionValue='value'\r\n                    value={props.selectedRecord[\"nproductcatcode\"]||\"\"}\r\n                    onChange={value => props.onComboChange(value, \"nproductcatcode\")}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            {props.selectedRecord &&\r\n            props.selectedRecord[\"nproductcatcode\"] && \r\n            props.selectedRecord[\"nproductcatcode\"].item &&\r\n            props.selectedRecord[\"nproductcatcode\"].item.ncategorybasedflow===transactionStatus.NO ?\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_PRODUCT\" })}\r\n                    isSearchable={true}\r\n                    name={\"nproductcode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    showOption={true}\r\n                    options={props.getProductList || []}\r\n                    optionId='label'\r\n                    optionValue='value'\r\n                    value={props.selectedRecord[\"nproductcode\"]||\"\"}\r\n                    onChange={value => props.onComboChange(value, \"nproductcode\")}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            :\"\"}\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_ROOT\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntemplatemanipulationcode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    showOption={true}\r\n                    options={props.getProfileRoot || []}\r\n                    optionId='label'\r\n                    optionValue='value'\r\n                    value={props.selectedRecord[\"ntemplatemanipulationcode\"]||\"\"}\r\n                    onChange={value => props.onComboChange(value, \"ntemplatemanipulationcode\")}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n      \r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_SPECIFICATION\" })}\r\n                    isSearchable={true}\r\n                    name={\"nallottedspeccode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    showOption={true}\r\n                    options={props.getSpecificationList || []}\r\n                    optionId='label'\r\n                    optionValue='value'\r\n                    value={props.selectedRecord[\"nallottedspeccode\"]||\"\"}\r\n                    onChange={value => props.onComboChange(value, \"nallottedspeccode\")}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n        {props.selectedRecord &&\r\n        props.selectedRecord[\"nallottedspeccode\"] && \r\n        props.selectedRecord[\"nallottedspeccode\"].item &&\r\n        props.selectedRecord[\"nallottedspeccode\"].item.ncomponentrequired===transactionStatus.YES ?\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_COMPONENT\" })}\r\n                    isSearchable={true}\r\n                    name={\"ncomponentcode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    showOption={true}\r\n                    options={props.getComponentList || []}\r\n                    optionId='label'\r\n                    optionValue='value'\r\n                    value={props.selectedRecord[\"ncomponentcode\"]||\"\"}\r\n                    onChange={value => props.onComboChange(value, \"ncomponentcode\")}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            :\"\"}\r\n\r\n            <Col md={12}>\r\n                <FormMultiSelect\r\n                        name={\"ntestgrouprulesenginecode\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_RULESENGINENAME\" })}\r\n                        options={props.getRulesList || []}\r\n                        optionId={\"value\"}\r\n                        optionValue=\"label\"\r\n                        value={props.selectedRecord && props.selectedRecord[\"ntestgrouprulesenginecode\"]||[]}\r\n                        isMandatory={true}\r\n                        isClearable={true}\r\n                        disableSearch={false}\r\n                        disabled={false}\r\n                        closeMenuOnSelect={false}\r\n                        alphabeticalSort={true}\r\n                        onChange={event => props.onComboChange(event, \"ntestgrouprulesenginecode\")}\r\n                    />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddRulesCopy);"]},"metadata":{},"sourceType":"module"}