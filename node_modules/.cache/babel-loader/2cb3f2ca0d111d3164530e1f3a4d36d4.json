{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\Material\\\\InvenotryTransaction.jsx\";\nimport React from 'react';\nimport { Col, Nav, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FormattedMessage } from 'react-intl';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport ReactTooltip from 'react-tooltip';\nimport { designProperties } from '../../components/Enumeration';\n\nconst InvenotryTransaction = props => {\n  const QuantityTransaction = props.controlMap.has(\"QuantityTransaction\") && props.controlMap.get(\"QuantityTransaction\").ncontrolcode;\n  const ViewMaterialInventoryTrans = props.controlMap.has(\"ViewMaterialInventoryTrans\") && props.controlMap.get(\"ViewMaterialInventoryTrans\").ncontrolcode; // const fieldsForGrid = [\n  //     { \"idsName\": \"IDS_INVENTORYID\", \"dataField\": \"IDS_INVENTORYID\", \"width\": \"200px\" },\n  //     {\n  //         \"idsName\": \"IDS_TRANSACTIONDATE\", \"dataField\": \"IDS_TRANSACTIONDATE\", \"width\": \"100px\"\n  //     }\n  //     ,\n  //     {\n  //         \"idsName\": \"IDS_INVENTORYTRANSACTIONTYPE\", \"dataField\": \"IDS_INVENTORYTRANSACTIONTYPE\", \"width\": \"100px\"\n  //     }\n  //     ,\n  //     {\n  //         \"idsName\": \"IDS_TRANSACTIONTYPE\", \"dataField\": \"IDS_TRANSACTIONTYPE\", \"width\": \"100px\"\n  //     }\n  // ];\n\n  let fieldsForGrid = [];\n  let fieldsForExpandedGrid = [];\n  let x = []; // if(props.SelectedMaterialInventory['jsondata'].hasOwnProperty(props.DesignMappedFeilds.fieldsForGrid[index]&&\n  //     props.DesignMappedFeilds.fieldsForGrid[index][designProperties.VALUE]))\n  // {\n  // props.DesignMappedFeilds.fieldsForGrid!==undefined&&\n  // props.DesignMappedFeilds.fieldsForGrid.map((temp,i)=>{\n  //     fieldsForGrid.push(\n  //         { \"idsName\":  props.DesignMappedFeilds.fieldsForGrid[i][designProperties.VALUE], \"dataField\": \n  //         props.DesignMappedFeilds.fieldsForGrid[i][designProperties.VALUE], \"width\": \"200px\" }\n  //     );\n  // })\n  // }\n  // props.Template.map((row) => {\n  //     row.children.map((column) => {\n  //         column.children.map((component) => {\n  //             if (component.hasOwnProperty('fieldsForGrid')) {\n  //                 fieldsForGrid.push(\n  //                     { \"idsName\": component.label, \"dataField\": component.label, \"width\": \"200px\" }\n  //                 );\n  //             }\n  //             if (component.hasOwnProperty('fieldsForExpandedGrid')) {\n  //                 fieldsForExpandedGrid.push(\n  //                     { dataField: component.label, idsName: component.label, columnSize: \"4\" },\n  //                 );\n  //             }\n  //             component.hasOwnProperty(\"children\") && component.children.map((componentrow) => {\n  //                 if (componentrow.hasOwnProperty('fieldsForGrid')) {\n  //                     fieldsForGrid.push(\n  //                         { \"idsName\": componentrow.label, \"dataField\": componentrow.label, \"width\": \"200px\" }\n  //                     );\n  //                 }\n  //                 if (componentrow.hasOwnProperty('fieldsForExpandedGrid')) {\n  //                     fieldsForExpandedGrid.push(\n  //                         { dataField: componentrow.label, idsName: componentrow.label, columnSize: \"4\" },\n  //                     );\n  //                 }\n  //             })\n  //         })\n  //     })\n  // })\n  // fieldsForGrid[0]=fieldsForGrid\n  // let fieldsForExpandedGrid1=[]\n  // fieldsForExpandedGrid1.push(fieldsForExpandedGrid)\n  // detailedFieldList = [\n  //     { dataField: \"ssectionname\", idsName: \"IDS_SECTIONNAME\", columnSize: \"4\" },\n  //     { dataField: \"sfullname\", idsName: \"IDS_PARTICIPANTS\", columnSize: \"4\" },\n  //     // { dataField: \"sfaxno\", idsName: \"IDS_FAXNO\", columnSize:\"4\" },\n  //     // //{ dataField: \"sdisplaystatus\", idsName: \"IDS_DISPLAYSTATUS\" },\n  //     //{ \"idsName\": \"IDS_DISPLAYSTATUS\", \"dataField\": \"sdisplaystatus\", \"width\": \"20%\", \"isIdsField\": true, \"controlName\": \"ndefaultstatus\" }\n  // ];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions-stripe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ReactTooltip, {\n    place: \"bottom\",\n    globalEventOff: \"click\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"QuantityTransaction\",\n    className: \"add-txt-btn\",\n    hidden: props.userRoleControlRights.indexOf(QuantityTransaction) === -1,\n    onClick: () => props.quantityTransaction(QuantityTransaction, \"create\", {}, props.userInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_QUANTITYTRANSACTION\",\n    defaultMessage: \"Quantity Transaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    key: \"testsectionkey\",\n    primaryKeyField: \"nmaterialinventtranscode\",\n    expandField: \"expanded\",\n    detailedFieldList: props.QuantityTransactionForExpandedGrid,\n    dataResult: props.dataResult,\n    dataState: props.dataState,\n    dataStateChange: props.dataStateChange,\n    extractedColumnList: props.QuantityTransactionForGrid,\n    controlMap: props.controlMap,\n    userRoleControlRights: props.userRoleControlRights,\n    fetchRecord: props.fetchRecord,\n    deleteRecord: props.deleteRecord,\n    pageable: false,\n    scrollable: 'scrollable',\n    gridHeight: '600px' // isActionRequired={true}\n    ,\n    hideColumnFilter: false,\n    selectedId: 0 // isJsonFeild={true}\n    // isActionRequired={true}\n    // actionIcons={[{\n    //     title: props.intl.formatMessage({ id: \"IDS_VIEW\" }),\n    //     controlname: \"faEye\",\n    //     objectName: \"materialinventorytransaction\",\n    //     hidden: props.userRoleControlRights.indexOf(ViewMaterialInventoryTrans) === -1,\n    //     onClick: (viewdetails) => props.viewQuantityTrans(viewdetails)\n    // }]}\n    //  jsonField='jsondata'\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default InvenotryTransaction;","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/Material/InvenotryTransaction.jsx"],"names":["React","Col","Nav","Row","FontAwesomeIcon","FormattedMessage","faPlus","DataGrid","ReactTooltip","designProperties","InvenotryTransaction","props","QuantityTransaction","controlMap","has","get","ncontrolcode","ViewMaterialInventoryTrans","fieldsForGrid","fieldsForExpandedGrid","x","userRoleControlRights","indexOf","quantityTransaction","userInfo","QuantityTransactionForExpandedGrid","dataResult","dataState","dataStateChange","QuantityTransactionForGrid","fetchRecord","deleteRecord"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Nav, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { designProperties } from '../../components/Enumeration';\r\n\r\n\r\nconst InvenotryTransaction = (props) => {\r\n    const QuantityTransaction = props.controlMap.has(\"QuantityTransaction\") && props.controlMap.get(\"QuantityTransaction\").ncontrolcode;\r\n    const ViewMaterialInventoryTrans = props.controlMap.has(\"ViewMaterialInventoryTrans\") && props.controlMap.get(\"ViewMaterialInventoryTrans\").ncontrolcode;\r\n    // const fieldsForGrid = [\r\n    //     { \"idsName\": \"IDS_INVENTORYID\", \"dataField\": \"IDS_INVENTORYID\", \"width\": \"200px\" },\r\n    //     {\r\n    //         \"idsName\": \"IDS_TRANSACTIONDATE\", \"dataField\": \"IDS_TRANSACTIONDATE\", \"width\": \"100px\"\r\n    //     }\r\n    //     ,\r\n    //     {\r\n    //         \"idsName\": \"IDS_INVENTORYTRANSACTIONTYPE\", \"dataField\": \"IDS_INVENTORYTRANSACTIONTYPE\", \"width\": \"100px\"\r\n    //     }\r\n    //     ,\r\n    //     {\r\n    //         \"idsName\": \"IDS_TRANSACTIONTYPE\", \"dataField\": \"IDS_TRANSACTIONTYPE\", \"width\": \"100px\"\r\n    //     }\r\n    // ];\r\n    let fieldsForGrid=[];\r\n    let fieldsForExpandedGrid=[];\r\n    let x=[];\r\n    // if(props.SelectedMaterialInventory['jsondata'].hasOwnProperty(props.DesignMappedFeilds.fieldsForGrid[index]&&\r\n    //     props.DesignMappedFeilds.fieldsForGrid[index][designProperties.VALUE]))\r\n    // {\r\n        // props.DesignMappedFeilds.fieldsForGrid!==undefined&&\r\n        // props.DesignMappedFeilds.fieldsForGrid.map((temp,i)=>{\r\n        //     fieldsForGrid.push(\r\n        //         { \"idsName\":  props.DesignMappedFeilds.fieldsForGrid[i][designProperties.VALUE], \"dataField\": \r\n        //         props.DesignMappedFeilds.fieldsForGrid[i][designProperties.VALUE], \"width\": \"200px\" }\r\n        //     );\r\n        // })\r\n\r\n   // }\r\n    // props.Template.map((row) => {\r\n        \r\n    //     row.children.map((column) => {\r\n    //         column.children.map((component) => {\r\n    //             if (component.hasOwnProperty('fieldsForGrid')) {\r\n    //                 fieldsForGrid.push(\r\n    //                     { \"idsName\": component.label, \"dataField\": component.label, \"width\": \"200px\" }\r\n    //                 );\r\n    //             }\r\n    //             if (component.hasOwnProperty('fieldsForExpandedGrid')) {\r\n    //                 fieldsForExpandedGrid.push(\r\n    //                     { dataField: component.label, idsName: component.label, columnSize: \"4\" },\r\n    //                 );\r\n    //             }\r\n    //             component.hasOwnProperty(\"children\") && component.children.map((componentrow) => {\r\n    //                 if (componentrow.hasOwnProperty('fieldsForGrid')) {\r\n    //                     fieldsForGrid.push(\r\n    //                         { \"idsName\": componentrow.label, \"dataField\": componentrow.label, \"width\": \"200px\" }\r\n    //                     );\r\n    //                 }\r\n    //                 if (componentrow.hasOwnProperty('fieldsForExpandedGrid')) {\r\n    //                     fieldsForExpandedGrid.push(\r\n    //                         { dataField: componentrow.label, idsName: componentrow.label, columnSize: \"4\" },\r\n    //                     );\r\n    //                 }\r\n    //             })\r\n    //         })\r\n    //     })\r\n    // })\r\n    // fieldsForGrid[0]=fieldsForGrid\r\n    // let fieldsForExpandedGrid1=[]\r\n    // fieldsForExpandedGrid1.push(fieldsForExpandedGrid)\r\n    // detailedFieldList = [\r\n    //     { dataField: \"ssectionname\", idsName: \"IDS_SECTIONNAME\", columnSize: \"4\" },\r\n    //     { dataField: \"sfullname\", idsName: \"IDS_PARTICIPANTS\", columnSize: \"4\" },\r\n    //     // { dataField: \"sfaxno\", idsName: \"IDS_FAXNO\", columnSize:\"4\" },\r\n    //     // //{ dataField: \"sdisplaystatus\", idsName: \"IDS_DISPLAYSTATUS\" },\r\n    //     //{ \"idsName\": \"IDS_DISPLAYSTATUS\", \"dataField\": \"sdisplaystatus\", \"width\": \"20%\", \"isIdsField\": true, \"controlName\": \"ndefaultstatus\" }\r\n\r\n    // ];\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                    <Nav.Link name=\"QuantityTransaction\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(QuantityTransaction) === -1}\r\n                        onClick={() => props.quantityTransaction(QuantityTransaction, \"create\", {}, props.userInfo)}>\r\n                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                        <FormattedMessage id=\"IDS_QUANTITYTRANSACTION\" defaultMessage=\"Quantity Transaction\" />\r\n                    </Nav.Link>\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nmaterialinventtranscode\"\r\n                        expandField=\"expanded\"\r\n                        detailedFieldList={props.QuantityTransactionForExpandedGrid}\r\n                        dataResult={props.dataResult}\r\n                        dataState={props.dataState}\r\n                        dataStateChange={props.dataStateChange}\r\n                        extractedColumnList={props.QuantityTransactionForGrid}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        fetchRecord={props.fetchRecord}\r\n                        deleteRecord={props.deleteRecord}\r\n                        pageable={false}\r\n                        scrollable={'scrollable'}\r\n                        gridHeight={'600px'}\r\n                       // isActionRequired={true}\r\n                        hideColumnFilter={false}\r\n                        selectedId={0}\r\n                       // isJsonFeild={true}\r\n                        // isActionRequired={true}\r\n                        // actionIcons={[{\r\n                        //     title: props.intl.formatMessage({ id: \"IDS_VIEW\" }),\r\n                        //     controlname: \"faEye\",\r\n                        //     objectName: \"materialinventorytransaction\",\r\n                        //     hidden: props.userRoleControlRights.indexOf(ViewMaterialInventoryTrans) === -1,\r\n                        //     onClick: (viewdetails) => props.viewQuantityTrans(viewdetails)\r\n                        // }]}\r\n                      //  jsonField='jsondata'\r\n                    >\r\n                    </DataGrid>\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InvenotryTransaction;"]},"metadata":{},"sourceType":"module"}