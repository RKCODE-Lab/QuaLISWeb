{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\configurationmaster\\\\approvalconfig\\\\ApprovalConfig.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { callService, crudMaster } from '../../../actions';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faCopy, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { sortData, getControlMap, showEsign, constructOptionList } from '../../../components/CommonScript';\nimport { process } from '@progress/kendo-data-query';\nimport ListMaster from '../../../components/list-master/list-master.component';\nimport Esign from '../../audittrail/Esign';\nimport SampleFilter from './SampleFilter';\nimport AddApprovalConfig from './AddApprovalConfig';\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\nimport { ReadOnlyText, ContentPanel } from '../../../components/App.styles';\nimport { openModal, updateStore, getApprovalConfigVersion, getApprovalConfigEditData, copyVersion, setDefault, validateEsignCredential, getFilterChange, getRoleDetails, getCopySubType, filterColumnData, getApprovalConfigurationVersion } from '../../../actions';\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\nimport { ApprovalSubType, transactionStatus } from '../../../components/Enumeration';\nimport FilterStatusTab from './FilterStatusTab';\nimport ValidationStatusTab from './ValidationStatusTab';\nimport UserRoleAccordion from './UserRoleAccordion';\nimport CustomAccordion from '../../../components/custom-accordion/custom-accordion.component';\nimport DecisionStatusTab from './DecisionStatusTab';\nimport ActionStatusTab from './ActionStatusTab'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport BreadcrumbComponent from '../../../components/Breadcrumb.Component';\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\nimport { Affix } from 'rsuite'; // import ReactTooltip from 'react-tooltip';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass ApprovalConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.handleClose = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.deleteApprovalConfigVersion = deleteId => {\n      if (this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.APPROVED || this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.RETIRED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTVERSION\"\n        }));\n      } else {\n        const postParam = {\n          inputListName: \"versionData\",\n          selectedObject: \"selectedVersion\",\n          primaryKeyField: \"napproveconfversioncode\",\n          primaryKeyValue: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\n          fetchUrl: \"approvalconfig/getApprovalConfigVersion\",\n          fecthInputObject: {\n            napprovalsubtypecode: this.approvalSubTypeValue.value,\n            userinfo: this.props.Login.userInfo\n          },\n          unchangeList: [\"approvalsubtype\", \"approvalSubTypeValue\", \"registrationType\", \"registrationTypeValue\", \"registrationSubType\", \"registrationSubTypeValue\", \"ApprovalsubtypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\"]\n        };\n        const inputData = {\n          'approvalconfigversion': {\n            napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\n            napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\n            napprovalsubtypecode: this.approvalSubTypeValue.value,\n            ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue.value,\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        inputData['userinfo'] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: 'ApprovalConfigVersion',\n          classUrl: this.props.Login.inputParam.classUrl,\n          displayName: \"IDS_APPROVALCONFIG\",\n          inputData: inputData,\n          postParam,\n          operation: \"delete\"\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: \"delete\",\n              openModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: \"IDS_APPROVALCONFIG\"\n              })\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.approveVersion = approveId => {\n      if (this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.APPROVED || this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.RETIRED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTVERSION\"\n        }));\n      } else {\n        const postParam = {\n          inputListName: \"versionData\",\n          selectedObject: \"selectedVersion\",\n          primaryKeyField: \"napproveconfversioncode\",\n          primaryKeyValue: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\n          fetchUrl: \"approvalconfig/getApprovalConfigVersion\",\n          fecthInputObject: {\n            napprovalsubtypecode: this.approvalSubTypeValue.value,\n            userinfo: this.props.Login.userInfo\n          },\n          unchangeList: [\"approvalsubtype\", \"approvalSubTypeValue\", \"registrationType\", \"registrationTypeValue\", \"registrationSubType\", \"registrationSubTypeValue\", \"ApprovalsubtypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\"]\n        };\n        const inputData = {\n          'approvalconfigversion': {\n            napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\n            napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\n            napprovalsubtypecode: this.approvalSubTypeValue.value,\n            ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1,\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        inputData['userinfo'] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: 'ApprovalConfigVersion',\n          classUrl: this.props.Login.inputParam.classUrl,\n          displayName: \"IDS_APPROVALCONFIG\",\n          inputData: inputData,\n          postParam,\n          operation: \"approve\"\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: \"IDS_APPROVALCONFIG\"\n              }),\n              operation: \"approve\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let postParam = undefined;\n\n      if (this.props.Login.operation === \"copy\") {\n        const subTypeCode = this.approvalSubTypeValue.value;\n        const inputData = {\n          approvalconfigversion: {\n            napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\n            napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\n            napprovalsubtypecode: subTypeCode,\n            sversionname: this.state.selectedRecord.sversionname,\n            nregtypecode: subTypeCode === ApprovalSubType.TESTRESULTAPPROVAL ? this.state.selectedRecord['regtype'] ? this.state.selectedRecord['regtype'].value : this.state.registrationTypeValue[0].value : -1,\n            nregsubtypecode: subTypeCode === ApprovalSubType.TESTRESULTAPPROVAL ? this.state.selectedRecord['regsubtype'] ? this.state.selectedRecord['regsubtype'].value : this.state.registrationSubTypeValue[0].value : -1,\n            userinfo: this.props.Login.userInfo,\n            ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1\n          }\n        };\n        inputData['userinfo'] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: 'ApprovalConfigVersion',\n          classUrl: this.props.Login.inputParam.classUrl,\n          displayName: \"IDS_APPROVALCONFIG\",\n          inputData: inputData,\n          postParam,\n          searchRef: this.searchRef,\n          operation: \"copy\"\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: \"IDS_APPROVALCONFIG\"\n              }),\n              operation: \"copy\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        let bool = true;\n        let errormessage = [];\n        let inputData = {};\n        let approvalconfigrole = [];\n        let filterDetailCount = 0;\n        let validationDetailCount = 0;\n        let decisionDetailCount = 0;\n        let actionDetailCount = 0;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        inputData['napprovalconfigcode'] = this.props.Login.masterData.realApprovalConfigCode;\n        inputData['ntreeversiontempcode'] = this.props.Login.userRoleTree[0].ntreeversiontempcode;\n        inputData['napprovalsubtypecode'] = this.approvalSubTypeValue.value;\n        let isAutoApprovalVersion = this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ? true : false;\n        const userRoleTree = this.props.Login.userRoleTree.reverse();\n        userRoleTree.map(role => {\n          let approvalconfigrolefilterdetail = [];\n          let approvalconfigrolevalidationdetail = [];\n          let approvalconfigroledecisiondetail = [];\n          let approvalconfigroleactiondetail = []; //to fill role details\n\n          if (this.state.selectedRecord[role.nuserrolecode]) {\n            approvalconfigrole.push({\n              napprovalconfigrolecode: this.props.Login.operation === 'create' ? 0 : role.napprovalconfigrolecode,\n              napprovalconfigcode: role.napprovalconfigcode,\n              ntreeversiontempcode: role.ntreeversiontempcode,\n              nuserrolecode: role.nuserrolecode,\n              nchecklistversioncode: this.state.selectedRecord[role.nuserrolecode] ? this.state.selectedRecord[role.nuserrolecode].checklist ? this.state.selectedRecord[role.nuserrolecode].checklist : transactionStatus.NA : transactionStatus.NA,\n              npartialapprovalneed: this.state.selectedRecord[role.nuserrolecode]['Partial Approval_' + role.nuserrolecode] ? this.state.selectedRecord[role.nuserrolecode]['Partial Approval_' + role.nuserrolecode] : transactionStatus.YES,\n              nsectionwiseapprovalneed: this.state.selectedRecord[role.nuserrolecode]['IDS_PARTIALAPPROVAL'] && this.state.selectedRecord[role.nuserrolecode]['IDS_PARTIALAPPROVAL'] === transactionStatus.NO ? this.state.selectedRecord[role.nuserrolecode]['IDS_SECTIONWISEAPPROVE'] ? this.state.selectedRecord[role.nuserrolecode]['IDS_SECTIONWISEAPPROVE'] : transactionStatus.NO : transactionStatus.NO,\n              // nrecomretestneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRETEST'] ?\n              //     this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRETEST'] : transactionStatus.NO,\n              // nrecomrecalcneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRECALC'] ?\n              //     this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRECALC'] : transactionStatus.NO,\n              // nretestneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RETEST'] ?\n              //     this.state.selectedRecord[role.nuserrolecode]['IDS_RETEST'] : transactionStatus.NO,\n              // nrecalcneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECALC'] ?\n              //     this.state.selectedRecord[role.nuserrolecode]['IDS_RECALC'] : transactionStatus.NO,\n              // nlevelno: role.nlevelno,\n              nrecomretestneed: this.state.selectedRecord[role.nuserrolecode]['Recommend Retest_' + role.nuserrolecode] ? this.state.selectedRecord[role.nuserrolecode]['Recommend Retest_' + role.nuserrolecode] : transactionStatus.NO,\n              nrecomrecalcneed: this.state.selectedRecord[role.nuserrolecode]['Recommend Recalc_' + role.nuserrolecode] ? this.state.selectedRecord[role.nuserrolecode]['Recommend Recalc_' + role.nuserrolecode] : transactionStatus.NO,\n              nretestneed: this.state.selectedRecord[role.nuserrolecode]['Retest_' + role.nuserrolecode] ? this.state.selectedRecord[role.nuserrolecode]['Retest_' + role.nuserrolecode] : transactionStatus.NO,\n              nrecalcneed: this.state.selectedRecord[role.nuserrolecode]['Recalc_' + role.nuserrolecode] ? this.state.selectedRecord[role.nuserrolecode]['Recalc_' + role.nuserrolecode] : transactionStatus.NO,\n              nlevelno: role.nlevelno,\n              napprovalstatuscode: this.state.selectedRecord[role.nuserrolecode].approvalstatus ? this.state.selectedRecord[role.nuserrolecode].approvalstatus : transactionStatus.NA,\n              nautoapproval: this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ? transactionStatus.YES : this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] ? this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] : transactionStatus.NO,\n              nautoapprovalstatuscode: this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus : this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] && this.state.selectedRecord[role.nuserrolecode].approvalstatus ? this.state.selectedRecord[role.nuserrolecode].approvalstatus : transactionStatus.NA,\n              nautodescisionstatuscode: this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] : transactionStatus.PASS : this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] && this.state.selectedRecord[role.nuserrolecode].decisionstatus && this.state.selectedRecord[role.nuserrolecode].decisionstatus.length > 0 ? this.state.selectedRecord[role.nuserrolecode].decisionstatus[0] : transactionStatus.DRAFT // :this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus&&this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus.length>0 ?\n              // :transactionStatus.NA\n              ,\n              ncorrectionneed: this.state.selectedRecord[role.nuserrolecode]['IDS_CORRECTION'] ? this.state.selectedRecord[role.nuserrolecode]['IDS_CORRECTION'] : transactionStatus.NO,\n              nesignneed: this.state.selectedRecord[role.nuserrolecode]['e-Sign_' + role.nuserrolecode] ? this.state.selectedRecord[role.nuserrolecode]['e-Sign_' + role.nuserrolecode] : transactionStatus.NO,\n              ntransactionstatus: transactionStatus.DRAFT,\n              nsitecode: this.props.Login.userInfo.nmastersitecode,\n              nstatus: transactionStatus.ACTIVE\n            });\n\n            if (this.state.selectedRecord[role.nuserrolecode].filterstatus) {\n              this.state.selectedRecord[role.nuserrolecode].filterstatus.map(filterValue => {\n                filterDetailCount++;\n                approvalconfigrolefilterdetail.push({\n                  napprovalconfigcode: role.napprovalconfigcode,\n                  nuserrolecode: role.nuserrolecode,\n                  nlevelno: role.nlevelno,\n                  ntransactionstatus: filterValue,\n                  nstatus: transactionStatus.ACTIVE\n                });\n                return null;\n              });\n            }\n\n            if (this.state.selectedRecord[role.nuserrolecode].validationstatus) {\n              this.state.selectedRecord[role.nuserrolecode].validationstatus.map(validationValue => {\n                validationDetailCount++;\n                approvalconfigrolevalidationdetail.push({\n                  napprovalconfigcode: role.napprovalconfigcode,\n                  nuserrolecode: role.nuserrolecode,\n                  nlevelno: role.nlevelno,\n                  ntransactionstatus: validationValue,\n                  nstatus: transactionStatus.ACTIVE\n                });\n                return null;\n              });\n            }\n\n            if (this.state.selectedRecord[role.nuserrolecode].decisionstatus) {\n              this.state.selectedRecord[role.nuserrolecode].decisionstatus.map(decisionValue => {\n                decisionDetailCount++;\n                approvalconfigroledecisiondetail.push({\n                  napprovalconfigcode: role.napprovalconfigcode,\n                  nuserrolecode: role.nuserrolecode,\n                  nlevelno: role.nlevelno,\n                  ntransactionstatus: decisionValue,\n                  nstatus: transactionStatus.ACTIVE\n                });\n                return null;\n              });\n            }\n\n            this.state.selectedRecord[`actionStatus_${role.nuserrolecode}`] ? this.state.selectedRecord[`actionStatus_${role.nuserrolecode}`].map(actionValue => {\n              actionDetailCount++;\n              approvalconfigroleactiondetail.push({\n                napprovalconfigcode: role.napprovalconfigcode,\n                nuserrolecode: role.nuserrolecode,\n                nlevelno: role.nlevelno,\n                ntransactionstatus: actionValue,\n                nstatus: transactionStatus.ACTIVE\n              });\n              return null;\n            }) : approvalconfigroleactiondetail.push();\n            actionDetailCount++;\n            approvalconfigroleactiondetail.push({\n              napprovalconfigcode: role.napprovalconfigcode,\n              nuserrolecode: role.nuserrolecode,\n              nlevelno: role.nlevelno,\n              ntransactionstatus: this.state.selectedRecord[role.nuserrolecode].approvalstatus ? this.state.selectedRecord[role.nuserrolecode].approvalstatus : -1,\n              nstatus: transactionStatus.ACTIVE\n            });\n            inputData[`approvalconfigrolefilterdetail_${[role.nuserrolecode]}`] = approvalconfigrolefilterdetail;\n            inputData[`approvalconfigrolevalidationdetail_${[role.nuserrolecode]}`] = approvalconfigrolevalidationdetail;\n            inputData[`approvalconfigroledecisiondetail_${[role.nuserrolecode]}`] = approvalconfigroledecisiondetail;\n            inputData[`approvalconfigroleactiondetail_${[role.nuserrolecode]}`] = approvalconfigroleactiondetail;\n            bool = bool ? true : false;\n            return null;\n          } else {\n            bool = false;\n            errormessage.push(role.suserrolename);\n            return false;\n          }\n        }); //role map\n\n        inputData['approvalconfigrole'] = approvalconfigrole;\n        inputData['rolecount'] = this.props.Login.userRoleTree.length;\n        inputData['filterdetailcount'] = filterDetailCount;\n        inputData['validationdetailcount'] = validationDetailCount;\n        inputData['decisiondetailcount'] = decisionDetailCount;\n        inputData['actioncount'] = actionDetailCount;\n        inputData['ntreeversiontempcode'] = this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1;\n        let finalInputData = {};\n        let inputParam = {};\n\n        if (bool) {\n          if (this.props.Login.operation === \"update\") {\n            // edit\n            postParam = {\n              inputListName: \"versionData\",\n              selectedObject: \"selectedVersion\",\n              primaryKeyField: \"napproveconfversioncode\"\n            };\n            const temp1 = {};\n            this.props.Login.versionConfig.map(temp => {\n              if (temp.ntranscode === 81) {\n                temp1['nneedautoapproval'] = this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO;\n              } else if (temp.ntranscode === 85) {\n                temp1['nneedautocomplete'] = this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO;\n              }\n            });\n            inputData['approvalconfigautoapproval'] = {\n              napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\n              napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\n              sversionname: this.state.selectedRecord.sversionname,\n              //  nneedautocomplete: this.state.selectedRecord['Auto Complete'] ? this.state.selectedRecord['Auto Complete'] : transactionStatus.NO,\n              //  nneedautoapproval: this.state.selectedRecord['Auto Approval'] ? this.state.selectedRecord['Auto Approval'] : transactionStatus.NO,\n              nautoapprovalstatus: this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus : transactionStatus.NA,\n              nautodescisionstatus: isAutoApprovalVersion ? transactionStatus.PASS : this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] || transactionStatus.DRAFT : transactionStatus.DRAFT,\n              nautoallot: this.state.selectedRecord['IDS_AUTOALLOT'] ? this.state.selectedRecord['IDS_AUTOALLOT'] : transactionStatus.NO,\n              nneedjoballocation: this.state.selectedRecord['IDS_JOBALLOCATION'] ? this.state.selectedRecord['IDS_JOBALLOCATION'] : transactionStatus.NO,\n              nstatus: transactionStatus.ACTIVE,\n              ...temp1\n            };\n          } else {\n            inputData['approveconfigversion'] = {\n              napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\n              napproveconfversionno: -1,\n              ntransactionstatus: transactionStatus.DRAFT,\n              ntreeversiontempcode: this.props.Login.userRoleTree[0].ntreeversiontempcode,\n              sapproveconfversiondesc: '-',\n              nsitecode: this.props.Login.userInfo.nmastersitecode,\n              nstatus: transactionStatus.ACTIVE\n            };\n            const temp1 = {};\n            this.props.Login.versionConfig.map(temp => {\n              if (temp.ntranscode === 81) {\n                temp1['nneedautoapproval'] = this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO;\n              } else if (temp.ntranscode === 85) {\n                temp1['nneedautocomplete'] = this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO;\n              }\n            });\n            inputData['approvalconfigautoapproval'] = {\n              napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\n              sversionname: this.state.selectedRecord.sversionname,\n              // nneedautocomplete: this.state.selectedRecord['Auto Complete'] ? this.state.selectedRecord['Auto Complete'] : transactionStatus.NO,\n              //  nneedautoapproval: this.state.selectedRecord['Auto Approval'] ? this.state.selectedRecord['Auto Approval'] : transactionStatus.NO,\n              nautoapprovalstatus: this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus : transactionStatus.NA,\n              nautodescisionstatus: isAutoApprovalVersion ? transactionStatus.PASS : this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] || transactionStatus.DRAFT : transactionStatus.DRAFT,\n              nautoallot: this.state.selectedRecord['IDS_AUTOALLOT'] ? this.state.selectedRecord['IDS_AUTOALLOT'] : transactionStatus.NO,\n              nneedjoballocation: this.state.selectedRecord['IDS_JOBALLOCATION'] ? this.state.selectedRecord['IDS_JOBALLOCATION'] : transactionStatus.NO,\n              nstatus: transactionStatus.ACTIVE,\n              ...temp1\n            };\n          }\n\n          finalInputData['approvalconfigversion'] = inputData;\n          finalInputData['userinfo'] = this.props.Login.userInfo;\n          inputParam = {\n            methodUrl: 'ApprovalConfigVersion',\n            classUrl: this.props.Login.inputParam.classUrl,\n            displayName: \"IDS_APPROVALCONFIG\",\n            inputData: finalInputData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            postParam,\n            searchRef: this.searchRef\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType,\n                openModal: true,\n                operation: this.props.Login.operation,\n                screenName: this.props.intl.formatMessage({\n                  id: \"IDS_APPROVALCONFIG\"\n                })\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_FILLDETAILSFOR\"\n          }) + \" \" + errormessage.join(\",\"));\n        }\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteApprovalConfigVersion(deleteId));\n    };\n\n    this.onInputOnChange = (event, role, action) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (role) {\n        let roleDetails = this.state.selectedRecord[role.nuserrolecode] || {};\n        const fieldName = event.target.name.split('_')[0] + '_' + event.target.name.split('_')[1];\n        let actionArray = selectedRecord[`actionStatus_${role.nuserrolecode}`] || [];\n\n        if (event.target.type === 'checkbox') {\n          if (action) {\n            if (event.target.checked) {\n              actionArray.push(action.ntranscode);\n            } else {\n              actionArray.splice(actionArray.indexOf(action.ntranscode), 1);\n            }\n\n            selectedRecord[`actionStatus_${role.nuserrolecode}`] = actionArray;\n          }\n\n          roleDetails[fieldName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n\n          if (fieldName === 'IDS_PARTIALAPPROVAL' && roleDetails[\"IDS_PARTIALAPPROVAL\"] && roleDetails[\"IDS_PARTIALAPPROVAL\"] === transactionStatus.YES) {\n            roleDetails['IDS_SECTIONWISEAPPROVE'] = transactionStatus.NO;\n          }\n\n          selectedRecord[role.nuserrolecode] = roleDetails;\n        } else {\n          roleDetails[fieldName] = event.target.value;\n          selectedRecord[role.nuserrolecode] = roleDetails;\n        }\n      } else {\n        if (event.target.type === 'checkbox') {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChange = (comboData, role, comboName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (role) {\n        let roleDetails = this.state.selectedRecord[role.nuserrolecode] || {};\n        const fieldName = comboName.split('_')[0];\n        let filterArray = [];\n        roleDetails[fieldName] = [];\n\n        if (comboData) {\n          selectedRecord[comboName] = comboData;\n\n          if (fieldName === 'checklist') {\n            selectedRecord[`checklistVersion_${role.nuserrolecode}`] = {\n              label: comboData.item.schecklistversionname,\n              value: comboData.item.nchecklistversioncode\n            };\n            filterArray = comboData.item.nchecklistversioncode;\n          } else {\n            if (Array.isArray(comboData)) {\n              comboData.map(item => {\n                return filterArray.push(item.value);\n              });\n            } else {\n              filterArray = comboData.value;\n            }\n          }\n\n          roleDetails[fieldName] = filterArray;\n          selectedRecord[role.nuserrolecode] = roleDetails;\n        } else {\n          selectedRecord[comboName] = [];\n          filterArray = [];\n          roleDetails[fieldName] = filterArray;\n          selectedRecord[role.nuserrolecode] = roleDetails;\n        }\n\n        this.setState({\n          selectedRecord\n        });\n      } else {\n        selectedRecord[comboName] = comboData;\n\n        if (comboName === 'regtype') {\n          this.props.getCopySubType(comboData, selectedRecord, this.props.Login.userInfo, this.props.Login.masterData, this.props.Login.optCopyRegType);\n        } else {\n          this.setState({\n            selectedRecord\n          });\n        }\n      }\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let approvalSubTypeValue = this.props.Login.masterData.approvalSubTypeValue;\n      let registrationTypeValue = this.props.Login.masterData.registrationTypeValue;\n      let registrationSubTypeValue;\n\n      if (comboData) {\n        selectedRecord[fieldName] = comboData.value;\n        let inputData = {};\n\n        if (fieldName === 'napprovalsubtypecode') {\n          approvalSubTypeValue = comboData;\n          inputData = {\n            nFlag: 2,\n            napprovalsubtypecode: comboData.value,\n            userinfo: this.props.Login.userInfo\n          };\n        } else if (fieldName === 'nregtypecode') {\n          registrationTypeValue = comboData;\n          inputData = {\n            nFlag: 3,\n            napprovalsubtypecode: approvalSubTypeValue.value,\n            nregtypecode: comboData.value,\n            userinfo: this.props.Login.userInfo\n          };\n        } else if (fieldName === 'nregsubtypecode') {\n          registrationSubTypeValue = comboData;\n          inputData = {\n            nFlag: 4,\n            napprovalsubtypecode: approvalSubTypeValue.value,\n            nregtypecode: registrationTypeValue.value,\n            nregsubtypecode: comboData.value,\n            userinfo: this.props.Login.userInfo\n          };\n        }\n\n        if (fieldName === 'ntreeversiontempcode') {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData: { ...this.props.Login.masterData,\n                userroleTemplateValue: comboData\n              }\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          const oldState = {\n            approvalsubtype: this.props.Login.masterData.approvalsubtype,\n            registrationtype: this.props.Login.masterData.registrationType,\n            registrationsubtype: this.props.Login.masterData.registrationSubType,\n            approvalSubTypeValue,\n            registrationTypeValue,\n            registrationSubTypeValue,\n            RegistrationTypeList: this.state.RegistrationTypeList,\n            RegistrationSubTypeList: this.state.RegistrationSubTypeList\n          };\n          let inputParamData = {\n            inputData,\n            masterData: this.props.Login.masterData\n          };\n          this.props.getFilterChange(inputParamData, oldState);\n        }\n      } else {\n        selectedRecord[fieldName] = \"\";\n\n        if (fieldName === 'napprovalsubtypecode') {\n          this.approvalSubTypeValue = [];\n          registrationTypeValue = [];\n          registrationSubTypeValue = [];\n        } else if (fieldName === 'nregtypecode') {\n          registrationTypeValue = [];\n          registrationSubTypeValue = [];\n        } else {\n          registrationSubTypeValue = [];\n        }\n\n        this.setState({\n          selectedRecord\n        });\n      } // this.searchRef.current.value = \"\"\n\n    };\n\n    this.getApprovalConfigurationVersion = () => {\n      if (this.props.Login.masterData.approvalSubTypeValue) {\n        this.searchRef.current.value = \"\";\n        let masterData = { ...this.props.Login.masterData,\n          realApprovalSubTypeValue: this.props.Login.masterData.approvalSubTypeValue ? this.props.Login.masterData.approvalSubTypeValue : -1,\n          realRegistrationTypeValue: this.props.Login.masterData.registrationTypeValue ? this.props.Login.masterData.registrationTypeValue : -1,\n          realRegistrationSubTypeValue: this.props.Login.masterData.registrationSubTypeValue ? this.props.Login.masterData.registrationSubTypeValue : -1,\n          realApprovalConfigCode: this.props.Login.masterData.approvalConfigCode || -1,\n          realTreeVersionTemplateValue: this.props.Login.masterData.userroleTemplateValue || -1\n        };\n        const inputData = {\n          napprovalsubtypecode: this.props.Login.masterData.approvalSubTypeValue ? this.props.Login.masterData.approvalSubTypeValue.value : -1,\n          napprovalconfigcode: this.props.Login.masterData.approvalConfigCode,\n          ntreeversiontempcode: this.props.Login.masterData.userroleTemplateValue.value,\n          userinfo: this.props.Login.userInfo\n        };\n        let inputParamData = {\n          inputData,\n          masterData\n        };\n        this.props.getApprovalConfigurationVersion(inputParamData);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_APPROVALSUBTYPENOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.reloadData = () => {\n      // this.searchRef.current.value = \"\";\n      // const inputParam = {\n      //     inputData: { \"userinfo\": this.props.Login.userInfo },\n      //     classUrl: \"approvalconfig\",\n      //     methodUrl: \"ApprovalConfigFilter\",\n      //     userInfo: this.props.Login.userInfo,\n      //     displayName: \"IDS_APPROVALCONFIG\"\n      // };\n      // this.props.callService(inputParam);\n      this.getApprovalConfigurationVersion();\n    };\n\n    this.userRoleAccordion = userRoleList => {\n      const accordionMap = new Map();\n      userRoleList = sortData(userRoleList, 'ascending', 'nlevelno');\n      userRoleList.map(role => accordionMap.set(role.napprovalconfigrolecode, /*#__PURE__*/React.createElement(UserRoleAccordion, {\n        role: role,\n        roleConfig: this.props.Login.masterData.roleConfig,\n        userRoleControlRights: this.state.userRoleControlRights,\n        controlMap: this.state.controlMap,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        deleteRecord: this.deleteRecord,\n        tabDetail: this.tabDetail(role),\n        onTabOnChange: this.onTabOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 17\n        }\n      })));\n      return accordionMap;\n    };\n\n    this.tabDetail = () => {\n      const selectedRole = this.props.Login.masterData.selectedRole ? this.props.Login.masterData.selectedRole : this.props.Login.masterData.approvalconfigRoleNames && this.props.Login.masterData.approvalconfigRoleNames.length > 0 && sortData(this.props.Login.masterData.approvalconfigRoleNames, 'ascending', 'nlevelno')[0];\n      const tabMap = new Map();\n      tabMap.set(\"IDS_FILTERSTATUS\", /*#__PURE__*/React.createElement(FilterStatusTab, {\n        filterData: process(this.props.Login.masterData.roleFilters ? sortData(this.props.Login.masterData.roleFilters) : [], {\n          skip: this.state.dataState.skip,\n          take: this.state.dataState.take\n        }),\n        setDefault: this.props.setDefault,\n        selectedRole: selectedRole,\n        napprovalsubtypecode: this.approvalSubTypeValue.value,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 13\n        }\n      }));\n      tabMap.set(\"IDS_VALIDATIONSTATUS\", /*#__PURE__*/React.createElement(ValidationStatusTab, {\n        validationStatus: process(this.props.Login.masterData.roleValidations ? sortData(this.props.Login.masterData.roleValidations) : [], {\n          skip: this.state.dataState.skip,\n          take: this.state.dataState.take\n        }),\n        selectedRole: selectedRole,\n        napprovalsubtypecode: this.approvalSubTypeValue.value,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 13\n        }\n      }));\n\n      if (this.props.Login.masterData.roleDecisions && this.props.Login.masterData.roleDecisions.length > 0) {\n        tabMap.set(\"IDS_DECISIONSTATUS\", /*#__PURE__*/React.createElement(DecisionStatusTab, {\n          decisionData: process(this.props.Login.masterData.roleDecisions ? sortData(this.props.Login.masterData.roleDecisions) : [], {\n            skip: this.state.dataState.skip,\n            take: this.state.dataState.take\n          }),\n          setDefault: this.props.setDefault,\n          selectedRole: selectedRole,\n          napprovalsubtypecode: this.approvalSubTypeValue.value,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 17\n          }\n        }));\n      }\n\n      tabMap.set(\"IDS_ACTIONSTATUS\", /*#__PURE__*/React.createElement(ActionStatusTab, {\n        actionData: process(this.props.Login.masterData.roleActions ? sortData(this.props.Login.masterData.roleActions) : [], {\n          skip: this.state.dataState.skip,\n          take: this.state.dataState.take\n        }),\n        setDefault: this.props.setDefault,\n        selectedRole: selectedRole,\n        napprovalsubtypecode: this.approvalSubTypeValue.value,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 13\n        }\n      }));\n      return tabMap;\n    };\n\n    this.onTabOnChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    const dataState = {\n      skip: 0,\n      take: 10\n    };\n    this.state = {\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      openModal: false,\n      masterStatus: \"\",\n      error: \"\",\n      approvalConfigCode: -1,\n      dataResult: [],\n      dataState: dataState,\n      selectedRecord: {},\n      ApprovalsubtypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      UserRoleTemplateList: []\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let versionStatusCSS = \"outline-secondary\";\n\n    if (this.props.Login.masterData.selectedVersion && this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.APPROVED) {\n      versionStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.selectedVersion && this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.RETIRED) {\n      versionStatusCSS = \"outline-danger\";\n    }\n\n    const editId = this.state.controlMap.has(\"EditApprovalConfig\") && this.state.controlMap.get(\"EditApprovalConfig\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteApprovalConfig\") && this.state.controlMap.get(\"DeleteApprovalConfig\").ncontrolcode;\n    const approveId = this.state.controlMap.has(\"ApproveApprovalConfig\") && this.state.controlMap.get(\"ApproveApprovalConfig\").ncontrolcode;\n    const copyId = this.state.controlMap.has(\"CopyApprovalConfig\") && this.state.controlMap.get(\"CopyApprovalConfig\").ncontrolcode;\n    const addId = this.state.controlMap.has(\"AddApprovalConfig\") && this.state.controlMap.get(\"AddApprovalConfig\").ncontrolcode;\n    this.approvalSubTypeValue = this.props.Login.masterData.realApprovalSubTypeValue ? this.props.Login.masterData.realApprovalSubTypeValue : this.props.Login.masterData.approvalSubTypeValue ? this.props.Login.masterData.approvalSubTypeValue : this.props.Login.masterData.approvalsubtype ? this.props.Login.masterData.approvalsubtype.length > 0 ? {\n      value: sortData(this.props.Login.masterData.approvalsubtype, 'ascending', 'napprovalsubtypecode')[0].napprovalsubtypecode,\n      label: sortData(this.props.Login.masterData.approvalsubtype, 'ascending', 'napprovalsubtypecode')[0].ssubtypename\n    } : {} : {};\n    const filterParam = {\n      inputListName: \"versionData\",\n      selectedObject: \"selectedVersion\",\n      primaryKeyField: \"napproveconfversioncode\",\n      searchFieldList: [\"sversionname\", \"sversionstatus\", \"sapproveconfversiondesc\"],\n      fetchUrl: \"approvalconfig/getApprovalConfigVersion\",\n      fecthInputObject: {\n        napprovalsubtypecode: this.approvalSubTypeValue.value,\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      //NIBSCRT-2294\n      unchangeList: [\"approvalsubtype\", \"approvalSubTypeValue\", \"registrationType\", \"registrationTypeValue\", \"registrationSubType\", \"registrationSubTypeValue\", \"ApprovalsubtypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"treeVersionTemplate\", \"userroleTemplateValue\", \"realApprovalSubTypeValue\", \"realRegistrationTypeValue\", \"realRegistrationSubTypeValue\", \"realTreeVersionTemplateValue\", \"approvalConfigCode\"]\n    };\n    const selectedRole = this.props.Login.masterData.selectedRole ? this.props.Login.masterData.selectedRole : this.props.Login.masterData.approvalconfigRoleNames && this.props.Login.masterData.approvalconfigRoleNames.length > 0 && sortData(this.props.Login.masterData.approvalconfigRoleNames, 'ascending', 'nlevelno')[0];\n    const mandatoryFields = [{\n      \"idsName\": \"IDS_VERSIONNAME\",\n      \"dataField\": \"sversionname\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n    this.props.Login.operation !== 'copy' && this.props.Login.userRoleTree && this.props.Login.userRoleTree.map(role => {\n      mandatoryFields.push({\n        \"idsName\": \"IDS_APPROVALSTATUS\",\n        \"alertSuffix\": ` - ${role.suserrolename}`,\n        \"dataField\": `approvalstatus_${role.nuserrolecode}`,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      });\n      mandatoryFields.push({\n        \"idsName\": \"IDS_FILTERSTATUS\",\n        \"alertSuffix\": ` - ${role.suserrolename}`,\n        \"dataField\": `filterstatus_${role.nuserrolecode}`,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      });\n      mandatoryFields.push({\n        \"idsName\": \"IDS_VALIDATIONSTATUS\",\n        \"alertSuffix\": ` - ${role.suserrolename}`,\n        \"dataField\": `validationstatus_${role.nuserrolecode}`,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }); // if (this.props.Login.decisionStatusOptions && this.props.Login.decisionStatusOptions.length > 0) {\n      //     mandatoryFields.push({ \"idsName\": \"IDS_DECISIONSTATUS\", \"alertSuffix\": ` - ${role.suserrolename}`, \"dataField\": `decisionstatus_${role.nuserrolecode}` });\n      // }\n\n      return null;\n    });\n    let breadCrumbData = [];\n\n    if (this.props.Login.masterData.realApprovalSubTypeValue && this.props.Login.masterData.realApprovalSubTypeValue.value === ApprovalSubType.TESTRESULTAPPROVAL) {\n      breadCrumbData = [{\n        \"label\": \"IDS_APPROVALSUBTYPE\",\n        \"value\": this.props.Login.masterData.realApprovalSubTypeValue ? this.props.Login.masterData.realApprovalSubTypeValue.label : \"NA\"\n      }, {\n        \"label\": \"IDS_REGISTRATIONTYPE\",\n        \"value\": this.props.Login.masterData.realRegistrationTypeValue ? this.props.Login.masterData.realRegistrationTypeValue.label : \"NA\"\n      }, {\n        \"label\": \"IDS_REGISTRATIONSUBTYPE\",\n        \"value\": this.props.Login.masterData.realRegistrationSubTypeValue ? this.props.Login.masterData.realRegistrationSubTypeValue.label : \"NA\"\n      }, {\n        \"label\": \"IDS_USERROLETEMPLATE\",\n        \"value\": this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.label : \"NA\"\n      }];\n    } else {\n      breadCrumbData = [{\n        \"label\": \"IDS_APPROVALSUBTYPE\",\n        \"value\": this.props.Login.masterData.realApprovalSubTypeValue ? this.props.Login.masterData.realApprovalSubTypeValue.label : \"NA\"\n      }, {\n        \"label\": \"IDS_USERROLETEMPLATE\",\n        \"value\": this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.label : \"NA\"\n      }];\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      filterColumnData: this.props.filterColumnData,\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_APPROVALCONFIG\"\n      }),\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.versionData,\n      getMasterDetail: version => this.props.getApprovalConfigVersion(version, this.approvalSubTypeValue.value, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedVersion,\n      primaryKeyField: \"napproveconfversioncode\",\n      mainField: \"sversionname\",\n      firstField: \"sapproveconfversiondesc\",\n      secondField: \"sversionstatus\",\n      isIDSField: \"Yes\",\n      searchRef: this.searchRef,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      openModal: () => this.props.openModal(\"create\", this.props.Login.masterData.realApprovalConfigCode, this.approvalSubTypeValue.value, this.props.Login.userInfo, addId, this.props.Login.masterData.realTreeVersionTemplateValue.value),\n      needAccordianFilter: false,\n      reloadData: this.reloadData,\n      hidePaging: true,\n      showFilterIcon: true,\n      onFilterSubmit: this.getApprovalConfigurationVersion,\n      filterComponent: [{\n        \"IDS_SAMPLEFILTER\": /*#__PURE__*/React.createElement(SampleFilter, {\n          selectedRecord: this.state.selectedRecord || {},\n          filterComboChange: this.onFilterComboChange,\n          approvalSubTypeOptions: this.state.ApprovalsubtypeList,\n          approvalSubTypeValue: this.props.Login.masterData.approvalSubTypeValue,\n          registrationTypeOptions: this.state.RegistrationTypeList,\n          registrationTypeValue: this.props.Login.masterData.registrationTypeValue,\n          registrationSubTypeOptions: this.state.RegistrationSubTypeList,\n          registrationSubTypeValue: this.props.Login.masterData.registrationSubTypeValue,\n          userroleTemplateOptions: this.state.UserRoleTemplateList,\n          userroleTemplateValue: this.props.Login.masterData.userroleTemplateValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 45\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.selectedVersion ? Object.entries(this.props.Login.masterData.selectedVersion).length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.selectedVersion.sversionname)), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 61\n      }\n    }, `${this.props.intl.formatMessage({\n      id: \"IDS_VERSIONNO\"\n    })}:${this.props.Login.masterData.selectedVersion.sapproveconfversiondesc}`, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${versionStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedVersion.sversionstatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.getApprovalConfigEditData(this.props.Login.masterData.selectedVersion.napproveconfversioncode, this.approvalSubTypeValue.value, this.props.Login.userInfo, this.props.Login.masterData, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 77\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 77\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }) // data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.approveVersion(approveId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 77\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      hidden: this.state.userRoleControlRights.indexOf(copyId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COPY\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.props.copyVersion(this.approvalSubTypeValue.value, this.props.Login.userInfo, this.props.Login.masterData, copyId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCopy,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_COPY\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 77\n      }\n    }))))))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.versionConfig ? this.props.Login.masterData.versionConfig.map(item => /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: item.stransdisplaystatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 80\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 69\n      }\n    }, this.props.Login.masterData.selectedVersion[`${item.ntranscode}`])))) : \"\")), /*#__PURE__*/React.createElement(Row, {\n      oGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData ? this.props.Login.masterData.approvalconfigRoleNames.length > 0 ? /*#__PURE__*/React.createElement(CustomAccordion, {\n      key: \"UserRoles\",\n      accordionTitle: \"suserrolename\",\n      accordionComponent: this.userRoleAccordion(this.props.Login.masterData.approvalconfigRoleNames),\n      inputParam: {\n        masterData: this.props.Login.masterData,\n        userinfo: this.props.Login.userInfo,\n        napprovalsubtypecode: this.approvalSubTypeValue.value\n      },\n      accordionClick: this.props.getRoleDetails,\n      accordionPrimaryKey: \"napprovalconfigrolecode\",\n      accordionObjectName: \"role\",\n      selectedKey: selectedRole.napprovalconfigrolecode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 65\n      }\n    }) : \"\" : \"\"))))) : \"\" : \"\"))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      onSaveClick: this.onSaveClick,\n      operation: this.props.Login.operation,\n      screenName: \"IDS_APPROVALCONFIG\",\n      closeModal: this.handleClose,\n      show: this.props.Login.openModal,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(AddApprovalConfig, {\n        selectedRecord: this.state.selectedRecord ? this.state.selectedRecord : {},\n        userRoleTree: this.props.Login.userRoleTree,\n        approvalSubTypeValue: this.approvalSubTypeValue,\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        approvalStatusOptions: this.props.Login.approvalStatusOptions,\n        approvalStatusValue: this.props.Login.approvalStatusValue,\n        filterStatusOptions: this.props.Login.filterStatusOptions,\n        filterStatusValues: this.props.Login.filterStatusValues,\n        topLevelValidStatusOptions: this.props.Login.topLevelValidStatusOptions,\n        validationStatusOptions: this.props.Login.validationStatusOptions,\n        validationStatusValues: this.props.Login.validationStatusValues,\n        decisionStatusOptions: this.props.Login.decisionStatusOptions,\n        decisionStatusValues: this.props.Login.decisionStatusValues,\n        actionStatus: this.props.Login.actionStatus,\n        checklistOptions: this.props.Login.checklistOptions,\n        checklistValues: this.props.Login.checklistValues,\n        roleConfig: this.props.Login.roleConfig,\n        versionConfig: this.props.Login.versionConfig,\n        operation: this.props.Login.operation,\n        nsubType: this.approvalSubTypeValue.value,\n        registrationTypeOptions: this.props.Login.optCopyRegType,\n        registrationTypeValue: this.state.registrationTypeValue,\n        registrationSubTypeOptions: this.props.Login.optCopyRegSubType,\n        registrationSubTypeValue: this.state.registrationSubTypeValue,\n        selectedVersion: this.props.Login.masterData.selectedVersion,\n        masterData: this.props.Login.masterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      selectedRecord,\n      userRoleControlRights,\n      controlMap,\n      ApprovalsubtypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      UserRoleTemplateList\n    } = this.state;\n    let updateState = false;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      updateState = true;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode); // const ApprovalsubtypeListMap = constructOptionList(this.props.Login.masterData.approvalsubtype || [], \"napprovalsubtypecode\", \"ssubtypename\", 'ntemplatecode','ascending', false);\n      // const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.registrationType || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nregtypecode', false);\n      // const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.registrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nregsubtypecode', false);\n\n      const ApprovalsubtypeListMap = constructOptionList(this.props.Login.masterData.approvalsubtype || [], \"napprovalsubtypecode\", \"ssubtypename\", 'ntemplatecode', 'ascending', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.registrationType || [], \"nregtypecode\", \"sregtypename\", 'nsorter', 'ascending', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.registrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'nsorter', 'ascending', false);\n      const UserRoleTemplateListMap = constructOptionList(this.props.Login.masterData.treeVersionTemplate || [], \"ntreeversiontempcode\", \"sversiondescription\", 'ntransactionstatus', 'descending', false);\n      ApprovalsubtypeList = ApprovalsubtypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      UserRoleTemplateList = UserRoleTemplateListMap.get(\"OptionList\");\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      //this.setState({  RegistrationTypeList,RegistrationSubTypeList,templateVersionOptionList});  \n      // RegistrationTypeList=this.props.Login.masterData.RegistrationTypeList\n      // RegistrationSubTypeList=this.props.Login.masterData.RegistrationSubTypeList\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.registrationType || [], \"nregtypecode\", \"sregtypename\", 'nsorter', 'ascending', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.registrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'nsorter', 'ascending', false);\n      const UserRoleTemplateListMap = constructOptionList(this.props.Login.masterData.treeVersionTemplate || [], \"ntreeversiontempcode\", \"sversiondescription\", 'ntransactionstatus', 'descending', false);\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      UserRoleTemplateList = UserRoleTemplateListMap.get(\"OptionList\");\n      updateState = true;\n    }\n\n    if (updateState) {\n      this.setState({\n        selectedRecord,\n        userRoleControlRights,\n        controlMap,\n        ApprovalsubtypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        UserRoleTemplateList\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  openModal,\n  updateStore,\n  getApprovalConfigVersion,\n  getApprovalConfigEditData,\n  copyVersion,\n  getFilterChange,\n  validateEsignCredential,\n  getCopySubType,\n  getRoleDetails,\n  setDefault,\n  filterColumnData,\n  getApprovalConfigurationVersion\n})(injectIntl(ApprovalConfig));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/approvalconfig/ApprovalConfig.jsx"],"names":["React","connect","injectIntl","FormattedMessage","toast","callService","crudMaster","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faCopy","faThumbsUp","faTrashAlt","sortData","getControlMap","showEsign","constructOptionList","process","ListMaster","Esign","SampleFilter","AddApprovalConfig","SlideOutModal","ReadOnlyText","ContentPanel","openModal","updateStore","getApprovalConfigVersion","getApprovalConfigEditData","copyVersion","setDefault","validateEsignCredential","getFilterChange","getRoleDetails","getCopySubType","filterColumnData","getApprovalConfigurationVersion","DEFAULT_RETURN","ApprovalSubType","transactionStatus","FilterStatusTab","ValidationStatusTab","UserRoleAccordion","CustomAccordion","DecisionStatusTab","ActionStatusTab","BreadcrumbComponent","ConfirmMessage","Affix","mapStateToProps","state","Login","ApprovalConfig","Component","constructor","props","validateEsign","inputParam","inputData","userInfo","sreason","selectedRecord","password","screenData","handleClose","loadEsign","operation","updateInfo","typeName","data","selectedId","deleteApprovalConfigVersion","deleteId","masterData","selectedVersion","ntransactionstatus","APPROVED","RETIRED","warn","intl","formatMessage","id","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","napproveconfversioncode","fetchUrl","fecthInputObject","napprovalsubtypecode","approvalSubTypeValue","value","userinfo","unchangeList","napprovalconfigversioncode","napprovalconfigcode","realApprovalConfigCode","ntreeversiontempcode","realTreeVersionTemplateValue","methodUrl","classUrl","displayName","userRoleControlRights","nformcode","screenName","approveVersion","approveId","onSaveClick","saveType","formRef","undefined","subTypeCode","approvalconfigversion","sversionname","nregtypecode","TESTRESULTAPPROVAL","registrationTypeValue","nregsubtypecode","registrationSubTypeValue","searchRef","ncontrolcode","bool","errormessage","approvalconfigrole","filterDetailCount","validationDetailCount","decisionDetailCount","actionDetailCount","userRoleTree","isAutoApprovalVersion","YES","reverse","map","role","approvalconfigrolefilterdetail","approvalconfigrolevalidationdetail","approvalconfigroledecisiondetail","approvalconfigroleactiondetail","nuserrolecode","push","napprovalconfigrolecode","nchecklistversioncode","checklist","NA","npartialapprovalneed","nsectionwiseapprovalneed","NO","nrecomretestneed","nrecomrecalcneed","nretestneed","nrecalcneed","nlevelno","napprovalstatuscode","approvalstatus","nautoapproval","nautoapprovalstatuscode","nautodescisionstatuscode","decisionstatus","PASS","length","DRAFT","ncorrectionneed","nesignneed","nsitecode","nmastersitecode","nstatus","ACTIVE","filterstatus","filterValue","validationstatus","validationValue","decisionValue","actionValue","suserrolename","finalInputData","temp1","versionConfig","temp","ntranscode","stransdisplaystatus","nautoapprovalstatus","nautodescisionstatus","nautoallot","nneedjoballocation","napproveconfversionno","sapproveconfversiondesc","join","ConfirmDelete","confirmMessage","confirm","onInputOnChange","event","action","roleDetails","fieldName","target","name","split","actionArray","type","checked","splice","indexOf","setState","onComboChange","comboData","comboName","filterArray","label","item","schecklistversionname","Array","isArray","optCopyRegType","onFilterComboChange","nFlag","userroleTemplateValue","oldState","approvalsubtype","registrationtype","registrationType","registrationsubtype","registrationSubType","RegistrationTypeList","RegistrationSubTypeList","inputParamData","current","realApprovalSubTypeValue","realRegistrationTypeValue","realRegistrationSubTypeValue","approvalConfigCode","reloadData","userRoleAccordion","userRoleList","accordionMap","Map","set","roleConfig","controlMap","deleteRecord","tabDetail","onTabOnChange","selectedRole","approvalconfigRoleNames","tabMap","roleFilters","skip","dataState","take","roleValidations","roleDecisions","roleActions","tabProps","masterStatus","error","dataResult","ApprovalsubtypeList","UserRoleTemplateList","createRef","getDerivedStateFromProps","render","versionStatusCSS","editId","has","get","copyId","addId","ssubtypename","filterParam","searchFieldList","mandatoryFields","breadCrumbData","searchedData","versionData","version","Object","entries","sversionstatus","float","approvalStatusOptions","approvalStatusValue","filterStatusOptions","filterStatusValues","topLevelValidStatusOptions","validationStatusOptions","validationStatusValues","decisionStatusOptions","decisionStatusValues","actionStatus","checklistOptions","checklistValues","optCopyRegSubType","componentDidUpdate","previousProps","updateState","values","ApprovalsubtypeListMap","RegistrationTypeListMap","RegistrationSubTypeListMap","UserRoleTemplateListMap","treeVersionTemplate","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport { callService, crudMaster } from '../../../actions';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faCopy, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { sortData, getControlMap, showEsign, constructOptionList } from '../../../components/CommonScript'\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ListMaster from '../../../components/list-master/list-master.component';\r\nimport Esign from '../../audittrail/Esign';\r\nimport SampleFilter from './SampleFilter';\r\nimport AddApprovalConfig from './AddApprovalConfig';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport { ReadOnlyText, ContentPanel } from '../../../components/App.styles';\r\nimport {\r\n    openModal, updateStore, getApprovalConfigVersion, getApprovalConfigEditData, copyVersion, setDefault, validateEsignCredential,\r\n    getFilterChange, getRoleDetails, getCopySubType, filterColumnData, getApprovalConfigurationVersion\r\n} from '../../../actions'\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport { ApprovalSubType, transactionStatus } from '../../../components/Enumeration';\r\nimport FilterStatusTab from './FilterStatusTab';\r\nimport ValidationStatusTab from './ValidationStatusTab';\r\nimport UserRoleAccordion from './UserRoleAccordion';\r\nimport CustomAccordion from '../../../components/custom-accordion/custom-accordion.component';\r\nimport DecisionStatusTab from './DecisionStatusTab';\r\nimport ActionStatusTab from './ActionStatusTab';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport BreadcrumbComponent from '../../../components/Breadcrumb.Component';\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\nimport { Affix } from 'rsuite';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass ApprovalConfig extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n        this.state = {\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            openModal: false, masterStatus: \"\", error: \"\",\r\n            approvalConfigCode: -1,\r\n            dataResult: [], dataState: dataState, selectedRecord: {},\r\n            ApprovalsubtypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            UserRoleTemplateList: []\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\":\r\n                {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {}\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    deleteApprovalConfigVersion = (deleteId) => {\r\n\r\n        if (this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.APPROVED ||\r\n            this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }))\r\n        }\r\n        else {\r\n            const postParam = {\r\n                inputListName: \"versionData\", selectedObject: \"selectedVersion\",\r\n                primaryKeyField: \"napproveconfversioncode\",\r\n                primaryKeyValue: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                fetchUrl: \"approvalconfig/getApprovalConfigVersion\",\r\n                fecthInputObject: { napprovalsubtypecode: this.approvalSubTypeValue.value, userinfo: this.props.Login.userInfo },\r\n                unchangeList: [\"approvalsubtype\", \"approvalSubTypeValue\", \"registrationType\", \"registrationTypeValue\", \"registrationSubType\", \"registrationSubTypeValue\",\r\n                    \"ApprovalsubtypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\"]\r\n            }\r\n            const inputData = {\r\n                'approvalconfigversion': {\r\n                    napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                    napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                    napprovalsubtypecode: this.approvalSubTypeValue.value,\r\n                    ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue.value,\r\n                    userinfo: this.props.Login.userInfo\r\n                }\r\n            }\r\n            inputData['userinfo'] = this.props.Login.userInfo\r\n            const inputParam = {\r\n                methodUrl: 'ApprovalConfigVersion',\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                displayName: \"IDS_APPROVALCONFIG\",\r\n                inputData: inputData, postParam,\r\n                operation: \"delete\"\r\n\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, operation: \"delete\",\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" })\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n\r\n    }\r\n    approveVersion = (approveId) => {\r\n        if (this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.APPROVED ||\r\n            this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTVERSION\" }))\r\n        } else {\r\n            const postParam = {\r\n                inputListName: \"versionData\", selectedObject: \"selectedVersion\",\r\n                primaryKeyField: \"napproveconfversioncode\",\r\n                primaryKeyValue: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                fetchUrl: \"approvalconfig/getApprovalConfigVersion\",\r\n                fecthInputObject: { napprovalsubtypecode: this.approvalSubTypeValue.value, userinfo: this.props.Login.userInfo },\r\n                unchangeList: [\"approvalsubtype\", \"approvalSubTypeValue\", \"registrationType\", \"registrationTypeValue\", \"registrationSubType\",\r\n                    \"registrationSubTypeValue\", \"ApprovalsubtypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\"]\r\n            }\r\n            const inputData = {\r\n                'approvalconfigversion': {\r\n                    napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                    napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                    napprovalsubtypecode: this.approvalSubTypeValue.value,\r\n                    ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1,\r\n                    userinfo: this.props.Login.userInfo\r\n                }\r\n\r\n            }\r\n            inputData['userinfo'] = this.props.Login.userInfo\r\n            const inputParam = {\r\n                methodUrl: 'ApprovalConfigVersion',\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                displayName: \"IDS_APPROVALCONFIG\",\r\n                inputData: inputData, postParam,\r\n                operation: \"approve\"\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" }), operation: \"approve\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let postParam = undefined;\r\n        if (this.props.Login.operation === \"copy\") {\r\n\r\n            const subTypeCode = this.approvalSubTypeValue.value;\r\n\r\n            const inputData = {\r\n                approvalconfigversion: {\r\n                    napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                    napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                    napprovalsubtypecode: subTypeCode,\r\n                    sversionname: this.state.selectedRecord.sversionname,\r\n                    nregtypecode: subTypeCode === ApprovalSubType.TESTRESULTAPPROVAL ? this.state.selectedRecord['regtype'] ? this.state.selectedRecord['regtype'].value : this.state.registrationTypeValue[0].value : -1,\r\n                    nregsubtypecode: subTypeCode === ApprovalSubType.TESTRESULTAPPROVAL ? this.state.selectedRecord['regsubtype'] ? this.state.selectedRecord['regsubtype'].value : this.state.registrationSubTypeValue[0].value : -1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ntreeversiontempcode: this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1\r\n                }\r\n\r\n            }\r\n            inputData['userinfo'] = this.props.Login.userInfo\r\n            const inputParam = {\r\n                methodUrl: 'ApprovalConfigVersion',\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                displayName: \"IDS_APPROVALCONFIG\",\r\n                inputData: inputData, postParam, searchRef: this.searchRef,\r\n                operation: \"copy\"\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" }), operation: \"copy\"\r\n                    }\r\n                }\r\n\r\n                this.props.updateStore(updateInfo);\r\n\r\n            } else {\r\n\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n\r\n            let bool = true;\r\n            let errormessage = [];\r\n            let inputData = {};\r\n            let approvalconfigrole = [];\r\n            let filterDetailCount = 0;\r\n            let validationDetailCount = 0;\r\n            let decisionDetailCount = 0;\r\n            let actionDetailCount = 0;\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputData['napprovalconfigcode'] = this.props.Login.masterData.realApprovalConfigCode\r\n            inputData['ntreeversiontempcode'] = this.props.Login.userRoleTree[0].ntreeversiontempcode\r\n            inputData['napprovalsubtypecode'] = this.approvalSubTypeValue.value\r\n            let isAutoApprovalVersion = this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ? true:false;\r\n           \r\n            const userRoleTree = this.props.Login.userRoleTree.reverse();\r\n            userRoleTree.map(role => {\r\n                let approvalconfigrolefilterdetail = [];\r\n                let approvalconfigrolevalidationdetail = [];\r\n                let approvalconfigroledecisiondetail = [];\r\n                let approvalconfigroleactiondetail = [];\r\n                //to fill role details\r\n                if (this.state.selectedRecord[role.nuserrolecode]) {\r\n                    approvalconfigrole.push({\r\n                        napprovalconfigrolecode: this.props.Login.operation === 'create' ? 0 : role.napprovalconfigrolecode,\r\n                        napprovalconfigcode: role.napprovalconfigcode,\r\n                        ntreeversiontempcode: role.ntreeversiontempcode,\r\n                        nuserrolecode: role.nuserrolecode,\r\n                        nchecklistversioncode: this.state.selectedRecord[role.nuserrolecode] ? this.state.selectedRecord[role.nuserrolecode].checklist ?\r\n                            this.state.selectedRecord[role.nuserrolecode].checklist : transactionStatus.NA : transactionStatus.NA,\r\n                        npartialapprovalneed: this.state.selectedRecord[role.nuserrolecode]['Partial Approval_'+role.nuserrolecode] ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['Partial Approval_'+role.nuserrolecode] : transactionStatus.YES,\r\n                        nsectionwiseapprovalneed: this.state.selectedRecord[role.nuserrolecode]['IDS_PARTIALAPPROVAL'] && this.state.selectedRecord[role.nuserrolecode]['IDS_PARTIALAPPROVAL'] === transactionStatus.NO ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['IDS_SECTIONWISEAPPROVE'] ?\r\n                                this.state.selectedRecord[role.nuserrolecode]['IDS_SECTIONWISEAPPROVE'] : transactionStatus.NO\r\n                            : transactionStatus.NO,\r\n                        // nrecomretestneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRETEST'] ?\r\n                        //     this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRETEST'] : transactionStatus.NO,\r\n                        // nrecomrecalcneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRECALC'] ?\r\n                        //     this.state.selectedRecord[role.nuserrolecode]['IDS_RECOMMENDRECALC'] : transactionStatus.NO,\r\n                        // nretestneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RETEST'] ?\r\n                        //     this.state.selectedRecord[role.nuserrolecode]['IDS_RETEST'] : transactionStatus.NO,\r\n                        // nrecalcneed: this.state.selectedRecord[role.nuserrolecode]['IDS_RECALC'] ?\r\n                        //     this.state.selectedRecord[role.nuserrolecode]['IDS_RECALC'] : transactionStatus.NO,\r\n                        // nlevelno: role.nlevelno,\r\n                        nrecomretestneed: this.state.selectedRecord[role.nuserrolecode]['Recommend Retest_'+role.nuserrolecode] ?\r\n                        this.state.selectedRecord[role.nuserrolecode]['Recommend Retest_'+role.nuserrolecode] : transactionStatus.NO,\r\n                    nrecomrecalcneed: this.state.selectedRecord[role.nuserrolecode]['Recommend Recalc_'+role.nuserrolecode] ?\r\n                        this.state.selectedRecord[role.nuserrolecode]['Recommend Recalc_'+role.nuserrolecode] : transactionStatus.NO,\r\n                    nretestneed: this.state.selectedRecord[role.nuserrolecode]['Retest_'+role.nuserrolecode] ?\r\n                        this.state.selectedRecord[role.nuserrolecode]['Retest_'+role.nuserrolecode] : transactionStatus.NO,\r\n                    nrecalcneed: this.state.selectedRecord[role.nuserrolecode]['Recalc_'+role.nuserrolecode] ?\r\n                        this.state.selectedRecord[role.nuserrolecode]['Recalc_'+role.nuserrolecode] : transactionStatus.NO,\r\n                    nlevelno: role.nlevelno,\r\n                        napprovalstatuscode: this.state.selectedRecord[role.nuserrolecode].approvalstatus ? this.state.selectedRecord[role.nuserrolecode].approvalstatus : transactionStatus.NA,\r\n\r\n                        nautoapproval: this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ? transactionStatus.YES :\r\n                            this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] ? this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] : transactionStatus.NO,\r\n\r\n                        nautoapprovalstatuscode: this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ?\r\n                            this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus\r\n                            : this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] && this.state.selectedRecord[role.nuserrolecode].approvalstatus ?\r\n                                this.state.selectedRecord[role.nuserrolecode].approvalstatus\r\n                                : transactionStatus.NA\r\n                        ,\r\n                        nautodescisionstatuscode: this.state.selectedRecord['IDS_AUTOAPPROVAL'] && this.state.selectedRecord['IDS_AUTOAPPROVAL'] === transactionStatus.YES ?\r\n                            this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] : transactionStatus.PASS\r\n                            : this.state.selectedRecord[role.nuserrolecode]['IDS_AUTOAPPROVAL'] && this.state.selectedRecord[role.nuserrolecode].decisionstatus && this.state.selectedRecord[role.nuserrolecode].decisionstatus.length > 0 ?\r\n                                this.state.selectedRecord[role.nuserrolecode].decisionstatus[0] : transactionStatus.DRAFT\r\n                        // :this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus&&this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus.length>0 ?\r\n                        // :transactionStatus.NA\r\n                        ,\r\n                        ncorrectionneed: this.state.selectedRecord[role.nuserrolecode]['IDS_CORRECTION'] ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['IDS_CORRECTION'] : transactionStatus.NO,\r\n                        nesignneed: this.state.selectedRecord[role.nuserrolecode]['e-Sign_'+role.nuserrolecode] ?\r\n                            this.state.selectedRecord[role.nuserrolecode]['e-Sign_'+role.nuserrolecode] : transactionStatus.NO,\r\n                        ntransactionstatus: transactionStatus.DRAFT,\r\n                        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n                        nstatus: transactionStatus.ACTIVE\r\n\r\n                    })\r\n\r\n\r\n                    if (this.state.selectedRecord[role.nuserrolecode].filterstatus) {\r\n                        this.state.selectedRecord[role.nuserrolecode].filterstatus.map(filterValue => {\r\n                            filterDetailCount++;\r\n                            approvalconfigrolefilterdetail.push({\r\n                                napprovalconfigcode: role.napprovalconfigcode,\r\n                                nuserrolecode: role.nuserrolecode,\r\n                                nlevelno: role.nlevelno,\r\n                                ntransactionstatus: filterValue,\r\n                                nstatus: transactionStatus.ACTIVE\r\n                            })\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    if (this.state.selectedRecord[role.nuserrolecode].validationstatus) {\r\n                        this.state.selectedRecord[role.nuserrolecode].validationstatus.map(validationValue => {\r\n                            validationDetailCount++;\r\n                            approvalconfigrolevalidationdetail.push({\r\n                                napprovalconfigcode: role.napprovalconfigcode,\r\n                                nuserrolecode: role.nuserrolecode,\r\n                                nlevelno: role.nlevelno,\r\n                                ntransactionstatus: validationValue,\r\n                                nstatus: transactionStatus.ACTIVE\r\n                            })\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    if (this.state.selectedRecord[role.nuserrolecode].decisionstatus) {\r\n                        this.state.selectedRecord[role.nuserrolecode].decisionstatus.map(decisionValue => {\r\n                            decisionDetailCount++;\r\n                            approvalconfigroledecisiondetail.push({\r\n                                napprovalconfigcode: role.napprovalconfigcode,\r\n                                nuserrolecode: role.nuserrolecode,\r\n                                nlevelno: role.nlevelno,\r\n                                ntransactionstatus: decisionValue,\r\n                                nstatus: transactionStatus.ACTIVE\r\n                            });\r\n                            return null;\r\n                        })\r\n                    }\r\n\r\n                    this.state.selectedRecord[`actionStatus_${role.nuserrolecode}`] ? this.state.selectedRecord[`actionStatus_${role.nuserrolecode}`].map(actionValue => {\r\n                        actionDetailCount++;\r\n                        approvalconfigroleactiondetail.push({\r\n                            napprovalconfigcode: role.napprovalconfigcode,\r\n                            nuserrolecode: role.nuserrolecode,\r\n                            nlevelno: role.nlevelno,\r\n                            ntransactionstatus: actionValue,\r\n                            nstatus: transactionStatus.ACTIVE\r\n                        });\r\n                        return null;\r\n                    }) : approvalconfigroleactiondetail.push();\r\n                    actionDetailCount++;\r\n                    approvalconfigroleactiondetail.push({\r\n                        napprovalconfigcode: role.napprovalconfigcode,\r\n                        nuserrolecode: role.nuserrolecode,\r\n                        nlevelno: role.nlevelno,\r\n                        ntransactionstatus: this.state.selectedRecord[role.nuserrolecode].approvalstatus ? this.state.selectedRecord[role.nuserrolecode].approvalstatus : -1,\r\n                        nstatus: transactionStatus.ACTIVE\r\n                    });\r\n\r\n                    inputData[`approvalconfigrolefilterdetail_${[role.nuserrolecode]}`] = approvalconfigrolefilterdetail\r\n                    inputData[`approvalconfigrolevalidationdetail_${[role.nuserrolecode]}`] = approvalconfigrolevalidationdetail\r\n                    inputData[`approvalconfigroledecisiondetail_${[role.nuserrolecode]}`] = approvalconfigroledecisiondetail\r\n                    inputData[`approvalconfigroleactiondetail_${[role.nuserrolecode]}`] = approvalconfigroleactiondetail\r\n                    bool = bool ? true : false\r\n                    return null;\r\n                } else {\r\n                    bool = false\r\n                    errormessage.push(role.suserrolename)\r\n                    return false;\r\n                }\r\n            })//role map\r\n\r\n            inputData['approvalconfigrole'] = approvalconfigrole\r\n            inputData['rolecount'] = this.props.Login.userRoleTree.length\r\n            inputData['filterdetailcount'] = filterDetailCount\r\n            inputData['validationdetailcount'] = validationDetailCount\r\n            inputData['decisiondetailcount'] = decisionDetailCount\r\n            inputData['actioncount'] = actionDetailCount\r\n            inputData['ntreeversiontempcode'] = this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.value : -1;\r\n            let finalInputData = {}\r\n            let inputParam = {}\r\n            if (bool) {\r\n                if (this.props.Login.operation === \"update\") {\r\n                    // edit\r\n                    postParam = { inputListName: \"versionData\", selectedObject: \"selectedVersion\", primaryKeyField: \"napproveconfversioncode\" };\r\n                   \r\n        const temp1= {};\r\n        this.props.Login.versionConfig.map(temp=>{\r\n                        if(temp.ntranscode===81)\r\n                        {\r\n                            temp1['nneedautoapproval']= this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO\r\n                        }\r\n                        else if(temp.ntranscode===85)\r\n                        {\r\n                            temp1['nneedautocomplete'] = this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO\r\n                        }\r\n\r\n\r\n\r\n                    })\r\n                \r\n\r\n                    inputData['approvalconfigautoapproval'] = {\r\n                        napprovalconfigversioncode: this.props.Login.masterData.selectedVersion.napproveconfversioncode,\r\n                        napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                        sversionname: this.state.selectedRecord.sversionname,\r\n                      //  nneedautocomplete: this.state.selectedRecord['Auto Complete'] ? this.state.selectedRecord['Auto Complete'] : transactionStatus.NO,\r\n                      //  nneedautoapproval: this.state.selectedRecord['Auto Approval'] ? this.state.selectedRecord['Auto Approval'] : transactionStatus.NO,\r\n                        nautoapprovalstatus: this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus : transactionStatus.NA,\r\n                        nautodescisionstatus: isAutoApprovalVersion ? transactionStatus.PASS : this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus ? (this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] || transactionStatus.DRAFT ): transactionStatus.DRAFT,\r\n                        nautoallot: this.state.selectedRecord['IDS_AUTOALLOT'] ? this.state.selectedRecord['IDS_AUTOALLOT'] : transactionStatus.NO,\r\n                        nneedjoballocation: this.state.selectedRecord['IDS_JOBALLOCATION'] ? this.state.selectedRecord['IDS_JOBALLOCATION'] : transactionStatus.NO,\r\n                        nstatus: transactionStatus.ACTIVE,\r\n                        ...temp1\r\n                    }\r\n                }\r\n                else {\r\n\r\n\r\n                    inputData['approveconfigversion'] = {\r\n                        napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                        napproveconfversionno: -1,\r\n                        ntransactionstatus: transactionStatus.DRAFT,\r\n                        ntreeversiontempcode: this.props.Login.userRoleTree[0].ntreeversiontempcode,\r\n                        sapproveconfversiondesc: '-',\r\n                        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n                        nstatus: transactionStatus.ACTIVE\r\n                    }\r\n                    const temp1= {};\r\n                    this.props.Login.versionConfig.map(temp=>{\r\n                                    if(temp.ntranscode===81)\r\n                                    {\r\n                                        temp1['nneedautoapproval']= this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO\r\n                                    }\r\n                                    else if(temp.ntranscode===85)\r\n                                    {\r\n                                        temp1['nneedautocomplete'] = this.state.selectedRecord[temp.stransdisplaystatus] ? this.state.selectedRecord[temp.stransdisplaystatus] : transactionStatus.NO\r\n                                    }\r\n            \r\n            \r\n            \r\n                                })\r\n                    inputData['approvalconfigautoapproval'] = {\r\n                        napprovalconfigcode: this.props.Login.masterData.realApprovalConfigCode,\r\n                        sversionname: this.state.selectedRecord.sversionname,\r\n                       // nneedautocomplete: this.state.selectedRecord['Auto Complete'] ? this.state.selectedRecord['Auto Complete'] : transactionStatus.NO,\r\n                      //  nneedautoapproval: this.state.selectedRecord['Auto Approval'] ? this.state.selectedRecord['Auto Approval'] : transactionStatus.NO,\r\n                        nautoapprovalstatus: this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus ? this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].approvalstatus : transactionStatus.NA,\r\n                        nautodescisionstatus: isAutoApprovalVersion ? transactionStatus.PASS :this.props.Login.userRoleTree && this.props.Login.userRoleTree.length > 0 && this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus ? (this.state.selectedRecord[this.props.Login.userRoleTree[0].nuserrolecode].decisionstatus[0] || transactionStatus.DRAFT) : transactionStatus.DRAFT,\r\n                        nautoallot: this.state.selectedRecord['IDS_AUTOALLOT'] ? this.state.selectedRecord['IDS_AUTOALLOT'] : transactionStatus.NO,\r\n                        nneedjoballocation: this.state.selectedRecord['IDS_JOBALLOCATION'] ? this.state.selectedRecord['IDS_JOBALLOCATION'] : transactionStatus.NO,\r\n                        nstatus: transactionStatus.ACTIVE,\r\n                        ...temp1\r\n                    }\r\n                }\r\n                finalInputData['approvalconfigversion'] = inputData\r\n                finalInputData['userinfo'] = this.props.Login.userInfo\r\n                inputParam = {\r\n                    methodUrl: 'ApprovalConfigVersion',\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    displayName: \"IDS_APPROVALCONFIG\",\r\n                    inputData: finalInputData, saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    postParam, searchRef: this.searchRef\r\n\r\n                }\r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType,\r\n                            openModal: true, operation: this.props.Login.operation, screenName: this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" })\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_FILLDETAILSFOR\" }) + \" \" + errormessage.join(\",\"))\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let versionStatusCSS = \"outline-secondary\";\r\n        if (this.props.Login.masterData.selectedVersion && this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.APPROVED) {\r\n            versionStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedVersion && this.props.Login.masterData.selectedVersion.ntransactionstatus === transactionStatus.RETIRED) {\r\n            versionStatusCSS = \"outline-danger\";\r\n        }\r\n        const editId = this.state.controlMap.has(\"EditApprovalConfig\") && this.state.controlMap.get(\"EditApprovalConfig\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteApprovalConfig\") && this.state.controlMap.get(\"DeleteApprovalConfig\").ncontrolcode\r\n        const approveId = this.state.controlMap.has(\"ApproveApprovalConfig\") && this.state.controlMap.get(\"ApproveApprovalConfig\").ncontrolcode\r\n        const copyId = this.state.controlMap.has(\"CopyApprovalConfig\") && this.state.controlMap.get(\"CopyApprovalConfig\").ncontrolcode\r\n        const addId = this.state.controlMap.has(\"AddApprovalConfig\") && this.state.controlMap.get(\"AddApprovalConfig\").ncontrolcode\r\n\r\n        this.approvalSubTypeValue = this.props.Login.masterData.realApprovalSubTypeValue ?\r\n            this.props.Login.masterData.realApprovalSubTypeValue\r\n            : this.props.Login.masterData.approvalSubTypeValue ?\r\n                this.props.Login.masterData.approvalSubTypeValue\r\n                : this.props.Login.masterData.approvalsubtype ? this.props.Login.masterData.approvalsubtype.length > 0 ?\r\n                    {\r\n                        value: sortData(this.props.Login.masterData.approvalsubtype, 'ascending', 'napprovalsubtypecode')[0].napprovalsubtypecode,\r\n                        label: sortData(this.props.Login.masterData.approvalsubtype, 'ascending', 'napprovalsubtypecode')[0].ssubtypename\r\n                    } : {} : {};\r\n\r\n        const filterParam = {\r\n            inputListName: \"versionData\",\r\n            selectedObject: \"selectedVersion\",\r\n            primaryKeyField: \"napproveconfversioncode\",\r\n            searchFieldList: [\"sversionname\", \"sversionstatus\", \"sapproveconfversiondesc\"],\r\n            fetchUrl: \"approvalconfig/getApprovalConfigVersion\",\r\n            fecthInputObject: { napprovalsubtypecode: this.approvalSubTypeValue.value, userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            \r\n              //NIBSCRT-2294\r\n              unchangeList: [\"approvalsubtype\", \"approvalSubTypeValue\", \"registrationType\", \"registrationTypeValue\", \r\n              \"registrationSubType\", \"registrationSubTypeValue\", \"ApprovalsubtypeList\", \r\n              \"RegistrationTypeList\", \"RegistrationSubTypeList\",\"treeVersionTemplate\",\"userroleTemplateValue\",\r\n              \"realApprovalSubTypeValue\", \"realRegistrationTypeValue\",\"realRegistrationSubTypeValue\",\r\n              \"realTreeVersionTemplateValue\", \"approvalConfigCode\"]\r\n           };\r\n        const selectedRole = this.props.Login.masterData.selectedRole ? this.props.Login.masterData.selectedRole : this.props.Login.masterData.approvalconfigRoleNames && this.props.Login.masterData.approvalconfigRoleNames.length > 0 && sortData(this.props.Login.masterData.approvalconfigRoleNames, 'ascending', 'nlevelno')[0]\r\n\r\n        const mandatoryFields = [{ \"idsName\": \"IDS_VERSIONNAME\", \"dataField\": \"sversionname\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" }]\r\n        this.props.Login.operation !== 'copy' && this.props.Login.userRoleTree && this.props.Login.userRoleTree.map(role => {\r\n            mandatoryFields.push({ \"idsName\": \"IDS_APPROVALSTATUS\", \"alertSuffix\": ` - ${role.suserrolename}`, \"dataField\": `approvalstatus_${role.nuserrolecode}`, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" });\r\n            mandatoryFields.push({ \"idsName\": \"IDS_FILTERSTATUS\", \"alertSuffix\": ` - ${role.suserrolename}`, \"dataField\": `filterstatus_${role.nuserrolecode}`, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"  });\r\n            mandatoryFields.push({ \"idsName\": \"IDS_VALIDATIONSTATUS\", \"alertSuffix\": ` - ${role.suserrolename}`, \"dataField\": `validationstatus_${role.nuserrolecode}` , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" });\r\n            // if (this.props.Login.decisionStatusOptions && this.props.Login.decisionStatusOptions.length > 0) {\r\n            //     mandatoryFields.push({ \"idsName\": \"IDS_DECISIONSTATUS\", \"alertSuffix\": ` - ${role.suserrolename}`, \"dataField\": `decisionstatus_${role.nuserrolecode}` });\r\n            // }\r\n            return null;\r\n        });\r\n        let breadCrumbData = []\r\n        if (this.props.Login.masterData.realApprovalSubTypeValue && this.props.Login.masterData.realApprovalSubTypeValue.value === ApprovalSubType.TESTRESULTAPPROVAL) {\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_APPROVALSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realApprovalSubTypeValue ? this.props.Login.masterData.realApprovalSubTypeValue.label : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_REGISTRATIONTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegistrationTypeValue ? this.props.Login.masterData.realRegistrationTypeValue.label : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_REGISTRATIONSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegistrationSubTypeValue ? this.props.Login.masterData.realRegistrationSubTypeValue.label : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_USERROLETEMPLATE\",\r\n                    \"value\": this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.label : \"NA\"\r\n                }\r\n            ];\r\n        } else {\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_APPROVALSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realApprovalSubTypeValue ? this.props.Login.masterData.realApprovalSubTypeValue.label : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_USERROLETEMPLATE\",\r\n                    \"value\": this.props.Login.masterData.realTreeVersionTemplateValue ? this.props.Login.masterData.realTreeVersionTemplateValue.label : \"NA\"\r\n                }\r\n            ]\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    <Affix top={53}>\r\n                        <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    </Affix>\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_APPROVALCONFIG\" })}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.versionData}\r\n                                getMasterDetail={(version) => this.props.getApprovalConfigVersion(version, this.approvalSubTypeValue.value, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.selectedVersion}\r\n                                primaryKeyField=\"napproveconfversioncode\"\r\n                                mainField=\"sversionname\"\r\n                                firstField=\"sapproveconfversiondesc\"\r\n                                secondField=\"sversionstatus\"\r\n                                isIDSField=\"Yes\"\r\n                                searchRef={this.searchRef}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                openModal={() => this.props.openModal(\"create\", this.props.Login.masterData.realApprovalConfigCode, this.approvalSubTypeValue.value\r\n                                    , this.props.Login.userInfo, addId, this.props.Login.masterData.realTreeVersionTemplateValue.value)}\r\n                                needAccordianFilter={false}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                                showFilterIcon={true}\r\n                                onFilterSubmit={this.getApprovalConfigurationVersion}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_SAMPLEFILTER\":\r\n                                            <SampleFilter\r\n                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                filterComboChange={this.onFilterComboChange}\r\n                                                approvalSubTypeOptions={this.state.ApprovalsubtypeList}\r\n                                                approvalSubTypeValue={this.props.Login.masterData.approvalSubTypeValue}\r\n                                                registrationTypeOptions={this.state.RegistrationTypeList}\r\n                                                registrationTypeValue={this.props.Login.masterData.registrationTypeValue}\r\n                                                registrationSubTypeOptions={this.state.RegistrationSubTypeList}\r\n                                                registrationSubTypeValue={this.props.Login.masterData.registrationSubTypeValue}\r\n                                                userroleTemplateOptions={this.state.UserRoleTemplateList}\r\n                                                userroleTemplateValue={this.props.Login.masterData.userroleTemplateValue}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.selectedVersion ? Object.entries(this.props.Login.masterData.selectedVersion).length > 0 ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                                                <Card.Title>\r\n                                                    <h1 className=\"product-title-main\">{this.props.Login.masterData.selectedVersion.sversionname}</h1>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"readonly-text font-weight-normal\">\r\n                                                    <Row>\r\n                                                        <Col md={8} >\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                {`${this.props.intl.formatMessage({ id: \"IDS_VERSIONNO\" })}:${this.props.Login.masterData.selectedVersion.sapproveconfversiondesc}`}\r\n                                                                <span className={`btn btn-outlined ${versionStatusCSS} btn-sm ml-3`}>\r\n                                                                    {/* <i class=\"fas fa-check \"></i>  */}\r\n                                                                    {this.props.Login.masterData.selectedVersion.sversionstatus}\r\n                                                                </span>\r\n                                                            </h2>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <>\r\n                                                                <div className=\"d-flex product-category\" style={{ float: \"right\" }}>\r\n                                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                    <div className=\"d-inline \">\r\n                                                                        <Nav.Link\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                          //  data-for=\"tooltip_list_wrap\"\r\n                                                                            onClick={() => this.props.getApprovalConfigEditData(this.props.Login.masterData.selectedVersion.napproveconfversioncode, this.approvalSubTypeValue.value, this.props.Login.userInfo, this.props.Login.masterData, editId)}>\r\n                                                                            <FontAwesomeIcon icon={faPencilAlt} title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                                        </Nav.Link>\r\n                                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                          //  data-for=\"tooltip_list_wrap\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                            onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                            {/* <ConfirmDialog\r\n                                                                        name=\"deleteMessage\"\r\n                                                                        message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                        doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                        doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                        icon={faTrashAlt}\r\n                                                                        //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                        handleClickDelete={() => this.deleteApprovalConfigVersion(deleteId)}\r\n                                                                    /> */}\r\n                                                                        </Nav.Link>\r\n                                                                        <Nav.Link\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                                           // data-for=\"tooltip_list_wrap\"\r\n                                                                            onClick={() => this.approveVersion(approveId)}>\r\n                                                                            <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                                        </Nav.Link>\r\n                                                                        <Nav.Link\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                                          //  data-for=\"tooltip_list_wrap\"\r\n                                                                            onClick={() => this.props.copyVersion(this.approvalSubTypeValue.value, this.props.Login.userInfo, this.props.Login.masterData, copyId)}>\r\n                                                                            <FontAwesomeIcon icon={faCopy} title={this.props.intl.formatMessage({ id: \"IDS_COPY\" })} />\r\n                                                                        </Nav.Link>\r\n                                                                    </div>\r\n                                                                    {/* </Tooltip> */}\r\n                                                                </div>\r\n                                                            </>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Text>\r\n                                                    <Row>\r\n                                                        {this.props.Login.masterData.versionConfig ? this.props.Login.masterData.versionConfig.map(item =>\r\n                                                            <Col md=\"6\">\r\n                                                                <FormGroup>\r\n                                                                    <FormLabel><FormattedMessage id={item.stransdisplaystatus} /></FormLabel>\r\n                                                                    <ReadOnlyText>{this.props.Login.masterData.selectedVersion[`${item.ntranscode}`]}</ReadOnlyText>\r\n                                                                </FormGroup>\r\n                                                            </Col>\r\n                                                        ) : \"\"}\r\n                                                    </Row>\r\n                                                </Card.Text>\r\n                                                <Row oGutters={true}>\r\n                                                    <Col md={12}>\r\n                                                        <Card className=\"at-tabs\">\r\n                                                            {this.props.Login.masterData ? this.props.Login.masterData.approvalconfigRoleNames.length > 0 ?\r\n                                                                <CustomAccordion\r\n                                                                    key=\"UserRoles\"\r\n                                                                    accordionTitle=\"suserrolename\"\r\n                                                                    accordionComponent={this.userRoleAccordion(this.props.Login.masterData.approvalconfigRoleNames)}\r\n                                                                    inputParam={{ masterData: this.props.Login.masterData, userinfo: this.props.Login.userInfo, napprovalsubtypecode: this.approvalSubTypeValue.value }}\r\n                                                                    accordionClick={this.props.getRoleDetails}\r\n                                                                    accordionPrimaryKey={\"napprovalconfigrolecode\"}\r\n                                                                    accordionObjectName={\"role\"}\r\n                                                                    selectedKey={selectedRole.napprovalconfigrolecode}\r\n\r\n                                                                />\r\n                                                                : \"\" : \"\"}\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\" : \"\"}\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={\"IDS_APPROVALCONFIG\"}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            <AddApprovalConfig\r\n                                selectedRecord={this.state.selectedRecord ? this.state.selectedRecord : {}}\r\n                                userRoleTree={this.props.Login.userRoleTree}\r\n                                approvalSubTypeValue={this.approvalSubTypeValue}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                approvalStatusOptions={this.props.Login.approvalStatusOptions}\r\n                                approvalStatusValue={this.props.Login.approvalStatusValue}\r\n                                filterStatusOptions={this.props.Login.filterStatusOptions}\r\n                                filterStatusValues={this.props.Login.filterStatusValues}\r\n                                topLevelValidStatusOptions = {this.props.Login.topLevelValidStatusOptions}\r\n                                validationStatusOptions={this.props.Login.validationStatusOptions}\r\n                                validationStatusValues={this.props.Login.validationStatusValues}\r\n                                decisionStatusOptions={this.props.Login.decisionStatusOptions}\r\n                                decisionStatusValues={this.props.Login.decisionStatusValues}\r\n                                actionStatus={this.props.Login.actionStatus}\r\n                                checklistOptions={this.props.Login.checklistOptions}\r\n                                checklistValues={this.props.Login.checklistValues}\r\n                                roleConfig={this.props.Login.roleConfig}\r\n                                versionConfig={this.props.Login.versionConfig}\r\n                                operation={this.props.Login.operation}\r\n                                nsubType={this.approvalSubTypeValue.value}\r\n                                registrationTypeOptions={this.props.Login.optCopyRegType}\r\n                                registrationTypeValue={this.state.registrationTypeValue}\r\n                                registrationSubTypeOptions={this.props.Login.optCopyRegSubType}\r\n                                registrationSubTypeValue={this.state.registrationSubTypeValue}\r\n                                selectedVersion={this.props.Login.masterData.selectedVersion}\r\n                                masterData={this.props.Login.masterData}\r\n\r\n                            />}\r\n                    />\r\n                    : \"\"}\r\n            </>\r\n        );\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteApprovalConfigVersion(deleteId));\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        let { selectedRecord, userRoleControlRights, controlMap, ApprovalsubtypeList,\r\n            RegistrationTypeList, RegistrationSubTypeList, UserRoleTemplateList } = this.state;\r\n        let updateState = false;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            // const ApprovalsubtypeListMap = constructOptionList(this.props.Login.masterData.approvalsubtype || [], \"napprovalsubtypecode\", \"ssubtypename\", 'ntemplatecode','ascending', false);\r\n            // const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.registrationType || [], \"nregtypecode\", \"sregtypename\", 'ascending', 'nregtypecode', false);\r\n            // const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.registrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'ascending', 'nregsubtypecode', false);\r\n            const ApprovalsubtypeListMap = constructOptionList(this.props.Login.masterData.approvalsubtype || [], \"napprovalsubtypecode\", \"ssubtypename\", 'ntemplatecode', 'ascending', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.registrationType || [], \"nregtypecode\", \"sregtypename\", 'nsorter', 'ascending', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.registrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'nsorter', 'ascending', false);\r\n            const UserRoleTemplateListMap = constructOptionList(this.props.Login.masterData.treeVersionTemplate || [], \"ntreeversiontempcode\", \"sversiondescription\", 'ntransactionstatus', 'descending', false);\r\n\r\n            ApprovalsubtypeList = ApprovalsubtypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            UserRoleTemplateList = UserRoleTemplateListMap.get(\"OptionList\");\r\n            updateState = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            //this.setState({  RegistrationTypeList,RegistrationSubTypeList,templateVersionOptionList});  \r\n            // RegistrationTypeList=this.props.Login.masterData.RegistrationTypeList\r\n            // RegistrationSubTypeList=this.props.Login.masterData.RegistrationSubTypeList\r\n\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.registrationType || [], \"nregtypecode\", \"sregtypename\", 'nsorter', 'ascending', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.registrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", 'nsorter', 'ascending', false);\r\n            const UserRoleTemplateListMap = constructOptionList(this.props.Login.masterData.treeVersionTemplate || [], \"ntreeversiontempcode\", \"sversiondescription\", 'ntransactionstatus', 'descending', false);\r\n\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            UserRoleTemplateList = UserRoleTemplateListMap.get(\"OptionList\");\r\n            updateState = true;\r\n        }\r\n        if (updateState) {\r\n            this.setState({\r\n                selectedRecord, userRoleControlRights, controlMap, ApprovalsubtypeList,\r\n                RegistrationTypeList, RegistrationSubTypeList, UserRoleTemplateList\r\n            })\r\n        }\r\n    }\r\n    onInputOnChange = (event, role, action) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (role) {\r\n            let roleDetails = this.state.selectedRecord[role.nuserrolecode] || {}\r\n            const fieldName = event.target.name.split('_')[0] + '_' + event.target.name.split('_')[1]\r\n            let actionArray = selectedRecord[`actionStatus_${role.nuserrolecode}`] || [];\r\n            if (event.target.type === 'checkbox') {\r\n                if (action) {\r\n                    if (event.target.checked) {\r\n                        actionArray.push(action.ntranscode);\r\n                    } else {\r\n                        actionArray.splice(actionArray.indexOf(action.ntranscode), 1)\r\n                    }\r\n                    selectedRecord[`actionStatus_${role.nuserrolecode}`] = actionArray\r\n                }\r\n                roleDetails[fieldName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO\r\n                if (fieldName === 'IDS_PARTIALAPPROVAL' && roleDetails[\"IDS_PARTIALAPPROVAL\"] && roleDetails[\"IDS_PARTIALAPPROVAL\"] === transactionStatus.YES) {\r\n                    roleDetails['IDS_SECTIONWISEAPPROVE'] = transactionStatus.NO\r\n                }\r\n                selectedRecord[role.nuserrolecode] = roleDetails\r\n            }\r\n            else {\r\n                roleDetails[fieldName] = event.target.value\r\n                selectedRecord[role.nuserrolecode] = roleDetails\r\n            }\r\n        }\r\n        else {\r\n            if (event.target.type === 'checkbox') {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onComboChange = (comboData, role, comboName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (role) {\r\n            let roleDetails = this.state.selectedRecord[role.nuserrolecode] || {}\r\n            const fieldName = comboName.split('_')[0]\r\n            let filterArray = [];\r\n            roleDetails[fieldName] = [];\r\n            if (comboData) {\r\n                selectedRecord[comboName] = comboData\r\n                if (fieldName === 'checklist') {\r\n                    selectedRecord[`checklistVersion_${role.nuserrolecode}`] = { label: comboData.item.schecklistversionname, value: comboData.item.nchecklistversioncode }\r\n                    filterArray = comboData.item.nchecklistversioncode;\r\n\r\n                } else {\r\n                    if (Array.isArray(comboData)) {\r\n                        comboData.map(item => {\r\n                            return (filterArray.push(item.value))\r\n                        })\r\n                    } else {\r\n                        filterArray = comboData.value;\r\n                    }\r\n                }\r\n                roleDetails[fieldName] = filterArray\r\n                selectedRecord[role.nuserrolecode] = roleDetails\r\n            } else {\r\n                selectedRecord[comboName] = []\r\n                filterArray = []\r\n                roleDetails[fieldName] = filterArray\r\n                selectedRecord[role.nuserrolecode] = roleDetails\r\n            }\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n            selectedRecord[comboName] = comboData\r\n\r\n            if (comboName === 'regtype') {\r\n                this.props.getCopySubType(comboData, selectedRecord, this.props.Login.userInfo, this.props.Login.masterData, this.props.Login.optCopyRegType)\r\n            } else {\r\n                this.setState({ selectedRecord });\r\n            }\r\n\r\n        }\r\n    }\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        let approvalSubTypeValue = this.props.Login.masterData.approvalSubTypeValue;\r\n        let registrationTypeValue = this.props.Login.masterData.registrationTypeValue;\r\n        let registrationSubTypeValue;\r\n\r\n        if (comboData) {\r\n\r\n            selectedRecord[fieldName] = comboData.value;\r\n            let inputData = {};\r\n            if (fieldName === 'napprovalsubtypecode') {\r\n\r\n                approvalSubTypeValue = comboData\r\n                inputData = { nFlag: 2, napprovalsubtypecode: comboData.value, userinfo: this.props.Login.userInfo };\r\n\r\n            } else if (fieldName === 'nregtypecode') {\r\n\r\n                registrationTypeValue = comboData\r\n                inputData = { nFlag: 3, napprovalsubtypecode: approvalSubTypeValue.value, nregtypecode: comboData.value, userinfo: this.props.Login.userInfo }\r\n\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                registrationSubTypeValue = comboData\r\n                inputData = {\r\n                    nFlag: 4, napprovalsubtypecode: approvalSubTypeValue.value,\r\n                    nregtypecode: registrationTypeValue.value,\r\n                    nregsubtypecode: comboData.value,\r\n                    userinfo: this.props.Login.userInfo\r\n                }\r\n            }\r\n            if (fieldName === 'ntreeversiontempcode') {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            userroleTemplateValue: comboData\r\n                        }\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                const oldState = {\r\n                    approvalsubtype: this.props.Login.masterData.approvalsubtype,\r\n                    registrationtype: this.props.Login.masterData.registrationType,\r\n                    registrationsubtype: this.props.Login.masterData.registrationSubType,\r\n                    approvalSubTypeValue,\r\n                    registrationTypeValue,\r\n                    registrationSubTypeValue,\r\n                    RegistrationTypeList: this.state.RegistrationTypeList,\r\n                    RegistrationSubTypeList: this.state.RegistrationSubTypeList,\r\n                }\r\n                let inputParamData = { inputData, masterData: this.props.Login.masterData }\r\n                this.props.getFilterChange(inputParamData, oldState)\r\n            }\r\n\r\n        } else {\r\n            selectedRecord[fieldName] = \"\";\r\n            if (fieldName === 'napprovalsubtypecode') {\r\n\r\n                this.approvalSubTypeValue = []\r\n                registrationTypeValue = []\r\n                registrationSubTypeValue = []\r\n\r\n            } else if (fieldName === 'nregtypecode') {\r\n\r\n                registrationTypeValue = []\r\n                registrationSubTypeValue = []\r\n\r\n            } else {\r\n\r\n                registrationSubTypeValue = []\r\n\r\n            }\r\n\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n        // this.searchRef.current.value = \"\"\r\n\r\n    }\r\n    getApprovalConfigurationVersion = () => {\r\n        if (this.props.Login.masterData.approvalSubTypeValue) {\r\n            this.searchRef.current.value = \"\"\r\n            let masterData = {\r\n                ...this.props.Login.masterData,\r\n                realApprovalSubTypeValue: this.props.Login.masterData.approvalSubTypeValue ? this.props.Login.masterData.approvalSubTypeValue : -1,\r\n                realRegistrationTypeValue: this.props.Login.masterData.registrationTypeValue ? this.props.Login.masterData.registrationTypeValue : -1,\r\n                realRegistrationSubTypeValue: this.props.Login.masterData.registrationSubTypeValue ? this.props.Login.masterData.registrationSubTypeValue : -1,\r\n                realApprovalConfigCode: this.props.Login.masterData.approvalConfigCode || -1,\r\n                realTreeVersionTemplateValue: this.props.Login.masterData.userroleTemplateValue || -1,\r\n\r\n            }\r\n            const inputData = {\r\n                napprovalsubtypecode: this.props.Login.masterData.approvalSubTypeValue ?\r\n                    this.props.Login.masterData.approvalSubTypeValue.value : -1,\r\n                napprovalconfigcode: this.props.Login.masterData.approvalConfigCode,\r\n                ntreeversiontempcode: this.props.Login.masterData.userroleTemplateValue.value,\r\n                userinfo: this.props.Login.userInfo\r\n            }\r\n            let inputParamData = { inputData, masterData }\r\n            this.props.getApprovalConfigurationVersion(inputParamData);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_APPROVALSUBTYPENOTAVAILABLE\" }))\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    reloadData = () => {\r\n        // this.searchRef.current.value = \"\";\r\n        // const inputParam = {\r\n        //     inputData: { \"userinfo\": this.props.Login.userInfo },\r\n        //     classUrl: \"approvalconfig\",\r\n        //     methodUrl: \"ApprovalConfigFilter\",\r\n        //     userInfo: this.props.Login.userInfo,\r\n        //     displayName: \"IDS_APPROVALCONFIG\"\r\n        // };\r\n        // this.props.callService(inputParam);\r\n        this.getApprovalConfigurationVersion()\r\n    }\r\n    userRoleAccordion = (userRoleList) => {\r\n        const accordionMap = new Map();\r\n        userRoleList = sortData(userRoleList, 'ascending', 'nlevelno')\r\n        userRoleList.map((role) =>\r\n            accordionMap.set(role.napprovalconfigrolecode,\r\n                <UserRoleAccordion\r\n                    role={role}\r\n                    roleConfig={this.props.Login.masterData.roleConfig}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    controlMap={this.state.controlMap}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    masterData={this.props.Login.masterData}\r\n                    deleteRecord={this.deleteRecord}\r\n                    tabDetail={this.tabDetail(role)}\r\n                    onTabOnChange={this.onTabOnChange}\r\n                />)\r\n        )\r\n        return accordionMap;\r\n    }\r\n    tabDetail = () => {\r\n        const selectedRole = this.props.Login.masterData.selectedRole ? this.props.Login.masterData.selectedRole : this.props.Login.masterData.approvalconfigRoleNames && this.props.Login.masterData.approvalconfigRoleNames.length > 0 && sortData(this.props.Login.masterData.approvalconfigRoleNames, 'ascending', 'nlevelno')[0]\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_FILTERSTATUS\",\r\n            <FilterStatusTab\r\n                filterData={process(this.props.Login.masterData.roleFilters ? sortData(this.props.Login.masterData.roleFilters) : [],\r\n                    { skip: this.state.dataState.skip, take: this.state.dataState.take })}\r\n                setDefault={this.props.setDefault}\r\n                selectedRole={selectedRole}\r\n                napprovalsubtypecode={this.approvalSubTypeValue.value}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n            />\r\n        )\r\n\r\n        tabMap.set(\"IDS_VALIDATIONSTATUS\",\r\n            <ValidationStatusTab\r\n                validationStatus={process(this.props.Login.masterData.roleValidations ? sortData(this.props.Login.masterData.roleValidations) : [],\r\n                    { skip: this.state.dataState.skip, take: this.state.dataState.take })}\r\n                selectedRole={selectedRole}\r\n                napprovalsubtypecode={this.approvalSubTypeValue.value}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n            />)\r\n        if (this.props.Login.masterData.roleDecisions && this.props.Login.masterData.roleDecisions.length > 0) {\r\n            tabMap.set(\"IDS_DECISIONSTATUS\",\r\n                <DecisionStatusTab\r\n                    decisionData={process(this.props.Login.masterData.roleDecisions ? sortData(this.props.Login.masterData.roleDecisions) : [],\r\n                        { skip: this.state.dataState.skip, take: this.state.dataState.take })}\r\n                    setDefault={this.props.setDefault}\r\n                    selectedRole={selectedRole}\r\n                    napprovalsubtypecode={this.approvalSubTypeValue.value}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    masterData={this.props.Login.masterData}\r\n                />)\r\n        }\r\n        tabMap.set(\"IDS_ACTIONSTATUS\",\r\n            <ActionStatusTab\r\n                actionData={process(this.props.Login.masterData.roleActions ? sortData(this.props.Login.masterData.roleActions) : [],\r\n                    { skip: this.state.dataState.skip, take: this.state.dataState.take })}\r\n                setDefault={this.props.setDefault}\r\n                selectedRole={selectedRole}\r\n                napprovalsubtypecode={this.approvalSubTypeValue.value}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n            />)\r\n        return tabMap;\r\n    }\r\n    onTabOnChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n}\r\nexport default connect(mapStateToProps,\r\n    {\r\n        callService, crudMaster, openModal, updateStore, getApprovalConfigVersion, getApprovalConfigEditData, copyVersion, getFilterChange\r\n        , validateEsignCredential, getCopySubType, getRoleDetails, setDefault, filterColumnData, getApprovalConfigurationVersion\r\n    })\r\n    (injectIntl(ApprovalConfig));"]},"metadata":{},"sourceType":"module"}