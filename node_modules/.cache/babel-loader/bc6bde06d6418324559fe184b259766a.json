{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import{initRequest,updateStore}from'./LoginAction';import{sortData}from'../components/CommonScript';export function constructGraphView(graphViewData,graphSelectedNode,userInfo,dispatch){var initialNode={};var dataHeight=2;var masterData=graphViewData;if(graphSelectedNode===\"Site\"){var selectedOrgSite=masterData.SelectedOrgSite||{};var siteDeptList=masterData.SiteDepartment||[];var siteDeptArray=[];siteDeptList.map(function(siteDept,i){dataHeight++;if(siteDept.nsitecode===selectedOrgSite.nsitecode){var deptLabList=masterData.DepartmentLab||[];var deptLabArray=[];deptLabList.map(function(deptLab,j){dataHeight++;if(deptLab.nsitedeptcode===siteDept.nsitedeptcode){var labSectionList=masterData.LabSection||[];var labSectionArray=[];labSectionList.map(function(labSection,index){dataHeight++;if(labSection.ndeptlabcode===deptLab.ndeptlabcode){var sectionUsersList=masterData.SectionUsers||[];var sectionUserArray=[];sectionUsersList.map(function(sectionUser,userIndex){dataHeight++;if(sectionUser.nlabsectioncode===labSection.nlabsectioncode){var userNode=sectionUser.susername;return sectionUserArray.push({name:userNode.length>30?userNode.substring(0,30).concat(\"...\"):userNode,key:\"sectionuser_4_\"+sectionUser.nsectionusercode,textProps:{x:-25,y:10},gProps:{className:\"userClass\",item:sectionUser}});}return null;});var sectionNode=labSection.ssectionname;return labSectionArray.push({name:sectionNode.length>30?sectionNode.substring(0,30).concat(\"...\"):sectionNode,key:\"labsection_4_\"+labSection.nlabsectioncode,textProps:{x:-25,y:10},children:sectionUserArray,gProps:{className:'sectionClass',item:labSection,onClick:function onClick(){return dispatch(organisationService({inputData:{nlabsectioncode:labSection.nlabsectioncode,userinfo:userInfo,graphview:true},selectedtreepath:\"\",selectedNode:\"Section\",url:\"organisation/getSectionUsers\"}));}}});}return null;});var labNode=deptLab.slabname;return deptLabArray.push({name:labNode.length>30?labNode.substring(0,30).concat(\"...\"):labNode,key:\"deptlab_4_\"+deptLab.ndeptlabcode,children:labSectionArray,textProps:{x:-25,y:10},gProps:{className:'labClass',item:deptLab,onClick:function onClick(){return dispatch(organisationService({inputData:{ndeptlabcode:deptLab.ndeptlabcode,userinfo:userInfo,graphview:true},selectedtreepath:\"\",selectedNode:\"Lab\",url:\"organisation/getLabSection\"}));}}});}return null;});var deptNode=siteDept.sdeptname;return siteDeptArray.push({name:deptNode.length>30?deptNode.substring(0,30).concat(\"...\"):deptNode,key:\"sitedept_4_\"+siteDept.nsitedeptcode,children:deptLabArray,textProps:{x:-25,y:10},gProps:{className:'deptClass',item:siteDept,onClick:function onClick(){return dispatch(organisationService({inputData:{nsitedeptcode:siteDept.nsitedeptcode,userinfo:userInfo,graphview:true},selectedtreepath:\"\",selectedNode:\"Department\",url:\"organisation/getDepartmentLab\"}));}}});};return null;});initialNode={name:selectedOrgSite&&selectedOrgSite.ssitename,key:\"selectedOrgSite_4_\"+selectedOrgSite.nsitecode,children:siteDeptArray,textProps:{x:0,y:10},gProps:{className:'siteClass',onClick:function onClick(){return dispatch(organisationService({inputData:{nsitecode:selectedOrgSite.nsitecode,userinfo:userInfo,graphview:true},selectedtreepath:\"\",selectedNode:\"Site\",url:\"organisation/getSiteDepartment\"}));}}};}else if(graphSelectedNode===\"Department\"){var selectedSiteDepartment=masterData.SelectedSiteDepartment||{};var deptLabList=masterData.DepartmentLab||[];var deptLabArray=[];deptLabList.map(function(deptLab,j){dataHeight++;if(deptLab.nsitedeptcode===selectedSiteDepartment.nsitedeptcode){var labSectionList=masterData.LabSection||[];var labSectionArray=[];labSectionList.map(function(labSection,index){dataHeight++;if(labSection.ndeptlabcode===deptLab.ndeptlabcode){var sectionUsersList=masterData.SectionUsers||[];var sectionUserArray=[];sectionUsersList.map(function(sectionUser,userIndex){dataHeight++;if(sectionUser.nlabsectioncode===labSection.nlabsectioncode){var userNode=sectionUser.susername;return sectionUserArray.push({name:userNode.length>30?userNode.substring(0,30).concat(\"...\"):userNode,key:\"sectionuser_4_\"+sectionUser.nsectionusercode,textProps:{x:-25,y:10},gProps:{className:\"userClass\",item:sectionUser}});}return null;});var sectionNode=labSection.ssectionname;return labSectionArray.push({name:sectionNode.length>30?sectionNode.substring(0,30).concat(\"...\"):sectionNode,key:\"labsection_3_\"+labSection.nlabsectioncode,textProps:{x:-25,y:25},children:sectionUserArray,gProps:{className:'sectionClass',item:labSection,onClick:function onClick(){return dispatch(organisationService({inputData:{nlabsectioncode:labSection.nlabsectioncode,userinfo:userInfo,graphview:true},selectedtreepath:\"\",selectedNode:\"Section\",url:\"organisation/getSectionUsers\"}));}}});}return null;});var labNode=deptLab.slabname;return deptLabArray.push({name:labNode.length>30?labNode.substring(0,30).concat(\"...\"):labNode,key:\"deptlab_3_\"+deptLab.ndeptlabcode,children:labSectionArray,textProps:{x:-25,y:25},gProps:{className:'labClass',item:deptLab,onClick:function onClick(){return dispatch(organisationService({inputData:{ndeptlabcode:deptLab.ndeptlabcode,userinfo:userInfo,graphview:true},selectedtreepath:\"\",selectedNode:\"Lab\",url:\"organisation/getLabSection\"}));}}});}return null;});var deptNode=selectedSiteDepartment.sdeptname;initialNode={name:deptNode,key:'selectedSiteDepartment_3_'+selectedSiteDepartment.nsitedeptcode,children:deptLabArray,textProps:{x:0,y:25},gProps:{className:'deptClass'}};}else if(graphSelectedNode===\"Lab\"){var selectedDepartmentLab=masterData.SelectedDepartmentLab||{};var labSectionList=masterData.LabSection||[];var labSectionArray=[];labSectionList.map(function(labSection,index){dataHeight++;if(labSection.ndeptlabcode===selectedDepartmentLab.ndeptlabcode){var sectionUsersList=masterData.SectionUsers||[];var sectionUserArray=[];sectionUsersList.map(function(sectionUser,userIndex){dataHeight++;if(sectionUser.nlabsectioncode===labSection.nlabsectioncode){var userNode=sectionUser.susername;return sectionUserArray.push({name:userNode.length>30?userNode.substring(0,30).concat(\"...\"):userNode,key:\"sectionuser_2_\"+sectionUser.nsectionusercode,textProps:{x:-25,y:25},gProps:{className:\"userClass\",item:sectionUser}});}return null;});var sectionNode=labSection.ssectionname;return labSectionArray.push({name:sectionNode.length>30?sectionNode.substring(0,30).concat(\"...\"):sectionNode,key:\"labsection_2_\"+labSection.nlabsectioncode,textProps:{x:-25,y:25},children:sectionUserArray,gProps:{className:'sectionClass',item:labSection,onClick:function onClick(){return dispatch(organisationService({inputData:{nlabsectioncode:labSection.nlabsectioncode,userinfo:userInfo,graphview:true},selectedtreepath:\"\",selectedNode:\"Section\",url:\"organisation/getSectionUsers\"}));}}});}return null;});var labNode=selectedDepartmentLab.slabname;initialNode={name:labNode,key:'deptlab_2_'+selectedDepartmentLab.ndeptlabcode,children:labSectionArray,textProps:{x:0,y:25},gProps:{className:'deptClass'}};}else if(graphSelectedNode===\"Section\"){var selectedLabSection=masterData.SelectedLabSection||{};var sectionUsersList=masterData.SectionUsers||[];var sectionUserArray=[];sectionUsersList.map(function(sectionUser,userIndex){dataHeight++;if(sectionUser.nlabsectioncode===selectedLabSection.nlabsectioncode){var userNode=sectionUser.susername;return sectionUserArray.push({name:userNode.length>30?userNode.substring(0,30).concat(\"...\"):userNode,key:\"sectionuser_1_\"+sectionUser.nsectionusercode,textProps:{x:-25,y:25},gProps:{className:\"userClass\",item:sectionUser}});}return null;});var sectionNode=selectedLabSection.ssectionname;initialNode={name:sectionNode,key:\"labSection_1_\"+selectedLabSection.nlabsectioncode,children:sectionUserArray,textProps:{x:0,y:25},gProps:{className:'deptClass'}};}var graphData={initialNode:initialNode,dataHeight:dataHeight};return graphData;}export function organisationService(methodParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(methodParam.url,methodParam.inputData).then(function(response){if(methodParam.inputData.graphview===true){var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:false}};dispatch(updateStore(updateInfo));var data=_objectSpread({},response.data);var graphData=constructGraphView(data,methodParam.selectedNode,methodParam.inputData.userinfo,dispatch);dispatch({type:DEFAULT_RETURN,payload:{graphData:graphData[\"initialNode\"],graphHeight:graphData[\"dataHeight\"],graphSelectedNode:methodParam.selectedNode,loading:false,graphView:data.GraphView,openModal:true}});}else{var masterData=_objectSpread(_objectSpread({},methodParam.masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,organisation:methodParam.organisation,data:undefined,dataState:undefined,//selectedTreePath :methodParam.inputData.selectedtreepath,\nloading:false,// treeData:site\ngraphView:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getOrganisationComboService(methodParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(methodParam.url,methodParam.inputData).then(function(response){var _objectSpread2;var respObject={};if(methodParam.organisation){respObject[\"organisation\"]=methodParam.organisation;}//const index = methodParam.columnList.findIndex(item=>item.controlType === \"selectbox\")\n// const selected = methodParam.selectedRecord;\n// const foundIndex = response.data.findIndex(\n//     x => x[\"ndefaultstatus\"] === transactionStatus.YES);\n// const defaultStatus =  response.data[foundIndex] ;\n// selected[methodParam.columnList[index].dataField] = defaultStatus;\n// const dataMap = constructOptionList(response.data || [],methodParam.columnList[index].optionId, \n//     methodParam.columnList[index].optionValue, undefined, undefined, true) ;\n// const dataList = dataMap.get(\"OptionList\");\n// const selected = methodParam.selectedRecord;\n// if (dataMap.get(\"DefaultValue\") !== undefined){\n//     selected[methodParam.columnList[index].dataField] = [dataMap.get(\"DefaultValue\")];\n// }\ndispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},respObject),{},(_objectSpread2={},_defineProperty(_objectSpread2,methodParam.listName,response.data||[]),_defineProperty(_objectSpread2,\"operation\",methodParam.operation),_defineProperty(_objectSpread2,\"screenName\",methodParam.screenName),_defineProperty(_objectSpread2,\"selectedRecord\",methodParam.selectedRecord),_defineProperty(_objectSpread2,\"openModal\",true),_defineProperty(_objectSpread2,\"ncontrolCode\",methodParam.ncontrolCode),_defineProperty(_objectSpread2,\"loading\",false),_defineProperty(_objectSpread2,\"graphView\",false),_objectSpread2))});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSectionUserRole(methodParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"organisation/getSectionUserRole\",{nsitecode:methodParam.nsitecode,nusercode:methodParam.primaryKeyValue,userinfo:methodParam.userInfo}).then(function(response){var userRoleMap=methodParam.masterData.userRoleMap||new Map();userRoleMap.set(parseInt(Object.keys(response.data[\"SectionUserRoleMap\"])[0]),Object.values(response.data[\"SectionUserRoleMap\"])[0]);var masterData=_objectSpread(_objectSpread({},methodParam.masterData),{},{userRoleMap:userRoleMap});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,data:methodParam.data,userRoleMap:userRoleMap,dataState:methodParam.dataState,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}// export function reloadTreeData (methodParam) {            \n//     return function (dispatch) {  \n//     const updateInfo = {\n//             typeName: DEFAULT_RETURN,\n//             data: { masterData:{}, organisation:undefined,}\n//         }\n//     dispatch(updateStore(updateInfo))\n//     dispatch(callService(methodParam))\n//     }\n// }","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/OrganisationAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","initRequest","updateStore","sortData","constructGraphView","graphViewData","graphSelectedNode","userInfo","dispatch","initialNode","dataHeight","masterData","selectedOrgSite","SelectedOrgSite","siteDeptList","SiteDepartment","siteDeptArray","map","siteDept","i","nsitecode","deptLabList","DepartmentLab","deptLabArray","deptLab","j","nsitedeptcode","labSectionList","LabSection","labSectionArray","labSection","index","ndeptlabcode","sectionUsersList","SectionUsers","sectionUserArray","sectionUser","userIndex","nlabsectioncode","userNode","susername","push","name","length","substring","concat","key","nsectionusercode","textProps","x","y","gProps","className","item","sectionNode","ssectionname","children","onClick","organisationService","inputData","userinfo","graphview","selectedtreepath","selectedNode","url","labNode","slabname","deptNode","sdeptname","ssitename","selectedSiteDepartment","SelectedSiteDepartment","selectedDepartmentLab","SelectedDepartmentLab","selectedLabSection","SelectedLabSection","graphData","methodParam","post","then","response","updateInfo","typeName","data","openModal","type","payload","graphHeight","loading","graphView","GraphView","organisation","undefined","dataState","catch","error","status","message","warn","getOrganisationComboService","respObject","listName","operation","screenName","selectedRecord","ncontrolCode","getSectionUserRole","nusercode","primaryKeyValue","userRoleMap","Map","set","parseInt","Object","keys","values"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest, updateStore} from './LoginAction';\r\nimport {  sortData } from '../components/CommonScript';\r\n\r\n\r\nexport function constructGraphView(graphViewData, graphSelectedNode, userInfo, dispatch) {\r\n\r\n    let initialNode = {};\r\n    let dataHeight = 2;\r\n    const masterData = graphViewData;\r\n    if (graphSelectedNode === \"Site\") {\r\n        const selectedOrgSite = masterData.SelectedOrgSite || {};\r\n        const siteDeptList = masterData.SiteDepartment || [];\r\n        const siteDeptArray = [];\r\n\r\n        siteDeptList.map((siteDept, i) => {\r\n            dataHeight++\r\n            if (siteDept.nsitecode === selectedOrgSite.nsitecode) {\r\n\r\n                const deptLabList = masterData.DepartmentLab || [];\r\n                const deptLabArray = [];\r\n\r\n                deptLabList.map((deptLab, j) => {\r\n                    dataHeight++;\r\n                    if (deptLab.nsitedeptcode === siteDept.nsitedeptcode) {\r\n                        const labSectionList = masterData.LabSection || [];\r\n                        const labSectionArray = [];\r\n\r\n                        labSectionList.map((labSection, index) => {\r\n                            dataHeight++;\r\n                            if (labSection.ndeptlabcode === deptLab.ndeptlabcode) {\r\n                                const sectionUsersList = masterData.SectionUsers || [];\r\n                                const sectionUserArray = [];\r\n                                sectionUsersList.map((sectionUser, userIndex) => {\r\n                                    dataHeight++;\r\n                                    if (sectionUser.nlabsectioncode === labSection.nlabsectioncode) {\r\n                                        const userNode = sectionUser.susername;\r\n                                        return sectionUserArray.push({\r\n                                            name: userNode.length > 30 ? userNode.substring(0, 30).concat(\"...\") : userNode,\r\n                                            key: \"sectionuser_4_\" + sectionUser.nsectionusercode,\r\n                                            textProps: { x: -25, y: 10 },\r\n                                            gProps: { className: \"userClass\", item: sectionUser }\r\n                                        })\r\n                                    }\r\n                                    return null;\r\n                                })\r\n                                const sectionNode = labSection.ssectionname;\r\n                                return labSectionArray.push({\r\n                                    name: sectionNode.length > 30 ? sectionNode.substring(0, 30).concat(\"...\") : sectionNode,\r\n                                    key: \"labsection_4_\" + labSection.nlabsectioncode,\r\n                                    textProps: { x: -25, y: 10 },\r\n                                    children: sectionUserArray,\r\n                                    gProps: {\r\n                                        className: 'sectionClass', item: labSection,\r\n                                          onClick: () => dispatch(organisationService({inputData:{nlabsectioncode:labSection.nlabsectioncode,\r\n                                                userinfo:userInfo, graphview:true},\r\n                                                selectedtreepath :\"\", \r\n                                                selectedNode :\"Section\",\r\n                                                url:\"organisation/getSectionUsers\"}))                                         \r\n                                    }\r\n\r\n                                })\r\n                            }\r\n                            return null;\r\n\r\n                        });\r\n                        \r\n                        const labNode = deptLab.slabname;\r\n                        return deptLabArray.push({\r\n                            name: labNode.length > 30 ? labNode.substring(0, 30).concat(\"...\") : labNode,\r\n                            key: \"deptlab_4_\" + deptLab.ndeptlabcode,\r\n                            children: labSectionArray,\r\n                            textProps: { x: -25, y: 10 },\r\n                            gProps: {\r\n                                className: 'labClass', item: deptLab,\r\n                                onClick: () => dispatch(organisationService({inputData:{ndeptlabcode:deptLab.ndeptlabcode,\r\n                                                    userinfo:userInfo, graphview:true},\r\n                                                    selectedtreepath :\"\", \r\n                                                    selectedNode :\"Lab\",\r\n                                                    url:\"organisation/getLabSection\"}))                                    \r\n                            },\r\n                        }\r\n                        )\r\n                    }\r\n                    return null;\r\n                });\r\n                \r\n                const deptNode = siteDept.sdeptname;\r\n                return siteDeptArray.push({\r\n                    name: deptNode.length > 30 ? deptNode.substring(0, 30).concat(\"...\") : deptNode,\r\n                    key: \"sitedept_4_\" + siteDept.nsitedeptcode,\r\n                    children: deptLabArray,\r\n                    textProps: { x: -25, y: 10 },\r\n                    gProps: {\r\n                        className: 'deptClass', item: siteDept,\r\n                        onClick: () => dispatch(organisationService({inputData:{nsitedeptcode:siteDept.nsitedeptcode,\r\n                                                userinfo:userInfo, graphview:true},\r\n                                                selectedtreepath :\"\", \r\n                                                selectedNode :\"Department\",\r\n                                                url:\"organisation/getDepartmentLab\"}))\r\n                        \r\n                    },\r\n                })\r\n            };\r\n\r\n            return null;\r\n        });\r\n\r\n        initialNode = {\r\n            name: selectedOrgSite && selectedOrgSite.ssitename,\r\n            key: \"selectedOrgSite_4_\" + selectedOrgSite.nsitecode,\r\n            children: siteDeptArray,\r\n            textProps: { x: 0, y: 10 },\r\n            gProps: {\r\n                className: 'siteClass',\r\n                onClick: () => dispatch(organisationService({inputData:{nsitecode:selectedOrgSite.nsitecode,\r\n                                                userinfo:userInfo, graphview:true},\r\n                                                 selectedtreepath :\"\",\r\n                                                 selectedNode:\"Site\",\r\n                                                 url:\"organisation/getSiteDepartment\"}))                        \r\n                            \r\n            }\r\n        };\r\n    }\r\n    else if (graphSelectedNode === \"Department\") {\r\n        const selectedSiteDepartment = masterData.SelectedSiteDepartment || {};\r\n\r\n        const deptLabList = masterData.DepartmentLab || [];\r\n        const deptLabArray = [];\r\n\r\n        deptLabList.map((deptLab, j) => {\r\n            dataHeight++;\r\n            if (deptLab.nsitedeptcode === selectedSiteDepartment.nsitedeptcode) {\r\n                const labSectionList = masterData.LabSection || [];\r\n                const labSectionArray = [];\r\n\r\n                labSectionList.map((labSection, index) => {\r\n                    dataHeight++;\r\n                    if (labSection.ndeptlabcode === deptLab.ndeptlabcode) {\r\n                        const sectionUsersList = masterData.SectionUsers || [];\r\n                        const sectionUserArray = [];\r\n                        sectionUsersList.map((sectionUser, userIndex) => {\r\n                            dataHeight++;\r\n                            if (sectionUser.nlabsectioncode === labSection.nlabsectioncode) {\r\n                                const userNode = sectionUser.susername;\r\n                                return sectionUserArray.push({\r\n                                    name: userNode.length > 30 ? userNode.substring(0, 30).concat(\"...\") : userNode,\r\n                                    key: \"sectionuser_4_\" + sectionUser.nsectionusercode,\r\n                                    textProps: { x: -25, y: 10 },\r\n                                    gProps: { className: \"userClass\", item: sectionUser }\r\n                                })\r\n                            }\r\n\r\n                            return null;\r\n                        })\r\n                        const sectionNode = labSection.ssectionname;\r\n\r\n                        return labSectionArray.push({\r\n                            name: sectionNode.length > 30 ? sectionNode.substring(0, 30).concat(\"...\") : sectionNode,\r\n                            key: \"labsection_3_\" + labSection.nlabsectioncode,\r\n                            textProps: { x: -25, y: 25 },\r\n                            children: sectionUserArray,\r\n                            gProps: {\r\n                                className: 'sectionClass', item: labSection,\r\n                                  onClick: () => \r\n                                    dispatch(organisationService({inputData:{nlabsectioncode:labSection.nlabsectioncode,\r\n                                            userinfo:userInfo, graphview:true},\r\n                                            selectedtreepath :\"\", \r\n                                            selectedNode :\"Section\",\r\n                                            url:\"organisation/getSectionUsers\"}))                                 \r\n                            }\r\n                        })\r\n                    }\r\n                    return null;\r\n\r\n                });\r\n                                   \r\n                const labNode = deptLab.slabname;\r\n                return deptLabArray.push({\r\n                    name: labNode.length > 30 ? labNode.substring(0, 30).concat(\"...\") : labNode,\r\n                    key: \"deptlab_3_\" + deptLab.ndeptlabcode,\r\n                    children: labSectionArray,\r\n                    textProps: { x: -25, y: 25 },\r\n                    gProps: {\r\n                        className: 'labClass', item: deptLab,\r\n                        onClick: () => dispatch(organisationService({inputData:{ndeptlabcode:deptLab.ndeptlabcode,\r\n                                    userinfo:userInfo, graphview:true},\r\n                                    selectedtreepath :\"\", \r\n                                    selectedNode :\"Lab\",\r\n                                    url:\"organisation/getLabSection\"}))                      \r\n                    },\r\n                })\r\n            }\r\n            return null;\r\n        });\r\n\r\n        const deptNode = selectedSiteDepartment.sdeptname;\r\n\r\n        initialNode = {\r\n            name: deptNode,\r\n            key: 'selectedSiteDepartment_3_' + selectedSiteDepartment.nsitedeptcode,\r\n            children: deptLabArray,\r\n            textProps: { x: 0, y: 25 },\r\n            gProps: { className: 'deptClass' },\r\n        };\r\n    }\r\n    else if (graphSelectedNode === \"Lab\") {\r\n\r\n        const selectedDepartmentLab = masterData.SelectedDepartmentLab || {};\r\n        const labSectionList = masterData.LabSection || [];\r\n        const labSectionArray = [];\r\n\r\n        labSectionList.map((labSection, index) => {\r\n            dataHeight++;\r\n            if (labSection.ndeptlabcode === selectedDepartmentLab.ndeptlabcode) {\r\n                const sectionUsersList = masterData.SectionUsers || [];\r\n                const sectionUserArray = [];\r\n                sectionUsersList.map((sectionUser, userIndex) => {\r\n                    dataHeight++;\r\n                    if (sectionUser.nlabsectioncode === labSection.nlabsectioncode) {\r\n                        const userNode = sectionUser.susername;\r\n\r\n                        return sectionUserArray.push({\r\n                            name: userNode.length > 30 ? userNode.substring(0, 30).concat(\"...\") : userNode,\r\n                            key: \"sectionuser_2_\" + sectionUser.nsectionusercode,\r\n                            textProps: { x: -25, y: 25 },\r\n                            gProps: { className: \"userClass\", item: sectionUser }\r\n                        })\r\n                    }\r\n                    return null;\r\n                })\r\n                const sectionNode = labSection.ssectionname;\r\n\r\n                return labSectionArray.push({\r\n                    name: sectionNode.length > 30 ? sectionNode.substring(0, 30).concat(\"...\") : sectionNode,\r\n                    key: \"labsection_2_\" + labSection.nlabsectioncode,\r\n                    textProps: { x: -25, y: 25 },\r\n                    children: sectionUserArray,\r\n                    gProps: {\r\n                        className: 'sectionClass', item: labSection,\r\n                          onClick: () =>  dispatch(organisationService({inputData:{nlabsectioncode:labSection.nlabsectioncode,\r\n                                    userinfo:userInfo, graphview:true},\r\n                                    selectedtreepath :\"\", \r\n                                    selectedNode :\"Section\",\r\n                                    url:\"organisation/getSectionUsers\"}))\r\n                    }\r\n                })\r\n            }\r\n            return null;\r\n\r\n        });\r\n        const labNode = selectedDepartmentLab.slabname;\r\n\r\n        initialNode = {\r\n            name: labNode,\r\n            key: 'deptlab_2_' + selectedDepartmentLab.ndeptlabcode,\r\n            children: labSectionArray,\r\n            textProps: { x: 0, y: 25 },\r\n            gProps: { className: 'deptClass' },\r\n        };\r\n\r\n    }\r\n    else if (graphSelectedNode === \"Section\") {\r\n\r\n        const selectedLabSection = masterData.SelectedLabSection || {};\r\n\r\n        const sectionUsersList = masterData.SectionUsers || [];\r\n        const sectionUserArray = [];\r\n        sectionUsersList.map((sectionUser, userIndex) => {\r\n            dataHeight++;\r\n            if (sectionUser.nlabsectioncode === selectedLabSection.nlabsectioncode) {\r\n               const userNode = sectionUser.susername;\r\n               return sectionUserArray.push({\r\n                    name: userNode.length > 30 ? userNode.substring(0, 30).concat(\"...\") : userNode,\r\n                    key: \"sectionuser_1_\" + sectionUser.nsectionusercode,\r\n                    textProps: { x: -25, y: 25 },\r\n                    gProps: { className: \"userClass\", item: sectionUser }\r\n                })\r\n            }\r\n            return null;\r\n        })\r\n        const sectionNode = selectedLabSection.ssectionname;\r\n\r\n        initialNode = {\r\n            name: sectionNode,\r\n            key: \"labSection_1_\" + selectedLabSection.nlabsectioncode,\r\n            children: sectionUserArray,\r\n            textProps: { x: 0, y: 25 },\r\n            gProps: { className: 'deptClass' },\r\n        };\r\n\r\n    }\r\n    const graphData = {initialNode, dataHeight};\r\n    return graphData;\r\n}\r\n\r\n\r\nexport function organisationService(methodParam){\r\n    return function (dispatch) {  \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(methodParam.url, methodParam.inputData)\r\n    .then(response=>{       \r\n                   \r\n            if (methodParam.inputData.graphview === true){               \r\n                   \r\n                const updateInfo = { typeName: DEFAULT_RETURN,\r\n                                     data: { openModal:false}\r\n                                   };\r\n                dispatch(updateStore(updateInfo));\r\n\r\n                const data = {...response.data};   \r\n                \r\n                const graphData = constructGraphView(data,methodParam.selectedNode, methodParam.inputData.userinfo, dispatch);\r\n                dispatch({type: DEFAULT_RETURN, payload:{   graphData:graphData[\"initialNode\"],\r\n                                                            graphHeight :graphData[\"dataHeight\"],\r\n                                                            graphSelectedNode:methodParam.selectedNode,\r\n                                                            loading:false, \r\n                                                            graphView: data.GraphView,\r\n                                                            openModal:true\r\n                                                        }});                   \r\n            }\r\n            else{\r\n                const masterData = {...methodParam.masterData, ...response.data};\r\n                sortData(masterData);  \r\n\r\n                dispatch({type: DEFAULT_RETURN, payload:{masterData,\r\n                                                            organisation :methodParam.organisation,\r\n                                                            data:undefined, dataState:undefined,\r\n                                                            //selectedTreePath :methodParam.inputData.selectedtreepath,\r\n                                                            loading:false,// treeData:site\r\n                                                            graphView:false\r\n                                                        }});\r\n            }                      \r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        })        \r\n    }\r\n}\r\n\r\nexport function getOrganisationComboService(methodParam) {            \r\n    return function (dispatch) {  \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(methodParam.url, methodParam.inputData)\r\n    .then(response=>{                  \r\n        const respObject = {};\r\n        if (methodParam.organisation){\r\n            respObject[\"organisation\"] = methodParam.organisation\r\n        }\r\n        //const index = methodParam.columnList.findIndex(item=>item.controlType === \"selectbox\")\r\n        // const selected = methodParam.selectedRecord;\r\n\r\n        // const foundIndex = response.data.findIndex(\r\n        //     x => x[\"ndefaultstatus\"] === transactionStatus.YES);\r\n        // const defaultStatus =  response.data[foundIndex] ;\r\n        // selected[methodParam.columnList[index].dataField] = defaultStatus;\r\n\r\n        // const dataMap = constructOptionList(response.data || [],methodParam.columnList[index].optionId, \r\n        //     methodParam.columnList[index].optionValue, undefined, undefined, true) ;\r\n        // const dataList = dataMap.get(\"OptionList\");\r\n        // const selected = methodParam.selectedRecord;\r\n        // if (dataMap.get(\"DefaultValue\") !== undefined){\r\n        //     selected[methodParam.columnList[index].dataField] = [dataMap.get(\"DefaultValue\")];\r\n        // }\r\n            dispatch({type: DEFAULT_RETURN, payload:{...respObject,\r\n                        [methodParam.listName]:response.data || [],                               \r\n                        operation:methodParam.operation, \r\n                        screenName:methodParam.screenName, \r\n                        selectedRecord:methodParam.selectedRecord, \r\n                        openModal : true,\r\n                        ncontrolCode:methodParam.ncontrolCode,\r\n                        loading:false, graphView:false\r\n                    }});\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        })        \r\n    }\r\n}\r\n\r\nexport function getSectionUserRole (methodParam) {            \r\n    return function (dispatch) {  \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"organisation/getSectionUserRole\", \r\n                                    {nsitecode:methodParam.nsitecode, nusercode:methodParam.primaryKeyValue,\r\n                                    userinfo:methodParam.userInfo})\r\n    .then(response=>{ \r\n            let userRoleMap = methodParam.masterData.userRoleMap || new Map();           \r\n            userRoleMap.set(parseInt(Object.keys(response.data[\"SectionUserRoleMap\"])[0]), Object.values(response.data[\"SectionUserRoleMap\"])[0]);\r\n            const masterData = {...methodParam.masterData, userRoleMap};\r\n            sortData(masterData);\r\n            dispatch({type: DEFAULT_RETURN, payload:{masterData,\r\n                        data: methodParam.data, userRoleMap,\r\n                        dataState:methodParam.dataState,\r\n                        loading:false\r\n                    }});\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }  \r\n        })        \r\n    }\r\n}\r\n\r\n// export function reloadTreeData (methodParam) {            \r\n//     return function (dispatch) {  \r\n//     const updateInfo = {\r\n//             typeName: DEFAULT_RETURN,\r\n//             data: { masterData:{}, organisation:undefined,}\r\n//         }\r\n//     dispatch(updateStore(updateInfo))\r\n//     dispatch(callService(methodParam))\r\n         \r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}