{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nexport function showInstitutionDepartmentAddScreen(userInfo, ncontrolcode) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post('institutiondepartment/getInstitutionDepartment', {\n      \"userinfo\": userInfo\n    }).then(response => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openModal: true,\n          operation: \"create\",\n          selectedRecord: {},\n          ncontrolcode,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function fetchinstituiondeptTypeById(editParam) {\n  return function (dispatch) {\n    const URL1 = rsapi.post(\"institutiondepartment/getActiveInstitutionDepartmentById\", {\n      [editParam.primaryKeyField]: editParam.primaryKeyValue,\n      \"userinfo\": editParam.userInfo\n    });\n    dispatch(initRequest(true));\n    Axios.all([URL1]).then(response => {\n      let selectedRecord = {};\n      let selectedId = editParam.primaryKeyValue;\n      selectedRecord = response[0].data;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          selectedRecord: { ...response[0].data\n          },\n          operation: editParam.operation,\n          openModal: true,\n          screenName: editParam.screenName,\n          ncontrolcode: editParam.ncontrolCode,\n          loading: false,\n          selectedId\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/actions/InstitutionDepartmentAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","showInstitutionDepartmentAddScreen","userInfo","ncontrolcode","dispatch","post","then","response","type","payload","openModal","operation","selectedRecord","loading","catch","error","status","message","warn","data","fetchinstituiondeptTypeById","editParam","URL1","primaryKeyField","primaryKeyValue","all","selectedId","screenName","ncontrolCode"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios'\r\nimport { initRequest } from './LoginAction';\r\n\r\nexport function showInstitutionDepartmentAddScreen (userInfo, ncontrolcode){\r\n    return function(dispatch){\r\n        dispatch(initRequest(true));\r\n        rsapi.post('institutiondepartment/getInstitutionDepartment',{\"userinfo\":userInfo}) \r\n        .then(response=> { \r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload:{\r\n                    openModal:true,\r\n                    operation:\"create\",\r\n                    selectedRecord:{}\r\n                    , ncontrolcode,loading:false\r\n                }\r\n            });         \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function fetchinstituiondeptTypeById (editParam){  \r\n    return function(dispatch){\r\n        const URL1=rsapi.post(\"institutiondepartment/getActiveInstitutionDepartmentById\", { [editParam.primaryKeyField] :editParam.primaryKeyValue , \"userinfo\": editParam.userInfo} )\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL1])\r\n        .then(response=> { \r\n            let selectedRecord={}\r\n            let selectedId = editParam.primaryKeyValue;         \r\n            selectedRecord=response[0].data\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload:{\r\n                    selectedRecord: { ...response[0].data},\r\n                operation:editParam.operation,\r\n                openModal: true,\r\n                screenName:editParam.screenName,\r\n                ncontrolcode:editParam.ncontrolCode,\r\n                loading:false,selectedId\r\n            }\r\n            }); \r\n            \r\n        })\r\n        .catch(error => {\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(error.message);\r\n            } \r\n            else{               \r\n                toast.warn(error.response.data);\r\n            }         \r\n        })\r\n    }\r\n }"]},"metadata":{},"sourceType":"module"}