{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\bulkbarcodeconfiguration\\\\BulkBarcodeConfig.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Row, Col, Button, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap'; //Nav, Card, Button\n\nimport { process } from '@progress/kendo-data-query';\nimport { toast } from 'react-toastify';\nimport { ContentPanel, ReadOnlyText } from '../../components/App.styles';\nimport { constructOptionList, getControlMap, showEsign, sortData } from '../../components/CommonScript'; //showEsign, getControlMap,\n\nimport { callService, crudMaster, validateEsignCredential, updateStore, getEditData, getFilterProjectType, getBulkBarcodeConfigDetail, addBarcodeMaster, getFieldLengthService, getBulkBarcodeDetailsEditData, getParentBarcodeService, filterTransactionList, saveBarcodeMaster, validateEsignCredentialSaveBarcodeMaster } from '../../actions';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport SplitterLayout from 'react-splitter-layout';\nimport { ProductList } from '../product/product.styled';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faPlus, faPencilAlt, faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport { ReactComponent as RefreshIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/refresh.svg\";\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport { designProperties, transactionStatus } from '../../components/Enumeration';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport Esign from '../audittrail/Esign';\nimport { ListWrapper } from '../userroletemplate/userroletemplate.styles';\nimport AddBulkBarcodeConfiguration from './AddBulkBarcodeConfig';\nimport AddBulkBarcodeConfigMaster from './AddBulkBarcodeConfigMaster';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\n\nclass BulkBarcodeConfig extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.state.data ? this.state.data : [], event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.addBarcodeField = (screenName, userInfo, operation, masterData, ncontrolcode) => {\n      if (masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.APPROVED || masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.RETIRED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORD\"\n        }));\n      } else {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openChildModal: true,\n            loadBarcodeMaster: true,\n            operation: operation,\n            ncontrolcode: ncontrolcode,\n            fieldName: screenName,\n            loadBulkBarcodeConfig: false,\n            screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.approveVersion = ncontrolCode => {\n      if (this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.RETIRED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_ALREADYRETIRED\"\n        }));\n      } else if (this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.APPROVED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_ALREADYAPPROVED\"\n        }));\n      } else {\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo; //add               \n\n        let postParam = undefined;\n        inputData[\"bulkbarcodeconfig\"] = this.props.Login.masterData.selectedBulkBarcodeConfig;\n        postParam = {\n          inputListName: \"BulkBarcodeConfig\",\n          selectedObject: \"selectedBulkBarcodeConfig\",\n          primaryKeyField: \"nbulkbarcodeconfigcode\"\n        };\n        const inputParam = {\n          classUrl: 'bulkbarcodeconfiguration',\n          methodUrl: \"BulkBarcodeConfiguration\",\n          inputData: inputData,\n          operation: \"approve\",\n          postParam,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        let saveType;\n        const masterData = this.props.Login.masterData;\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              loadBarcodeMaster: false,\n              loadBulkBarcodeConfig: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openModal: true,\n              operation: \"approve\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let loadBulkBarcodeConfig = this.props.Login.loadBulkBarcodeConfig;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          loadBulkBarcodeConfig = false;\n          selectedRecord = {\n            nprojecttypecode: this.state.selectedRecord.nprojecttypecode\n          };\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = undefined;\n          selectedRecord['esigncomments'] = undefined;\n          selectedRecord['esignreason'] = undefined;\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {\n          nprojecttypecode: this.state.selectedRecord.nprojecttypecode\n        };\n        loadBulkBarcodeConfig = false;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          loadBulkBarcodeConfig,\n          openChildModal\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeBarcodeMasterModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let openChildModal = this.props.Login.openChildModal;\n      let selectedMasterRecord = this.props.Login.selectedMasterRecord;\n      let loadBarcodeMaster = this.props.Login.loadBarcodeMaster;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\" || this.props.Login.operation === \"blackList\") {\n          loadEsign = false;\n          openChildModal = false;\n          selectedMasterRecord = {};\n          openModal = false;\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = undefined;\n          selectedRecord['esigncomments'] = undefined;\n          selectedRecord['esignreason'] = undefined;\n        }\n      } else {\n        openChildModal = false;\n        selectedMasterRecord = {};\n        loadBarcodeMaster = false;\n        openModal = false;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openChildModal,\n          loadEsign,\n          selectedRecord,\n          openModal,\n          selectedMasterRecord,\n          selectedId: null,\n          loadBarcodeMaster\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.openModal = (ncontrolcode, operation, screenName) => {\n      if (this.state.selectedRecord && this.state.selectedRecord[\"nprojecttypecode\"]) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal: true,\n            loadBulkBarcodeConfig: true,\n            operation: operation,\n            screenName: screenName,\n            ncontrolcode: ncontrolcode\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTFILTER\"\n        }));\n      }\n    };\n\n    this.onReload = () => {\n      if (this.state.selectedRecord && this.state.selectedRecord[\"nprojecttypecode\"]) {\n        this.searchRef.current.value = \"\";\n        let inputData = {\n          nprojecttypecode: this.props.Login.masterData && this.props.Login.masterData.SelectedProjectType[\"nprojecttypecode\"] ? this.props.Login.masterData.SelectedProjectType[\"nprojecttypecode\"] : -1,\n          userinfo: this.props.Login.userInfo,\n          postParamList: this.filterParam\n        };\n        let masterData = { ...this.props.Login.masterData\n        };\n        let inputParam = {\n          masterData,\n          inputData,\n          searchRef: this.searchRef\n        };\n        this.props.getFilterProjectType(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTFILTER\"\n        }));\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      if (this.state.selectedRecord && this.state.selectedRecord[\"nprojecttypecode\"]) {\n        this.searchRef.current.value = \"\";\n        let masterData = { ...this.props.Login.masterData\n        };\n        let inputData = {\n          nprojecttypecode: this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value : -1,\n          userinfo: this.props.Login.userInfo //postParamList: this.filterParam,\n\n        };\n        let inputParam = {\n          masterData,\n          inputData,\n          searchRef: this.searchRef\n        };\n        this.props.getFilterProjectType(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTFILTER\"\n        }));\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      ;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = (event, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.name === 'nbarcodelength') {\n        const numericRegex = /^[0-9]+$/;\n\n        if (numericRegex.test(event.target.value)) {\n          if (parseInt(event.target.value) !== 0) {\n            selectedRecord[event.target.name] = parseInt(event.target.value) > 0 && parseInt(event.target.value) <= parseInt(this.props.Login.settings && this.props.Login.settings['37']) ? event.target.value : event.target.defaultValue;\n          } else {\n            selectedRecord[event.target.name] = \"\";\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value === \"\" ? \"\" : event.target.defaultValue;\n        }\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChangeMaster = (comboData, fieldName) => {\n      const selectedMasterRecord = this.state.selectedMasterRecord || {};\n\n      if (fieldName === \"nbarcodemastercode\") {\n        if (selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.value !== comboData.value) {\n          delete selectedMasterRecord.isneedparent;\n          delete selectedMasterRecord.nparentmastercode;\n        }\n      }\n\n      selectedMasterRecord[fieldName] = comboData;\n      this.setState({\n        selectedMasterRecord\n      });\n    };\n\n    this.onInputOnChangeMaster = (event, fieldName) => {\n      const selectedMasterRecord = this.state.selectedMasterRecord || {};\n      const numericRegex = /^[0-9]+$/;\n\n      if (event.target.type === 'checkbox') {\n        //ALPD-5082 Added validation for isvalidationrequired by VISHAKH\n        if (fieldName === \"isvalidationrequired\") {\n          selectedMasterRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n          this.setState({\n            selectedMasterRecord\n          });\n        } else {\n          if (selectedMasterRecord.nbarcodemastercode) {\n            selectedMasterRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n\n            if (event.target.checked === true) {\n              this.props.getParentBarcodeService({\n                inputData: {\n                  userinfo: this.props.Login.userInfo,\n                  nprojecttypecode: this.state.selectedRecord.nprojecttypecode.value,\n                  masterData: this.props.Login.masterData,\n                  selectedMasterRecord: selectedMasterRecord\n                }\n              });\n            }\n\n            if (event.target.checked === false) {\n              delete selectedMasterRecord.nparentmastercode;\n            }\n\n            this.setState({\n              selectedMasterRecord\n            });\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_SELECTBARCODEMASTER\"\n            }));\n          }\n        }\n      } else if (event.target.name === 'nsorter') {\n        if (numericRegex.test(event.target.value)) {\n          if (parseInt(event.target.value) !== 0) {\n            selectedMasterRecord[event.target.name] = parseInt(event.target.value) > 0 && parseInt(event.target.value) <= parseInt(this.props.Login.settings && this.props.Login.settings['37']) ? event.target.value : event.target.defaultValue;\n          } else {\n            selectedMasterRecord[event.target.name] = \"\";\n          }\n        } else {\n          selectedMasterRecord[event.target.name] = event.target.value === \"\" ? \"\" : event.target.defaultValue;\n        }\n\n        this.setState({\n          selectedMasterRecord\n        });\n      } else if (event.target.name === 'nfieldlength') {\n        if (numericRegex.test(event.target.value)) {\n          selectedMasterRecord[event.target.name] = event.target.value;\n        } else {\n          selectedMasterRecord[event.target.name] = event.target.value === \"\" ? \"\" : event.target.defaultValue;\n        }\n\n        this.setState({\n          selectedMasterRecord\n        });\n      } else {\n        selectedMasterRecord[event.target.name] = event.target.value;\n        this.setState({\n          selectedMasterRecord\n        });\n      }\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.breadcrumbList = () => {\n      let breadCrumbArray = [];\n      breadCrumbArray.push({\n        \"label\": \"IDS_PROJECTTYPE\",\n        \"value\": this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType.sprojecttypename || 'NA'\n      });\n      return breadCrumbArray;\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let selectedRecord = this.state.selectedRecord;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = undefined;\n\n      if (this.props.Login.operation === \"update\") {\n        // edit\n        postParam = {\n          inputListName: \"BulkBarcodeConfig\",\n          selectedObject: \"selectedBulkBarcodeConfig\",\n          primaryKeyField: \"nbulkbarcodeconfigcode\"\n        };\n        inputData[\"bulkbarcodeconfig\"] = {\n          \"sconfigname\": selectedRecord.sconfigname,\n          \"nbarcodelength\": parseInt(selectedRecord.nbarcodelength),\n          \"sdescription\": selectedRecord.sdescription,\n          \"nprojecttypecode\": selectedRecord.nprojecttypecode.value,\n          \"nbulkbarcodeconfigcode\": selectedRecord.nbulkbarcodeconfigcode\n        };\n      } else {\n        //add               \n        inputData[\"bulkbarcodeconfig\"] = {\n          \"sconfigname\": selectedRecord.sconfigname,\n          \"nbarcodelength\": parseInt(selectedRecord.nbarcodelength),\n          \"sdescription\": selectedRecord.sdescription || \"\",\n          \"nprojecttypecode\": selectedRecord.nprojecttypecode.value\n        };\n      }\n\n      const inputParam = {\n        classUrl: \"bulkbarcodeconfiguration\",\n        //this.props.Login.inputParam.classUrl,\n        methodUrl: \"BulkBarcodeConfiguration\",\n        inputData: inputData,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        postParam,\n        searchRef: this.searchRef,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.onSaveBarcodeMasterClick = (saveType, formRef) => {\n      let inputData = [];\n      let selectedId = null;\n      let isParentSameChild = true;\n      let selectedMasterRecord = this.state.selectedMasterRecord;\n      let selectedProjectType = this.props.Login.masterData && this.props.Login.masterData.SelectedProjectType;\n      let selectedBulkBarcodeConfig = this.props.Login.masterData && this.props.Login.masterData.selectedBulkBarcodeConfig;\n\n      if (selectedMasterRecord.nparentmastercode !== undefined && selectedMasterRecord.nbarcodemastercode !== undefined) {\n        if (selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.value === (selectedMasterRecord.nparentmastercode && selectedMasterRecord.nparentmastercode.item && selectedMasterRecord.nparentmastercode.item.jsondata && selectedMasterRecord.nparentmastercode.item.jsondata.nbarcodemastercode)) {\n          isParentSameChild = false;\n        } else {\n          isParentSameChild = true;\n        }\n      }\n\n      if (isParentSameChild) {\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        let postParam = undefined;\n\n        if (this.props.Login.operation === \"update\") {\n          // edit\n          postParam = {\n            inputListName: \"BulkBarcodeConfig\",\n            selectedObject: \"selectedBulkBarcodeConfig\",\n            primaryKeyField: \"nbulkbarcodeconfigcode\"\n          };\n          inputData[\"bulkbarcodeconfigdetails\"] = {\n            \"nbulkbarcodeconfigcode\": selectedBulkBarcodeConfig.nbulkbarcodeconfigcode,\n            \"nsorter\": selectedMasterRecord && selectedMasterRecord.nsorter,\n            \"sdescription\": selectedMasterRecord && selectedMasterRecord.sdescription || \"\",\n            \"nbulkbarcodeconfigdetailscode\": selectedMasterRecord.nbulkbarcodeconfigdetailscode,\n            \"nprojecttypecode\": selectedBulkBarcodeConfig.nprojecttypecode,\n            \"isvalidationrequired\": selectedMasterRecord && selectedMasterRecord.isvalidationrequired //ALPD-5082 Added isvalidationrequired for update by VISHAKH\n\n          };\n          selectedId = this.props.Login.selectedId;\n        } else {\n          //add               \n          inputData[\"bulkbarcodeconfigdetails\"] = {\n            \"nbulkbarcodeconfigcode\": selectedBulkBarcodeConfig.nbulkbarcodeconfigcode,\n            \"nprojecttypecode\": selectedProjectType.nprojecttypecode,\n            \"nneedmaster\": this.props.Login.fieldName === 'barcodemaster' ? transactionStatus.YES : transactionStatus.NO,\n            \"nqueryneed\": selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item.squery === null || selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.squery === undefined ? transactionStatus.NO : transactionStatus.YES,\n            \"nquerybuildertablecode\": -1,\n            \"stablename\": selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.stablename || \"\",\n            \"stablecolumnname\": selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.sconditionalfieldname || \"\",\n            \"nfieldstartposition\": 0,\n            \"nfieldlength\": selectedMasterRecord && selectedMasterRecord.nfieldlength,\n            \"nsorter\": selectedMasterRecord && selectedMasterRecord.nsorter,\n            \"jsondata\": {\n              sfieldname: selectedMasterRecord && selectedMasterRecord.sfieldname,\n              stablefieldname: selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.stablecolumnname,\n              isneedparent: selectedMasterRecord.isneedparent || 4,\n              sprimarykeyfieldname: selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.stableprimarykey,\n              parentData: { ...(selectedMasterRecord.nparentmastercode && selectedMasterRecord.nparentmastercode.item)\n              },\n              nbarcodemastercode: selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.value,\n              nformcode: selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.nformcode,\n              sformname: selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.sformname,\n              isvalidationrequired: selectedMasterRecord && selectedMasterRecord.isvalidationrequired ? selectedMasterRecord.isvalidationrequired : transactionStatus.NO //ALPD-5082 Added isvalidationrequired for create by VISHAKH\n\n            },\n            \"squery\": selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.squery || null,\n            \"sdescription\": selectedMasterRecord && selectedMasterRecord.sdescription || \"\",\n            \"sfieldname\": selectedMasterRecord && selectedMasterRecord.sfieldname\n          };\n        }\n\n        const inputParam = {\n          classUrl: \"bulkbarcodeconfiguration\",\n          //this.props.Login.inputParam.classUrl,\n          methodUrl: \"BulkBarcodeMaster\",\n          inputData: inputData,\n          selectedId,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          selectedMasterRecord: this.state.selectedMasterRecord\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.saveBarcodeMaster(inputParam, masterData, \"openChildModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MASTERANDPARENTCANNOTBESAME\"\n        }));\n      }\n    };\n\n    this.deleteRecord = deleteParam => {\n      let inputData = [];\n      let inputParam = {};\n\n      if (this.props.Login.masterData.selectedBulkBarcodeConfig && this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus == transactionStatus.APPROVED || this.props.Login.masterData.selectedBulkBarcodeConfig && this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus == transactionStatus.RETIRED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORD\"\n        }));\n      } else {\n        inputData[\"bulkbarcodeconfigdetails\"] = { ...deleteParam.selectedRecord,\n          sfieldname: deleteParam.selectedRecord && deleteParam.selectedRecord.jsondata && deleteParam.selectedRecord.jsondata.sfieldname\n        };\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        inputParam = {\n          classUrl: \"bulkbarcodeconfiguration\",\n          methodUrl: \"BulkBarcodeMaster\",\n          inputData: inputData,\n          operation: \"delete\",\n          dataState: this.state.dataState\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              loadBarcodeMaster: true,\n              screenName: \"BulkBarcodeConfigDetails\",\n              operation: \"delete\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n        }\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.ConfirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteBulkBarcodeConfig(deleteId));\n    };\n\n    this.deleteBulkBarcodeConfig = deleteId => {\n      if (this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.APPROVED || this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.RETIRED) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORD\"\n        }));\n      } else {\n        const postParam = {\n          inputListName: \"BulkBarcodeConfig\",\n          selectedObject: \"selectedBulkBarcodeConfig\",\n          primaryKeyField: \"nbulkbarcodeconfigcode\",\n          primaryKeyValue: this.props.Login.masterData.selectedBulkBarcodeConfig.nbulkbarcodeconfigcode,\n          fetchUrl: \"bulkbarcodeconfiguration/getBulkBarcodeConfiguration\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputData = {\n          'bulkbarcodeconfig': this.props.Login.masterData.selectedBulkBarcodeConfig\n        };\n        inputData['userinfo'] = this.props.Login.userInfo;\n        const inputParam = {\n          methodUrl: 'BulkBarcodeConfiguration',\n          classUrl: \"bulkbarcodeconfiguration\",\n          displayName: \"IDS_BULKBARCODECONFIG\",\n          inputData: inputData,\n          postParam,\n          operation: \"delete\",\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              loadBarcodeMaster: false,\n              operation: \"delete\",\n              openModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: \"IDS_BULKBARCODECONFIG\"\n              })\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n\n      if (this.props.Login.loadBarcodeMaster && this.props.Login.operation === 'update') {\n        this.props.validateEsignCredentialSaveBarcodeMaster(inputParam, \"openChildModal\");\n      } else {\n        this.props.validateEsignCredential(inputParam, this.props.Login.loadBarcodeMaster ? \"openChildModal\" : \"openModal\");\n      }\n    };\n\n    this.myRef = React.createRef();\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.searchFieldList = [\"sconfigname\", \"sprojecttypename\", \"sversionno\", \"stransdisplaystatus\"];\n    this.state = {\n      selectedRecord: {},\n      selectedMasterRecord: {},\n      operation: \"\",\n      gridHeight: 'auto',\n      screenName: undefined,\n      userRoleControlRights: [],\n      ControlRights: undefined,\n      ConfirmDialogScreen: false,\n      controlMap: new Map(),\n      dataResult: [],\n      dataState: dataState,\n      skip: 0,\n      error: \"\",\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      kendoSkip: 0,\n      kendoTake: this.props.Login.settings ? parseInt(this.props.Login.settings[16]) : 5,\n      splitChangeWidthPercentage: 30\n    };\n    this.searchRef = React.createRef();\n    this.ConfirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    let BarcodeDetails = sortData(this.props.Login.masterData.BarcodeDetails, 'ascending', 'nsorter');\n    let versionStatusCSS = \"outline-secondary\";\n\n    if (this.props.Login.masterData.selectedBulkBarcodeConfig && this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.APPROVED) {\n      versionStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.selectedBulkBarcodeConfig && this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.RETIRED) {\n      versionStatusCSS = \"outline-danger\";\n    }\n\n    const addID = this.state.controlMap.has(\"AddBulkBarcodeConfiguration\") && this.state.controlMap.get(\"AddBulkBarcodeConfiguration\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditBulkBarcodeConfiguration\") && this.state.controlMap.get(\"EditBulkBarcodeConfiguration\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteBulkBarcodeConfiguration\") && this.state.controlMap.get(\"DeleteBulkBarcodeConfiguration\").ncontrolcode;\n    const approveId = this.state.controlMap.has(\"ApproveBulkBarcodeConfiguration\") && this.state.controlMap.get(\"ApproveBulkBarcodeConfiguration\").ncontrolcode;\n    const addMasterID = this.state.controlMap.has(\"AddBulkBarcodeMaster\") && this.state.controlMap.get(\"AddBulkBarcodeMaster\").ncontrolcode;\n    const addFieldID = this.state.controlMap.has(\"AddBulkBarcodeField\") && this.state.controlMap.get(\"AddBulkBarcodeField\").ncontrolcode;\n    const editMasterId = this.state.controlMap.has(\"EditBulkBarcodeConfigDetails\") && this.state.controlMap.get(\"EditBulkBarcodeConfigDetails\").ncontrolcode;\n    const deleteMasterId = this.state.controlMap.has(\"DeleteBulkBarcodeConfigDetails\") && this.state.controlMap.get(\"DeleteBulkBarcodeConfigDetails\").ncontrolcode;\n    this.extractedColumnList = [{\n      \"idsName\": \"IDS_BARCODEFIELDNAME\",\n      \"dataField\": \"sdisplayname\",\n      \"width\": \"250px\",\n      \"componentName\": \"date\"\n    }, {\n      \"idsName\": \"IDS_FIELDLENGTH\",\n      \"dataField\": \"nfieldlength\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_SORTORDER\",\n      \"dataField\": \"nsorter\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_STARTINDEX\",\n      \"dataField\": \"nfieldstartposition\",\n      \"width\": \"150px\"\n    }];\n    let mandatoryFields = [];\n    let mandatoryBarcodeMasterFields = [];\n    mandatoryFields = [{\n      \"idsName\": \"IDS_CONFIGURATIONNAME\",\n      \"dataField\": \"sconfigname\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_BARCODELENGTH\",\n      \"dataField\": \"nbarcodelength\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n\n    if (this.props.Login.fieldName == \"barcodemaster\") {\n      mandatoryBarcodeMasterFields.push({\n        \"idsName\": \"IDS_BARCODEMASTERNAME\",\n        \"dataField\": \"nbarcodemastercode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      });\n    }\n\n    mandatoryBarcodeMasterFields.push({\n      \"idsName\": \"IDS_FIELDNAME\",\n      \"dataField\": \"sfieldname\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_FIELDLENGTH\",\n      \"dataField\": \"nfieldlength\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_SORTORDER\",\n      \"dataField\": \"nsorter\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    });\n\n    if (this.props.Login.fieldName == \"barcodemaster\" && this.state.selectedMasterRecord && this.state.selectedMasterRecord.isneedparent === transactionStatus.YES) {\n      mandatoryBarcodeMasterFields.push({\n        \"idsName\": \"IDS_PARENTMASTERNAME\",\n        \"dataField\": \"nparentmastercode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      });\n    }\n\n    const SubFields = [{\n      [designProperties.VALUE]: \"sversionno\"\n    }, {\n      [designProperties.VALUE]: \"stransdisplaystatus\"\n    }];\n    const editParam = {\n      screenName: \"BulkBarcodeConfigDetails\",\n      primaryKeyField: \"nbulkbarcodeconfigdetailscode\",\n      operation: \"update\",\n      inputParam: this.props.login && this.props.login.inputParam,\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editMasterId\n    };\n    const filterParam = {\n      inputListName: \"BulkBarcodeConfig\",\n      selectedObject: \"selectedBulkBarcodeConfig\",\n      primaryKeyField: \"nbulkbarcodeconfigcode\",\n      fetchUrl: \"bulkbarcodeconfiguration/getBulkBarcodeConfig\",\n      masterData: this.props.Login.masterData || {},\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        nprojecttypecode: this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\n        nbulkbarcodeconfigcode: this.props.Login.masterData.selectedBulkBarcodeConfig && this.props.Login.masterData.selectedBulkBarcodeConfig.nbulkbarcodeconfigcode\n      },\n      filteredListName: \"searchedBulkBarcodeConfig\",\n      clearFilter: \"no\",\n      updatedListname: \"selectedBulkBarcodeConfig\",\n      searchRef: this.searchRef,\n      searchFieldList: this.searchFieldList,\n      changeList: [],\n      isSortable: true,\n      sortList: 'BulkBarcodeConfig'\n    };\n    this.breadCrumbData = this.breadcrumbList();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: this.breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height sticky_head_parent\",\n      ref: parentHeight => {\n        this.parentHeight = parentHeight;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      percentage: true,\n      primaryIndex: 1,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      onSecondaryPaneSizeChange: this.paneSizeChange,\n      primaryMinSize: 40,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      needMultiSelect: false,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.BulkBarcodeConfig || [],\n      selectedMaster: [this.props.Login.masterData.selectedBulkBarcodeConfig] || [],\n      primaryKeyField: \"nbulkbarcodeconfigcode\",\n      getMasterDetail: (Sample, status) => this.props.getBulkBarcodeConfigDetail({\n        masterData: this.props.Login.masterData,\n        nprojecttypecode: this.props.Login.masterData && this.props.Login.masterData.SelectedProjectType[\"nprojecttypecode\"] ? this.props.Login.masterData.SelectedProjectType[\"nprojecttypecode\"] : -1,\n        userinfo: this.props.Login.userInfo,\n        ...Sample\n      }, status),\n      subFieldsLabel: false,\n      additionalParam: [''],\n      mainField: 'sconfigname',\n      filterColumnData: this.props.filterTransactionList,\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: SubFields,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      statusColor: \"stranscolor\",\n      showStatusIcon: false,\n      showStatusName: true,\n      needFilter: true,\n      searchRef: this.searchRef,\n      filterParam: filterParam,\n      skip: this.state.skip,\n      take: this.state.take,\n      handlePageChange: this.handlePageChange,\n      showStatusBlink: true,\n      callCloseFunction: true,\n      childTabsKey: [],\n      splitModeClass: this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : '',\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"btn btn-icon-rounded btn-circle solid-blue\",\n        role: \"button\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ADD\"\n        }),\n        hidden: this.state.userRoleControlRights.indexOf(addID) === -1,\n        onClick: () => this.openModal(addID, 'create', 'IDS_BULKBARCODECONDIG'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2 p-0\",\n        variant: \"link\",\n        onClick: () => this.onReload(),\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(RefreshIcon, {\n        className: \"custom_icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 57\n        }\n      })))),\n      filterComponent: [{\n        \"Bulk Barcode Configuration\": /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n          name: \"nprojecttypecode\",\n          as: \"select\",\n          onChange: event => this.onComboChange(event, 'nprojecttypecode'),\n          formLabel: this.props.intl.formatMessage({\n            id: \"IDS_PROJECTTYPE\"\n          }),\n          value: this.state.selectedRecord && this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"] || [] : [],\n          options: this.state.projectType && this.state.projectType || [],\n          optionId: \"value\",\n          optionValue: \"label\",\n          isMulti: false,\n          isDisabled: false,\n          isSearchable: false,\n          isClearable: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 61\n          }\n        })))\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 41\n      }\n    }, this.props.Login.masterData.selectedBulkBarcodeConfig ? Object.entries(this.props.Login.masterData.selectedBulkBarcodeConfig).length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.selectedBulkBarcodeConfig.sconfigname)), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 69\n      }\n    }, `${this.props.intl.formatMessage({\n      id: \"IDS_VERSIONNO\"\n    })}:${this.props.Login.masterData.selectedBulkBarcodeConfig.sversionno}`, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${versionStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 73\n      }\n    }, this.props.Login.masterData.selectedBulkBarcodeConfig.stransdisplaystatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      onClick: () => this.props.getEditData(this.props.Login.masterData.selectedBulkBarcodeConfig.nbulkbarcodeconfigcode, this.props.Login.userInfo, this.props.Login.masterData, editId, 'IDS_BULKBARCODECONDIG'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 85\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 85\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      onClick: () => this.approveVersion(approveId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 85\n      }\n    }))))))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_BARCODELENGTH\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 88\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 77\n      }\n    }, this.props.Login.masterData.selectedBulkBarcodeConfig.nbarcodelength === \"\" ? '-' : this.props.Login.masterData.selectedBulkBarcodeConfig.nbarcodelength))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DESCRIPTION\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 88\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 77\n      }\n    }, this.props.Login.masterData.selectedBulkBarcodeConfig.sdescription === \"\" ? '-' : this.props.Login.masterData.selectedBulkBarcodeConfig.sdescription)))))), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\",\n      onClick: () => this.props.addBarcodeMaster(this.props.intl.formatMessage({\n        id: \"IDS_BARCODEMASTERNAME\"\n      }), this.props.Login.userInfo, 'create', this.props.Login.masterData, 'barcodemaster', addMasterID),\n      hidden: this.state.userRoleControlRights.indexOf(addMasterID) === -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 77\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDBARCODEMASTER\",\n      defaultMessage: \"Barcode Master\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 77\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\",\n      onClick: () => this.addBarcodeField(this.props.intl.formatMessage({\n        id: \"IDS_BARCODEFORMATTINGFIELD\"\n      }), this.props.Login.userInfo, 'create', this.props.Login.masterData, 'barcodefield', addFieldID),\n      hidden: this.state.userRoleControlRights.indexOf(addFieldID) === -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 77\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDBARCODEFIELD\",\n      defaultMessage: \"Barcode Field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 77\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nbulkbarcodeconfigdetailscode\",\n      dataResult: BarcodeDetails && BarcodeDetails.length > 0 && process(BarcodeDetails ? BarcodeDetails : [], this.state.dataState) || [],\n      data: this.state.data || [],\n      dataState: this.state.dataState || [],\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: this.extractedColumnList,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      methodUrl: \"BulkBarcodeConfigDetails\",\n      fetchRecord: this.props.getBulkBarcodeDetailsEditData,\n      editParam: editParam,\n      deleteRecord: this.deleteRecord,\n      deleteParam: {\n        operation: \"delete\",\n        screenName: \"IDS_BARCODEMASTERNAME\",\n        ncontrolCode: deleteMasterId\n      },\n      pageable: true,\n      scrollable: \"scrollable\",\n      isToolBarRequired: false,\n      selectedId: this.props.Login.selectedId,\n      hideColumnFilter: false,\n      groupable: false,\n      isActionRequired: true,\n      gridHeight: '350px' //ALPD-5082 Changed datagrid height by VISHAKH\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 65\n      }\n    }))))) : \"\" : \"\"))))))), this.props.Login.openModal || this.props.Login.openChildModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal || this.props.Login.openChildModal,\n      closeModal: this.props.Login.loadBulkBarcodeConfig ? this.closeModal : this.closeBarcodeMasterModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      esign: this.props.Login.loadEsign,\n      onSaveClick: this.props.Login.loadBulkBarcodeConfig ? this.onSaveClick : this.onSaveBarcodeMasterClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      mandatoryFields: this.props.Login.loadBulkBarcodeConfig ? mandatoryFields : mandatoryBarcodeMasterFields,\n      selectedRecord: this.props.Login.loadBulkBarcodeConfig ? this.state.selectedRecord || {} : this.props.Login.loadEsign ? { ...this.state.selectedMasterRecord,\n        'esignpassword': this.state.selectedRecord['esignpassword'],\n        'esigncomments': this.state.selectedRecord['esigncomments'],\n        'esignreason': this.state.selectedRecord['esignreason']\n      } : this.state.selectedMasterRecord || {},\n      showSaveContinue: this.state.showSaveContinue,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 29\n        }\n      }) : this.props.Login.loadBulkBarcodeConfig ? /*#__PURE__*/React.createElement(AddBulkBarcodeConfiguration, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        formatMessage: this.props.intl.formatMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 33\n        }\n      }) : this.props.Login.loadBarcodeMaster ? /*#__PURE__*/React.createElement(AddBulkBarcodeConfigMaster, {\n        fieldName: this.props.Login.fieldName || \"\",\n        selectedMasterRecord: this.state.selectedMasterRecord || {},\n        onInputOnChange: this.onInputOnChangeMaster,\n        onComboChange: this.onComboChangeMaster,\n        formatMessage: this.props.intl.formatMessage,\n        ParentBarcodeMasterList: this.props.Login.ParentBarcodeMasterList,\n        bulkBarcodeMasterList: this.props.Login.bulkBarcodeMasterList,\n        operation: this.props.Login.operation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 37\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      selectedRecord,\n      projectType,\n      selectedProjectType,\n      dataStateAll,\n      skip,\n      take,\n      selectedMasterRecord\n    } = this.state;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      updateState = true;\n      selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.selectedMasterRecord !== previousProps.Login.selectedMasterRecord) {\n      updateState = true;\n      selectedMasterRecord = this.props.Login.selectedMasterRecord;\n    }\n\n    if (this.props.Login.masterData.ProjectType !== previousProps.Login.masterData.ProjectType) {\n      updateState = true;\n      const projectTypeMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", \"nsorter\", \"ascending\", false);\n      const projectTypeList = projectTypeMap.get(\"OptionList\");\n      projectType = projectTypeList;\n      selectedRecord = {\n        nprojecttypecode: this.props.Login.masterData.SelectedProjectType !== null || this.props.Login.masterData.SelectedProjectType !== undefined ? {\n          \"value\": this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\n          \"label\": this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType.sprojecttypename\n        } : this.state.selectedRecord[\"nprojecttypecode\"]\n      };\n    }\n\n    if (this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\n      updateState = true;\n      selectedRecord = {\n        nprojecttypecode: this.props.Login.masterData.SelectedProjectType !== null || this.props.Login.masterData.SelectedProjectType !== undefined ? {\n          \"value\": this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\n          \"label\": this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType.sprojecttypename\n        } : this.state.selectedRecord[\"nprojecttypecode\"]\n      };\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      updateState = true;\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        data: this.props.Login.masterData.ControlRights\n      });\n    }\n\n    if (this.props.Login.masterData.BulkBarcodeConfig) {\n      let masterList = this.props.Login.masterData.BulkBarcodeConfig && this.props.Login.masterData.BulkBarcodeConfig.slice(skip, skip + take);\n\n      if (!masterList.length > 0) {\n        skip = 0;\n        take = this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5;\n      }\n    }\n\n    if (this.props.Login.masterData.BarcodeDetails !== previousProps.Login.masterData.BarcodeDetails) {\n      updateState = true;\n      let {\n        dataState\n      } = this.state; //ALPD-4687-Changed by Neeraj\n\n      if (this.props.Login.dataState !== dataState) {\n        dataState = {\n          skip: 0,\n          take: this.state.dataState.take\n        };\n      }\n\n      if (this.state.dataResult.data) {\n        if (this.state.dataResult.data.length === 1) {\n          let skipcount = this.state.dataState.skip > 0 ? this.state.dataState.skip - this.state.dataState.take : this.state.dataState.skip;\n          dataState = {\n            skip: skipcount,\n            take: this.state.dataState.take\n          };\n        }\n      }\n\n      this.setState({\n        data: this.props.Login.masterData.BarcodeDetails,\n        dataResult: process(this.props.Login.masterData.BarcodeDetails ? this.props.Login.masterData.BarcodeDetails : [], dataState),\n        dataState\n      });\n    }\n\n    if (updateState) {\n      this.setState({\n        selectedRecord,\n        projectType,\n        selectedProjectType,\n        dataStateAll,\n        skip,\n        take,\n        selectedMasterRecord\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getEditData,\n  getFilterProjectType,\n  getBulkBarcodeConfigDetail,\n  addBarcodeMaster,\n  getFieldLengthService,\n  getBulkBarcodeDetailsEditData,\n  getParentBarcodeService,\n  filterTransactionList,\n  saveBarcodeMaster,\n  validateEsignCredentialSaveBarcodeMaster\n})(injectIntl(BulkBarcodeConfig));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/bulkbarcodeconfiguration/BulkBarcodeConfig.jsx"],"names":["React","connect","injectIntl","FormattedMessage","Row","Col","Button","Card","Nav","FormGroup","FormLabel","process","toast","ContentPanel","ReadOnlyText","constructOptionList","getControlMap","showEsign","sortData","callService","crudMaster","validateEsignCredential","updateStore","getEditData","getFilterProjectType","getBulkBarcodeConfigDetail","addBarcodeMaster","getFieldLengthService","getBulkBarcodeDetailsEditData","getParentBarcodeService","filterTransactionList","saveBarcodeMaster","validateEsignCredentialSaveBarcodeMaster","DEFAULT_RETURN","BreadcrumbComponent","DataGrid","SplitterLayout","ProductList","FontAwesomeIcon","faTrashAlt","faPlus","faPencilAlt","faThumbsUp","SlideOutModal","TransactionListMasterJsonView","designProperties","transactionStatus","FormSelectSearch","Esign","ListWrapper","AddBulkBarcodeConfiguration","AddBulkBarcodeConfigMaster","ConfirmMessage","BulkBarcodeConfig","Component","constructor","props","dataStateChange","event","setState","dataResult","state","data","dataState","paneSizeChange","d","splitChangeWidthPercentage","addBarcodeField","screenName","userInfo","operation","masterData","ncontrolcode","selectedBulkBarcodeConfig","ntransactionstatus","APPROVED","RETIRED","warn","intl","formatMessage","id","updateInfo","typeName","openChildModal","loadBarcodeMaster","fieldName","loadBulkBarcodeConfig","approveVersion","ncontrolCode","Login","inputData","postParam","undefined","inputListName","selectedObject","primaryKeyField","inputParam","classUrl","methodUrl","selectedRecord","saveType","esignNeeded","userRoleControlRights","nformcode","loadEsign","screenData","openModal","closeModal","nprojecttypecode","selectedId","closeBarcodeMasterModal","selectedMasterRecord","handlePageChange","e","skip","take","onReload","searchRef","current","value","SelectedProjectType","userinfo","postParamList","filterParam","onFilterSubmit","onComboChange","comboData","onInputOnChange","target","name","numericRegex","test","parseInt","settings","defaultValue","onComboChangeMaster","nbarcodemastercode","isneedparent","nparentmastercode","onInputOnChangeMaster","type","checked","YES","NO","openFilter","showFilter","closeFilter","breadcrumbList","breadCrumbArray","push","sprojecttypename","onSaveClick","formRef","sconfigname","nbarcodelength","sdescription","nbulkbarcodeconfigcode","onSaveBarcodeMasterClick","isParentSameChild","selectedProjectType","item","jsondata","nsorter","nbulkbarcodeconfigdetailscode","isvalidationrequired","squery","stablename","sconditionalfieldname","nfieldlength","sfieldname","stablefieldname","stablecolumnname","sprimarykeyfieldname","stableprimarykey","parentData","sformname","deleteRecord","deleteParam","ConfirmDelete","deleteId","confirm","deleteBulkBarcodeConfig","primaryKeyValue","fetchUrl","fecthInputObject","displayName","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","myRef","createRef","searchFieldList","gridHeight","ControlRights","ConfirmDialogScreen","controlMap","Map","error","kendoSkip","kendoTake","getDerivedStateFromProps","masterStatus","render","BarcodeDetails","versionStatusCSS","addID","has","get","editId","approveId","addMasterID","addFieldID","editMasterId","deleteMasterId","extractedColumnList","mandatoryFields","mandatoryBarcodeMasterFields","SubFields","VALUE","editParam","login","filteredListName","clearFilter","updatedListname","changeList","isSortable","sortList","breadCrumbData","parentHeight","enablePropertyPopup","searchedData","Sample","status","indexOf","projectType","Object","entries","length","sversionno","stransdisplaystatus","float","showSaveContinue","ParentBarcodeMasterList","bulkBarcodeMasterList","componentDidUpdate","previousProps","updateState","dataStateAll","ProjectType","projectTypeMap","projectTypeList","values","map","masterList","slice","skipcount","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Button, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';//Nav, Card, Button\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport { ContentPanel, ReadOnlyText } from '../../components/App.styles';\r\nimport { constructOptionList, getControlMap, showEsign, sortData } from '../../components/CommonScript';//showEsign, getControlMap,\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getEditData, getFilterProjectType,\r\n    getBulkBarcodeConfigDetail, addBarcodeMaster, getFieldLengthService, getBulkBarcodeDetailsEditData,\r\n    getParentBarcodeService, filterTransactionList, saveBarcodeMaster, validateEsignCredentialSaveBarcodeMaster\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport { ProductList } from '../product/product.styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faPlus, faPencilAlt, faThumbsUp } from '@fortawesome/free-solid-svg-icons';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { ReactComponent as RefreshIcon } from '../../assets/image/refresh.svg';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport { designProperties, transactionStatus } from '../../components/Enumeration';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ListWrapper } from '../userroletemplate/userroletemplate.styles';\r\nimport AddBulkBarcodeConfiguration from './AddBulkBarcodeConfig';\r\nimport AddBulkBarcodeConfigMaster from './AddBulkBarcodeConfigMaster';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n\r\n\r\n\r\nclass BulkBarcodeConfig extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n        this.searchFieldList = [\"sconfigname\", \"sprojecttypename\", \"sversionno\", \"stransdisplaystatus\"]\r\n\r\n        this.state = {\r\n\r\n            selectedRecord: {},\r\n            selectedMasterRecord: {},\r\n            operation: \"\",\r\n            gridHeight: 'auto',\r\n            screenName: undefined,\r\n            userRoleControlRights: [],\r\n            ControlRights: undefined,\r\n            ConfirmDialogScreen: false,\r\n            controlMap: new Map(),\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            skip: 0,\r\n            error:\"\",\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            kendoSkip: 0,\r\n            kendoTake: this.props.Login.settings ? parseInt(this.props.Login.settings[16]) : 5,\r\n            splitChangeWidthPercentage: 30,\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.ConfirmMessage = new ConfirmMessage();\r\n    }\r\n\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data ? this.state.data : [], event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n      let BarcodeDetails=sortData(this.props.Login.masterData.BarcodeDetails,'ascending','nsorter')\r\n        let versionStatusCSS = \"outline-secondary\";\r\n        if (this.props.Login.masterData.selectedBulkBarcodeConfig\r\n            && this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.APPROVED) {\r\n            versionStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedBulkBarcodeConfig\r\n            && this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.RETIRED) {\r\n            versionStatusCSS = \"outline-danger\";\r\n        }\r\n        const addID = this.state.controlMap.has(\"AddBulkBarcodeConfiguration\") && this.state.controlMap.get(\"AddBulkBarcodeConfiguration\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditBulkBarcodeConfiguration\") && this.state.controlMap.get(\"EditBulkBarcodeConfiguration\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteBulkBarcodeConfiguration\") && this.state.controlMap.get(\"DeleteBulkBarcodeConfiguration\").ncontrolcode;\r\n        const approveId = this.state.controlMap.has(\"ApproveBulkBarcodeConfiguration\") && this.state.controlMap.get(\"ApproveBulkBarcodeConfiguration\").ncontrolcode;\r\n        const addMasterID = this.state.controlMap.has(\"AddBulkBarcodeMaster\") && this.state.controlMap.get(\"AddBulkBarcodeMaster\").ncontrolcode;\r\n        const addFieldID = this.state.controlMap.has(\"AddBulkBarcodeField\") && this.state.controlMap.get(\"AddBulkBarcodeField\").ncontrolcode;\r\n        const editMasterId = this.state.controlMap.has(\"EditBulkBarcodeConfigDetails\") && this.state.controlMap.get(\"EditBulkBarcodeConfigDetails\").ncontrolcode;\r\n        const deleteMasterId = this.state.controlMap.has(\"DeleteBulkBarcodeConfigDetails\") && this.state.controlMap.get(\"DeleteBulkBarcodeConfigDetails\").ncontrolcode;\r\n\r\n        this.extractedColumnList = [\r\n            { \"idsName\": \"IDS_BARCODEFIELDNAME\", \"dataField\": \"sdisplayname\", \"width\": \"250px\", \"componentName\": \"date\" },\r\n            { \"idsName\": \"IDS_FIELDLENGTH\", \"dataField\": \"nfieldlength\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_SORTORDER\", \"dataField\": \"nsorter\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_STARTINDEX\", \"dataField\": \"nfieldstartposition\", \"width\": \"150px\" },\r\n        ]\r\n        let mandatoryFields = [];\r\n        let mandatoryBarcodeMasterFields = [];\r\n        mandatoryFields = [\r\n            { \"idsName\": \"IDS_CONFIGURATIONNAME\", \"dataField\": \"sconfigname\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_BARCODELENGTH\", \"dataField\": \"nbarcodelength\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        ]\r\n\r\n        if (this.props.Login.fieldName == \"barcodemaster\") {\r\n            mandatoryBarcodeMasterFields.push({ \"idsName\": \"IDS_BARCODEMASTERNAME\", \"dataField\": \"nbarcodemastercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n        }\r\n        mandatoryBarcodeMasterFields.push(\r\n            { \"idsName\": \"IDS_FIELDNAME\", \"dataField\": \"sfieldname\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_FIELDLENGTH\", \"dataField\": \"nfieldlength\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_SORTORDER\", \"dataField\": \"nsorter\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        )\r\n        if ((this.props.Login.fieldName == \"barcodemaster\" && this.state.selectedMasterRecord && this.state.selectedMasterRecord.isneedparent === transactionStatus.YES)) {\r\n            mandatoryBarcodeMasterFields.push({ \"idsName\": \"IDS_PARENTMASTERNAME\", \"dataField\": \"nparentmastercode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" })\r\n        }\r\n\r\n        const SubFields = [\r\n            { [designProperties.VALUE]: \"sversionno\" },\r\n            { [designProperties.VALUE]: \"stransdisplaystatus\" },\r\n\r\n        ];\r\n        const editParam = {\r\n            screenName: \"BulkBarcodeConfigDetails\", primaryKeyField: \"nbulkbarcodeconfigdetailscode\", operation: \"update\",\r\n            inputParam: this.props.login && this.props.login.inputParam, masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo, ncontrolCode: editMasterId\r\n        };\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"BulkBarcodeConfig\", selectedObject: \"selectedBulkBarcodeConfig\", primaryKeyField: \"nbulkbarcodeconfigcode\",\r\n            fetchUrl: \"bulkbarcodeconfiguration/getBulkBarcodeConfig\", masterData: this.props.Login.masterData||{},\r\n\r\n            fecthInputObject: {\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojecttypecode: this.props.Login.masterData.SelectedProjectType &&\r\n                    this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n                nbulkbarcodeconfigcode: this.props.Login.masterData.selectedBulkBarcodeConfig &&\r\n                    this.props.Login.masterData.selectedBulkBarcodeConfig.nbulkbarcodeconfigcode\r\n\r\n            },\r\n            filteredListName: \"searchedBulkBarcodeConfig\",\r\n            clearFilter: \"no\",\r\n            updatedListname: \"selectedBulkBarcodeConfig\",\r\n            searchRef: this.searchRef,\r\n            searchFieldList: this.searchFieldList,\r\n            changeList:[],isSortable:true,sortList:'BulkBarcodeConfig'\r\n        };\r\n\r\n        this.breadCrumbData = this.breadcrumbList();\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n                    <Row noGutters={\"true\"}>\r\n                        <Col md={12} className='parent-port-height sticky_head_parent' ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={this.state.splitChangeWidthPercentage} onSecondaryPaneSizeChange={this.paneSizeChange} primaryMinSize={40} secondaryMinSize={20}>\r\n                                    <TransactionListMasterJsonView\r\n                                        splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                        needMultiSelect={false}\r\n                                        masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.BulkBarcodeConfig || []}\r\n                                        selectedMaster={[this.props.Login.masterData.selectedBulkBarcodeConfig] || []}\r\n                                        primaryKeyField=\"nbulkbarcodeconfigcode\"\r\n                                        getMasterDetail={(Sample, status) =>\r\n                                            this.props.getBulkBarcodeConfigDetail(\r\n\r\n                                                {\r\n                                                    masterData: this.props.Login.masterData,\r\n                                                    nprojecttypecode:this.props.Login.masterData && this.props.Login.masterData.SelectedProjectType[\"nprojecttypecode\"] ?\r\n                                                    this.props.Login.masterData.SelectedProjectType[\"nprojecttypecode\"] : -1,\r\n                                                    userinfo: this.props.Login.userInfo,\r\n                                                    ...Sample\r\n                                                }, status\r\n                                            )}\r\n                                        subFieldsLabel={false}\r\n                                        additionalParam={['']}\r\n                                        mainField={'sconfigname'}\r\n                                        filterColumnData={this.props.filterTransactionList}\r\n                                        showFilter={this.props.Login.showFilter}\r\n                                        openFilter={this.openFilter}\r\n                                        closeFilter={this.closeFilter}\r\n                                        onFilterSubmit={this.onFilterSubmit}\r\n                                        subFields={SubFields}\r\n                                        statusFieldName=\"stransdisplaystatus\"\r\n                                        statusField=\"ntransactionstatus\"\r\n                                        statusColor=\"stranscolor\"\r\n                                        showStatusIcon={false}\r\n                                        showStatusName={true}\r\n                                        needFilter={true}\r\n                                        searchRef={this.searchRef}\r\n                                        filterParam={filterParam}\r\n                                        skip={this.state.skip}\r\n                                        take={this.state.take}\r\n                                        handlePageChange={this.handlePageChange}\r\n                                        showStatusBlink={true}\r\n                                        callCloseFunction={true}\r\n                                        childTabsKey={[]}\r\n                                        splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                        commonActions={\r\n                                            <>\r\n                                                <ProductList className=\"d-flex product-category float-right\">\r\n                                                    <Nav.Link\r\n                                                        className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                        hidden={this.state.userRoleControlRights.indexOf(addID) === -1}\r\n                                                        onClick={() => this.openModal(addID, 'create', 'IDS_BULKBARCODECONDIG')} >\r\n                                                        <FontAwesomeIcon icon={faPlus} />\r\n                                                    </Nav.Link>\r\n\r\n\r\n                                                    <Button className=\"btn btn-circle outline-grey ml-2 p-0\" variant=\"link\"\r\n                                                        onClick={() => this.onReload()}\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                        <RefreshIcon className='custom_icons' />\r\n                                                    </Button>\r\n                                                </ProductList>\r\n                                            </>\r\n                                        }\r\n                                        filterComponent={[\r\n                                            {\r\n                                                \"Bulk Barcode Configuration\":\r\n                                                    <Row>\r\n                                                        <Col md={12}>\r\n                                                            <FormSelectSearch\r\n                                                                name={\"nprojecttypecode\"}\r\n                                                                as={\"select\"}\r\n                                                                onChange={(event) => this.onComboChange(event, 'nprojecttypecode')}\r\n                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                                value={this.state.selectedRecord && this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"] || [] : []}\r\n                                                                options={this.state.projectType && this.state.projectType || []}\r\n                                                                optionId={\"value\"}\r\n                                                                optionValue={\"label\"}\r\n                                                                isMulti={false}\r\n                                                                isDisabled={false}\r\n                                                                isSearchable={false}\r\n                                                                isClearable={false}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                            }\r\n                                        ]}\r\n\r\n                                    />\r\n\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            {this.props.Login.masterData.selectedBulkBarcodeConfig ? Object.entries(this.props.Login.masterData.selectedBulkBarcodeConfig).length > 0 ?\r\n                                                <>\r\n                                                    <Card.Header>\r\n                                                        <Card.Title>\r\n                                                            <h1 className=\"product-title-main\">{this.props.Login.masterData.selectedBulkBarcodeConfig.sconfigname}</h1>\r\n                                                        </Card.Title>\r\n                                                        <Card.Subtitle className=\"readonly-text font-weight-normal\">\r\n                                                            <Row>\r\n                                                                <Col md={8} >\r\n                                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                        {`${this.props.intl.formatMessage({ id: \"IDS_VERSIONNO\" })}:${this.props.Login.masterData.selectedBulkBarcodeConfig.sversionno}`}\r\n                                                                        <span className={`btn btn-outlined ${versionStatusCSS} btn-sm ml-3`}>\r\n                                                                            {this.props.Login.masterData.selectedBulkBarcodeConfig.stransdisplaystatus}\r\n                                                                        </span>\r\n                                                                    </h2>\r\n                                                                </Col>\r\n                                                                <Col md={4}>\r\n                                                                    <>\r\n                                                                        <div className=\"d-flex product-category\" style={{ float: \"right\" }}>\r\n                                                                            <div className=\"d-inline \">\r\n                                                                                <Nav.Link\r\n                                                                                    hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                                    className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                                    onClick={() => this.props.getEditData(this.props.Login.masterData.selectedBulkBarcodeConfig.nbulkbarcodeconfigcode, this.props.Login.userInfo, this.props.Login.masterData, editId, 'IDS_BULKBARCODECONDIG')}>\r\n                                                                                    <FontAwesomeIcon icon={faPencilAlt} title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                                                </Nav.Link>\r\n                                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                    hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                                    onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                                                                </Nav.Link>\r\n                                                                                <Nav.Link\r\n                                                                                    hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                                    className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                                                    onClick={() => this.approveVersion(approveId)}>\r\n                                                                                    <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                                                </Nav.Link>\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Card.Subtitle>\r\n                                                    </Card.Header>\r\n                                                    <Card.Body>\r\n                                                        <Card.Text>\r\n\r\n                                                            <Row>\r\n\r\n                                                                <>\r\n                                                                    <Col md=\"6\">\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id={\"IDS_BARCODELENGTH\"} /></FormLabel>\r\n                                                                            <ReadOnlyText>{\r\n                                                                                this.props.Login.masterData.selectedBulkBarcodeConfig.nbarcodelength === \"\" ? '-'\r\n                                                                                    : this.props.Login.masterData.selectedBulkBarcodeConfig.nbarcodelength}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n                                                                    <Col md=\"6\">\r\n                                                                        <FormGroup>\r\n                                                                            <FormLabel><FormattedMessage id={\"IDS_DESCRIPTION\"} /></FormLabel>\r\n                                                                            <ReadOnlyText>{\r\n                                                                                this.props.Login.masterData.selectedBulkBarcodeConfig.sdescription === \"\" ? '-'\r\n                                                                                    : this.props.Login.masterData.selectedBulkBarcodeConfig.sdescription}</ReadOnlyText>\r\n                                                                        </FormGroup>\r\n                                                                    </Col>\r\n                                                                </>\r\n\r\n                                                            </Row>\r\n                                                        </Card.Text>\r\n\r\n                                                        <Row noGutters={true}>\r\n                                                            <Col md={8}></Col>\r\n                                                            <Col md={4}>\r\n                                                                <div className=\"actions-stripe\">\r\n                                                                    <div className=\"d-flex justify-content-end\">\r\n                                                                        <Nav.Link className=\"add-txt-btn text-right\"\r\n                                                                            onClick={() => this.props.addBarcodeMaster(this.props.intl.formatMessage({ id: \"IDS_BARCODEMASTERNAME\" }), this.props.Login.userInfo,\r\n                                                                                'create', this.props.Login.masterData,'barcodemaster',addMasterID)}\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(addMasterID) === -1} >\r\n                                                                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                                            <FormattedMessage id='IDS_ADDBARCODEMASTER' defaultMessage='Barcode Master' />\r\n                                                                        </Nav.Link>\r\n\r\n                                                                        <Nav.Link className=\"add-txt-btn text-right\"\r\n                                                                            onClick={() => this.addBarcodeField(this.props.intl.formatMessage({ id: \"IDS_BARCODEFORMATTINGFIELD\" }), this.props.Login.userInfo, 'create',\r\n                                                                                this.props.Login.masterData,'barcodefield',addFieldID)}\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(addFieldID) === -1} >\r\n                                                                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                                            <FormattedMessage id='IDS_ADDBARCODEFIELD' defaultMessage='Barcode Field' />\r\n                                                                        </Nav.Link>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                            <Col md={12}>\r\n                                                                <DataGrid\r\n                                                                    primaryKeyField={\"nbulkbarcodeconfigdetailscode\"}\r\n                                                                    dataResult={BarcodeDetails &&\r\n                                                                        BarcodeDetails.length > 0 &&\r\n                                                                        process(BarcodeDetails ? BarcodeDetails : [], this.state.dataState) || []}\r\n                                                                    data={this.state.data || []}\r\n                                                                    dataState={this.state.dataState || []}\r\n                                                                    dataStateChange={this.dataStateChange}\r\n                                                                    extractedColumnList={this.extractedColumnList}\r\n                                                                    controlMap={this.state.controlMap}\r\n                                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                    inputParam={this.props.Login.inputParam}\r\n                                                                    userInfo={this.props.Login.userInfo}\r\n                                                                    methodUrl=\"BulkBarcodeConfigDetails\"\r\n                                                                    fetchRecord={this.props.getBulkBarcodeDetailsEditData}\r\n                                                                    editParam={editParam}\r\n                                                                    deleteRecord={this.deleteRecord}\r\n                                                                    deleteParam={{ operation: \"delete\", screenName: \"IDS_BARCODEMASTERNAME\", ncontrolCode: deleteMasterId }}\r\n                                                                    pageable={true}\r\n                                                                    scrollable={\"scrollable\"}\r\n                                                                    isToolBarRequired={false}\r\n                                                                    selectedId={this.props.Login.selectedId}\r\n                                                                    hideColumnFilter={false}\r\n                                                                    groupable={false}\r\n                                                                    isActionRequired={true}\r\n                                                                    gridHeight={'350px'}\t//ALPD-5082 Changed datagrid height by VISHAKH\r\n                                                                />\r\n                                                            </Col>\r\n                                                        </Row>\r\n\r\n\r\n                                                    </Card.Body>\r\n                                                </>\r\n                                                : \"\" : \"\"}\r\n                                        </Card>\r\n                                    </ContentPanel>\r\n\r\n                                </SplitterLayout>\r\n\r\n                            </ListWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n\r\n                {(this.props.Login.openModal || this.props.Login.openChildModal) ?\r\n                    <SlideOutModal\r\n                        show={(this.props.Login.openModal || this.props.Login.openChildModal)}\r\n                        closeModal={this.props.Login.loadBulkBarcodeConfig ? this.closeModal : this.closeBarcodeMasterModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        onSaveClick={this.props.Login.loadBulkBarcodeConfig ? this.onSaveClick : this.onSaveBarcodeMasterClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        mandatoryFields={this.props.Login.loadBulkBarcodeConfig ? mandatoryFields : mandatoryBarcodeMasterFields}\r\n                        selectedRecord={this.props.Login.loadBulkBarcodeConfig ? this.state.selectedRecord || {} :\r\n                            this.props.Login.loadEsign ? {\r\n                                ...this.state.selectedMasterRecord,\r\n                                'esignpassword': this.state.selectedRecord['esignpassword'],\r\n                                'esigncomments': this.state.selectedRecord['esigncomments'],\r\n                                'esignreason': this.state.selectedRecord['esignreason']\r\n                            } : this.state.selectedMasterRecord || {}}\r\n                        showSaveContinue={this.state.showSaveContinue}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.loadBulkBarcodeConfig ?\r\n                                <AddBulkBarcodeConfiguration\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                />\r\n                                : this.props.Login.loadBarcodeMaster ?\r\n                                    <AddBulkBarcodeConfigMaster\r\n                                        fieldName={this.props.Login.fieldName || \"\"}\r\n                                        selectedMasterRecord={this.state.selectedMasterRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChangeMaster}\r\n                                        onComboChange={this.onComboChangeMaster}\r\n                                        formatMessage={this.props.intl.formatMessage}\r\n                                        ParentBarcodeMasterList={this.props.Login.ParentBarcodeMasterList}\r\n                                        bulkBarcodeMasterList={this.props.Login.bulkBarcodeMasterList}\r\n                                        operation={this.props.Login.operation}\r\n                                    />\r\n                                    : \"\"}\r\n                    /> : \"\"}\r\n\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n    addBarcodeField = (screenName, userInfo, operation, masterData,ncontrolcode) => {\r\n        if (masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.APPROVED ||\r\n            masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORD\" }));\r\n        } else {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openChildModal: true,\r\n                    loadBarcodeMaster: true, operation: operation,ncontrolcode:ncontrolcode, fieldName: screenName, loadBulkBarcodeConfig: false, screenName\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    approveVersion = (ncontrolCode) => {\r\n        if (this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYRETIRED\" }));\r\n        }\r\n        else if (this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.APPROVED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALREADYAPPROVED\" }));\r\n        }\r\n        else {\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            //add               \r\n            let postParam = undefined;\r\n            inputData[\"bulkbarcodeconfig\"] = this.props.Login.masterData.selectedBulkBarcodeConfig;\r\n            postParam = {\r\n                inputListName: \"BulkBarcodeConfig\", selectedObject: \"selectedBulkBarcodeConfig\",\r\n                primaryKeyField: \"nbulkbarcodeconfigcode\"\r\n            };\r\n            const inputParam = {\r\n                classUrl: 'bulkbarcodeconfiguration',\r\n                methodUrl: \"BulkBarcodeConfiguration\",\r\n                inputData: inputData,\r\n                operation: \"approve\", postParam,\r\n                selectedRecord: { ...this.state.selectedRecord }\r\n            }\r\n            let saveType;\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,loadBarcodeMaster:false,loadBulkBarcodeConfig:true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: \"approve\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let loadBulkBarcodeConfig = this.props.Login.loadBulkBarcodeConfig;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal=false;\r\n                loadBulkBarcodeConfig=false;\r\n                selectedRecord = { nprojecttypecode: this.state.selectedRecord.nprojecttypecode };\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = undefined;\r\n                selectedRecord['esigncomments'] = undefined;\r\n                selectedRecord['esignreason'] = undefined;\r\n\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = { nprojecttypecode: this.state.selectedRecord.nprojecttypecode };\r\n            loadBulkBarcodeConfig = false;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null, loadBulkBarcodeConfig,openChildModal }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    closeBarcodeMasterModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let openChildModal = this.props.Login.openChildModal;\r\n        let selectedMasterRecord = this.props.Login.selectedMasterRecord;\r\n        let loadBarcodeMaster = this.props.Login.loadBarcodeMaster;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\"\r\n                || this.props.Login.operation === \"blackList\") {\r\n                loadEsign = false;\r\n                openChildModal = false;\r\n                selectedMasterRecord = {};\r\n                openModal=false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = undefined;\r\n                selectedRecord['esigncomments'] = undefined;\r\n                selectedRecord['esignreason'] = undefined;\r\n\r\n            }\r\n        }\r\n        else {\r\n            openChildModal = false;\r\n            selectedMasterRecord = {};\r\n            loadBarcodeMaster = false;\r\n            openModal=false;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openChildModal, loadEsign, selectedRecord,openModal,\r\n                selectedMasterRecord, selectedId: null, loadBarcodeMaster\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n    openModal = (ncontrolcode, operation, screenName) => {\r\n        if (this.state.selectedRecord && this.state.selectedRecord[\"nprojecttypecode\"]){\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: true,\r\n                loadBulkBarcodeConfig: true, operation: operation, screenName: screenName, ncontrolcode: ncontrolcode\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n     }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTFILTER\" }));\r\n     }\r\n    }\r\n\r\n    onReload = () => {\r\n        if (this.state.selectedRecord && this.state.selectedRecord[\"nprojecttypecode\"]){\r\n        this.searchRef.current.value = \"\";\r\n        let inputData = {\r\n            nprojecttypecode: this.props.Login.masterData && this.props.Login.masterData.SelectedProjectType[\"nprojecttypecode\"] ?\r\n            this.props.Login.masterData.SelectedProjectType[\"nprojecttypecode\"] : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            postParamList: this.filterParam,\r\n        }\r\n        let masterData = { ...this.props.Login.masterData }\r\n        let inputParam = { masterData, inputData, searchRef: this.searchRef }\r\n        this.props.getFilterProjectType(inputParam)\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTFILTER\" }));\r\n    }\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        if (this.state.selectedRecord && this.state.selectedRecord[\"nprojecttypecode\"]){\r\n            this.searchRef.current.value = \"\";\r\n        let masterData = { ...this.props.Login.masterData }\r\n\r\n        let inputData = {\r\n            nprojecttypecode: this.state.selectedRecord[\"nprojecttypecode\"] ? this.state.selectedRecord[\"nprojecttypecode\"].value : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            //postParamList: this.filterParam,\r\n        }\r\n        let inputParam = {\r\n            masterData, inputData, searchRef: this.searchRef\r\n        }\r\n        this.props.getFilterProjectType(inputParam)\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTFILTER\" }));\r\n    }\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.name === 'nbarcodelength') {\r\n            const numericRegex = /^[0-9]+$/;\r\n            if (numericRegex.test(event.target.value)) {\r\n                if (parseInt(event.target.value) !== 0) {\r\n                    selectedRecord[event.target.name] = (parseInt(event.target.value) > 0 &&\r\n                        parseInt(event.target.value) <= parseInt(this.props.Login.settings && this.props.Login.settings['37']))\r\n                        ? event.target.value : event.target.defaultValue;\r\n                } else {\r\n                    selectedRecord[event.target.name] = \"\";\r\n                }\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value === \"\" ? \"\" : event.target.defaultValue;\r\n            }\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChangeMaster = (comboData, fieldName) => {\r\n        const selectedMasterRecord = this.state.selectedMasterRecord || {};\r\n        if(fieldName===\"nbarcodemastercode\"){\r\n        if(selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.value!==comboData.value){\r\n            delete(selectedMasterRecord.isneedparent);\r\n            delete(selectedMasterRecord.nparentmastercode)\r\n        }\r\n    }\r\n        selectedMasterRecord[fieldName] = comboData;\r\n        this.setState({ selectedMasterRecord });\r\n    }\r\n\r\n    onInputOnChangeMaster = (event, fieldName) => {\r\n        const selectedMasterRecord = this.state.selectedMasterRecord || {};\r\n        const numericRegex = /^[0-9]+$/;\r\n        if (event.target.type === 'checkbox') {\r\n\t\t\t//ALPD-5082 Added validation for isvalidationrequired by VISHAKH\r\n            if(fieldName ===\"isvalidationrequired\"){\r\n                selectedMasterRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                this.setState({ selectedMasterRecord });\r\n            } else {\r\n                if (selectedMasterRecord.nbarcodemastercode) {\r\n                    selectedMasterRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                    if (event.target.checked === true) {\r\n                        this.props.getParentBarcodeService({\r\n                            inputData: {\r\n                                userinfo: this.props.Login.userInfo,\r\n                                nprojecttypecode: this.state.selectedRecord.nprojecttypecode.value,\r\n                                masterData: this.props.Login.masterData,\r\n                                selectedMasterRecord: selectedMasterRecord\r\n                            }\r\n                        });\r\n                    }\r\n                    if (event.target.checked === false) {\r\n                        delete (selectedMasterRecord.nparentmastercode);\r\n                    }\r\n    \r\n                    this.setState({ selectedMasterRecord });\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTBARCODEMASTER\" }));\r\n                }\r\n            }     \r\n        }\r\n        else if (event.target.name === 'nsorter') {\r\n\r\n            if (numericRegex.test(event.target.value)) {\r\n                if (parseInt(event.target.value) !== 0) {\r\n                    selectedMasterRecord[event.target.name] = (parseInt(event.target.value) > 0 &&\r\n                        parseInt(event.target.value) <= parseInt(this.props.Login.settings && this.props.Login.settings['37']))\r\n                        ? event.target.value : event.target.defaultValue;\r\n                } else {\r\n                    selectedMasterRecord[event.target.name] = \"\";\r\n                }\r\n            } else {\r\n                selectedMasterRecord[event.target.name] = event.target.value === \"\" ? \"\" : event.target.defaultValue;\r\n            }\r\n            this.setState({ selectedMasterRecord });\r\n        } else if (event.target.name === 'nfieldlength') {\r\n            if (numericRegex.test(event.target.value)) {\r\n                selectedMasterRecord[event.target.name] = event.target.value;\r\n            } else {\r\n                selectedMasterRecord[event.target.name] = event.target.value === \"\" ? \"\" : event.target.defaultValue;\r\n            } this.setState({ selectedMasterRecord });\r\n        } else {\r\n            selectedMasterRecord[event.target.name] = event.target.value\r\n            this.setState({ selectedMasterRecord });\r\n        }\r\n\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    breadcrumbList = () => {\r\n        let breadCrumbArray = [];\r\n\r\n            breadCrumbArray.push(\r\n                {\r\n                    \"label\": \"IDS_PROJECTTYPE\",\r\n                    \"value\": this.props.Login.masterData.SelectedProjectType &&\r\n                        this.props.Login.masterData.SelectedProjectType.sprojecttypename||'NA'\r\n                });\r\n        return breadCrumbArray;\r\n    };\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        let updateState = false;\r\n        let { selectedRecord, projectType, selectedProjectType, dataStateAll, skip, take, selectedMasterRecord } = this.state\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            updateState = true;\r\n            selectedRecord = this.props.Login.selectedRecord;\r\n        }\r\n        if (this.props.Login.selectedMasterRecord !== previousProps.Login.selectedMasterRecord) {\r\n            updateState = true;\r\n            selectedMasterRecord = this.props.Login.selectedMasterRecord;\r\n        }\r\n        if (this.props.Login.masterData.ProjectType !== previousProps.Login.masterData.ProjectType) {\r\n            updateState = true;\r\n            const projectTypeMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\",\r\n                \"sprojecttypename\", \"nsorter\", \"ascending\", false);\r\n            const projectTypeList = projectTypeMap.get(\"OptionList\");\r\n            projectType = projectTypeList;\r\n            selectedRecord = {\r\n                nprojecttypecode: this.props.Login.masterData.SelectedProjectType !== null ||\r\n                    this.props.Login.masterData.SelectedProjectType !== undefined ? {\r\n                    \"value\": this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n                    \"label\": this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType.sprojecttypename\r\n                } : this.state.selectedRecord[\"nprojecttypecode\"]\r\n            }\r\n        }\r\n        if (this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\r\n            updateState = true;\r\n            selectedRecord = {\r\n                nprojecttypecode: this.props.Login.masterData.SelectedProjectType !== null ||\r\n                    this.props.Login.masterData.SelectedProjectType !== undefined ? {\r\n                    \"value\": this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n                    \"label\": this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType.sprojecttypename\r\n                } : this.state.selectedRecord[\"nprojecttypecode\"]\r\n            }\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            updateState = true;\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({\r\n                userRoleControlRights, controlMap, data: this.props.Login.masterData.ControlRights\r\n            });\r\n        }\r\n        if(this.props.Login.masterData.BulkBarcodeConfig){\r\n            let masterList = this.props.Login.masterData.BulkBarcodeConfig &&\r\n             this.props.Login.masterData.BulkBarcodeConfig.slice(skip, skip +take);\r\n            if(!masterList.length>0){\r\n                skip=0;\r\n                take=this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5;\r\n            }\r\n\r\n        }\r\n        if (this.props.Login.masterData.BarcodeDetails !== previousProps.Login.masterData.BarcodeDetails) {\r\n            updateState = true;\r\n            let { dataState } = this.state;\r\n\t\t\t//ALPD-4687-Changed by Neeraj\r\n            if (this.props.Login.dataState !==dataState) {\r\n                dataState = { skip: 0, take: this.state.dataState.take } \r\n            }\r\n          if (this.state.dataResult.data) {\r\n                if (this.state.dataResult.data.length === 1) {\r\n                    let skipcount = this.state.dataState.skip > 0 ? (this.state.dataState.skip - this.state.dataState.take) :\r\n                        this.state.dataState.skip\r\n                    dataState = { skip: skipcount, take: this.state.dataState.take }\r\n                }\r\n            }\r\n          \r\n            this.setState({\r\n                data: this.props.Login.masterData.BarcodeDetails,\r\n                dataResult: process(this.props.Login.masterData.BarcodeDetails ? this.props.Login.masterData.BarcodeDetails : [], dataState),\r\n                dataState\r\n            });\r\n        }\r\n\r\n        if (updateState) {\r\n            this.setState({\r\n                selectedRecord, projectType, selectedProjectType, dataStateAll, skip, take, selectedMasterRecord\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let selectedRecord = this.state.selectedRecord;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = {\r\n                inputListName: \"BulkBarcodeConfig\",\r\n                selectedObject: \"selectedBulkBarcodeConfig\",\r\n                primaryKeyField: \"nbulkbarcodeconfigcode\"\r\n            };\r\n            inputData[\"bulkbarcodeconfig\"] = {\r\n                \"sconfigname\": selectedRecord.sconfigname,\r\n                \"nbarcodelength\": parseInt(selectedRecord.nbarcodelength),\r\n                \"sdescription\": selectedRecord.sdescription,\r\n                \"nprojecttypecode\": selectedRecord.nprojecttypecode.value,\r\n                \"nbulkbarcodeconfigcode\": selectedRecord.nbulkbarcodeconfigcode\r\n            };\r\n\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"bulkbarcodeconfig\"] = {\r\n                \"sconfigname\": selectedRecord.sconfigname,\r\n                \"nbarcodelength\": parseInt(selectedRecord.nbarcodelength),\r\n                \"sdescription\": selectedRecord.sdescription || \"\",\r\n                \"nprojecttypecode\": selectedRecord.nprojecttypecode.value\r\n            };\r\n\r\n        }\r\n\r\n        const inputParam = {\r\n            classUrl: \"bulkbarcodeconfiguration\", //this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"BulkBarcodeConfiguration\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef,\r\n            selectedRecord: { ...this.state.selectedRecord }\r\n\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (\r\n            showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    onSaveBarcodeMasterClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let selectedId = null;\r\n        let isParentSameChild = true;\r\n        let selectedMasterRecord = this.state.selectedMasterRecord;\r\n        let selectedProjectType = this.props.Login.masterData && this.props.Login.masterData.SelectedProjectType;\r\n        let selectedBulkBarcodeConfig = this.props.Login.masterData && this.props.Login.masterData.selectedBulkBarcodeConfig;\r\n        if ((selectedMasterRecord.nparentmastercode !== undefined) && (selectedMasterRecord.nbarcodemastercode !== undefined)) {\r\n            if (selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.value ===\r\n                (selectedMasterRecord.nparentmastercode && selectedMasterRecord.nparentmastercode.item &&\r\n                    selectedMasterRecord.nparentmastercode.item.jsondata && selectedMasterRecord.nparentmastercode.item.jsondata.nbarcodemastercode)\r\n            ) {\r\n                isParentSameChild = false;\r\n            } else {\r\n                isParentSameChild = true;\r\n            }\r\n        }\r\n        if (isParentSameChild) {\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            let postParam = undefined;\r\n            if (this.props.Login.operation === \"update\") {\r\n                // edit\r\n                postParam = {\r\n                    inputListName: \"BulkBarcodeConfig\",\r\n                    selectedObject: \"selectedBulkBarcodeConfig\",\r\n                    primaryKeyField: \"nbulkbarcodeconfigcode\"\r\n                };\r\n                inputData[\"bulkbarcodeconfigdetails\"] = {\r\n                    \"nbulkbarcodeconfigcode\": selectedBulkBarcodeConfig.nbulkbarcodeconfigcode,\r\n                    \"nsorter\": selectedMasterRecord && selectedMasterRecord.nsorter,\r\n                    \"sdescription\": selectedMasterRecord && selectedMasterRecord.sdescription || \"\",\r\n                    \"nbulkbarcodeconfigdetailscode\": selectedMasterRecord.nbulkbarcodeconfigdetailscode,\r\n                    \"nprojecttypecode\": selectedBulkBarcodeConfig.nprojecttypecode,\r\n                    \"isvalidationrequired\": selectedMasterRecord && selectedMasterRecord.isvalidationrequired\t//ALPD-5082 Added isvalidationrequired for update by VISHAKH\r\n                };\r\n                selectedId = this.props.Login.selectedId;\r\n\r\n            }\r\n            else {\r\n                //add               \r\n                inputData[\"bulkbarcodeconfigdetails\"] = {\r\n                    \"nbulkbarcodeconfigcode\": selectedBulkBarcodeConfig.nbulkbarcodeconfigcode,\r\n                    \"nprojecttypecode\": selectedProjectType.nprojecttypecode,\r\n                    \"nneedmaster\": this.props.Login.fieldName === 'barcodemaster' ? transactionStatus.YES : transactionStatus.NO,\r\n                    \"nqueryneed\": (selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item.squery === null ||\r\n                        selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.squery === undefined) ? transactionStatus.NO : transactionStatus.YES,\r\n                    \"nquerybuildertablecode\": -1,\r\n                    \"stablename\": selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.stablename || \"\",\r\n                    \"stablecolumnname\": selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.sconditionalfieldname || \"\",\r\n                    \"nfieldstartposition\": 0,\r\n                    \"nfieldlength\": selectedMasterRecord && selectedMasterRecord.nfieldlength,\r\n                    \"nsorter\": selectedMasterRecord && selectedMasterRecord.nsorter,\r\n                    \"jsondata\": {\r\n                        sfieldname: selectedMasterRecord && selectedMasterRecord.sfieldname,\r\n                        stablefieldname: selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.stablecolumnname,\r\n                        isneedparent: selectedMasterRecord.isneedparent || 4,\r\n                        sprimarykeyfieldname: selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.stableprimarykey,\r\n                        parentData: {\r\n                            ...selectedMasterRecord.nparentmastercode && selectedMasterRecord.nparentmastercode.item,\r\n                        },\r\n                        nbarcodemastercode: selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.value,\r\n                        nformcode: selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.nformcode,\r\n                        sformname: selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.sformname,\r\n                        isvalidationrequired: selectedMasterRecord && selectedMasterRecord.isvalidationrequired ? selectedMasterRecord.isvalidationrequired : transactionStatus.NO\t//ALPD-5082 Added isvalidationrequired for create by VISHAKH\r\n                    },\r\n                    \"squery\": selectedMasterRecord && selectedMasterRecord.nbarcodemastercode && selectedMasterRecord.nbarcodemastercode.item && selectedMasterRecord.nbarcodemastercode.item.squery || null,\r\n                    \"sdescription\": selectedMasterRecord && selectedMasterRecord.sdescription || \"\",\r\n                    \"sfieldname\": selectedMasterRecord && selectedMasterRecord.sfieldname,\r\n                };\r\n\r\n            }\r\n\r\n            const inputParam = {\r\n                classUrl: \"bulkbarcodeconfiguration\", //this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"BulkBarcodeMaster\",\r\n                inputData: inputData, selectedId,\r\n                operation: this.props.Login.operation,\r\n                saveType, formRef, postParam, searchRef: this.searchRef,\r\n                selectedMasterRecord: this.state.selectedMasterRecord\r\n\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (\r\n                showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.saveBarcodeMaster(inputParam, masterData, \"openChildModal\");\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MASTERANDPARENTCANNOTBESAME\" }));\r\n        }\r\n    }\r\n\r\n    deleteRecord = (deleteParam) => {\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        if (this.props.Login.masterData.selectedBulkBarcodeConfig &&\r\n            this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus == transactionStatus.APPROVED\r\n            || this.props.Login.masterData.selectedBulkBarcodeConfig &&\r\n            this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus == transactionStatus.RETIRED) {\r\n\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORD\" }));\r\n        } else {\r\n            inputData[\"bulkbarcodeconfigdetails\"] = {\r\n                ...deleteParam.selectedRecord, sfieldname: deleteParam.selectedRecord &&\r\n                    deleteParam.selectedRecord.jsondata && deleteParam.selectedRecord.jsondata.sfieldname\r\n            };\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            inputParam = {\r\n                classUrl: \"bulkbarcodeconfiguration\",\r\n                methodUrl: \"BulkBarcodeMaster\",\r\n                inputData: inputData,\r\n                operation: \"delete\",\r\n                dataState: this.state.dataState\r\n            }\r\n\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true, loadBarcodeMaster: true, screenName: \"BulkBarcodeConfigDetails\", operation: \"delete\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.ConfirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteBulkBarcodeConfig(deleteId));\r\n    }\r\n\r\n    deleteBulkBarcodeConfig = (deleteId) => {\r\n\r\n        if (this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.APPROVED ||\r\n            this.props.Login.masterData.selectedBulkBarcodeConfig.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORD\" }))\r\n        }\r\n        else {\r\n            const postParam = {\r\n                inputListName: \"BulkBarcodeConfig\", selectedObject: \"selectedBulkBarcodeConfig\",\r\n                primaryKeyField: \"nbulkbarcodeconfigcode\",\r\n                primaryKeyValue: this.props.Login.masterData.selectedBulkBarcodeConfig.nbulkbarcodeconfigcode,\r\n                fetchUrl: \"bulkbarcodeconfiguration/getBulkBarcodeConfiguration\",\r\n                fecthInputObject: {\r\n                    userinfo: this.props.Login.userInfo\r\n                },\r\n            }\r\n            const inputData = {\r\n                'bulkbarcodeconfig': this.props.Login.masterData.selectedBulkBarcodeConfig\r\n            }\r\n            inputData['userinfo'] = this.props.Login.userInfo\r\n            const inputParam = {\r\n                methodUrl: 'BulkBarcodeConfiguration',\r\n                classUrl: \"bulkbarcodeconfiguration\",\r\n                displayName: \"IDS_BULKBARCODECONFIG\",\r\n                inputData: inputData, postParam,\r\n                operation: \"delete\",\r\n                selectedRecord: { ...this.state.selectedRecord }\r\n\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },loadBarcodeMaster:false, operation: \"delete\",\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: \"IDS_BULKBARCODECONFIG\" })\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.loadBarcodeMaster && this.props.Login.operation === 'update') {\r\n            this.props.validateEsignCredentialSaveBarcodeMaster(inputParam, \"openChildModal\");\r\n        } else {\r\n            this.props.validateEsignCredential(inputParam, this.props.Login.loadBarcodeMaster ? \"openChildModal\" : \"openModal\");\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        callService, crudMaster, validateEsignCredential, updateStore, getEditData,\r\n        getFilterProjectType, getBulkBarcodeConfigDetail, addBarcodeMaster, getFieldLengthService,\r\n        getBulkBarcodeDetailsEditData, getParentBarcodeService, filterTransactionList, saveBarcodeMaster, validateEsignCredentialSaveBarcodeMaster\r\n    })(injectIntl(BulkBarcodeConfig));"]},"metadata":{},"sourceType":"module"}