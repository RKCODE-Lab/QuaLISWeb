{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\components\\\\form-select-search\\\\Form-select-search-componnet.jsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { Form } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\n\nclass FormSelectSearchComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      onKeyUp: this.props.onKeyUp,\n      className: `form-select w-100 floating-label react-select-wrap ${this.props.formGroupClassName ? this.props.formGroupClassName : \"\"}`,\n      controlId: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Select //   menuIsOpen\n    , {\n      ref: this.props.select,\n      inputId: this.props.name,\n      id: this.props.name,\n      name: this.props.name,\n      placeholder: this.props.placeholder,\n      options: this.props.options,\n      value: this.props.value,\n      isInvalid: this.props.isInvalid,\n      required: this.props.required,\n      defaultValue: this.props.defaultValue,\n      isMulti: this.props.isMulti,\n      isSearchable: this.props.isSearchable,\n      isDisabled: this.props.isDisabled,\n      isClearable: this.props.isClearable,\n      onChange: this.props.onChange,\n      onBlur: this.props.onBlur,\n      closeMenuOnSelect: this.props.closeMenuOnSelect,\n      className: this.props.className,\n      classNamePrefix: \"react-select\",\n      minMenuHeight: this.props.minMenuHeight,\n      maxMenuHeight: this.props.axMenuHeight,\n      openMenuOnFocus: true,\n      menuPlacement: \"auto\",\n      autoComplete: \"off\",\n      menuPosition: this.props.menuPosition //  openMenuOnFocus={true}\n      ,\n      noOptionsMessage: () => this.props.intl.formatMessage({\n        id: \"IDS_NOOPTIONS\"\n      }) // menuPortalTarget={document.querySelector('body')}\n      // menuPosition=\"absolute\"\n      // styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, this.props.formLabel, this.props.isMandatory && /*#__PURE__*/React.createElement(\"sup\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 104\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, this.props.errors)));\n  }\n\n}\n\n;\nexport default injectIntl(FormSelectSearchComponent);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/components/form-select-search/Form-select-search-componnet.jsx"],"names":["React","Select","Form","injectIntl","FormSelectSearchComponent","Component","constructor","props","render","onKeyUp","formGroupClassName","name","select","placeholder","options","value","isInvalid","required","defaultValue","isMulti","isSearchable","isDisabled","isClearable","onChange","onBlur","closeMenuOnSelect","className","minMenuHeight","axMenuHeight","menuPosition","intl","formatMessage","id","formLabel","isMandatory","errors"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport { Form } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\n\r\n\r\nclass FormSelectSearchComponent extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\nrender(){\r\n    return (\r\n\r\n        < React.Fragment  >\r\n            <Form.Group onKeyUp={this.props.onKeyUp} className={`form-select w-100 floating-label react-select-wrap ${this.props.formGroupClassName ? this.props.formGroupClassName : \"\"}`} controlId={this.props.name}>\r\n                <Select\r\n                //   menuIsOpen\r\n                    ref={ this.props.select  }\r\n                    inputId={this.props.name}\r\n                    id={this.props.name}\r\n                    name={this.props.name}\r\n                    placeholder={this.props.placeholder}\r\n                    options={this.props.options}\r\n                    value={this.props.value}\r\n                    isInvalid={this.props.isInvalid}\r\n                    required={this.props.required}\r\n                    defaultValue={this.props.defaultValue}\r\n                    isMulti={this.props.isMulti}\r\n                    isSearchable={this.props.isSearchable}\r\n                    isDisabled={this.props.isDisabled}\r\n                    isClearable={this.props.isClearable}\r\n                    onChange={this.props.onChange}\r\n                    onBlur={this.props.onBlur}\r\n                    closeMenuOnSelect={this.props.closeMenuOnSelect}\r\n                    className={this.props.className}\r\n                    classNamePrefix=\"react-select\"\r\n                    minMenuHeight={this.props.minMenuHeight}\r\n                    maxMenuHeight={this.props.axMenuHeight}\r\n                    openMenuOnFocus={true}\r\n                    menuPlacement={\"auto\"}\r\n                    autoComplete=\"off\"\r\n                    menuPosition={this.props.menuPosition}\r\n                    //  openMenuOnFocus={true}\r\n                    noOptionsMessage={() => this.props.intl.formatMessage({ id: \"IDS_NOOPTIONS\" })}\r\n                // menuPortalTarget={document.querySelector('body')}\r\n                // menuPosition=\"absolute\"\r\n                // styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\r\n\r\n                />\r\n                <Form.Label htmlFor={this.props.name}>{this.props.formLabel}{this.props.isMandatory && <sup>*</sup>}</Form.Label>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {this.props.errors}\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </React.Fragment >\r\n    )\r\n}\r\n    \r\n\r\n\r\n};\r\nexport default injectIntl(FormSelectSearchComponent);"]},"metadata":{},"sourceType":"module"}