{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\myjobs\\\\TestWiseMyJobs.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { faCheck, faPencilAlt, faSync, faBolt, faLink, faComments, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Card, Col, Nav, Row } from 'react-bootstrap';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { ProductList } from '../testmanagement/testmaster-styled';\nimport SplitterLayout from \"react-splitter-layout\";\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { getMyJobsubSampleDetailTestWise, getMyJobTestDetailTestWise, getMJTestChildTabDetailTestWise, performAction, updateStore, updateDecision, getRegTypeTestWise, getRegSubTypeTestWise, getTestStatusTestWise, getSectionTestWise, getFilterStatusTestWise, getMyJobsSampleTestWise, getStatusCombo, validateEsignCredential, crudMaster, validateEsignforAccept, getAppConfigVersionTestWise, getAcceptTestTestWise, filterTransactionList, checkListRecord, generateCOAReport, getMJSampleChildTabDetailTestWise, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport, getEnforceCommentsHistory, reportGenerate } from '../../actions';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport { getControlMap, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\nimport TestWiseMyJobsFilter from './TestWiseMyJobsFilter';\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType, SideBarSeqno } from '../../components/Enumeration';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport Attachments from '../attachmentscomments/attachments/Attachments';\nimport { onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\nimport Comments from '../attachmentscomments/comments/Comments';\nimport { onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions';\nimport ScrollBar from 'react-perfect-scrollbar';\nimport CustomPopOver from '../../components/customPopover';\nimport { ContentPanel } from '../../components/App.styles';\nimport TestWiseMyJobsSampleInfoGrid from './TestWiseMyJobsSampleInfoGrid';\nimport TestWiseMyJobsSampleInfoView from './TestWiseMyJobsSampleInfoView';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass TestWiseMyJobs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sideNavDetail = screenName => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.MJ_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.MJSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.MJSelectedTest ? this.props.Login.masterData.MJSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n      return screenName == \"IDS_TESTATTACHMENTS\" ? /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_TESTATTACHMENTS\",\n        selectedMaster: selectedTestList,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationTestAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        fetchRecord: this.props.getAttachmentCombo,\n        onSaveClick: this.onAttachmentSaveClick,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDATTACHEMENT\",\n        addName: \"AddTestAttachment\",\n        editName: \"EditTestAttachment\",\n        deleteName: \"DeleteTestAttachment\",\n        viewName: \"ViewTestAttachment\",\n        methodUrl: \"TestAttachment\",\n        nsubsampleneed: this.props.Login.masterData[\"RegSubTypeValue\"],\n        subFields: [{\n          [designProperties.VALUE]: \"stestsynonym\"\n        }, {\n          [designProperties.VALUE]: \"dcreateddate\"\n        }],\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        deleteParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestAttachment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTATTACHMENTS\",\n          masterList: selectedTestList\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }) : screenName == \"IDS_TESTCOMMENTS\" ? /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_TESTCOMMENTS\",\n        selectedMaster: selectedTestList,\n        onSaveClick: this.onCommentsSaveClick,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationTestComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        masterList: selectedTestList,\n        masterAlertStatus: \"IDS_SELECTTESTTOADDCOMMENTS\",\n        addName: \"AddTestComment\",\n        editName: \"EditTestComment\",\n        deleteName: \"DeleteTestComment\",\n        methodUrl: \"TestComment\",\n        isTestComment: false,\n        primaryKeyField: \"ntestcommentcode\",\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testDataStateChange,\n        masterData: this.props.Login.masterData,\n        deleteParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"TestComment\",\n          ntransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_TESTCOMMENTS\",\n          operation: \"update\",\n          masterList: selectedTestList,\n          ncontrolCode: editTestCommentsId\n        },\n        selectedListName: \"IDS_TESTS\",\n        displayName: \"stestsynonym\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }) : \"\";\n    };\n\n    this.changePropertyViewClose = id => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          activeTabIndex: undefined,\n          activeTestTab: undefined\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.changePropertyView = (index, screenName, event, status) => {\n      let id = false;\n\n      if (event && event.ntransactiontestcode) {\n        id = event.ntransactiontestcode;\n      } else if (event && event.ntransactionsamplecode) {\n        id = event.ntransactionsamplecode;\n      } else if (event && event.npreregno) {\n        id = event.npreregno;\n      }\n\n      let activeTabIndex;\n\n      if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\n        activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\n      }\n\n      if (status != \"click\") {\n        if (index) {\n          const tabProps = {\n            tabSequence: SideBarSeqno.TEST,\n            screenName: screenName == \"IDS_COMMENTS\" ? \"IDS_TESTCOMMENTS\" : screenName === \"IDS_ATTACHMENTS\" ? \"IDS_TESTATTACHMENTS\" : screenName,\n            activeTabIndex\n          };\n          this.onTabChange(tabProps);\n        }\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n      const tabseqno = tabProps.tabSequence;\n\n      if (tabseqno == SideBarSeqno.TEST) {\n        if (this.props.Login.masterData.MJSelectedTest && this.props.Login.masterData.MJSelectedTest.length > 0) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            MJSelectedTest: this.props.Login.masterData.MJSelectedTest,\n            ntransactiontestcode: this.props.Login.masterData.MJSelectedTest ? String(this.props.Login.masterData.MJSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n            npreregno: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            activeTestTab,\n            screenName: activeTestTab,\n            activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\n            testAttachmentDataState: this.state.testAttachmentDataState,\n            testCommentDataState: this.state.testCommentDataState\n          };\n          this.props.getMJTestChildTabDetailTestWise(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      }\n    };\n\n    this.onInputSwitchOnChange = event => {\n      if (event.target.name == \"PopupNav\") {\n        this.setState({\n          enablePropertyPopup: !this.state.enablePropertyPopup\n        });\n      } else {\n        this.setState({\n          enableAutoClick: !this.state.enableAutoClick\n        });\n      }\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.testTabDetail = () => {\n      const testTabMap = new Map();\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.MJ_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.MJSelectedTest, \"ntransactiontestcode\");\n      let ntransactiontestcode = this.props.Login.masterData.MJSelectedTest ? this.props.Login.masterData.MJSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n\n      if (this.state.showTest) {\n        testTabMap.set(\"IDS_TESTATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n          screenName: \"IDS_TESTATTACHMENTS\",\n          selectedMaster: selectedTestList,\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          attachments: this.props.Login.masterData.RegistrationTestAttachment || [],\n          deleteRecord: this.props.deleteAttachment,\n          fetchRecord: this.props.getAttachmentCombo,\n          onSaveClick: this.onAttachmentSaveClick,\n          masterList: selectedTestList,\n          masterAlertStatus: \"IDS_SELECTTESTTOADDATTACHEMENT\",\n          addName: \"AddTestAttachment\",\n          editName: \"EditTestAttachment\",\n          deleteName: \"DeleteTestAttachment\",\n          viewName: \"ViewTestAttachment\",\n          methodUrl: \"TestAttachment\",\n          nsubsampleneed: this.props.Login.masterData[\"RegSubTypeValue\"],\n          subFields: [{\n            [designProperties.VALUE]: \"stestsynonym\"\n          }, {\n            [designProperties.VALUE]: \"dcreateddate\"\n          }],\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          deleteParam: {\n            methodUrl: \"TestAttachment\",\n            ntransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            esignRights: this.props.Login.userRoleControlRights,\n            screenName: \"IDS_TESTATTACHMENTS\"\n          },\n          editParam: {\n            methodUrl: \"TestAttachment\",\n            ntransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            esignRights: this.props.Login.userRoleControlRights,\n            screenName: \"IDS_TESTATTACHMENTS\",\n            masterList: selectedTestList\n          },\n          selectedListName: \"IDS_TESTS\",\n          displayName: \"stestsynonym\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 51\n          }\n        }));\n        testTabMap.set(\"IDS_TESTCOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n          screenName: \"IDS_TESTCOMMENTS\",\n          selectedMaster: selectedTestList,\n          onSaveClick: this.onCommentsSaveClick,\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          Comments: this.props.Login.masterData.RegistrationTestComment || [],\n          fetchRecord: this.props.getCommentsCombo,\n          masterList: selectedTestList,\n          masterAlertStatus: \"IDS_SELECTTESTTOADDCOMMENTS\",\n          addName: \"AddTestComment\",\n          editName: \"EditTestComment\",\n          deleteName: \"DeleteTestComment\",\n          methodUrl: \"TestComment\",\n          isTestComment: false,\n          primaryKeyField: \"ntestcommentcode\",\n          dataState: this.state.testCommentDataState,\n          dataStateChange: this.testDataStateChange,\n          masterData: this.props.Login.masterData,\n          deleteParam: {\n            methodUrl: \"TestComment\",\n            ntransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            esignRights: this.props.Login.userRoleControlRights,\n            screenName: \"IDS_TESTCOMMENTS\"\n          },\n          editParam: {\n            methodUrl: \"TestComment\",\n            ntransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            esignRights: this.props.Login.userRoleControlRights,\n            screenName: \"IDS_TESTCOMMENTS\",\n            operation: \"update\",\n            masterList: selectedTestList,\n            ncontrolCode: editTestCommentsId\n          },\n          selectedListName: \"IDS_TESTS\",\n          displayName: \"stestsynonym\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 48\n          }\n        }));\n      }\n\n      return testTabMap;\n    };\n\n    this.onTestTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n\n      if (activeTestTab !== this.props.Login.activeTestTab) {\n        if (this.props.Login.masterData.MJSelectedTest && this.props.Login.masterData.MJSelectedTest.length > 0) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            MJSelectedTest: this.props.Login.masterData.MJSelectedTest,\n            ntransactiontestcode: this.props.Login.masterData.MJSelectedTest ? String(this.props.Login.masterData.MJSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n            npreregno: this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            activeTestTab,\n            screenName: activeTestTab,\n            testAttachmentDataState: this.state.testAttachmentDataState,\n            testCommentDataState: this.state.testCommentDataState\n          };\n          this.props.getMJTestChildTabDetailTestWise(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      }\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.realSampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              realSampleTypeValue: comboData.item\n            };\n            this.props.getRegTypeTestWise(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.realRegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              realRegTypeValue: comboData.item\n            };\n            this.props.getRegSubTypeTestWise(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nneedtemplatebasedflow: comboData.item.nneedtemplatebasedflow,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                realRegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getAppConfigVersionTestWise(inputParamData);\n          }\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.realApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 5,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                realApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\n              nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.realUserSectionValue.nsectioncode\n            };\n            this.props.getFilterStatus(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.realUserSectionValue.nsectioncode) {\n            inputParamData = {\n              nflag: 6,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              nsectioncode: comboData.value === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                realUserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\n              ntransactionstatus: JSON.stringify(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n              stransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.realFilterStatusValue.ntransactionstatus\n            };\n            this.props.getSectionTestWise(inputParamData);\n          }\n        } else if (fieldName === 'ntransactionstatus') {\n          if (comboData.value !== this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) {\n            inputParamData = {\n              nflag: 7,\n              fromdate: obj.fromDate,\n              todate: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              //nsectioncode:this.props.Login.masterData.realUserSectionValue.nsectioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                realFilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\n              ntransactionstatus: comboData.value === -1 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value\n            };\n            this.props.getFilterStatusTestWise(inputParamData);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.realTestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              realTestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          if (comboData.value !== this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) {\n            let masterData = { ...this.props.Login.masterData,\n              realDesignTemplateMappingValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) {\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.realUserSectionValue.nsectioncode\n            };\n            this.props.getTestStatusTestWise(inputParamData);\n          }\n        }\n      }\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let fromdate = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let todate = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, todate, this.props.Login.userInfo);\n        fromdate = obj.fromDate;\n        todate = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(fromdate, dateValue, this.props.Login.userInfo);\n        fromdate = obj.fromDate;\n        todate = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          fromdate: String(fromdate),\n          todate: String(todate),\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getAppConfigVersionTestWise(inputParam);\n    };\n\n    this.onReload = () => {\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue\n      };\n      let inputData = {\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ntransactionstatus: String(realFilterStatusValue ? realFilterStatusValue.ntransactionstatus : -1),\n        // ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : -1,\n        napprovalconfigcode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigcode || -1,\n        napprovalversioncode: String(realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigversioncode : 1),\n        // napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\n        nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n        ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        ndesigntemplatemappingcode: realDesignTemplateMappingValue && realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        userinfo: this.props.Login.userInfo,\n        showTest: true,\n        activeTestTab: this.props.Login.activeTestTab || \"\",\n        checkBoxOperation: 3,\n        ntype: 2\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== -1 && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== -1 && realUserSectionValue.nsectioncode !== null && realTestValue.ntestcode !== -1) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['fromdate'] = obj.fromDate;\n        inputData['todate'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchTestRef: this.searchTestRef,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          testAttachmentDataState: this.state.testAttachmentDataState,\n          testCommentDataState: this.state.testCommentDataState\n        };\n        this.props.getMyJobsSampleTestWise(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\n      let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\n      let realSampleTypeValue = this.props.Login.masterData.realSampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.realRegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.realRegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.realFilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.realApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.realUserSectionValue;\n      let realTestValue = this.props.Login.masterData.realTestValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.realDesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || -1,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab,\n        checkBoxOperation: 3,\n        ntype: 2\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== undefined) {\n        inputData['fromdate'] = obj.fromDate;\n        inputData['todate'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          testAttachmentDataState: this.state.testAttachmentDataState,\n          testCommentDataState: this.state.testCommentDataState\n        };\n        this.props.getMyJobsSampleTestWise(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onAcceptTestWise = (action, inputParam, MJSelectedTest, userInfo) => {\n      let inputData = {};\n      let Map = {\n        nflag: 3,\n        ncheck: 1,\n        nsampletypecode: inputParam.nsampletypecode,\n        nregtypecode: inputParam.nregtypecode,\n        nregsubtypecode: inputParam.nregsubtypecode,\n        ntransactionstatus: inputParam.ntransactionstatus,\n        napprovalversioncode: inputParam.napprovalversioncode,\n        nsectioncode: inputParam.nsectioncode,\n        ntestcode: inputParam.ntestcode,\n        fromdate: inputParam.dfrom,\n        todate: inputParam.dto,\n        npreregno: MJSelectedTest ? MJSelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\n        ntransactionsamplecode: MJSelectedTest ? MJSelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\n        transactiontestcode: MJSelectedTest ? MJSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\n        ntransactiontestcode: 0,\n        ncontrolcode: action.ncontrolcode,\n        nneedsubsample: inputParam.masterData.nneedsubsample,\n        nneedtemplatebasedflow: inputParam.masterData.nneedtemplatebasedflow,\n        ndesigntemplatemappingcode: inputParam.ndesigntemplatemappingcode,\n        checkBoxOperation: 3,\n        scontrolname: action.scontrolname,\n        userinfo: userInfo,\n        masterData: inputParam.masterData\n      };\n      inputParam = {\n        inputData: Map,\n        masterData: inputParam.masterData\n      };\n\n      if (inputParam.inputData.transactiontestcode && inputParam.inputData.transactiontestcode.length > 0) {\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, action.ncontrolcode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true,\n              parentPopUpSize: 'lg',\n              screenName: this.props.Login.screenName,\n              operation: 'accept'\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.getAcceptTestTestWise(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.testDataStateChange = event => {\n      switch (this.props.Login.activeTestTab) {\n        case \"IDS_TESTATTACHMENTS\":\n          this.setState({\n            testAttachmentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTCOMMENTS\":\n          this.setState({\n            testCommentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            testAttachmentDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.sampleDataStateChange = event => {\n      switch (this.props.Login.activeSampleTab) {\n        case \"IDS_SAMPLEINFO\":\n          this.setState({\n            sampleGridDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLEAPPROVALHISTORY\":\n          this.setState({\n            sampleHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_PRINTHISTORY\":\n          this.setState({\n            samplePrintHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_REPORTHISTORY\":\n          this.setState({\n            reportHistoryDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            sampleGridDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let showReport = this.props.Login.showReport;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n        selectedRecord.agree = false;\n        openModal = false;\n      } else {\n        selectedRecord = {};\n        showReport = false;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          showReport\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.handleClose = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let templateData = this.props.Login.templateData;\n      let operation = this.props.Login.operation;\n      let openTemplateModal = this.props.Login.openTemplateModal;\n\n      if (this.props.Login.loadEsign) {\n        if (operation === \"accept\") {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          selectedRecord = {};\n          templateData = {};\n          operation = undefined;\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openTemplateModal = false;\n        openModal = false;\n        openChildModal = false;\n        selectedRecord = {};\n        templateData = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openChildModal,\n          loadEsign,\n          selectedRecord,\n          templateData,\n          selectedParamId: null,\n          operation,\n          openTemplateModal\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData,\n        operation: this.props.Login.operation\n      };\n\n      if (this.props.Login.operation === 'accept') {\n        this.props.validateEsignforAccept(inputParam, \"openChildModal\");\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\n      }\n    };\n\n    this.onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\n        let {\n          testskip,\n          testtake\n        } = this.state;\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.MJ_TEST];\n        testList = testList.slice(testskip, testskip + testtake);\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.MJSelectedTest, \"ntransactiontestcode\");\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          isTestComment: this.props.isTestComment,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          ntransactiontestcode: this.props.Login.masterData.MJSelectedTest ? this.props.Login.masterData.MJSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveTestComments(saveParam, selectedTestList);\n      }\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: this.props.Login.operation,\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\n      }\n    };\n\n    this.onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.MJ_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.MJSelectedTest, \"ntransactiontestcode\");\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let ok = true;\n\n      if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactiontestcode: this.props.Login.masterData.MJSelectedTest ? this.props.Login.masterData.MJSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n\n        if (selectedTestList.length > 0) {\n          inputParam = onSaveTestAttachment(saveParam, selectedTestList);\n        } else {\n          ok = false;\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      }\n\n      if (ok) {\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: this.props.Login.operation,\n              screenName: this.props.Login.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\n        }\n      }\n    };\n\n    this.searchTestRef = React.createRef();\n    this.formRef = React.createRef();\n    this.state = {\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      testAttachmentDataState: {},\n      testCommentDataState: {},\n      dataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      oldComboData: {},\n      selectedRecord: {},\n      operation: \"\",\n      screenName: undefined,\n      showSample: false,\n      showTest: true,\n      sampleListColumns: [],\n      subSampleListColumns: [],\n      testListColumns: [],\n      TableExpandableItem: [],\n      SingleItem: [],\n      SampleGridItem: [],\n      SampleGridExpandableItem: [],\n      sampleListMainField: [],\n      subSampleListMainField: [],\n      testListMainField: [],\n      testMoreField: [],\n      firstPane: 0,\n      paneHeight: 0,\n      secondPaneHeight: 0,\n      tabPane: 0,\n      SampletypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      ConfigVersionList: [],\n      UserSectionList: [],\n      TestList: [],\n      DynamicDesignMappingList: [],\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      testskip: 0,\n      testtake: this.props.Login.settings && this.props.Login.settings[12],\n      splitChangeWidthPercentage: 22,\n      subSampleSkip: 0,\n      subSampleTake: 5\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height - 50\n      });\n    }\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    const filterTestParam = {\n      inputListName: \"MJ_TEST\",\n      selectedObject: \"MJSelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      fecthInputObject: {\n        ntransactiontestcode: this.props.Login.masterData.MJSelectedTest ? this.props.Login.masterData.MJSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n        userinfo: this.props.Login.userInfo,\n        checkBoxOperation: 3,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      },\n      isSingleSelect: false,\n      masterData: this.props.Login.masterData,\n      searchFieldList: [\"sarno\", \"ssamplearno\", \"stestsynonym\", \"dtransactiondate\", \"smethodname\", \"ssectionname\", \"ssourcename\", \"stransdisplaystatus\", \"sinstrumentcatname\", \"stestname\"],\n      changeList: [\"RegistrationTestAttachment\", \"RegistrationTestComment\", \"MJSelectedTest\"]\n    };\n    let AP_TestList = this.props.Login.masterData.MJ_TEST ? sortData(this.props.Login.masterData.MJ_TEST, 'descending', 'ntransactiontestcode') : [];\n    let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'ascending', 'ncontrolcode') : [];\n    let testGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      npreregno: this.props.Login.masterData.MJSelectedSample && this.props.Login.masterData.MJSelectedSample.map(sample => sample.npreregno).join(\",\"),\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\n      nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n      ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n      dfrom: obj.fromDate,\n      dto: obj.toDate,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n      // activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\n      screenName: this.props.Login.screenName,\n      searchTestRef: this.searchTestRef,\n      postParamList: this.postParamList,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n    };\n    let testChildGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      npreregno: this.props.Login.masterData.MJSelectedSample && this.props.Login.masterData.MJSelectedSample.map(sample => sample.npreregno).join(\",\"),\n      ntransactionsamplecode: this.props.Login.masterData.MJSelectedSubSample && this.props.Login.masterData.MJSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      postParamList: this.postParamList,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      testAttachmentDataState: this.state.testAttachmentDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n      activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\n    };\n    let breadCrumbData = [];\n\n    if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) {\n      breadCrumbData = [{\n        \"label\": \"IDS_FROM\",\n        \"value\": obj.breadCrumbFrom\n      }, {\n        \"label\": \"IDS_TO\",\n        \"value\": obj.breadCrumbto\n      }, {\n        \"label\": \"IDS_SAMPLETYPE\",\n        \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" : this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_REGTYPE\",\n        \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_REGSUBTYPE\",\n        \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n      }, {\n        \"label\": \"IDS_DESIGNTEMPLATE\",\n        \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.DesignTemplateMappingValue.sregtemplatename : \"NA\"\n      }, {\n        \"label\": \"IDS_CONFIGVERSION\",\n        \"value\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" : this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_SECTION\",\n        \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" : this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_Test\",\n        \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" : this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_FILTERSTATUS\",\n        \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\n      }];\n    } else {\n      breadCrumbData = [{\n        \"label\": \"IDS_FROM\",\n        \"value\": obj.breadCrumbFrom\n      }, {\n        \"label\": \"IDS_TO\",\n        \"value\": obj.breadCrumbto\n      }, {\n        \"label\": \"IDS_SAMPLETYPE\",\n        \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" : this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_REGTYPE\",\n        \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_REGSUBTYPE\",\n        \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n      }, {\n        \"label\": \"IDS_CONFIGVERSION\",\n        \"value\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" : this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_SECTION\",\n        \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" : this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_Test\",\n        \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" : this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n      }, {\n        \"label\": \"IDS_FILTERSTATUS\",\n        \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\n      }];\n    }\n\n    const TestAcceptActionId = this.state.controlMap.has(\"Accept\") && this.state.controlMap.get(\"Accept\").ncontrolcode;\n    const TestMyJobActionId = this.state.controlMap.has(\"TestMyJobAction\") && this.state.controlMap.get(\"TestMyJobAction\").ncontrolcode;\n    this.postParamList = [{\n      filteredListName: \"searchedTest\",\n      clearFilter: \"no\",\n      searchRef: this.searchTestRef,\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      fecthInputObject: testChildGetParam,\n      selectedObject: \"MJSelectedTest\",\n      inputListName: \"MJ_TEST\",\n      updatedListname: \"MJSelectedTest\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height sticky_head_parent\",\n      ref: parentHeight => {\n        this.parentHeight = parentHeight;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: `vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: ` tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"} ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      percentage: true,\n      primaryIndex: 1,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      onSecondaryPaneSizeChange: this.paneSizeChange,\n      primaryMinSize: 40,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJson, {\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      needMultiSelect: true,\n      masterList: this.props.Login.masterData.searchedTest || AP_TestList,\n      selectedMaster: this.props.Login.masterData.MJSelectedTest,\n      primaryKeyField: \"ntransactiontestcode\" //getMasterDetail={this.props.getMJTestChildTabDetailTestWise}\n      ,\n      getMasterDetail: (event, status) => {\n        this.props.getMJTestChildTabDetailTestWise(event, status);\n        this.state.enableAutoClick && this.changePropertyView(1, \"IDS_ATTACHMENTS\", event, \"click\");\n      },\n      inputParam: testChildGetParam,\n      subFieldsLabel: true,\n      additionalParam: [''],\n      mainField: 'stestsynonym',\n      selectionList: this.props.Login.masterData.FilterStatus,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"sfilterstatus\",\n      selectionColorField: \"scolorhexcode\",\n      selectedListName: \"MJSelectedTest\",\n      objectName: \"test\",\n      listName: \"IDS_TEST\",\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedTest\",\n      needValidation: true,\n      validationKey: \"napprovalversioncode\",\n      validationFailMsg: \"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: this.state.DynamicTestColumns //  moreField={this.state.testMoreField}\n      ,\n      jsonDesignFields: true,\n      jsonField: 'jsondata',\n      showStatusLink: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\" // statusColor=\"stranscolor\"\n      ,\n      showStatusIcon: false,\n      showStatusName: true,\n      needFilter: true,\n      searchRef: this.searchTestRef,\n      filterParam: filterTestParam,\n      skip: this.state.testskip,\n      take: this.state.testtake,\n      handlePageChange: this.handleTestPageChange,\n      showStatusBlink: true,\n      splitModeClass: this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : '',\n      childTabsKey: [\"RegistrationTestAttachment\", \"RegistrationTestComment\"],\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 53\n        }\n      }, this.props.Login.masterData.actionStatus && this.state.userRoleControlRights.indexOf(TestMyJobActionId) !== -1 && actionStatus.length > 0 ? /*#__PURE__*/React.createElement(CustomPopOver, {\n        icon: faBolt,\n        nav: true,\n        data: actionStatus,\n        btnClasses: \"btn-circle btn_grey ml-2 spacesremovefromaction\" //dynamicButton={(value) => this.props.getAcceptTestTestWise(value,testGetParam,this.props.Login.masterData.MJSelectedTest,this.props.Login.userInfo)}\n        ,\n        dynamicButton: value => this.onAcceptTestWise(value, testGetParam, this.props.Login.masterData.MJSelectedTest, this.props.Login.userInfo),\n        textKey: \"scontrolname\",\n        iconKey: \"ncontrolcode\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 61\n        }\n      }) : \"\", /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        variant: \"link\",\n        onClick: () => this.onReload(),\n        \"data-for\": \"tooltip-common-wrap\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        style: {\n          \"width\": \"0.6!important\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 61\n        }\n      })))),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(TestWiseMyJobsFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.realRegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.realUserSectionValue || [],\n          JobStatus: this.props.Login.masterData.JobStatus || [],\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.realTestValue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 70\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(ContentPanel, {\n      cardHead: 94,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\",\n        marginTop: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 73\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEINFO\"\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(ScrollBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: this.state.initialVerticalWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 73\n      }\n    }, this.props.Login.masterData.MJSelectedTest && this.props.Login.masterData.MJSelectedTest.length === 1 ? /*#__PURE__*/React.createElement(TestWiseMyJobsSampleInfoView, {\n      data: this.props.Login.masterData.MJSelectedTest && this.props.Login.masterData.MJSelectedTest.length > 0 ? this.props.Login.masterData.MJSelectedTest[this.props.Login.masterData.MJSelectedTest.length - 1] : {},\n      SingleItem: this.props.Login.masterData.MJSelectedTest && this.props.Login.masterData.MJSelectedTest ? this.state.SingleItem : [],\n      screenName: \"IDS_SAMPLEINFO\",\n      userInfo: this.props.Login.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 81\n      }\n    }) : /*#__PURE__*/React.createElement(TestWiseMyJobsSampleInfoGrid, {\n      selectedSample: this.props.Login.masterData.MJSelectedTest,\n      userInfo: this.props.Login.userInfo || {},\n      masterData: this.props.Login.masterData,\n      inputParam: this.props.Login.inputParam,\n      dataState: this.state.sampleGridDataState,\n      dataStateChange: this.sampleInfoDataStateChange,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n      primaryKeyField: \"npreregno\",\n      expandField: \"expanded\",\n      screenName: \"IDS_SAMPLEINFO\" // jsonField={\"jsondata\"}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 81\n      }\n    })))))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      style: {\n        width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: ` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyViewClose(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 178\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-attachment  ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 41\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TESTATTACHMENTS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 1 ? this.sideNavDetail(\"IDS_TESTATTACHMENTS\") : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: ` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"inner_h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 41\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TESTCOMMENTS\"\n    })), this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_TESTCOMMENTS\") : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(1, \"IDS_ATTACHMENTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faLink,\n      className: \"fa-beat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_ATTACHMENTS\"\n    }))), /*#__PURE__*/React.createElement(\"li\", {\n      className: `${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`,\n      onClick: () => this.changePropertyView(2, \"IDS_COMMENTS\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 49\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    })))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tab-click-toggle-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CustomSwitch, {\n      label: \"Auto Show\",\n      type: \"switch\",\n      name: \"Auto Click\",\n      onChange: event => this.onInputSwitchOnChange(event),\n      defaultValue: this.state.enableAutoClick,\n      isMandatory: false,\n      required: true,\n      checked: this.state.enableAutoClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 45\n      }\n    })))))))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      esign: this.props.Login.loadEsign,\n      onSaveClick: this.onSaveClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      showSaveContinue: this.state.showSaveContinue,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 29\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      testListColumns,\n      SingleItem,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      testAttachmentDataState,\n      testCommentDataState,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      DynamicDesignMappingList,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicTestColumns,\n      DynamicGridItem,\n      DynamicGridMoreField,\n      activeTabIndex\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\n      activeTabIndex = this.props.Login.activeTabIndex;\n      bool = true;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n          group: [{\n            field: 'sarno'\n          }]\n        };\n        testAttachmentDataState = dataState;\n        testCommentDataState = dataState;\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, false);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, false);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, false);\n      const DynamicDesignMappingListMap = constructOptionList(this.props.Login.masterData.DynamicDesignMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", \"nsorter\", 'ascending', 'ndesigntemplatemappingcode', false);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      DynamicDesignMappingList = DynamicDesignMappingListMap.get(\"OptionList\");\n      bool = true;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        sfilterstatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      };\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\n        testAttachmentDataState = this.props.Login.testAttachmentDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitems ? dynamicColumn.samplegridmoreitems : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        testListColumns,\n        SingleItem,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        testAttachmentDataState,\n        testCommentDataState,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        DynamicDesignMappingList,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicTestColumns,\n        DynamicGridItem,\n        DynamicGridMoreField\n      });\n    }\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  getActiveTestURL() {\n    let url = \"attachment/getTestAttachment\";\n\n    switch (this.props.Login.activeTestTab) {\n      case \"IDS_TESTATTACHMENTS\":\n        url = \"attachment/getTestAttachment\";\n        break;\n\n      case \"IDS_TESTCOMMENTS\":\n        url = \"comments/getTestComment\";\n        break;\n\n      default:\n        url = \"comments/getTestComment\";\n        break;\n    }\n\n    return url;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  getMyJobsubSampleDetailTestWise,\n  getMyJobTestDetailTestWise,\n  getMJTestChildTabDetailTestWise,\n  performAction,\n  updateStore,\n  viewAttachment,\n  checkListRecord,\n  updateDecision,\n  getRegTypeTestWise,\n  getRegSubTypeTestWise,\n  getTestStatusTestWise,\n  getSectionTestWise,\n  getFilterStatusTestWise,\n  getMyJobsSampleTestWise,\n  getStatusCombo,\n  validateEsignCredential,\n  crudMaster,\n  validateEsignforAccept,\n  getAppConfigVersionTestWise,\n  getAcceptTestTestWise,\n  filterTransactionList,\n  getMJSampleChildTabDetailTestWise,\n  getAttachmentCombo,\n  deleteAttachment,\n  getCommentsCombo,\n  previewSampleReport,\n  generateCOAReport,\n  getEnforceCommentsHistory,\n  reportGenerate\n})(injectIntl(TestWiseMyJobs));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/myjobs/TestWiseMyJobs.jsx"],"names":["React","connect","injectIntl","faCheck","faPencilAlt","faSync","faBolt","faLink","faComments","faChevronRight","FontAwesomeIcon","Button","Card","Col","Nav","Row","ListWrapper","ProductList","SplitterLayout","DEFAULT_RETURN","getMyJobsubSampleDetailTestWise","getMyJobTestDetailTestWise","getMJTestChildTabDetailTestWise","performAction","updateStore","updateDecision","getRegTypeTestWise","getRegSubTypeTestWise","getTestStatusTestWise","getSectionTestWise","getFilterStatusTestWise","getMyJobsSampleTestWise","getStatusCombo","validateEsignCredential","crudMaster","validateEsignforAccept","getAppConfigVersionTestWise","getAcceptTestTestWise","filterTransactionList","checkListRecord","generateCOAReport","getMJSampleChildTabDetailTestWise","getAttachmentCombo","viewAttachment","deleteAttachment","getCommentsCombo","previewSampleReport","getEnforceCommentsHistory","reportGenerate","CustomTabs","getControlMap","showEsign","sortData","constructOptionList","getSameRecordFromTwoArrays","convertDateValuetoString","rearrangeDateFormat","toast","TransactionListMasterJson","TestWiseMyJobsFilter","designProperties","transactionStatus","RegistrationType","RegistrationSubType","SideBarSeqno","BreadcrumbComponent","Attachments","onSaveTestAttachment","Comments","onSaveTestComments","ScrollBar","CustomPopOver","ContentPanel","TestWiseMyJobsSampleInfoGrid","TestWiseMyJobsSampleInfoView","SlideOutModal","Esign","CustomSwitch","mapStateToProps","state","Login","TestWiseMyJobs","Component","constructor","props","sideNavDetail","screenName","testskip","testtake","testList","masterData","searchedTests","MJ_TEST","editTestCommentsId","controlMap","has","get","ncontrolcode","slice","selectedTestList","MJSelectedTest","ntransactiontestcode","map","test","join","userRoleControlRights","RegistrationTestAttachment","onAttachmentSaveClick","VALUE","userInfo","methodUrl","esignRights","masterList","onCommentsSaveClick","RegistrationTestComment","testCommentDataState","testDataStateChange","operation","ncontrolCode","changePropertyViewClose","id","updateInfo","typeName","data","activeTabIndex","undefined","activeTestTab","changePropertyView","index","event","status","ntransactionsamplecode","npreregno","window","innerWidth","enableAutoClick","tabProps","tabSequence","TEST","onTabChange","tabseqno","length","inputData","String","item","selectedSample","userinfo","testAttachmentDataState","warn","intl","formatMessage","onInputSwitchOnChange","target","name","setState","enablePropertyPopup","handleTestPageChange","e","skip","take","testTabDetail","testTabMap","Map","showTest","set","onTestTabChange","onFilterComboChange","comboData","fieldName","obj","fromDate","toDate","inputParamData","value","realSampleTypeValue","nsampletypecode","nflag","fromdate","todate","realRegTypeValue","nregtypecode","realRegSubTypeValue","nregsubtypecode","nneedtemplatebasedflow","realApprovalVersionValue","napproveconfversioncode","dfrom","dto","napprovalversioncode","RegSubTypeValue","nsectioncode","realUserSectionValue","UserSection","getFilterStatus","napprovalconfigversioncode","ntransactionstatus","JSON","stringify","realFilterStatusValue","stransactionstatus","FilterStatus","realTestValue","ntestcode","realDesignTemplateMappingValue","ndesigntemplatemappingcode","FilterStatusValue","handleDateChange","dateName","dateValue","Date","inputParam","onReload","realFromDate","realToDate","nneedsubsample","napprovalconfigcode","section","checkBoxOperation","ntype","searchTestRef","onFilterSubmit","parseInt","sfilterstatus","onAcceptTestWise","action","ncheck","sample","subsample","transactiontestcode","scontrolname","nformcode","loadEsign","screenData","openModal","parentPopUpSize","dataState","sampleGridDataStateChange","sampleGridDataState","sampleDataStateChange","activeSampleTab","sampleHistoryDataState","samplePrintHistoryDataState","reportHistoryDataState","closeModal","selectedRecord","showReport","agree","handleClose","openChildModal","templateData","openTemplateModal","selectedParamId","onInputOnChange","type","checked","ACTIVE","DEACTIVE","YES","NO","validateEsign","sreason","password","saveType","formRef","saveParam","isTestComment","x","ok","selectedMaster","createRef","settings","masterStatus","error","oldComboData","showSample","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SingleItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","firstPane","paneHeight","secondPaneHeight","tabPane","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","ConfigVersionList","UserSectionList","TestList","DynamicDesignMappingList","splitChangeWidthPercentage","subSampleSkip","subSampleTake","getDerivedStateFromProps","multilingualMsg","componentDidMount","parentHeight","height","clientHeight","render","filterTestParam","inputListName","selectedObject","primaryKeyField","fetchUrl","getActiveTestURL","fecthInputObject","isSingleSelect","searchFieldList","changeList","AP_TestList","actionStatus","testGetParam","MJSelectedSample","postParamList","testChildGetParam","MJSelectedSubSample","breadCrumbData","breadCrumbFrom","breadCrumbto","ssampletypename","SampleTypeValue","sregtypename","RegTypeValue","sregsubtypename","sregtemplatename","DesignTemplateMappingValue","sversionname","ApprovalVersionValue","ssectionname","UserSectionValue","stestsynonym","TestValue","TestAcceptActionId","TestMyJobActionId","filteredListName","clearFilter","searchRef","updatedListname","unchangeList","paneSizeChange","searchedTest","showFilter","openFilter","closeFilter","DynamicTestColumns","indexOf","JobStatus","borderBottom","display","marginTop","initialVerticalWidth","sampleInfoDataStateChange","gridfillingColumn","DynamicGridItem","DynamicGridMoreField","width","propertyPopupWidth","onSaveClick","showSaveContinue","componentDidUpdate","previousProps","selectedFilter","bool","Object","values","push","nsubsampleneed","group","field","SampletypeListMap","SampleType","RegistrationTypeListMap","RegistrationSubTypeListMap","FilterStatusListMap","ConfigVersionListMap","ApprovalConfigVersion","UserSectionListMap","TestListMap","Test","DynamicDesignMappingListMap","DynamicDesignMapping","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","parse","findIndex","DynamicDesign","dynamicColumn","jsondata","testlistitem","samplegriditem","samplegridmoreitems","sampledisplayfields","testlistmoreitems","temparray","option","LABEL","slanguagetypecode","url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { faCheck, faPencilAlt, faSync, faBolt, faLink, faComments, faChevronRight, } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, Col, Nav, Row, } from 'react-bootstrap';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../testmanagement/testmaster-styled';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    getMyJobsubSampleDetailTestWise, getMyJobTestDetailTestWise, getMJTestChildTabDetailTestWise, performAction, updateStore, updateDecision,\r\n    getRegTypeTestWise, getRegSubTypeTestWise, getTestStatusTestWise, getSectionTestWise, getFilterStatusTestWise, getMyJobsSampleTestWise, getStatusCombo, validateEsignCredential,\r\n    crudMaster, validateEsignforAccept, getAppConfigVersionTestWise, getAcceptTestTestWise, filterTransactionList, checkListRecord, generateCOAReport,\r\n    getMJSampleChildTabDetailTestWise, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport,\r\n    getEnforceCommentsHistory, reportGenerate\r\n} from '../../actions'\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport { getControlMap, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\r\nimport TestWiseMyJobsFilter from './TestWiseMyJobsFilter'\r\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType, SideBarSeqno } from '../../components/Enumeration';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport { onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport CustomPopOver from '../../components/customPopover';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport TestWiseMyJobsSampleInfoGrid from './TestWiseMyJobsSampleInfoGrid';\r\nimport TestWiseMyJobsSampleInfoView from './TestWiseMyJobsSampleInfoView';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass TestWiseMyJobs extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchTestRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n        this.state = {\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            testAttachmentDataState: {},\r\n            testCommentDataState: {},\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            oldComboData: {},\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            screenName: undefined,\r\n            showSample: false,\r\n            showTest: true,\r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            firstPane: 0,\r\n            paneHeight: 0,\r\n            secondPaneHeight: 0,\r\n            tabPane: 0,\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            ConfigVersionList: [],\r\n            UserSectionList: [],\r\n            TestList: [],\r\n            DynamicDesignMappingList: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            splitChangeWidthPercentage: 22,\r\n            subSampleSkip: 0,\r\n            subSampleTake: 5,\r\n        }\r\n    }\r\n\r\n\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    sideNavDetail = (screenName) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.MJ_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.MJSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.MJSelectedTest ? this.props.Login.masterData.MJSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n        return (\r\n            screenName == \"IDS_TESTATTACHMENTS\" ?\r\n                <Attachments\r\n                    screenName=\"IDS_TESTATTACHMENTS\"\r\n                    selectedMaster={selectedTestList}\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n                    deleteRecord={this.props.deleteAttachment}\r\n                    fetchRecord={this.props.getAttachmentCombo}\r\n                    onSaveClick={this.onAttachmentSaveClick}\r\n                    masterList={selectedTestList}\r\n                    masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n                    addName={\"AddTestAttachment\"}\r\n                    editName={\"EditTestAttachment\"}\r\n                    deleteName={\"DeleteTestAttachment\"}\r\n                    viewName={\"ViewTestAttachment\"}\r\n                    methodUrl={\"TestAttachment\"}\r\n                    nsubsampleneed={this.props.Login.masterData[\"RegSubTypeValue\"]}\r\n                    subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"dcreateddate\" }]}\r\n                    masterData={this.props.Login.masterData}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    deleteParam={\r\n                        {\r\n                            methodUrl: \"TestAttachment\",\r\n                            ntransactiontestcode,\r\n                            userInfo: this.props.Login.userInfo,\r\n                            masterData: this.props.Login.masterData,\r\n                            esignRights: this.props.Login.userRoleControlRights,\r\n                            screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                        }\r\n                    }\r\n                    editParam={{\r\n                        methodUrl: \"TestAttachment\",\r\n                        ntransactiontestcode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_TESTATTACHMENTS\",\r\n                        masterList: selectedTestList\r\n\r\n                    }}\r\n                    selectedListName=\"IDS_TESTS\"\r\n                    displayName=\"stestsynonym\"\r\n                />\r\n                :\r\n                screenName == \"IDS_TESTCOMMENTS\" ?\r\n                    <Comments\r\n                        screenName=\"IDS_TESTCOMMENTS\"\r\n                        selectedMaster={selectedTestList}\r\n                        onSaveClick={this.onCommentsSaveClick}\r\n                        controlMap={this.state.controlMap}\r\n                        userRoleControlRights={this.state.userRoleControlRights}\r\n                        Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n                        fetchRecord={this.props.getCommentsCombo}\r\n                        masterList={selectedTestList}\r\n                        masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n                        addName={\"AddTestComment\"}\r\n                        editName={\"EditTestComment\"}\r\n                        deleteName={\"DeleteTestComment\"}\r\n                        methodUrl={\"TestComment\"}\r\n                        isTestComment={false}\r\n                        primaryKeyField={\"ntestcommentcode\"}\r\n                        dataState={this.state.testCommentDataState}\r\n                        dataStateChange={this.testDataStateChange}\r\n                        masterData={this.props.Login.masterData}\r\n                        deleteParam={\r\n                            {\r\n                                methodUrl: \"TestComment\",\r\n                                ntransactiontestcode,\r\n                                userInfo: this.props.Login.userInfo,\r\n                                masterData: this.props.Login.masterData,\r\n                                esignRights: this.props.Login.userRoleControlRights,\r\n                                screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                            }\r\n                        }\r\n                        editParam={{\r\n                            methodUrl: \"TestComment\",\r\n                            ntransactiontestcode,\r\n                            userInfo: this.props.Login.userInfo,\r\n                            masterData: this.props.Login.masterData,\r\n                            esignRights: this.props.Login.userRoleControlRights,\r\n                            screenName: \"IDS_TESTCOMMENTS\",\r\n                            operation: \"update\",\r\n                            masterList: selectedTestList,\r\n                            ncontrolCode: editTestCommentsId\r\n\r\n                        }}\r\n                        selectedListName=\"IDS_TESTS\"\r\n                        displayName=\"stestsynonym\"\r\n                    />\r\n                    : \"\"\r\n        )\r\n    }\r\n\r\n\r\n    changePropertyViewClose = (id) => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                activeTabIndex: undefined,\r\n                activeTestTab: undefined,\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    changePropertyView = (index,screenName, event, status) => {\r\n\r\n        let id = false;\r\n        if (event && event.ntransactiontestcode) {\r\n            id = event.ntransactiontestcode\r\n        } else if (event && event.ntransactionsamplecode) {\r\n            id = event.ntransactionsamplecode\r\n        } else if (event && event.npreregno) {\r\n            id = event.npreregno\r\n        }\r\n\r\n        let activeTabIndex\r\n        if (window.innerWidth > 992 && event && this.state.enableAutoClick || !event) {\r\n            activeTabIndex = this.state.activeTabIndex !== index ? index : id ? index : false;\r\n        }\r\n        if (status != \"click\") {\r\n            if(index)\r\n            {\r\n                const tabProps = {\r\n                    tabSequence: SideBarSeqno.TEST,\r\n                    screenName: screenName == \"IDS_COMMENTS\" ? \"IDS_TESTCOMMENTS\": screenName === \"IDS_ATTACHMENTS\"?\"IDS_TESTATTACHMENTS\":screenName ,\r\n                    activeTabIndex\r\n                }\r\n                this.onTabChange(tabProps);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onTabChange = (tabProps)=>{\r\n        const activeTestTab = tabProps.screenName;\r\n        const tabseqno = tabProps.tabSequence;\r\n\r\n        if (tabseqno == SideBarSeqno.TEST) {\r\n        if (this.props.Login.masterData.MJSelectedTest && this.props.Login.masterData.MJSelectedTest.length > 0) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                MJSelectedTest: this.props.Login.masterData.MJSelectedTest,\r\n                ntransactiontestcode: this.props.Login.masterData.MJSelectedTest ?\r\n                    String(this.props.Login.masterData.MJSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                npreregno: this.props.Login.masterData.selectedSample ?\r\n                    this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                activeTestTab,\r\n                screenName: activeTestTab,\r\n                activeTabIndex: tabProps.activeTabIndex ? tabProps.activeTabIndex : this.state.activeTabIndex,\r\n                testAttachmentDataState: this.state.testAttachmentDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n            }\r\n            this.props.getMJTestChildTabDetailTestWise(inputData, true)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n}\r\nonInputSwitchOnChange = (event) => {\r\n    if(event.target.name == \"PopupNav\")\r\n    {\r\n        this.setState({\r\n            enablePropertyPopup : !this.state.enablePropertyPopup\r\n        })\r\n    }\r\n    else\r\n    {\r\n    this.setState({\r\n        enableAutoClick: !this.state.enableAutoClick\r\n    })\r\n}\r\n}\r\n\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"MJ_TEST\",\r\n            selectedObject: \"MJSelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData.MJSelectedTest ? this.props.Login.masterData.MJSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                checkBoxOperation: 3,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n            },\r\n            isSingleSelect: false,\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sarno\", \"ssamplearno\", \"stestsynonym\", \"dtransactiondate\", \"smethodname\", \"ssectionname\", \"ssourcename\", \"stransdisplaystatus\", \"sinstrumentcatname\", \"stestname\"],\r\n            changeList: [\"RegistrationTestAttachment\", \"RegistrationTestComment\", \"MJSelectedTest\"]\r\n        };\r\n        let AP_TestList = this.props.Login.masterData.MJ_TEST ? sortData(this.props.Login.masterData.MJ_TEST, 'descending', 'ntransactiontestcode') : [];\r\n        let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'ascending', 'ncontrolcode') : [];\r\n\r\n        let testGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.MJSelectedSample && this.props.Login.masterData.MJSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            ndesigntemplatemappingcode:this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\r\n            dfrom: obj.fromDate,\r\n            dto: obj.toDate,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            // activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            screenName: this.props.Login.screenName,\r\n            searchTestRef: this.searchTestRef,\r\n            postParamList: this.postParamList,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n        };\r\n        let testChildGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.MJSelectedSample && this.props.Login.masterData.MJSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.MJSelectedSubSample && this.props.Login.masterData.MJSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_TESTATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            postParamList: this.postParamList,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            testAttachmentDataState: this.state.testAttachmentDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n            activeTabIndex: this.state.enableAutoClick ? 1 : this.state.activeTabIndex ? this.state.activeTabIndex : undefined\r\n        };\r\n        let breadCrumbData=[];\r\n        if(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow){\r\n            breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_FROM\",\r\n                    \"value\": obj.breadCrumbFrom\r\n                }, {\r\n                    \"label\": \"IDS_TO\",\r\n                    \"value\": obj.breadCrumbto\r\n                },\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\r\n                        this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                        this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_REGSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                        this.props.Login.masterData.RegSubTypeValue ?\r\n                            this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n                },\r\n                 {\r\n                    \"label\": \"IDS_DESIGNTEMPLATE\",\r\n                    \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\r\n                             this.props.Login.masterData.realDesignTemplateMappingValue ?\r\n                             this.props.Login.masterData.DesignTemplateMappingValue.sregtemplatename : \"NA\"\r\n    \r\n                },\r\n                 {\r\n                    \"label\": \"IDS_CONFIGVERSION\",\r\n                    \"value\": this.props.Login.masterData.realApprovalVersionValue ?\r\n                        this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\r\n                        this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_SECTION\",\r\n                    \"value\": this.props.Login.masterData.realUserSectionValue ?\r\n                        this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n                        this.props.Login.masterData.UserSectionValue ?\r\n                            this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_Test\",\r\n                    \"value\": this.props.Login.masterData.realTestValue ?\r\n                        this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n                        this.props.Login.masterData.TestValue ?\r\n                            this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_FILTERSTATUS\",\r\n                    \"value\": this.props.Login.masterData.realFilterStatusValue ?\r\n                        this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" :\r\n                        this.props.Login.masterData.FilterStatusValue ?\r\n                        this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\r\n                }\r\n            ];\r\n        }else{\r\n             breadCrumbData = [\r\n                {\r\n                    \"label\": \"IDS_FROM\",\r\n                    \"value\": obj.breadCrumbFrom\r\n                }, {\r\n                    \"label\": \"IDS_TO\",\r\n                    \"value\": obj.breadCrumbto\r\n                },\r\n                {\r\n                    \"label\": \"IDS_SAMPLETYPE\",\r\n                    \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\r\n                        this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_REGTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                        this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n                }, {\r\n                    \"label\": \"IDS_REGSUBTYPE\",\r\n                    \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                        this.props.Login.masterData.RegSubTypeValue ?\r\n                            this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_CONFIGVERSION\",\r\n                    \"value\": this.props.Login.masterData.realApprovalVersionValue ?\r\n                        this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\r\n                        this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_SECTION\",\r\n                    \"value\": this.props.Login.masterData.realUserSectionValue ?\r\n                        this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n                        this.props.Login.masterData.UserSectionValue ?\r\n                            this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_Test\",\r\n                    \"value\": this.props.Login.masterData.realTestValue ?\r\n                        this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n                        this.props.Login.masterData.TestValue ?\r\n                            this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n                },\r\n                {\r\n                    \"label\": \"IDS_FILTERSTATUS\",\r\n                    \"value\": this.props.Login.masterData.realFilterStatusValue ?\r\n                        this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" :\r\n                        this.props.Login.masterData.FilterStatusValue ?\r\n                        this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\r\n                }\r\n            ];\r\n        }\r\n\r\n\r\n        \r\n        const TestAcceptActionId = this.state.controlMap.has(\"Accept\") && this.state.controlMap.get(\"Accept\").ncontrolcode;\r\n        const TestMyJobActionId = this.state.controlMap.has(\"TestMyJobAction\") && this.state.controlMap.get(\"TestMyJobAction\").ncontrolcode;\r\n\r\n\r\n\r\n        this.postParamList = [\r\n            {\r\n\r\n                filteredListName: \"searchedTest\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: this.getActiveTestURL(),\r\n                fecthInputObject: testChildGetParam,\r\n                selectedObject: \"MJSelectedTest\",\r\n                inputListName: \"MJ_TEST\",\r\n                updatedListname: \"MJSelectedTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\r\n            }]\r\n\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    <Row noGutters={\"true\"}>\r\n                        <Col md={12} className='parent-port-height sticky_head_parent' ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <ListWrapper className={`vertical-tab-top ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                <div className={` tab-left-area ${this.state.activeTabIndex ? 'active' : \"\"} ${this.state.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                                    <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={this.state.splitChangeWidthPercentage} onSecondaryPaneSizeChange={this.paneSizeChange} primaryMinSize={40} secondaryMinSize={20}>\r\n                                        <TransactionListMasterJson\r\n                                            splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                            needMultiSelect={true}\r\n                                            masterList={this.props.Login.masterData.searchedTest || AP_TestList}\r\n                                            selectedMaster={this.props.Login.masterData.MJSelectedTest}\r\n                                            primaryKeyField=\"ntransactiontestcode\"\r\n                                            //getMasterDetail={this.props.getMJTestChildTabDetailTestWise}\r\n                                            getMasterDetail={(event, status) => { this.props.getMJTestChildTabDetailTestWise(event, status); this.state.enableAutoClick && this.changePropertyView(1,\"IDS_ATTACHMENTS\", event, \"click\") }}\r\n                                            inputParam={testChildGetParam}\r\n                                            subFieldsLabel={true}\r\n                                            additionalParam={['']}\r\n                                            mainField={'stestsynonym'}\r\n                                            selectionList={this.props.Login.masterData.FilterStatus}\r\n                                            selectionField=\"ntransactionstatus\"\r\n                                            selectionFieldName=\"sfilterstatus\"\r\n                                            selectionColorField=\"scolorhexcode\"\r\n                                            selectedListName=\"MJSelectedTest\"\r\n                                            objectName=\"test\"\r\n                                            listName=\"IDS_TEST\"\r\n                                            filterColumnData={this.props.filterTransactionList}\r\n                                            searchListName=\"searchedTest\"\r\n                                            needValidation={true}\r\n                                            validationKey=\"napprovalversioncode\"\r\n                                            validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                            showFilter={this.props.Login.showFilter}\r\n                                            openFilter={this.openFilter}\r\n                                            closeFilter={this.closeFilter}\r\n                                            onFilterSubmit={this.onFilterSubmit}\r\n                                            subFields={this.state.DynamicTestColumns}\r\n                                            //  moreField={this.state.testMoreField}\r\n                                            jsonDesignFields={true}\r\n                                            jsonField={'jsondata'}\r\n                                            showStatusLink={true}\r\n                                            statusFieldName=\"stransdisplaystatus\"\r\n                                            statusField=\"ntransactionstatus\"\r\n                                            // statusColor=\"stranscolor\"\r\n                                            showStatusIcon={false}\r\n                                            showStatusName={true}\r\n                                            needFilter={true}\r\n                                            searchRef={this.searchTestRef}\r\n                                            filterParam={filterTestParam}\r\n                                            skip={this.state.testskip}\r\n                                            take={this.state.testtake}\r\n                                            handlePageChange={this.handleTestPageChange}\r\n                                            showStatusBlink={true}\r\n                                            splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                            childTabsKey={[\"RegistrationTestAttachment\", \"RegistrationTestComment\"]}\r\n                                            commonActions={\r\n                                                <>\r\n                                                    <ProductList className=\"d-flex product-category float-right\">\r\n                                                        {/* <Nav.Link \r\n                                                        data-for=\"tooltip-common-wrap\" \r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ACCEPT\" })} \r\n                                                        hidden={this.state.userRoleControlRights.indexOf(TestAcceptActionId) === -1} \r\n                                                        className=\"btn btn-icon-rounded btn-circle solid-blue ml-2\" role=\"button\"\r\n                                                        onClick={() => this.props.getAcceptTestTestWise({testGetParam, MJSelectedTest: this.props.Login.masterData.MJSelectedTest,userInfo: this.props.Login.userInfo, ncontrolcode:TestAcceptActionId})}>\r\n                                                        <FontAwesomeIcon icon={faCheck} />\r\n                                                    </Nav.Link> */}\r\n\r\n\r\n                                                        {this.props.Login.masterData.actionStatus &&\r\n                                                            this.state.userRoleControlRights.indexOf(TestMyJobActionId) !== -1 &&\r\n                                                            actionStatus.length > 0 ?\r\n                                                            <CustomPopOver\r\n                                                                icon={faBolt}\r\n                                                                nav={true}\r\n                                                                data={actionStatus}\r\n                                                                btnClasses=\"btn-circle btn_grey ml-2 spacesremovefromaction\"\r\n                                                                //dynamicButton={(value) => this.props.getAcceptTestTestWise(value,testGetParam,this.props.Login.masterData.MJSelectedTest,this.props.Login.userInfo)}\r\n                                                                dynamicButton={(value) => this.onAcceptTestWise(value, testGetParam, this.props.Login.masterData.MJSelectedTest, this.props.Login.userInfo)}\r\n                                                                textKey=\"scontrolname\"\r\n                                                                iconKey=\"ncontrolcode\"\r\n                                                            >\r\n                                                            </CustomPopOver>\r\n                                                            : \"\"}\r\n\r\n                                                        <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                            onClick={() => this.onReload()}\r\n                                                            data-for=\"tooltip-common-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                            <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                        </Button>\r\n                                                    </ProductList>\r\n                                                </>\r\n                                            }\r\n                                            filterComponent={[\r\n                                                {\r\n                                                    \"Sample Filter\": <TestWiseMyJobsFilter\r\n                                                        SampleType={this.state.SampletypeList || []}\r\n                                                        SampleTypeValue={this.props.Login.masterData.realSampleTypeValue || []}\r\n                                                        RegType={this.state.RegistrationTypeList || []}\r\n                                                        RegTypeValue={this.props.Login.masterData.realRegTypeValue || []}\r\n                                                        RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                                        RegSubTypeValue={this.props.Login.masterData.realRegSubTypeValue || []}\r\n                                                        ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                                        ApprovalVersionValue={this.props.Login.masterData.realApprovalVersionValue || []}\r\n                                                        UserSection={this.state.UserSectionList || []}\r\n                                                        UserSectionValue={this.props.Login.masterData.realUserSectionValue || []}\r\n                                                        JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                                        Test={this.state.TestList || []}\r\n                                                        TestValue={this.props.Login.masterData.realTestValue || []}\r\n                                                        FilterStatus={this.state.FilterStatusList || []}\r\n                                                        FilterStatusValue={this.props.Login.masterData.realFilterStatusValue || []}\r\n                                                        fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                                        toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                                        onFilterComboChange={this.onFilterComboChange}\r\n                                                        handleDateChange={this.handleDateChange}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n\r\n                                                    />\r\n                                                }\r\n                                            ]}\r\n\r\n                                        />\r\n                                        {/* <ScrollBar> */}\r\n                                        {/* <SplitterLayout\r\n                                    customClassName=\"detailed-inner no-height\"\r\n                                    vertical\r\n                                    borderColor=\"#999\"\r\n                                    primaryIndex={1}\r\n                                   // onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\r\n                                    secondaryInitialSize={window.outerHeight - 260}\r\n\r\n                                    // secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                    // onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                    // primaryMinSize={40}\r\n                                    // secondaryMinSize={30}\r\n                                > */}\r\n                                        {/* <div> */}\r\n                                        <ContentPanel cardHead={94}>\r\n                                            <Card className=\"border-0\">\r\n                                                <Card.Body className='p-0'>\r\n                                                    <Row>\r\n                                                        <Col md={12}>\r\n                                                            <Card className='p-0'>\r\n                                                                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                    <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                                        <h4 >{this.props.intl.formatMessage({ id: \"IDS_SAMPLEINFO\" })}</h4>\r\n                                                                    </span>\r\n                                                                </Card.Header>\r\n                                                                <Card.Body>\r\n                                                                    <ScrollBar>\r\n                                                                        <div style={{ height: this.state.initialVerticalWidth }}>\r\n                                                                            {this.props.Login.masterData.MJSelectedTest && this.props.Login.masterData.MJSelectedTest.length === 1 ?\r\n\r\n\r\n                                                                                <TestWiseMyJobsSampleInfoView\r\n                                                                                    data={(this.props.Login.masterData.MJSelectedTest && this.props.Login.masterData.MJSelectedTest.length > 0) ?\r\n                                                                                        this.props.Login.masterData.MJSelectedTest[this.props.Login.masterData.MJSelectedTest.length - 1] : {}}\r\n                                                                                    SingleItem={this.props.Login.masterData.MJSelectedTest && this.props.Login.masterData.MJSelectedTest ?\r\n                                                                                        this.state.SingleItem : []}\r\n                                                                                    screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                    userInfo={this.props.Login.userInfo}\r\n                                                                                />\r\n                                                                                :\r\n                                                                                <TestWiseMyJobsSampleInfoGrid\r\n                                                                                    selectedSample={this.props.Login.masterData.MJSelectedTest}\r\n                                                                                    userInfo={this.props.Login.userInfo || {}}\r\n                                                                                    masterData={this.props.Login.masterData}\r\n                                                                                    inputParam={this.props.Login.inputParam}\r\n                                                                                    dataState={this.state.sampleGridDataState}\r\n                                                                                    dataStateChange={this.sampleInfoDataStateChange}\r\n                                                                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                    detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                                                    primaryKeyField={\"npreregno\"}\r\n                                                                                    expandField=\"expanded\"\r\n                                                                                    screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                // jsonField={\"jsondata\"}\r\n                                                                                />\r\n\r\n\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </ScrollBar>\r\n                                                                </Card.Body>\r\n                                                            </Card>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </ContentPanel>\r\n                                        {/* </div> */}\r\n                                        {/* <div>\r\n                                    <ScrollBar>\r\n                                    <div style={{ height: \"calc(110vh - \" + (+this.state.initialVerticalWidth + 100) + \"px)\" }}>\r\n                                        {this.state.showTest ?\r\n                                            <Card>\r\n                                                <CustomTabs paneHeight={this.state.tabPane} activeKey={this.props.Login.activeTestTab || \"IDS_RESULTS\"}\r\n                                                            tabDetail={this.testTabDetail()} onTabChange={this.onTestTabChange} />\r\n                                            </Card>\r\n                                        : \"\"}\r\n                                        </div>\r\n                                    </ScrollBar>\r\n                                    </div> */}\r\n                                        {/* </SplitterLayout>\r\n                             </ScrollBar>  */}\r\n                                    </SplitterLayout>\r\n                                </div>\r\n                                <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${this.state.activeTabIndex ? 'active' : \"\"}`} >\r\n                                    <div className={`${this.state.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${this.state.activeTabIndex ? 'active' : \"\"}`} style={{ width: this.state.enablePropertyPopup ? this.state.propertyPopupWidth + '%' : \"\" }}>\r\n                                        <span className={` vertical-tab-close ${this.state.activeTabIndex ? 'active' : \"\"}`} onClick={() => this.changePropertyViewClose(false)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n\r\n                                        <div className={` vertical-tab-content-attachment  ${this.state.activeTabIndex && this.state.activeTabIndex == 1 ? 'active' : \"\"}`}>\r\n                                        <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TESTATTACHMENTS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 1 ? this.sideNavDetail(\"IDS_TESTATTACHMENTS\") : \"\"}\r\n                                        </div>\r\n                                        <div className={` vertical-tab-content-comments  ${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`}>\r\n                                        <h4 className='inner_h4'>\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_TESTCOMMENTS\" })}\r\n                                            </h4>\r\n                                            {this.state.activeTabIndex && this.state.activeTabIndex == 2 ? this.sideNavDetail(\"IDS_TESTCOMMENTS\") : \"\"}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='tab-head'>\r\n\r\n                                        <ul>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 1? 'active' : \"\"}`} onClick={() => this.changePropertyView(1, \"IDS_ATTACHMENTS\")}>\r\n                                                <FontAwesomeIcon icon={faLink} className={\"fa-beat\"}/>\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_ATTACHMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                            <li className={`${this.state.activeTabIndex && this.state.activeTabIndex == 2 ? 'active' : \"\"}`} onClick={() => this.changePropertyView(2, \"IDS_COMMENTS\")}>\r\n                                                <FontAwesomeIcon icon={faComments} />\r\n                                                <span>\r\n                                                    {this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                                </span>\r\n                                            </li>\r\n                                        </ul>\r\n                                        <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={\"Auto Show\"}\r\n                                                type=\"switch\"\r\n                                                name={\"Auto Click\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enableAutoClick}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enableAutoClick}\r\n                                            />\r\n                                        </span>\r\n                                        {/* <span className='tab-click-toggle-btn'>\r\n                                            <CustomSwitch\r\n                                                label={\"Popup Nav\"}\r\n                                                type=\"switch\"\r\n                                                name={\"PopupNav\"}\r\n                                                onChange={(event) => this.onInputSwitchOnChange(event)}\r\n                                                defaultValue={this.state.enablePropertyPopup}\r\n                                                isMandatory={false}\r\n                                                required={true}\r\n                                                checked={this.state.enablePropertyPopup}\r\n                                            />\r\n                                        </span> */}\r\n                                    </div>\r\n                                </div>\r\n                            </ListWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        esign={this.props.Login.loadEsign}\r\n                        onSaveClick={this.onSaveClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        showSaveContinue={this.state.showSaveContinue}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : \"\"}\r\n                    /> : \"\"}\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            testListColumns, SingleItem,\r\n            testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            testAttachmentDataState, testCommentDataState,\r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList,DynamicDesignMappingList,  testskip, testtake, selectedFilter,\r\n            DynamicTestColumns, DynamicGridItem,\r\n            DynamicGridMoreField,activeTabIndex } = this.state;\r\n        let bool = false;\r\n\r\n        if (this.props.Login.activeTabIndex !== previousProps.Login.activeTabIndex) {\r\n            activeTabIndex = this.props.Login.activeTabIndex;\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, group: [{ field: 'sarno' }] }\r\n\r\n                testAttachmentDataState = dataState\r\n                testCommentDataState = dataState\r\n\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const  RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, false);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, false);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, false);\r\n            const  DynamicDesignMappingListMap = constructOptionList(this.props.Login.masterData.DynamicDesignMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", \"nsorter\", 'ascending', 'ndesigntemplatemappingcode', false);\r\n\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            DynamicDesignMappingList = DynamicDesignMappingListMap.get(\"OptionList\");\r\n          \r\n            bool = true;\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n\r\n            if (this.props.Login.testAttachmentDataState && this.props.Login.testAttachmentDataState !== previousProps.Login.testAttachmentDataState) {\r\n                testAttachmentDataState = this.props.Login.testAttachmentDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitems ? dynamicColumn.samplegridmoreitems : [];\r\n\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\r\n            testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                 testListColumns, SingleItem,\r\n                 testListMainField,\r\n                 SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                 testAttachmentDataState, testCommentDataState,\r\n                 selectedRecord, SampletypeList, RegistrationTypeList,\r\n                 RegistrationSubTypeList, FilterStatusList,\r\n                 ConfigVersionList, UserSectionList, TestList,DynamicDesignMappingList,\r\n                 testskip, testtake, selectedFilter,\r\n                 DynamicTestColumns, DynamicGridItem,\r\n                 DynamicGridMoreField\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n\r\n        return temparray;\r\n    }\r\n\r\n    testTabDetail = () => {\r\n        const testTabMap = new Map();\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.MJ_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.MJSelectedTest, \"ntransactiontestcode\");\r\n        let ntransactiontestcode = this.props.Login.masterData.MJSelectedTest ? this.props.Login.masterData.MJSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        if (this.state.showTest) {\r\n\r\n\r\n\r\n            testTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n                screenName=\"IDS_TESTATTACHMENTS\"\r\n                selectedMaster={selectedTestList}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={selectedTestList}\r\n                masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n                addName={\"AddTestAttachment\"}\r\n                editName={\"EditTestAttachment\"}\r\n                deleteName={\"DeleteTestAttachment\"}\r\n                viewName={\"ViewTestAttachment\"}\r\n                methodUrl={\"TestAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData[\"RegSubTypeValue\"]}\r\n                subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"dcreateddate\" }]}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"TestAttachment\",\r\n                        ntransactiontestcode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\",\r\n                    masterList: selectedTestList\r\n\r\n                }}\r\n                selectedListName=\"IDS_TESTS\"\r\n                displayName=\"stestsynonym\"\r\n            />)\r\n            testTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n                screenName=\"IDS_TESTCOMMENTS\"\r\n                selectedMaster={selectedTestList}\r\n                onSaveClick={this.onCommentsSaveClick}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n                fetchRecord={this.props.getCommentsCombo}\r\n                masterList={selectedTestList}\r\n                masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n                addName={\"AddTestComment\"}\r\n                editName={\"EditTestComment\"}\r\n                deleteName={\"DeleteTestComment\"}\r\n                methodUrl={\"TestComment\"}\r\n                isTestComment={false}\r\n                primaryKeyField={\"ntestcommentcode\"}\r\n                dataState={this.state.testCommentDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                masterData={this.props.Login.masterData}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"TestComment\",\r\n                        ntransactiontestcode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\",\r\n                    operation: \"update\",\r\n                    masterList: selectedTestList,\r\n                    ncontrolCode: editTestCommentsId\r\n\r\n                }}\r\n                selectedListName=\"IDS_TESTS\"\r\n                displayName=\"stestsynonym\"\r\n            />)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        return testTabMap;\r\n    }\r\n\r\n    onTestTabChange = (tabProps) => {\r\n\r\n        const activeTestTab = tabProps.screenName;\r\n        if (activeTestTab !== this.props.Login.activeTestTab) {\r\n            if (this.props.Login.masterData.MJSelectedTest && this.props.Login.masterData.MJSelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    MJSelectedTest: this.props.Login.masterData.MJSelectedTest,\r\n                    ntransactiontestcode: this.props.Login.masterData.MJSelectedTest ?\r\n                        String(this.props.Login.masterData.MJSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                    npreregno: this.props.Login.masterData.selectedSample ?\r\n                        this.props.Login.masterData.selectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    testAttachmentDataState: this.state.testAttachmentDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                }\r\n                this.props.getMJTestChildTabDetailTestWise(inputData, true)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.realSampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        realSampleTypeValue: comboData.item\r\n                    };\r\n                    this.props.getRegTypeTestWise(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.realRegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        realRegTypeValue: comboData.item\r\n                    }\r\n                    this.props.getRegSubTypeTestWise(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nneedtemplatebasedflow: comboData.item.nneedtemplatebasedflow,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            realRegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getAppConfigVersionTestWise(inputParamData)\r\n                }\r\n            }\r\n\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.realApprovalVersionValue.napproveconfversioncode) {\r\n\r\n                    inputParamData = {\r\n                        nflag: 5,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, realApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                        nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.realUserSectionValue.nsectioncode,\r\n                    }\r\n                    this.props.getFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.realUserSectionValue.nsectioncode) {\r\n                    inputParamData = {\r\n                        nflag: 6,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        nsectioncode: comboData.value === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, realUserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                        ntransactionstatus: JSON.stringify(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                        stransactionstatus: this.props.Login.masterData.realFilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.realFilterStatusValue.ntransactionstatus,\r\n                    }\r\n\r\n                    this.props.getSectionTestWise(inputParamData);\r\n                }\r\n            } else if (fieldName === 'ntransactionstatus') {\r\n                if (comboData.value !== this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) {\r\n\r\n                    inputParamData = {\r\n                        nflag: 7,\r\n                        fromdate: obj.fromDate,\r\n                        todate: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        //nsectioncode:this.props.Login.masterData.realUserSectionValue.nsectioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, realFilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                        ntransactionstatus: comboData.value === -1 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value\r\n\r\n                    }\r\n\r\n                    this.props.getFilterStatusTestWise(inputParamData);\r\n                }\r\n            }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.realTestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, realTestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }else if(fieldName === 'ndesigntemplatemappingcode'){\r\n                if (comboData.value !== this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) {\r\n                    let masterData = { ...this.props.Login.masterData, realDesignTemplateMappingValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }   \r\n            }\r\n            else {\r\n                if (comboData.value !== this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) {\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.realUserSectionValue.nsectioncode,\r\n                    }\r\n\r\n                    this.props.getTestStatusTestWise(inputParamData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let fromdate = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let todate = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, todate, this.props.Login.userInfo)\r\n            fromdate = obj.fromDate\r\n            todate = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(fromdate, dateValue, this.props.Login.userInfo)\r\n            fromdate = obj.fromDate\r\n            todate = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                fromdate: String(fromdate),\r\n                todate: String(todate),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getAppConfigVersionTestWise(inputParam)\r\n    }\r\n\r\n    onReload = () => {\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue,realDesignTemplateMappingValue } = this.props.Login.masterData\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue,realDesignTemplateMappingValue }\r\n        let inputData = {\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: String(realFilterStatusValue ? realFilterStatusValue.ntransactionstatus : -1),\r\n            // ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : -1,\r\n            napprovalconfigcode: (realApprovalVersionValue && realApprovalVersionValue.napprovalconfigcode) || -1,\r\n            napprovalversioncode: String(realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigversioncode : 1),\r\n            // napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            ndesigntemplatemappingcode:(realDesignTemplateMappingValue && realDesignTemplateMappingValue.ndesigntemplatemappingcode)||-1,\r\n            userinfo: this.props.Login.userInfo,\r\n            showTest: true,\r\n            activeTestTab: this.props.Login.activeTestTab || \"\",\r\n            checkBoxOperation:3,\r\n            ntype:2\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== -1 && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== -1\r\n            && realUserSectionValue.nsectioncode !== null && realTestValue.ntestcode !== -1) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['fromdate'] = obj.fromDate;\r\n            inputData['todate'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchTestRef: this.searchTestRef,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                testAttachmentDataState: this.state.testAttachmentDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n\r\n            }\r\n            this.props.getMyJobsSampleTestWise(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n    onFilterSubmit = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n\r\n        let realFromDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate);\r\n        let realToDate = rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate);\r\n\r\n        let realSampleTypeValue = this.props.Login.masterData.realSampleTypeValue \r\n        let realRegTypeValue = this.props.Login.masterData.realRegTypeValue \r\n        let realRegSubTypeValue = this.props.Login.masterData.realRegSubTypeValue \r\n        let realFilterStatusValue = this.props.Login.masterData.realFilterStatusValue \r\n        let realApprovalVersionValue = this.props.Login.masterData.realApprovalVersionValue \r\n        let realUserSectionValue = this.props.Login.masterData.realUserSectionValue \r\n        let realTestValue = this.props.Login.masterData.realTestValue \r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.realDesignTemplateMappingValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue,realDesignTemplateMappingValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || -1,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            ndesigntemplatemappingcode:(this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode)||-1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab,\r\n            checkBoxOperation: 3,\r\n            ntype:2\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null && inputData.nsectioncode !== \"undefined\" && inputData.ntestcode !== undefined) {\r\n\r\n            inputData['fromdate'] = obj.fromDate;\r\n            inputData['todate'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                testAttachmentDataState: this.state.testAttachmentDataState,\r\n                testCommentDataState: this.state.testCommentDataState\r\n\r\n            }\r\n            this.props.getMyJobsSampleTestWise(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n\r\n    onAcceptTestWise = (action, inputParam, MJSelectedTest, userInfo) => {\r\n        let inputData = {};\r\n        let Map = {\r\n            nflag: 3,\r\n            ncheck: 1,\r\n            nsampletypecode: inputParam.nsampletypecode,\r\n            nregtypecode: inputParam.nregtypecode,\r\n            nregsubtypecode: inputParam.nregsubtypecode,\r\n            ntransactionstatus: inputParam.ntransactionstatus,\r\n            napprovalversioncode: inputParam.napprovalversioncode,\r\n            nsectioncode: inputParam.nsectioncode,\r\n            ntestcode: inputParam.ntestcode,\r\n            fromdate: inputParam.dfrom,\r\n            todate: inputParam.dto,\r\n            npreregno: MJSelectedTest ? MJSelectedTest.map(sample => sample.npreregno).join(\",\") : \"\",\r\n            ntransactionsamplecode: MJSelectedTest ? MJSelectedTest.map(subsample => subsample.ntransactionsamplecode).join(\",\") : \"\",\r\n            transactiontestcode: MJSelectedTest ? MJSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"\",\r\n            ntransactiontestcode: 0,\r\n            ncontrolcode : action.ncontrolcode,\r\n            nneedsubsample:inputParam.masterData.nneedsubsample,\r\n            nneedtemplatebasedflow :inputParam.masterData.nneedtemplatebasedflow,\r\n            ndesigntemplatemappingcode :inputParam.ndesigntemplatemappingcode,\r\n            checkBoxOperation:3,\r\n            scontrolname : action.scontrolname,\r\n            userinfo: userInfo,\r\n            masterData: inputParam.masterData\r\n        }\r\n        inputParam = {\r\n            inputData: Map,\r\n            masterData: inputParam.masterData,\r\n        }\r\n        if (inputParam.inputData.transactiontestcode && inputParam.inputData.transactiontestcode.length > 0) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, action.ncontrolcode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true,\r\n                        parentPopUpSize: 'lg',\r\n                        screenName: this.props.Login.screenName,\r\n                        operation: 'accept'\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.getAcceptTestTestWise(inputParam);\r\n            }\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    testDataStateChange = (event) => {\r\n\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n\r\n            default:\r\n                this.setState({\r\n                    testAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            case \"IDS_SAMPLEINFO\":\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SAMPLEAPPROVALHISTORY\":\r\n                this.setState({\r\n                    sampleHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_PRINTHISTORY\":\r\n                this.setState({\r\n                    samplePrintHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_REPORTHISTORY\":\r\n                this.setState({\r\n                    reportHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let showReport = this.props.Login.showReport;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n            selectedRecord.agree = false;\r\n            openModal = false;\r\n\r\n        } else {\r\n            selectedRecord = {};\r\n            showReport = false;\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, showReport }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let templateData = this.props.Login.templateData;\r\n        let operation = this.props.Login.operation;\r\n        let openTemplateModal = this.props.Login.openTemplateModal;\r\n        if (this.props.Login.loadEsign) {\r\n            if (operation === \"accept\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n                templateData = {};\r\n                operation = undefined;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openTemplateModal = false;\r\n            openModal = false;\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n            templateData = {}\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, openChildModal, loadEsign, selectedRecord, templateData, selectedParamId: null, operation, openTemplateModal }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData,\r\n            operation: this.props.Login.operation\r\n        }\r\n        if (this.props.Login.operation === 'accept') {\r\n            this.props.validateEsignforAccept(inputParam, \"openChildModal\");\r\n        } else {\r\n            this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n        }\r\n    }\r\n\r\n    getActiveTestURL() {\r\n        let url = \"attachment/getTestAttachment\"\r\n        switch (this.props.Login.activeTestTab) {\r\n\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n            default:\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n            let { testskip, testtake } = this.state\r\n            let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.MJ_TEST];\r\n            testList = testList.slice(testskip, testskip + testtake);\r\n            let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.MJSelectedTest, \"ntransactiontestcode\");\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                isTestComment: this.props.isTestComment,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                ntransactiontestcode: this.props.Login.masterData.MJSelectedTest ? this.props.Login.masterData.MJSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n        }\r\n\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n        }\r\n\r\n    }\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.MJ_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.MJSelectedTest, \"ntransactiontestcode\");\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let ok = true;\r\n        if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactiontestcode: this.props.Login.masterData.MJSelectedTest ? this.props.Login.masterData.MJSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedTestList.length > 0) {\r\n                inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getMyJobsubSampleDetailTestWise, getMyJobTestDetailTestWise, getMJTestChildTabDetailTestWise, performAction, updateStore, viewAttachment, checkListRecord,\r\n    updateDecision, getRegTypeTestWise, getRegSubTypeTestWise, getTestStatusTestWise, getSectionTestWise, getFilterStatusTestWise, getMyJobsSampleTestWise, getStatusCombo,\r\n    validateEsignCredential, crudMaster, validateEsignforAccept, getAppConfigVersionTestWise, getAcceptTestTestWise, filterTransactionList,\r\n    getMJSampleChildTabDetailTestWise, getAttachmentCombo, deleteAttachment, getCommentsCombo, previewSampleReport,\r\n    generateCOAReport, getEnforceCommentsHistory, reportGenerate\r\n})(injectIntl(TestWiseMyJobs))"]},"metadata":{},"sourceType":"module"}