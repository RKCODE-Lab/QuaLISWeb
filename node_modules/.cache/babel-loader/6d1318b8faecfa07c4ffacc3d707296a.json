{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{LocalizationProvider}from'@progress/kendo-react-intl';import React from'react';import{injectIntl}from'react-intl';import ReactTooltip from'react-tooltip';import{AtTabs}from'../../components/custom-tabs/custom-tabs.styles';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import PerfectScrollbar from'react-perfect-scrollbar';import Tabs,{TabPane}from\"rc-tabs\";import{AtTableWrap}from'../../components/data-grid/data-grid.styles';import{formCode,TemplateType}from'../../components/Enumeration';import'rc-tabs/assets/index.css';import{Grid,GridColumn}from'@progress/kendo-react-grid';var ConfigureAuditFields=/*#__PURE__*/function(_React$Component){_inherits(ConfigureAuditFields,_React$Component);var _super=_createSuper(ConfigureAuditFields);function ConfigureAuditFields(props){var _this;_classCallCheck(this,ConfigureAuditFields);_this=_super.call(this,props);_this.onTabChange=function(tab){_this.setState({selectedScreen:_this.state.screens.find(function(screen){return screen.eventKey===tab;})});};_this.onAuditTabChange=function(tab){_this.setState({selectedAuditTable:_this.state.auditTable.find(function(screen){return screen.eventKey===tab;}),extractedColumnList:tab===\"registrationsample\"?_this.state.subSampleColumnList:_this.state.sampleColumnList});};if(_this.props.selectedTemplateType===TemplateType.Masters){var screens=[{eventKey:'dynamicmaster',name:Object.values(_this.props.auditData)[0][\"dynamicmaster\"][\"sformname\"],formcode:Object.keys(_this.props.auditData)[0]}];var sampleColumnList=[{\"title\":\"IDS_AUDITOTHERACTIONCAPTURE\",\"field\":\"sampleauditfields\",\"width\":\"600px\"},{\"title\":\"IDS_AUDITEDITCAPTURE\",\"field\":\"sampleauditeditfields\",\"width\":\"600px\"}];var auditTable=[{eventKey:'dynamicmaster',name:\"IDS_FIELDS\"}];_this.state={screens:screens,auditTable:auditTable,sampleColumnList:sampleColumnList,extractedColumnList:sampleColumnList,selectedScreen:{eventKey:'dynamicmaster',name:Object.values(_this.props.auditData)[0][\"dynamicmaster\"][\"sformname\"],formcode:Object.keys(_this.props.auditData)[0]},selectedAuditTable:{eventKey:'dynamicmaster',name:\"IDS_FIELDS\",formcode:1}};}else{var _screens=[{eventKey:'registration',name:\"IDS_SAMPLEREGISTRATION\",formcode:formCode.SAMPLEREGISTRATION}];var _sampleColumnList=[{\"title\":\"IDS_AUDITOTHERACTIONCAPTURE\",\"field\":\"sampleauditfields\",\"width\":\"600px\"},{\"title\":\"IDS_AUDITEDITCAPTURE\",\"field\":\"sampleauditeditfields\",\"width\":\"600px\"}];var subSampleColumnList=[{\"title\":\"IDS_AUDITOTHERACTIONCAPTURE\",\"field\":\"subsampleauditfields\",\"width\":\"600px\"},{\"title\":\"IDS_AUDITEDITCAPTURE\",\"field\":\"subsampleauditeditfields\",\"width\":\"600px\"}];var _auditTable=[{eventKey:'registration',name:\"IDS_SAMPLEFIELDS\"}];if(_this.props.needSubSample){_auditTable.push({eventKey:'registrationsample',name:\"IDS_SUBSAMPLEFIELDS\"});}_this.state={screens:_screens,auditTable:_auditTable,sampleColumnList:_sampleColumnList,subSampleColumnList:subSampleColumnList,extractedColumnList:_sampleColumnList,selectedScreen:{eventKey:'registration',name:\"IDS_SAMPLEREGISTRATION\",formcode:formCode.SAMPLEREGISTRATION},selectedAuditTable:{eventKey:'registration',name:\"IDS_SAMPLEFIELDS\",formcode:1}};}return _this;}_createClass(ConfigureAuditFields,[{key:\"render\",value:function render(){var _this2=this;//console.log(\"props:\",this.props, this.state);\n//console.log(\" this.props.dataResult[this.state.selectedScreen.formcode]:\", this.props.dataResult[this.state.selectedScreen.formcode]);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AtTabs,null,/*#__PURE__*/React.createElement(Tabs,{activeKey:this.state.selectedScreen.eventKey,moreIcon:\"...\",onChange:this.onTabChange},this.state.screens.map(function(screen){return/*#__PURE__*/ (//{\n//return console.log(\"screen.name:\", screen.name, this.props.dataResult[this.state.selectedScreen.formcode]),\nReact.createElement(TabPane,{name:screen.eventKey,tab:_this2.props.intl.formatMessage({id:screen.name}),key:screen.eventKey},/*#__PURE__*/React.createElement(Tabs,{activeKey:_this2.state.selectedAuditTable.eventKey,moreIcon:\"...\",onChange:_this2.onAuditTabChange},_this2.state.auditTable.map(function(auditTable){return/*#__PURE__*/ (//{\n//return console.log(\"screen.name2:\", auditTable.name, this.props.dataResult[this.state.selectedScreen.formcode][this.state.selectedAuditTable.eventKey]),\nReact.createElement(TabPane,{name:auditTable.eventKey,tab:_this2.props.intl.formatMessage({id:auditTable.name}),key:auditTable.eventKey},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",id:\"tooltip-grid-wrap\",globalEventOff:\"click\"}),/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:\"lang\"},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,Object.assign({className:\"active-paging\",style:{height:'550px'},resizable:true,reorderable:true,scrollable:\"scrollable\",data:_this2.props.dataResult[_this2.state.selectedScreen.formcode][_this2.state.selectedAuditTable.eventKey]},_this2.state.dataState,{onDataStateChange:_this2.dataStateChange}),/*#__PURE__*/React.createElement(GridColumn,{field:\"label\",title:_this2.props.intl.formatMessage({id:\"IDS_FIELDS\"}),cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"]['label'],\"data-for\":\"tooltip-grid-wrap\"},row[\"dataItem\"]['label']);}}),_this2.state.extractedColumnList.map(function(column){return/*#__PURE__*/React.createElement(GridColumn,{field:column.field,title:_this2.props.intl.formatMessage({id:column.title}),headerClassName:\"text-center\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"},\"data-tip\":_this2.props.intl.formatMessage({id:column.title}),\"data-for\":\"tooltip-grid-wrap\"},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][column.field],onChange:function onChange(event){return _this2.props.onChangeToggle(event,row[\"dataItem\"],column.field,row.dataIndex,_this2.state.selectedScreen.formcode,_this2.props.operation);},checked:row[\"dataItem\"][column.field]||false,name:row[\"dataItem\"][\"label\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex}));}});}))))),/*#__PURE__*/React.createElement(ReactTooltip,null))));}//}\n))));}//}\n))));}}]);return ConfigureAuditFields;}(React.Component);export default injectIntl(ConfigureAuditFields);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/designtemplatemapping/ConfigureAuditFields.jsx"],"names":["LocalizationProvider","React","injectIntl","ReactTooltip","AtTabs","CustomSwitch","PerfectScrollbar","Tabs","TabPane","AtTableWrap","formCode","TemplateType","Grid","GridColumn","ConfigureAuditFields","props","onTabChange","tab","setState","selectedScreen","state","screens","find","screen","eventKey","onAuditTabChange","selectedAuditTable","auditTable","extractedColumnList","subSampleColumnList","sampleColumnList","selectedTemplateType","Masters","name","Object","values","auditData","formcode","keys","SAMPLEREGISTRATION","needSubSample","push","map","intl","formatMessage","id","height","dataResult","dataState","dataStateChange","row","column","field","title","textAlign","event","onChangeToggle","dataIndex","operation","columnIndex","Component"],"mappings":"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","sourcesContent":["import { LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport React from 'react'\r\nimport { injectIntl} from 'react-intl'\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { AtTabs } from '../../components/custom-tabs/custom-tabs.styles';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\n\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport Tabs, { TabPane } from \"rc-tabs\";\r\nimport { AtTableWrap } from '../../components/data-grid/data-grid.styles';\r\nimport { formCode, TemplateType } from '../../components/Enumeration';\r\nimport 'rc-tabs/assets/index.css';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\n\r\n\r\nclass ConfigureAuditFields extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        if(this.props.selectedTemplateType === TemplateType.Masters ){\r\n            const  screens = [{ eventKey: 'dynamicmaster', name: Object.values(this.props.auditData)[0][\"dynamicmaster\"][\"sformname\"], formcode: Object.keys(this.props.auditData)[0] }];\r\n            let sampleColumnList =[  { \"title\": \"IDS_AUDITOTHERACTIONCAPTURE\", \"field\": \"sampleauditfields\", \"width\": \"600px\" },\r\n                                     { \"title\": \"IDS_AUDITEDITCAPTURE\", \"field\": \"sampleauditeditfields\", \"width\": \"600px\" },\r\n                                ];\r\n            const  auditTable = [{ eventKey: 'dynamicmaster', name: \"IDS_FIELDS\" },];\r\n\r\n            this.state = {\r\n                screens,auditTable,\r\n                sampleColumnList,\r\n                extractedColumnList:sampleColumnList,\r\n                selectedScreen: { eventKey: 'dynamicmaster', name: Object.values(this.props.auditData)[0][\"dynamicmaster\"][\"sformname\"], formcode:  Object.keys(this.props.auditData)[0]},\r\n                selectedAuditTable: { eventKey: 'dynamicmaster', name: \"IDS_FIELDS\", formcode: 1}\r\n            }\r\n        }\r\n        else{\r\n            const  screens = [{ eventKey: 'registration', name: \"IDS_SAMPLEREGISTRATION\", formcode: formCode.SAMPLEREGISTRATION }];\r\n            let sampleColumnList =[  { \"title\": \"IDS_AUDITOTHERACTIONCAPTURE\", \"field\": \"sampleauditfields\", \"width\": \"600px\" },\r\n                                    { \"title\": \"IDS_AUDITEDITCAPTURE\", \"field\": \"sampleauditeditfields\", \"width\": \"600px\" },];\r\n            \r\n            let subSampleColumnList =[  { \"title\": \"IDS_AUDITOTHERACTIONCAPTURE\", \"field\": \"subsampleauditfields\", \"width\": \"600px\" },\r\n                                        { \"title\": \"IDS_AUDITEDITCAPTURE\", \"field\": \"subsampleauditeditfields\", \"width\": \"600px\" },];\r\n        \r\n\r\n            const  auditTable = [{ eventKey: 'registration', name: \"IDS_SAMPLEFIELDS\" },];\r\n            if(this.props.needSubSample){\r\n                    auditTable.push({ eventKey: 'registrationsample', name: \"IDS_SUBSAMPLEFIELDS\"});\r\n            }\r\n            this.state = {\r\n                screens,auditTable,\r\n                sampleColumnList, subSampleColumnList,\r\n                extractedColumnList:sampleColumnList,\r\n                selectedScreen: { eventKey: 'registration', name: \"IDS_SAMPLEREGISTRATION\", formcode: formCode.SAMPLEREGISTRATION },\r\n                selectedAuditTable: { eventKey: 'registration', name: \"IDS_SAMPLEFIELDS\", formcode: 1}\r\n            }\r\n        }\r\n    }\r\n    onTabChange = (tab) => {\r\n        this.setState({\r\n            selectedScreen: this.state.screens.find(screen => screen.eventKey === tab)\r\n        })\r\n    }\r\n\r\n    onAuditTabChange = (tab) => {\r\n        this.setState({\r\n            selectedAuditTable: this.state.auditTable.find(screen => screen.eventKey === tab),\r\n            extractedColumnList: tab === \"registrationsample\" ? this.state.subSampleColumnList : this.state.sampleColumnList\r\n        })\r\n    }\r\n    render() {\r\n      \r\n        //console.log(\"props:\",this.props, this.state);\r\n        //console.log(\" this.props.dataResult[this.state.selectedScreen.formcode]:\", this.props.dataResult[this.state.selectedScreen.formcode]);\r\n        return (\r\n            <>\r\n        {/* {this.props.selectedTemplateType === TemplateType.Masters ?\r\n                    <PerfectScrollbar>\r\n                        <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' />\r\n                        <AtTableWrap className=\"at-list-table\">\r\n                            <LocalizationProvider language=\"lang\">\r\n                                <>\r\n                                    \r\n                                </>\r\n                            </LocalizationProvider>\r\n                        </AtTableWrap>\r\n                        <ReactTooltip />\r\n                    </PerfectScrollbar>        \r\n\r\n                : */}\r\n                <AtTabs>\r\n                    <Tabs activeKey={this.state.selectedScreen.eventKey} moreIcon=\"...\" onChange={this.onTabChange}>\r\n                        {this.state.screens.map(screen =>//{\r\n                       //return console.log(\"screen.name:\", screen.name, this.props.dataResult[this.state.selectedScreen.formcode]),\r\n                            <TabPane name={screen.eventKey} tab={this.props.intl.formatMessage({ id: screen.name })} key={screen.eventKey}>\r\n                              \r\n                              <Tabs activeKey={this.state.selectedAuditTable.eventKey} moreIcon=\"...\" onChange={this.onAuditTabChange}>\r\n                                    {this.state.auditTable.map(auditTable =>//{\r\n                                        //return console.log(\"screen.name2:\", auditTable.name, this.props.dataResult[this.state.selectedScreen.formcode][this.state.selectedAuditTable.eventKey]),\r\n                                        <TabPane name={auditTable.eventKey} tab={this.props.intl.formatMessage({ id: auditTable.name })} key={auditTable.eventKey}>\r\n                                        \r\n                                        <PerfectScrollbar>\r\n                                                <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' />\r\n                                                <AtTableWrap className=\"at-list-table\">\r\n                                                    <LocalizationProvider language=\"lang\">\r\n                                                        <>\r\n                                                        <Grid\r\n                                                                className={\"active-paging\"}\r\n                                                                style={{ height: '550px' }}\r\n                                                                resizable\r\n                                                                reorderable\r\n                                                                scrollable={\"scrollable\"}\r\n                                                                data={this.props.dataResult[this.state.selectedScreen.formcode][this.state.selectedAuditTable.eventKey]}\r\n                                                                {...this.state.dataState}\r\n                                                                onDataStateChange={this.dataStateChange}>\r\n                                                                <GridColumn\r\n                                                                    field=\"label\"\r\n                                                                    title={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                                    cell={(row) => (\r\n                                                                        <td data-tip={row[\"dataItem\"]['label']} data-for=\"tooltip-grid-wrap\">\r\n                                                                            {row[\"dataItem\"]['label']}\r\n                                                                        </td>\r\n                                                                    )}\r\n                                                                />\r\n                                                                {this.state.extractedColumnList.map(column =>\r\n                                                                    <GridColumn\r\n                                                                        field={column.field}\r\n                                                                        title={this.props.intl.formatMessage({ id: column.title })}\r\n                                                                        headerClassName=\"text-center\"\r\n                                                                        cell={(row) => (\r\n                                                                            <td style={{ textAlign: \"center\" }} data-tip={this.props.intl.formatMessage({ id: column.title })} data-for=\"tooltip-grid-wrap\">\r\n                                                                                <CustomSwitch type=\"switch\" id={row[\"dataItem\"][column.field]}\r\n                                                                                    onChange={(event) => this.props.onChangeToggle(event, row[\"dataItem\"], column.field, \r\n                                                                                                    row.dataIndex, this.state.selectedScreen.formcode,\r\n                                                                                                    this.props.operation)}\r\n                                                                                    checked={row[\"dataItem\"][column.field] || false}\r\n                                                                                    name={row[\"dataItem\"][\"label\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                                            \r\n                                                                            \r\n                                                                            </td>)}\r\n                                                                    />\r\n                                                                )}\r\n\r\n                                                        </Grid>\r\n                                                        </> \r\n                                                    \r\n                                                    </LocalizationProvider>\r\n                                                </AtTableWrap>\r\n                                                <ReactTooltip />\r\n                                            </PerfectScrollbar>\r\n                                            \r\n                                        </TabPane>\r\n                                        //}\r\n                                    )}\r\n                                </Tabs>\r\n                                \r\n                             </TabPane>\r\n                             //}\r\n                        )}\r\n                    </Tabs>\r\n                </AtTabs>\r\n           {/* // }  */}\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default injectIntl(ConfigureAuditFields)"]},"metadata":{},"sourceType":"module"}