{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{constructjsonOptionList,constructOptionList,getComboLabelValue}from'../components/CommonScript';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{intl}from'../components/App';//export function getMethodComboService (screenName, primaryKeyName, primaryKeyValue, operation, inputParam , userInfo, ncontrolCode) {            \nexport function getMaterialTypeComboService(methodParam){return function(dispatch){var methodTypeService=rsapi.post(\"materialcategory/getMaterialType\",{userinfo:methodParam.userInfo});var urlArray=[];var selectedId=null;if(methodParam.operation===\"create\"){urlArray=[methodTypeService];}else{var _rsapi$post;var url=methodParam.inputParam.classUrl+\"/getActive\"+methodParam.inputParam.methodUrl+\"ById\";//\"method/getActiveMethodById\"      \nvar methodById=rsapi.post(url,(_rsapi$post={},_defineProperty(_rsapi$post,methodParam.primaryKeyField,methodParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",methodParam.userInfo),_rsapi$post));urlArray=[methodTypeService,methodById];selectedId=methodParam.primaryKeyValue;}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var selectedRecord={};var materialCatgeoryList=constructjsonOptionList(response[0].data,\"nmaterialtypecode\",\"smaterialtypename\",undefined,undefined,undefined,undefined,undefined,true,methodParam.userInfo.slanguagetypecode);// const materialCatgeoryList = constructOptionList(response[0].data  ||[], \"nmaterialtypecode\",\n// \"smaterialtypename\" , undefined, undefined, undefined);\nvar materialCatgeoryList1=materialCatgeoryList.get(\"OptionList\");var materialCatgeorydefault=materialCatgeoryList.get(\"DefaultValue\");if(methodParam.operation===\"update\"){selectedRecord=response[1].data;selectedRecord[\"nmaterialtypecode\"]=getComboLabelValue(selectedRecord,response[0].data,\"nmaterialtypecode\",\"smaterialtypename\",'jsondata',methodParam.userInfo.slanguagetypecode);}else{selectedRecord[\"nmaterialtypecode\"]=materialCatgeorydefault;}dispatch({type:DEFAULT_RETURN,payload:{materialCatgeoryList:materialCatgeoryList1||[],operation:methodParam.operation,screenName:methodParam.screenName,selectedRecord:selectedRecord,openModal:true,ncontrolCode:methodParam.ncontrolCode,loading:false,selectedId:selectedId,needSectionwisedisabled:selectedRecord.needSectionwisedisabled}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/MaterialCategoryAction.js"],"names":["rsapi","DEFAULT_RETURN","constructjsonOptionList","constructOptionList","getComboLabelValue","toast","Axios","initRequest","intl","getMaterialTypeComboService","methodParam","dispatch","methodTypeService","post","userinfo","userInfo","urlArray","selectedId","operation","url","inputParam","classUrl","methodUrl","methodById","primaryKeyField","primaryKeyValue","all","then","response","selectedRecord","materialCatgeoryList","data","undefined","slanguagetypecode","materialCatgeoryList1","get","materialCatgeorydefault","type","payload","screenName","openModal","ncontrolCode","loading","needSectionwisedisabled","catch","error","status","formatMessage","id","message","warn"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {constructjsonOptionList, constructOptionList, getComboLabelValue} from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\n\r\n//export function getMethodComboService (screenName, primaryKeyName, primaryKeyValue, operation, inputParam , userInfo, ncontrolCode) {            \r\n    export function getMaterialTypeComboService (methodParam) {            \r\n    return function (dispatch) {   \r\n    const methodTypeService = rsapi.post(\"materialcategory/getMaterialType\", \r\n                                    {userinfo:methodParam.userInfo});\r\n    let urlArray = [];\r\n    let selectedId = null;\r\n    if (methodParam.operation === \"create\"){\r\n        urlArray = [methodTypeService];\r\n    }\r\n    else{           \r\n        const url = methodParam.inputParam.classUrl+ \"/getActive\" + methodParam.inputParam.methodUrl + \"ById\";   //\"method/getActiveMethodById\"      \r\n        const methodById =  rsapi.post(url, { [methodParam.primaryKeyField] :methodParam.primaryKeyValue, \"userinfo\": methodParam.userInfo} );\r\n        urlArray = [methodTypeService, methodById];\r\n        selectedId = methodParam.primaryKeyValue;\r\n    }\r\n    dispatch(initRequest(true));\r\n    Axios.all(urlArray)\r\n        .then(response=>{                  \r\n            \r\n            let selectedRecord =  {};\r\n          \r\n            const materialCatgeoryList = constructjsonOptionList(response[0].data,\r\n                \"nmaterialtypecode\", \"smaterialtypename\", undefined, undefined,\r\n                undefined, undefined,\r\n                undefined, true, methodParam.userInfo.slanguagetypecode)\r\n\r\n            // const materialCatgeoryList = constructOptionList(response[0].data  ||[], \"nmaterialtypecode\",\r\n            // \"smaterialtypename\" , undefined, undefined, undefined);\r\n        const  materialCatgeoryList1  = materialCatgeoryList.get(\"OptionList\");\r\n        const  materialCatgeorydefault  = materialCatgeoryList.get(\"DefaultValue\");\r\n\r\n          \r\n        if (methodParam.operation === \"update\"){\r\n            selectedRecord = response[1].data;\r\n            selectedRecord[\"nmaterialtypecode\"] = getComboLabelValue(selectedRecord, response[0].data, \r\n                \"nmaterialtypecode\", \"smaterialtypename\",'jsondata',methodParam.userInfo.slanguagetypecode); \r\n                            \r\n        }else{\r\n            selectedRecord[\"nmaterialtypecode\"] = materialCatgeorydefault; \r\n        }\r\n           \r\n            dispatch({type: DEFAULT_RETURN, payload:{materialCatgeoryList:materialCatgeoryList1|| [],                               \r\n                        operation:methodParam.operation, screenName:methodParam.screenName, selectedRecord, \r\n                        openModal : true,\r\n                        ncontrolCode:methodParam.ncontrolCode,\r\n                        loading:false,selectedId,\r\n                        needSectionwisedisabled:selectedRecord.needSectionwisedisabled\r\n                    }});\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n            if (error.response.status === 500){\r\n                toast.error(intl.formatMessage({id: error.message}));\r\n            } \r\n            else{               \r\n                toast.warn(intl.formatMessage({id: error.response.data}));\r\n            }  \r\n        })        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}