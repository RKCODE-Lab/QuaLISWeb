{"ast":null,"code":"import React from'react';import CustomAccordion from'../../components/custom-accordion/custom-accordion.component';import{injectIntl}from'react-intl';import TestGroupParameterAccordion from'./TestGroupParameterAccordion';import PerfectScrollbar from'react-perfect-scrollbar';var TestGroupParameterTab=function TestGroupParameterTab(props){//console.log('eeeefff')\nvar ClinicalSpecColumns=[//{ \"idsName\": \"IDS_GENDER\", \"dataField\": \"sgendername\", \"width\": \"150px\",\"fieldType\":\"groupHeader\"},\n{\"idsName\":\"IDS_FROMAGE\",\"mandatory\":true,\"dataField\":\"nfromage\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_TOAGE\",\"mandatory\":true,\"dataField\":\"ntoage\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_HIGHA\",\"mandatory\":true,\"dataField\":\"shigha\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_HIGHB\",\"mandatory\":true,\"dataField\":\"shighb\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_LOWA\",\"mandatory\":true,\"dataField\":\"slowa\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_LOWB\",\"mandatory\":true,\"dataField\":\"slowb\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_DEFAULTRESULT\",\"mandatory\":true,\"dataField\":\"sresultvalue\",\"width\":\"150px\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];var detailedFieldList=[{\"dataField\":\"shigha\",\"idsName\":\"IDS_HIGHA\",columnSize:\"4\"},{\"dataField\":\"shighb\",\"idsName\":\"IDS_HIGHB\",columnSize:\"4\"},{\"dataField\":\"slowa\",idsName:\"IDS_LOWA\",columnSize:\"4\"},{\"dataField\":\"slowb\",idsName:\"IDS_LOWB\",columnSize:\"12\"},{\"dataField\":\"sresultvalue\",idsName:\"IDS_DEFAULTRESULT\",columnSize:\"4\"}];var dataState={// skip: 0,\n// take : 5,\ngroup:[{field:'sgendername'}]};var _props$masterData=props.masterData,TestGroupTestParameter=_props$masterData.TestGroupTestParameter,selectedParameter=_props$masterData.selectedParameter,TestGroupTestFormula=_props$masterData.TestGroupTestFormula,TestGroupTestNumericParameter=_props$masterData.TestGroupTestNumericParameter,TestGroupTestPredefinedParameter=_props$masterData.TestGroupTestPredefinedParameter,TestGroupTestCharParameter=_props$masterData.TestGroupTestCharParameter,SelectedSpecification=_props$masterData.SelectedSpecification,TestGroupTestClinicalSpec=_props$masterData.TestGroupTestClinicalSpec,SelectedNode=_props$masterData.SelectedNode;function testGroupParameterAccordion(TestGroupParameter){var accordionMap=new Map();TestGroupParameter.map(function(testGroupParameter){return accordionMap.set(testGroupParameter.ntestparametercode,/*#__PURE__*/React.createElement(TestGroupParameterAccordion,{testgrouptestparameter:testGroupParameter,selectedSpecification:SelectedSpecification,selectedNode:SelectedNode,userRoleControlRights:props.userRoleControlRights,controlMap:props.controlMap,userInfo:props.userInfo,selectedParameter:selectedParameter,addParameter:props.addParameter,deleteAction:props.deleteAction,addCodedResult:props.addCodedResult,addFormula:props.addFormula,onSwitchChange:props.onSwitchChange,addParameterSpecification:props.addParameterSpecification,testGroupTestFormula:TestGroupTestFormula,testGroupTestNumericParameter:TestGroupTestNumericParameter,testGroupTestPredefinedParameter:TestGroupTestPredefinedParameter,testGroupCharParameter:TestGroupTestCharParameter,addTestGroupFormula:props.addTestGroupFormula,filterData:props.filterData,editTestGroupParameter:props.editTestGroupParameter,addTestGroupCodedResult:props.addTestGroupCodedResult,subCodedResultView:props.subCodedResultView,addTestGroupNumericTab:props.addTestGroupNumericTab,viewTestGroupCheckList:props.viewTestGroupCheckList,masterData:props.masterData,extractedColumnList:ClinicalSpecColumns,detailedFieldList:detailedFieldList,testGroupTestClinicalSpec:TestGroupTestClinicalSpec,data:TestGroupTestClinicalSpec||[]//dataState={dataState}\n,optionalData:{testgroupspecification:SelectedSpecification},openModal:props.addTestGroupNumericTab,EditSpecDetails:props.EditSpecDetails,DeleteSpecDetails:props.DeleteSpecDetails,hasDynamicColSize:true,dataState:props.dataState,dataStateChange:props.dataStateChange}));});return accordionMap;}return/*#__PURE__*/React.createElement(React.Fragment,null,TestGroupTestParameter&&TestGroupTestParameter.length>0&&/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"grouped-tab-inner grouped-tab-inner-test-group\"},/*#__PURE__*/React.createElement(CustomAccordion,{paneHeight:props.paneHeight,key:\"testgroupparameteraccordion\",accordionTitle:\"sparametersynonym\",accordionComponent:testGroupParameterAccordion(TestGroupTestParameter),inputParam:{masterData:props.masterData,userinfo:props.userInfo},accordionClick:props.getTestGroupParameter,accordionPrimaryKey:\"ntestgrouptestparametercode\",accordionObjectName:\"testgrouptestparameter\",selectedKey:selectedParameter?selectedParameter.ntestgrouptestparametercode:0}))));};export default injectIntl(TestGroupParameterTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/TestGroupParameterTab.jsx"],"names":["React","CustomAccordion","injectIntl","TestGroupParameterAccordion","PerfectScrollbar","TestGroupParameterTab","props","ClinicalSpecColumns","detailedFieldList","columnSize","idsName","dataState","group","field","masterData","TestGroupTestParameter","selectedParameter","TestGroupTestFormula","TestGroupTestNumericParameter","TestGroupTestPredefinedParameter","TestGroupTestCharParameter","SelectedSpecification","TestGroupTestClinicalSpec","SelectedNode","testGroupParameterAccordion","TestGroupParameter","accordionMap","Map","map","testGroupParameter","set","ntestparametercode","userRoleControlRights","controlMap","userInfo","addParameter","deleteAction","addCodedResult","addFormula","onSwitchChange","addParameterSpecification","addTestGroupFormula","filterData","editTestGroupParameter","addTestGroupCodedResult","subCodedResultView","addTestGroupNumericTab","viewTestGroupCheckList","testgroupspecification","EditSpecDetails","DeleteSpecDetails","dataStateChange","length","paneHeight","userinfo","getTestGroupParameter","ntestgrouptestparametercode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component'\r\nimport { injectIntl } from 'react-intl';\r\nimport TestGroupParameterAccordion from './TestGroupParameterAccordion';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst TestGroupParameterTab = (props) => {\r\n    //console.log('eeeefff')\r\n   const ClinicalSpecColumns = [//{ \"idsName\": \"IDS_GENDER\", \"dataField\": \"sgendername\", \"width\": \"150px\",\"fieldType\":\"groupHeader\"},\r\n     { \"idsName\": \"IDS_FROMAGE\", \"mandatory\": true, \"dataField\": \"nfromage\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n      { \"idsName\": \"IDS_TOAGE\", \"mandatory\": true, \"dataField\": \"ntoage\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}, \r\n      { \"idsName\": \"IDS_HIGHA\", \"mandatory\": true, \"dataField\": \"shigha\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n      { \"idsName\": \"IDS_HIGHB\", \"mandatory\": true, \"dataField\": \"shighb\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n      { \"idsName\": \"IDS_LOWA\", \"mandatory\": true, \"dataField\": \"slowa\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n       { \"idsName\": \"IDS_LOWB\", \"mandatory\": true, \"dataField\": \"slowb\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n       { \"idsName\": \"IDS_DEFAULTRESULT\", \"mandatory\": true, \"dataField\": \"sresultvalue\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n\r\n    ];\r\n   \r\n\r\n      const detailedFieldList = [\r\n        { \"dataField\": \"shigha\",\"idsName\": \"IDS_HIGHA\" , columnSize:\"4\"},\r\n        { \"dataField\": \"shighb\" ,\"idsName\": \"IDS_HIGHB\",  columnSize:\"4\"},\r\n        { \"dataField\": \"slowa\", idsName: \"IDS_LOWA\" , columnSize:\"4\"},\r\n          { \"dataField\": \"slowb\", idsName: \"IDS_LOWB\", columnSize: \"12\" },\r\n          { \"dataField\": \"sresultvalue\", idsName: \"IDS_DEFAULTRESULT\", columnSize:\"4\" }\r\n\r\n      \r\n    ];\r\n\r\n    const dataState = {\r\n        // skip: 0,\r\n        // take : 5,\r\n        group: [{ field: 'sgendername' }] \r\n    };\r\n   \r\n      const { TestGroupTestParameter, selectedParameter, TestGroupTestFormula, TestGroupTestNumericParameter,\r\n        TestGroupTestPredefinedParameter, TestGroupTestCharParameter, SelectedSpecification,TestGroupTestClinicalSpec,SelectedNode } = props.masterData;\r\n    function testGroupParameterAccordion(TestGroupParameter) {\r\n        const accordionMap = new Map();\r\n        TestGroupParameter.map((testGroupParameter) =>\r\n            accordionMap.set(testGroupParameter.ntestparametercode,\r\n                <TestGroupParameterAccordion\r\n                    testgrouptestparameter={testGroupParameter}\r\n                    selectedSpecification={SelectedSpecification}\r\n                    selectedNode= { SelectedNode }\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    controlMap={props.controlMap}\r\n                    userInfo={props.userInfo}\r\n                    selectedParameter={selectedParameter}\r\n                    addParameter={props.addParameter}\r\n                    deleteAction={props.deleteAction}\r\n                    addCodedResult={props.addCodedResult}\r\n                    addFormula={props.addFormula}\r\n                    onSwitchChange={props.onSwitchChange}\r\n                    addParameterSpecification={props.addParameterSpecification}\r\n                    testGroupTestFormula={TestGroupTestFormula}\r\n                    testGroupTestNumericParameter={TestGroupTestNumericParameter}\r\n                    testGroupTestPredefinedParameter={TestGroupTestPredefinedParameter}\r\n                    testGroupCharParameter={TestGroupTestCharParameter}\r\n                    addTestGroupFormula={props.addTestGroupFormula}\r\n                    filterData={props.filterData}\r\n                    editTestGroupParameter={props.editTestGroupParameter}\r\n                    addTestGroupCodedResult={props.addTestGroupCodedResult}\r\n                    subCodedResultView={props.subCodedResultView}\r\n                    addTestGroupNumericTab={props.addTestGroupNumericTab}\r\n                    viewTestGroupCheckList={props.viewTestGroupCheckList}\r\n                    masterData={props.masterData}\r\n                    extractedColumnList={ClinicalSpecColumns}\r\n                    detailedFieldList={detailedFieldList}\r\n                    testGroupTestClinicalSpec={TestGroupTestClinicalSpec}\r\n                    data={TestGroupTestClinicalSpec || []}\r\n                    //dataState={dataState}\r\n                   \r\n                    optionalData={{ testgroupspecification: SelectedSpecification }}\r\n                    openModal={props.addTestGroupNumericTab}\r\n                    EditSpecDetails={props.EditSpecDetails}\r\n                    DeleteSpecDetails={props.DeleteSpecDetails}\r\n                    hasDynamicColSize={true}\r\n                    dataState={props.dataState}\r\n                dataStateChange={props.dataStateChange}\r\n                />)\r\n        );\r\n        return accordionMap;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {TestGroupTestParameter && TestGroupTestParameter.length > 0 &&\r\n            <PerfectScrollbar>\r\n                <div className='grouped-tab-inner grouped-tab-inner-test-group'>\r\n                <CustomAccordion\r\n                    paneHeight={props.paneHeight}\r\n                    key=\"testgroupparameteraccordion\"\r\n                    accordionTitle={\"sparametersynonym\"}\r\n                    accordionComponent={testGroupParameterAccordion(TestGroupTestParameter)}\r\n                    inputParam={{ masterData: props.masterData, userinfo: props.userInfo }}\r\n                    accordionClick={props.getTestGroupParameter}\r\n                    accordionPrimaryKey={\"ntestgrouptestparametercode\"}\r\n                    accordionObjectName={\"testgrouptestparameter\"}\r\n                    selectedKey={selectedParameter ? selectedParameter.ntestgrouptestparametercode : 0}\r\n                />\r\n                </div>\r\n                </PerfectScrollbar>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestGroupParameterTab);"]},"metadata":{},"sourceType":"module"}