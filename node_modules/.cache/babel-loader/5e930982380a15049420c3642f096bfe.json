{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\ResultEntryBySample\\\\ResultEntryResultsTab.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { process } from '@progress/kendo-data-query';\nimport ResultGrid from '../resultgrid/ResultGrid';\nimport { sortData } from '../../components/CommonScript';\n\nclass ResultEntryResultsTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testParameters: this.props.masterData.TestParameters //sortData(this.props.masterData.TestParameters || [],'ascending','ntransactionresultcode')\n\n    };\n  }\n\n  render() {\n    //console.log(\"TestParameters:\", this.props.masterData.TestParameters);\n    const extractedColumnList = [];\n    extractedColumnList.push({\n      \"idsName\": \"IDS_PARAMETERNAME\",\n      \"dataField\": \"sparametersynonym\",\n      \"width\": \"155px\"\n    }, {\n      \"idsName\": \"IDS_FINALRESULT\",\n      \"dataField\": \"sfinal\",\n      \"width\": \"125px\",\n      \"fieldType\": \"attachment\"\n    }, {\n      \"idsName\": \"IDS_RESULTFLAG\",\n      \"dataField\": \"sgradename\",\n      \"width\": \"110px\",\n      \"fieldType\": \"gradeColumn\"\n    }, {\n      \"idsName\": \"IDS_RESULTACCURACY\",\n      \"dataField\": \"sresultaccuracyname\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"155px\"\n    }, {\n      \"idsName\": \"IDS_CHECKLIST\",\n      \"dataField\": \"schecklistname\",\n      \"width\": \"125px\",\n      \"fieldType\": \"checklistview\",\n      \"checklistKey\": \"nchecklistversioncode\"\n    });\n\n    if (this.props.masterData[\"realRegSubTypeValue\"] && this.props.masterData[\"realRegSubTypeValue\"].nneedsubsample) {\n      extractedColumnList.push({\n        \"idsName\": this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode] : \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"width\": \"155px\"\n      });\n    } else {\n      extractedColumnList.push({\n        \"idsName\": this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode] : \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"width\": \"155px\"\n      });\n    } //  {/* Don't delete these below commented object, because this feature is needed for Agaram LIMS */}\n\n\n    const detailedFieldList = [{\n      \"idsName\": \"IDS_PARAMETERTYPE\",\n      \"dataField\": \"sparametertypename\"\n    }, {\n      \"idsName\": \"IDS_RESULTS\",\n      \"dataField\": \"sresult\",\n      \"width\": \"125px\",\n      \"fieldType\": \"attachment\"\n    }, {\n      \"idsName\": \"IDS_ENFORCESTATUS\",\n      \"dataField\": \"senforcestatus\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_CHECKLIST\",\n      \"dataField\": \"schecklistname\",\n      \"width\": \"125px\",\n      \"fieldType\": \"checklistview\",\n      \"checklistKey\": \"nchecklistversioncode\"\n    }, {\n      \"idsName\": \"IDS_MINA\",\n      \"dataField\": \"smina\"\n    }, {\n      \"idsName\": \"IDS_MAXA\",\n      \"dataField\": \"smaxa\"\n    }, {\n      \"idsName\": \"IDS_MINB\",\n      \"dataField\": \"sminb\"\n    }, {\n      \"idsName\": \"IDS_MAXB\",\n      \"dataField\": \"smaxb\"\n    }, {\n      \"idsName\": \"IDS_ENTERBY\",\n      \"dataField\": \"senteredby\"\n    }, {\n      \"idsName\": \"IDS_ENTERROLE\",\n      \"dataField\": \"suserrolename\"\n    }, {\n      \"idsName\": \"IDS_ENTERDATE\",\n      \"dataField\": \"sentereddate\"\n    }, {\n      \"idsName\": \"IDS_SPECDESCRIPTION\",\n      \"dataField\": \"sspecdesc\"\n    }, {\n      \"idsName\": \"IDS_PARAMETERCOMMENTS\",\n      \"dataField\": \"sresultcomment\"\n    }, {\n      \"idsName\": \"IDS_ENFORCERESULTCOMMENTS\",\n      \"dataField\": \"senforceresultcomment\"\n    }];\n    const attachmentParam = {\n      classUrl: \"approval\",\n      operation: \"view\",\n      methodUrl: \"Attachment\",\n      userinfo: this.props.userInfo\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ResultGrid, {\n      primaryKeyField: \"ntransactionresultcode\",\n      data: sortData(this.props.masterData.TestParameters, 'descending', 'ntransactionresultcode'),\n      dataResult: process(this.props.masterData.TestParameters || [], this.props.dataState),\n      dataState: this.props.dataState,\n      dataStateChange: this.props.dataStateChange,\n      expandField: \"expanded\",\n      detailedFieldList: detailedFieldList,\n      extractedColumnList: extractedColumnList,\n      editParam: this.props.parameterParam,\n      checklistParam: this.props.checklistParam,\n      userInfo: this.props.userInfo,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      fetchRecord: this.props.fetchRecord,\n      editpredefinedcomments: this.props.editpredefinedcomments,\n      enforceResult: this.props.enforceResult,\n      formulaCalculation: this.props.formulaCalculation,\n      checkListRecord: this.props.checkListRecord,\n      pageable: true,\n      viewFile: this.props.viewFile,\n      isComponent: true,\n      isActionRequired: true,\n      isToolBarRequired: false,\n      scrollable: \"scrollable\",\n      selectedId: this.props.selectedId,\n      gridHeight: \"500px !important\",\n      attachmentParam: attachmentParam,\n      getMeanTestParameter: this.props.getMeanTestParameter,\n      meanParam: this.props.meanParam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.masterData.TestParameters !== previousProps.masterData.TestParameters) {\n      this.setState({\n        testParameters: sortData(this.props.masterData.TestParameters, 'ascending', 'ntransactionresultcode')\n      });\n    }\n\n    if (this.props.masterData.TestParameters && this.props.masterData.TestParameters !== this.state.testParameters) {\n      this.setState({\n        testParameters: sortData(this.props.masterData.TestParameters, 'ascending', 'ntransactionresultcode')\n      });\n    }\n  }\n\n}\n\nexport default injectIntl(ResultEntryResultsTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryResultsTab.jsx"],"names":["React","Row","Col","injectIntl","process","ResultGrid","sortData","ResultEntryResultsTab","Component","constructor","props","state","testParameters","masterData","TestParameters","render","extractedColumnList","push","nneedsubsample","genericLabel","userInfo","slanguagetypecode","detailedFieldList","attachmentParam","classUrl","operation","methodUrl","userinfo","dataState","dataStateChange","parameterParam","checklistParam","controlMap","userRoleControlRights","inputParam","fetchRecord","editpredefinedcomments","enforceResult","formulaCalculation","checkListRecord","viewFile","selectedId","getMeanTestParameter","meanParam","componentDidUpdate","previousProps","setState"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ResultGrid from '../resultgrid/ResultGrid';\r\nimport { sortData } from '../../components/CommonScript';\r\n\r\nclass ResultEntryResultsTab extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            testParameters: this.props.masterData.TestParameters  //sortData(this.props.masterData.TestParameters || [],'ascending','ntransactionresultcode')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"TestParameters:\", this.props.masterData.TestParameters);\r\n        const extractedColumnList = [];\r\n        \r\n            extractedColumnList.push(\r\n            { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_FINALRESULT\", \"dataField\": \"sfinal\", \"width\": \"125px\", \"fieldType\": \"attachment\" },\r\n            { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"110px\", \"fieldType\": \"gradeColumn\" },\r\n            { \"idsName\": \"IDS_RESULTACCURACY\", \"dataField\": \"sresultaccuracyname\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_CHECKLIST\", \"dataField\": \"schecklistname\", \"width\": \"125px\", \"fieldType\": \"checklistview\", \"checklistKey\": \"nchecklistversioncode\" },\r\n            );\r\n            if (this.props.masterData[\"realRegSubTypeValue\"] && this.props.masterData[\"realRegSubTypeValue\"].nneedsubsample){\r\n                extractedColumnList.push({\"idsName\":this.props.genericLabel ? this.props.genericLabel[\"SubARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]:\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n            }\r\n            else{\r\n                extractedColumnList.push({\"idsName\":this.props.genericLabel ? this.props.genericLabel[\"ARNo\"][\"jsondata\"][\"sdisplayname\"][this.props.userInfo.slanguagetypecode]:\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n            }\r\n        //  {/* Don't delete these below commented object, because this feature is needed for Agaram LIMS */}\r\n        const detailedFieldList = [\r\n            { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"sparametertypename\" },\r\n            { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"sresult\", \"width\": \"125px\", \"fieldType\": \"attachment\" },\r\n            { \"idsName\": \"IDS_ENFORCESTATUS\", \"dataField\": \"senforcestatus\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_CHECKLIST\", \"dataField\": \"schecklistname\", \"width\": \"125px\", \"fieldType\": \"checklistview\", \"checklistKey\": \"nchecklistversioncode\" },\r\n            { \"idsName\": \"IDS_MINA\", \"dataField\": \"smina\" },\r\n            { \"idsName\": \"IDS_MAXA\", \"dataField\": \"smaxa\" },\r\n            { \"idsName\": \"IDS_MINB\", \"dataField\": \"sminb\" },\r\n            { \"idsName\": \"IDS_MAXB\", \"dataField\": \"smaxb\" },\r\n            { \"idsName\": \"IDS_ENTERBY\", \"dataField\": \"senteredby\" },\r\n            { \"idsName\": \"IDS_ENTERROLE\", \"dataField\": \"suserrolename\" },\r\n            { \"idsName\": \"IDS_ENTERDATE\", \"dataField\": \"sentereddate\" },\r\n            { \"idsName\": \"IDS_SPECDESCRIPTION\", \"dataField\": \"sspecdesc\" }, \r\n            { \"idsName\": \"IDS_PARAMETERCOMMENTS\", \"dataField\": \"sresultcomment\" },\r\n            { \"idsName\": \"IDS_ENFORCERESULTCOMMENTS\", \"dataField\": \"senforceresultcomment\" }\r\n        \r\n        ]\r\n        const attachmentParam = {\r\n            classUrl: \"approval\",\r\n            operation: \"view\",\r\n            methodUrl: \"Attachment\",\r\n            userinfo: this.props.userInfo\r\n\r\n        }\r\n        return (\r\n            <>\r\n                <Row className=\"no-gutters\">\r\n                    <Col md={12}>\r\n                        <ResultGrid\r\n                            primaryKeyField={\"ntransactionresultcode\"}\r\n                            data={sortData(this.props.masterData.TestParameters,'descending','ntransactionresultcode') }\r\n                            dataResult={process(this.props.masterData.TestParameters || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                            expandField=\"expanded\"\r\n                            detailedFieldList={detailedFieldList}\r\n                            extractedColumnList={extractedColumnList}\r\n                            editParam={this.props.parameterParam}\r\n                            checklistParam={this.props.checklistParam}\r\n                            userInfo={this.props.userInfo}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            fetchRecord={this.props.fetchRecord}\r\n                            editpredefinedcomments={this.props.editpredefinedcomments}\r\n                            enforceResult={this.props.enforceResult}\r\n                            formulaCalculation={this.props.formulaCalculation}\r\n                            checkListRecord={this.props.checkListRecord}\r\n                            pageable={true}\r\n                            viewFile={this.props.viewFile}\r\n                            isComponent={true}\r\n                            isActionRequired={true}\r\n                            isToolBarRequired={false}\r\n                            scrollable={\"scrollable\"}\r\n                            selectedId={this.props.selectedId}\r\n                            gridHeight={\"500px !important\"}\r\n                            attachmentParam={attachmentParam}\r\n                            getMeanTestParameter={this.props.getMeanTestParameter}\r\n                            meanParam={this.props.meanParam}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n    componentDidUpdate(previousProps){\r\n        if(this.props.masterData.TestParameters!==previousProps.masterData.TestParameters){\r\n            this.setState({\r\n                testParameters:sortData(this.props.masterData.TestParameters,'ascending','ntransactionresultcode')\r\n            })\r\n        }\r\n        if(this.props.masterData.TestParameters&&this.props.masterData.TestParameters!==this.state.testParameters){\r\n            this.setState({\r\n                testParameters:sortData(this.props.masterData.TestParameters,'ascending','ntransactionresultcode')\r\n            })\r\n        }\r\n        \r\n    }\r\n}\r\nexport default injectIntl(ResultEntryResultsTab);"]},"metadata":{},"sourceType":"module"}