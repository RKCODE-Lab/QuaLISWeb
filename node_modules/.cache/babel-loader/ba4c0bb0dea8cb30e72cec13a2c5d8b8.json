{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';var AddCourier=function AddCourier(props){var Country=props.Country;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_COURIERNAME\"}),name:\"scouriername\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_COURIERNAME\"}),value:props.selectedRecord[\"scouriername\"]?props.selectedRecord[\"scouriername\"]:\"\",isMandatory:true,required:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_CONTACTPERSON\"}),name:\"scontactperson\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_CONTACTPERSON\"}),value:props.selectedRecord[\"scontactperson\"]?props.selectedRecord[\"scontactperson\"]:\"\",isMandatory:false,required:false,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_ADDRESS1\"}),name:\"saddress1\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ADDRESS1\"}),value:props.selectedRecord[\"saddress1\"]?props.selectedRecord[\"saddress1\"]:\"\",isMandatory:false,required:false,maxLength:255})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_ADDRESS2\"}),name:\"saddress2\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ADDRESS2\"}),value:props.selectedRecord[\"saddress2\"]?props.selectedRecord[\"saddress2\"]:\"\",isMandatory:false,required:false,maxLength:255})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_ADDRESS3\"}),name:\"saddress3\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_ADDRESS3\"}),value:props.selectedRecord[\"saddress3\"]?props.selectedRecord[\"saddress3\"]:\"\",isMandatory:false,required:false,maxLength:255})))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_COUNTRY\"}),name:\"ncountrycode\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:props.selectedRecord?props.selectedRecord[\"ncountrycode\"]:\"\",options:Country,optionId:\"ncountrycode\",optionValue:\"scountryname\",isMandatory:true,isMulti:false,isSearchable:false,closeMenuOnSelect:true,alphabeticalSort:true,as:\"select\",onChange:function onChange(event){return props.onComboChange(event,\"ncountrycode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"sphoneno\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_PHONENO\"}),placeholder:props.intl.formatMessage({id:\"IDS_PHONENO\"}),value:props.selectedRecord[\"sphoneno\"],isMandatory:false,required:false,maxLength:50,onChange:function onChange(event){return props.onInputOnChange(event);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"smobileno\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_MOBILENO\"}),placeholder:props.intl.formatMessage({id:\"IDS_MOBILENO\"}),value:props.selectedRecord[\"smobileno\"],isMandatory:false,required:false,maxLength:50,onChange:function onChange(event){return props.onInputOnChange(event);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_FAXNO\"}),name:\"sfaxno\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_FAXNO\"}),value:props.selectedRecord[\"sfaxno\"]?props.selectedRecord[\"sfaxno\"]:\"\",isMandatory:false,required:false,maxLength:50})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"semail\",type:\"email\",label:props.intl.formatMessage({id:\"IDS_EMAIL\"}),placeholder:props.intl.formatMessage({id:\"IDS_EMAIL\"}),value:props.selectedRecord[\"semail\"],isMandatory:false,required:false,maxLength:50,onChange:function onChange(event){return props.onInputOnChange(event);}})))));};export default injectIntl(AddCourier);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/contactmaster/AddCourier.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","FormSelectSearch","injectIntl","AddCourier","props","Country","intl","formatMessage","id","event","onInputOnChange","selectedRecord","onComboChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nconst AddCourier = (props) => {\r\n    const { Country } = props;\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n                    <Row>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_COURIERNAME\" })}\r\n                    name= \"scouriername\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_COURIERNAME\" })}\r\n                    value={props.selectedRecord[\"scouriername\"] ? props.selectedRecord[\"scouriername\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_CONTACTPERSON\" })}\r\n                    name= \"scontactperson\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_CONTACTPERSON\" })}\r\n                    value={props.selectedRecord[\"scontactperson\"] ? props.selectedRecord[\"scontactperson\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={100}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id:\"IDS_ADDRESS1\" })}\r\n                    name=\"saddress1\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS1\" })}\r\n                    value={props.selectedRecord[\"saddress1\"] ? props.selectedRecord[\"saddress1\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={255}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id:\"IDS_ADDRESS2\" })}\r\n                    name=\"saddress2\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS2\" })}\r\n                    value={props.selectedRecord[\"saddress2\"] ? props.selectedRecord[\"saddress2\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={255}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id:\"IDS_ADDRESS3\" })}\r\n                    name=\"saddress3\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS3\" })}\r\n                    value={props.selectedRecord[\"saddress3\"] ? props.selectedRecord[\"saddress3\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={255}\r\n                />\r\n            </Col>\r\n            </Row>\r\n                   </Col>\r\n                <Col md={6}>   \r\n                <Row>  \r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_COUNTRY\" })}\r\n                    name={\"ncountrycode\"} \r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"ncountrycode\"] : \"\"}\r\n                    options={Country}\r\n                    optionId=\"ncountrycode\"\r\n                    optionValue=\"scountryname\"\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"ncountrycode\")}\r\n                    \r\n                />\r\n            </Col>\r\n          \r\n                    <Col md={12}>\r\n                        <FormInput\r\n                            name={\"sphoneno\"}\r\n                            type=\"text\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}                  \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}\r\n                            value ={ props.selectedRecord[\"sphoneno\"]}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                       /> \r\n                        {/* <FormNumericInput\r\n                                name={\"sphoneno\"}\r\n                                label={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}                  \r\n                                placeholder={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}\r\n                                type=\"number\"\r\n                                value ={ props.selectedRecord[\"sphoneno\"]}\r\n                                strict={true}\r\n                                maxLength={10}\r\n                                onChange={(event) => props.onNumericInputOnChange(event, \"sphoneno\")}\r\n                                precision={0}\r\n                                className=\"form-control\"\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                errors=\"Please provide a valid number.\"\r\n                            />*/}\r\n                   </Col>\r\n                    <Col md={12}>\r\n                       <FormInput\r\n                            name={\"smobileno\"}\r\n                            type=\"text\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_MOBILENO\"})}                   \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_MOBILENO\"})}\r\n                            value ={ props.selectedRecord[\"smobileno\"] }\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                            onChange={(event)=> props.onInputOnChange(event)}\r\n                       /> \r\n                        {/* <FormNumericInput\r\n                              name={\"smobileno\"}\r\n                              label={ props.intl.formatMessage({ id:\"IDS_MOBILENO\"})}                   \r\n                              placeholder={ props.intl.formatMessage({ id:\"IDS_MOBILENO\"})}\r\n                              type=\"number\"\r\n                              value ={ props.selectedRecord[\"smobileno\"] }\r\n                              strict={true}\r\n                              maxLength={10}\r\n                              onChange={(event) => props.onNumericInputOnChange(event, \"smobileno\")}\r\n                              precision={0}\r\n                              className=\"form-control\"\r\n                              isMandatory={false}\r\n                              errors=\"Please provide a valid number.\"\r\n                            /> */}\r\n                   </Col>\r\n                   <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_FAXNO\" })}\r\n                    name= \"sfaxno\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_FAXNO\" })}\r\n                    value={props.selectedRecord[\"sfaxno\"] ? props.selectedRecord[\"sfaxno\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={50}\r\n                />\r\n            </Col>\r\n                   <Col md={12}>\r\n                       <FormInput\r\n                            name={\"semail\"}\r\n                            type=\"email\"\r\n                            label={ props.intl.formatMessage({ id:\"IDS_EMAIL\"})}                            \r\n                            placeholder={ props.intl.formatMessage({ id:\"IDS_EMAIL\"})}\r\n                            value ={ props.selectedRecord[\"semail\"]}\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={50}\r\n                            onChange={(event)=> props.onInputOnChange(event)}                            \r\n                       />\r\n                   </Col>\r\n                   </Row>\r\n                   </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddCourier);"]},"metadata":{},"sourceType":"module"}