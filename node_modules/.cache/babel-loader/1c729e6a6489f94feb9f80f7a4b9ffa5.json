{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\SampleInfoGrid.jsx\";\nimport { process } from '@progress/kendo-data-query';\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DataGrid from '../../components/data-grid/data-grid.component';\n\nclass SampleInfoGrid extends React.Component {\n  render() {\n    let viewFileURL = {\n      \"classUrl\": \"registration\",\n      \"methodUrl\": \"RegistrationFile\",\n      \"screenName\": \"SampleRegistration\"\n    }; // const detailedFieldList=this.props.detailedFieldList.map(field=>{\n    //     return (\n    //         {\"idsName\":field[1],\"dataField\":field[2],\"width\":\"100px\"}\n    //     )\n    // })\n    // const extractedColumnList=this.props.extractedColumnList.map(field=>{\n    //     return (\n    //         {\"idsName\":field[1],\"dataField\":field[2],\"width\":\"200px\"}\n    //     )\n    // })\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: this.props.primaryKeyField || \"npreregno\",\n      data: this.props.selectedSample,\n      dataResult: process(this.props.selectedSample || [], this.props.dataState),\n      dataState: this.props.dataState,\n      dataStateChange: this.props.dataStateChange,\n      expandField: this.props.detailedFieldList.length > 0 && this.props.expandField ? this.props.expandField : false,\n      detailedFieldList: this.props.detailedFieldList,\n      extractedColumnList: this.props.extractedColumnList,\n      userInfo: this.props.userInfo,\n      controlMap: new Map(),\n      userRoleControlRights: {},\n      inputParam: this.props.inputParam,\n      pageable: true,\n      isActionRequired: false,\n      isToolBarRequired: false,\n      scrollable: \"scrollable\",\n      gridHeight: \"500px\",\n      jsonField: this.props.jsonField,\n      viewFileURL: viewFileURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default injectIntl(SampleInfoGrid);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/approval/SampleInfoGrid.jsx"],"names":["process","React","Col","Row","injectIntl","DataGrid","SampleInfoGrid","Component","render","viewFileURL","props","primaryKeyField","selectedSample","dataState","dataStateChange","detailedFieldList","length","expandField","extractedColumnList","userInfo","Map","inputParam","jsonField"],"mappings":";AAAA,SAASA,OAAT,QAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,QAAP,MAAqB,gDAArB;;AACA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA4C;AACxCC,EAAAA,MAAM,GAAE;AACJ,QAAIC,WAAW,GAAC;AAAC,kBAAW,cAAZ;AAChB,mBAAa,kBADG;AACgB,oBAAa;AAD7B,KAAhB,CADI,CAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,wBACI,uDACA,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,eAAe,EAAE,KAAKC,KAAL,CAAWC,eAAX,IAA8B,WADnD;AAEI,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,cAFrB;AAGI,MAAA,UAAU,EAAEZ,OAAO,CAAC,KAAKU,KAAL,CAAWE,cAAX,IAA2B,EAA5B,EAA+B,KAAKF,KAAL,CAAWG,SAA1C,CAHvB;AAII,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAJ1B;AAKI,MAAA,eAAe,EAAE,KAAKH,KAAL,CAAWI,eALhC;AAMI,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,iBAAX,CAA6BC,MAA7B,GAAsC,CAAtC,IAA2C,KAAKN,KAAL,CAAWO,WAAtD,GAAoE,KAAKP,KAAL,CAAWO,WAA/E,GAA6F,KAN9G;AAOI,MAAA,iBAAiB,EAAE,KAAKP,KAAL,CAAWK,iBAPlC;AAQI,MAAA,mBAAmB,EAAE,KAAKL,KAAL,CAAWQ,mBARpC;AASI,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,QATzB;AAUI,MAAA,UAAU,EAAE,IAAIC,GAAJ,EAVhB;AAWI,MAAA,qBAAqB,EAAE,EAX3B;AAYI,MAAA,UAAU,EAAE,KAAKV,KAAL,CAAWW,UAZ3B;AAaI,MAAA,QAAQ,EAAE,IAbd;AAcI,MAAA,gBAAgB,EAAE,KAdtB;AAeI,MAAA,iBAAiB,EAAE,KAfvB;AAgBI,MAAA,UAAU,EAAE,YAhBhB;AAiBI,MAAA,UAAU,EAAE,OAjBhB;AAkBI,MAAA,SAAS,EAAE,KAAKX,KAAL,CAAWY,SAlB1B;AAmBI,MAAA,WAAW,EAAEb,WAnBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADA,CADJ;AA6BH;;AA3CuC;;AA6C5C,eAAeL,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import { process } from '@progress/kendo-data-query';\r\nimport React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nclass SampleInfoGrid extends React.Component{\r\n    render(){\r\n        let viewFileURL={\"classUrl\":\"registration\",\r\n        \"methodUrl\" :\"RegistrationFile\",\"screenName\":\"SampleRegistration\"};\r\n        // const detailedFieldList=this.props.detailedFieldList.map(field=>{\r\n        //     return (\r\n        //         {\"idsName\":field[1],\"dataField\":field[2],\"width\":\"100px\"}\r\n        //     )\r\n        // })\r\n        // const extractedColumnList=this.props.extractedColumnList.map(field=>{\r\n        //     return (\r\n        //         {\"idsName\":field[1],\"dataField\":field[2],\"width\":\"200px\"}\r\n        //     )\r\n        // })\r\n        return(\r\n            <>\r\n            <Row noGutters={\"true\"}>\r\n                <Col md={12}>\r\n                    <DataGrid\r\n                        primaryKeyField={this.props.primaryKeyField || \"npreregno\"}\r\n                        data={this.props.selectedSample}\r\n                        dataResult={process(this.props.selectedSample||[],this.props.dataState)}\r\n                        dataState={this.props.dataState}\r\n                        dataStateChange={this.props.dataStateChange}\r\n                        expandField={this.props.detailedFieldList.length > 0 && this.props.expandField ? this.props.expandField : false}\r\n                        detailedFieldList={this.props.detailedFieldList}\r\n                        extractedColumnList={this.props.extractedColumnList}\r\n                        userInfo={this.props.userInfo}\r\n                        controlMap={new Map()}\r\n                        userRoleControlRights={{}}\r\n                        inputParam={this.props.inputParam}\r\n                        pageable={true}\r\n                        isActionRequired={false}\r\n                        isToolBarRequired={false}\r\n                        scrollable={\"scrollable\"}\r\n                        gridHeight={\"500px\"}\r\n                        jsonField={this.props.jsonField}\r\n                        viewFileURL={viewFileURL}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default injectIntl(SampleInfoGrid);"]},"metadata":{},"sourceType":"module"}