{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Window } from '@progress/kendo-react-dialogs';\nimport { TabStrip, TabStripTab } from '@progress/kendo-react-layout';\nimport { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport { messages } from './../messages';\nimport { EditorToolsSettings } from './../config/toolsSettings';\nimport { formatString } from './../tools/utils';\nimport { find, replace, replaceAll, findAll, TextSelection, textHighlightKey, selectedLineTextOnly } from '@progress/kendo-editor-common';\nvar enter = 13,\n    esc = 27;\nvar checkboxProps = {\n  className: 'k-checkbox',\n  type: 'checkbox'\n};\nvar settings = EditorToolsSettings.findAndReplace;\n/**\n * @hidden\n */\n\nvar FindAndReplaceDialog = function (_super) {\n  __extends(FindAndReplaceDialog, _super);\n\n  function FindAndReplaceDialog(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.onTabSelect = function (event) {\n      _this.setState({\n        selectedTab: event.selected\n      });\n    };\n\n    _this.onClose = function () {\n      var view = _this.props.view;\n      var state = view.state;\n      var transaction = state.tr.setSelection(TextSelection.create(state.doc, state.selection.from, state.selection.to));\n      view.updateState(state.apply(transaction));\n      view.focus();\n\n      _this.props.onClose.call(undefined);\n    };\n\n    _this.matchesMessage = function (locMessage) {\n      var matches = _this.state.matches;\n      var nextMatch = _this.state.nextMatch;\n      var cur = 0,\n          all = 0;\n\n      if (matches && nextMatch) {\n        var current = matches.findIndex(function (s) {\n          return s.eq(nextMatch);\n        });\n        cur = current === -1 ? matches.length : current + 1;\n        all = matches.length;\n      }\n\n      return formatString(locMessage, cur, all);\n    };\n\n    _this.onFindNext = function () {\n      _this.onFind();\n    };\n\n    _this.onFindPrev = function () {\n      _this.onFind(true);\n    };\n\n    _this.onFind = function (backward) {\n      if (backward === void 0) {\n        backward = false;\n      }\n\n      var view = _this.props.view;\n      var _a = _this.state,\n          text = _a.searchText,\n          matchCase = _a.matchCase,\n          matchCyclic = _a.matchCyclic,\n          matchWord = _a.matchWord,\n          useRegExp = _a.useRegExp;\n      var searchOptions = {\n        text: text,\n        matchWord: matchWord,\n        matchCase: matchCase,\n        useRegExp: useRegExp,\n        backward: backward,\n        matchCyclic: matchCyclic\n      };\n      var selectionResult = find(view.state, searchOptions);\n\n      if (selectionResult) {\n        var transaction = view.state.tr.setSelection(selectionResult);\n        transaction.scrollIntoView();\n        view.updateState(view.state.apply(transaction));\n\n        _this.setState({\n          nextMatch: selectionResult\n        });\n      }\n    };\n\n    _this.onReplace = function () {\n      var view = _this.props.view;\n      var selection = view.state.selection;\n      var replaceText = _this.state.replaceText;\n\n      if (!selection.empty) {\n        var start = selection.from;\n        var end = start + replaceText.length;\n        var transaction = replace(selection, replaceText, view.state.tr);\n        transaction.setSelection(TextSelection.create(transaction.doc, start, end));\n        transaction.scrollIntoView();\n        view.dispatch(transaction);\n\n        _this.setNextState({});\n      }\n    };\n\n    _this.onReplaceAll = function () {\n      var view = _this.props.view;\n      var _a = _this.state,\n          searchText = _a.searchText,\n          replaceText = _a.replaceText,\n          matchCase = _a.matchCase,\n          matchWord = _a.matchWord,\n          useRegExp = _a.useRegExp;\n      var searchOptions = {\n        text: searchText,\n        matchWord: matchWord,\n        matchCase: matchCase,\n        useRegExp: useRegExp\n      };\n      view.dispatch(replaceAll(view.state, replaceText, searchOptions));\n\n      _this.setNextState({});\n    };\n\n    _this.onKeyDown = function (event) {\n      if (event.keyCode === enter) {\n        _this.onFindNext();\n      } else if (event.keyCode === esc) {\n        _this.onClose();\n      }\n    };\n\n    _this.onMatchCaseChecked = function (e) {\n      return _this.setNextState({\n        matchCase: e.target.checked\n      });\n    };\n\n    _this.onMatchWordChecked = function (e) {\n      return _this.setNextState({\n        matchWord: e.target.checked\n      });\n    };\n\n    _this.onMatchCyclicChecked = function (e) {\n      return _this.setNextState({\n        matchCyclic: e.target.checked\n      });\n    };\n\n    _this.onUseRegExpChecked = function (e) {\n      return _this.setNextState({\n        useRegExp: e.target.checked\n      });\n    };\n\n    _this.onSearchChange = function (e) {\n      return _this.setNextState({\n        searchText: e.target.value\n      });\n    };\n\n    _this.onReplaceChange = function (e) {\n      return _this.setNextState({\n        replaceText: e.target.value\n      });\n    };\n\n    _this.setNextState = function (next) {\n      var nextState = __assign({}, _this.state, next, {\n        matches: undefined,\n        nextMatch: undefined\n      });\n\n      var view = _this.props.view;\n\n      if (nextState.searchText) {\n        var text = nextState.searchText,\n            matchWord = nextState.matchWord,\n            matchCase = nextState.matchCase,\n            useRegExp = nextState.useRegExp,\n            matchCyclic = nextState.matchCyclic;\n        var searchOptions = {\n          text: text,\n          matchWord: matchWord,\n          matchCase: matchCase,\n          useRegExp: useRegExp\n        };\n        var selection_1 = view.state.selection;\n        var matches = findAll(view.state.doc, searchOptions);\n        var nextMatch = !_this.state.searchText && matches[0] || matches.find(function (match) {\n          return match.from >= selection_1.from;\n        }) || matchCyclic && matches[0] || undefined;\n\n        _this.setState(__assign({}, nextState, {\n          matches: matches,\n          nextMatch: nextMatch\n        }));\n      } else {\n        _this.setState(nextState);\n      }\n    };\n\n    _this.state = {\n      selectedTab: 0,\n      searchText: selectedLineTextOnly(props.view.state),\n      replaceText: '',\n      matchCase: false,\n      matchWord: false,\n      matchCyclic: false,\n      useRegExp: false\n    };\n    return _this;\n  }\n\n  Object.defineProperty(FindAndReplaceDialog.prototype, \"settings\", {\n    get: function () {\n      return this.props.settings || settings;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  FindAndReplaceDialog.prototype.componentDidUpdate = function (_, prevState) {\n    var view = this.props.view;\n    var _a = this.state,\n        _b = _a.matches,\n        matches = _b === void 0 ? [] : _b,\n        nextMatch = _a.nextMatch;\n\n    if (prevState.nextMatch !== nextMatch) {\n      var state = view.state; // highlight selection\n\n      var tr = state.tr;\n      var highlights_1 = [];\n      matches.forEach(function (m) {\n        highlights_1.push({\n          from: m.from,\n          to: m.to,\n          attrs: {\n            class: nextMatch && m.eq(nextMatch) ? 'k-text-selected' : 'k-text-highlighted'\n          }\n        });\n      });\n      tr.setMeta(textHighlightKey, highlights_1);\n      tr.setSelection(nextMatch || TextSelection.create(state.doc, state.selection.from));\n      view.dispatch(tr);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  FindAndReplaceDialog.prototype.render = function () {\n    var localization = provideLocalizationService(this);\n    var _a = this.settings.messages,\n        findReplaceDialogTitle = _a.findReplaceDialogTitle,\n        findReplaceTabFind = _a.findReplaceTabFind,\n        findReplaceTabReplace = _a.findReplaceTabReplace,\n        findReplaceFindWhat = _a.findReplaceFindWhat,\n        findReplaceReplaceWith = _a.findReplaceReplaceWith,\n        findReplaceReplace = _a.findReplaceReplace,\n        findReplaceReplaceAll = _a.findReplaceReplaceAll,\n        findReplaceMatchCase = _a.findReplaceMatchCase,\n        findReplaceMatchWord = _a.findReplaceMatchWord,\n        findReplaceMatchCyclic = _a.findReplaceMatchCyclic,\n        findReplaceUseRegExp = _a.findReplaceUseRegExp,\n        findReplacePrevMatch = _a.findReplacePrevMatch,\n        findReplaceNextMatch = _a.findReplaceNextMatch,\n        findReplaceMatches = _a.findReplaceMatches;\n    var _b = this.state,\n        matchCase = _b.matchCase,\n        matchWord = _b.matchWord,\n        matchCyclic = _b.matchCyclic,\n        useRegExp = _b.useRegExp,\n        searchText = _b.searchText,\n        replaceText = _b.replaceText,\n        nextMatch = _b.nextMatch;\n    var checkboxes = React.createElement(\"div\", {\n      className: \"k-search-options\"\n    }, React.createElement(\"span\", null, React.createElement(\"input\", __assign({}, checkboxProps, {\n      id: \"match-case\",\n      checked: matchCase,\n      onChange: this.onMatchCaseChecked\n    })), React.createElement(\"label\", {\n      htmlFor: \"match-case\",\n      className: \"k-checkbox-label\"\n    }, localization.toLanguageString(findReplaceMatchCase, messages[findReplaceMatchCase]))), React.createElement(\"span\", null, React.createElement(\"input\", __assign({}, checkboxProps, {\n      id: \"match-whole\",\n      checked: matchWord,\n      onChange: this.onMatchWordChecked\n    })), React.createElement(\"label\", {\n      htmlFor: \"match-whole\",\n      className: \"k-checkbox-label\"\n    }, localization.toLanguageString(findReplaceMatchWord, messages[findReplaceMatchWord]))), React.createElement(\"span\", null, React.createElement(\"input\", __assign({}, checkboxProps, {\n      id: \"match-cyclic\",\n      checked: matchCyclic,\n      onChange: this.onMatchCyclicChecked\n    })), React.createElement(\"label\", {\n      htmlFor: \"match-cyclic\",\n      className: \"k-checkbox-label\"\n    }, localization.toLanguageString(findReplaceMatchCyclic, messages[findReplaceMatchCyclic]))), React.createElement(\"span\", null, React.createElement(\"input\", __assign({}, checkboxProps, {\n      id: \"regular-expression\",\n      checked: useRegExp,\n      onChange: this.onUseRegExpChecked\n    })), React.createElement(\"label\", {\n      htmlFor: \"regular-expression\",\n      className: \"k-checkbox-label\"\n    }, localization.toLanguageString(findReplaceUseRegExp, messages[findReplaceUseRegExp]))));\n    var navigation = React.createElement(\"div\", {\n      className: \"k-matches-container\"\n    }, React.createElement(\"button\", {\n      className: \"k-button k-flat k-primary\",\n      onClick: this.onFindPrev\n    }, React.createElement(\"span\", {\n      className: \"k-icon k-i-arrow-chevron-left\"\n    }), localization.toLanguageString(findReplacePrevMatch, messages[findReplacePrevMatch])), React.createElement(\"span\", null, this.matchesMessage(localization.toLanguageString(findReplaceMatches, messages[findReplaceMatches]))), React.createElement(\"button\", {\n      className: \"k-button k-flat k-primary\",\n      onClick: this.onFindNext\n    }, localization.toLanguageString(findReplaceNextMatch, messages[findReplaceNextMatch]), React.createElement(\"span\", {\n      className: \"k-icon k-i-arrow-chevron-right\"\n    })));\n    var findWhat = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"k-edit-label\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"findWhat\"\n    }, localization.toLanguageString(findReplaceFindWhat, messages[findReplaceFindWhat]))), React.createElement(\"div\", {\n      className: \"k-edit-field\"\n    }, React.createElement(\"input\", {\n      id: \"findWhat\",\n      type: \"text\",\n      className: \"k-textbox\",\n      value: searchText,\n      onChange: this.onSearchChange,\n      onFocus: this.onSearchChange,\n      onKeyDown: this.onKeyDown,\n      autoFocus: true\n    })));\n    var replaceWith = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"k-edit-label\"\n    }, React.createElement(\"label\", {\n      htmlFor: \"replaceWith\"\n    }, localization.toLanguageString(findReplaceReplaceWith, messages[findReplaceReplaceWith]))), React.createElement(\"div\", {\n      className: \"k-edit-field\"\n    }, React.createElement(\"input\", {\n      id: \"replaceWith\",\n      className: \"k-textbox\",\n      type: \"text\",\n      value: replaceText,\n      onChange: this.onReplaceChange\n    })));\n    return ReactDOM.createPortal(React.createElement(Window, {\n      title: localization.toLanguageString(findReplaceDialogTitle, messages[findReplaceDialogTitle]),\n      onClose: this.onClose,\n      style: {\n        width: 'auto',\n        height: 'auto',\n        userSelect: 'none'\n      },\n      resizable: false,\n      minimizeButton: function () {\n        return null;\n      },\n      maximizeButton: function () {\n        return null;\n      }\n    }, React.createElement(TabStrip, {\n      selected: this.state.selectedTab,\n      className: \"k-editor-find-replace\",\n      onSelect: this.onTabSelect,\n      animation: false\n    }, React.createElement(TabStripTab, {\n      title: localization.toLanguageString(findReplaceTabFind, messages[findReplaceTabFind])\n    }, React.createElement(\"div\", {\n      className: \"k-edit-form-container\"\n    }, findWhat), checkboxes, navigation), React.createElement(TabStripTab, {\n      title: localization.toLanguageString(findReplaceTabReplace, messages[findReplaceTabReplace])\n    }, React.createElement(\"div\", {\n      className: \"k-edit-form-container\"\n    }, findWhat, replaceWith), React.createElement(\"div\", {\n      className: \"k-action-buttons k-actions k-actions-end\"\n    }, React.createElement(\"button\", {\n      className: \"k-button\",\n      disabled: !Boolean(nextMatch),\n      onClick: this.onReplace\n    }, localization.toLanguageString(findReplaceReplace, messages[findReplaceReplace])), React.createElement(\"button\", {\n      className: \"k-button\",\n      disabled: !Boolean(nextMatch),\n      onClick: this.onReplaceAll\n    }, localization.toLanguageString(findReplaceReplaceAll, messages[findReplaceReplaceAll]))), checkboxes, navigation))), document.body);\n  };\n\n  return FindAndReplaceDialog;\n}(React.Component);\n\nexport { FindAndReplaceDialog };\nregisterForLocalization(FindAndReplaceDialog);","map":{"version":3,"sources":["../../../src/dialogs/FindReplace.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Window } from '@progress/kendo-react-dialogs';\nimport { TabStrip, TabStripTab } from '@progress/kendo-react-layout';\nimport { registerForLocalization, provideLocalizationService } from '@progress/kendo-react-intl';\nimport { messages } from './../messages';\nimport { EditorToolsSettings } from './../config/toolsSettings';\nimport { formatString } from './../tools/utils';\nimport { find, replace, replaceAll, findAll, TextSelection, textHighlightKey, selectedLineTextOnly } from '@progress/kendo-editor-common';\nvar enter = 13, esc = 27;\nvar checkboxProps = { className: 'k-checkbox', type: 'checkbox' };\nvar settings = EditorToolsSettings.findAndReplace;\n/**\n * @hidden\n */\nvar FindAndReplaceDialog = /** @class */ (function (_super) {\n    __extends(FindAndReplaceDialog, _super);\n    function FindAndReplaceDialog(props) {\n        var _this = _super.call(this, props) || this;\n        _this.onTabSelect = function (event) {\n            _this.setState({ selectedTab: event.selected });\n        };\n        _this.onClose = function () {\n            var view = _this.props.view;\n            var state = view.state;\n            var transaction = state.tr.setSelection(TextSelection.create(state.doc, state.selection.from, state.selection.to));\n            view.updateState(state.apply(transaction));\n            view.focus();\n            _this.props.onClose.call(undefined);\n        };\n        _this.matchesMessage = function (locMessage) {\n            var matches = _this.state.matches;\n            var nextMatch = _this.state.nextMatch;\n            var cur = 0, all = 0;\n            if (matches && nextMatch) {\n                var current = matches.findIndex(function (s) { return s.eq(nextMatch); });\n                cur = current === -1 ? matches.length : current + 1;\n                all = matches.length;\n            }\n            return formatString(locMessage, cur, all);\n        };\n        _this.onFindNext = function () {\n            _this.onFind();\n        };\n        _this.onFindPrev = function () {\n            _this.onFind(true);\n        };\n        _this.onFind = function (backward) {\n            if (backward === void 0) { backward = false; }\n            var view = _this.props.view;\n            var _a = _this.state, text = _a.searchText, matchCase = _a.matchCase, matchCyclic = _a.matchCyclic, matchWord = _a.matchWord, useRegExp = _a.useRegExp;\n            var searchOptions = { text: text, matchWord: matchWord, matchCase: matchCase, useRegExp: useRegExp, backward: backward, matchCyclic: matchCyclic };\n            var selectionResult = find(view.state, searchOptions);\n            if (selectionResult) {\n                var transaction = view.state.tr.setSelection(selectionResult);\n                transaction.scrollIntoView();\n                view.updateState(view.state.apply(transaction));\n                _this.setState({ nextMatch: selectionResult });\n            }\n        };\n        _this.onReplace = function () {\n            var view = _this.props.view;\n            var selection = view.state.selection;\n            var replaceText = _this.state.replaceText;\n            if (!selection.empty) {\n                var start = selection.from;\n                var end = start + replaceText.length;\n                var transaction = replace(selection, replaceText, view.state.tr);\n                transaction.setSelection(TextSelection.create(transaction.doc, start, end));\n                transaction.scrollIntoView();\n                view.dispatch(transaction);\n                _this.setNextState({});\n            }\n        };\n        _this.onReplaceAll = function () {\n            var view = _this.props.view;\n            var _a = _this.state, searchText = _a.searchText, replaceText = _a.replaceText, matchCase = _a.matchCase, matchWord = _a.matchWord, useRegExp = _a.useRegExp;\n            var searchOptions = { text: searchText, matchWord: matchWord, matchCase: matchCase, useRegExp: useRegExp };\n            view.dispatch(replaceAll(view.state, replaceText, searchOptions));\n            _this.setNextState({});\n        };\n        _this.onKeyDown = function (event) {\n            if (event.keyCode === enter) {\n                _this.onFindNext();\n            }\n            else if (event.keyCode === esc) {\n                _this.onClose();\n            }\n        };\n        _this.onMatchCaseChecked = function (e) { return _this.setNextState({ matchCase: e.target.checked }); };\n        _this.onMatchWordChecked = function (e) { return _this.setNextState({ matchWord: e.target.checked }); };\n        _this.onMatchCyclicChecked = function (e) { return _this.setNextState({ matchCyclic: e.target.checked }); };\n        _this.onUseRegExpChecked = function (e) { return _this.setNextState({ useRegExp: e.target.checked }); };\n        _this.onSearchChange = function (e) { return _this.setNextState({ searchText: e.target.value }); };\n        _this.onReplaceChange = function (e) { return _this.setNextState({ replaceText: e.target.value }); };\n        _this.setNextState = function (next) {\n            var nextState = __assign({}, _this.state, next, { matches: undefined, nextMatch: undefined });\n            var view = _this.props.view;\n            if (nextState.searchText) {\n                var text = nextState.searchText, matchWord = nextState.matchWord, matchCase = nextState.matchCase, useRegExp = nextState.useRegExp, matchCyclic = nextState.matchCyclic;\n                var searchOptions = { text: text, matchWord: matchWord, matchCase: matchCase, useRegExp: useRegExp };\n                var selection_1 = view.state.selection;\n                var matches = findAll(view.state.doc, searchOptions);\n                var nextMatch = (!_this.state.searchText && matches[0]) ||\n                    matches.find(function (match) { return match.from >= selection_1.from; }) ||\n                    (matchCyclic && matches[0]) ||\n                    undefined;\n                _this.setState(__assign({}, nextState, { matches: matches,\n                    nextMatch: nextMatch }));\n            }\n            else {\n                _this.setState(nextState);\n            }\n        };\n        _this.state = {\n            selectedTab: 0,\n            searchText: selectedLineTextOnly(props.view.state),\n            replaceText: '',\n            matchCase: false,\n            matchWord: false,\n            matchCyclic: false,\n            useRegExp: false\n        };\n        return _this;\n    }\n    Object.defineProperty(FindAndReplaceDialog.prototype, \"settings\", {\n        get: function () {\n            return this.props.settings || settings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    FindAndReplaceDialog.prototype.componentDidUpdate = function (_, prevState) {\n        var view = this.props.view;\n        var _a = this.state, _b = _a.matches, matches = _b === void 0 ? [] : _b, nextMatch = _a.nextMatch;\n        if (prevState.nextMatch !== nextMatch) {\n            var state = view.state;\n            // highlight selection\n            var tr = state.tr;\n            var highlights_1 = [];\n            matches.forEach(function (m) {\n                highlights_1.push({\n                    from: m.from,\n                    to: m.to,\n                    attrs: {\n                        class: (nextMatch && m.eq(nextMatch)) ?\n                            'k-text-selected' :\n                            'k-text-highlighted'\n                    }\n                });\n            });\n            tr.setMeta(textHighlightKey, highlights_1);\n            tr.setSelection(nextMatch || TextSelection.create(state.doc, state.selection.from));\n            view.dispatch(tr);\n        }\n    };\n    /**\n     * @hidden\n     */\n    FindAndReplaceDialog.prototype.render = function () {\n        var localization = provideLocalizationService(this);\n        var _a = this.settings.messages, findReplaceDialogTitle = _a.findReplaceDialogTitle, findReplaceTabFind = _a.findReplaceTabFind, findReplaceTabReplace = _a.findReplaceTabReplace, findReplaceFindWhat = _a.findReplaceFindWhat, findReplaceReplaceWith = _a.findReplaceReplaceWith, findReplaceReplace = _a.findReplaceReplace, findReplaceReplaceAll = _a.findReplaceReplaceAll, findReplaceMatchCase = _a.findReplaceMatchCase, findReplaceMatchWord = _a.findReplaceMatchWord, findReplaceMatchCyclic = _a.findReplaceMatchCyclic, findReplaceUseRegExp = _a.findReplaceUseRegExp, findReplacePrevMatch = _a.findReplacePrevMatch, findReplaceNextMatch = _a.findReplaceNextMatch, findReplaceMatches = _a.findReplaceMatches;\n        var _b = this.state, matchCase = _b.matchCase, matchWord = _b.matchWord, matchCyclic = _b.matchCyclic, useRegExp = _b.useRegExp, searchText = _b.searchText, replaceText = _b.replaceText, nextMatch = _b.nextMatch;\n        var checkboxes = (React.createElement(\"div\", { className: \"k-search-options\" },\n            React.createElement(\"span\", null,\n                React.createElement(\"input\", __assign({}, checkboxProps, { id: \"match-case\", checked: matchCase, onChange: this.onMatchCaseChecked })),\n                React.createElement(\"label\", { htmlFor: \"match-case\", className: \"k-checkbox-label\" }, localization.toLanguageString(findReplaceMatchCase, messages[findReplaceMatchCase]))),\n            React.createElement(\"span\", null,\n                React.createElement(\"input\", __assign({}, checkboxProps, { id: \"match-whole\", checked: matchWord, onChange: this.onMatchWordChecked })),\n                React.createElement(\"label\", { htmlFor: \"match-whole\", className: \"k-checkbox-label\" }, localization.toLanguageString(findReplaceMatchWord, messages[findReplaceMatchWord]))),\n            React.createElement(\"span\", null,\n                React.createElement(\"input\", __assign({}, checkboxProps, { id: \"match-cyclic\", checked: matchCyclic, onChange: this.onMatchCyclicChecked })),\n                React.createElement(\"label\", { htmlFor: \"match-cyclic\", className: \"k-checkbox-label\" }, localization.toLanguageString(findReplaceMatchCyclic, messages[findReplaceMatchCyclic]))),\n            React.createElement(\"span\", null,\n                React.createElement(\"input\", __assign({}, checkboxProps, { id: \"regular-expression\", checked: useRegExp, onChange: this.onUseRegExpChecked })),\n                React.createElement(\"label\", { htmlFor: \"regular-expression\", className: \"k-checkbox-label\" }, localization.toLanguageString(findReplaceUseRegExp, messages[findReplaceUseRegExp])))));\n        var navigation = (React.createElement(\"div\", { className: \"k-matches-container\" },\n            React.createElement(\"button\", { className: \"k-button k-flat k-primary\", onClick: this.onFindPrev },\n                React.createElement(\"span\", { className: \"k-icon k-i-arrow-chevron-left\" }),\n                localization.toLanguageString(findReplacePrevMatch, messages[findReplacePrevMatch])),\n            React.createElement(\"span\", null, this.matchesMessage(localization.toLanguageString(findReplaceMatches, messages[findReplaceMatches]))),\n            React.createElement(\"button\", { className: \"k-button k-flat k-primary\", onClick: this.onFindNext },\n                localization.toLanguageString(findReplaceNextMatch, messages[findReplaceNextMatch]),\n                React.createElement(\"span\", { className: \"k-icon k-i-arrow-chevron-right\" }))));\n        var findWhat = (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"k-edit-label\" },\n                React.createElement(\"label\", { htmlFor: \"findWhat\" }, localization.toLanguageString(findReplaceFindWhat, messages[findReplaceFindWhat]))),\n            React.createElement(\"div\", { className: \"k-edit-field\" },\n                React.createElement(\"input\", { id: \"findWhat\", type: \"text\", className: \"k-textbox\", value: searchText, onChange: this.onSearchChange, onFocus: this.onSearchChange, onKeyDown: this.onKeyDown, autoFocus: true }))));\n        var replaceWith = (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: \"k-edit-label\" },\n                React.createElement(\"label\", { htmlFor: \"replaceWith\" }, localization.toLanguageString(findReplaceReplaceWith, messages[findReplaceReplaceWith]))),\n            React.createElement(\"div\", { className: \"k-edit-field\" },\n                React.createElement(\"input\", { id: \"replaceWith\", className: \"k-textbox\", type: \"text\", value: replaceText, onChange: this.onReplaceChange }))));\n        return ReactDOM.createPortal((React.createElement(Window, { title: localization.toLanguageString(findReplaceDialogTitle, messages[findReplaceDialogTitle]), onClose: this.onClose, style: { width: 'auto', height: 'auto', userSelect: 'none' }, resizable: false, minimizeButton: function () { return null; }, maximizeButton: function () { return null; } },\n            React.createElement(TabStrip, { selected: this.state.selectedTab, className: \"k-editor-find-replace\", onSelect: this.onTabSelect, animation: false },\n                React.createElement(TabStripTab, { title: localization.toLanguageString(findReplaceTabFind, messages[findReplaceTabFind]) },\n                    React.createElement(\"div\", { className: \"k-edit-form-container\" }, findWhat),\n                    checkboxes,\n                    navigation),\n                React.createElement(TabStripTab, { title: localization.toLanguageString(findReplaceTabReplace, messages[findReplaceTabReplace]) },\n                    React.createElement(\"div\", { className: \"k-edit-form-container\" },\n                        findWhat,\n                        replaceWith),\n                    React.createElement(\"div\", { className: \"k-action-buttons k-actions k-actions-end\" },\n                        React.createElement(\"button\", { className: \"k-button\", disabled: !Boolean(nextMatch), onClick: this.onReplace }, localization.toLanguageString(findReplaceReplace, messages[findReplaceReplace])),\n                        React.createElement(\"button\", { className: \"k-button\", disabled: !Boolean(nextMatch), onClick: this.onReplaceAll }, localization.toLanguageString(findReplaceReplaceAll, messages[findReplaceReplaceAll]))),\n                    checkboxes,\n                    navigation)))), document.body);\n    };\n    return FindAndReplaceDialog;\n}(React.Component));\nexport { FindAndReplaceDialog };\nregisterForLocalization(FindAndReplaceDialog);\n//# sourceMappingURL=FindReplace.js.map"]},"metadata":{},"sourceType":"module"}