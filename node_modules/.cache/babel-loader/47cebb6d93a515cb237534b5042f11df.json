{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\AddPatient.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nconst AddPatient = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sfirstname\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FIRSTNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FIRSTNAME\"\n    }),\n    value: props.selectedRecord[\"sfirstname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"slastname\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LASTNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LASTNAME\"\n    }),\n    value: props.selectedRecord[\"slastname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sfathername\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FATHERNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FATHERNAME\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"sfathername\"] !== \"null\" ? props.selectedRecord[\"sfathername\"] : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ngendercode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_GENDER\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.genderList,\n    value: props.selectedRecord[\"ngendercode\"],\n    isMandatory: true,\n    isClearable: true,\n    isMulti: false,\n    isSearchable: false,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'ngendercode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"ddob\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DATEOFBIRTH\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"ddob\"] || \"\",\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: false,\n    isMandatory: true,\n    required: true,\n    maxDate: props.currentTime,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"ddob\", date),\n    value: props.selectedRecord[\"ddob\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sage\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_AGE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_AGE\"\n    }),\n    value: props.selectedRecord[\"sage\"],\n    isMandatory: false,\n    required: true,\n    readOnly: true,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"saddress\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS\"\n    }),\n    value: props.selectedRecord[\"saddress\"],\n    rows: \"2\",\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ncitycode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CITY\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.cityList,\n    value: props.selectedRecord[\"ncitycode\"],\n    isMandatory: false,\n    required: false,\n    isClearable: true,\n    isMulti: false,\n    isSearchable: false,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'ncitycode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sdistrict\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DISTRICT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DISTRICT\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"sdistrict\"] !== \"null\" ? props.selectedRecord[\"sdistrict\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"spostalcode\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_POSTALCODE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_POSTALCODE\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"spostalcode\"] !== \"null\" ? props.selectedRecord[\"spostalcode\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 20,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ncountrycode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_COUNTRY\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.countryList,\n    value: props.selectedRecord[\"ncountrycode\"],\n    isMandatory: false,\n    required: false,\n    isClearable: true,\n    isMulti: false,\n    isSearchable: false,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'ncountrycode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sphoneno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"sphoneno\"] !== \"null\" ? props.selectedRecord[\"sphoneno\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 20,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"smobileno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MOBILENO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MOBILENO\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"smobileno\"] !== \"null\" ? props.selectedRecord[\"smobileno\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 20,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"semail\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_EMAIL\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_EMAIL\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"semail\"] !== \"null\" ? props.selectedRecord[\"semail\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"spassportno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PASSPORTNO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PASSPORTNO\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"spassportno\"] !== \"null\" ? props.selectedRecord[\"spassportno\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 50,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"srefid\",\n    label: props.intl.formatMessage({\n      id: \"IDS_REFERENCEID\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_REFERENCEID\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"srefid\"] !== \"null\" ? props.selectedRecord[\"srefid\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sexternalid\",\n    label: props.intl.formatMessage({\n      id: \"IDS_EXTERNALID\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_EXTERNALID\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"sexternalid\"] !== \"null\" ? props.selectedRecord[\"sexternalid\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 31\n    }\n  })));\n};\n\nexport default injectIntl(AddPatient);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/contactmaster/AddPatient.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","FormSelectSearch","DateTimePicker","AddPatient","props","intl","formatMessage","id","selectedRecord","event","onInputOnChange","genderList","onComboChange","userInfo","ssitedate","currentTime","date","handleDateChange","cityList","countryList"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\n\r\nconst AddPatient = (props) => {\r\n     return (\r\n          <Row>\r\n               <Col md={6}>\r\n                    {/* <Row>\r\n                         <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sfirstname\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_FIRSTNAME\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_FIRSTNAME\" })}\r\n                                   value={props.selectedRecord[\"sfirstname\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col> */}\r\n\r\n                         {/* <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"slastname\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_LASTNAME\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_LASTNAME\" })}\r\n                                   value={props.selectedRecord[\"slastname\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col> */}\r\n\r\n                         {/* <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sfathername\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_FATHERNAME\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_FATHERNAME\" })}\r\n                                   value={props.selectedRecord && props.selectedRecord[\"sfathername\"] !== \"null\" ? props.selectedRecord[\"sfathername\"] : \"\"}\r\n                                   isMandatory={false}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col> */}\r\n\r\n                         {/* <Col md={12}> */}\r\n                              <FormSelectSearch\r\n                                   name={\"ngendercode\"}\r\n                                   formLabel={props.intl.formatMessage({ id: \"IDS_GENDER\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                   options={props.genderList}\r\n                                   value={props.selectedRecord[\"ngendercode\"]}\r\n                                   isMandatory={true}\r\n                                   isClearable={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={false}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   onChange={(event) => props.onComboChange(event, 'ngendercode')}\r\n                              />\r\n                         {/* </Col> */}\r\n\r\n                         {/* <Col md={12}> */}\r\n                              <DateTimePicker\r\n                                   name={\"ddob\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_DATEOFBIRTH\" })}\r\n                                   className='form-control'\r\n                                   placeholderText=\"Select date..\"\r\n                                   selected={props.selectedRecord[\"ddob\"] || \"\"}\r\n                                   dateFormat={props.userInfo.ssitedate}\r\n                                   isClearable={false}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxDate={props.currentTime}\r\n                                   maxTime={props.currentTime}\r\n                                   onChange={date => props.handleDateChange(\"ddob\", date)}\r\n                                   value={props.selectedRecord[\"ddob\"]}\r\n\r\n                              />\r\n                         {/* </Col> */}\r\n\r\n                         {/* <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sage\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_AGE\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_AGE\" })}\r\n                                   value={props.selectedRecord[\"sage\"]}\r\n                                   isMandatory={false}\r\n                                   required={true}\r\n                                   readOnly\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col> */}\r\n\r\n\r\n                         {/* <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"saddress\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_ADDRESS\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_ADDRESS\" })}\r\n                                   value={props.selectedRecord[\"saddress\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col> */}\r\n                        \r\n\r\n                         {/* <Col md={12}> */}\r\n                              <FormSelectSearch\r\n                                   name={\"ncitycode\"}\r\n                                   formLabel={props.intl.formatMessage({ id: \"IDS_CITY\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                   options={props.cityList}\r\n                                   value={props.selectedRecord[\"ncitycode\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   isClearable={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={false}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   onChange={(event) => props.onComboChange(event, 'ncitycode')}\r\n                              />\r\n                         {/* </Col> */}\r\n\r\n                         {/* <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sdistrict\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_DISTRICT\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_DISTRICT\" })}\r\n                                   value={props.selectedRecord && props.selectedRecord[\"sdistrict\"] !== \"null\" ?props.selectedRecord[\"sdistrict\"]:\"\"}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={100}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                          {/* </Col> */}\r\n\r\n                         \r\n                         {/* <Col md={12}>\r\n                              <FormSelectSearch\r\n                                   name={\"npatientsitecode\"}\r\n                                   formLabel={props.intl.formatMessage({ id: \"IDS_PARENTSITE\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                   options={props.patientSiteList}\r\n                                   value={props.selectedRecord[\"npatientsitecode\"]}\r\n                                   isMandatory={false}\r\n                                   isClearable={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={false}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   onChange={(event) => props.onComboChange(event, 'npatientsitecode')}\r\n                              />\r\n                         </Col> */}\r\n\r\n                        \r\n\r\n\r\n                         \r\n\r\n                         {/* <Col md={12}>\r\n                              <FormInput\r\n                                   name={\"snationalid\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_NATIONALID\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_NATIONALID\" })}\r\n                                   value={props.selectedRecord[\"snationalid\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={100}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         </Col> */}\r\n                    {/* </Row> */}\r\n               </Col>\r\n\r\n\r\n               <Col md={6}>\r\n                    {/* <Row>\r\n\r\n                    <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"spostalcode\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_POSTALCODE\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_POSTALCODE\" })}\r\n                                   value={props.selectedRecord && props.selectedRecord[\"spostalcode\"] !== \"null\" ? props.selectedRecord[\"spostalcode\"] : \"\"}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={20}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                          {/* </Col>\r\n\r\n                          <Col md={12}> */}\r\n                              <FormSelectSearch\r\n                                   name={\"ncountrycode\"}\r\n                                   formLabel={props.intl.formatMessage({ id: \"IDS_COUNTRY\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                   options={props.countryList}\r\n                                   value={props.selectedRecord[\"ncountrycode\"]}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   isClearable={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={false}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   onChange={(event) => props.onComboChange(event, 'ncountrycode')}\r\n                              />\r\n                         {/* </Col>\r\n\r\n                         <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"sphoneno\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                                   value={props.selectedRecord && props.selectedRecord[\"sphoneno\"] !== \"null\" ? props.selectedRecord[\"sphoneno\"] :\"\"}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={20}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col>\r\n\r\n                         <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"smobileno\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_MOBILENO\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_MOBILENO\" })}\r\n                                   value={props.selectedRecord && props.selectedRecord[\"smobileno\"] !== \"null\" ? props.selectedRecord[\"smobileno\"] :\"\"}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={20}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col>\r\n\r\n                         <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"semail\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_EMAIL\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_EMAIL\" })}\r\n                                   value={props.selectedRecord && props.selectedRecord[\"semail\"] !== \"null\" ? props.selectedRecord[\"semail\"]:\"\"}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={100}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                          {/* </Col>\r\n\r\n                          <Col md={12}> */}\r\n                              <FormInput\r\n                                   name={\"spassportno\"}\r\n                                   type=\"text\"\r\n                                   label={props.intl.formatMessage({ id: \"IDS_PASSPORTNO\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_PASSPORTNO\" })}\r\n                                   value={props.selectedRecord && props.selectedRecord[\"spassportno\"] !== \"null\" ? props.selectedRecord[\"spassportno\"]:\"\"}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={50}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                          {/* </Col>\r\n\r\n\r\n                          <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"srefid\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_REFERENCEID\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_REFERENCEID\" })}\r\n                                   value={props.selectedRecord && props.selectedRecord[\"srefid\"] !== \"null\" ? props.selectedRecord[\"srefid\"] :\"\"}\r\n                                   rows=\"2\"\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col>\r\n\r\n\r\n                          \r\n                         \r\n                         <Col md={12}> */}\r\n                              <FormTextarea\r\n                                   name={\"sexternalid\"}\r\n                                   label={props.intl.formatMessage({ id: \"IDS_EXTERNALID\" })}\r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_EXTERNALID\" })}\r\n                                   value={props.selectedRecord && props.selectedRecord[\"sexternalid\"] !==\"null\" ? props.selectedRecord[\"sexternalid\"] :\"\"}\r\n                                   rows=\"2\"\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event) => props.onInputOnChange(event)}\r\n                              />\r\n                         {/* </Col>\r\n                    </Row> */}\r\n               </Col>\r\n          </Row>\r\n     )\r\n}\r\nexport default injectIntl(AddPatient);\r\n"]},"metadata":{},"sourceType":"module"}